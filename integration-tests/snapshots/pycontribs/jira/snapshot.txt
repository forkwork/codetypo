
Repository: pycontribs/jira
Url: "https://github.com/pycontribs/jira.git"
Args: ["**/*.*"]
Lines:
 Dictionary Error with (en_us) Error: ENOENT: no such file or directory, open './dictionaries/en_US/en_US.trie.gz'
 exit code: 1
-------------------------------------------
-------------------------------------------
AUTHORS.rst:10:11     - Unknown word (many)        -- - ... and many others.
AUTHORS.rst:10:16     - Unknown word (others)      -- - ... and many others.
AUTHORS.rst:12:1      - Unknown word (Thank)       -- Thank you!
AUTHORS.rst:1:14      - Unknown word (contributor) -- If you are a contributor, and you are not listed
AUTHORS.rst:1:43      - Unknown word (listed)      -- contributor, and you are not listed here, feel free to add
AUTHORS.rst:1:50      - Unknown word (here)        -- and you are not listed here, feel free to add your
AUTHORS.rst:1:56      - Unknown word (feel)        -- are not listed here, feel free to add your name
AUTHORS.rst:1:73      - Unknown word (your)        -- here, feel free to add your name via a pull request
AUTHORS.rst:3:21      - Unknown word (Contribs)    -- Development Team (PyContribs)
AUTHORS.rst:5:43      - Unknown word (Original)    -- speakmon@gmail.com> - Original Author
AUTHORS.rst:5:52      - Unknown word (Author)      -- gmail.com> - Original Author
AUTHORS.rst:5:7       - Unknown word (Speakmon)    -- - Ben Speakmon <ben.speakmon@gmail
AUTHORS.rst:6:3       - Unknown word (Sorin)       -- - Sorin Sbarnea <sorin.sbarnea
AUTHORS.rst:6:53      - Unknown word (Maintainer)  -- gmail.com> _ Current Maintainer
AUTHORS.rst:6:9       - Unknown word (Sbarnea)     -- - Sorin Sbarnea <sorin.sbarnea@gmail
CodeTypo: Files checked: 80, Issues found: 3934 in 66 files with 4 errors.
Dictionary Error with (en_us) Error: ENOENT: no such file or directory, open './dictionaries/en_US/en_US.trie.gz'
Dictionary Error with (filetypes) Error: ENOENT: no such file or directory, open './dictionaries/filetypes/filetypes.txt.gz'
Dictionary Error with (filetypes) Error: ENOENT: no such file or directory, open './dictionaries/filetypes/filetypes.txt.gz'
Dictionary Error with (html-symbol-entities) Error: ENOENT: no such file or directory, open './dictionaries/html-symbol-entities/entities.txt.gz'
Dictionary Error with (html-symbol-entities) Error: ENOENT: no such file or directory, open './dictionaries/html-symbol-entities/entities.txt.gz'
Dictionary Error with (public-licenses) Error: ENOENT: no such file or directory, open './dictionaries/public-licenses/public-licenses.txt.gz'
Dictionary Error with (public-licenses) Error: ENOENT: no such file or directory, open './dictionaries/public-licenses/public-licenses.txt.gz'
Errors:
MANIFEST.in:13:1      - Unknown word (recursive)  -- recursive-exclude * *.py[co]
MANIFEST.in:14:23     - Unknown word (pycache)    -- recursive-exclude * __pycache__
MANIFEST.in:7:1       - Unknown word (prune)      -- prune tests
README.rst:112:15    - Unknown word (interactions) -- When updating interactions with the Jira REST API
README.rst:112:85    - Unknown word (below)        -- to the documentation below. We aim to support both
README.rst:115:60    - Unknown word (former)       -- Jira Software Server`_ (former names include: Jira
README.rst:115:94    - Unknown word (Greenhopper)  -- include: Jira Agile, Greenhopper)
README.rst:126:1     - Unknown word (Credits)      -- Credits
README.rst:129:24    - Unknown word (contributors) -- addition to all the contributors we would like to thank
README.rst:129:4     - Unknown word (addition)     -- In addition to all the contributors
README.rst:129:54    - Unknown word (thank)        -- contributors we would like to thank to these companies:
README.rst:131:36    - Unknown word (powerful)     -- for developing such a powerful issue tracker and for
README.rst:131:67    - Unknown word (providing)    -- issue tracker and for providing a free on-demand Jira
README.rst:133:15    - Unknown word (hosting)      -- * GitHub_ for hosting our continuous integration
README.rst:134:3     - Unknown word (Navicat)      -- * Navicat_ for providing us free
README.rst:21:100    - Unknown word (years)      -- used in production for years.
README.rst:21:14     - Unknown word (eases)      -- This library eases the use of the Jira
README.rst:23:53     - Unknown word (maintained) -- project that is community maintained, do not be surprised
README.rst:23:75     - Unknown word (surprised)  -- maintained, do not be surprised if some bugs or features
README.rst:29:1      - Unknown word (Feeling)    -- Feeling impatient? I like your
README.rst:29:9      - Unknown word (impatient)  -- Feeling impatient? I like your style.
README.rst:2:13      - Unknown word (Library)    -- Jira Python Library
README.rst:40:51     - Unknown word (Mike)       -- reporter.displayName) # 'Mike Cannon-Brookes [Atlassian
README.rst:40:56     - Unknown word (Cannon)     -- displayName) # 'Mike Cannon-Brookes [Atlassian]
README.rst:40:63     - Unknown word (Brookes)    -- displayName) # 'Mike Cannon-Brookes [Atlassian]'
README.rst:49:41     - Unknown word (maybe)      -- your user directory. Or maybe you ARE using a virtualenv
README.rst:70:19     - Unknown word (place)      -- Development takes place on GitHub_ using the
README.rst:70:73     - Unknown word (Each)       -- default repository branch. Each
README.rst:71:12     - Unknown word (tagged)     -- version is tagged.
README.rst:73:1      - Unknown word (Setup)      -- Setup
README.rst:76:34     - Unknown word (developing) -- sync_'ed while you are developing
README.rst:84:1      - Unknown word (Follow)     -- Follow the instructions in
README.rst:84:12     - Unknown word (instructions) -- Follow the instructions in the `contributing
README.rst:84:46     - Unknown word (guide)        -- in the `contributing guide`_, which will describe
README.rst:85:33     - Unknown word (suitable)     -- automatically setup a suitable environment.
README.rst:87:1      - Unknown word (Manual)       -- Manual
README.rst:89:11     - Unknown word (pyenv)        -- * Install pyenv_ to install a suitable
README.rst:91:50     - Unknown word (addono)       -- 90:2990 --name jira addono/jira-software-standalone
README.rst:99:26     - Unknown word (TWINE)        -- Build and publish with TWINE
RELEASE.md:10:8      - Unknown word (Draft)       -- - [ ] [Draft a New Release](#drafting
RELEASE.md:11:8      - Unknown word (Publishing)  -- - [ ] [Publishing the Release](#publishing
RELEASE.md:14:4      - Unknown word (Drafting)    -- ## Drafting a New Release
RELEASE.md:16:147    - Unknown word (Drafter)     -- currently use the 'Release Drafter' GHA that auto populates
RELEASE.md:16:170    - Unknown word (populates)   -- Drafter' GHA that auto populates a draft release
RELEASE.md:16:182    - Unknown word (draft)       -- that auto populates a draft release
RELEASE.md:17:101    - Unknown word (PREFIXED)    -- of a tag that IS NOT PREFIXED with a `v` e.g. `1.
RELEASE.md:17:17     - Unknown word (Choose)      -- 2. Under the **"Choose a tag"**, make sure
RELEASE.md:19:110    - Unknown word (cases)       -- contributed. In some cases where maintainers take
RELEASE.md:19:116    - Unknown word (where)       -- contributed. In some cases where maintainers take over
RELEASE.md:19:171    - Unknown word (practice)    -- previous PR it is better practice to reference the name
RELEASE.md:19:218    - Unknown word (submitter)   -- name of the original submitter of the PR. e.g. The
RELEASE.md:19:248    - Unknown word (maintainer)  -- of the PR. e.g. The maintainer re-makes a PR based
RELEASE.md:19:308    - Unknown word (mention)     -- stale PR, the GHA would mention the maintainer by default
RELEASE.md:19:373    - Unknown word (originator)  -- created the PR, so the originator should be used.
RELEASE.md:19:89     - Unknown word (contributed) -- and the individual who contributed. In some cases where
RELEASE.md:1:3       - Unknown word (Documenting) -- # Documenting the Release Process
RELEASE.md:23:19     - Unknown word (Edit)        -- 1. Pressing the **Edit** button of the latest
RELEASE.md:23:4      - Unknown word (Pressing)    -- 1. Pressing the **Edit** button
RELEASE.md:23:65     - Unknown word (pressing)    -- latest draft release and pressing the **'Publish release
RELEASE.md:24:111    - Unknown word (specifically) -- are the maintainers specifically added here: https:/
RELEASE.md:24:318    - Unknown word (mentioned)    -- tag version convention mentioned earlier.
RELEASE.md:24:328    - Unknown word (earlier)      -- convention mentioned earlier.
RELEASE.md:24:40     - Unknown word (approver)    -- process will request an approver from the list of release
RELEASE.md:24:74     - Unknown word (approvers)   -- the list of release approvers. These are the maintainers
RELEASE.md:25:103    - Unknown word (uses)         -- our repository), this uses the relevant repository
RELEASE.md:25:4      - Unknown word (Finally)      -- 3. Finally this will automatically
RELEASE.md:5:15      - Unknown word (purpose)     -- The scope and purpose of these instructions
RELEASE.md:8:12      - Unknown word (checklist)   -- It forms a checklist of what needs to be
RELEASE.md:8:48      - Unknown word (together)    -- what needs to be done, together with sections for guidance
RELEASE.md:8:75      - Unknown word (guidance)    -- together with sections for guidance.
bindep.txt:1:10      - Unknown word (pypi)       -- # gssapi pypi wheel build needs:
bindep.txt:1:15      - Unknown word (wheel)      -- # gssapi pypi wheel build needs:
bindep.txt:1:27      - Unknown word (needs)      -- gssapi pypi wheel build needs:
bindep.txt:1:3       - Unknown word (gssapi)     -- # gssapi pypi wheel build needs
bindep.txt:2:1       - Unknown word (libkrb)     -- libkrb5-dev [platform:dpkg
bindep.txt:2:23      - Unknown word (dpkg)       -- libkrb5-dev [platform:dpkg]
codecov.yml:9:9       - Unknown word (threshold)  -- threshold: 0.50
constraints.txt:3:10      - Unknown word (following)  -- # by the following command:
docs/advanced.rst:10:11     - Unknown word (called)        -- the issue called "ABC-123" is a concept
docs/advanced.rst:10:33     - Unknown word (concept)       -- called "ABC-123" is a concept managed by Jira which
docs/advanced.rst:10:57     - Unknown word (which)         -- concept managed by Jira which can be viewed as a resource
docs/advanced.rst:10:70     - Unknown word (viewed)        -- by Jira which can be viewed as a resource obtainable
docs/advanced.rst:10:91     - Unknown word (obtainable)    -- viewed as a resource obtainable at the URL
docs/advanced.rst:11:67     - Unknown word (have)          -- 123*. All resources have a *self link*: a root
docs/advanced.rst:11:75     - Unknown word (self)          -- All resources have a *self link*: a root-level
docs/advanced.rst:12:37     - Unknown word (originated)    -- the URL the resource originated from. In jira-python
docs/advanced.rst:12:7      - Unknown word (contains)      -- which contains the URL the resource
docs/advanced.rst:13:16     - Unknown word (subclasses)    -- (or one of its subclasses) and can only be obtained
docs/advanced.rst:13:44     - Unknown word (obtained)      -- subclasses) and can only be obtained from the server using
docs/advanced.rst:13:69     - Unknown word (using)         -- obtained from the server using the ``find()`` method
docs/advanced.rst:13:81     - Unknown word (find)          -- the server using the ``find()`` method. Resources
docs/advanced.rst:14:100    - Unknown word (assignee)      -- Resource* through the ``assignee`` and
docs/advanced.rst:14:14     - Unknown word (other)         -- connected to other resources: the issue
docs/advanced.rst:14:86     - Unknown word (through)       -- to a user *Resource* through the ``assignee`` and
docs/advanced.rst:15:22     - Unknown word (while)         -- `reporter`` fields, while the project *Resource
docs/advanced.rst:15:3      - Unknown word (reporter)      -- ``reporter`` fields, while the
docs/advanced.rst:15:77     - Unknown word (lead)          -- connected to a project lead through another user
docs/advanced.rst:15:90     - Unknown word (another)       -- project lead through another user *Resource*.
docs/advanced.rst:17:4      - Unknown word (important)     -- .. important::
docs/advanced.rst:18:64     - Unknown word (preserves)     -- resources, and the client preserves this connection. In
docs/advanced.rst:18:74     - Unknown word (this)          -- the client preserves this connection. In the above
docs/advanced.rst:18:98     - Unknown word (above)         -- this connection. In the above example,
docs/advanced.rst:19:103    - Unknown word (full)          -- just a dict -- it is a full-fledged
docs/advanced.rst:19:108    - Unknown word (fledged)       -- dict -- it is a full-fledged
docs/advanced.rst:19:16     - Unknown word (inside)        -- the object inside the ``issue`` object
docs/advanced.rst:19:80     - Unknown word (just)          -- fields.assignee`` is not just a dict -- it is a full
docs/advanced.rst:20:102    - Unknown word (convert)       -- client will attempt to convert them
docs/advanced.rst:20:110    - Unknown word (them)          -- will attempt to convert them
docs/advanced.rst:20:29     - Unknown word (Whenever)      -- user *Resource* object. Whenever a resource contains
docs/advanced.rst:20:86     - Unknown word (will)          -- resources, the client will attempt to convert them
docs/advanced.rst:20:91     - Unknown word (attempt)       -- resources, the client will attempt to convert them
docs/advanced.rst:21:12     - Unknown word (proper)        -- to the proper subclass of *Resource
docs/advanced.rst:21:19     - Unknown word (subclass)      -- to the proper subclass of *Resource*.
docs/advanced.rst:23:111    - Unknown word (Their)         -- query from the REST API. Their
docs/advanced.rst:23:49     - Unknown word (returned)      -- collection of values returned by Jira in response
docs/advanced.rst:23:81     - Unknown word (some)          -- Jira in response to some query from the REST
docs/advanced.rst:24:1      - Unknown word (structure)     -- structure is freeform and modeled
docs/advanced.rst:24:14     - Unknown word (freeform)      -- structure is freeform and modeled as a Python
docs/advanced.rst:24:27     - Unknown word (modeled)       -- structure is freeform and modeled as a Python dict. Client
docs/advanced.rst:24:94     - Unknown word (calls)         -- return this structure for calls that do not
docs/advanced.rst:25:1      - Unknown word (produce)       -- produce resources. For example
docs/advanced.rst:26:17     - Unknown word (inform)        -- are designed to inform users what fields (and
docs/advanced.rst:26:30     - Unknown word (what)          -- designed to inform users what fields (and what values
docs/advanced.rst:26:5      - Unknown word (designed)      -- are designed to inform users what
docs/advanced.rst:26:63     - Unknown word (those)         -- and what values for those fields) are required
docs/advanced.rst:26:81     - Unknown word (required)      -- for those fields) are required to successfully create
docs/advanced.rst:26:93     - Unknown word (successfully)  -- fields) are required to successfully create
docs/advanced.rst:27:1      - Unknown word (issues)        -- issues in the server's projects
docs/advanced.rst:27:34     - Unknown word (Since)         -- the server's projects. Since these properties are
docs/advanced.rst:27:40     - Unknown word (these)         -- server's projects. Since these properties are determined
docs/advanced.rst:27:61     - Unknown word (determined)    -- these properties are determined by Jira's configuration
docs/advanced.rst:27:97     - Unknown word (they)          -- Jira's configuration, they are not resources.
docs/advanced.rst:29:36     - Unknown word (whether)       -- client's methods document whether they will return a
docs/advanced.rst:7:13      - Unknown word (distinguishes) -- The library distinguishes between two kinds of
docs/advanced.rst:7:27      - Unknown word (between)       -- library distinguishes between two kinds of data in
docs/advanced.rst:7:39      - Unknown word (kinds)         -- distinguishes between two kinds of data in the Jira
docs/advanced.rst:7:5       - Unknown word (library)    -- The library distinguishes between
docs/advanced.rst:9:104     - Unknown word (example)       -- the server owns; for example,
docs/advanced.rst:9:31      - Unknown word (that)          -- resource* is a REST entity that represents the current
docs/advanced.rst:9:36      - Unknown word (represents)    -- is a REST entity that represents the current state of
docs/advanced.rst:9:68      - Unknown word (something)     -- the current state of something that the server owns
docs/advanced.rst:9:94      - Unknown word (owns)          -- something that the server owns; for example,
docs/api.rst:10:4      - Unknown word (automodule)    -- .. automodule:: jira.client
docs/api.rst:12:5      - Unknown word (undoc)         -- :undoc-members:
docs/api.rst:13:10     - Unknown word (inheritance)   -- :show-inheritance:
docs/api.rst:1:5       - Unknown word (Documentation) -- API Documentation
docs/api.rst:23:6      - Unknown word (exceptions)    -- jira.exceptions module
docs/api.rst:31:6      - Unknown word (jirashell)     -- jira.jirashell module
docs/api.rst:39:6      - Unknown word (resilientsession) -- jira.resilientsession module
docs/api.rst:51:5      - Unknown word (annotation)       -- :annotation: = alias of TypeVar
docs/api.rst:51:52     - Unknown word (contravariant)    -- TypeVar(‘ResourceType’, contravariant=True, bound=jira.resources
docs/api.rst:51:66     - Unknown word (True)             -- ResourceType’, contravariant=True, bound=jira.resources
docs/api.rst:51:72     - Unknown word (bound)            -- contravariant=True, bound=jira.resources.Resource
docs/api.rst:59:4      - Unknown word (autoclass)        -- .. autoclass:: jira.resources.StatusCatego
docs/api.rst:64:31     - Unknown word (Agile)            -- autoclass:: jira.resources.AgileResource
docs/api.rst:74:31     - Unknown word (Board)            -- autoclass:: jira.resources.Board
docs/api.rst:7:13      - Unknown word (module)        -- jira.client module
docs/conf.py:104:29    - Unknown word (replacing)   -- are two options for replacing |today|: either, you
docs/conf.py:104:3     - Unknown word (There)       -- # There are two options for
docs/conf.py:104:48    - Unknown word (either)      -- for replacing |today|: either, you set today to some
docs/conf.py:10:60     - Unknown word (commented)  -- default; values that are commented out
docs/conf.py:111:30    - Unknown word (looking)     -- directories to ignore when looking for source files.
docs/conf.py:117:25    - Unknown word (appended)    -- If true, '()' will be appended to :func: etc. cross
docs/conf.py:118:16    - Unknown word (parentheses) -- # add_function_parentheses = True
docs/conf.py:121:8     - Unknown word (titles)      -- # unit titles (such as .. function
docs/conf.py:124:12    - Unknown word (sectionauthor) -- # If true, sectionauthor and moduleauthor directives
docs/conf.py:124:30    - Unknown word (moduleauthor)  -- true, sectionauthor and moduleauthor directives will be shown
docs/conf.py:126:8     - Unknown word (authors)       -- # show_authors = False
docs/conf.py:128:36    - Unknown word (highlighting)  -- the Pygments (syntax highlighting) style to use.
docs/conf.py:132:3     - Unknown word (modindex)      -- # modindex_common_prefix = []
docs/conf.py:138:21    - Unknown word (themes)        -- # a list of builtin themes.
docs/conf.py:141:54    - Unknown word (look)          -- specific and customize the look and feel of a theme
docs/conf.py:142:3     - Unknown word (further)       -- # further. For a list of options
docs/conf.py:153:27    - Unknown word (navigation)    -- shorter title for the navigation bar.  Default is the
docs/conf.py:153:5     - Unknown word (shorter)       -- # A shorter title for the navigation
docs/conf.py:15:69     - Unknown word (shown)      -- make it absolute, like shown here.
docs/conf.py:161:57    - Unknown word (being)         -- Windows icon file (.ico) being 16x16 or 32x32
docs/conf.py:162:3     - Unknown word (pixels)        -- # pixels large.
docs/conf.py:165:65    - Unknown word (sheets)        -- files (such as style sheets) here,
docs/conf.py:166:40    - Unknown word (copied)        -- directory. They are copied after the builtin static
docs/conf.py:167:38    - Unknown word (overwrite)     -- named "default.css" will overwrite the builtin "default
docs/conf.py:172:48    - Unknown word (inserted)      -- updated on:' timestamp is inserted at every page bottom
docs/conf.py:173:13    - Unknown word (given)         -- # using the given strftime format.
docs/conf.py:176:18    - Unknown word (Pants)         -- # If true, SmartyPants will be used to convert
docs/conf.py:176:59    - Unknown word (dashes)        -- to convert quotes and dashes to
docs/conf.py:177:19    - Unknown word (correct)         -- # typographically correct entities.
docs/conf.py:177:3     - Unknown word (typographically) -- # typographically correct entities.
docs/conf.py:178:12    - Unknown word (smartypants)     -- # html_use_smartypants = True
docs/conf.py:181:8     - Unknown word (sidebars)        -- # html_sidebars = {}
docs/conf.py:183:3     - Unknown word (Additional)      -- # Additional templates that should
docs/conf.py:185:8     - Unknown word (additional)      -- # html_additional_pages = {}
docs/conf.py:187:32    - Unknown word (generated)       -- no module index is generated.
docs/conf.py:193:36    - Unknown word (individual)      -- index is split into individual pages for each letter
docs/conf.py:197:11    - Unknown word (sourcelink)      -- html_show_sourcelink = True
docs/conf.py:206:24    - Unknown word (referring)       -- contain a <link> tag referring to it.  The value of
docs/conf.py:206:67    - Unknown word (must)            -- value of this option must be the
docs/conf.py:207:44    - Unknown word (served)          -- the finished HTML is served.
docs/conf.py:208:10    - Unknown word (opensearch)      -- html_use_opensearch = ""
docs/conf.py:210:55    - Unknown word (xhtml)           -- for HTML files (e.g. ".xhtml").
docs/conf.py:214:1     - Unknown word (htmlhelp)        -- htmlhelp_basename = "jirapythondoc
docs/conf.py:214:22    - Unknown word (jirapythondoc)   -- htmlhelp_basename = "jirapythondoc"
docs/conf.py:219:1     - Unknown word (latex)           -- latex_elements = {"papersize
docs/conf.py:219:20    - Unknown word (papersize)       -- latex_elements = {"papersize": "a4paper", "pointsize
docs/conf.py:219:44    - Unknown word (pointsize)       -- papersize": "a4paper", "pointsize": "10pt"}
docs/conf.py:221:56    - Unknown word (tuples)          -- LaTeX files. List of tuples
docs/conf.py:222:51    - Unknown word (documentclass)   -- name, title, author, documentclass [howto/manual]).
docs/conf.py:222:72    - Unknown word (manual)          -- documentclass [howto/manual]).
docs/conf.py:237:58    - Unknown word (headings)        -- true, then toplevel headings are parts,
docs/conf.py:238:7     - Unknown word (chapters)        -- # not chapters.
docs/conf.py:242:14    - Unknown word (pagerefs)        -- # latex_show_pagerefs = False
docs/conf.py:247:29    - Unknown word (appendix)        -- Documents to append as an appendix to all manuals.
docs/conf.py:247:45    - Unknown word (manuals)         -- as an appendix to all manuals.
docs/conf.py:248:9     - Unknown word (appendices)      -- # latex_appendices = []
docs/conf.py:25:59     - Unknown word (They)       -- names here, as strings. They can be extensions
docs/conf.py:265:18    - Unknown word (Napoleon)        -- # -- Options for Napoleon ------------------
docs/conf.py:268:37    - Unknown word (Explicitly)      -- docstring = False  # Explicitly prefer Google style
docs/conf.py:26:3      - Unknown word (coming)     -- # coming with Sphinx (named
docs/conf.py:26:60     - Unknown word (ones)       -- ext.*') or your custom ones.
docs/conf.py:270:14    - Unknown word (rtype)           -- napoleon_use_rtype = False  # False so
docs/conf.py:285:10    - Unknown word (Miscellaneous)   -- "Miscellaneous",
docs/conf.py:295:34    - Unknown word (footnote)        -- display URL addresses: 'footnote', 'no', or 'inline'
docs/conf.py:29:17     - Unknown word (intersphinx) -- "sphinx.ext.intersphinx",
docs/conf.py:30:17     - Unknown word (napoleon)    -- "sphinx.ext.napoleon",
docs/conf.py:31:17     - Unknown word (viewcode)    -- "sphinx.ext.viewcode",
docs/conf.py:33:13     - Unknown word (copybutton)  -- "sphinx_copybutton",
docs/conf.py:45:22     - Unknown word (bysource)    -- "member-order": "bysource",
docs/conf.py:51:17     - Unknown word (docstrings)  -- autodoc_inherit_docstrings = False
docs/conf.py:51:9      - Unknown word (inherit)     -- autodoc_inherit_docstrings = False
docs/conf.py:54:1      - Unknown word (nitpick)     -- nitpick_ignore = [
docs/conf.py:57:20     - Unknown word (recoverable) -- ("py:meth", "__recoverable"), # ResilientSession
docs/conf.py:57:38     - Unknown word (Resilient)   -- __recoverable"), # ResilientSession, not autogenerated
docs/conf.py:5:66      - Unknown word (containing) -- directory set to its containing dir.
docs/conf.py:67:28     - Unknown word (structures)  -- py:class", "requests.structures.CaseInsensitiveDict
docs/conf.py:67:43     - Unknown word (Insensitive) -- requests.structures.CaseInsensitiveDict"),
docs/conf.py:71:62     - Unknown word (happy)       -- TypeGuard"), # Py38 not happy with this typehint
docs/conf.py:71:78     - Unknown word (typehint)    -- not happy with this typehint
docs/conf.py:75:22     - Unknown word (contain)     -- Add any paths that contain templates here, relative
docs/conf.py:7:21      - Unknown word (possible)   -- # Note that not all possible configuration values
docs/conf.py:90:43     - Unknown word (documenting) -- for the project you're documenting, acts as replacement
docs/conf.py:90:56     - Unknown word (acts)        -- you're documenting, acts as replacement for
docs/conf.py:91:62     - Unknown word (throughout)  -- various other places throughout the
docs/conf.py:96:21     - Unknown word (including)   -- # The full version, including alpha/beta/rc tags.
docs/conf.py:96:37     - Unknown word (beta)        -- version, including alpha/beta/rc tags.
docs/conf.py:99:53     - Unknown word (Refer)       -- autogenerated by Sphinx. Refer to documentation
docs/contributing.rst:101:18    - Unknown word (PYTEST)        -- "PYTEST_TIMEOUT": "0", // Don
docs/contributing.rst:101:25    - Unknown word (TIMEOUT)       -- "PYTEST_TIMEOUT": "0", // Don't timeout
docs/contributing.rst:101:49    - Unknown word (timeout)       -- TIMEOUT": "0", // Don't timeout
docs/contributing.rst:105:49    - Unknown word (affects)       -- // running coverage affects breakpoints
docs/contributing.rst:10:30     - Unknown word (idea)          -- find a bug or have an idea for a useful feature
docs/contributing.rst:10:41     - Unknown word (useful)        -- or have an idea for a useful feature, file it at
docs/contributing.rst:113:1     - Unknown word (Issues)        -- Issues and Feature Requests
docs/contributing.rst:116:19    - Unknown word (there's)       -- * Check to see if there's an existing issue/pull
docs/contributing.rst:119:43    - Unknown word (please)        -- existing issue there, please file an issue.
docs/contributing.rst:119:6     - Unknown word (there)         -- * If there isn't an existing issue
docs/contributing.rst:121:28    - Unknown word (provided)      -- example template is provided for:
docs/contributing.rst:123:7     - Unknown word (Bugs)          -- * Bugs: https://github.com
docs/contributing.rst:126:48    - Unknown word (failing)       -- pull request with a (failing) test case demonstrating
docs/contributing.rst:126:67    - Unknown word (demonstrating) -- (failing) test case demonstrating
docs/contributing.rst:127:12    - Unknown word (wrong)         -- what's wrong. This makes the process
docs/contributing.rst:127:24    - Unknown word (makes)         -- what's wrong. This makes the process for fixing
docs/contributing.rst:127:46    - Unknown word (fixing)        -- makes the process for fixing bugs quicker & gets
docs/contributing.rst:127:5     - Unknown word (what's)        -- what's wrong. This makes the
docs/contributing.rst:127:53    - Unknown word (bugs)          -- the process for fixing bugs quicker & gets issues
docs/contributing.rst:127:58    - Unknown word (quicker)       -- process for fixing bugs quicker & gets issues
docs/contributing.rst:127:68    - Unknown word (gets)          -- fixing bugs quicker & gets issues
docs/contributing.rst:128:14    - Unknown word (sooner)        -- resolved sooner.
docs/contributing.rst:128:5     - Unknown word (resolved)      -- resolved sooner.
docs/contributing.rst:133:1     - Unknown word (Here)          -- Here are the best ways to
docs/contributing.rst:133:19    - Unknown word (ways)          -- Here are the best ways to help with open issues
docs/contributing.rst:133:27    - Unknown word (help)          -- are the best ways to help with open issues:
docs/contributing.rst:135:22    - Unknown word (reproduction)  -- For issues without reproduction steps
docs/contributing.rst:136:14    - Unknown word (reproduce)     -- * Try to reproduce the issue, comment with
docs/contributing.rst:136:52    - Unknown word (minimal)       -- issue, comment with the minimal amount of steps to
docs/contributing.rst:136:60    - Unknown word (amount)        -- comment with the minimal amount of steps to
docs/contributing.rst:137:33    - Unknown word (snippet)       -- reproduce the bug (a code snippet would be ideal).
docs/contributing.rst:137:41    - Unknown word (would)         -- bug (a code snippet would be ideal).
docs/contributing.rst:137:50    - Unknown word (ideal)         -- code snippet would be ideal).
docs/contributing.rst:138:50    - Unknown word (made)          -- of steps that can be made to reproduce the issue
docs/contributing.rst:139:10    - Unknown word (least)         -- at least make sure there are
docs/contributing.rst:139:21    - Unknown word (sure)          -- at least make sure there are debug logs
docs/contributing.rst:139:52    - Unknown word (capture)       -- are debug logs that capture the unexpected behavior
docs/contributing.rst:139:64    - Unknown word (unexpected)    -- logs that capture the unexpected behavior.
docs/contributing.rst:139:75    - Unknown word (behavior)      -- capture the unexpected behavior.
docs/contributing.rst:146:36    - Unknown word (needed)        -- key points that are needed to be met before a pull
docs/contributing.rst:146:53    - Unknown word (before)        -- are needed to be met before a pull request
docs/contributing.rst:147:8     - Unknown word (merged)        -- can be merged:
docs/contributing.rst:149:49    - Unknown word (Once)          -- all python versions. (Once the Test Framework is
docs/contributing.rst:149:63    - Unknown word (Framework)     -- versions. (Once the Test Framework is fixed)
docs/contributing.rst:14:1      - Unknown word (Discussion)    -- Discussion and support
docs/contributing.rst:150:23    - Unknown word (failures)      -- * For now, no new failures should occur
docs/contributing.rst:150:39    - Unknown word (occur)         -- new failures should occur
docs/contributing.rst:152:21    - Unknown word (require)       -- * All pull requests require tests that either test
docs/contributing.rst:153:66    - Unknown word (like)          -- requests for minor things like
docs/contributing.rst:154:3     - Unknown word (adding)        -- adding a new region or fixing
docs/contributing.rst:154:35    - Unknown word (typo)          -- new region or fixing a typo do not need tests.
docs/contributing.rst:154:47    - Unknown word (need)          -- fixing a typo do not need tests.
docs/contributing.rst:155:20    - Unknown word (conventions)   -- * Must follow PEP8 conventions.
docs/contributing.rst:155:3     - Unknown word (Must)          -- * Must follow PEP8 conventions
docs/contributing.rst:155:8     - Unknown word (follow)        -- * Must follow PEP8 conventions.
docs/contributing.rst:156:12    - Unknown word (major)         -- * Within a major version changes must
docs/contributing.rst:156:3     - Unknown word (Within)        -- * Within a major version changes
docs/contributing.rst:156:42    - Unknown word (backwards)     -- version changes must be backwards compatible.
docs/contributing.rst:159:1     - Unknown word (noting)        -- noting if any of these key
docs/contributing.rst:159:39    - Unknown word (missing)       -- these key points are missing, it will both help get
docs/contributing.rst:159:56    - Unknown word (both)          -- are missing, it will both help get feedback
docs/contributing.rst:160:15    - Unknown word (issuer)        -- sooner to the issuer of the pull request
docs/contributing.rst:160:54    - Unknown word (easier)        -- request and make it easier to determine for
docs/contributing.rst:160:64    - Unknown word (determine)     -- and make it easier to determine for
docs/contributing.rst:162:4     - Unknown word (ready)         -- is ready to be merged.
docs/contributing.rst:17:22     - Unknown word (wish)          -- We encourage all who wish to discuss by using
docs/contributing.rst:17:30     - Unknown word (discuss)       -- encourage all who wish to discuss by using https://community
docs/contributing.rst:17:4      - Unknown word (encourage)     -- We encourage all who wish to discuss
docs/contributing.rst:19:1      - Unknown word (Keep)          -- Keep in mind to use the jira
docs/contributing.rst:19:60     - Unknown word (question)      -- tag when you add a new question. This will
docs/contributing.rst:19:70     - Unknown word (This)          -- add a new question. This will
docs/contributing.rst:19:9      - Unknown word (mind)          -- Keep in mind to use the jira-python
docs/contributing.rst:20:1      - Unknown word (ensure)        -- ensure that the project maintainers
docs/contributing.rst:20:25     - Unknown word (maintainers)   -- ensure that the project maintainers will get notified about
docs/contributing.rst:20:46     - Unknown word (notified)      -- maintainers will get notified about your question
docs/contributing.rst:20:55     - Unknown word (about)         -- maintainers will get notified about your question.
docs/contributing.rst:26:11     - Unknown word (should)        -- * Patches should be:
docs/contributing.rst:27:7      - Unknown word (concise)       -- * concise
docs/contributing.rst:28:12     - Unknown word (across)        -- * work across all supported versions
docs/contributing.rst:29:19     - Unknown word (existing)      -- * follows the existing style of the code base
docs/contributing.rst:29:28     - Unknown word (style)         -- follows the existing style of the code base (PEP
docs/contributing.rst:29:7      - Unknown word (follows)       -- * follows the existing style of
docs/contributing.rst:2:1       - Unknown word (Contributing) -- Contributing
docs/contributing.rst:30:7      - Unknown word (included)      -- * included comments as required
docs/contributing.rst:32:3      - Unknown word (Great)         -- * Great Patch has:
docs/contributing.rst:33:24     - Unknown word (demonstrates)  -- * A test case that demonstrates the previous flaw that
docs/contributing.rst:33:41     - Unknown word (previous)      -- that demonstrates the previous flaw that now passes
docs/contributing.rst:33:50     - Unknown word (flaw)          -- demonstrates the previous flaw that now passes with
docs/contributing.rst:33:64     - Unknown word (passes)        -- previous flaw that now passes with the included patch
docs/contributing.rst:43:4      - Unknown word (utilise)       -- We utilise Docker in order to generate
docs/contributing.rst:45:17     - Unknown word (manually)      -- This can be run manually, or automated using
docs/contributing.rst:48:4      - Unknown word (Ensure)        -- #. Ensure you have Docker running
docs/contributing.rst:50:15     - Unknown word (installed)     -- extensions installed.
docs/contributing.rst:51:18     - Unknown word (able)          -- #. You should be able to do ``View >> Command
docs/contributing.rst:51:47     - Unknown word (Palette)       -- do ``View >> Command Palette`` (or equivalent) and
docs/contributing.rst:51:61     - Unknown word (equivalent)    -- Command Palette`` (or equivalent) and search for:
docs/contributing.rst:52:37     - Unknown word (Reopen)        -- containers: Rebuild and Reopen in container``.
docs/contributing.rst:55:1      - Unknown word (dictated)      -- dictated by ``.devcontainer\devcontain
docs/contributing.rst:59:45     - Unknown word (once)          -- tests will only run once the server is up and
docs/contributing.rst:59:6      - Unknown word (takes)         -- it takes a while! The tests will
docs/contributing.rst:59:71     - Unknown word (reachable)     -- the server is up and reachable on: http://localhost
docs/contributing.rst:65:1      - Unknown word (Using)         -- Using tox
docs/contributing.rst:67:17     - Unknown word (bash)          -- .. code-block:: bash
docs/contributing.rst:69:27     - Unknown word (pipx)          -- python -m pip install pipx
docs/contributing.rst:6:1       - Unknown word (Contributions) -- Contributions of any kind are welcome
docs/contributing.rst:6:22      - Unknown word (kind)          -- Contributions of any kind are welcome!
docs/contributing.rst:6:31      - Unknown word (welcome)       -- Contributions of any kind are welcome!
docs/contributing.rst:79:3      - Unknown word (Specify)       -- * Specify what tests to run with
docs/contributing.rst:79:34     - Unknown word (pytest)        -- what tests to run with pytest_
docs/contributing.rst:81:28     - Unknown word (allow)         -- `tox -e py310 -- -m allow_on_cloud`` (Run only
docs/contributing.rst:82:20     - Unknown word (breakpoints)   -- * Debug tests with breakpoints by disabling the coverage
docs/contributing.rst:82:35     - Unknown word (disabling)     -- with breakpoints by disabling the coverage plugin
docs/contributing.rst:82:88     - Unknown word (argument)      -- with the ``--no-cov`` argument.
docs/contributing.rst:83:7      - Unknown word (Example)       -- - Example for VSCode on Windows
docs/contributing.rst:88:22     - Unknown word (Pytest)        -- "name": "Pytest",
docs/contributing.rst:98:31     - Unknown word (FULL)          -- "CI_JIRA_USER_FULL_NAME": "Newly Created
docs/contributing.rst:98:44     - Unknown word (Newly)         -- JIRA_USER_FULL_NAME": "Newly Created CI User",
docs/examples.rst:109:102   - Unknown word (dance)          -- through the standard OAuth dance. For
docs/examples.rst:109:61    - Unknown word (ahead)          -- obtained and authorized ahead of time through the
docs/examples.rst:110:40    - Unknown word (perform)        -- use, ``jirashell`` can perform the dance with you if
docs/examples.rst:110:80    - Unknown word (already)        -- with you if you don't already have valid tokens.
docs/examples.rst:112:37    - Unknown word (uniquely)       -- token and token secret uniquely identify the user.
docs/examples.rst:112:46    - Unknown word (identify)       -- token secret uniquely identify the user.
docs/examples.rst:113:50    - Unknown word (configured)     -- match the OAuth provider configured on the Jira server.
docs/examples.rst:114:50    - Unknown word (matches)        -- the private key that matches the public key configured
docs/examples.rst:117:4     - Unknown word (configuring)    -- on configuring an OAuth provider for
docs/examples.rst:126:14    - Unknown word (referred)       -- This is also referred to as an API Token in
docs/examples.rst:126:9     - Unknown word (also)           -- This is also referred to as an API
docs/examples.rst:127:13    - Unknown word (documentation)  -- `Jira Cloud documentation <https://support.atlassian
docs/examples.rst:12:14     - Unknown word (shows)          -- This example shows how to work with Jira
docs/examples.rst:12:65     - Unknown word (formerly)       -- Agile / Jira Software (formerly GreenHopper):
docs/examples.rst:12:79     - Unknown word (Hopper)         -- Software (formerly GreenHopper):
docs/examples.rst:132:19    - Unknown word (incl)           -- Jira Self Hosted (incl. Jira Server/Data Center
docs/examples.rst:14:33     - Unknown word (agile)          -- literalinclude:: ../examples/agile.py
docs/examples.rst:151:81    - Unknown word (DISABLED)       -- mutual_authentication': 'DISABLED'})
docs/examples.rst:158:32    - Unknown word (internally)     -- can be provided to the internally used ``requests.Session
docs/examples.rst:159:121   - Unknown word (take)           -- provided header will take preference.
docs/examples.rst:159:13    - Unknown word (provides)       -- If the user provides a header that the :py
docs/examples.rst:159:74    - Unknown word (attempts)       -- jira.client.JIRA` also attempts to set, the user provided
docs/examples.rst:161:20    - Unknown word (want)           -- For example if you want to use a custom User
docs/examples.rst:163:19    - Unknown word (toolbelt)       -- from requests_toolbelt import user_agent
docs/examples.rst:177:15    - Unknown word (marshaled)      -- Issue JSON is marshaled automatically and used
docs/examples.rst:177:25    - Unknown word (automatically)  -- Issue JSON is marshaled automatically and used to augment
docs/examples.rst:177:51    - Unknown word (augment)        -- automatically and used to augment the returned Issue object
docs/examples.rst:183:54    - Unknown word (asking)         -- fields, save time by asking for them explicitly
docs/examples.rst:183:70    - Unknown word (explicitly)     -- time by asking for them explicitly::
docs/examples.rst:187:1     - Unknown word (Reassign)       -- Reassign an issue::
docs/examples.rst:189:50    - Unknown word (different)      -- permission, which is different from issue editing permission
docs/examples.rst:189:7     - Unknown word (requires)       -- # requires issue assign permission
docs/examples.rst:189:71    - Unknown word (editing)        -- different from issue editing permission!
docs/examples.rst:190:31    - Unknown word (newassignee)    -- assign_issue(issue, 'newassignee')
docs/examples.rst:196:1     - Unknown word (Creating)       -- Creating issues is easy::
docs/examples.rst:196:20    - Unknown word (easy)           -- Creating issues is easy::
docs/examples.rst:198:44    - Unknown word (PROJ)           -- create_issue(project='PROJ_key_or_id', summary
docs/examples.rst:199:48    - Unknown word (Look)           -- description='Look into this one', issuetype
docs/examples.rst:199:69    - Unknown word (issuetype)      -- Look into this one', issuetype={'name': 'Bug'})
docs/examples.rst:1:1       - Unknown word (Examples)   -- Examples
docs/examples.rst:20:1      - Unknown word (Initialization) -- Initialization
docs/examples.rst:211:26    - Unknown word (multiple)       -- can even bulk create multiple issues::
docs/examples.rst:211:9     - Unknown word (even)           -- You can even bulk create multiple
docs/examples.rst:222:21    - Unknown word (Second)         -- 'summary': 'Second issue',
docs/examples.rst:229:25    - Unknown word (Final)          -- 'description': 'Final issue of batch.',
docs/examples.rst:235:54    - Unknown word (always)         -- escription and issue type are always required when creating
docs/examples.rst:235:75    - Unknown word (creating)       -- always required when creating issues. Your Jira may
docs/examples.rst:235:92    - Unknown word (Your)           -- when creating issues. Your Jira may require
docs/examples.rst:236:59    - Unknown word (createmeta)     -- issues; see the ``jira.createmeta`` method for getting
docs/examples.rst:236:83    - Unknown word (getting)        -- createmeta`` method for getting access to that information
docs/examples.rst:239:32    - Unknown word (throw)          -- bulk create will not throw an exception for a failed
docs/examples.rst:239:41    - Unknown word (exception)      -- create will not throw an exception for a failed issue creation
docs/examples.rst:23:1      - Unknown word (Everything)     -- Everything goes through the :py
docs/examples.rst:23:12     - Unknown word (goes)           -- Everything goes through the :py:class
docs/examples.rst:240:35    - Unknown word (signature)      -- contain a possible error signature if that issue had invalid
docs/examples.rst:240:5     - Unknown word (each)           -- each contain a possible error
docs/examples.rst:240:63    - Unknown word (invalid)        -- signature if that issue had invalid fields. Successfully
docs/examples.rst:240:79    - Unknown word (Successfully)  -- had invalid fields. Successfully created issues will
docs/examples.rst:243:44    - Unknown word (keyword)       -- issue's fields with keyword arguments::
docs/examples.rst:243:52    - Unknown word (arguments)     -- fields with keyword arguments::
docs/examples.rst:245:72    - Unknown word (added)         -- escription='A new summary was added')
docs/examples.rst:246:54    - Unknown word (reassigning)   -- : 'new_user'})    # reassigning in update requires issue
docs/examples.rst:246:91    - Unknown word (edit)          -- update requires issue edit permission
docs/examples.rst:252:9     - Unknown word (suppress)      -- You can suppress notifications::
docs/examples.rst:254:25    - Unknown word (False)         -- issue.update(notify=False, description='A quiet
docs/examples.rst:254:47    - Unknown word (quiet)         -- False, description='A quiet description change was
docs/examples.rst:256:17    - Unknown word (done)          -- and when you're done with an issue, you can
docs/examples.rst:256:60    - Unknown word (great)         -- you can send it to the great hard drive in the sky
docs/examples.rst:256:66    - Unknown word (hard)          -- send it to the great hard drive in the sky::
docs/examples.rst:256:71    - Unknown word (drive)         -- it to the great hard drive in the sky::
docs/examples.rst:260:1     - Unknown word (Updating)      -- Updating components::
docs/examples.rst:267:14    - Unknown word (Rich)          -- Working with Rich Text
docs/examples.rst:270:13    - Unknown word (rich)          -- You can use rich text in an issue's descriptio
docs/examples.rst:270:92    - Unknown word (body)          -- to use rich text, the body
docs/examples.rst:271:21    - Unknown word (formatted)     -- content needs to be formatted using the Atlassian
docs/examples.rst:282:101   - Unknown word (venenatis)     -- elit. Pellentesque eget venenatis elit. Duis eu justo
docs/examples.rst:282:117   - Unknown word (Duis)          -- eget venenatis elit. Duis eu justo eget augue
docs/examples.rst:282:125   - Unknown word (justo)         -- venenatis elit. Duis eu justo eget augue iaculis fermentum
docs/examples.rst:282:136   - Unknown word (augue)         -- Duis eu justo eget augue iaculis fermentum. Sed
docs/examples.rst:282:142   - Unknown word (iaculis)       -- eu justo eget augue iaculis fermentum. Sed semper
docs/examples.rst:282:150   - Unknown word (fermentum)     -- justo eget augue iaculis fermentum. Sed semper quam laoreet
docs/examples.rst:282:165   - Unknown word (semper)        -- iaculis fermentum. Sed semper quam laoreet nisi egestas
docs/examples.rst:282:172   - Unknown word (quam)          -- fermentum. Sed semper quam laoreet nisi egestas
docs/examples.rst:282:177   - Unknown word (laoreet)       -- fermentum. Sed semper quam laoreet nisi egestas at posuere
docs/examples.rst:282:185   - Unknown word (nisi)          -- semper quam laoreet nisi egestas at posuere augue
docs/examples.rst:282:190   - Unknown word (egestas)       -- semper quam laoreet nisi egestas at posuere augue semper
docs/examples.rst:282:201   - Unknown word (posuere)       -- laoreet nisi egestas at posuere augue semper.",
docs/examples.rst:282:38    - Unknown word (dolor)         -- text": "Lorem ipsum dolor sit amet, consectetur
docs/examples.rst:282:48    - Unknown word (amet)          -- Lorem ipsum dolor sit amet, consectetur adipiscing
docs/examples.rst:282:54    - Unknown word (consectetur)   -- ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque
docs/examples.rst:282:66    - Unknown word (adipiscing)    -- sit amet, consectetur adipiscing elit. Pellentesque eget
docs/examples.rst:282:77    - Unknown word (elit)          -- consectetur adipiscing elit. Pellentesque eget venenatis
docs/examples.rst:282:83    - Unknown word (Pellentesque)  -- consectetur adipiscing elit. Pellentesque eget venenatis elit
docs/examples.rst:282:96    - Unknown word (eget)          -- adipiscing elit. Pellentesque eget venenatis elit. Duis
docs/examples.rst:294:13    - Unknown word (accessing)     -- Example for accessing the worklogs::
docs/examples.rst:294:27    - Unknown word (worklogs)      -- Example for accessing the worklogs::
docs/examples.rst:296:18    - Unknown word (worklog)       -- issue.fields.worklog.worklogs
docs/examples.rst:296:77    - Unknown word (Worklog)       -- # list of Worklog objects
docs/examples.rst:297:38    - Unknown word (author)        -- worklog.worklogs[0].author
docs/examples.rst:29:25     - Unknown word (started)        -- This connects to a Jira started on your local machine
docs/examples.rst:29:6      - Unknown word (connects)       -- This connects to a Jira started on
docs/examples.rst:29:96     - Unknown word (coincidentally) -- 990/jira, which not coincidentally is the
docs/examples.rst:303:42    - Unknown word (Spent)         -- worklog.worklogs[0].timeSpent
docs/examples.rst:304:47    - Unknown word (Seconds)       -- worklogs[0].timeSpentSeconds
docs/examples.rst:305:68    - Unknown word (dictionary)    -- updateAuthor # dictionary
docs/examples.rst:306:38    - Unknown word (updated)       -- worklog.worklogs[0].updated
docs/examples.rst:309:18    - Unknown word (timetracking)  -- issue.fields.timetracking.remainingEstimate
docs/examples.rst:309:31    - Unknown word (remaining)     -- fields.timetracking.remainingEstimate #
docs/examples.rst:309:68    - Unknown word (NULL)          -- ngEstimate # may be NULL or string ("0m", "2h
docs/examples.rst:309:76    - Unknown word (string)        -- # may be NULL or string ("0m", "2h"...)
docs/examples.rst:315:1     - Unknown word (Searching)     -- Searching
docs/examples.rst:318:1     - Unknown word (Leverage)      -- Leverage the power of `JQL <https
docs/examples.rst:319:4     - Unknown word (quickly)       -- to quickly find the issues you
docs/examples.rst:321:14    - Unknown word (returns)       -- # Search returns first 50 results, `maxResults
docs/examples.rst:321:68    - Unknown word (exceed)        -- maxResults` must be set to exceed this
docs/examples.rst:322:15    - Unknown word (proj)          -- issues_in_proj = jira.search_issues
docs/examples.rst:323:25    - Unknown word (mine)          -- all_proj_issues_but_mine = jira.search_issues
docs/examples.rst:325:45    - Unknown word (week)          -- due by the end of the week, ordered by priority
docs/examples.rst:325:51    - Unknown word (ordered)       -- the end of the week, ordered by priority
docs/examples.rst:326:75    - Unknown word (Week)          -- currentUser() and due < endOfWeek() order by priority
docs/examples.rst:326:8     - Unknown word (crap)          -- oh_crap = jira.search_issues
docs/examples.rst:328:30    - Unknown word (reported)      -- Summaries of my last 3 reported issues
docs/examples.rst:330:9     - Unknown word (print)         -- print('{}: {}'.format(issue
docs/examples.rst:341:1     - Unknown word (Obtain)        -- Obtain an individual comment
docs/examples.rst:341:37    - Unknown word (know)          -- individual comment if you know its ID::
docs/examples.rst:350:1     - Unknown word (Adding)        -- Adding, editing and deleting
docs/examples.rst:350:21    - Unknown word (deleting)      -- Adding, editing and deleting comments is similarly
docs/examples.rst:350:42    - Unknown word (similarly)     -- deleting comments is similarly straightforward::
docs/examples.rst:350:52    - Unknown word (straightforward) -- comments is similarly straightforward::
docs/examples.rst:353:117   - Unknown word (admins)          -- Administrators'}) # for admins only
docs/examples.rst:353:92    - Unknown word (Administrators)  -- : 'role', 'value': 'Administrators'}) # for admins only
docs/examples.rst:363:42    - Unknown word (findall)         -- comment = regex_for_png.findall(issue.fields.comment
docs/examples.rst:363:5     - Unknown word (pngs)            -- pngs_used_in_comment = regex
docs/examples.rst:369:1     - Unknown word (Transitions)     -- Transitions
docs/examples.rst:36:1      - Unknown word (Authentication) -- Authentication
docs/examples.rst:372:1     - Unknown word (Learn)           -- Learn what transitions are
docs/examples.rst:372:12    - Unknown word (transitions)     -- Learn what transitions are available on an
docs/examples.rst:379:43    - Unknown word (currently)       -- transitions available to the currently authenticated user will
docs/examples.rst:379:53    - Unknown word (authenticated)   -- available to the currently authenticated user will be returned
docs/examples.rst:396:1     - Unknown word (Also)            -- Also, just like issue objects
docs/examples.rst:396:52    - Unknown word (augmented)       -- project objects are augmented with their fields::
docs/examples.rst:396:67    - Unknown word (their)           -- objects are augmented with their fields::
docs/examples.rst:39:4      - Unknown word (initialization) -- At initialization time, jira-python can
docs/examples.rst:39:41     - Unknown word (optionally)     -- time, jira-python can optionally create an HTTP BASIC
docs/examples.rst:400:40    - Unknown word (John)            -- displayName) # 'John Doe [ACME Inc.]'
docs/examples.rst:400:50    - Unknown word (ACME)            -- displayName) # 'John Doe [ACME Inc.]'
docs/examples.rst:402:66    - Unknown word (assuming)        -- versions or roles either (assuming you have permission
docs/examples.rst:402:9     - Unknown word (trouble)         -- It's no trouble to get the components
docs/examples.rst:405:52    - Unknown word (Accessibility)   -- components] # 'Accessibility', 'Activity Stream'
docs/examples.rst:405:88    - Unknown word (Administration)  -- 'Activity Stream', 'Administration', etc.
docs/examples.rst:407:70    - Unknown word (Developers)      -- 'Administrators', 'Developers', etc.
docs/examples.rst:40:1      - Unknown word (authentication) -- authentication. These sessions will
docs/examples.rst:40:17     - Unknown word (These)          -- authentication. These sessions will apply
docs/examples.rst:40:50     - Unknown word (subsequent)     -- sessions will apply to all subsequent calls to the  :py:class
docs/examples.rst:410:22    - Unknown word (reversed)        -- [v.name for v in reversed(versions)] #
docs/examples.rst:412:1     - Unknown word (Watchers)        -- Watchers
docs/examples.rst:415:23    - Unknown word (represented)     -- Watchers are objects, represented by :class:`jira.resources
docs/examples.rst:417:20    - Unknown word (watchers)        -- watcher = jira.watchers(issue)
docs/examples.rst:417:5     - Unknown word (watcher)         -- watcher = jira.watchers(issue
docs/examples.rst:429:8     - Unknown word (course)          -- And of course you can remove users
docs/examples.rst:42:105    - Unknown word (keeping)        -- them there instead of keeping them in your source
docs/examples.rst:42:64     - Unknown word (netrc)          -- redentials from inside the ~/.netrc file, so put them there
docs/examples.rst:42:94     - Unknown word (instead)        -- file, so put them there instead of keeping them in your
docs/examples.rst:438:115   - Unknown word (representing)    -- like object or string, representing
docs/examples.rst:438:28    - Unknown word (itself)          -- you'll need the file itself that is going to be
docs/examples.rst:438:43    - Unknown word (going)           -- file itself that is going to be attachment. The
docs/examples.rst:438:76    - Unknown word (could)           -- attachment. The file could be a file-like object
docs/examples.rst:439:52    - Unknown word (final)           -- can also modify the final name of the attachment
docs/examples.rst:439:99    - Unknown word (original)        -- attachment if you don't like original.
docs/examples.rst:445:36    - Unknown word (binary)          -- upload a file (note binary mode for opening, it
docs/examples.rst:445:43    - Unknown word (mode)            -- a file (note binary mode for opening, it's important
docs/examples.rst:445:52    - Unknown word (opening)         -- note binary mode for opening, it's important):
docs/examples.rst:449:24    - Unknown word (memory)          -- # attach file from memory (you can skip IO operations
docs/examples.rst:449:40    - Unknown word (skip)            -- from memory (you can skip IO operations). In this
docs/examples.rst:449:78    - Unknown word (MUST)            -- operations). In this case you MUST provide `filename`.
docs/examples.rst:449:83    - Unknown word (provide)         -- In this case you MUST provide `filename`.
docs/examples.rst:450:20    - Unknown word (String)          -- from io import StringIO
docs/examples.rst:467:7     - Unknown word (Find)            -- # Find issues with attachments
docs/examples.rst:468:60    - Unknown word (EMPTY)           -- "attachments is not EMPTY", json_result=True,
docs/examples.rst:473:35    - Unknown word (found)           -- print("For issue {0}, found attach: '{1}' [{2}]
docs/examples.rst:48:102    - Unknown word (notice)         -- find the deprecation notice `here <https://developer
docs/examples.rst:48:41     - Unknown word (longer)         -- authentication is no longer supported on Jira Cloud
docs/examples.rst:48:90     - Unknown word (deprecation)    -- Cloud. You can find the deprecation notice `here <https
docs/examples.rst:4:1       - Unknown word (Here's)     -- Here's a quick usage example
docs/examples.rst:52:54     - Unknown word (constructor)    -- password) to the ``auth`` constructor argument::
docs/examples.rst:52:8      - Unknown word (tuple)          -- Pass a tuple of (username, password
docs/examples.rst:56:109    - Unknown word (successful)     -- the authentication is successful,
docs/examples.rst:56:35     - Unknown word (happens)        -- method, authentication happens during the initialization
docs/examples.rst:56:43     - Unknown word (during)         -- authentication happens during the initialization of
docs/examples.rst:57:107    - Unknown word (happen)         -- authentication will happen again transparently
docs/examples.rst:57:114    - Unknown word (again)          -- authentication will happen again transparently.
docs/examples.rst:57:120    - Unknown word (transparently)  -- hentication will happen again transparently.
docs/examples.rst:57:5      - Unknown word (retrieved)      -- the retrieved session cookie will
docs/examples.rst:57:63     - Unknown word (Upon)           -- in future requests. Upon cookie expiration, authentica
docs/examples.rst:57:75     - Unknown word (expiration)     -- requests. Upon cookie expiration, authentication will
docs/examples.rst:6:24      - Unknown word (examples)       -- literalinclude:: ../examples/basic_use.py
docs/examples.rst:6:4       - Unknown word (literalinclude) -- .. literalinclude:: ../examples/basic
docs/examples.rst:70:40     - Unknown word (Center)         -- Hosted Jira (Server, Data Center), consider the `Token
docs/examples.rst:70:49     - Unknown word (consider)       -- Server, Data Center), consider the `Token Auth`_ authenticat
docs/examples.rst:70:9      - Unknown word (Self)           -- For Self Hosted Jira (Server
docs/examples.rst:86:4      - Unknown word (seealso)        -- .. seealso::
docs/examples.rst:87:49     - Unknown word (refer)          -- Server, Data Center), refer to the `Token Auth`
docs/examples.rst:8:1       - Unknown word (Another)        -- Another example with methods
docs/examples.rst:96:21     - Unknown word (None)           -- key_cert_data = None
docs/extra/jira.xml:2:14      - Unknown word (latest)     -- <version>latest</version>
docs/index.rst:12:5      - Unknown word (contributing) -- contributing
docs/index.rst:15:94     - Unknown word (ease)         -- library designed to ease the use of the
docs/index.rst:16:16     - Unknown word (Some)         -- Jira REST API. Some basic support for the
docs/index.rst:16:84     - Unknown word (exists)       -- Software REST API also exists.
docs/index.rst:20:27     - Unknown word (Fjira)        -- feed://https%3A%2F%2Fjira.readthedocs.io%2Fen
docs/index.rst:20:54     - Unknown word (Flatest)      -- readthedocs.io%2Fen%2Flatest%2Fjira.xml>`_ format
docs/index.rst:20:7      - Unknown word (feed)         -- <dash-feed://https%3A%2F%2Fjira
docs/index.rst:22:15     - Unknown word (stored)       -- The source is stored at https://github.com
docs/index.rst:24:25     - Unknown word (notes)        -- release history and notes and can be found at
docs/index.rst:29:9      - Unknown word (genindex)     -- * :ref:`genindex`
docs/index.rst:5:4       - Unknown word (toctree)    -- .. toctree::
docs/index.rst:6:6       - Unknown word (numbered)   -- :numbered:
docs/index.rst:8:5       - Unknown word (installation) -- installation
docs/installation.rst:11:35     - Unknown word (standalone)   -- going to run the client standalone, we strongly recommend
docs/installation.rst:11:50     - Unknown word (strongly)     -- client standalone, we strongly recommend using a `virtualenv
docs/installation.rst:11:59     - Unknown word (recommend)    -- standalone, we strongly recommend using a `virtualenv
docs/installation.rst:11:78     - Unknown word (virtualenv)   -- strongly recommend using a `virtualenv <https://virtualenv
docs/installation.rst:15:15     - Unknown word (venv)         -- python -m venv jira_python
docs/installation.rst:1:1       - Unknown word (Installation) -- Installation
docs/installation.rst:26:1      - Unknown word (Doing)        -- Doing this creates a private
docs/installation.rst:26:106    - Unknown word (putting)      -- degrade or break without putting
docs/installation.rst:26:12     - Unknown word (creates)      -- Doing this creates a private Python "installatio
docs/installation.rst:26:65     - Unknown word (freely)       -- installation" that you can freely upgrade, degrade or
docs/installation.rst:26:81     - Unknown word (degrade)      -- can freely upgrade, degrade or break without putting
docs/installation.rst:26:92     - Unknown word (break)        -- upgrade, degrade or break without putting
docs/installation.rst:39:115    - Unknown word (Usually)      -- handles the HTTP business. Usually, the latest version
docs/installation.rst:39:179    - Unknown word (minimum)      -- time of release is the minimum version required; at
docs/installation.rst:39:213    - Unknown word (writing)      -- version required; at this writing, that version is 1.
docs/installation.rst:39:88     - Unknown word (handles)      -- requests/>`_ library handles the HTTP business. Usually
docs/installation.rst:42:101    - Unknown word (fancy)        -- org>`_ provides the fancy chrome used by :ref
docs/installation.rst:42:107    - Unknown word (chrome)       -- provides the fancy chrome used by :ref:`jirashell
docs/installation.rst:42:12     - Unknown word (ipython)      -- - :py:mod:`ipython` - The `IPython enhanced
docs/installation.rst:42:52     - Unknown word (interpreter)  -- IPython enhanced Python interpreter <https://ipython.org
docs/installation.rst:43:12     - Unknown word (filemagic)    -- - :py:mod:`filemagic` - This library handles
docs/installation.rst:43:150    - Unknown word (libmagic)      -- system that provides libmagic; Mac and Unix will almost
docs/installation.rst:43:178    - Unknown word (almost)        -- libmagic; Mac and Unix will almost always have it preinstalled
docs/installation.rst:43:270    - Unknown word (natively)      -- Cygwin or compile it natively. If your system doesn
docs/installation.rst:43:295    - Unknown word (doesn't)       -- natively. If your system doesn't have libmagic, you'll
docs/installation.rst:43:342    - Unknown word (specify)       -- ll have to manually specify the ``contentType``
docs/installation.rst:43:418    - Unknown word (such)          -- take an image object, such as project and user
docs/installation.rst:43:443    - Unknown word (avatar)        -- as project and user avatar creation.
docs/installation.rst:43:59     - Unknown word (autodetection) -- handles content-type autodetection for things like image
docs/installation.rst:45:1      - Unknown word (Installing)    -- Installing through :py:mod:`pip
docs/installation.rst:45:40     - Unknown word (care)          -- :py:mod:`pip` takes care of these dependencies
docs/installation.rst:4:5       - Unknown word (easiest)      -- The easiest (and best) way to install
docs/installation.rst:8:11      - Unknown word (handle)       -- This will handle installation of the
docs/installation.rst:8:67      - Unknown word (requirements) -- itself as well as the requirements. The `[cli]` part installs
docs/installation.rst:8:98      - Unknown word (installs)     -- equirements. The `[cli]` part installs
docs/installation.rst:9:53      - Unknown word (omitted)      -- binary, and may be omitted if you just need the
docs/jirashell.rst:19:49     - Unknown word (Press)       -- client is in 'jira'. Press Ctrl-D to exit.
docs/jirashell.rst:23:11     - Unknown word (specialized) -- This is a specialized Python interpreter
docs/jirashell.rst:23:43     - Unknown word (built)       -- Python interpreter (built on IPython) that lets
docs/jirashell.rst:23:66     - Unknown word (lets)        -- built on IPython) that lets you explore Jira as
docs/jirashell.rst:24:16     - Unknown word (acceptable)  -- Python code is acceptable input. The shell builds
docs/jirashell.rst:41:11     - Unknown word (expand)      -- issue.expand issue.find    issue
docs/jirashell.rst:44:18     - Unknown word (aggregateprogress) -- issue.fields.aggregateprogress issue.fields
docs/jirashell.rst:44:62     - Unknown word (customfield)       -- issue.fields.customfield_11531
docs/jirashell.rst:45:18     - Unknown word (aggregatetimeestimate) -- issue.fields.aggregatetimeestimate issue.fields
docs/jirashell.rst:46:18     - Unknown word (aggregatetimeoriginalestimate) -- issue.fields.aggregatetimeoriginalestimate issue.fields.customfield
docs/jirashell.rst:47:18     - Unknown word (aggregatetimespent)            -- issue.fields.aggregatetimespent issue.fields
docs/jirashell.rst:4:106     - Unknown word (poke)       -- package is to explore it, poke at
docs/jirashell.rst:4:13      - Unknown word (substitute) -- There is no substitute for play. The only way
docs/jirashell.rst:4:28      - Unknown word (play)       -- is no substitute for play. The only way to really
docs/jirashell.rst:4:50      - Unknown word (really)     -- play. The only way to really know a service, API
docs/jirashell.rst:4:94      - Unknown word (explore)    -- API or package is to explore it, poke at
docs/jirashell.rst:52:62     - Unknown word (issuelinks)                    -- issue.fields.issuelinks
docs/jirashell.rst:5:19      - Unknown word (elbows)     -- it, and bang your elbows -- trial and error.
docs/jirashell.rst:5:29      - Unknown word (trial)      -- bang your elbows -- trial and error. A REST design
docs/jirashell.rst:5:63      - Unknown word (especially) -- error. A REST design is especially well-suited for active
docs/jirashell.rst:5:79      - Unknown word (suited)     -- design is especially well-suited for active exploration
docs/jirashell.rst:5:9       - Unknown word (bang)       -- it, and bang your elbows -- trial
docs/jirashell.rst:5:97      - Unknown word (exploration) -- well-suited for active exploration, and the
docs/jirashell.rst:60:62     - Unknown word (resolutiondate)                -- issue.fields.resolutiondate
docs/jirashell.rst:62:62     - Unknown word (subtasks)                      -- issue.fields.subtasks
docs/jirashell.rst:64:62     - Unknown word (timeestimate)                  -- issue.fields.timeestimate
docs/jirashell.rst:65:62     - Unknown word (timeoriginalestimate)          -- issue.fields.timeoriginalestimate
docs/jirashell.rst:66:62     - Unknown word (timespent)                     -- issue.fields.timespent
docs/jirashell.rst:6:92      - Unknown word (exactly)     -- designed to help you do exactly that.
docs/jirashell.rst:70:62     - Unknown word (watches)                       -- issue.fields.watches
docs/jirashell.rst:71:62     - Unknown word (workratio)                     -- issue.fields.workratio
docs/jirashell.rst:73:28     - Unknown word (maps)                          -- the *Resource* class maps the server's JSON response
docs/jirashell.rst:73:60     - Unknown word (directly)                      -- server's JSON response directly into a Python object
examples/agile.py:12:11     - Unknown word (boards)     -- # Get all boards viewable by anonymous
examples/agile.py:12:18     - Unknown word (viewable)   -- # Get all boards viewable by anonymous users.
examples/agile.py:15:11     - Unknown word (sprints)    -- # Get the sprints in a specific board
examples/agile.py:15:33     - Unknown word (board)      -- sprints in a specific board
examples/agile.py:2:3       - Unknown word (against)    -- # against jira.atlassian.com.
examples/auth.py:13:70     - Unknown word (recommended) -- password tuple [Not recommended]
examples/auth.py:20:1      - Unknown word (myself)      -- myself = jira.myself()
examples/auth.py:23:15     - Unknown word (administrators) -- # jira-system-administrators permission)
examples/auth.py:24:1      - Unknown word (props)          -- props = jira.application_properties
examples/basic_use.py:16:67     - Unknown word (fourth)     -- the second, third, and fourth keys.
examples/basic_use.py:21:29     - Unknown word (Atlassians) -- all comments made by Atlassians on this issue.
examples/basic_use.py:37:41     - Unknown word (Quiet)      -- False, description="Quiet summary update.")
examples/basic_use.py:39:22     - Unknown word (entire)     -- You can update the entire labels field like this
examples/basic_use.py:47:18     - Unknown word (away)       -- # Send the issue away for good.
examples/basic_use.py:50:3      - Unknown word (Linking)    -- # Linking a remote jira issue
examples/basic_use.py:50:38     - Unknown word (applinks)   -- remote jira issue (needs applinks to be configured to
examples/maintenance.py:35:19     - Unknown word (Deleting)   -- logging.info("Deleting project %s", p)
examples/maintenance.py:3:50      - Unknown word (removing)   -- your jira instance by removing all projects and
examples/maintenance.py:58:12     - Unknown word (projectcategories) -- for s in j.projectcategories():
examples/maintenance.py:65:12     - Unknown word (avatars)           -- for s in j.avatars("project"):
examples/maintenance.py:66:19     - Unknown word (Avatar)            -- logging.info("Avatar project: %s", s)
examples/maintenance.py:79:12     - Unknown word (notificationschemes) -- for s in j.notificationschemes():
examples/maintenance.py:82:8      - Unknown word (ssbarnea)            -- # TODO(ssbarnea): "Default Issue Security
jira/client.py:1029:66   - Unknown word (applicationlink) -- rest/applinks/latest/applicationlink'
jira/client.py:1071:78   - Unknown word (expects)         -- validate the attachment; it expects a file-like object to
jira/client.py:1072:27   - Unknown word (responsible)     -- The user is still responsible for tidying up (e.g
jira/client.py:1072:43   - Unknown word (tidying)         -- still responsible for tidying up (e.g., closing the
jira/client.py:1072:79   - Unknown word (killing)         -- , closing the file, killing the socket, etc.)
jira/client.py:1078:22   - Unknown word (acquired)        -- If you acquired the file-like object
jira/client.py:1091:49   - Unknown word (opened)          -- attachment.name} was not opened in 'rb' mode, attaching
jira/client.py:1091:70   - Unknown word (attaching)       -- opened in 'rb' mode, attaching file may fail."
jira/client.py:1098:22   - Unknown word (multipartencoded) -- def generate_multipartencoded_request_args() -> (
jira/client.py:1104:69   - Unknown word (octet)            -- attachment_io, "application/octet-stream")}
jira/client.py:1114:15   - Unknown word (Retryable)        -- class RetryableMultipartEncoder(PrepareReques
jira/client.py:111:10    - Unknown word (convenience)  -- """A convenience decorator to check if
jira/client.py:1138:31   - Unknown word (Unable)           -- raise JIRAError(f"Unable to parse JSON: {js}
jira/client.py:113:38    - Unknown word (talking)      -- the client instance is talking to Cloud Jira. If it
jira/client.py:1179:11   - Unknown word (Assignee)         -- isAssigneeTypeValid=False,
jira/client.py:1188:60   - Unknown word (Bean)             -- ): see the ComponentBean.AssigneeType class for
jira/client.py:1189:46   - Unknown word (specifies)        -- ssigneeTypeValid (bool): True specifies whether the assignee
jira/client.py:120:5     - Unknown word (Returns)      -- Returns:
jira/client.py:121:7     - Unknown word (Either)       -- Either the result of the wrapped
jira/client.py:1256:45   - Unknown word (favourite)        -- Optional[str]): either "favourite" or "my", the type of
jira/client.py:1285:19   - Unknown word (gadgets)          -- dashboard.gadgets.extend(self.dashboard
jira/client.py:1301:42   - Unknown word (Useful)           -- description (Optional[str]): Useful human-readable description
jira/client.py:1301:49   - Unknown word (human)            -- Optional[str]): Useful human-readable description
jira/client.py:1303:17   - Unknown word (though)           -- though can be an empty list
jira/client.py:132:22    - Unknown word (Avoiding)     -- # reference. Avoiding magic numbers here.
jira/client.py:1365:44   - Unknown word (minutes)          -- dashboard_automatic_refresh_minutes(
jira/client.py:1368:41   - Unknown word (interval)         -- the automatic refresh interval of a dashboard.
jira/client.py:1372:30   - Unknown word (frequency)        -- minutes (int): The frequency of the dashboard automatic
jira/client.py:1377:31   - Unknown word (milliseconds)     -- The payload expects milliseconds, we are doing a conversion
jira/client.py:1377:52   - Unknown word (doing)            -- milliseconds, we are doing a conversion
jira/client.py:1378:34   - Unknown word (Additionally)     -- here as a convenience. Additionally, if the value is `0
jira/client.py:1380:32   - Unknown word (wants)            -- expected if the user wants to turn it off.
jira/client.py:1380:41   - Unknown word (turn)             -- if the user wants to turn it off.
jira/client.py:1391:47   - Unknown word (gadget's)         -- ResultList of a Dashboard gadget's property keys.
jira/client.py:1414:42   - Unknown word (gadget)           -- key (str): KEY of the gadget property.
jira/client.py:141:19    - Unknown word (functionality) -- "This functionality is not available on
jira/client.py:148:5     - Unknown word (experimental)  -- def experimental_atlassian_api(client
jira/client.py:1500:67   - Unknown word (blue)             -- gadget, should be one of: blue, red, yellow,
jira/client.py:1500:78   - Unknown word (yellow)           -- be one of: blue, red, yellow,
jira/client.py:1501:22   - Unknown word (cyan)             -- green, cyan, purple, gray, or white
jira/client.py:1501:28   - Unknown word (purple)           -- green, cyan, purple, gray, or white.
jira/client.py:1501:36   - Unknown word (gray)             -- green, cyan, purple, gray, or white.
jira/client.py:1502:56   - Unknown word (Whether)          -- key_validation (bool): Whether to ignore the
jira/client.py:1505:62   - Unknown word (Mutually)         -- to use in the gadget. Mutually exclusive with
jira/client.py:1505:71   - Unknown word (exclusive)        -- the gadget. Mutually exclusive with
jira/client.py:151:24    - Unknown word (covered)       -- Indicates the path covered by the client method
jira/client.py:151:5     - Unknown word (Indicates)     -- Indicates the path covered by
jira/client.py:152:30    - Unknown word (becomes)       -- disappears or the method becomes disallowed, this logs
jira/client.py:152:5     - Unknown word (disappears)    -- disappears or the method becomes
jira/client.py:153:56    - Unknown word (reraises)      -- exception is raised, this reraises.
jira/client.py:1557:57   - Unknown word (favourites)       -- Resources which are the favourites of the currently authenticate
jira/client.py:1581:42   - Unknown word (defines)          -- : query string that defines the filter
jira/client.py:1582:46   - Unknown word (adds)             -- Optional[bool]): True adds this filter to the current
jira/client.py:1582:85   - Unknown word (favorites)        -- to the current user's favorites (Default: ``None``)
jira/client.py:1623:20   - Unknown word (omits)            -- # Jira omits .description if created
jira/client.py:1662:59   - Unknown word (criteria)         -- matching the specified criteria.
jira/client.py:1680:45   - Unknown word (picker)           -- self._get_json("groups/picker", params=params)["groups
jira/client.py:1713:23   - Unknown word (likely)           -- # 'id' is likely available only in older
jira/client.py:176:23    - Unknown word (Functionality) -- f"Functionality at path {response.url
jira/client.py:1795:16   - Unknown word (allows)           -- # this allows us to pass Issue objects
jira/client.py:1819:47   - Unknown word (predefined)       -- argument (other than the predefined ones) is treated as
jira/client.py:1819:67   - Unknown word (treated)          -- predefined ones) is treated as a field name and
jira/client.py:1822:37   - Unknown word (immediately)      -- default, the client will immediately reload the issue Resource
jira/client.py:1827:9    - Unknown word (Further)          -- Further examples are available
jira/client.py:1831:35   - Unknown word (reloads)          -- prefetch (bool): True reloads the created issue Resource
jira/client.py:187:23    - Unknown word (converts)      -- """Decorator that converts Issue and Project resources
jira/client.py:1908:11   - Unknown word (Catching)         -- # Catching case where none of the
jira/client.py:190:42    - Unknown word (decorate)      -- Callable): the function to decorate
jira/client.py:1945:26   - Unknown word (desk)             -- def supports_service_desk(self):
jira/client.py:1952:23   - Unknown word (Experimental)     -- headers = {"X-ExperimentalApi": "opt-in"}
jira/client.py:1983:17   - Unknown word (desks)            -- def service_desks(self) -> list[ServiceDesk
jira/client.py:1999:26   - Unknown word (Desk)             -- """Get a Service Desk Resource from the server
jira/client.py:2091:22   - Unknown word (introduced)       -- This API was introduced in JIRA Server / DC
jira/client.py:2105:82   - Unknown word (releases)         -- be removed in future releases."
jira/client.py:2119:20   - Unknown word (fieldtypes)       -- def createmeta_fieldtypes(
jira/client.py:2168:67   - Unknown word (filtered)         -- create issues, optionally filtered by projects and issue
jira/client.py:2172:48   - Unknown word (delimited)        -- single value or a comma-delimited string. May be combined
jira/client.py:2172:73   - Unknown word (combined)         -- delimited string. May be combined with projectIds.
jira/client.py:2214:38   - Unknown word (depending)        -- the unique identifier depending on the deployment type
jira/client.py:2228:32   - Unknown word (translating)      -- Internal method for translating a user search (str)
jira/client.py:2230:28   - Unknown word (unchanged)        -- Return None and -1 unchanged.
jira/client.py:2232:126  - Unknown word (extracts)         -- get_user_identifier` extracts
jira/client.py:2233:13   - Unknown word (relevant)         -- the relevant identifier property
jira/client.py:2236:113  - Unknown word (Unassigned)       -- are equivalent to 'Unassigned'.
jira/client.py:2236:60   - Unknown word (finding)          -- search term used for finding a user. None, '-1' and
jira/client.py:2272:82   - Unknown word (unassigned)       -- None will set it to unassigned. -1 will set it to Automatic
jira/client.py:2336:67   - Unknown word (viewing)          -- (or group) to which viewing of this comment will
jira/client.py:2336:99   - Unknown word (restricted)       -- this comment will be restricted.
jira/client.py:237:23    - Unknown word (official)      -- see `The official API docs <https://developer
jira/client.py:2399:55   - Unknown word (prevents)        -- resource_args because it prevents us from finding
jira/client.py:2407:9    - Unknown word (relationship)    -- relationship: str | None = None,
jira/client.py:2413:32   - Unknown word (allowable)       -- For definitions of the allowable fields for ``destination
jira/client.py:2432:77   - Unknown word (anyway)          -- to add remote links anyway,
jira/client.py:2433:43   - Unknown word (quite)           -- won't be able to be quite as helpful.
jira/client.py:2433:52   - Unknown word (helpful)         -- able to be quite as helpful.
jira/client.py:2466:29   - Unknown word (comes)           -- # check if the link comes from one of the configured
jira/client.py:2489:102  - Unknown word (presuming)       -- a simple object and presuming all fields are correct
jira/client.py:2489:14   - Unknown word (avoids)          -- This avoids the admin access problems
jira/client.py:2490:17   - Unknown word (requiring)       -- and not requiring more complex ``application
jira/client.py:2533:14   - Unknown word (transitionid)    -- def find_transitionid_by_name(
jira/client.py:2566:12   - Unknown word (Perform)         -- """Perform a transition on an issue
jira/client.py:2575:81   - Unknown word (performing)      -- comment to the issue when performing the transition.
jira/client.py:2576:60   - Unknown word (spent)           -- String to add as time spent on the issue when performing
jira/client.py:264:41    - Unknown word (returning)     -- error we ignore is about returning a contravariant type
jira/client.py:2810:52   - Unknown word (Moment)          -- datetime.datetime]): Moment when the work is logged
jira/client.py:2812:69   - Unknown word (restrictions)    -- : Details about any restrictions in the visibility of
jira/client.py:2908:9    - Unknown word (inward)          -- inwardIssue: str,
jira/client.py:2909:9    - Unknown word (outward)         -- outwardIssue: str,
jira/client.py:2935:39   - Unknown word (figure)          -- # we are smart to figure it out what he meant
jira/client.py:2935:61   - Unknown word (meant)           -- figure it out what he meant
jira/client.py:2939:26   - Unknown word (that's)          -- # so that's the reverse, so we fix
jira/client.py:294:18    - Unknown word (canonical)     -- # create canonical query string according
jira/client.py:294:41    - Unknown word (according)     -- canonical query string according to docs at:
jira/client.py:2979:32   - Unknown word (forces)          -- force (bool): True forces an update of the cached
jira/client.py:3094:114  - Unknown word (looked)          -- that project will be looked up.
jira/client.py:3110:50   - Unknown word (appears)         -- Issue type '{name}' appears more than once.")
jira/client.py:3125:65   - Unknown word (requesttype)     -- servicedesk/{service_desk}/requesttype"
jira/client.py:313:5     - Unknown word (Allows)        -- Allows using cookie authentication
jira/client.py:3182:32   - Unknown word (mypermissions)   -- return self._get_json("mypermissions", params=params)
jira/client.py:3265:53   - Unknown word (confirmed)       -- temporary and must be confirmed before it can be used
jira/client.py:3267:129  - Unknown word (picture's)       -- attempt to autodetect the picture's content type
jira/client.py:3268:14   - Unknown word (mechanism)       -- this mechanism relies on libmagic and
jira/client.py:3268:24   - Unknown word (relies)          -- this mechanism relies on libmagic and will
jira/client.py:3273:70   - Unknown word (crop)            -- that can be used to crop a subarea of a larger
jira/client.py:3273:77   - Unknown word (subarea)         -- can be used to crop a subarea of a larger image for
jira/client.py:3273:90   - Unknown word (larger)          -- crop a subarea of a larger image for use.
jira/client.py:3274:39   - Unknown word (passed)          -- should be saved and passed to :py:meth:`confirm
jira/client.py:3275:63   - Unknown word (cropping)        -- with Jira's default cropping,
jira/client.py:330:31    - Unknown word (retries)       -- self._max_allowed_401_retries = 1  # 401 aren't recoverable
jira/client.py:330:50    - Unknown word (aren't)        -- _retries = 1  # 401 aren't recoverable with retries
jira/client.py:3311:47   - Unknown word (previously)      -- temporary avatar image previously uploaded with the specified
jira/client.py:3429:10   - Unknown word (rolesdict)       -- _rolesdict: dict[str, str] = self
jira/client.py:3455:7    - Unknown word (Resolutions)     -- # Resolutions
jira/client.py:3457:9    - Unknown word (resolutions)     -- def resolutions(self) -> list[Resolution
jira/client.py:3568:11   - Unknown word (complains)       -- # complains about unrecognized field
jira/client.py:3568:27   - Unknown word (unrecognized)    -- # complains about unrecognized field "properties"
jira/client.py:3628:66   - Unknown word (trying)          -- com/browse/JRA-59676 trying again..."
jira/client.py:3664:58   - Unknown word (extracted)       -- given issue type can be extracted via: `issue_type_x.statuses
jira/client.py:371:23    - Unknown word (Trying)        -- LOG.info("Trying to refresh the cookie
jira/client.py:3736:16   - Unknown word (assignable)      -- def search_assignable_users_for_projects(
jira/client.py:3746:47   - Unknown word (usernames)       -- : A string to match usernames against
jira/client.py:3774:74   - Unknown word (assigning)       -- the search string for assigning or creating issues.
jira/client.py:3777:37   - Unknown word (kept)            -- "user" parameter is kept for backwards compatibility
jira/client.py:3779:56   - Unknown word (eligible)        -- find users that are eligible to create issues in
jira/client.py:3780:14   - Unknown word (searching)       -- When searching for eligible creators
jira/client.py:3780:37   - Unknown word (creators)        -- searching for eligible creators, specify a project.
jira/client.py:3780:94   - Unknown word (assignees)       -- searching for eligible assignees, specify an issue key
jira/client.py:394:8     - Unknown word (Bearer)        -- """Bearer Token Authentication
jira/client.py:3964:71   - Unknown word (messing)         -- characters in global_id from messing around with the query
jira/client.py:3976:16   - Unknown word (Inactive)        -- includeInactive: bool = False,
jira/client.py:3989:53   - Unknown word (inactive)        -- bool): True to include inactive users in the results
jira/client.py:3:26      - Unknown word (friendly)   -- module implements a friendly (well, friendlier) interface
jira/client.py:3:42      - Unknown word (friendlier) -- implements a friendly (well, friendlier) interface between the
jira/client.py:4033:31   - Unknown word (viewissue)       -- User, None, "user/viewissue/search", startAt, maxResults
jira/client.py:4092:105  - Unknown word (higher)          -- version after (that is, higher in the list)
jira/client.py:4093:124  - Unknown word (Earlier)         -- First``, ``Last``, ``Earlier``, or ``Later``
jira/client.py:409:35    - Unknown word (constructing)  -- interact with Jira by constructing an instance of this
jira/client.py:410:72    - Unknown word (appropriate)   -- with "self" links -- an appropriate subclass of
jira/client.py:410:9     - Unknown word (addressable)   -- For addressable resources in Jira -
jira/client.py:411:63    - Unknown word (customized)    -- will be returned with customized ``update()`` and ``delete
jira/client.py:412:49    - Unknown word (means)         -- access to fields. This means that calls of the form
jira/client.py:412:5     - Unknown word (along)         -- along with attribute access
jira/client.py:4137:23   - Unknown word (unresolved)      -- def version_count_unresolved_issues(self, id: str
jira/client.py:413:133   - Unknown word (scalar)        -- the JSON response or a scalar value;
jira/client.py:413:93    - Unknown word (constructed)   -- resources will return a dict constructed from the JSON response
jira/client.py:4146:30   - Unknown word (Unresolved)      -- return r_json["issuesUnresolvedCount"]
jira/client.py:416:53    - Unknown word (anonymously)   -- client will connect anonymously to the Jira instance
jira/client.py:417:6     - Unknown word (atlas)         -- 'atlas-run', ``atlas-debug
jira/client.py:4187:12   - Unknown word (Creates)         -- """Creates a basic http session
jira/client.py:420:138   - Unknown word (remember)      -- Jira), the client will remember it for subsequent requests
jira/client.py:420:23    - Unknown word (handled)       -- Authentication is handled with the ``basic_auth
jira/client.py:420:86    - Unknown word (supplied)      -- If authentication is supplied (and is accepted by
jira/client.py:4221:41   - Unknown word (succeeded)       -- logging.debug(f"OAuth1 succeeded with signature_method
jira/client.py:4226:24   - Unknown word (Attempting)      -- + "Attempting fallback method(s).
jira/client.py:4227:24   - Unknown word (Consider)        -- + "Consider specifying the signature
jira/client.py:4227:33   - Unknown word (specifying)      -- + "Consider specifying the signature via oauth
jira/client.py:4230:38   - Unknown word (exhausted)       -- raise # We have exhausted our options, bubble
jira/client.py:424:24    - Unknown word (instantiate)   -- The easiest way to instantiate is using ``j = JIRA
jira/client.py:4257:12   - Unknown word (Adds)            -- """Adds the client certificate
jira/client.py:4325:22   - Unknown word (qualified)       -- str: Fully qualified URL
jira/client.py:433:42    - Unknown word (AGILE)         -- path": AgileResource.AGILE_BASE_REST_PATH,
jira/client.py:436:10    - Unknown word (resilient)     -- "resilient": True,
jira/client.py:441:66    - Unknown word (updating)      -- loading a resource after updating it
jira/client.py:442:19    - Unknown word (avoid)         -- # used to avoid server side caching
jira/client.py:442:37    - Unknown word (caching)       -- to avoid server side caching issues, used to be
jira/client.py:4463:18   - Unknown word (Couldn't)        -- "Couldn't detect content type
jira/client.py:4481:30   - Unknown word (renaming)        -- self.log.debug(f"renaming {self.user(old_user
jira/client.py:4490:12   - Unknown word (Deletes)        -- """Deletes a Jira User.
jira/client.py:450:16    - Unknown word (Expires)       -- # 'Expires': 'Thu, 01 Jan 1970
jira/client.py:4510:40   - Unknown word (deactivated)    -- username (str): User to be deactivated.
jira/client.py:4516:15   - Unknown word (Disabling)      -- # Disabling users now needs cookie
jira/client.py:4531:32   - Unknown word (fragile)        -- # this endpoint is fragile and objects to extra
jira/client.py:4545:41   - Unknown word (deactivating)   -- f"Got response from deactivating {username}: {r.status
jira/client.py:4549:40   - Unknown word (Deactivating)   -- self.log.error(f"Error Deactivating {username}: {e}")
jira/client.py:4552:66   - Unknown word (jspa)           -- admin/user/EditUser.jspa"
jira/client.py:4580:52   - Unknown word (reindexing)     -- indexing. Returns True if reindexing is in progress or not
jira/client.py:4582:104  - Unknown word (thinks)         -- reindex only if Jira thinks it should do it.
jira/client.py:4586:63   - Unknown word (slower)         -- reindex in background, slower but does not impact
jira/client.py:4586:83   - Unknown word (impact)         -- slower but does not impact the users. (Default
jira/client.py:4593:17   - Unknown word (Strategy)       -- indexingStrategy = "background" if background
jira/client.py:4593:61   - Unknown word (stoptheworld)   -- if background else "stoptheworld"
jira/client.py:4609:48   - Unknown word (considered)     -- still reindexing is considered still a success
jira/client.py:4626:47   - Unknown word (zipped)         -- export to backup as zipped xml. Returning with
jira/client.py:4626:59   - Unknown word (Returning)      -- backup as zipped xml. Returning with success does not
jira/client.py:4633:78   - Unknown word (statuscode)     -- else it returns the statuscode of the Response or False
jira/client.py:4637:60   - Unknown word (runbackup)      -- rest/backup/1/export/runbackup"
jira/client.py:4663:52   - Unknown word (getprogress)    -- url + "/rest/obm/1.0/getprogress?_=%i" % epoch_time
jira/client.py:4668:19   - Unknown word (weird)          -- # This is weird. I used to get xml,
jira/client.py:4687:48   - Unknown word (Percentage)     -- based on 'alternativePercentage' and 'size' returned
jira/client.py:4694:9    - Unknown word (perc)           -- perc_search = re.search(r
jira/client.py:4711:35   - Unknown word (webdav)         -- self.server_url + "/webdav/backupmanager/" + remote
jira/client.py:4711:42   - Unknown word (backupmanager)  -- server_url + "/webdav/backupmanager/" + remote_file
jira/client.py:4716:21   - Unknown word (resp)           -- resp = self._session.get
jira/client.py:4722:38   - Unknown word (Something)      -- self.log.error(f"Something went wrong with download
jira/client.py:4722:48   - Unknown word (went)           -- log.error(f"Something went wrong with download
jira/client.py:4753:57   - Unknown word (identifying)    -- cannot, so should be identifying properties.
jira/client.py:4765:55   - Unknown word (moves)          -- Jira Cloud only. True moves to 'Trash'. False permanently
jira/client.py:4765:91   - Unknown word (deletes)        -- . False permanently deletes.
jira/client.py:4768:53   - Unknown word (enough)         -- project not found or not enough permissions
jira/client.py:4786:10   - Unknown word (gain)           -- def _gain_sudo_session(self, options
jira/client.py:480:9     - Unknown word (proxies)       -- proxies: Any | None = None,
jira/client.py:483:23    - Unknown word (sizes)         -- default_batch_sizes: dict[type[Resource
jira/client.py:4875:37   - Unknown word (pagination)     -- ssbarnea): implement pagination support
jira/client.py:4894:30   - Unknown word (workflowschemes) -- url = self._get_url("workflowschemes")
jira/client.py:4959:24   - Unknown word (Mandatory)       -- key (str): Mandatory. Must match Jira project
jira/client.py:4959:77   - Unknown word (usually)         -- project key requirements, usually only 2-10 uppercase
jira/client.py:4962:36   - Unknown word (Determines)      -- ptype (Optional[str]): Determines the type of project
jira/client.py:4970:82   - Unknown word (belongs)         -- category the project belongs to. If none provided
jira/client.py:4973:78   - Unknown word (interchangeably) -- projectCategory. Can be used interchangeably.
jira/client.py:4977:67   - Unknown word (otherwise)       -- to False if it fails otherwise it will be the new project
jira/client.py:4:43      - Unknown word (abstractions) -- and the Resource/dict abstractions provided by this library
jira/client.py:5024:12   - Unknown word (beep)            -- # <beep> Atlassian for failing
jira/client.py:5025:12   - Unknown word (Possible)        -- # Possible values are just hardcoded
jira/client.py:5025:51   - Unknown word (obviously)       -- are just hardcoded and obviously depending on Jira version
jira/client.py:5028:31   - Unknown word (picking)         -- preference list for picking a default template
jira/client.py:5032:22   - Unknown word (pyxis)           -- "com.pyxis.greenhopper.jira:gh
jira/client.py:5032:48   - Unknown word (simplified)      -- greenhopper.jira:gh-simplified-basic"
jira/client.py:5041:57   - Unknown word (agility)         -- reenhopper.jira:gh-simplified-agility-kanban",
jira/client.py:5042:65   - Unknown word (scrum)           -- gh-simplified-agility-scrum",
jira/client.py:5055:79   - Unknown word (recruitment)     -- jira-core-simplified-recruitment",
jira/client.py:5057:40   - Unknown word (incident)        -- atlassian.jira.jira-incident-management-plugin:im
jira/client.py:5061:16   - Unknown word (Scrum)           -- # "Scrum software development
jira/client.py:5062:16   - Unknown word (Agility)         -- # "Agility", # cannot set summary
jira/client.py:5078:16   - Unknown word (Recruitment)     -- # "Recruitment",
jira/client.py:510:59    - Unknown word (newest)        -- Check whether using the newest python-jira library
jira/client.py:513:98    - Unknown word (establishing)  -- password to use when establishing a session via HTTP BASIC
jira/client.py:5140:61   - Unknown word (upon)            -- the new user active upon creation. (Default:
jira/client.py:515:71    - Unknown word (necessary)     -- containing the token necessary for (PAT) bearer token
jira/client.py:515:91    - Unknown word (bearer)        -- necessary for (PAT) bearer token authorization
jira/client.py:5238:33   - Unknown word (Dalko)           -- Experimental support for iDalko Grid, expect API to
jira/client.py:5240:13   - Unknown word (igrid)           -- def get_igrid(self, issueid: str,
jira/client.py:5241:40   - Unknown word (idalko)          -- server_url + "/rest/idalko-igrid/1.0/datagrid/data
jira/client.py:5268:26   - Unknown word (starting)        -- startAt: The starting index of the returned
jira/client.py:5271:59   - Unknown word (partially)       -- boards that match or partially match the specified
jira/client.py:5312:59   - Unknown word (commas)          -- states separated by commas
jira/client.py:5355:68   - Unknown word (assumes)         -- sprint names as a key, assumes unique names for each
jira/client.py:5366:9    - Unknown word (goal)            -- goal: str | None = None,
jira/client.py:536:46    - Unknown word (delivered)     -- -- shared secret as delivered during 'installed' lifecycle
jira/client.py:5398:9    - Unknown word (incompleted)     -- def incompletedIssuesEstimateSum(self
jira/client.py:5401:15   - Unknown word (rapid)           -- f"rapid/charts/sprintreport
jira/client.py:5401:21   - Unknown word (charts)          -- f"rapid/charts/sprintreport?rapidViewId
jira/client.py:5401:28   - Unknown word (sprintreport)    -- f"rapid/charts/sprintreport?rapidViewId={board_id
jira/client.py:5418:56   - Unknown word (punted)          -- r_json["contents"]["puntedIssues"]
jira/client.py:542:70    - Unknown word (validated)     -- credentials first to be validated. Remember that if you
jira/client.py:542:81    - Unknown word (Remember)      -- first to be validated. Remember that if you are accessing
jira/client.py:5431:68   - Unknown word (suit)            -- method, sprint() method suit the convention more
jira/client.py:5431:77   - Unknown word (convention)      -- sprint() method suit the convention more
jira/client.py:5436:39   - Unknown word (retrieving)      -- id (str): the board retrieving issues from. Deprecated
jira/client.py:543:42    - Unknown word (fetches)       -- server_info (bool): True fetches server version info
jira/client.py:544:33    - Unknown word (enables)       -- async_ (bool): True enables async requests for those
jira/client.py:546:115   - Unknown word (underlying)    -- connect timeout for the underlying calls to Jira.
jira/client.py:547:15    - Unknown word (Obviously)     -- Obviously this means that you
jira/client.py:547:52    - Unknown word (rely)          -- means that you cannot rely on the return code when
jira/client.py:5480:84   - Unknown word (depends)         -- remember that board sharing depends on the filter sharing
jira/client.py:5484:110  - Unknown word (located)         -- the Board should be located under.
jira/client.py:5485:15   - Unknown word (Omit)            -- Omit this for a 'user' location
jira/client.py:5488:24   - Unknown word (newly)           -- Board: The newly created board
jira/client.py:548:48    - Unknown word (Retries)       -- int): Sets the amount Retries for the HTTP sessions
jira/client.py:548:78    - Unknown word (initiated)     -- for the HTTP sessions initiated by the client. (Default
jira/client.py:552:82    - Unknown word (Manually)      -- , Optional[int]]]): Manually specify the batch-sizes
jira/client.py:5530:35   - Unknown word (Goal)            -- goal (Optional[str]): Goal for the sprint.
jira/client.py:553:19    - Unknown word (paginated)     -- the paginated retrieval of different
jira/client.py:554:45    - Unknown word (mapped)        -- If an item type is mapped to `None` no fallback
jira/client.py:554:74    - Unknown word (occurs)        -- to `None` no fallback occurs, instead the JIRA-backend
jira/client.py:5557:20   - Unknown word (preferably)      -- completed, preferably before it started. A
jira/client.py:555:68    - Unknown word (queried)       -- all Resources will be queried in batches of 100. E
jira/client.py:555:79    - Unknown word (batches)       -- Resources will be queried in batches of 100. E.g., setting
jira/client.py:5572:23   - Unknown word (epic)            -- def add_issues_to_epic(
jira/client.py:5576:16   - Unknown word (epics)           -- ignore_epics: bool | None = None
jira/client.py:557:58    - Unknown word (controlled)    -- s batch-size will be controlled by the backend. (Default
jira/client.py:5580:38   - Unknown word (Epic)            -- can only exist in one Epic!
jira/client.py:559:61    - Unknown word (because)       -- be used in __del__() because
jira/client.py:560:47    - Unknown word (been)          -- info could have already been deleted in __del__(
jira/client.py:5611:55   - Unknown word (ranked)          -- key of the issue to be ranked before/after the second
jira/client.py:5638:59   - Unknown word (lexo)            -- greenhopper.jira:gh-lexo-rank"
jira/client.py:5657:17   - Unknown word (backlog)         -- def move_to_backlog(self, issue_keys: list
jira/client.py:5674:9    - Unknown word (pinned)          -- def pinned_comments(self, issue
jira/client.py:5693:16   - Unknown word (Unpin)           -- """Pin/Unpin a comment on the issue
jira/client.py:597:34    - Unknown word (since)         -- Rip off trailing slash since all urls depend on that
jira/client.py:597:49    - Unknown word (depend)        -- slash since all urls depend on that
jira/client.py:5:33      - Unknown word (described)    -- construct a JIRA object as described below. Full API documentation
jira/client.py:608:71    - Unknown word (benefit)       -- , dict)  # for mypy benefit
jira/client.py:615:28    - Unknown word (verif)         -- self._add_ssl_cert_verif_strategy_to_session
jira/client.py:615:34    - Unknown word (strategy)      -- _add_ssl_cert_verif_strategy_to_session()
jira/client.py:62:14     - Unknown word (Gadget)       -- DashboardGadget,
jira/client.py:647:20    - Unknown word (better)        -- # It's better to fail faster than
jira/client.py:647:35    - Unknown word (faster)        -- It's better to fail faster than later.
jira/client.py:647:42    - Unknown word (than)          -- better to fail faster than later.
jira/client.py:685:17    - Unknown word (clause)        -- if "clauseNames" in f:
jira/client.py:716:59    - Unknown word (outdated)      -- version of the library is outdated."""
jira/client.py:722:13    - Unknown word (released)      -- released_version = data["info
jira/client.py:725:157   - Unknown word (older)         -- file any bugs against older versions."
jira/client.py:733:12    - Unknown word (Destructor)    -- """Destructor for JIRA instance."
jira/client.py:743:74    - Unknown word (torn)          -- in the process to be torn down,
jira/client.py:750:28    - Unknown word (habit)         -- # Jira has the bad habit of returning errors
jira/client.py:750:76    - Unknown word (embedding)     -- in pages with 200 and embedding the
jira/client.py:751:27    - Unknown word (webpage)       -- # error in a huge webpage.
jira/client.py:77:5      - Unknown word (Pinned)       -- PinnedComment,
jira/client.py:783:60    - Unknown word (fetched)       -- the first record to be fetched. (Default: ``0``)
jira/client.py:784:80    - Unknown word (evaluates)     -- return. If maxResults evaluates as False, it will try
jira/client.py:804:15    - Unknown word (passing)       -- # passing through json.dumps and
jira/client.py:804:57    - Unknown word (ensures)       -- dumps and json.loads ensures json
jira/client.py:843:87    - Unknown word (Falling)       -- received %s items in batch. Falling back to %s.",
jira/client.py:885:26    - Unknown word (Hack)          -- ) # Hack necessary for mock-calls
jira/client.py:905:24    - Unknown word (unreachable)   -- else: # TODO: unreachable
jira/client.py:906:18    - Unknown word (seems)        -- # it seems that search_users can
jira/client.py:924:15    - Unknown word (improving)    -- # improving the error text so we
jira/client.py:924:58    - Unknown word (happened)     -- text so we know why it happened
jira/client.py:941:55    - Unknown word (letting)      -- Resource-key -> Fallback to letting JIRA-Backend determine
jira/client.py:960:20    - Unknown word (placeholders) -- The format placeholders will be populated from
jira/client.py:960:41    - Unknown word (populated)    -- placeholders will be populated from the ``ids`` argument
jira/client.py:963:9     - Unknown word (Moreover)     -- Moreover, it will not know to
jira/client.py:964:32    - Unknown word (intended)     -- For this reason, it is intended to support resources
jira/client.py:976:44    - Unknown word (fails)        -- FIXME: This function fails type checking, probably
jira/config.py:37:44     - Unknown word (indicate)   -- bool, str]): True to indicate whether SSL certificates
jira/config.py:58:29     - Unknown word (mandatory)  -- # only the `url` is mandatory
jira/config.py:66:9      - Unknown word (findfile)   -- def findfile(path):
jira/config.py:6:12      - Unknown word (simplifies) -- Also, this simplifies the scripts by not having
jira/config.py:6:42      - Unknown word (having)     -- simplifies the scripts by not having to write the same initializat
jira/exceptions.py:38:33     - Unknown word (PYJIRA)     -- self.log_to_tempfile = "PYJIRA_LOG_TO_TEMPFILE" in
jira/exceptions.py:62:68     - Unknown word (jiraerror)  -- suffix=".tmp", prefix="jiraerror-")
jira/exceptions.py:67:15     - Unknown word (Otherwise)  -- # Otherwise, just return the error
jira/exceptions.py:67:51     - Unknown word (usual)      -- return the error as usual
jira/jirashell.py:189:25    - Unknown word (legged)     -- help="Start a 3-legged OAuth authentication
jira/jirashell.py:1:4       - Unknown word (Starts)     -- """Starts an interactive Jira
jira/jirashell.py:202:25    - Unknown word (negotiated) -- help="Print the negotiated OAuth tokens as they
jira/jirashell.py:304:19    - Unknown word (Would)      -- if input("Would you like to remember
jira/jirashell.py:307:16    - Unknown word (Getting)    -- print("Getting password from keyring
jira/jirashell.py:366:13    - Unknown word (banner)     -- banner1="<Jira Shell " + _
jira/jirashell.py:3:26      - Unknown word (changing)   -- Script arguments support changing the server and a persistent
jira/jirashell.py:58:17     - Unknown word (Please)     -- print(f"Please visit this URL to authorize
jira/jirashell.py:65:5      - Unknown word (approved)   -- approved = input(
jira/jirashell.py:66:63     - Unknown word (behalf)     -- program to connect on your behalf to {server}? (y/n)"
jira/jirashell.py:71:14     - Unknown word (Abandoning) -- "Abandoning OAuth dance. Your partner
jira/jirashell.py:71:51     - Unknown word (faceplants) -- dance. Your partner faceplants. The audience boos.
jira/jirashell.py:71:67     - Unknown word (audience)   -- partner faceplants. The audience boos. You feel shame
jira/jirashell.py:71:76     - Unknown word (boos)       -- faceplants. The audience boos. You feel shame."
jira/jirashell.py:71:91     - Unknown word (shame)      -- audience boos. You feel shame."
jira/resilientsession.py:109:11    - Unknown word (Sometimes)    -- # Sometimes Jira returns `errorMessage
jira/resilientsession.py:113:37    - Unknown word (sometimes)    -- .0.x error messages sometimes come wrapped in this
jira/resilientsession.py:113:47    - Unknown word (come)         -- error messages sometimes come wrapped in this array
jira/resilientsession.py:147:22    - Unknown word (supposed)     -- """This class is supposed to retry requests that
jira/resilientsession.py:153:31    - Unknown word (catered)      -- "A Session subclass catered for the Jira API with
jira/resilientsession.py:153:61    - Unknown word (exponential)  -- for the Jira API with exponential delaying retry.
jira/resilientsession.py:153:73    - Unknown word (delaying)     -- API with exponential delaying retry.
jira/resilientsession.py:157:46    - Unknown word (times)        -- int): Max number of times to retry a request.
jira/resilientsession.py:165:11    - Unknown word (Indicate)     -- # Indicate our preference for JSON
jira/resilientsession.py:168:55    - Unknown word (shouldn't)    -- instantiation the debug level shouldn't be used for prod
jira/resilientsession.py:171:65    - Unknown word (production)   -- _}' is not safe for production code!"
jira/resilientsession.py:185:65    - Unknown word (behaviour)    -- should preserve old behaviour
jira/resilientsession.py:193:49    - Unknown word (intentionally) -- ignore[override] # An intentionally different override
jira/resilientsession.py:200:107   - Unknown word (logic)         -- error handling and retry logic.
jira/resilientsession.py:200:23    - Unknown word (intentional)   -- """This is an intentional override of `Session
jira/resilientsession.py:200:88    - Unknown word (handling)      -- to inject some error handling and retry logic.
jira/resilientsession.py:22:34     - Unknown word (manipulation) -- class allows for the manipulation of the Request keyword
jira/resilientsession.py:234:15    - Unknown word (Decide)        -- # Decide if we should keep retrying
jira/resilientsession.py:240:125   - Unknown word (fine)          -- CaseInsensitiveDict are fine here
jira/resilientsession.py:245:48    - Unknown word (recover)       -- exception we could not recover from
jira/resilientsession.py:251:15    - Unknown word (Shouldn't)     -- # Shouldn't reach here...(but added
jira/resilientsession.py:266:20    - Unknown word (Seraph)        -- and "X-Seraph-LoginReason" in response
jira/resilientsession.py:278:58    - Unknown word (hence)         -- request is recoverable and hence should be retried.
jira/resilientsession.py:280:23    - Unknown word (delays)        -- Exponentially delays if recoverable.
jira/resilientsession.py:280:9     - Unknown word (Exponentially) -- Exponentially delays if recoverable
jira/resilientsession.py:282:17    - Unknown word (moment)        -- At this moment it supports: 429, 5
jira/resilientsession.py:289:68    - Unknown word (calculating)   -- counter to use when calculating the exponential delay
jira/resilientsession.py:294:9     - Unknown word (suggested)     -- suggested_delay = -1  # Controls
jira/resilientsession.py:306:68    - Unknown word (printed)       -- ConnectionError are only printed for log level DEBUG
jira/resilientsession.py:320:32    - Unknown word (told)          -- ) # Do as told but always wait at least
jira/resilientsession.py:320:64    - Unknown word (little)        -- always wait at least a little
jira/resilientsession.py:322:58    - Unknown word (Exponential)   -- 10 * 2**counter  # Exponential backoff
jira/resilientsession.py:330:21    - Unknown word (jitter)        -- # Apply jitter to prevent thundering
jira/resilientsession.py:330:31    - Unknown word (prevent)       -- # Apply jitter to prevent thundering herd
jira/resilientsession.py:330:39    - Unknown word (thundering)    -- Apply jitter to prevent thundering herd
jira/resilientsession.py:330:50    - Unknown word (herd)          -- to prevent thundering herd
jira/resilientsession.py:349:26    - Unknown word (issued)        -- number_of_tokens_issued_per_interval = response
jira/resilientsession.py:352:15    - Unknown word (issuing)       -- token_issuing_rate_interval_seconds
jira/resilientsession.py:353:26    - Unknown word (Interval)      -- "X-RateLimit-Interval-Seconds"
jira/resilientsession.py:377:35    - Unknown word (exemption)     -- "Consider adding an exemption for the user as explained
jira/resilientsession.py:377:61    - Unknown word (explained)     -- exemption for the user as explained in: "
jira/resilientsession.py:42:7      - Unknown word (Passthrough)  -- class PassthroughRetryPrepare(PrepareRequestFor
jira/resilientsession.py:59:45     - Unknown word (codes)        -- unhandled 400 status codes.
jira/resilientsession.py:93:44     - Unknown word (parsed)       -- error messages list parsed from the Response. An
jira/resources.py:102:9     - Unknown word (prioritized) -- # A prioritized list of the keys in
jira/resources.py:103:50    - Unknown word (offer)       -- identifier, or that offer other key information
jira/resources.py:1048:32   - Unknown word (issuesecuritylevelscheme) -- self, "project/{0}/issuesecuritylevelscheme?expand=user", options
jira/resources.py:1157:43   - Unknown word (adjusts)                  -- is the default and adjusts the estimate automatically
jira/resources.py:1304:14   - Unknown word (categorised)              -- "categorisedActors": {
jira/resources.py:1304:25   - Unknown word (Actors)                   -- "categorisedActors": {
jira/resources.py:1305:38   - Unknown word (actor)                    -- atlassian-user-role-actor": users,
jira/resources.py:135:12    - Unknown word (Initializes) -- """Initializes a generic resource.
jira/resources.py:1403:50   - Unknown word (differently)              -- Jira and Jira Cloud differently
jira/resources.py:1445:12   - Unknown word (neither)                  -- If neither of the arguments are
jira/resources.py:149:69    - Unknown word (actually)    -- when a resource has actually been loaded
jira/resources.py:1610:17   - Unknown word (walks)                    -- Recursively walks a dict structure, transformin
jira/resources.py:1610:41   - Unknown word (transforming)             -- walks a dict structure, transforming the properties into
jira/resources.py:1610:5    - Unknown word (Recursively)              -- Recursively walks a dict structure
jira/resources.py:1638:21   - Unknown word (elem)                     -- for seq_elem in j:
jira/resources.py:1733:22   - Unknown word (storing)                  -- """An object for storing named attributes.""
jira/resources.py:211:32    - Unknown word (pickled)     -- setstate__(self, raw_pickled: dict[str, Any]):
jira/resources.py:217:17    - Unknown word (calculation) -- """Hash calculation.
jira/resources.py:220:88    - Unknown word (sufficient)  -- object, and should be sufficient to generate a unique
jira/resources.py:220:9     - Unknown word (Technically) -- Technically 'self', if present,
jira/resources.py:250:12    - Unknown word (Finds)       -- """Finds a resource based on
jira/resources.py:283:12    - Unknown word (Gets)        -- """Gets the url for the specified
jira/resources.py:305:31    - Unknown word (marshalled)  -- Keyword arguments are marshalled into a dict before being
jira/resources.py:306:41    - Unknown word (specialize)  -- raised; subclasses that specialize this method will only
jira/resources.py:310:89    - Unknown word (executed)    -- queue, so it can be executed later using async_run
jira/resources.py:317:69    - Unknown word (redefinition) -- ] # type: ignore # redefinition
jira/resources.py:390:45    - Unknown word (orphan)       -- Trying to add missing orphan user '{user}' in order
jira/resources.py:396:15    - Unknown word (EXPERIMENTAL) -- # EXPERIMENTAL --->
jira/resources.py:424:35    - Unknown word (think)        -- FIXME: mypy doesn't think this should work
jira/resources.py:595:45    - Unknown word (incompatible) -- ignore[override] # incompatible supertype ignored
jira/resources.py:606:52    - Unknown word (targeted)     -- ): The value of the targeted property key.
jira/resources.py:715:49    - Unknown word (individually) -- fetched from the Jira API individually, but paginated lists
jira/resources.py:763:18    - Unknown word (duedate)      -- self.duedate: str | None = None
jira/resources.py:773:18    - Unknown word (statuscategorychangedate) -- self.statuscategorychangedate: str | None = None
jira/resources.py:821:54    - Unknown word (generally)                -- keyword arguments will generally be merged into fields
jira/resources.py:836:26    - Unknown word (heuristics)               -- # apply some heuristics to make certain changes
jira/resources.py:836:45    - Unknown word (certain)                  -- some heuristics to make certain changes easier
jira/resources.py:862:73    - Unknown word (starts)                   -- exist or if the field starts with an ``_``
jira/resources.py:876:74    - Unknown word (resetting)                -- multiple values, without resetting the existing values
jira/resources.py:886:28    - Unknown word (Subtasks)                 -- def delete(self, deleteSubtasks=False):
jira/resources.py:895:42    - Unknown word (browsable)                -- URL of the issue, the browsable one not the REST one
jira/resources.py:920:27    - Unknown word (solved)                   -- # Will need to be solved in a major version bump
jira/resources.py:97:15     - Unknown word (bracketed)  -- where the bracketed numerals are placeholders
jira/resources.py:97:25     - Unknown word (numerals)   -- where the bracketed numerals are placeholders for
jira/resources.py:97:74     - Unknown word (filled)     -- for ID values that are filled in from the ``ids``
jira/utils/__init__.py:16:15     - Unknown word (insensitive) -- """A case-insensitive ``dict``-like object
jira/utils/__init__.py:24:56     - Unknown word (remembers)   -- strings. The structure remembers the
jira/utils/__init__.py:27:39     - Unknown word (However)     -- case-sensitive keys. However, querying and contains
jira/utils/__init__.py:27:48     - Unknown word (querying)    -- sensitive keys. However, querying and contains
jira/utils/__init__.py:36:56     - Unknown word (regardless)  -- `` response header, regardless
jira/utils/__init__.py:37:32     - Unknown word (originally)  -- the header name was originally stored.
jira/utils/__init__.py:63:8      - Unknown word (Attempts)    -- """Attempts to load json the result
jira/utils/__init__.py:79:41     - Unknown word (bodies)      -- loads() fails with empty bodies
make_local_jira_user.py:39:13     - Unknown word (mins)       -- timeout_mins = 15
make_local_jira_user.py:47:28     - Unknown word (REACHABLE)  -- print("JIRA IS REACHABLE")
make_local_jira_user.py:51:21     - Unknown word (encountered) -- print(f"encountered {ex} while waiting for
make_local_jira_user.py:55:31     - Unknown word (wasn't)      -- f"Jira server wasn't reachable within timeout
pyproject.toml:101:9     - Unknown word (eggs)        -- "./.eggs",
pyproject.toml:103:9     - Unknown word (mypy)        -- "./.mypy_cache",
pyproject.toml:107:13    - Unknown word (modules)     -- "./node_modules",
pyproject.toml:109:14    - Unknown word (icon)        -- "./tests/icon.png",
pyproject.toml:10:21     - Unknown word (Other)       -- "Environment :: Other Environment",
pyproject.toml:111:7     - Unknown word (ruff)        -- ".ruff_cache",
pyproject.toml:112:6     - Unknown word (AUTHORS)     -- "AUTHORS",
pyproject.toml:11:15     - Unknown word (Audience)    -- "Intended Audience :: Developers",
pyproject.toml:11:6      - Unknown word (Intended)    -- "Intended Audience :: Developers
pyproject.toml:125:7     - Unknown word (setuptools)  -- [tool.setuptools]
pyproject.toml:127:12    - Unknown word (false)       -- zip-safe = false
pyproject.toml:127:5     - Unknown word (safe)        -- zip-safe = false
pyproject.toml:137:53    - Unknown word (toml)        -- 0", "setuptools_scm[toml] >= 7.0.0"]
pyproject.toml:13:21     - Unknown word (Approved)    -- "License :: OSI Approved :: BSD License",
pyproject.toml:140:3     - Unknown word (Setuptools)  -- # Setuptools config
pyproject.toml:141:3     - Unknown word (Equivalent)  -- # Equivalent to use_scm_version=True
pyproject.toml:145:1     - Unknown word (minversion)  -- minversion = "6.0"
pyproject.toml:146:1     - Unknown word (testpaths)   -- testpaths = ["tests"]
pyproject.toml:148:1     - Unknown word (addopts)     -- addopts = '''-p no:xdist --durations
pyproject.toml:148:28    - Unknown word (durations)   -- addopts = '''-p no:xdist --durations=10 --tb=long -rxX -v
pyproject.toml:148:61    - Unknown word (color)       -- --tb=long -rxX -v --color=yes
pyproject.toml:149:16    - Unknown word (junitxml)    -- --junitxml=build/results.xml
pyproject.toml:14:29     - Unknown word (Independent) -- Operating System :: OS Independent",
pyproject.toml:14:6      - Unknown word (Operating)   -- "Operating System :: OS Independent
pyproject.toml:152:27    - Unknown word (distributed) -- these are important for distributed testing, to speed up
pyproject.toml:152:51    - Unknown word (speed)       -- distributed testing, to speed up their execution we
pyproject.toml:152:79    - Unknown word (minimize)    -- up their execution we minimize what we sync
pyproject.toml:153:1     - Unknown word (rsyncdirs)   -- rsyncdirs = ". jira demo docs
pyproject.toml:153:21    - Unknown word (demo)        -- rsyncdirs = ". jira demo docs"
pyproject.toml:154:1     - Unknown word (rsyncignore) -- rsyncignore = ".git"
pyproject.toml:159:17    - Unknown word (warnings)    -- # avoid useless warnings related to coverage
pyproject.toml:159:46    - Unknown word (skips)       -- related to coverage skips
pyproject.toml:159:9     - Unknown word (useless)     -- # avoid useless warnings related to
pyproject.toml:15:6      - Unknown word (Programming) -- "Programming Language :: Python"
pyproject.toml:160:1     - Unknown word (filterwarnings) -- filterwarnings = ["ignore::pytest.PytestWarn
pyproject.toml:162:1     - Unknown word (markers)        -- markers = ["allow_on_cloud:
pyproject.toml:166:1     - Unknown word (warn)           -- warn_unused_configs = true
pyproject.toml:166:6     - Unknown word (unused)         -- warn_unused_configs = true
pyproject.toml:170:13    - Unknown word (overrides)      -- [[tool.mypy.overrides]]
pyproject.toml:176:3     - Unknown word (Same)           -- # Same as Black.
pyproject.toml:177:6     - Unknown word (length)         -- line-length = 88
pyproject.toml:182:49    - Unknown word (resolving)      -- consider, e.g., when resolving first- vs. third-party
pyproject.toml:187:13    - Unknown word (pydocstyle)     -- "E", # pydocstyle
pyproject.toml:189:13    - Unknown word (pyflakes)       -- "F", # pyflakes
pyproject.toml:190:13    - Unknown word (isort)          -- "I", # isort
pyproject.toml:191:13    - Unknown word (pyupgrade)      -- "UP", # pyupgrade
pyproject.toml:210:3     - Unknown word (Allow)          -- # Allow unused variables when
pyproject.toml:210:31    - Unknown word (underscore)     -- unused variables when underscore-prefixed.
pyproject.toml:210:42    - Unknown word (prefixed)       -- variables when underscore-prefixed.
pyproject.toml:211:1     - Unknown word (dummy)          -- dummy-variable-rgx = "^(_
pyproject.toml:215:45    - Unknown word (annotations)    -- from __future__ import annotations"]
pyproject.toml:217:26    - Unknown word (ignores)        -- tool.ruff.lint.per-file-ignores]
pyproject.toml:22:39     - Unknown word (Libraries)   -- Software Development :: Libraries :: Python Modules",
pyproject.toml:22:59     - Unknown word (Modules)     -- Libraries :: Python Modules",
pyproject.toml:25:1      - Unknown word (keywords)    -- keywords = ["api", "atlassian
pyproject.toml:27:6      - Unknown word (defusedxml)  -- "defusedxml",
pyproject.toml:32:6      - Unknown word (typing)      -- "typing_extensions>=3.7.4.2
pyproject.toml:39:64     - Unknown word (reasons)     -- file due to multiple reasons:
pyproject.toml:40:13     - Unknown word (chars)       -- # - Unicode chars, see https://github
pyproject.toml:40:5      - Unknown word (Unicode)     -- # - Unicode chars, see https://github
pyproject.toml:41:12     - Unknown word (ability)     -- # - Breaks ability to perform `python setup
pyproject.toml:41:39     - Unknown word (setup)       -- ability to perform `python setup.py install`
pyproject.toml:41:5      - Unknown word (Breaks)      -- # - Breaks ability to perform
pyproject.toml:50:1      - Unknown word (Forum)       -- Forum = "https://community
pyproject.toml:52:10     - Unknown word (optional)    -- [project.optional-dependencies]
pyproject.toml:55:6      - Unknown word (keyring)     -- "keyring",
pyproject.toml:57:1      - Unknown word (docs)        -- docs = [
pyproject.toml:58:6      - Unknown word (sphinx)      -- "sphinx>=5.0.0",
pyproject.toml:5:35      - Unknown word (interacting) -- "Python library for interacting with JIRA via REST APIs
pyproject.toml:60:12     - Unknown word (Theme)       -- # HTML Theme
pyproject.toml:61:6      - Unknown word (furo)        -- "furo",
pyproject.toml:69:20     - Unknown word (futures)     -- async = ["requests-futures>=0.9.7"]
pyproject.toml:72:6      - Unknown word (flaky)       -- "flaky",
pyproject.toml:73:12     - Unknown word (Safe)        -- "MarkupSafe>=0.23",
pyproject.toml:73:6      - Unknown word (Markup)      -- "MarkupSafe>=0.23",
pyproject.toml:77:13     - Unknown word (instafail)   -- "pytest-instafail",
pyproject.toml:78:13     - Unknown word (sugar)       -- "pytest-sugar",
pyproject.toml:7:26      - Unknown word (Clause)      -- license = {text = "BSD-2-Clause"}
pyproject.toml:80:13     - Unknown word (xdist)       -- "pytest-xdist>=2.2",
pyproject.toml:83:15     - Unknown word (mock)        -- "requests_mock", # Apache-2
pyproject.toml:84:22     - Unknown word (UNKNOWN)     -- "requires.io", # UNKNOWN!!!
pyproject.toml:85:6      - Unknown word (tenacity)    -- "tenacity", # Apache-2
pyproject.toml:87:6      - Unknown word (yanc)        -- "yanc>=0.3.3", # GPL
pyproject.toml:92:29     - Unknown word (main)        -- jirashell = "jira.jirashell:main"
pyproject.toml:94:7      - Unknown word (codespell)   -- [tool.codespell]
pyproject.toml:95:19     - Unknown word (true)        -- check-filenames = true
pyproject.toml:96:7      - Unknown word (hidden)      -- check-hidden = true
pyproject.toml:99:8      - Unknown word (colors)      -- enable-colors = true
pyproject.toml:9:32      - Unknown word (Production)  -- Development Status :: 5 - Production/Stable",
pyproject.toml:9:43      - Unknown word (Stable)      -- Status :: 5 - Production/Stable",
tests/conftest.py:106:5     - Unknown word (rndstr)     -- def rndstr():
tests/conftest.py:110:5     - Unknown word (rndpassword) -- def rndpassword():
tests/conftest.py:111:7     - Unknown word (generates)   -- # generates a password of length
tests/conftest.py:121:5     - Unknown word (hashify)     -- def hashify(some_string, max_len
tests/conftest.py:130:30    - Unknown word (documented)  -- Jira even if it is documented as supported.
tests/conftest.py:138:24    - Unknown word (populate)    -- """Instantiate and populate the JIRA instance with
tests/conftest.py:138:8     - Unknown word (Instantiate) -- """Instantiate and populate the JIRA
tests/conftest.py:171:33    - Unknown word (logins)      -- self.set_basic_auth_logins(**jira_class_kwargs
tests/conftest.py:213:23    - Unknown word (sysadmin)    -- self.jira_sysadmin = JIRA(
tests/conftest.py:227:9     - Unknown word (Assumes)     -- Assumes project exists if unknown
tests/conftest.py:231:78    - Unknown word (thrown)      -- not exist a warning is thrown
tests/conftest.py:234:31    - Unknown word (Assuming)    -- LOGGER.exception("Assuming project '%s' exists
tests/conftest.py:240:29    - Unknown word (secs)        -- wait_between_checks_secs = 2
tests/conftest.py:266:58    - Unknown word (recreate)    -- project_name: str, force_recreate: bool = False
tests/conftest.py:290:45    - Unknown word (hope)        -- username running the tests (hope we will not collide
tests/conftest.py:290:62    - Unknown word (collide)     -- tests (hope we will not collide)
tests/conftest.py:294:36    - Unknown word (avoiding)    -- jid` is important for avoiding concurrency problems
tests/conftest.py:295:28    - Unknown word (parallel)    -- executing tests in parallel as we have only one
tests/conftest.py:315:37    - Unknown word (often)       -- # keep it here as often Jira will report the
tests/conftest.py:48:40     - Unknown word (requisites) -- where you set up any pre-requisites e.g. the expected result
tests/conftest.py:48:7      - Unknown word (GIVEN)      -- * GIVEN - where you set up any
tests/conftest.py:49:48     - Unknown word (obtain)     -- perform the action and obtain the result
tests/conftest.py:69:33     - Unknown word (swallows)   -- # pytest with flaky swallows any exceptions re-raised
tests/conftest.py:70:44     - Unknown word (aiding)     -- log any exceptions for aiding debugging
tests/conftest.py:89:42     - Unknown word (Depending)  -- accountId", "name"]: Depending on if Jira Cloud or
tests/conftest.py:98:56     - Unknown word (garbage)    -- object is set to be garbage collected."""
tests/conftest.py:98:64     - Unknown word (collected)  -- is set to be garbage collected."""
tests/resources/test_board.py:48:30     - Unknown word (reasonable) -- # THEN: We get a reasonable looking board
tests/resources/test_comment.py:31:14     - Unknown word (expanded)   -- def test_expanded_comments(self):
tests/resources/test_component.py:49:45     - Unknown word (intends)    -- errors as this code intends only to prepare for
tests/resources/test_component.py:58:26     - Unknown word (stand)      -- description="stand by!",
tests/resources/test_dashboard.py:29:55     - Unknown word (issuekey)   -- column_names = "issuetype|issuekey|summary|priority|status
tests/resources/test_dashboard.py:389:65    - Unknown word (mocked)      -- not_201_response(self, mocked_request):
tests/resources/test_dashboard.py:82:25     - Unknown word (obtuse)     -- # This is a bit obtuse, but Jira mutates the
tests/resources/test_dashboard.py:82:42     - Unknown word (mutates)    -- bit obtuse, but Jira mutates the type on this
tests/resources/test_dashboard.py:83:28     - Unknown word (fact)       -- # object after the fact. `authenticated` corresponds
tests/resources/test_dashboard.py:83:50     - Unknown word (corresponds) -- fact. `authenticated` corresponds to `loggedin`.
tests/resources/test_dashboard.py:83:66     - Unknown word (loggedin)    -- uthenticated` corresponds to `loggedin`.
tests/resources/test_dashboard.py:87:11     - Unknown word (ensuring)    -- # ensuring we actually have a
tests/resources/test_epic.py:45:35     - Unknown word (Incorrect)  -- raise ValueError("Incorrect kwarg used !")
tests/resources/test_generic_resource.py:16:18     - Unknown word (parametrize) -- @pytest.mark.parametrize(
tests/resources/test_generic_resource.py:47:27     - Unknown word (recognizes)  -- """Test the regex recognizes the right class for
tests/resources/test_issue.py:108:32    - Unknown word (fielddict)  -- test_create_issue_with_fielddict(self):
tests/resources/test_issue.py:196:49    - Unknown word (succeed)    -- This issue will not succeed",
tests/resources/test_issue.py:199:47    - Unknown word (seen)       -- description": "Should not be seen.",
tests/resources/test_issue.py:23:27     - Unknown word (finds)      -- def test_issue_search_finds_issue(self):
tests/resources/test_issue.py:289:42    - Unknown word (shortly)    -- description="Will be updated shortly",
tests/resources/test_issue.py:334:9     - Unknown word (labelarray) -- labelarray = ["testLabel"]
tests/resources/test_issue.py:356:46    - Unknown word (wiith)      -- Test issue for updating wiith notify false",
tests/resources/test_issue.py:361:66    - Unknown word (silently)   -- description="Now updated, but silently")
tests/resources/test_issue.py:382:35    - Unknown word (projectkey) -- createmeta_filter_by_projectkey_and_name(self):
tests/resources/test_issue.py:387:35    - Unknown word (projectkeys) -- createmeta_filter_by_projectkeys_and_name(self):
tests/resources/test_issue.py:397:9     - Unknown word (proja)       -- proja = find_by_key_value
tests/resources/test_issue.py:398:9     - Unknown word (projb)       -- projb = find_by_key_value
tests/resources/test_issue.py:426:52    - Unknown word (promptly)    -- so the call returns promptly
tests/resources/test_issue.py:447:63    - Unknown word (NOPE)        -- jira.assign_issue, "NOPE-1", "notauser")
tests/resources/test_issue.py:447:73    - Unknown word (notauser)    -- assign_issue, "NOPE-1", "notauser")
tests/resources/test_issue.py:450:11    - Unknown word (Given)       -- # Given: A user is assigned
tests/resources/test_issue.py:490:14    - Unknown word (transitioning) -- def test_transitioning(self):
tests/resources/test_issue.py:499:43    - Unknown word (Expecting)     -- assertTrue(transitions, msg="Expecting at least one transition
tests/resources/test_issue.py:91:40     - Unknown word (reliable)   -- for changelog is not reliable because it may exist
tests/resources/test_issue_link.py:31:9      - Unknown word (inwardissue) -- inwardissue = self.test_manager
tests/resources/test_issue_link.py:35:9      - Unknown word (outwardissue) -- outwardissue = self.test_manager
tests/resources/test_issue_link.py:43:82     - Unknown word (easily)       -- return its ID, so can't easily test delete")
tests/resources/test_pinned_comment.py:18:14     - Unknown word (pincomments) -- def test_pincomments(self):
tests/resources/test_project.py:144:34    - Unknown word (existent)   -- self.project_b, "non-existent"
tests/resources/test_project.py:196:59    - Unknown word (actors)     -- actor for actor in role.actors}
tests/resources/test_project.py:196:9     - Unknown word (actornames) -- actornames = {actor.name: actor
tests/resources/test_project.py:222:33    - Unknown word (programmatically) -- issue security scheme programmatically, so there is no way
tests/resources/test_project.py:231:42    - Unknown word (Simplified)       -- project_b}: Software Simplified Workflow Scheme",
tests/resources/test_project.py:50:29     - Unknown word (cropper)    -- self.assertIn('cropperOffsetX', props)
tests/resources/test_project.py:53:42     - Unknown word (Cropping)   -- assertTrue(props['needsCropping'])
tests/resources/test_remote_link.py:124:64    - Unknown word (stuff)       -- com", "title": "yahoo stuff"}
tests/resources/test_remote_link.py:128:27    - Unknown word (cheesing)    -- relationship="cheesing",
tests/resources/test_remote_link.py:43:35     - Unknown word (story)       -- globalId="python-test:story.of.horse.riding",
tests/resources/test_remote_link.py:43:44     - Unknown word (horse)       -- python-test:story.of.horse.riding",
tests/resources/test_remote_link.py:43:50     - Unknown word (riding)      -- test:story.of.horse.riding",
tests/resources/test_remote_link.py:44:60     - Unknown word (sketch)      -- too silly", "type": "sketch"},
tests/resources/test_remote_link.py:6:73      - Unknown word (googlicious) -- google.com", "title": "googlicious!"}
tests/resources/test_service_desk.py:17:26     - Unknown word (Skipping)   -- pytest.skip("Skipping Service Desk not enabled
tests/resources/test_service_desk.py:39:58     - Unknown word (were)       -- desks, "No service desks were found!")
tests/resources/test_service_desk.py:55:30     - Unknown word (Ticket)     -- summary="Ticket title here", description
tests/resources/test_sprint.py:117:13    - Unknown word (serialised) -- serialised_sprint = updated_issue
tests/resources/test_user.py:118:14    - Unknown word (observed)   -- ) # observed values between 20-2
tests/resources/test_user.py:19:29     - Unknown word (searched)   -- # WHEN: The user is searched for using its identifying
tests/resources/test_watchers.py:20:42     - Unknown word (indeed)     -- verify that remove does indeed remove watchers
tests/ruff.toml:1:14      - Unknown word (pyproject)  -- extend = "../pyproject.toml"
tests/ruff.toml:5:21      - Unknown word (undocumented) -- "D", # Too many undocumented functions at the moment
tests/start-jira.sh:10:28     - Unknown word (null)       -- (curl --output /dev/null --silent --head --fail
tests/start-jira.sh:10:35     - Unknown word (silent)     -- -output /dev/null --silent --head --fail $JIRA
tests/start-jira.sh:10:9      - Unknown word (curl)       -- until $(curl --output /dev/null
tests/start-jira.sh:12:5      - Unknown word (sleep)      -- sleep 5
tests/start-jira.sh:9:35      - Unknown word (responding) -- Waiting for Jira to start responding on $JIRA_URL "
tests/start-jira.sh:9:9       - Unknown word (Waiting)    -- printf "Waiting for Jira to start responding
tests/test_client.py:128:17    - Unknown word (inexistent) -- def test_delete_inexistent_project(cl_admin):
tests/test_client.py:129:13    - Unknown word (abogus)     -- slug = "abogus123"
tests/test_client.py:189:40    - Unknown word (nice)       -- {"random-header": "nice random"}},
tests/test_client.py:193:18    - Unknown word (unclobbered) -- def test_headers_unclobbered_update(options_arg,
tests/test_client.py:205:10    - Unknown word (arbitrarily) -- # We arbitrarily chose a header to check
tests/test_client.py:205:22    - Unknown word (chose)       -- # We arbitrarily chose a header to check it
tests/test_client.py:205:49    - Unknown word (remains)     -- a header to check it remains unchanged/unclobbered
tests/test_client.py:206:24    - Unknown word (overwritten) -- # so should not be overwritten by a test case
tests/test_client.py:221:51    - Unknown word (affect)      -- right headers and not affect the other headers' defaults
tests/test_client.py:271:17    - Unknown word (cool)        -- my_token = "cool-token"
tests/test_client.py:304:34    - Unknown word (cause)       -- arguments that will cause a 401 error
tests/test_client.py:362:69    - Unknown word (caplog)      -- request, mock_jira_client, caplog):
tests/test_client.py:51:58     - Unknown word (stay)       -- already removed, so we stay silent
tests/test_exceptions.py:29:20     - Unknown word (optimal)    -- """Sub optimal but we create a mock
tests/test_exceptions.py:69:13     - Unknown word (repsonse)   -- bad_repsonse = self.MalformedMockResponse
tests/test_resilientsession.py:186:10    - Unknown word (passthrough)          -- def test_passthrough_class():
tests/test_resilientsession.py:206:10    - Unknown word (nonempty)             -- def test_nonempty_body_is_forwarded(mocked
tests/test_resilientsession.py:30:30     - Unknown word (Confidentiality) -- ResilientSessionLoggingConfidentialityTests(JiraTestCase):
tests/test_resilientsession.py:31:26     - Unknown word (shall)           -- ""No sensitive data shall be written to the log
tests/test_resilientsession.py:31:35     - Unknown word (written)         -- sensitive data shall be written to the log."""
tests/test_resilientsession.py:39:20     - Unknown word (etwhpxbhfniqnbbjoqvw) -- witness = "etwhpxbhfniqnbbjoqvw" # random string; hopefully
tests/test_resilientsession.py:39:60     - Unknown word (hopefully)            -- iqnbbjoqvw" # random string; hopefully unique
tests/test_resilientsession.py:54:53     - Unknown word (appear)               -- that `witness` does not appear in log
tests/test_shell.py:19:33     - Unknown word (capsys)     -- unicode(requests_mock, capsys, testargs):
tests/test_shell.py:22:10     - Unknown word (printing)   -- when printing exceptions received
tests/test_shell.py:27:19     - Unknown word (βρέθηκε)    -- text="Δεν βρέθηκε",
tests/test_shell.py:33:5      - Unknown word (captured)   -- captured = capsys.readouterr
tests/tests.py:130:31    - Unknown word (headingcolour) -- key="jira.lf.text.headingcolour"
tests/tests.py:135:33    - Unknown word (hires)         -- prop = "jira.lf.favicon.hires.url"
tests/tests.py:149:24    - Unknown word (nonexistent)   -- prop = "random.nonexistent.property"
tests/tests.py:190:56    - Unknown word (ISSUES)        -- BROWSE_PROJECTS,CREATE_ISSUES,ADMINISTER_PROJECTS
tests/tests.py:190:63    - Unknown word (ADMINISTER)    -- PROJECTS,CREATE_ISSUES,ADMINISTER_PROJECTS"
tests/tests.py:328:9     - Unknown word (anon)          -- anon_jira = JIRA("https:
tests/tests.py:344:1     - Unknown word (MIMICKED)      -- MIMICKED_BACKEND_BATCH_SIZE
tests/tests.py:377:27    - Unknown word (calculate)     -- expected_calls = _calculate_calls_for_fetch_pages
tests/tests.py:411:31    - Unknown word (filler)        -- responses.content = "_filler_"
tests/tests.py:41:29     - Unknown word (woopsydoodle) -- self.jira.find("woopsydoodle/{0}", "666")
tests/tests.py:422:26    - Unknown word (kall)          -- actual_calls = [[kall[1], kall[2]] for kall
tests/tests.py:448:22    - Unknown word (decide)        -- "let backend decide for Issue",
tests/tests.py:451:28    - Unknown word (everything)    -- "default value for everything else",
tests/tests.py:493:46    - Unknown word (mimic)         -- specify it (here we mimic a server-default of
tests/tests.py:4:1       - Unknown word (Feel)       -- Feel free to make your own
tests/tests.py:533:44    - Unknown word (sasquatch)     -- python-test:story.of.sasquatch.riding",
tests/tests.py:564:47    - Unknown word (lacks)         -- pycontribs.atlassian.net lacks "
tests/tests.py:581:94    - Unknown word (existed)       -- t know if it already existed
tests/tests.py:590:44    - Unknown word (attempting)    -- sure user exists before attempting test to delete.
tests/tests.py:601:22    - Unknown word (zombie)        -- # avoiding a zombie due to Atlassian caching
tests/tests.py:609:80    - Unknown word (Fails)         -- have been deleted. Test Fails."
tests/tests.py:675:15    - Unknown word (Just)          -- # Just in case user is already
tests/tests.py:95:58     - Unknown word (peekaboo)     -- "hey", resource2: "peekaboo"}
tox.ini:100:50    - Unknown word (serve)             -- docs dir and a way to serve html:
tox.ini:100:7     - Unknown word (Print)             -- # Print out the output docs
tox.ini:102:13    - Unknown word (pathlib)           -- 'import pathlib; '\
tox.ini:108:55    - Unknown word (assert)            -- install package and assert behavior when ansible
tox.ini:111:3     - Unknown word (twine)             -- twine
tox.ini:116:21    - Unknown word (sdist)             -- # build wheel and sdist using PEP-517
tox.ini:117:35    - Unknown word (shutil)            -- -c 'import os.path, shutil, sys; \
tox.ini:119:11    - Unknown word (isdir)             -- os.path.isdir(dist_dir) or sys.exit
tox.ini:120:10    - Unknown word (Removing)          -- print("Removing \{!s\} contents..."
tox.ini:121:10    - Unknown word (rmtree)            -- shutil.rmtree(dist_dir)'
tox.ini:126:17    - Unknown word (strict)            -- twine check --strict {toxinidir}/dist/*
tox.ini:144:13    - Unknown word (obliterate)        -- # this will obliterate your jira instance,
tox.ini:14:19     - Unknown word (conflict)   -- ignore_basepython_conflict = True
tox.ini:14:8      - Unknown word (basepython) -- ignore_basepython_conflict = True
tox.ini:15:14     - Unknown word (interpreters) -- skip_missing_interpreters = True
tox.ini:16:1      - Unknown word (skipdist)     -- skipdist = True
tox.ini:27:1      - Unknown word (usedevelop)   -- usedevelop = True
tox.ini:28:3      - Unknown word (hide)         -- # hide deps from stdout https
tox.ini:29:29     - Unknown word (echo)         -- dependencies_command=echo
tox.ini:30:1      - Unknown word (extras)       -- extras =
tox.ini:34:1      - Unknown word (sitepackages) -- sitepackages=False
tox.ini:36:9      - Unknown word (clean)        -- git clean -xdf jira tests
tox.ini:39:23     - Unknown word (posargs)      -- python -m pytest {posargs}
tox.ini:3:1       - Unknown word (isolated)   -- isolated_build = True
tox.ini:41:21     - Unknown word (toxinidir)    -- PIP_CONSTRAINT={toxinidir}/constraints.txt
tox.ini:42:14     - Unknown word (envdir)       -- PIP_LOG={envdir}/pip.log
tox.ini:44:7      - Unknown word (Avoid)        -- # Avoid 2020-01-01 warnings
tox.ini:45:27     - Unknown word (DEPRECATION)    -- PYTHONWARNINGS=ignore:DEPRECATION::pip._internal.cli.base
tox.ini:45:45     - Unknown word (internal)       -- ignore:DEPRECATION::pip._internal.cli.base_command
tox.ini:45:5      - Unknown word (PYTHONWARNINGS) -- PYTHONWARNINGS=ignore:DEPRECATION:
tox.ini:53:1      - Unknown word (passenv)        -- passenv =
tox.ini:56:5      - Unknown word (CURL)           -- CURL_CA_BUNDLE
tox.ini:63:26     - Unknown word (getpass)        -- For Windows users, getpass.get_user() needs USERNAME
tox.ini:65:11     - Unknown word (externals)      -- allowlist_externals =
tox.ini:6:1       - Unknown word (envlist)    -- envlist =
tox.ini:70:22     - Unknown word (dependency)     -- description = Update dependency lock files
tox.ini:71:19     - Unknown word (oldest)         -- # Force it to use oldest supported version of
tox.ini:71:66     - Unknown word (lose)           -- of python or we would lose ability
tox.ini:72:10     - Unknown word (pinning)        -- # to get pinning correctly.
tox.ini:72:18     - Unknown word (correctly)      -- # to get pinning correctly.
tox.ini:79:112    - Unknown word (strip)          -- async --extra test --strip-extras
tox.ini:80:31     - Unknown word (autoupdate)     -- envpython} -m pre_commit autoupdate
tox.ini:80:6      - Unknown word (envpython)      -- {envpython} -m pre_commit autoupdate
tox.ini:90:5      - Unknown word (PYTHONHTTPSVERIFY) -- PYTHONHTTPSVERIFY=0
tox.ini:93:9      - Unknown word (verbose)           -- --verbose \
tox.ini:95:9      - Unknown word (nitpicky)          -- --nitpicky --fail-on-warning \
tox.ini:97:12     - Unknown word (toxworkdir)        -- -d "{toxworkdir}/docs_doctree" \
tox.ini:97:29     - Unknown word (doctree)           -- d "{toxworkdir}/docs_doctree" \
