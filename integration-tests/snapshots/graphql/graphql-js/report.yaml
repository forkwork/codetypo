---
Repository: graphql/graphql-js
Url: https://github.com/graphql/graphql-js.git
Args: '["**/*.*"]'
Summary:
  files: 360
  filesWithIssues: 332
  issues: 14043
  errors: 4
Errors:
  - Dictionary Error with (en_us)
  - Dictionary Error with (filetypes)
  - Dictionary Error with (public-licenses)
  - Dictionary Error with (html-symbol-entities)

issues:
  - "benchmark/benchmark.js:12:69        finishing       U       allowed to run before finishing."
  - "benchmark/benchmark.js:14:40        perform         U       sample size required to perform statistical analysis"
  - "benchmark/benchmark.js:14:48        statistical     U       required to perform statistical analysis."
  - "benchmark/benchmark.js:17:38        happen          U       revisions and make things happen!"
  - "benchmark/benchmark.js:19:11        benchmarks      U       const { benchmarks, revisions } = getArguments"
  - "benchmark/benchmark.js:22:6         Benchmarks      U       runBenchmarks(benchmarks, benchmarkProjects"
  - "benchmark/benchmark.js:41:22        friendly        U       / Build a benchmark-friendly environment for the"
  - "benchmark/benchmark.js:52:22        Preparing       U       console.log(`üç≥ Preparing ${revision}...`);"
  - "benchmark/benchmark.js:62:14        quiet           U       'npm --quiet install --ignore-scripts"
  - "benchmark/benchmark.js:108:14       permits         U       // If time permits, increase sample size"
  - "benchmark/benchmark.js:111:13       clocked         U       const { clocked, memUsed } = await sampleModu"
  - "benchmark/benchmark.js:119:23       tailed          U       T-Distribution two-tailed critical values for"
  - "benchmark/benchmark.js:131:4        Computes        U       // Computes stats on benchmark results"
  - "benchmark/benchmark.js:135:47       population      U       mean (estimate of the population mean)."
  - "benchmark/benchmark.js:145:25       variance        U       Compute the sample variance (estimate of the population"
  - "benchmark/benchmark.js:158:29       freedom         U       Compute the degrees of freedom."
  - "benchmark/benchmark.js:167:36       expressed       U       relative margin of error (expressed as a percentage of the"
  - "benchmark/benchmark.js:178:10       beautify        U       function beautifyBenchmark(results) {"
  - "benchmark/benchmark.js:188:10       Bench           U       printBench(result);"
  - "benchmark/benchmark.js:191:23       bench           U       function printBench(bench) {"
  - "benchmark/benchmark.js:244:64       against         U       benchmarks matching a pattern against them."
  - "benchmark/benchmark.js:244:72       them            U       matching a pattern against them."
  - "benchmark/benchmark.js:278:9        revs            U       const revsIndex = argv.indexOf"
  - "benchmark/benchmark.js:285:8        fall            U       // fall through"
  - "benchmark/benchmark.js:290:21       Assuming        U       console.warn('Assuming you meant: ' + bold"
  - "benchmark/benchmark.js:290:34       meant           U       console.warn('Assuming you meant: ' + bold(assumeArgv"
  - "benchmark/benchmark.js:343:34       warm            U       module.measure); // warm up"
  - "benchmark/benchmark.js:355:8        Clocks          U       // Clocks the time taken to execute"
  - "benchmark/benchmark.js:355:24       taken           U       // Clocks the time taken to execute a test per"
  - "benchmark/benchmark.js:355:59       secs            U       execute a test per cycle (secs)."
  - "benchmark/benchmark.js:369:26       sweeping        U       '--no-concurrent-sweeping',"
  - "benchmark/benchmark.js:370:12       predictable     U       '--predictable',"
  - "benchmark/benchmark.js:371:12       expose          U       '--expose-gc',"
  - "benchmark/benchmark.js:377:27       production      U       env: { NODE_ENV: 'production' },"
  - "benchmark/buildASTSchema-benchmark.js:6:37          fixtures    U       bigSchemaSDL } = require('./fixtures.js');"
  - "benchmark/github-schema.graphql:11:19           suggested               U       The name of the suggested topic."
  - "benchmark/github-schema.graphql:13:9            String                  U       name: String!"
  - "benchmark/github-schema.graphql:16:38           performing              U       identifier for the client performing the mutation."
  - "benchmark/github-schema.graphql:16:53           mutation                U       client performing the mutation."
  - "benchmark/github-schema.graphql:18:9            Mutation                U       clientMutationId: String"
  - "benchmark/github-schema.graphql:24:27           Payload                 U       AcceptTopicSuggestionPayload {"
  - "benchmark/github-schema.graphql:37:1            Represents              U       Represents an object which can"
  - "benchmark/github-schema.graphql:37:22           which                   U       Represents an object which can take actions on"
  - "benchmark/github-schema.graphql:37:32           take                    U       an object which can take actions on GitHub. Typically"
  - "benchmark/github-schema.graphql:37:56           Typically               U       take actions on GitHub. Typically a User or Bot."
  - "benchmark/github-schema.graphql:39:11           Actor                   U       interface Actor {"
  - "benchmark/github-schema.graphql:41:9            pointing                U       A URL pointing to the actor's public"
  - "benchmark/github-schema.graphql:41:25           actor's                 U       URL pointing to the actor's public avatar."
  - "benchmark/github-schema.graphql:41:40           avatar                  U       to the actor's public avatar."
  - "benchmark/github-schema.graphql:45:21           resulting               U       The size of the resulting square image."
  - "benchmark/github-schema.graphql:51:23           actor                   U       The username of the actor."
  - "benchmark/github-schema.graphql:56:21           this                    U       The HTTP path for this actor."
  - "benchmark/github-schema.graphql:67:32           Assignees               U       utogenerated input type of AddAssigneesToAssignable"
  - "benchmark/github-schema.graphql:67:43           Assignable              U       type of AddAssigneesToAssignable"
  - "benchmark/github-schema.graphql:71:17           assignable              U       The id of the assignable object to add assignees"
  - "benchmark/github-schema.graphql:71:42           assignees               U       assignable object to add assignees to."
  - "benchmark/github-schema.graphql:78:3            assignee                U       assigneeIds: [ID!]!"
  - "benchmark/github-schema.graphql:91:12           that                    U       The item that was assigned."
  - "benchmark/github-schema.graphql:91:21           assigned                U       The item that was assigned."
  - "benchmark/github-schema.graphql:106:22          subject                 U       The Node ID of the subject to modify."
  - "benchmark/github-schema.graphql:113:3           body                    U       body: String!"
  - "benchmark/github-schema.graphql:131:7           edge                    U       The edge from the subject's comment"
  - "benchmark/github-schema.graphql:131:21          subject's               U       The edge from the subject's comment connection."
  - "benchmark/github-schema.graphql:133:10          Edge                    U       commentEdge: IssueCommentEdge"
  - "benchmark/github-schema.graphql:147:15          added                   U       Represents a 'added_to_project' event on"
  - "benchmark/github-schema.graphql:147:44          given                   U       project' event on a given issue or pull request"
  - "benchmark/github-schema.graphql:149:6           Added                   U       type AddedToProjectEvent implements"
  - "benchmark/github-schema.graphql:151:3           Identifies              U       Identifies the actor who performed"
  - "benchmark/github-schema.graphql:151:28          performed               U       Identifies the actor who performed the event."
  - "benchmark/github-schema.graphql:156:18          date                    U       Identifies the date and time when the object"
  - "benchmark/github-schema.graphql:168:40          Labelable               U       input type of AddLabelsToLabelable"
  - "benchmark/github-schema.graphql:172:17          labelable               U       The id of the labelable object to add labels"
  - "benchmark/github-schema.graphql:197:21          labeled                 U       The item that was labeled."
  - "benchmark/github-schema.graphql:203:39          Card                    U       input type of AddProjectCard"
  - "benchmark/github-schema.graphql:207:29          Column                  U       Node ID of the ProjectColumn."
  - "benchmark/github-schema.graphql:212:22          card                    U       The content of the card. Must be a member of"
  - "benchmark/github-schema.graphql:212:28          Must                    U       content of the card. Must be a member of the ProjectCar"
  - "benchmark/github-schema.graphql:232:28          Column's                U       edge from the ProjectColumn's card connection."
  - "benchmark/github-schema.graphql:257:19          column                  U       The name of the column."
  - "benchmark/github-schema.graphql:307:7           relative                U       The relative path of the file to"
  - "benchmark/github-schema.graphql:337:7           newly                   U       The newly created comment."
  - "benchmark/github-schema.graphql:357:29          pertains                U       commit OID the review pertains to."
  - "benchmark/github-schema.graphql:374:14          Draft                   U       comments: [DraftPullRequestReviewComment"
  - "benchmark/github-schema.graphql:403:32          Reaction                U       utogenerated input type of AddReaction"
  - "benchmark/github-schema.graphql:412:19          emoji                   U       The name of the emoji to react with."
  - "benchmark/github-schema.graphql:412:28          react                   U       name of the emoji to react with."
  - "benchmark/github-schema.graphql:432:7           reaction                U       The reaction object."
  - "benchmark/github-schema.graphql:437:7           reactable               U       The reactable subject."
  - "benchmark/github-schema.graphql:439:12          Reactable               U       subject: Reactable"
  - "benchmark/github-schema.graphql:443:32          Star                    U       utogenerated input type of AddStar"
  - "benchmark/github-schema.graphql:447:7           Starrable               U       The Starrable ID to star."
  - "benchmark/github-schema.graphql:447:23          star                    U       The Starrable ID to star."
  - "benchmark/github-schema.graphql:449:3           starrable               U       starrableId: ID!"
  - "benchmark/github-schema.graphql:493:11          color                   U       The hex color code, without the leading"
  - "benchmark/github-schema.graphql:493:35          leading                 U       color code, without the leading '#', for the logo background"
  - "benchmark/github-schema.graphql:493:56          logo                    U       leading '#', for the logo background."
  - "benchmark/github-schema.graphql:493:61          background              U       leading '#', for the logo background."
  - "benchmark/github-schema.graphql:495:7           Background              U       logoBackgroundColor: String!"
  - "benchmark/github-schema.graphql:495:17          Color                   U       logoBackgroundColor: String!"
  - "benchmark/github-schema.graphql:513:5           slug                    U       A slug based on the name of"
  - "benchmark/github-schema.graphql:518:57          updated                 U       the object was last updated."
  - "benchmark/github-schema.graphql:533:5           cursor                  U       A cursor for use in pagination"
  - "benchmark/github-schema.graphql:533:23          pagination              U       A cursor for use in pagination."
  - "benchmark/github-schema.graphql:544:20          have                    U       An object that can have users assigned to it"
  - "benchmark/github-schema.graphql:552:5           Returns                 U       Returns the elements in the"
  - "benchmark/github-schema.graphql:552:17          elements                U       Returns the elements in the list that come"
  - "benchmark/github-schema.graphql:552:43          come                    U       elements in the list that come after the specified"
  - "benchmark/github-schema.graphql:552:48          after                   U       in the list that come after the specified cursor"
  - "benchmark/github-schema.graphql:552:58          specified               U       that come after the specified cursor."
  - "benchmark/github-schema.graphql:557:48          before                  U       in the list that come before the specified cursor"
  - "benchmark/github-schema.graphql:576:6           Assigned                U       type AssignedEvent implements Node"
  - "benchmark/github-schema.graphql:600:24          changed                 U       Represents a 'base_ref_changed' event on a given issue"
  - "benchmark/github-schema.graphql:602:13          Changed                 U       type BaseRefChangedEvent implements Node"
  - "benchmark/github-schema.graphql:621:30          pushed                  U       Represents a 'base_ref_force_pushed' event on a given pull"
  - "benchmark/github-schema.graphql:623:18          Pushed                  U       type BaseRefForcePushedEvent implements Node"
  - "benchmark/github-schema.graphql:646:15          referenced              U       PullRequest referenced by event."
  - "benchmark/github-schema.graphql:651:18          fully                   U       Identifies the fully qualified ref name for"
  - "benchmark/github-schema.graphql:651:24          qualified               U       Identifies the fully qualified ref name for the 'base"
  - "benchmark/github-schema.graphql:657:18          blame                   U       Represents a Git blame."
  - "benchmark/github-schema.graphql:659:6           Blame                   U       type Blame {"
  - "benchmark/github-schema.graphql:663:17          Range                   U       ranges: [BlameRange!]!"
  - "benchmark/github-schema.graphql:667:14          range                   U       Represents a range of information from"
  - "benchmark/github-schema.graphql:671:18          recency                 U       Identifies the recency of the change, from"
  - "benchmark/github-schema.graphql:671:67          This                    U       (new) to 10 (old). This is"
  - "benchmark/github-schema.graphql:672:3           calculated              U       calculated as a 2-quantile and"
  - "benchmark/github-schema.graphql:672:21          quantile                U       calculated as a 2-quantile and determines the length"
  - "benchmark/github-schema.graphql:672:34          determines              U       as a 2-quantile and determines the length of distance"
  - "benchmark/github-schema.graphql:672:49          length                  U       quantile and determines the length of distance between"
  - "benchmark/github-schema.graphql:672:59          distance                U       determines the length of distance between the"
  - "benchmark/github-schema.graphql:672:68          between                 U       the length of distance between the"
  - "benchmark/github-schema.graphql:673:3           median                  U       median age of all the changes"
  - "benchmark/github-schema.graphql:674:3           range's                 U       range's change."
  - "benchmark/github-schema.graphql:679:23          author                  U       Identifies the line author"
  - "benchmark/github-schema.graphql:684:7           ending                  U       The ending line for the range"
  - "benchmark/github-schema.graphql:689:7           starting                U       The starting line for the range"
  - "benchmark/github-schema.graphql:699:6           abbreviated             U       An abbreviated version of the Git object"
  - "benchmark/github-schema.graphql:720:3           Indicates               U       Indicates whether the Blob is"
  - "benchmark/github-schema.graphql:720:13          whether                 U       Indicates whether the Blob is binary or"
  - "benchmark/github-schema.graphql:720:33          binary                  U       whether the Blob is binary or text"
  - "benchmark/github-schema.graphql:722:5           Binary                  U       isBinary: Boolean!"
  - "benchmark/github-schema.graphql:725:37          truncated               U       whether the contents is truncated"
  - "benchmark/github-schema.graphql:727:5           Truncated               U       isTruncated: Boolean!"
  - "benchmark/github-schema.graphql:735:33          belongs                 U       Repository the Git object belongs to"
  - "benchmark/github-schema.graphql:740:21          null                    U       UTF8 text data or null if the Blob is binary"
  - "benchmark/github-schema.graphql:746:3           special                 U       A special type of user which takes"
  - "benchmark/github-schema.graphql:746:30          takes                   U       special type of user which takes actions on behalf of"
  - "benchmark/github-schema.graphql:746:47          behalf                  U       which takes actions on behalf of GitHub Apps."
  - "benchmark/github-schema.graphql:748:36          Uniform                 U       implements Node & Actor & UniformResourceLocatable {"
  - "benchmark/github-schema.graphql:748:51          Locatable               U       Actor & UniformResourceLocatable {"
  - "benchmark/github-schema.graphql:796:23          matching                U       A list of conflicts matching branches protection"
  - "benchmark/github-schema.graphql:796:61          other                   U       protection rule and other branch protection rules"
  - "benchmark/github-schema.graphql:818:26          Conflict                U       BranchProtectionRuleConflictConnection!"
  - "benchmark/github-schema.graphql:823:3           creator                 U       creator: Actor"
  - "benchmark/github-schema.graphql:831:3           Will                    U       Will new commits pushed to"
  - "benchmark/github-schema.graphql:831:48          dismiss                 U       to matching branches dismiss pull request review"
  - "benchmark/github-schema.graphql:831:76          approvals               U       pull request review approvals."
  - "benchmark/github-schema.graphql:833:3           dismisses               U       dismissesStaleReviews: Boolean"
  - "benchmark/github-schema.graphql:833:17          Reviews                 U       dismissesStaleReviews: Boolean!"
  - "benchmark/github-schema.graphql:837:7           admins                  U       Can admins overwrite branch protection"
  - "benchmark/github-schema.graphql:837:14          overwrite               U       Can admins overwrite branch protection."
  - "benchmark/github-schema.graphql:839:10          Enforced                U       isAdminEnforced: Boolean!"
  - "benchmark/github-schema.graphql:872:15          allowances              U       A list push allowances for this branch protection"
  - "benchmark/github-schema.graphql:874:7           Allowances              U       pushAllowances("
  - "benchmark/github-schema.graphql:894:10          Allowance               U       ): PushAllowanceConnection!"
  - "benchmark/github-schema.graphql:902:13          approving               U       Number of approving reviews required to"
  - "benchmark/github-schema.graphql:902:23          reviews                 U       Number of approving reviews required to update matching"
  - "benchmark/github-schema.graphql:902:31          required                U       of approving reviews required to update matching branches"
  - "benchmark/github-schema.graphql:904:11          Approving               U       requiredApprovingReviewCount: Int"
  - "benchmark/github-schema.graphql:907:33          contexts                U       required status check contexts that must pass for commits"
  - "benchmark/github-schema.graphql:907:47          must                    U       check contexts that must pass for commits to"
  - "benchmark/github-schema.graphql:909:22          Contexts                U       requiredStatusCheckContexts: [String]"
  - "benchmark/github-schema.graphql:914:3           requires                U       requiresApprovingReviews: Boolean"
  - "benchmark/github-schema.graphql:917:30          signed                  U       commits required to be signed."
  - "benchmark/github-schema.graphql:919:17          Signatures              U       requiresCommitSignatures: Boolean!"
  - "benchmark/github-schema.graphql:927:49          merging                 U       be up to date before merging."
  - "benchmark/github-schema.graphql:929:11          Strict                  U       requiresStrictStatusChecks: Boolean"
  - "benchmark/github-schema.graphql:932:6           pushing                 U       Is pushing to matching branches"
  - "benchmark/github-schema.graphql:932:35          restricted              U       to matching branches restricted."
  - "benchmark/github-schema.graphql:934:3           restricts               U       restrictsPushes: Boolean!"
  - "benchmark/github-schema.graphql:934:12          Pushes                  U       restrictsPushes: Boolean!"
  - "benchmark/github-schema.graphql:937:6           dismissal               U       Is dismissal of pull request reviews"
  - "benchmark/github-schema.graphql:939:18          Dismissals              U       restrictsReviewDismissals: Boolean!"
  - "benchmark/github-schema.graphql:944:9           Dismissal               U       reviewDismissalAllowances("
  - "benchmark/github-schema.graphql:968:3           conflict                U       A conflict between two branch protection"
  - "benchmark/github-schema.graphql:977:18          conflicting             U       Identifies the conflicting branch protection rule"
  - "benchmark/github-schema.graphql:992:13          edges                   U       A list of edges."
  - "benchmark/github-schema.graphql:1072:16         represent               U       The emoji to represent your status. Can either"
  - "benchmark/github-schema.graphql:1072:26         your                    U       The emoji to represent your status. Can either be"
  - "benchmark/github-schema.graphql:1072:43         either                  U       represent your status. Can either be a native Unicode"
  - "benchmark/github-schema.graphql:1072:55         native                  U       status. Can either be a native Unicode emoji or an"
  - "benchmark/github-schema.graphql:1072:62         Unicode                 U       Can either be a native Unicode emoji or an emoji name"
  - "benchmark/github-schema.graphql:1072:98         colons                  U       or an emoji name with colons, e.g., :grinning:."
  - "benchmark/github-schema.graphql:1072:113        grinning                U       with colons, e.g., :grinning:."
  - "benchmark/github-schema.graphql:1082:30         whose                   U       of the organization whose members will be allowed"
  - "benchmark/github-schema.graphql:1082:44         will                    U       organization whose members will be allowed to see the"
  - "benchmark/github-schema.graphql:1083:3          omitted                 U       omitted, the status will be"
  - "benchmark/github-schema.graphql:1083:31         publicly                U       the status will be publicly visible."
  - "benchmark/github-schema.graphql:1083:40         visible                 U       status will be publicly visible."
  - "benchmark/github-schema.graphql:1088:3          Whether                 U       Whether this status should indicate"
  - "benchmark/github-schema.graphql:1088:23         should                  U       Whether this status should indicate you are not"
  - "benchmark/github-schema.graphql:1088:30         indicate                U       Whether this status should indicate you are not fully available"
  - "benchmark/github-schema.graphql:1088:92         away                    U       GitHub, e.g., you are away."
  - "benchmark/github-schema.graphql:1090:34         false                   U       imitedAvailability: Boolean = false"
  - "benchmark/github-schema.graphql:1108:3          Your                    U       Your updated status."
  - "benchmark/github-schema.graphql:1138:21         unlabeled               U       The item that was unlabeled."
  - "benchmark/github-schema.graphql:1173:34         defaults                U       visibility of the project, defaults to false (private)."
  - "benchmark/github-schema.graphql:1193:31         populating              U       of the JobStatus for populating cloned fields."
  - "benchmark/github-schema.graphql:1193:42         cloned                  U       JobStatus for populating cloned fields."
  - "benchmark/github-schema.graphql:1206:11         Closable                U       interface Closable {"
  - "benchmark/github-schema.graphql:1208:4          true                    U       `true` if the object is closed"
  - "benchmark/github-schema.graphql:1208:60         depend                  U       definition of closed may depend on type)"
  - "benchmark/github-schema.graphql:1230:3          closable                U       closable: Closable!"
  - "benchmark/github-schema.graphql:1235:3          closer                  U       closer: Closer"
  - "benchmark/github-schema.graphql:1235:11         Closer                  U       closer: Closer"
  - "benchmark/github-schema.graphql:1320:13         Conduct                 U       The Code of Conduct for a repository"
  - "benchmark/github-schema.graphql:1335:7          formal                  U       The formal name of the Code of"
  - "benchmark/github-schema.graphql:1351:1          Collaborators           U       Collaborators affiliation level with"
  - "benchmark/github-schema.graphql:1351:15         affiliation             U       Collaborators affiliation level with a subject"
  - "benchmark/github-schema.graphql:1353:6          Collaborator            U       enum CollaboratorAffiliation {"
  - "benchmark/github-schema.graphql:1353:18         Affiliation             U       enum CollaboratorAffiliation {"
  - "benchmark/github-schema.graphql:1355:7          outside                 U       All outside collaborators of an"
  - "benchmark/github-schema.graphql:1355:15         collaborators           U       All outside collaborators of an organization-owned"
  - "benchmark/github-schema.graphql:1355:48         owned                   U       laborators of an organization-owned subject."
  - "benchmark/github-schema.graphql:1357:3          OUTSIDE                 U       OUTSIDE"
  - "benchmark/github-schema.graphql:1360:72         regardless              U       organization-owned subject, regardless of organization membership"
  - "benchmark/github-schema.graphql:1365:25         authenticated           U       All collaborators the authenticated user can see."
  - "benchmark/github-schema.graphql:1371:19         inside                  U       Types that can be inside Collection Items."
  - "benchmark/github-schema.graphql:1380:17         authored                U       The actor who authored the comment."
  - "benchmark/github-schema.graphql:1385:3          Author's                U       Author's association with the"
  - "benchmark/github-schema.graphql:1387:29         Author                  U       authorAssociation: CommentAuthorAssociation!"
  - "benchmark/github-schema.graphql:1395:12         rendered                U       The body rendered to HTML."
  - "benchmark/github-schema.graphql:1415:17         edited                  U       The actor who edited the comment."
  - "benchmark/github-schema.graphql:1421:40         includes                U       comment was edited and includes an edit with the creation"
  - "benchmark/github-schema.graphql:1421:52         edit                    U       edited and includes an edit with the creation data"
  - "benchmark/github-schema.graphql:1423:18         Edit                    U       includesCreatedEdit: Boolean!"
  - "benchmark/github-schema.graphql:1426:7          moment                  U       The moment the editor made the"
  - "benchmark/github-schema.graphql:1426:25         made                    U       The moment the editor made the last edit"
  - "benchmark/github-schema.graphql:1428:7          Edited                  U       lastEditedAt: DateTime"
  - "benchmark/github-schema.graphql:1441:13         edits                   U       A list of edits to this content."
  - "benchmark/github-schema.graphql:1443:14         Edits                   U       userContentEdits("
  - "benchmark/github-schema.graphql:1466:11         viewer                  U       Did the viewer author this comment"
  - "benchmark/github-schema.graphql:1476:47         owns                    U       the organization that owns the repository."
  - "benchmark/github-schema.graphql:1486:14         been                    U       Author has been invited to collaborate"
  - "benchmark/github-schema.graphql:1486:19         invited                 U       Author has been invited to collaborate on the"
  - "benchmark/github-schema.graphql:1486:30         collaborate             U       has been invited to collaborate on the repository."
  - "benchmark/github-schema.graphql:1488:3          COLLABORATOR            U       COLLABORATOR"
  - "benchmark/github-schema.graphql:1491:14         previously              U       Author has previously committed to the repository"
  - "benchmark/github-schema.graphql:1491:25         committed               U       Author has previously committed to the repository."
  - "benchmark/github-schema.graphql:1493:3          CONTRIBUTOR             U       CONTRIBUTOR"
  - "benchmark/github-schema.graphql:1508:3          NONE                    U       NONE"
  - "benchmark/github-schema.graphql:1512:5          possible                U       The possible errors that will prevent"
  - "benchmark/github-schema.graphql:1512:31         prevent                 U       possible errors that will prevent a user from updating"
  - "benchmark/github-schema.graphql:1512:51         updating                U       prevent a user from updating a comment."
  - "benchmark/github-schema.graphql:1514:13         Cannot                  U       enum CommentCannotUpdateReason {"
  - "benchmark/github-schema.graphql:1518:3          INSUFFICIENT            U       INSUFFICIENT_ACCESS"
  - "benchmark/github-schema.graphql:1521:3          Unable                  U       Unable to create comment because"
  - "benchmark/github-schema.graphql:1521:28         because                 U       Unable to create comment because issue is locked."
  - "benchmark/github-schema.graphql:1526:15         logged                  U       You must be logged in to update this comment"
  - "benchmark/github-schema.graphql:1528:9          REQUIRED                U       LOGIN_REQUIRED"
  - "benchmark/github-schema.graphql:1536:6          least                   U       At least one email address must"
  - "benchmark/github-schema.graphql:1541:7          cannot                  U       You cannot update this comment"
  - "benchmark/github-schema.graphql:1543:3          DENIED                  U       DENIED"
  - "benchmark/github-schema.graphql:1547:23         deleted                 U       Represents a 'comment_deleted' event on a given issue"
  - "benchmark/github-schema.graphql:1549:13         Deleted                 U       type CommentDeletedEvent implements Node"
  - "benchmark/github-schema.graphql:1577:17         additions               U       The number of additions in this commit."
  - "benchmark/github-schema.graphql:1606:5          Ordering                U       Ordering options for pull requests"
  - "benchmark/github-schema.graphql:1612:3          Authorship              U       Authorship details of the commit"
  - "benchmark/github-schema.graphql:1617:16         committer               U       Check if the committer and the author match"
  - "benchmark/github-schema.graphql:1619:13         Committer               U       authoredByCommitter: Boolean!"
  - "benchmark/github-schema.graphql:1624:11         Date                    U       authoredDate: DateTime!"
  - "benchmark/github-schema.graphql:1627:3          Fetches                 U       Fetches `git blame` information"
  - "benchmark/github-schema.graphql:1631:46         want                    U       blame information you want."
  - "benchmark/github-schema.graphql:1682:12         commited (committed)    U       Check if commited via GitHub web UI."
  - "benchmark/github-schema.graphql:1687:3          Committership           U       Committership details of the commit"
  - "benchmark/github-schema.graphql:1706:38         returned                U       options for deployments returned from the connection"
  - "benchmark/github-schema.graphql:1732:7          linear                  U       The linear commit history starting"
  - "benchmark/github-schema.graphql:1732:48         including               U       history starting from (and including) this commit, in the"
  - "benchmark/github-schema.graphql:1732:79         same                    U       this commit, in the same order as `git log`."
  - "benchmark/github-schema.graphql:1756:55         touching                U       to only show commits touching files under this path"
  - "benchmark/github-schema.graphql:1761:69         authorship              U       commits with matching authorship."
  - "benchmark/github-schema.graphql:1766:5          Allows                  U       Allows specifying a beginning"
  - "benchmark/github-schema.graphql:1766:12         specifying              U       Allows specifying a beginning time or"
  - "benchmark/github-schema.graphql:1766:25         beginning               U       Allows specifying a beginning time or date for fetching"
  - "benchmark/github-schema.graphql:1766:52         fetching                U       beginning time or date for fetching commits."
  - "benchmark/github-schema.graphql:1768:5          since                   U       since: GitTimestamp"
  - "benchmark/github-schema.graphql:1773:5          until                   U       until: GitTimestamp"
  - "benchmark/github-schema.graphql:1785:10         Body                    U       messageBody: String!"
  - "benchmark/github-schema.graphql:1793:26         headline                U       The Git commit message headline"
  - "benchmark/github-schema.graphql:1795:10         Headline                U       messageHeadline: String!"
  - "benchmark/github-schema.graphql:1848:34         present                 U       signing information, if present."
  - "benchmark/github-schema.graphql:1850:3          signature               U       signature: GitSignature"
  - "benchmark/github-schema.graphql:1850:17         Signature               U       signature: GitSignature"
  - "benchmark/github-schema.graphql:1858:31         tarball                 U       a URL to download a tarball archive for a repository"
  - "benchmark/github-schema.graphql:1859:35         these                   U       private repositories, these links are temporary"
  - "benchmark/github-schema.graphql:1859:78         five                    U       temporary and expire after five minutes."
  - "benchmark/github-schema.graphql:1859:83         minutes                 U       and expire after five minutes."
  - "benchmark/github-schema.graphql:1884:26         able                    U       Check if the viewer is able to change their subscription"
  - "benchmark/github-schema.graphql:1884:41         their                   U       viewer is able to change their subscription status"
  - "benchmark/github-schema.graphql:1889:31         watching                U       Identifies if the viewer is watching, not watching, or ignoring"
  - "benchmark/github-schema.graphql:1889:58         ignoring                U       watching, not watching, or ignoring the subscribable entity"
  - "benchmark/github-schema.graphql:1894:31         zipball                 U       a URL to download a zipball archive for a repository"
  - "benchmark/github-schema.graphql:1901:1          Specifies               U       Specifies an author for filtering"
  - "benchmark/github-schema.graphql:1901:25         filtering               U       Specifies an author for filtering Git commits."
  - "benchmark/github-schema.graphql:1906:38         precedence              U       returned. This field takes precedence over emails."
  - "benchmark/github-schema.graphql:1946:68         exists                  U       comment, if the commit exists."
  - "benchmark/github-schema.graphql:1977:45         minimized               U       not a comment has been minimized."
  - "benchmark/github-schema.graphql:1979:5          Minimized               U       isMinimized: Boolean!"
  - "benchmark/github-schema.graphql:2007:13         reactions               U       A list of reactions grouped by content left"
  - "benchmark/github-schema.graphql:2007:23         grouped                 U       A list of reactions grouped by content left on the"
  - "benchmark/github-schema.graphql:2012:13         Reactions               U       A list of Reactions left on the Issue."
  - "benchmark/github-schema.graphql:2097:35         minimize                U       the current viewer can minimize this object."
  - "benchmark/github-schema.graphql:2099:12         Minimize                U       viewerCanMinimize: Boolean!"
  - "benchmark/github-schema.graphql:2104:12         React                   U       viewerCanReact: Boolean!"
  - "benchmark/github-schema.graphql:2112:3          Reasons                 U       Reasons why the current viewer"
  - "benchmark/github-schema.graphql:2167:21         exist                   U       The comments that exist in this thread."
  - "benchmark/github-schema.graphql:2192:27         were                    U       commit the comments were made on."
  - "benchmark/github-schema.graphql:2239:29         contribution            U       Ordering options for commit contribution connections."
  - "benchmark/github-schema.graphql:2241:13         Contribution            U       input CommitContributionOrder {"
  - "benchmark/github-schema.graphql:2243:38         contributions           U       which to order commit contributions."
  - "benchmark/github-schema.graphql:2248:7          ordering                U       The ordering direction."
  - "benchmark/github-schema.graphql:2248:16         direction               U       The ordering direction."
  - "benchmark/github-schema.graphql:2250:19         Direction               U       direction: OrderDirection!"
  - "benchmark/github-schema.graphql:2254:60         ordered                 U       ntribution connections can be ordered."
  - "benchmark/github-schema.graphql:2258:38         they                    U       contributions by when they were made."
  - "benchmark/github-schema.graphql:2260:3          OCCURRED                U       OCCURRED_AT"
  - "benchmark/github-schema.graphql:2263:37         many                    U       contributions by how many commits they represent"
  - "benchmark/github-schema.graphql:2269:40         within                  U       commits made by a user within one repository."
  - "benchmark/github-schema.graphql:2271:12         Contributions           U       type CommitContributionsByRepository {"
  - "benchmark/github-schema.graphql:2273:29         each                    U       commit contributions, each representing a day."
  - "benchmark/github-schema.graphql:2273:34         representing            U       contributions, each representing a day."
  - "benchmark/github-schema.graphql:2363:59         supports                U       attachment. This parameter supports markdown."
  - "benchmark/github-schema.graphql:2401:50         such                    U       user made on GitHub, such as opening an issue"
  - "benchmark/github-schema.graphql:2401:58         opening                 U       made on GitHub, such as opening an issue."
  - "benchmark/github-schema.graphql:2406:3          example                 U       example, your own 'first issue"
  - "benchmark/github-schema.graphql:2407:3          longer                  U       longer access."
  - "benchmark/github-schema.graphql:2409:5          Restricted              U       isRestricted: Boolean!"
  - "benchmark/github-schema.graphql:2414:3          occurred                U       occurredAt: DateTime!"
  - "benchmark/github-schema.graphql:2433:3          calendar                U       A calendar of contributions made"
  - "benchmark/github-schema.graphql:2435:18         Calendar                U       type ContributionCalendar {"
  - "benchmark/github-schema.graphql:2437:23         codes                   U       A list of hex color codes used in this calendar"
  - "benchmark/github-schema.graphql:2437:56         darker                  U       in this calendar. The darker the color, the more"
  - "benchmark/github-schema.graphql:2437:78         more                    U       darker the color, the more contributions it represents"
  - "benchmark/github-schema.graphql:2437:100        represents              U       more contributions it represents."
  - "benchmark/github-schema.graphql:2439:3          colors                  U       colors: [String!]!"
  - "benchmark/github-schema.graphql:2442:3          Determine               U       Determine if the color set was"
  - "benchmark/github-schema.graphql:2442:34         chosen                  U       if the color set was chosen because it's currently"
  - "benchmark/github-schema.graphql:2442:54         currently               U       chosen because it's currently Halloween."
  - "benchmark/github-schema.graphql:2442:64         Halloween               U       because it's currently Halloween."
  - "benchmark/github-schema.graphql:2447:17         months                  U       A list of the months of contributions in"
  - "benchmark/github-schema.graphql:2449:32         Month                   U       ContributionCalendarMonth!]!"
  - "benchmark/github-schema.graphql:2457:17         weeks                   U       A list of the weeks of contributions in"
  - "benchmark/github-schema.graphql:2459:31         Week                    U       ContributionCalendarWeek!]!"
  - "benchmark/github-schema.graphql:2463:14         single                  U       Represents a single day of contributions"
  - "benchmark/github-schema.graphql:2467:95         others                  U       this day compared to others in the calendar."
  - "benchmark/github-schema.graphql:2482:42         week                    U       representing which day of the week this square represents"
  - "benchmark/github-schema.graphql:2482:82         Monday                  U       represents, e.g., 1 is Monday."
  - "benchmark/github-schema.graphql:2484:3          weekday                 U       weekday: Int!"
  - "benchmark/github-schema.graphql:2488:3          month                   U       A month of contributions in"
  - "benchmark/github-schema.graphql:2502:18         started                 U       How many weeks started in this month."
  - "benchmark/github-schema.graphql:2504:8          Weeks                   U       totalWeeks: Int!"
  - "benchmark/github-schema.graphql:2507:7          year                    U       The year the month occurred in"
  - "benchmark/github-schema.graphql:2517:7          days                    U       The days of contributions in"
  - "benchmark/github-schema.graphql:2519:15         Days                    U       contributionDays: [ContributionCalendarDay"
  - "benchmark/github-schema.graphql:2522:19         earliest                U       The date of the earliest square in this week"
  - "benchmark/github-schema.graphql:2553:61         opened                  U       contributions such as opened issues and commits created"
  - "benchmark/github-schema.graphql:2553:68         issues                  U       contributions such as opened issues and commits created"
  - "benchmark/github-schema.graphql:2561:37         included                U       repositories should be included."
  - "benchmark/github-schema.graphql:2572:7          years                   U       The years the user has been making"
  - "benchmark/github-schema.graphql:2572:31         making                  U       years the user has been making contributions with the"
  - "benchmark/github-schema.graphql:2572:61         most                    U       contributions with the most recent year first."
  - "benchmark/github-schema.graphql:2572:66         recent                  U       contributions with the most recent year first."
  - "benchmark/github-schema.graphql:2574:15         Years                   U       contributionYears: [Int!]!"
  - "benchmark/github-schema.graphql:2577:39         span                    U       this collection's time span ends in the current"
  - "benchmark/github-schema.graphql:2577:44         ends                    U       collection's time span ends in the current month"
  - "benchmark/github-schema.graphql:2579:3          does                    U       doesEndInCurrentMonth: Boolean"
  - "benchmark/github-schema.graphql:2590:3          ended                   U       endedAt: DateTime!"
  - "benchmark/github-schema.graphql:2600:47         even                    U       issue will be returned even if it was opened outside"
  - "benchmark/github-schema.graphql:2602:7          Upcoming                U       **Upcoming Change on 2019-07-0"
  - "benchmark/github-schema.graphql:2603:48         removed                 U       ignoreTimeRange` will be removed. Use a `ContributionsCollecti"
  - "benchmark/github-schema.graphql:2603:98         sufficiently            U       ributionsCollection` starting sufficiently far back"
  - "benchmark/github-schema.graphql:2603:115        back                    U       starting sufficiently far back"
  - "benchmark/github-schema.graphql:2644:3          Does                    U       Does the user have any more"
  - "benchmark/github-schema.graphql:2644:70         prior                   U       timeline that occurred prior to the collection's"
  - "benchmark/github-schema.graphql:2646:19         Past                    U       hasActivityInThePast: Boolean!"
  - "benchmark/github-schema.graphql:2649:16         there                   U       Determine if there are any contributions"
  - "benchmark/github-schema.graphql:2654:61         frame                   U       contributions in this time frame whose details"
  - "benchmark/github-schema.graphql:2661:22         collector's             U       Whether or not the collector's time span is all within"
  - "benchmark/github-schema.graphql:2663:5          Single                  U       isSingleDay: Boolean!"
  - "benchmark/github-schema.graphql:2690:5          Should                  U       Should the user's first issue"
  - "benchmark/github-schema.graphql:2690:43         excluded                U       first issue ever be excluded from the result."
  - "benchmark/github-schema.graphql:2695:28         commented               U       Should the user's most commented issue be excluded from"
  - "benchmark/github-schema.graphql:2697:12         Popular                 U       excludePopular: Boolean = false"
  - "benchmark/github-schema.graphql:2727:3          falls                   U       falls outside the collection"
  - "benchmark/github-schema.graphql:2729:3          joined                  U       joinedGitHubContribution("
  - "benchmark/github-schema.graphql:2738:6          Joined                  U       ): JoinedGitHubContribution"
  - "benchmark/github-schema.graphql:2744:3          latest                  U       latestRestrictedContributionDate"
  - "benchmark/github-schema.graphql:2748:12         different               U       to get a different collection from an earlier"
  - "benchmark/github-schema.graphql:2748:41         earlier                 U       different collection from an earlier time range that does"
  - "benchmark/github-schema.graphql:2750:7          Recent                  U       mostRecentCollectionWithActivity"
  - "benchmark/github-schema.graphql:2753:75         than                    U       an earlier time range than this one"
  - "benchmark/github-schema.graphql:2759:44         received                U       opened on GitHub that received the most comments in"
  - "benchmark/github-schema.graphql:2762:3          popular                 U       popularIssueContribution: CreatedIssu"
  - "benchmark/github-schema.graphql:2959:24         Contributed             U       totalRepositoriesWithContributedCommits: Int!"
  - "benchmark/github-schema.graphql:2964:35         Issues                  U       talRepositoriesWithContributedIssues("
  - "benchmark/github-schema.graphql:3013:15         converted               U       Represents a 'converted_note_to_issue' event"
  - "benchmark/github-schema.graphql:3015:6          Converted               U       type ConvertedNoteToIssueEvent implements"
  - "benchmark/github-schema.graphql:3034:29         Convert                 U       Autogenerated input type of ConvertProjectCardNoteToIssue"
  - "benchmark/github-schema.graphql:3038:25         convert                 U       The ProjectCard ID to convert."
  - "benchmark/github-schema.graphql:3048:41         Defaults                U       newly created issue. Defaults to the card's note text"
  - "benchmark/github-schema.graphql:3048:57         card's                  U       issue. Defaults to the card's note text."
  - "benchmark/github-schema.graphql:3083:14         relay                   U       The global relay id of the repository"
  - "benchmark/github-schema.graphql:3088:7          glob                    U       The glob-like pattern used to"
  - "benchmark/github-schema.graphql:3088:12         like                    U       The glob-like pattern used to determine"
  - "benchmark/github-schema.graphql:3088:33         determine               U       like pattern used to determine matching branches."
  - "benchmark/github-schema.graphql:3123:25         owners                  U       Are reviews from code owners required to update matching"
  - "benchmark/github-schema.graphql:3138:74         targeting               U       reviews on pull requests targeting matching branches."
  - "benchmark/github-schema.graphql:3193:49         contain                 U       attachment, which may contain markdown."
  - "benchmark/github-schema.graphql:3204:44         committing              U       contribution a user made by committing to a repository."
  - "benchmark/github-schema.graphql:3265:41         across                  U       total count of commits across days and repositories"
  - "benchmark/github-schema.graphql:3454:44         leaving                 U       contribution a user made by leaving a review on a pull request"
  - "benchmark/github-schema.graphql:3470:29         reviewed                U       pull request the user reviewed."
  - "benchmark/github-schema.graphql:3480:18         containing              U       The repository containing the pull request that"
  - "benchmark/github-schema.graphql:3541:54         creating                U       user made on GitHub by creating a repository."
  - "benchmark/github-schema.graphql:3649:22         milestone               U       The Node ID of the milestone for this issue."
  - "benchmark/github-schema.graphql:3734:48         pulled                  U       you want your changes pulled into. This should be"
  - "benchmark/github-schema.graphql:3734:79         existing                U       into. This should be an existing branch"
  - "benchmark/github-schema.graphql:3736:6          another                 U       to another repository."
  - "benchmark/github-schema.graphql:3741:26         where                   U       The name of the branch where your changes are implemented"
  - "benchmark/github-schema.graphql:3757:21         maintainers             U       Indicates whether maintainers can modify the pull"
  - "benchmark/github-schema.graphql:3759:3          maintainer              U       maintainerCanModify: Boolean ="
  - "benchmark/github-schema.graphql:3783:14         mention                 U       Represents a mention made by one issue or"
  - "benchmark/github-schema.graphql:3785:11         Referenced              U       type CrossReferencedEvent implements Node"
  - "benchmark/github-schema.graphql:3798:13         originated              U       Reference originated in a different repository"
  - "benchmark/github-schema.graphql:3815:21         Subject                 U       source: ReferencedSubject!"
  - "benchmark/github-schema.graphql:3828:58         merged                  U       closed when the source is merged."
  - "benchmark/github-schema.graphql:3834:13         encoded                 U       An ISO-8601 encoded date string."
  - "benchmark/github-schema.graphql:3834:26         string                  U       ISO-8601 encoded date string."
  - "benchmark/github-schema.graphql:3836:1          scalar                  U       scalar Date"
  - "benchmark/github-schema.graphql:3858:41         declined                U       the suggested topic is declined."
  - "benchmark/github-schema.graphql:3903:24         administrate            U       Can read, write, and administrate repos by default"
  - "benchmark/github-schema.graphql:3993:28         belonged                U       repository the issue belonged to"
  - "benchmark/github-schema.graphql:4159:15         demilestoned            U       Represents a 'demilestoned' event on a given issue"
  - "benchmark/github-schema.graphql:4161:6          Demilestoned            U       type DemilestonedEvent implements Node"
  - "benchmark/github-schema.graphql:4181:12         Milestone               U       subject: MilestoneItem!"
  - "benchmark/github-schema.graphql:4337:46         might                   U       a deployment system might need."
  - "benchmark/github-schema.graphql:4337:52         need                    U       deployment system might need."
  - "benchmark/github-schema.graphql:4339:3          payload                 U       payload: String"
  - "benchmark/github-schema.graphql:4490:3          ABANDONED               U       ABANDONED"
  - "benchmark/github-schema.graphql:4498:6          inactive                U       An inactive transient deployment"
  - "benchmark/github-schema.graphql:4498:15         transient               U       An inactive transient deployment."
  - "benchmark/github-schema.graphql:4500:3          DESTROYED               U       DESTROYED"
  - "benchmark/github-schema.graphql:4503:18         experienced             U       The deployment experienced an error."
  - "benchmark/github-schema.graphql:4515:3          INACTIVE                U       INACTIVE"
  - "benchmark/github-schema.graphql:4534:1          Describes               U       Describes the status of a given"
  - "benchmark/github-schema.graphql:4534:44         attempt                 U       of a given deployment attempt."
  - "benchmark/github-schema.graphql:4629:22         successful              U       The deployment was successful."
  - "benchmark/github-schema.graphql:4660:29         Dismiss                 U       Autogenerated input type of DismissPullRequestReview"
  - "benchmark/github-schema.graphql:4689:7          dismissed               U       The dismissed pull request review"
  - "benchmark/github-schema.graphql:4699:20         being                   U       Path to the file being commented on."
  - "benchmark/github-schema.graphql:4715:49         SCIM                    U       provisioned by SAML SSO or SCIM."
  - "benchmark/github-schema.graphql:4737:3          scim                    U       scimIdentity: ExternalIdentityScim"
  - "benchmark/github-schema.graphql:4737:33         Scim                    U       scimIdentity: ExternalIdentityScimAttributes"
  - "benchmark/github-schema.graphql:4740:50         NULL                    U       external identity. Will be NULL if this identity has"
  - "benchmark/github-schema.graphql:4740:85         claimed                 U       identity has not been claimed by an organization member"
  - "benchmark/github-schema.graphql:4808:6          Follower                U       type FollowerConnection {"
  - "benchmark/github-schema.graphql:4833:6          Following               U       type FollowingConnection {"
  - "benchmark/github-schema.graphql:4856:3          Gist                    U       A Gist."
  - "benchmark/github-schema.graphql:4860:42         gist                    U       associated with the gist"
  - "benchmark/github-schema.graphql:4899:9          maximum                 U       The maximum number of files to return"
  - "benchmark/github-schema.graphql:4931:28         starred                 U       list of users who have starred this starrable."
  - "benchmark/github-schema.graphql:4933:3          stargazers              U       stargazers("
  - "benchmark/github-schema.graphql:4958:6          Stargazer               U       ): StargazerConnection!"
  - "benchmark/github-schema.graphql:4966:21         indicating              U       Returns a boolean indicating whether the viewing"
  - "benchmark/github-schema.graphql:4966:44         viewing                 U       indicating whether the viewing user has starred this"
  - "benchmark/github-schema.graphql:4968:12         Starred                 U       viewerHasStarred: Boolean!"
  - "benchmark/github-schema.graphql:5192:35         characters              U       name encoded to remove characters that are invalid in"
  - "benchmark/github-schema.graphql:5192:55         invalid                 U       characters that are invalid in URL paths."
  - "benchmark/github-schema.graphql:5197:17         encoding                U       The gist file encoding."
  - "benchmark/github-schema.graphql:5217:7          programming             U       The programming language this file is"
  - "benchmark/github-schema.graphql:5217:41         written                 U       language this file is written in."
  - "benchmark/github-schema.graphql:5227:25         bytes                   U       The gist file size in bytes."
  - "benchmark/github-schema.graphql:5236:5          Optionally              U       Optionally truncate the returned"
  - "benchmark/github-schema.graphql:5236:16         truncate                U       Optionally truncate the returned file to"
  - "benchmark/github-schema.graphql:5262:9          gists                   U       Order gists by creation time"
  - "benchmark/github-schema.graphql:5269:3          UPDATED                 U       UPDATED_AT"
  - "benchmark/github-schema.graphql:5274:3          PUSHED                  U       PUSHED_AT"
  - "benchmark/github-schema.graphql:5292:3          Gists                   U       Gists that are public and"
  - "benchmark/github-schema.graphql:5302:25         author's                U       URL pointing to the author's public avatar."
  - "benchmark/github-schema.graphql:5312:36         authoring               U       timestamp of the Git action (authoring or committing)."
  - "benchmark/github-schema.graphql:5327:19         corresponding           U       The GitHub user corresponding to the email field."
  - "benchmark/github-schema.graphql:5327:53         Null                    U       to the email field. Null if no such user exists"
  - "benchmark/github-schema.graphql:5333:24         about                   U       Represents information about the GitHub instance"
  - "benchmark/github-schema.graphql:5337:20         that's                  U       Returns a String that's a SHA of `github-services"
  - "benchmark/github-schema.graphql:5347:39         sent                    U       that service hooks are sent from"
  - "benchmark/github-schema.graphql:5352:25         importer                U       IP addresses that the importer connects from"
  - "benchmark/github-schema.graphql:5352:34         connects                U       addresses that the importer connects from"
  - "benchmark/github-schema.graphql:5359:13         Authentication          U       isPasswordAuthenticationVerifiable: Boolean!"
  - "benchmark/github-schema.graphql:5359:27         Verifiable              U       isPasswordAuthenticationVerifiable: Boolean!"
  - "benchmark/github-schema.graphql:5362:27         Pages                   U       addresses for GitHub Pages' A records"
  - "benchmark/github-schema.graphql:5364:3          pages                   U       pagesIpAddresses: [String"
  - "benchmark/github-schema.graphql:5404:41         MIME                    U       signature (GPG or S/MIME) on a Commit or Tag"
  - "benchmark/github-schema.graphql:5413:3          True                    U       True if the signature is"
  - "benchmark/github-schema.graphql:5423:3          ASCII                   U       ASCII-armored signature header"
  - "benchmark/github-schema.graphql:5423:9          armored                 U       ASCII-armored signature header from"
  - "benchmark/github-schema.graphql:5434:11         otherwise               U       GitHub, otherwise represents reason why"
  - "benchmark/github-schema.graphql:5434:56         considered              U       reason why signature is considered invalid."
  - "benchmark/github-schema.graphql:5441:6          Signed                  U       wasSignedByGitHub: Boolean!"
  - "benchmark/github-schema.graphql:5454:3          Invalid                 U       Invalid signature"
  - "benchmark/github-schema.graphql:5456:3          INVALID                 U       INVALID"
  - "benchmark/github-schema.graphql:5459:3          Malformed               U       Malformed signature"
  - "benchmark/github-schema.graphql:5461:3          MALFORMED               U       MALFORMED_SIG"
  - "benchmark/github-schema.graphql:5466:3          UNKNOWN                 U       UNKNOWN_KEY"
  - "benchmark/github-schema.graphql:5474:26         unverified              U       Email used for signing unverified on GitHub"
  - "benchmark/github-schema.graphql:5476:3          UNVERIFIED              U       UNVERIFIED_EMAIL"
  - "benchmark/github-schema.graphql:5484:3          Unknown                 U       Unknown signature type"
  - "benchmark/github-schema.graphql:5489:3          Unsigned                U       Unsigned"
  - "benchmark/github-schema.graphql:5491:3          UNSIGNED                U       UNSIGNED"
  - "benchmark/github-schema.graphql:5494:3          Internal                U       Internal error - the GPG verification"
  - "benchmark/github-schema.graphql:5494:52         unavailable             U       verification service is unavailable at the moment"
  - "benchmark/github-schema.graphql:5496:3          GPGVERIFY               U       GPGVERIFY_UNAVAILABLE"
  - "benchmark/github-schema.graphql:5496:13         UNAVAILABLE             U       GPGVERIFY_UNAVAILABLE"
  - "benchmark/github-schema.graphql:5499:49         misbehaved              U       verification service misbehaved"
  - "benchmark/github-schema.graphql:5504:13         flags                   U       The usage flags for the key that signed"
  - "benchmark/github-schema.graphql:5504:54         allow                   U       that signed this don't allow signing"
  - "benchmark/github-schema.graphql:5509:15         expired                 U       Signing key expired"
  - "benchmark/github-schema.graphql:5511:3          EXPIRED                 U       EXPIRED_KEY"
  - "benchmark/github-schema.graphql:5514:51         checking                U       certificate revocation checking"
  - "benchmark/github-schema.graphql:5516:3          OCSP                    U       OCSP_PENDING"
  - "benchmark/github-schema.graphql:5519:9          siganture               U       Valid siganture, though certificate"
  - "benchmark/github-schema.graphql:5519:20         though                  U       Valid siganture, though certificate revocation"
  - "benchmark/github-schema.graphql:5524:34         chain                   U       signing certificate or its chain could not be verified"
  - "benchmark/github-schema.graphql:5524:40         could                   U       certificate or its chain could not be verified"
  - "benchmark/github-schema.graphql:5529:46         revoked                 U       ertificates in chain has been revoked"
  - "benchmark/github-schema.graphql:5531:8          REVOKED                 U       OCSP_REVOKED"
  - "benchmark/github-schema.graphql:5540:34         Unlike                  U       encoded date string. Unlike the DateTime type, GitTimesta"
  - "benchmark/github-schema.graphql:5658:24         restored                U       Represents a 'head_ref_restored' event on a given pull"
  - "benchmark/github-schema.graphql:5660:13         Restored                U       type HeadRefRestoredEvent implements Node"
  - "benchmark/github-schema.graphql:5684:30         authentication          U       possible states in which authentication can be configured with"
  - "benchmark/github-schema.graphql:5684:52         configured              U       authentication can be configured with an identity provider"
  - "benchmark/github-schema.graphql:5688:62         enforced                U       provider is configured and enforced."
  - "benchmark/github-schema.graphql:5690:3          ENFORCED                U       ENFORCED"
  - "benchmark/github-schema.graphql:5695:3          CONFIGURED              U       CONFIGURED"
  - "benchmark/github-schema.graphql:5700:3          UNCONFIGURED            U       UNCONFIGURED"
  - "benchmark/github-schema.graphql:5728:13         columns                 U       A list of columns containing issues and"
  - "benchmark/github-schema.graphql:5739:15         place                   U       An Issue is a place to discuss ideas, enhancement"
  - "benchmark/github-schema.graphql:5739:24         discuss                 U       Issue is a place to discuss ideas, enhancements"
  - "benchmark/github-schema.graphql:5739:32         ideas                   U       is a place to discuss ideas, enhancements, tasks"
  - "benchmark/github-schema.graphql:5739:39         enhancements            U       place to discuss ideas, enhancements, tasks, and bugs for"
  - "benchmark/github-schema.graphql:5739:64         bugs                    U       enhancements, tasks, and bugs for a project."
  - "benchmark/github-schema.graphql:5741:107        Lockable                U       pdatableComment & Labelable & Lockable & Reactable & RepositoryNode"
  - "benchmark/github-schema.graphql:5743:19         conversation            U       Reason that the conversation was locked."
  - "benchmark/github-schema.graphql:5904:28         participating           U       list of Users that are participating in the Issue conversation"
  - "benchmark/github-schema.graphql:5906:3          participants            U       participants("
  - "benchmark/github-schema.graphql:5929:19         cards                   U       List of project cards associated with this"
  - "benchmark/github-schema.graphql:5931:10         Cards                   U       projectCards("
  - "benchmark/github-schema.graphql:5953:15         archived                U       A list of archived states to filter the"
  - "benchmark/github-schema.graphql:5955:33         Archived                U       archivedStates: [ProjectCardArchivedState]"
  - "benchmark/github-schema.graphql:6058:5          Skips                   U       Skips the first _n_ elements"
  - "benchmark/github-schema.graphql:6060:5          skip                    U       skip: Int"
  - "benchmark/github-schema.graphql:6482:1          Ways                    U       Ways in which to filter lists"
  - "benchmark/github-schema.graphql:6502:39         mentioned               U       where the given name is mentioned in the issue."
  - "benchmark/github-schema.graphql:6507:34         argument                U       issues by given milestone argument. If an string representation"
  - "benchmark/github-schema.graphql:6507:57         representation          U       argument. If an string representation of an"
  - "benchmark/github-schema.graphql:6508:14         passed                  U       integer is passed, it should refer to"
  - "benchmark/github-schema.graphql:6508:32         refer                   U       is passed, it should refer to a milestone by its"
  - "benchmark/github-schema.graphql:6519:15         filtered                U       List issues filtered by the list of states"
  - "benchmark/github-schema.graphql:6530:46         upon                    U       issues can be ordered upon return."
  - "benchmark/github-schema.graphql:6574:22         observing               U       The channel ID for observing issue updates."
  - "benchmark/github-schema.graphql:6579:22         marking                 U       The channel ID for marking an issue as read."
  - "benchmark/github-schema.graphql:6581:3          MARKASREAD              U       MARKASREAD"
  - "benchmark/github-schema.graphql:6599:20         still                   U       An issue that is still open"
  - "benchmark/github-schema.graphql:6642:5          Reopened                U       | ReopenedEvent"
  - "benchmark/github-schema.graphql:6644:5          Unsubscribed            U       | UnsubscribedEvent"
  - "benchmark/github-schema.graphql:6647:5          Unassigned              U       | UnassignedEvent"
  - "benchmark/github-schema.graphql:6648:5          Labeled                 U       | LabeledEvent"
  - "benchmark/github-schema.graphql:6649:5          Unlabeled               U       | UnlabeledEvent"
  - "benchmark/github-schema.graphql:6651:5          Milestoned              U       | MilestonedEvent"
  - "benchmark/github-schema.graphql:6653:5          Renamed                 U       | RenamedTitleEvent"
  - "benchmark/github-schema.graphql:6655:5          Unlocked                U       | UnlockedEvent"
  - "benchmark/github-schema.graphql:6656:5          Transferred             U       | TransferredEvent"
  - "benchmark/github-schema.graphql:6687:5          Mentioned               U       | MentionedEvent"
  - "benchmark/github-schema.graphql:6689:5          Moved                   U       | MovedColumnsInProjectEvent"
  - "benchmark/github-schema.graphql:6689:10         Columns                 U       | MovedColumnsInProjectEvent"
  - "benchmark/github-schema.graphql:6690:5          Pinned                  U       | PinnedEvent"
  - "benchmark/github-schema.graphql:6692:5          Removed                 U       | RemovedFromProjectEvent"
  - "benchmark/github-schema.graphql:6701:5          Unpinned                U       | UnpinnedEvent"
  - "benchmark/github-schema.graphql:6714:39         applying                U       count of items after applying `before` and `after"
  - "benchmark/github-schema.graphql:6724:99         slicing                 U       first`/`last`/`skip` slicing."
  - "benchmark/github-schema.graphql:6760:25         found                   U       possible item types found in a timeline."
  - "benchmark/github-schema.graphql:6771:9          REFERENCED              U       CROSS_REFERENCED_EVENT"
  - "benchmark/github-schema.graphql:6776:3          ADDED                   U       ADDED_TO_PROJECT_EVENT"
  - "benchmark/github-schema.graphql:6781:3          ASSIGNED                U       ASSIGNED_EVENT"
  - "benchmark/github-schema.graphql:6791:11         DELETED                 U       COMMENT_DELETED_EVENT"
  - "benchmark/github-schema.graphql:6796:3          CONVERTED               U       CONVERTED_NOTE_TO_ISSUE_EVENT"
  - "benchmark/github-schema.graphql:6801:3          DEMILESTONED            U       DEMILESTONED_EVENT"
  - "benchmark/github-schema.graphql:6806:3          LABELED                 U       LABELED_EVENT"
  - "benchmark/github-schema.graphql:6816:3          MENTIONED               U       MENTIONED_EVENT"
  - "benchmark/github-schema.graphql:6819:17         milestoned              U       Represents a 'milestoned' event on a given issue"
  - "benchmark/github-schema.graphql:6821:3          MILESTONED              U       MILESTONED_EVENT"
  - "benchmark/github-schema.graphql:6824:17         moved                   U       Represents a 'moved_columns_in_project'"
  - "benchmark/github-schema.graphql:6826:3          MOVED                   U       MOVED_COLUMNS_IN_PROJECT_EVENT"
  - "benchmark/github-schema.graphql:6826:9          COLUMNS                 U       MOVED_COLUMNS_IN_PROJECT_EVENT"
  - "benchmark/github-schema.graphql:6829:17         pinned                  U       Represents a 'pinned' event on a given issue"
  - "benchmark/github-schema.graphql:6831:3          PINNED                  U       PINNED_EVENT"
  - "benchmark/github-schema.graphql:6841:3          REMOVED                 U       REMOVED_FROM_PROJECT_EVENT"
  - "benchmark/github-schema.graphql:6844:17         renamed                 U       Represents a 'renamed' event on a given issue"
  - "benchmark/github-schema.graphql:6846:3          RENAMED                 U       RENAMED_TITLE_EVENT"
  - "benchmark/github-schema.graphql:6849:17         reopened                U       Represents a 'reopened' event on any `Closable"
  - "benchmark/github-schema.graphql:6851:3          REOPENED                U       REOPENED_EVENT"
  - "benchmark/github-schema.graphql:6859:17         transferred             U       Represents a 'transferred' event on a given issue"
  - "benchmark/github-schema.graphql:6861:3          TRANSFERRED             U       TRANSFERRED_EVENT"
  - "benchmark/github-schema.graphql:6864:18         unassigned              U       Represents an 'unassigned' event on any assignable"
  - "benchmark/github-schema.graphql:6866:3          UNASSIGNED              U       UNASSIGNED_EVENT"
  - "benchmark/github-schema.graphql:6871:3          UNLABELED               U       UNLABELED_EVENT"
  - "benchmark/github-schema.graphql:6874:18         unlocked                U       Represents an 'unlocked' event on a given issue"
  - "benchmark/github-schema.graphql:6876:3          UNLOCKED                U       UNLOCKED_EVENT"
  - "benchmark/github-schema.graphql:6884:18         unpinned                U       Represents an 'unpinned' event on a given issue"
  - "benchmark/github-schema.graphql:6886:3          UNPINNED                U       UNPINNED_EVENT"
  - "benchmark/github-schema.graphql:6889:18         unsubscribed            U       Represents an 'unsubscribed' event on a given `Subscribab"
  - "benchmark/github-schema.graphql:6891:3          UNSUBSCRIBED            U       UNSUBSCRIBED_EVENT"
  - "benchmark/github-schema.graphql:6927:13         categorizing            U       A label for categorizing Issues or Milestones"
  - "benchmark/github-schema.graphql:6927:36         Milestones              U       categorizing Issues or Milestones with a given Repository"
  - "benchmark/github-schema.graphql:6941:5          brief                   U       A brief description of this"
  - "benchmark/github-schema.graphql:6971:5          Filtering               U       Filtering options for issues returned"
  - "benchmark/github-schema.graphql:7185:11         languages               U       A list of languages associated with the"
  - "benchmark/github-schema.graphql:7257:7          full                    U       The full text of the license"
  - "benchmark/github-schema.graphql:7267:5          human                   U       A human-readable description"
  - "benchmark/github-schema.graphql:7267:11         readable                U       A human-readable description of the license"
  - "benchmark/github-schema.graphql:7272:33         featured                U       the license should be featured"
  - "benchmark/github-schema.graphql:7277:33         displayed               U       the license should be displayed in license pickers"
  - "benchmark/github-schema.graphql:7277:54         pickers                 U       displayed in license pickers"
  - "benchmark/github-schema.graphql:7279:3          hidden                  U       hidden: Boolean!"
  - "benchmark/github-schema.graphql:7283:3          Instructions            U       Instructions on how to implement"
  - "benchmark/github-schema.graphql:7285:3          implementation          U       implementation: String"
  - "benchmark/github-schema.graphql:7293:7          limitations             U       The limitations set by the license"
  - "benchmark/github-schema.graphql:7303:3          Customary               U       Customary short name if applicable"
  - "benchmark/github-schema.graphql:7303:27         applicable              U       Customary short name if applicable (e.g, GPLv3)"
  - "benchmark/github-schema.graphql:7305:3          nickname                U       nickname: String"
  - "benchmark/github-schema.graphql:7313:28         pseudo                  U       Whether the license is a pseudo-license placeholder"
  - "benchmark/github-schema.graphql:7313:43         placeholder             U       is a pseudo-license placeholder (e.g., other, no-license"
  - "benchmark/github-schema.graphql:7379:44         optional                U       conversation was locked (optional)."
  - "benchmark/github-schema.graphql:7386:3          lockable                U       lockable: Lockable!"
  - "benchmark/github-schema.graphql:7425:14         reasons                 U       The possible reasons that an issue or pull"
  - "benchmark/github-schema.graphql:7434:73         heated                  U       conversation was too heated."
  - "benchmark/github-schema.graphql:7436:7          HEATED                  U       TOO_HEATED"
  - "benchmark/github-schema.graphql:7439:69         resolved                U       the conversation was resolved."
  - "benchmark/github-schema.graphql:7441:3          RESOLVED                U       RESOLVED"
  - "benchmark/github-schema.graphql:7444:69         spam                    U       the conversation was spam."
  - "benchmark/github-schema.graphql:7446:3          SPAM                    U       SPAM"
  - "benchmark/github-schema.graphql:7450:24         attribution             U       placeholder user for attribution of imported data on"
  - "benchmark/github-schema.graphql:7452:6          Mannequin               U       type Mannequin implements Node & Actor"
  - "benchmark/github-schema.graphql:7505:41         listed                  U       description of how apps listed in this category work"
  - "benchmark/github-schema.graphql:7526:52         secondary               U       listings have this as their secondary category."
  - "benchmark/github-schema.graphql:7551:38         site                    U       listing owner's company site."
  - "benchmark/github-schema.graphql:7556:21         configuring             U       The HTTP path for configuring access to the listing"
  - "benchmark/github-schema.graphql:7566:24         documentation           U       URL to the listing's documentation."
  - "benchmark/github-schema.graphql:7581:17         introductory            U       The listing's introductory description."
  - "benchmark/github-schema.graphql:7591:33         submitted               U       this listing has been submitted for review from GitHub"
  - "benchmark/github-schema.graphql:7593:14         Been                    U       hasApprovalBeenRequested: Boolean!"
  - "benchmark/github-schema.graphql:7594:6          deprecated              U       @deprecated("
  - "benchmark/github-schema.graphql:7595:97         instead                 U       VerificationPendingFromDraft` instead. Removal on 2019-10"
  - "benchmark/github-schema.graphql:7595:106        Removal                 U       ionPendingFromDraft` instead. Removal on 2019-10-01 UTC.\""
  - "benchmark/github-schema.graphql:7599:48         trial                   U       any plans with a free trial?"
  - "benchmark/github-schema.graphql:7601:19         Trial                   U       hasPublishedFreeTrialPlans: Boolean!"
  - "benchmark/github-schema.graphql:7620:37         viewer's                U       install the product to the viewer's account or organization"
  - "benchmark/github-schema.graphql:7622:3          installation            U       installationUrl: URI"
  - "benchmark/github-schema.graphql:7625:39         installed               U       listing's app has been installed for the current viewer"
  - "benchmark/github-schema.graphql:7627:15         Viewer                  U       installedForViewer: Boolean!"
  - "benchmark/github-schema.graphql:7630:33         approved                U       this listing has been approved for display in the Marketplac"
  - "benchmark/github-schema.graphql:7632:5          Approved                U       isApproved: Boolean!"
  - "benchmark/github-schema.graphql:7645:5          Delisted                U       isDelisted: Boolean!"
  - "benchmark/github-schema.graphql:7651:36         editable                U       listing is still an editable draft that has not been"
  - "benchmark/github-schema.graphql:7651:45         draft                   U       is still an editable draft that has not been submitted"
  - "benchmark/github-schema.graphql:7657:73         paid                    U       available as part of a paid plan."
  - "benchmark/github-schema.graphql:7659:5          Paid                    U       isPaid: Boolean!"
  - "benchmark/github-schema.graphql:7674:5          Unverified              U       isUnverified: Boolean!"
  - "benchmark/github-schema.graphql:7706:17         pixels                  U       The size in pixels of the resulting square"
  - "benchmark/github-schema.graphql:7717:17         very                    U       The listing's very short description without"
  - "benchmark/github-schema.graphql:7717:50         trailing                U       description without a trailing period or ampersands"
  - "benchmark/github-schema.graphql:7717:69         ampersands              U       a trailing period or ampersands."
  - "benchmark/github-schema.graphql:7719:3          normalized              U       normalizedShortDescription: String"
  - "benchmark/github-schema.graphql:7727:26         describes               U       The category that best describes the listing."
  - "benchmark/github-schema.graphql:7732:54         empty                   U       policy, may return an empty string for listings"
  - "benchmark/github-schema.graphql:7732:92         require                 U       listings that do not require a privacy policy URL"
  - "benchmark/github-schema.graphql:7742:30         screenshots             U       URLs for the listing's screenshots."
  - "benchmark/github-schema.graphql:7747:6          alternate               U       An alternate category that describes"
  - "benchmark/github-schema.graphql:7772:3          Either                  U       Either a URL or an email address"
  - "benchmark/github-schema.graphql:7798:26         delist                  U       Can the current viewer delist this Marketplace listing"
  - "benchmark/github-schema.graphql:7800:12         Delist                  U       viewerCanDelist: Boolean!"
  - "benchmark/github-schema.graphql:7820:9          becomes                 U       so it becomes editable again."
  - "benchmark/github-schema.graphql:7820:26         again                   U       it becomes editable again."
  - "benchmark/github-schema.graphql:7822:12         Redraft                 U       viewerCanRedraft: Boolean!"
  - "benchmark/github-schema.graphql:7825:61         returning               U       Marketplace listing by returning it to"
  - "benchmark/github-schema.graphql:7826:30         rejecting               U       editable draft state or rejecting it entirely."
  - "benchmark/github-schema.graphql:7826:43         entirely                U       state or rejecting it entirely."
  - "benchmark/github-schema.graphql:7839:12         Purchased               U       viewerHasPurchased: Boolean!"
  - "benchmark/github-schema.graphql:7842:37         purchased               U       the current user has purchased a subscription to this"
  - "benchmark/github-schema.graphql:7848:46         administer              U       viewer role allow them to administer this Marketplace listing"
  - "benchmark/github-schema.graphql:7854:1          Look                    U       Look up Marketplace Listings"
  - "benchmark/github-schema.graphql:7896:17         Statusable              U       interface MemberStatusable {"
  - "benchmark/github-schema.graphql:7961:3          CONFLICTING             U       CONFLICTING"
  - "benchmark/github-schema.graphql:7972:6          Merged                  U       type MergedEvent implements Node"
  - "benchmark/github-schema.graphql:8037:3          expected                U       expectedHeadOid: GitObjectID"
  - "benchmark/github-schema.graphql:8302:22         milestones              U       The field to order milestones by."
  - "benchmark/github-schema.graphql:8319:7          DATE                    U       DUE_DATE"
  - "benchmark/github-schema.graphql:8364:15         Reported                U       classifier: ReportedContentClassifiers!"
  - "benchmark/github-schema.graphql:8408:3          Place                   U       Place the new card after the"
  - "benchmark/github-schema.graphql:8469:41         mutations               U       implementing GraphQL mutations."
  - "benchmark/github-schema.graphql:8473:3          Applies                 U       Applies a suggested topic to"
  - "benchmark/github-schema.graphql:8480:3          Adds                    U       Adds assignees to an assignable"
  - "benchmark/github-schema.graphql:8499:72         provided                U       contentId` or `note` must be provided but **not** both."
  - "benchmark/github-schema.graphql:8499:93         both                    U       provided but **not** both."
  - "benchmark/github-schema.graphql:8538:3          Clears                  U       Clears all labels from a labelable"
  - "benchmark/github-schema.graphql:8545:3          Creates                 U       Creates a new project by cloning"
  - "benchmark/github-schema.graphql:8545:28         cloning                 U       Creates a new project by cloning configuration from an"
  - "benchmark/github-schema.graphql:8589:3          Rejects                 U       Rejects a suggested topic for"
  - "benchmark/github-schema.graphql:8603:3          Deletes                 U       Deletes an Issue object."
  - "benchmark/github-schema.graphql:8644:3          Dismisses               U       Dismisses an approved or rejected"
  - "benchmark/github-schema.graphql:8661:3          Moves                   U       Moves a project card to another"
  - "benchmark/github-schema.graphql:8671:3          Removes                 U       Removes assignees from an assignable"
  - "benchmark/github-schema.graphql:8685:19         collaborator            U       Removes outside collaborator from all repositories"
  - "benchmark/github-schema.graphql:8687:9          Outside                 U       removeOutsideCollaborator("
  - "benchmark/github-schema.graphql:8702:3          Reopen                  U       Reopen a issue."
  - "benchmark/github-schema.graphql:8704:3          reopen                  U       reopenIssue(input: ReopenIssueInput"
  - "benchmark/github-schema.graphql:8717:3          Marks                   U       Marks a review thread as resolved"
  - "benchmark/github-schema.graphql:8724:3          Submits                 U       Submits a pending pull request"
  - "benchmark/github-schema.graphql:8736:3          Unmark                  U       Unmark an issue as a duplicate"
  - "benchmark/github-schema.graphql:8736:24         duplicate               U       Unmark an issue as a duplicate of another issue."
  - "benchmark/github-schema.graphql:8738:3          unmark                  U       unmarkIssueAsDuplicate("
  - "benchmark/github-schema.graphql:8738:16         Duplicate               U       unmarkIssueAsDuplicate("
  - "benchmark/github-schema.graphql:8743:28         unresolved              U       Marks a review thread as unresolved."
  - "benchmark/github-schema.graphql:8745:3          unresolve               U       unresolveReviewThread("
  - "benchmark/github-schema.graphql:8746:12         Unresolve               U       input: UnresolveReviewThreadInput!"
  - "benchmark/github-schema.graphql:8803:38         subjects                U       state for subscribable subjects."
  - "benchmark/github-schema.graphql:8808:3          Replaces                U       Replaces the repository's topics"
  - "benchmark/github-schema.graphql:8824:1          Possible                U       Possible directions in which"
  - "benchmark/github-schema.graphql:8824:10         directions              U       Possible directions in which to order a"
  - "benchmark/github-schema.graphql:8828:16         ascending               U       Specifies an ascending order for a given `orderBy"
  - "benchmark/github-schema.graphql:8833:15         descending              U       Specifies a descending order for a given `orderBy"
  - "benchmark/github-schema.graphql:8841:45         Registry                U       implements Node & Actor & RegistryPackageOwner & RegistryPackage"
  - "benchmark/github-schema.graphql:8845:6          Pinnable                U       anyPinnableItems("
  - "benchmark/github-schema.graphql:8847:22         particular              U       Filter to only a particular kind of pinnable item"
  - "benchmark/github-schema.graphql:8847:33         kind                    U       to only a particular kind of pinnable item."
  - "benchmark/github-schema.graphql:8847:41         pinnable                U       a particular kind of pinnable item."
  - "benchmark/github-schema.graphql:8884:3          Showcases               U       Showcases a selection of repositories"
  - "benchmark/github-schema.graphql:8885:36         selected                U       curated or that have been selected automatically based"
  - "benchmark/github-schema.graphql:8885:45         automatically           U       that have been selected automatically based on popularity"
  - "benchmark/github-schema.graphql:8885:68         popularity              U       automatically based on popularity."
  - "benchmark/github-schema.graphql:8887:7          Showcase                U       itemShowcase: ProfileItemShowcase"
  - "benchmark/github-schema.graphql:9062:14         Remaining               U       pinnedItemsRemaining: Int!"
  - "benchmark/github-schema.graphql:9069:39         according               U       filters repositories according to privacy"
  - "benchmark/github-schema.graphql:9083:5          affiliations            U       affiliations: [RepositoryAffiliation"
  - "benchmark/github-schema.graphql:9088:32         viewed                  U       organization or user being viewed owns."
  - "benchmark/github-schema.graphql:9090:10         Affiliations            U       ownerAffiliations: [RepositoryAffiliation"
  - "benchmark/github-schema.graphql:9122:3          Find                    U       Find project by number."
  - "benchmark/github-schema.graphql:9126:27         find                    U       The project number to find."
  - "benchmark/github-schema.graphql:9141:49         searching               U       projects by, currently only searching by name."
  - "benchmark/github-schema.graphql:9235:69         forks                   U       to whether they are forks of another repository"
  - "benchmark/github-schema.graphql:9251:60         managers                U       all members, billing managers, and outside"
  - "benchmark/github-schema.graphql:9296:10         logins                  U       User logins to filter by"
  - "benchmark/github-schema.graphql:9298:9          Logins                  U       userLogins: [String!]"
  - "benchmark/github-schema.graphql:9306:37         mapped                  U       filters teams that are mapped to an LDAP Group (Enterprise"
  - "benchmark/github-schema.graphql:9308:9          Mapped                  U       ldapMapped: Boolean"
  - "benchmark/github-schema.graphql:9311:14         restrict                U       If true, restrict to only root teams"
  - "benchmark/github-schema.graphql:9352:19         adminable               U       Organization is adminable by the viewer."
  - "benchmark/github-schema.graphql:9354:12         Administer              U       viewerCanAdminister: Boolean!"
  - "benchmark/github-schema.graphql:9463:45         Provder                 U       used by the Identity Provder to sign assertions and"
  - "benchmark/github-schema.graphql:9463:61         assertions              U       Identity Provder to sign assertions and responses."
  - "benchmark/github-schema.graphql:9463:76         responses               U       sign assertions and responses."
  - "benchmark/github-schema.graphql:9468:7          Issuer                  U       The Issuer Entity ID for the SAML"
  - "benchmark/github-schema.graphql:9470:3          issuer                  U       issuer: String"
  - "benchmark/github-schema.graphql:9511:3          invitee                 U       invitee: User"
  - "benchmark/github-schema.graphql:9516:3          inviter                 U       inviter: User!"
  - "benchmark/github-schema.graphql:9589:14         previous                U       The user's previous role will be reinstated"
  - "benchmark/github-schema.graphql:9589:36         reinstated              U       previous role will be reinstated."
  - "benchmark/github-schema.graphql:9591:3          REINSTATE               U       REINSTATE"
  - "benchmark/github-schema.graphql:9669:18         administrator           U       The user is an administrator of the organization"
  - "benchmark/github-schema.graphql:9679:8          paginating              U       When paginating forwards, the cursor"
  - "benchmark/github-schema.graphql:9679:19         forwards                U       When paginating forwards, the cursor to continue"
  - "benchmark/github-schema.graphql:9681:6          Cursor                  U       endCursor: String"
  - "benchmark/github-schema.graphql:9689:19         backwards               U       When paginating backwards, are there more items"
  - "benchmark/github-schema.graphql:9691:6          Previous                U       hasPreviousPage: Boolean!"
  - "benchmark/github-schema.graphql:9702:17         Granter                 U       union PermissionGranter = Organization | Repository"
  - "benchmark/github-schema.graphql:9714:39         granted                 U       access this source has granted to the user."
  - "benchmark/github-schema.graphql:9796:3          GIST                    U       GIST"
  - "benchmark/github-schema.graphql:9826:3          curatable               U       A curatable list of repositories"
  - "benchmark/github-schema.graphql:9826:34         relating                U       list of repositories relating to a repository owner"
  - "benchmark/github-schema.graphql:9827:4          showing                 U       to showing the most popular repositories"
  - "benchmark/github-schema.graphql:9836:37         showcase                U       repositories and gists in the showcase. If the profile owner"
  - "benchmark/github-schema.graphql:9837:17         those                   U       pinned items, those will be returned. Otherwise"
  - "benchmark/github-schema.graphql:9837:41         Otherwise               U       those will be returned. Otherwise, the profile owner's"
  - "benchmark/github-schema.graphql:9981:43         notes                   U       issues, pull requests and notes within a project owner"
  - "benchmark/github-schema.graphql:10035:17        originally              U       The actor who originally created the project"
  - "benchmark/github-schema.graphql:10056:24        Currently               U       The project's owner. Currently limited to repositories"
  - "benchmark/github-schema.graphql:10121:69        belong                  U       under. A card may only belong to one"
  - "benchmark/github-schema.graphql:10123:66        Once                    U       associated with a column. Once cards are"
  - "benchmark/github-schema.graphql:10124:43        become                  U       column, they will not become pending in the future"
  - "benchmark/github-schema.graphql:10160:20        contains                U       The project that contains this card."
  - "benchmark/github-schema.graphql:10192:3         ARCHIVED                U       ARCHIVED"
  - "benchmark/github-schema.graphql:10241:24        owning                  U       issue or PR and its owning repository to be used"
  - "benchmark/github-schema.graphql:10261:1         Various                 U       Various content states of a"
  - "benchmark/github-schema.graphql:10275:15        redacted                U       The card is redacted."
  - "benchmark/github-schema.graphql:10277:3         REDACTED                U       REDACTED"
  - "benchmark/github-schema.graphql:10326:15        column's                U       The project column's name."
  - "benchmark/github-schema.graphql:10336:7         semantic                U       The semantic purpose of the column"
  - "benchmark/github-schema.graphql:10336:16        purpose                 U       The semantic purpose of the column"
  - "benchmark/github-schema.graphql:10338:25        Purpose                 U       purpose: ProjectColumnPurpose"
  - "benchmark/github-schema.graphql:10417:60        done                    U       todo, in progress, or done."
  - "benchmark/github-schema.graphql:10421:41        worked                  U       contains cards still to be worked on"
  - "benchmark/github-schema.graphql:10433:3         DONE                    U       DONE"
  - "benchmark/github-schema.graphql:10613:7         fingerprint             U       The fingerprint for this PublicKey"
  - "benchmark/github-schema.graphql:10955:62        existence               U       merged based on the existence of merge conflicts."
  - "benchmark/github-schema.graphql:11015:40        generated               U       GitHub automatically generated to test if this pull"
  - "benchmark/github-schema.graphql:11020:3         potential               U       potentialMergeCommit: Commit"
  - "benchmark/github-schema.graphql:11108:21        reverting               U       The HTTP path for reverting this pull request."
  - "benchmark/github-schema.graphql:11110:3         revert                  U       revertResourcePath: URI!"
  - "benchmark/github-schema.graphql:11208:13        reviewer                U       A list of reviewer suggestions based on"
  - "benchmark/github-schema.graphql:11208:62        past                    U       on commit history and past review comments."
  - "benchmark/github-schema.graphql:11210:12        Reviewers               U       suggestedReviewers: [SuggestedReviewer"
  - "benchmark/github-schema.graphql:11210:24        Suggested               U       suggestedReviewers: [SuggestedReviewer]!"
  - "benchmark/github-schema.graphql:11210:33        Reviewer                U       suggestedReviewers: [SuggestedReviewer]!"
  - "benchmark/github-schema.graphql:11705:39        plain                   U       this review rendered as plain text."
  - "benchmark/github-schema.graphql:11773:5         Behalf                  U       onBehalfOf("
  - "benchmark/github-schema.graphql:11976:12        hunk                    U       The diff hunk to which the comment"
  - "benchmark/github-schema.graphql:11976:38        applies                 U       to which the comment applies."
  - "benchmark/github-schema.graphql:11978:7         Hunk                    U       diffHunk: String!"
  - "benchmark/github-schema.graphql:11983:3         drafted                 U       draftedAt: DateTime!"
  - "benchmark/github-schema.graphql:12012:18        original                U       Identifies the original commit associated with"
  - "benchmark/github-schema.graphql:12022:39        outdated                U       the comment body is outdated"
  - "benchmark/github-schema.graphql:12229:3         SUBMITTED               U       SUBMITTED"
  - "benchmark/github-schema.graphql:12317:35        explicit                U       general feedback without explicit approval."
  - "benchmark/github-schema.graphql:12327:32        addressed               U       feedback that must be addressed before merging."
  - "benchmark/github-schema.graphql:12332:35        effects                 U       review so it now longer effects merging."
  - "benchmark/github-schema.graphql:12334:3         DISMISS                 U       DISMISS"
  - "benchmark/github-schema.graphql:12347:6         informational           U       An informational review."
  - "benchmark/github-schema.graphql:12349:3         COMMENTED               U       COMMENTED"
  - "benchmark/github-schema.graphql:12352:12        allowing                U       A review allowing the pull request to"
  - "benchmark/github-schema.graphql:12354:3         APPROVED                U       APPROVED"
  - "benchmark/github-schema.graphql:12357:12        blocking                U       A review blocking the pull request from"
  - "benchmark/github-schema.graphql:12364:3         DISMISSED               U       DISMISSED"
  - "benchmark/github-schema.graphql:12368:3         threaded                U       A threaded list of comments for"
  - "benchmark/github-schema.graphql:12400:5         Resolved                U       isResolved: Boolean!"
  - "benchmark/github-schema.graphql:12469:83        seen                    U       which the viewer has seen the pull request's commits"
  - "benchmark/github-schema.graphql:12480:7         Seen                    U       lastSeenCommit: Commit!"
  - "benchmark/github-schema.graphql:12505:3         MERGED                  U       MERGED"
  - "benchmark/github-schema.graphql:12567:11        Dismissed               U       | ReviewDismissedEvent"
  - "benchmark/github-schema.graphql:12719:12        CHANGED                 U       BASE_REF_CHANGED_EVENT"
  - "benchmark/github-schema.graphql:12749:12        RESTORED                U       HEAD_REF_RESTORED_EVENT"
  - "benchmark/github-schema.graphql:12903:28        ability                 U       or user who has the ability to push to a protected"
  - "benchmark/github-schema.graphql:12968:21        conduct                 U       Look up a code of conduct by its key"
  - "benchmark/github-schema.graphql:12972:17        conduct's               U       The code of conduct's key"
  - "benchmark/github-schema.graphql:12998:7         alphabetically          U       Get alphabetically sorted list of Marketplace"
  - "benchmark/github-schema.graphql:13009:12        Empty                   U       excludeEmpty: Boolean"
  - "benchmark/github-schema.graphql:13012:40        excluding               U       level categories only, excluding any subcategories."
  - "benchmark/github-schema.graphql:13012:54        subcategories           U       only, excluding any subcategories."
  - "benchmark/github-schema.graphql:13014:12        Subcategories           U       excludeSubcategories: Boolean"
  - "benchmark/github-schema.graphql:13027:5         Also                    U       Also check topic aliases"
  - "benchmark/github-schema.graphql:13037:29        matches                 U       Select the listing that matches this slug. It's the"
  - "benchmark/github-schema.graphql:13069:13        Slug                    U       categorySlug: String"
  - "benchmark/github-schema.graphql:13083:33        administered            U       listings that can be administered by the specified user"
  - "benchmark/github-schema.graphql:13099:36        slugs                   U       listings with these slugs, if they are visible"
  - "benchmark/github-schema.graphql:13109:31        offer                   U       Select only listings that offer a free trial."
  - "benchmark/github-schema.graphql:13111:13        Trials                  U       withFreeTrialsOnly: Boolean = false"
  - "benchmark/github-schema.graphql:13154:14        calculate               U       If true, calculate the cost for the query"
  - "benchmark/github-schema.graphql:13154:55        evaluating              U       for the query without evaluating it"
  - "benchmark/github-schema.graphql:13160:3         Hack                    U       Hack to workaround https"
  - "benchmark/github-schema.graphql:13160:11        workaround              U       Hack to workaround https://github.com/facebook"
  - "benchmark/github-schema.graphql:13160:70        exposing                U       relay/issues/112 re-exposing the root query object"
  - "benchmark/github-schema.graphql:13200:3         Perform                 U       Perform a search across resources"
  - "benchmark/github-schema.graphql:13224:26        look                    U       The search string to look for."
  - "benchmark/github-schema.graphql:13235:19        Advisories              U       GitHub Security Advisories"
  - "benchmark/github-schema.graphql:13241:22        Advisory                U       orderBy: SecurityAdvisoryOrder"
  - "benchmark/github-schema.graphql:13244:12        advisories              U       Filter advisories by identifier, e.g."
  - "benchmark/github-schema.graphql:13244:43        GHSA                    U       by identifier, e.g. GHSA or CVE."
  - "benchmark/github-schema.graphql:13251:14        Since                   U       publishedSince: DateTime"
  - "benchmark/github-schema.graphql:13286:5         ghsa                    U       ghsaId: String!"
  - "benchmark/github-schema.graphql:13290:12        Vulnerabilities         U       Software Vulnerabilities documented by GitHub"
  - "benchmark/github-schema.graphql:13290:28        documented              U       Software Vulnerabilities documented by GitHub Security Advisories"
  - "benchmark/github-schema.graphql:13296:22        Vulnerability           U       orderBy: SecurityVulnerabilityOrder"
  - "benchmark/github-schema.graphql:13299:8         ecosystem               U       An ecosystem to filter vulnerabilities"
  - "benchmark/github-schema.graphql:13299:28        vulnerabilities         U       ecosystem to filter vulnerabilities by."
  - "benchmark/github-schema.graphql:13301:32        Ecosystem               U       ecosystem: SecurityAdvisoryEcosystem"
  - "benchmark/github-schema.graphql:13309:15        severities              U       A list of severities to filter vulnerabilities"
  - "benchmark/github-schema.graphql:13311:34        Severity                U       severities: [SecurityAdvisorySeverity!]"
  - "benchmark/github-schema.graphql:13365:40        counting                U       for the current query counting against the rate limit"
  - "benchmark/github-schema.graphql:13370:46        permitted               U       points the client is permitted to consume in a 60 minute"
  - "benchmark/github-schema.graphql:13370:59        consume                 U       client is permitted to consume in a 60 minute window"
  - "benchmark/github-schema.graphql:13380:24        remaining               U       The number of points remaining in the current rate"
  - "benchmark/github-schema.graphql:13385:51        resets                  U       current rate limit window resets in UTC epoch seconds"
  - "benchmark/github-schema.graphql:13385:65        epoch                   U       window resets in UTC epoch seconds."
  - "benchmark/github-schema.graphql:13385:71        seconds                 U       resets in UTC epoch seconds."
  - "benchmark/github-schema.graphql:13391:34        reacted                 U       subject that can be reacted on."
  - "benchmark/github-schema.graphql:13449:6         Reacting                U       type ReactingUserConnection {"
  - "benchmark/github-schema.graphql:13488:35        piece                   U       reaction to a particular piece of content."
  - "benchmark/github-schema.graphql:13545:12        Reacted                 U       viewerHasReacted: Boolean!"
  - "benchmark/github-schema.graphql:13549:1         Emojis                  U       Emojis that can be attached"
  - "benchmark/github-schema.graphql:13555:3         THUMBS                  U       THUMBS_UP"
  - "benchmark/github-schema.graphql:13565:3         LAUGH                   U       LAUGH"
  - "benchmark/github-schema.graphql:13570:3         HOORAY                  U       HOORAY"
  - "benchmark/github-schema.graphql:13575:3         CONFUSED                U       CONFUSED"
  - "benchmark/github-schema.graphql:13580:3         HEART                   U       HEART"
  - "benchmark/github-schema.graphql:13585:3         ROCKET                  U       ROCKET"
  - "benchmark/github-schema.graphql:13590:3         EYES                    U       EYES"
  - "benchmark/github-schema.graphql:13628:59        emotion                 U       reaction subject with the emotion represented by this"
  - "benchmark/github-schema.graphql:13628:67        represented             U       subject with the emotion represented by this reaction group"
  - "benchmark/github-schema.graphql:13744:35        heads                   U       prefix, such as `refs/heads/` or `refs/tags/`."
  - "benchmark/github-schema.graphql:13830:32        itself                  U       if the commit message itself references the subject"
  - "benchmark/github-schema.graphql:13841:5         referencable            U       Any referencable object"
  - "benchmark/github-schema.graphql:13865:17        underlying              U       Order refs by underlying commit date if the ref"
  - "benchmark/github-schema.graphql:13870:23        alphanumeric            U       Order refs by their alphanumeric name"
  - "benchmark/github-schema.graphql:13872:3         ALPHABETICAL            U       ALPHABETICAL"
  - "benchmark/github-schema.graphql:13876:26        registry                U       Represents an owner of a registry package."
  - "benchmark/github-schema.graphql:13930:11        releases                U       List of releases assets which are dependent"
  - "benchmark/github-schema.graphql:13930:37        dependent               U       releases assets which are dependent on this release."
  - "benchmark/github-schema.graphql:14000:17        times                   U       The number of times this asset was downloaded"
  - "benchmark/github-schema.graphql:14322:23        unstar                  U       The Starrable ID to unstar."
  - "benchmark/github-schema.graphql:14379:23        renamable               U       An object which has a renamable title"
  - "benchmark/github-schema.graphql:14465:39        reported                U       piece of content can be reported or minimized."
  - "benchmark/github-schema.graphql:14469:5         spammy                  U       A spammy piece of content"
  - "benchmark/github-schema.graphql:14474:6         abusive                 U       An abusive or harassing piece of"
  - "benchmark/github-schema.graphql:14474:17        harassing               U       An abusive or harassing piece of content"
  - "benchmark/github-schema.graphql:14476:3         ABUSE                   U       ABUSE"
  - "benchmark/github-schema.graphql:14479:6         irrelevant              U       An irrelevant piece of content"
  - "benchmark/github-schema.graphql:14486:3         OUTDATED                U       OUTDATED"
  - "benchmark/github-schema.graphql:14694:17        kilobytes               U       The number of kilobytes this repository occupies"
  - "benchmark/github-schema.graphql:14694:43        occupies                U       kilobytes this repository occupies on disk."
  - "benchmark/github-schema.graphql:14704:20        forked                  U       A list of direct forked repositories."
  - "benchmark/github-schema.graphql:14774:34        unmaintained            U       if the repository is unmaintained."
  - "benchmark/github-schema.graphql:14779:42        disabled                U       not this repository disabled."
  - "benchmark/github-schema.graphql:14794:37        mirror                  U       the repository is a mirror."
  - "benchmark/github-schema.graphql:14796:5         Mirror                  U       isMirror: Boolean!"
  - "benchmark/github-schema.graphql:14903:18        searches                U       If provided, searches labels by name and descriptio"
  - "benchmark/github-schema.graphql:14909:23        breakdown               U       A list containing a breakdown of the language composition"
  - "benchmark/github-schema.graphql:14909:49        composition             U       breakdown of the language composition of the repository."
  - "benchmark/github-schema.graphql:14951:3         mentionable             U       mentionableUsers("
  - "benchmark/github-schema.graphql:15048:31        suitable                U       revision expression suitable for rev-parse"
  - "benchmark/github-schema.graphql:15048:48        parse                   U       expression suitable for rev-parse"
  - "benchmark/github-schema.graphql:15203:26        Fully                   U       The ref to retrieve. Fully qualified matches are"
  - "benchmark/github-schema.graphql:15203:54        checked                 U       qualified matches are checked in order"
  - "benchmark/github-schema.graphql:15204:34        falling                 U       heads/master`) before falling back onto checks for"
  - "benchmark/github-schema.graphql:15204:47        onto                    U       before falling back onto checks for short name"
  - "benchmark/github-schema.graphql:15239:5         DEPRECATED              U       DEPRECATED: use orderBy. The ordering"
  - "benchmark/github-schema.graphql:15250:33        various                 U       single release given various criteria."
  - "benchmark/github-schema.graphql:15250:41        criteria                U       release given various criteria."
  - "benchmark/github-schema.graphql:15417:3         watchers                U       watchers("
  - "benchmark/github-schema.graphql:15455:44        through                 U       the user has access to through being a member of an"
  - "benchmark/github-schema.graphql:15456:31        every                   U       organization. This includes every repository on every"
  - "benchmark/github-schema.graphql:15553:39        contributed             U       repository is listed as 'contributed'."
  - "benchmark/github-schema.graphql:15577:3         Reviewed                U       Reviewed a pull request"
  - "benchmark/github-schema.graphql:15598:3         subset                  U       A subset of repository info."
  - "benchmark/github-schema.graphql:15786:3         MIGRATING               U       MIGRATING"
  - "benchmark/github-schema.graphql:15841:3         STARGAZERS              U       STARGAZERS"
  - "benchmark/github-schema.graphql:16099:29        reviewers               U       that can be requested reviewers."
  - "benchmark/github-schema.graphql:16123:24        rather                  U       Add users to the set rather than replace."
  - "benchmark/github-schema.graphql:16143:28        getting                 U       pull request that is getting requests."
  - "benchmark/github-schema.graphql:16311:68        whereas                 U       because it not nullable, whereas the underlying field"
  - "benchmark/github-schema.graphql:16333:31        caused                  U       Identifies the commit which caused the review to become"
  - "benchmark/github-schema.graphql:16478:24        matched                 U       list of results that matched against a search query"
  - "benchmark/github-schema.graphql:16482:17        pieces                  U       The number of pieces of code that matched"
  - "benchmark/github-schema.graphql:16539:7         Matches                 U       textMatches: [TextMatch]"
  - "benchmark/github-schema.graphql:16543:16        individual              U       Represents the individual results of a search"
  - "benchmark/github-schema.graphql:16572:47        advisory                U       plaintext description of the advisory"
  - "benchmark/github-schema.graphql:16583:13        identifiers             U       A list of identifiers for this advisory"
  - "benchmark/github-schema.graphql:16603:7         severity                U       The severity of the advisory"
  - "benchmark/github-schema.graphql:16663:25        withdrawn               U       When the advisory was withdrawn, if it has been withdrawn"
  - "benchmark/github-schema.graphql:16694:14        ecosystems              U       The possible ecosystems of a security vulnerability"
  - "benchmark/github-schema.graphql:16694:39        vulnerability's         U       ecosystems of a security vulnerability's package."
  - "benchmark/github-schema.graphql:16698:8         gems                    U       Ruby gems hosted at RubyGems.org"
  - "benchmark/github-schema.graphql:16698:27        Gems                    U       Ruby gems hosted at RubyGems.org"
  - "benchmark/github-schema.graphql:16700:3         RUBYGEMS                U       RUBYGEMS"
  - "benchmark/github-schema.graphql:16703:33        npmjs                   U       JavaScript packages hosted at npmjs.com"
  - "benchmark/github-schema.graphql:16713:32        Maven                   U       artifacts hosted at the Maven central repository"
  - "benchmark/github-schema.graphql:16715:3         MAVEN                   U       MAVEN"
  - "benchmark/github-schema.graphql:16718:37        Gallery                 U       hosted at the NuGet Gallery"
  - "benchmark/github-schema.graphql:16763:26        Supports                U       The identifier string. Supports exact or partial matching"
  - "benchmark/github-schema.graphql:16763:35        exact                   U       identifier string. Supports exact or partial matching"
  - "benchmark/github-schema.graphql:16763:44        partial                 U       string. Supports exact or partial matching."
  - "benchmark/github-schema.graphql:16769:12        formats                 U       Identifier formats available for advisories"
  - "benchmark/github-schema.graphql:16773:30        Exposures               U       Vulnerabilities and Exposures Identifier."
  - "benchmark/github-schema.graphql:16803:23        publication             U       Order advisories by publication time"
  - "benchmark/github-schema.graphql:16843:14        accessible              U       A publicly accessible reference"
  - "benchmark/github-schema.graphql:16849:17        vulnerability           U       Severity of the vulnerability."
  - "benchmark/github-schema.graphql:16858:3         Moderate                U       Moderate."
  - "benchmark/github-schema.graphql:16860:3         MODERATE                U       MODERATE"
  - "benchmark/github-schema.graphql:16885:8         Patched                 U       firstPatchedVersion: SecurityAdvisoryPacka"
  - "benchmark/github-schema.graphql:16888:24        vulnerable              U       A description of the vulnerable package"
  - "benchmark/github-schema.graphql:16904:15        follows                 U       This string follows a basic syntax with"
  - "benchmark/github-schema.graphql:16904:49        forms                   U       basic syntax with a few forms."
  - "benchmark/github-schema.graphql:16905:15        denotes                 U       + `= 0.2.0` denotes a single vulnerable"
  - "benchmark/github-schema.graphql:16908:62        minimum                 U       version range with a known minimum and maximum version"
  - "benchmark/github-schema.graphql:16982:6         Smime                   U       type SmimeSignature implements"
  - "benchmark/github-schema.graphql:17081:29        stars                   U       Allows ordering a list of stars by when they were created"
  - "benchmark/github-schema.graphql:17083:3         STARRED                 U       STARRED_AT"
  - "benchmark/github-schema.graphql:17195:7         combined                U       The combined commit status."
  - "benchmark/github-schema.graphql:17248:3         EXPECTED                U       EXPECTED"
  - "benchmark/github-schema.graphql:17256:13        failing                 U       Status is failing."
  - "benchmark/github-schema.graphql:17354:20        notified                U       The User is only notified when participating or"
  - "benchmark/github-schema.graphql:17359:31        conversations           U       User is notified of all conversations."
  - "benchmark/github-schema.graphql:17364:15        never                   U       The User is never notified."
  - "benchmark/github-schema.graphql:17366:3         IGNORED                 U       IGNORED"
  - "benchmark/github-schema.graphql:17381:5         Commenter               U       isCommenter: Boolean!"
  - "benchmark/github-schema.graphql:17432:3         tagger                  U       tagger: GitActor"
  - "benchmark/github-schema.graphql:17445:28        ancestors               U       list of teams that are ancestors of this team."
  - "benchmark/github-schema.graphql:17480:23        belonging               U       List of child teams belonging to this team"
  - "benchmark/github-schema.graphql:17494:21        immediate               U       Whether to list immediate child teams or all descendant"
  - "benchmark/github-schema.graphql:17494:50        descendant              U       immediate child teams or all descendant child teams."
  - "benchmark/github-schema.graphql:17535:21        editing                 U       The HTTP path for editing this team"
  - "benchmark/github-schema.graphql:17904:3         MAINTAINER              U       MAINTAINER"
  - "benchmark/github-schema.graphql:17907:24        administrative          U       A team member has no administrative permissions on the team"
  - "benchmark/github-schema.graphql:17913:1         Defines                 U       Defines which types of team"
  - "benchmark/github-schema.graphql:17913:86        IMMEDIATE               U       list. Can be one of IMMEDIATE, CHILD_TEAM or ALL."
  - "benchmark/github-schema.graphql:17917:3         Includes                U       Includes only immediate members"
  - "benchmark/github-schema.graphql:17969:3         VISIBLE                 U       VISIBLE"
  - "benchmark/github-schema.graphql:18068:18        rights                  U       User has admin rights on the team."
  - "benchmark/github-schema.graphql:18088:3         Highlights              U       Highlights within the matched fragment"
  - "benchmark/github-schema.graphql:18090:3         highlights              U       highlights: [TextMatchHighlight"
  - "benchmark/github-schema.graphql:18090:25        Highlight               U       highlights: [TextMatchHighlight!]!"
  - "benchmark/github-schema.graphql:18099:21        highlight               U       Represents a single highlight in a search result match"
  - "benchmark/github-schema.graphql:18103:7         indice                  U       The indice in the fragment where"
  - "benchmark/github-schema.graphql:18103:53        begins                  U       where the matched text begins."
  - "benchmark/github-schema.graphql:18105:8         Indice                  U       beginIndice: Int!"
  - "benchmark/github-schema.graphql:18130:83        relevant                U       sorted with the most relevant"
  - "benchmark/github-schema.graphql:18223:7         RELEVANT                U       NOT_RELEVANT"
  - "benchmark/github-schema.graphql:18226:73        rails                   U       repository (e.g. #ruby-on-rails-version-4-2-1)."
  - "benchmark/github-schema.graphql:18256:23        came                    U       The repository this came from"
  - "benchmark/github-schema.graphql:18287:18        entries                 U       A list of tree entries."
  - "benchmark/github-schema.graphql:18308:14        mode                    U       Entry file mode."
  - "benchmark/github-schema.graphql:18365:31        retrieved               U       Represents a type that can be retrieved by a URL."
  - "benchmark/github-schema.graphql:18380:15        unknown                 U       Represents an unknown signature on a Commit"
  - "benchmark/github-schema.graphql:18502:45        marked                  U       pull request currently marked as a duplicate."
  - "benchmark/github-schema.graphql:18507:56        canonical               U       currently considered canonical/authoritative/original"
  - "benchmark/github-schema.graphql:18507:66        authoritative           U       considered canonical/authoritative/original."
  - "benchmark/github-schema.graphql:18533:29        Unminimize              U       Autogenerated input type of UnminimizeComment"
  - "benchmark/github-schema.graphql:18548:29        Unpin                   U       Autogenerated input type of UnpinIssue"
  - "benchmark/github-schema.graphql:19176:47        compliant               U       and RFC 6570 (level 4) compliant URI string."
  - "benchmark/github-schema.graphql:19181:14        individual's            U       A user is an individual's account on GitHub that"
  - "benchmark/github-schema.graphql:19259:45        later                   U       made at this time or later will be counted. If"
  - "benchmark/github-schema.graphql:19259:59        counted                 U       time or later will be counted. If omitted, defaults"
  - "benchmark/github-schema.graphql:19286:37        followed                U       users the given user is followed by."
  - "benchmark/github-schema.graphql:19288:3         followers               U       followers("
  - "benchmark/github-schema.graphql:19311:37        following               U       users the given user is following."
  - "benchmark/github-schema.graphql:19407:33        participant             U       or not this user is a participant in the GitHub Security"
  - "benchmark/github-schema.graphql:19407:72        Bounty                  U       GitHub Security Bug Bounty."
  - "benchmark/github-schema.graphql:19409:11        Hunter                  U       isBountyHunter: Boolean!"
  - "benchmark/github-schema.graphql:19412:59        Campus                  U       participant in the GitHub Campus Experts Program."
  - "benchmark/github-schema.graphql:19412:66        Experts                 U       in the GitHub Campus Experts Program."
  - "benchmark/github-schema.graphql:19412:74        Program                 U       GitHub Campus Experts Program."
  - "benchmark/github-schema.graphql:19414:11        Expert                  U       isCampusExpert: Boolean!"
  - "benchmark/github-schema.graphql:19422:40        employee                U       this user is a GitHub employee."
  - "benchmark/github-schema.graphql:19424:5         Employee                U       isEmployee: Boolean!"
  - "benchmark/github-schema.graphql:19427:38        themselves              U       the user has marked themselves as for hire."
  - "benchmark/github-schema.graphql:19427:56        hire                    U       marked themselves as for hire."
  - "benchmark/github-schema.graphql:19429:5         Hireable                U       isHireable: Boolean!"
  - "benchmark/github-schema.graphql:19434:5         Site                    U       isSiteAdmin: Boolean!"
  - "benchmark/github-schema.graphql:19884:40        recently                U       repositories that the user recently contributed to."
  - "benchmark/github-schema.graphql:19909:19        uses                    U       GitHub.com UI uses [COMMIT, ISSUE, PULL"
  - "benchmark/github-schema.graphql:19985:29        what                    U       user's description of what they're currently doing"
  - "benchmark/github-schema.graphql:19985:34        they're                 U       description of what they're currently doing."
  - "benchmark/github-schema.graphql:19985:52        doing                   U       what they're currently doing."
  - "benchmark/github-schema.graphql:20010:40        follow                  U       the viewer is able to follow the user."
  - "benchmark/github-schema.graphql:20012:12        Follow                  U       viewerCanFollow: Boolean!"
  - "benchmark/github-schema.graphql:20078:14        durations               U       The possible durations that a user can be blocked"
  - "benchmark/github-schema.graphql:20080:15        Duration                U       enum UserBlockDuration {"
  - "benchmark/github-schema.graphql:20089:9         DAYS                    U       THREE_DAYS"
  - "benchmark/github-schema.graphql:20094:7         WEEK                    U       ONE_WEEK"
  - "benchmark/github-schema.graphql:20099:7         MONTH                   U       ONE_MONTH"
  - "benchmark/github-schema.graphql:20102:24        permanently             U       The user was blocked permanently"
  - "benchmark/github-schema.graphql:20104:3         PERMANENT               U       PERMANENT"
  - "benchmark/github-schema.graphql:20264:12        summarizing             U       An emoji summarizing the user's status."
  - "benchmark/github-schema.graphql:20274:23        indicates               U       Whether this status indicates the user is not fully"
  - "benchmark/github-schema.graphql:20279:19        describing              U       A brief message describing what the user is doing"
  - "benchmark/github-schema.json:25:38          textual             U       description\": \"Represents textual data as UTF-8 character"
  - "benchmark/github-schema.json:25:60          character           U       textual data as UTF-8 character sequences. This type"
  - "benchmark/github-schema.json:25:70          sequences           U       data as UTF-8 character sequences. This type is most often"
  - "benchmark/github-schema.json:25:99          often               U       sequences. This type is most often used by GraphQL to represent"
  - "benchmark/github-schema.json:25:139         form                U       GraphQL to represent free-form human-readable text"
  - "benchmark/github-schema.json:61:18          Deprecated          U       \"isDeprecated\": false,"
  - "benchmark/github-schema.json:62:16          deprecation         U       \"deprecationReason\": null"
  - "benchmark/github-schema.json:320:119        nviewer             U       listings visible to the\\nviewer are returned.\\n\","
  - "benchmark/github-schema.json:1533:73        obfuscated          U       identifier that is Base64 obfuscated. It is often used to"
  - "benchmark/github-schema.json:1533:158       appears             U       a cache. The ID type appears in a JSON response as"
  - "benchmark/github-schema.json:1533:198       however             U       response as a String; however, it is not intended"
  - "benchmark/github-schema.json:1533:217       intended            U       however, it is not intended to be human-readable"
  - "benchmark/github-schema.json:1533:305       Nlci                U       string (such as `\\\"VXNlci0xMA==\\\"`) or integer"
  - "benchmark/github-schema.json:4013:42        fractional          U       description\": \"Represents non-fractional signed whole numeric"
  - "benchmark/github-schema.json:4013:66        numeric             U       fractional signed whole numeric values. Int can represent"
  - "benchmark/github-schema.json:43071:117      nthat               U       range than this one\\nthat does not have any contributio"
  - "benchmark/github-schema.json:43095:113      nspecified          U       most comments in the\\nspecified time frame.\\n\","
  - "benchmark/github-schema.json:43840:208      nlonger             U       repository you can no\\nlonger access.\\n\","
  - "benchmark/github-schema.json:55376:44       defines             U       : \"A GraphQL Schema defines the capabilities of"
  - "benchmark/github-schema.json:55376:56       capabilities        U       GraphQL Schema defines the capabilities of a GraphQL server"
  - "benchmark/github-schema.json:55376:93       exposes             U       a GraphQL server. It exposes all available types"
  - "benchmark/github-schema.json:55404:107      rooted              U       mutation operations will be rooted at.\","
  - "benchmark/github-schema.json:55475:31       fundamental         U       \"description\": \"The fundamental unit of any GraphQL"
  - "benchmark/github-schema.json:55475:83       There               U       Schema is the type. There are many kinds of types"
  - "benchmark/github-schema.json:55475:98       kinds               U       type. There are many kinds of types in GraphQL"
  - "benchmark/github-schema.json:55475:168      Depending           U       _TypeKind` enum.\\n\\nDepending on the kind of a type"
  - "benchmark/github-schema.json:55475:201      certain             U       the kind of a type, certain fields describe information"
  - "benchmark/github-schema.json:55475:267      provide             U       that type. Scalar types provide no information beyond"
  - "benchmark/github-schema.json:55475:421      Abstract            U       fields they describe. Abstract types, Union and Interface"
  - "benchmark/github-schema.json:55660:58       described           U       Interface types are described by a list of Fields"
  - "benchmark/github-schema.json:55660:115      potentially         U       of which has a name, potentially a list of arguments"
  - "benchmark/github-schema.json:55767:39       provides            U       description\": \"A Directive provides a way to describe alternate"
  - "benchmark/github-schema.json:55767:114      behavior            U       and type validation behavior in a GraphQL document"
  - "benchmark/github-schema.json:55767:157      cases               U       document.\\n\\nIn some cases, you need to provide"
  - "benchmark/github-schema.json:55767:195      alter               U       to provide options to alter GraphQL's execution"
  - "benchmark/github-schema.json:55767:233      ways                U       execution behavior in ways field arguments will"
  - "benchmark/github-schema.json:55767:263      suffice             U       field arguments will not suffice, such as conditionally"
  - "benchmark/github-schema.json:55767:280      conditionally       U       not suffice, such as conditionally including or skipping"
  - "benchmark/github-schema.json:55767:307      skipping            U       conditionally including or skipping a field. Directives"
  - "benchmark/github-schema.json:55767:363      additional          U       provide this by describing additional information to the executor"
  - "benchmark/github-schema.json:55767:393      executor            U       additional information to the executor.\","
  - "benchmark/github-schema.json:55902:144      However             U       string or numeric value. However an Enum value is returned"
  - "benchmark/github-schema.json:55969:171      optionally          U       describe their type and optionally a default value.\","
  - "benchmark/github-schema.json:55973:41       formatted           U       description\": \"A GraphQL-formatted string representing"
  - "benchmark/github-schema.json:56095:46       adjacent            U       \"A Directive can be adjacent to many parts of the"
  - "benchmark/github-schema.json:56095:144      adjacencies         U       describes one such possible adjacencies.\","
  - "benchmark/github-schema.json:56107:24       MUTATION            U       \"name\": \"MUTATION\","
  - "benchmark/github-schema.json:56131:33       SPREAD              U       \"name\": \"FRAGMENT_SPREAD\","
  - "benchmark/github-schema.json:56132:63       spread              U       adjacent to a fragment spread.\","
  - "benchmark/github-schema.json:56167:24       ARGUMENT            U       \"name\": \"ARGUMENT_DEFINITION\","
  - "benchmark/github-schema.json:56776:27       Directs             U       \"description\": \"Directs the executor to include"
  - "benchmark/github-schema.json:56781:31       Included            U       \"description\": \"Included when true.\","
  - "benchmark/github-schema.json:56802:31       Skipped             U       \"description\": \"Skipped when true.\","
  - "benchmark/github-schema.json:56818:36       element             U       description\": \"Marks an element of a GraphQL schema"
  - "benchmark/github-schema.json:56823:31       Explains            U       \"description\": \"Explains why this element was"
  - "benchmark/github-schema.json:56823:73       usually             U       element was deprecated, usually also including a suggestion"
  - "benchmark/github-schema.json:56823:81       also                U       deprecated, usually also including a suggestion"
  - "benchmark/github-schema.json:56823:137      similar             U       to access supported similar data. Formatted in"
  - "benchmark/github-schema.json:56823:151      Formatted           U       supported similar data. Formatted in [Markdown](https"
  - "benchmark/repeated-fields-benchmark.js:10:15        repeated    U       name: 'Many repeated fields',"
  - "benchmark/validateInvalidGQL-benchmark.js:20:8          Another     U       yetAnotherUnknownField"
  - "benchmark/visitInParallel-benchmark.js:10:7         visitors    U       const visitors = new Array(50).fill"
  - "codecov.yml:5:1         parsers     U       parsers:"
  - "codecov.yml:7:12        partials    U       enable_partials: true"
  - "cspell.yml:3:14         Glob                        U       # TODO enableGlobDot: true"
  - "cspell.yml:5:5          Excluded                    U       # Excluded from spelling check"
  - "cspell.yml:5:19         spelling                    U       # Excluded from spelling check"
  - "cspell.yml:6:5          cspell                      U       - cspell.yml"
  - "cspell.yml:10:5         benchmark                   U       - benchmark/github-schema.graphql"
  - "cspell.yml:12:13        icons                       U       - website/icons"
  - "cspell.yml:14:1         overrides                   U       overrides:"
  - "cspell.yml:16:5         dictionaries                U       dictionaries:"
  - "cspell.yml:19:9         clsx                        U       - clsx"
  - "cspell.yml:20:9         infima                      U       - infima"
  - "cspell.yml:21:9         noopener                    U       - noopener"
  - "cspell.yml:22:9         Vite                        U       - Vite"
  - "cspell.yml:23:9         craco                       U       - craco"
  - "cspell.yml:24:9         esbuild                     U       - esbuild"
  - "cspell.yml:25:9         swcrc                       U       - swcrc"
  - "cspell.yml:26:9         noreferrer                  U       - noreferrer"
  - "cspell.yml:27:9         xlink                       U       - xlink"
  - "cspell.yml:33:5         graphiql                    U       - graphiql"
  - "cspell.yml:34:5         sublinks                    U       - sublinks"
  - "cspell.yml:37:5         Different                   U       # Different names used inside tests"
  - "cspell.yml:38:5         Skywalker                   U       - Skywalker"
  - "cspell.yml:39:5         Leia                        U       - Leia"
  - "cspell.yml:40:5         Wilhuff                     U       - Wilhuff"
  - "cspell.yml:41:5         Tarkin                      U       - Tarkin"
  - "cspell.yml:42:5         Artoo                       U       - Artoo"
  - "cspell.yml:43:5         Threepio                    U       - Threepio"
  - "cspell.yml:44:5         Odie                        U       - Odie"
  - "cspell.yml:45:5         Odie's                      U       - Odie's"
  - "cspell.yml:46:5         Damerau                     U       - Damerau"
  - "cspell.yml:47:5         Alderaan                    U       - Alderaan"
  - "cspell.yml:48:5         Tatooine                    U       - Tatooine"
  - "cspell.yml:49:5         astromech                   U       - astromech"
  - "cspell.yml:51:11        contribute                  U       # TODO: contribute upstream"
  - "cspell.yml:56:5         Nextra                      U       - Nextra"
  - "cspell.yml:57:5         headlessui                  U       - headlessui"
  - "cspell.yml:58:5         Fastify                     U       - Fastify"
  - "cspell.yml:60:5         svgr                        U       - svgr"
  - "cspell.yml:61:5         ruru                        U       - ruru"
  - "cspell.yml:64:18        anchors                     U       # used as href anchors"
  - "cspell.yml:65:5         graphqlerror                U       - graphqlerror"
  - "cspell.yml:66:5         syntaxerror                 U       - syntaxerror"
  - "cspell.yml:67:5         formaterror                 U       - formaterror"
  - "cspell.yml:68:5         graphqlschema               U       - graphqlschema"
  - "cspell.yml:69:5         graphqlscalartype           U       - graphqlscalartype"
  - "cspell.yml:70:5         graphqlobjecttype           U       - graphqlobjecttype"
  - "cspell.yml:71:5         graphqlinterfacetype        U       - graphqlinterfacetype"
  - "cspell.yml:72:5         graphqluniontype            U       - graphqluniontype"
  - "cspell.yml:73:5         graphqlenumtype             U       - graphqlenumtype"
  - "cspell.yml:74:5         graphqlinputobjecttype      U       - graphqlinputobjecttype"
  - "cspell.yml:75:5         graphqllist                 U       - graphqllist"
  - "cspell.yml:76:5         graphqlnonnull              U       - graphqlnonnull"
  - "cspell.yml:77:5         graphqlint                  U       - graphqlint"
  - "cspell.yml:78:5         graphqlfloat                U       - graphqlfloat"
  - "cspell.yml:79:5         graphqlstring               U       - graphqlstring"
  - "cspell.yml:80:5         graphqlboolean              U       - graphqlboolean"
  - "cspell.yml:81:5         graphqlid                   U       - graphqlid"
  - "cspell.yml:82:5         getlocation                 U       - getlocation"
  - "cspell.yml:83:5         isinputtype                 U       - isinputtype"
  - "cspell.yml:84:5         isoutputtype                U       - isoutputtype"
  - "cspell.yml:85:5         isleaftype                  U       - isleaftype"
  - "cspell.yml:86:5         iscompositetype             U       - iscompositetype"
  - "cspell.yml:87:5         isabstracttype              U       - isabstracttype"
  - "cspell.yml:88:5         getnullabletype             U       - getnullabletype"
  - "cspell.yml:89:5         getnamedtype                U       - getnamedtype"
  - "cspell.yml:90:5         introspectionquery          U       - introspectionquery"
  - "cspell.yml:91:5         buildclientschema           U       - buildclientschema"
  - "cspell.yml:92:5         buildschema                 U       - buildschema"
  - "cspell.yml:93:5         printschema                 U       - printschema"
  - "cspell.yml:94:5         printintrospectionschema    U       - printintrospectionschema"
  - "cspell.yml:95:5         buildastschema              U       - buildastschema"
  - "cspell.yml:96:5         typefromast                 U       - typefromast"
  - "cspell.yml:97:5         astfromvalue                U       - astfromvalue"
  - "cspell.yml:98:5         typeinfo                    U       - typeinfo"
  - "cspell.yml:99:5         isvalidjsvalue              U       - isvalidjsvalue"
  - "cspell.yml:100:5        isvalidliteralvalue         U       - isvalidliteralvalue"
  - "cspell.yml:101:5        specifiedrules              U       - specifiedrules"
  - "cspell.yml:102:5        Wordmark                    U       - Wordmark"
  - "cspell.yml:103:5        codeofconduct               U       - codeofconduct"
  - "cspell.yml:104:5        graphqlconf                 U       - graphqlconf"
  - "cspell.yml:109:18       bellow                      U       # TODO: remove bellow words"
  - "cspell.yml:110:5        QLID                        U       - QLID # GraphQLID"
  - "cspell.yml:111:5        QLJS                        U       - QLJS # GraphQLJS"
  - "cspell.yml:112:5        iface                       U       - iface"
  - "cspell.yml:113:5        Reqs                        U       - Reqs"
  - "cspell.yml:114:5        FXXX                        U       - FXXX"
  - "cspell.yml:115:5        XXXF                        U       - XXXF"
  - "cspell.yml:116:5        bfnrt                       U       - bfnrt"
  - "cspell.yml:117:5        wrds                        U       - wrds"
  - "integrationTests/node/test.js:16:83         slim    U       app node:${version}-slim node ./index.js`,"
  - "integrationTests/ts/basic-test.ts:33:27         Dolly       U       variableValues: { who: 'Dolly' },"
  - "integrationTests/ts/internalImports-test.ts:3:78        breaking    U       are never considered breaking changes."
  - "integrationTests/ts/internalImports-test.ts:4:7         just        U       // We just want to test that we"
  - "integrationTests/ts/TypedQueryDocumentNode-test.ts:49:14        passing     U       // We're now passing in {input: string} which"
  - "integrationTests/webpack/test.js:14:31          correct     U       log('Test script: Got correct result from Webpack"
  - "package.json:16:8           Effects         U       \"sideEffects\": false,"
  - "package.json:33:43          checkgit        U       bash -c '. ./resources/checkgit.sh && npm ci --ignore"
  - "package.json:35:6           fuzzonly        U       \"fuzzonly\": \"mocha --full-trace"
  - "package.json:35:59          fuzz            U       src/**/__tests__/**/*-fuzz.ts\","
  - "package.json:38:55          testonly        U       run check && npm run testonly && npm run prettier"
  - "package.json:38:133         integrations    U       spelling && npm run check:integrations\","
  - "package.json:39:35          warnings        U       eslint --cache --max-warnings 0 .\","
  - "package.json:40:21          pretty          U       \"check\": \"tsc --pretty\","
  - "package.json:42:15          cover           U       \"testonly:cover\": \"c8 npm run testonly"
  - "package.json:49:6           gitpublish      U       \"gitpublish:npm\": \"bash ./resources"
  - "package.json:72:20          simple          U       \"eslint-plugin-simple-import-sort\": \"7.0."
  - "README.md:1:11          Conf                U       [![GraphQLConf 2024 Banner: September"
  - "README.md:1:29          September           U       GraphQLConf 2024 Banner: September 10-12, San Francisco"
  - "README.md:1:50          Francisco           U       September 10-12, San Francisco. Hosted by the GraphQL"
  - "README.md:14:1          Looking             U       Looking for help? Find resources"
  - "README.md:14:13         help                U       Looking for help? Find resources [from"
  - "README.md:16:4          Getting             U       ## Getting Started"
  - "README.md:16:12         Started             U       ## Getting Started"
  - "README.md:18:11         overview            U       A general overview of GraphQL is available"
  - "README.md:20:71         That                U       graphql/graphql-spec). That overview"
  - "README.md:22:23         good                U       in this repository. A good way to get started with"
  - "README.md:25:5          Using               U       ### Using GraphQL.js"
  - "README.md:35:4          using               U       or using yarn:"
  - "README.md:41:25         important           U       GraphQL.js provides two important capabilities: building"
  - "README.md:42:1          serving             U       serving queries against that"
  - "README.md:44:42         maps                U       GraphQL type schema which maps to your codebase."
  - "README.md:69:65         resolves            U       and one field, that resolves"
  - "README.md:71:16         promises            U       or an array of promises. A more complex example"
  - "README.md:71:33         complex             U       of promises. A more complex example is included"
  - "README.md:79:6          Prints              U       // Prints"
  - "README.md:88:27         syntactically       U       ensure the query is syntactically and semantically valid"
  - "README.md:88:45         semantically        U       is syntactically and semantically valid before executing"
  - "README.md:88:71         executing           U       semantically valid before executing"
  - "README.md:89:5          reporting           U       it, reporting errors otherwise."
  - "README.md:92:20         Howdy               U       var source = '{ BoyHowdy }';"
  - "README.md:106:11        Please              U       **Note**: Please don't forget to set"
  - "README.md:106:116       some                U       server. It will disable some checks that can be useful"
  - "README.md:106:140       useful              U       some checks that can be useful during development but"
  - "README.md:106:147       during              U       checks that can be useful during development but will"
  - "README.md:106:175       significantly       U       development but will significantly improve performance"
  - "README.md:106:189       improve             U       but will significantly improve performance."
  - "README.md:106:197       performance         U       significantly improve performance."
  - "README.md:108:5         Want                U       ### Want to ride the bleeding"
  - "README.md:108:13        ride                U       ### Want to ride the bleeding edge?"
  - "README.md:108:22        bleeding            U       ## Want to ride the bleeding edge?"
  - "README.md:110:54        maintained          U       repository is automatically maintained to be the last"
  - "README.md:112:1         recommended         U       recommended to use builds deployed"
  - "README.md:113:20        released            U       the latest not-yet-released version of graphql-js"
  - "README.md:113:69        depending           U       js, you can do so by depending"
  - "README.md:114:1         directly            U       directly on this branch:"
  - "README.md:122:36        accompanied         U       of GraphQL.js will be accompanied by an experimental release"
  - "README.md:122:104       defer               U       containing support for the `@defer` and `@stream` directive"
  - "README.md:122:152       hoping              U       directive proposal. We are hoping to get community feedback"
  - "README.md:122:322       adding              U       release of GraphQL.js by adding the following to your"
  - "README.md:128:52        much                U       experimental release is much appreciated and can"
  - "README.md:128:57        appreciated         U       experimental release is much appreciated and can be provided"
  - "README.md:132:33        library             U       is a general-purpose library and can be used both"
  - "README.md:133:41        Graphi              U       As an example, the [GraphiQL](https://github.com"
  - "README.md:138:5         portions            U       the portions of the library you use"
  - "README.md:138:71        distributed         U       because GraphQL.js is distributed"
  - "README.md:139:40        Module              U       (`require()`) and ESModule (`import`) files. Ensure"
  - "README.md:142:5         Contributing        U       ### Contributing"
  - "README.md:144:4         actively            U       We actively welcome pull requests"
  - "README.md:144:13        welcome             U       We actively welcome pull requests. Learn"
  - "README.md:144:36        Learn               U       welcome pull requests. Learn how to [contribute]"
  - "README.md:146:31        Easy                U       repository is managed by EasyCLA. Project participants"
  - "README.md:146:272       contributors        U       signed by [individual contributors](http://individual-spec"
  - "README.md:146:344       employers           U       graphql.org/) or their [employers](http://corporate-spec"
  - "README.md:148:35        please              U       the signature process please open a PR against this"
  - "README.md:150:36        here                U       detailed information here](https://github.com"
  - "README.md:152:17        benefits            U       If your company benefits from GraphQL and you"
  - "README.md:152:47        would               U       from GraphQL and you would like to provide essential"
  - "README.md:152:69        essential           U       would like to provide essential financial support for"
  - "README.md:152:162       consider            U       community, please also consider membership in the [GraphQL"
  - "README.md:156:13        tracked             U       Changes are tracked as [GitHub releases"
  - "README.md:160:20        licensed            U       GraphQL.js is [MIT-licensed](./LICENSE)."
  - "resources/add-extension-to-import-paths.js:28:8         bail        U       // bail if the declaration doesn"
  - "resources/add-extension-to-import-paths.js:28:32        doesn't     U       bail if the declaration doesn't have a source, e.g."
  - "resources/build-deno.js:25:25       babelrc     U       const options = { babelrc: false, configFile:"
  - "resources/build-npm.js:65:44        Unexpected      U       types === undefined, 'Unexpected \"types\" in package.json"
  - "resources/build-npm.js:69:43        exactly         U       typesVersions\" should have exactly one key.',"
  - "resources/build-npm.js:71:12        revisit         U       // TODO: revisit once TS implements https"
  - "resources/build-npm.js:75:8         Provoke         U       // Provoke syntax error to show"
  - "resources/build-npm.js:117:52       spec            U       does not match semver spec: ' + version);"
  - "resources/checkgit.sh:1:8           immediately     U       # Exit immediately if any subcommand terminated"
  - "resources/checkgit.sh:1:38          terminated      U       immediately if any subcommand terminated"
  - "resources/checkgit.sh:6:65          main            U       state is the up to date main. If so"
  - "resources/checkgit.sh:7:6           exits           U       # it exits normally. If not it"
  - "resources/checkgit.sh:7:12          normally        U       # it exits normally. If not it prompts for"
  - "resources/checkgit.sh:7:32          prompts         U       normally. If not it prompts for an explicit continue"
  - "resources/checkgit.sh:8:3           intends         U       # intends to protect from versioning"
  - "resources/checkgit.sh:8:14          protect         U       # intends to protect from versioning for"
  - "resources/checkgit.sh:13:5          MODIFIED        U       GIT_MODIFIED_FILES=$(git ls-files"
  - "resources/checkgit.sh:14:5          STAGED          U       GIT_STAGED_FILES=$(git diff --cached"
  - "resources/checkgit.sh:14:31         cached          U       STAGED_FILES=$(git diff --cached --name-only 2> /dev"
  - "resources/checkgit.sh:20:18         ensure          U       # First fetch to ensure git is up to date. Fail"
  - "resources/checkgit.sh:20:62         fails           U       date. Fail-fast if this fails."
  - "resources/checkgit.sh:24:3          Extract         U       # Extract useful information."
  - "resources/checkgit.sh:35:22         synced          U       Check if branch is synced with remote"
  - "resources/diff-npm-package.js:30:17         Generating      U       console.log('‚ûñ‚ûï Generating diff...');"
  - "resources/diff-npm-package.js:47:19         sure            U       <!-- Make sure to load the highlight"
  - "resources/eslint-internal-rules/only-ascii.js:9:16          Emoji       U       allowEmoji: {"
  - "resources/eslint-internal-rules/README.md:3:11          dummy       U       This is a dummy npm package that allows"
  - "resources/eslint-internal-rules/README.md:3:34          allows      U       dummy npm package that allows us to treat it as an"
  - "resources/eslint-internal-rules/README.md:3:47          treat       U       package that allows us to treat it as an `eslint-plugin"
  - "resources/eslint-internal-rules/README.md:3:85          internal    U       eslint-plugin-graphql-internal`."
  - "resources/eslint-internal-rules/README.md:4:10          actually    U       It's not actually published, nor are the"
  - "resources/eslint-internal-rules/require-to-string-tag.js:14:21          proper      U       // FIXME: use proper TSDoc parser instead"
  - "resources/eslint-internal-rules/require-to-string-tag.js:22:16          classes     U       'All classes in public API required"
  - "resources/gen-changelog.js:13:15        Breaking        U       section: 'Breaking Change üí•',"
  - "resources/gen-changelog.js:16:15        Deprecation     U       section: 'Deprecation ‚ö†',"
  - "resources/gen-changelog.js:26:5         fold            U       fold: true,"
  - "resources/gen-changelog.js:28:8         polish          U       'PR: polish üíÖ': {"
  - "resources/gen-changelog.js:29:15        Polish          U       section: 'Polish üíÖ',"
  - "resources/gen-changelog.js:90:9         committers      U       const committersByLogin = {};"
  - "resources/gen-changelog.js:115:33       Unreleased      U       changelog = `## ${tag || 'Unreleased'} (${date})\\n`;"
  - "resources/gen-changelog.js:119:19       Fold            U       const shouldFold = config.fold && prs"
  - "resources/gen-changelog.js:141:24       Committers      U       changelog += `\\n#### Committers: ${committers.length"
  - "resources/gen-changelog.js:155:23       bearer          U       Authorization: 'bearer ' + GH_TOKEN,"
  - "resources/gen-changelog.js:172:21       responded       U       `GitHub responded with ${res.statusCode"
  - "resources/gen-changelog.js:304:20       batches         U       // Split pr into batches of 50 to prevent timeouts"
  - "resources/gen-changelog.js:304:45       timeouts        U       batches of 50 to prevent timeouts"
  - "resources/inline-invariant.js:4:4           Eliminates      U       * Eliminates function call to `invariant"
  - "src/__tests__/starWarsData.ts:2:4           These           U       * These are types which correspond"
  - "src/__tests__/starWarsData.ts:2:26          correspond      U       These are types which correspond to the schema."
  - "src/__tests__/starWarsData.ts:3:4           They            U       * They represent the shape"
  - "src/__tests__/starWarsData.ts:3:41          visited         U       the shape of the data visited during field resolution"
  - "src/__tests__/starWarsData.ts:8:3           friends         U       friends: ReadonlyArray<string"
  - "src/__tests__/starWarsData.ts:12:18         Human           U       export interface Human {"
  - "src/__tests__/starWarsData.ts:21:18         Droid           U       export interface Droid {"
  - "src/__tests__/starWarsData.ts:31:50         Wars            U       of data for our Star Wars Schema."
  - "src/__tests__/starWarsData.ts:33:22         coded           U       * This data is hard coded for the sake of the"
  - "src/__tests__/starWarsData.ts:33:36         sake            U       is hard coded for the sake of the demo, but you"
  - "src/__tests__/starWarsData.ts:33:68         imagine         U       demo, but you could imagine"
  - "src/__tests__/starWarsData.ts:38:7          luke            U       const luke: Human = {"
  - "src/__tests__/starWarsData.ts:41:10         Luke            U       name: 'Luke Skywalker',"
  - "src/__tests__/starWarsData.ts:47:7          vader           U       const vader: Human = {"
  - "src/__tests__/starWarsData.ts:50:10         Darth           U       name: 'Darth Vader',"
  - "src/__tests__/starWarsData.ts:50:16         Vader           U       name: 'Darth Vader',"
  - "src/__tests__/starWarsData.ts:59:14         Solo            U       name: 'Han Solo',"
  - "src/__tests__/starWarsData.ts:64:7          leia            U       const leia: Human = {"
  - "src/__tests__/starWarsData.ts:67:15         Organa          U       name: 'Leia Organa',"
  - "src/__tests__/starWarsData.ts:73:7          tarkin          U       const tarkin: Human = {"
  - "src/__tests__/starWarsData.ts:89:7          threepio        U       const threepio: Droid = {"
  - "src/__tests__/starWarsData.ts:98:7          artoo           U       const artoo: Droid = {"
  - "src/__tests__/starWarsData.ts:104:21        Astromech       U       primaryFunction: 'Astromech',"
  - "src/__tests__/starWarsData.ts:107:7         droid           U       const droidData: { [id: string]"
  - "src/__tests__/starWarsData.ts:116:6         Returning       U       // Returning a promise just to illustrate"
  - "src/__tests__/starWarsData.ts:116:34        illustrate      U       Returning a promise just to illustrate that GraphQL.js supports"
  - "src/__tests__/starWarsData.ts:123:20        Friends         U       export function getFriends("
  - "src/__tests__/starWarsData.ts:126:6         Notice          U       // Notice that GraphQL accepts"
  - "src/__tests__/starWarsData.ts:131:27        undisputed      U       Allows us to fetch the undisputed hero of the Star Wars"
  - "src/__tests__/starWarsData.ts:131:38        hero            U       fetch the undisputed hero of the Star Wars trilogy"
  - "src/__tests__/starWarsData.ts:131:60        trilogy         U       hero of the Star Wars trilogy, R2-D2."
  - "src/__tests__/starWarsData.ts:133:20        Hero            U       export function getHero(episode: number): Character"
  - "src/__tests__/starWarsData.ts:133:25        episode         U       export function getHero(episode: number): Character"
  - "src/__tests__/starWarsData.ts:135:28        Episode         U       Luke is the hero of Episode V."
  - "src/__tests__/starWarsIntrospection-test.ts:16:16       querying        U       it('Allows querying the schema for types"
  - "src/__tests__/starWarsIntrospection-test.ts:162:28      Backstory       U       name: 'secretBackstory',"
  - "src/__tests__/starWarsIntrospection-test.ts:296:66      saga            U       the hero of the whole saga. If provided, returns"
  - "src/__tests__/starWarsIntrospection-test.ts:361:27      mechanical      U       description: 'A mechanical creature in the Star"
  - "src/__tests__/starWarsIntrospection-test.ts:361:38      creature        U       description: 'A mechanical creature in the Star Wars universe"
  - "src/__tests__/starWarsIntrospection-test.ts:361:64      universe        U       creature in the Star Wars universe.',"
  - "src/__tests__/starWarsQuery-test.ts:12:9        Correctly       U       it('Correctly identifies R2-D2 as"
  - "src/__tests__/starWarsQuery-test.ts:12:19       identifies      U       it('Correctly identifies R2-D2 as the hero of"
  - "src/__tests__/starWarsQuery-test.ts:12:65       Saga            U       hero of the Star Wars Saga', async () => {"
  - "src/__tests__/starWarsQuery-test.ts:92:34       HOPE            U       appearsIn: ['NEW_HOPE', 'EMPIRE', 'JEDI']"
  - "src/__tests__/starWarsQuery-test.ts:92:42       EMPIRE          U       appearsIn: ['NEW_HOPE', 'EMPIRE', 'JEDI'],"
  - "src/__tests__/starWarsQuery-test.ts:92:52       JEDI            U       NEW_HOPE', 'EMPIRE', 'JEDI'],"
  - "src/__tests__/starWarsQuery-test.ts:234:38      changing        U       us to query for Luke, changing his key with an alias"
  - "src/__tests__/starWarsQuery-test.ts:280:34      duplicated      U       Allows us to query using duplicated content', async ()"
  - "src/__tests__/starWarsQuery-test.ts:309:40      avoid           U       to use a fragment to avoid duplicating content"
  - "src/__tests__/starWarsQuery-test.ts:309:46      duplicating     U       a fragment to avoid duplicating content', async ()"
  - "src/__tests__/starWarsQuery-test.ts:386:13      Reporting       U       describe('Reporting errors raised in resolvers"
  - "src/__tests__/starWarsQuery-test.ts:386:30      raised          U       describe('Reporting errors raised in resolvers', () ="
  - "src/__tests__/starWarsQuery-test.ts:387:36      accessing       U       Correctly reports error on accessing secretBackstory', async"
  - "src/__tests__/starWarsQuery-test.ts:474:13      story           U       story: secretBackstory"
  - "src/__tests__/starWarsSchema.ts:8:40        scalars             U       GraphQLString } from '../type/scalars';"
  - "src/__tests__/starWarsSchema.ts:14:12       designed            U       * This is designed to be an end-to-end"
  - "src/__tests__/starWarsSchema.ts:14:47       demonstrating       U       an end-to-end test, demonstrating"
  - "src/__tests__/starWarsSchema.ts:20:27       spoilers            U       NOTE: This may contain spoilers for the original Star"
  - "src/__tests__/starWarsSchema.ts:65:25       consists            U       The original trilogy consists of three movies."
  - "src/__tests__/starWarsSchema.ts:65:43       movies              U       trilogy consists of three movies."
  - "src/__tests__/starWarsSchema.ts:74:28       films               U       description: 'One of the films in the Star Wars Trilogy"
  - "src/__tests__/starWarsSchema.ts:74:51       Trilogy             U       films in the Star Wars Trilogy',"
  - "src/__tests__/starWarsSchema.ts:92:51       humans              U       Wars trilogy are either humans or droids."
  - "src/__tests__/starWarsSchema.ts:92:61       droids              U       are either humans or droids."
  - "src/__tests__/starWarsSchema.ts:124:39      appear              U       'Which movies they appear in.',"
  - "src/__tests__/starWarsSchema.ts:157:19      humanoid            U       description: 'A humanoid creature in the Star"
  - "src/__tests__/starWarsSchema.ts:231:59      designer            U       and the name of the designer.',"
  - "src/__tests__/starWarsSchema.ts:246:36      gives               U       into our schema. It gives us the ability to fetch"
  - "src/__tests__/starWarsSchema.ts:298:20      above               U       * type we defined above) and export it."
  - "src/__tests__/starWarsValidation-test.ts:22:9           Validates       U       it('Validates a complex but valid"
  - "src/__tests__/starWarsValidation-test.ts:26:23          Appearances     U       ...NameAndAppearances"
  - "src/__tests__/starWarsValidation-test.ts:44:9           Notes           U       it('Notes that non-existent fields"
  - "src/__tests__/starWarsValidation-test.ts:44:24          existent        U       it('Notes that non-existent fields are invalid'"
  - "src/__tests__/starWarsValidation-test.ts:46:19          Spaceship       U       query HeroSpaceshipQuery {"
  - "src/__tests__/starWarsValidation-test.ts:48:13          favorite        U       favoriteSpaceship"
  - "src/__tests__/starWarsValidation-test.ts:64:9           Disallows       U       it('Disallows fields on scalars',"
  - "src/__testUtils__/__tests__/dedent-test.ts:7:7          removes     U       it('removes indentation in typical"
  - "src/__testUtils__/__tests__/dedent-test.ts:7:30         typical     U       removes indentation in typical usage', () => {"
  - "src/__testUtils__/__tests__/dedent-test.ts:37:19        fourth      U       fourth"
  - "src/__testUtils__/__tests__/dedent-test.ts:47:39        fault       U       String = \"wi\\th de\\fault\"): String"
  - "src/__testUtils__/__tests__/dedent-test.ts:68:36        newlines    U       leading and trailing newlines', () => {"
  - "src/__testUtils__/__tests__/dedent-test.ts:110:19       John        U       const name = 'John';"
  - "src/__testUtils__/__tests__/dedent-test.ts:111:11       surname     U       const surname = 'Doe';"
  - "src/__testUtils__/__tests__/genFuzzStrings-test.ts:4:13         Fuzz    U       import { genFuzzStrings } from '../genFuzzStri"
  - "src/__testUtils__/__tests__/inspectStr-test.ts:7:7          handles         U       it('handles null and undefined values"
  - "src/__testUtils__/__tests__/inspectStr-test.ts:12:7         correctly       U       it('correctly print various strings"
  - "src/__testUtils__/dedent.ts:2:9         trimmed     U       const trimmedStr = string"
  - "src/__testUtils__/dedent.ts:6:27        removing    U       fixes indentation by removing leading spaces and tabs"
  - "src/__testUtils__/dedent.ts:19:54       trims       U       indentation and also trims string."
  - "src/__testUtils__/expectJSON.ts:7:4         Deeply      U       * Deeply transforms an arbitrary"
  - "src/__testUtils__/genFuzzStrings.ts:2:19        produces        U       * Generator that produces all possible combinations"
  - "src/__testUtils__/genFuzzStrings.ts:2:41        combinations    U       produces all possible combinations of allowed characters"
  - "src/__testUtils__/genFuzzStrings.ts:11:10       Combinations    U       let numCombinations = 0;"
  - "src/__testUtils__/genFuzzStrings.ts:18:9        permutation     U       let permutation = '';"
  - "src/__testUtils__/genFuzzStrings.ts:22:13       reminder        U       const reminder = leftOver % numAllowedChars"
  - "src/__testUtils__/inspectStr.ts:4:32        produce     U       inspect function to produce readable string literal"
  - "src/__testUtils__/kitchenSinkQuery.ts:1:14          kitchen     U       export const kitchenSinkQuery: string = String"
  - "src/__testUtils__/kitchenSinkQuery.ts:2:23          Complex     U       query queryName($foo: ComplexType, $site: Site = MOBILE"
  - "src/__testUtils__/kitchenSinkQuery.ts:3:3           whoever     U       whoever123is: node(id: [123"
  - "src/__testUtils__/kitchenSinkQuery.ts:14:15         unless      U       ... @skip(unless: $foo) {"
  - "src/__testUtils__/kitchenSinkQuery.ts:23:14         Story       U       mutation likeStory @onMutation {"
  - "src/__testUtils__/kitchenSinkQuery.ts:37:7          likers      U       likers {"
  - "src/__testUtils__/kitchenSinkQuery.ts:40:11         Sentence    U       likeSentence {"
  - "src/__testUtils__/kitchenSinkQuery.ts:47:18         Friend      U       fragment frag on Friend @onFragmentDefinition"
  - "src/__testUtils__/kitchenSinkQuery.ts:61:3          unnamed     U       unnamed(truthy: true, falsy"
  - "src/__testUtils__/kitchenSinkSDL.ts:26:3        four            U       four(argument: String ="
  - "src/__testUtils__/kitchenSinkSDL.ts:30:3        eight           U       eight(argument: OneOfInputType"
  - "src/__testUtils__/kitchenSinkSDL.ts:33:6        Annotated       U       type AnnotatedObject @onObject(arg"
  - "src/__testUtils__/kitchenSinkSDL.ts:34:3        annotated       U       annotatedField(arg: Type = \"default"
  - "src/__testUtils__/kitchenSinkSDL.ts:71:5        Advert          U       | Advert"
  - "src/__testUtils__/kitchenSinkSDL.ts:79:21       Photo           U       extend union Feed = Photo | Video"
  - "src/__testUtils__/kitchenSinkSDL.ts:103:3       ANNOTATED       U       ANNOTATED_VALUE @onEnumValue"
  - "src/__testUtils__/kitchenSinkSDL.ts:155:14      Repeatable      U       directive @myRepeatableDir(name: String!) repeatable"
  - "src/__testUtils__/kitchenSinkSDL.ts:155:43      repeatable      U       yRepeatableDir(name: String!) repeatable on"
  - "src/error/__tests__/GraphQLError-test.ts:26:27          subclass        U       is a class and is a subclass of Error', () => {"
  - "src/error/__tests__/GraphQLError-test.ts:42:33          prescribed      U       enumerate only properties prescribed by the spec', () =>"
  - "src/error/__tests__/GraphQLError-test.ts:46:7           positions       U       positions: [1, 2, 3],"
  - "src/error/__tests__/GraphQLError-test.ts:86:7           converts        U       it('converts nodes to positions and"
  - "src/error/__tests__/GraphQLError-test.ts:152:11         inherited       U       const inheritedExtensions = new GraphQLError"
  - "src/error/__tests__/GraphQLError-test.ts:152:51         Inherited       U       = new GraphQLError('InheritedExtensions', {"
  - "src/error/__tests__/GraphQLError-test.ts:202:8          Changing        U       // Changing it wouldn't be breaking"
  - "src/error/__tests__/GraphQLError-test.ts:202:20         wouldn't        U       // Changing it wouldn't be breaking change but"
  - "src/error/__tests__/GraphQLError-test.ts:226:19         prints          U       it('Deprecated: prints an error using printError"
  - "src/error/__tests__/GraphQLError-test.ts:332:25         turtles         U       new Error('I like turtles'),"
  - "src/error/__tests__/locatedError-test.ts:5:10           located     U       import { locatedError } from '../locatedError"
  - "src/error/__tests__/locatedError-test.ts:8:7            passes      U       it('passes GraphQLError through"
  - "src/error/__tests__/locatedError-test.ts:14:7           wraps       U       it('wraps non-errors', () =>"
  - "src/error/__tests__/locatedError-test.ts:20:22          Thrown      U       name: 'NonErrorThrown',"
  - "src/error/__tests__/locatedError-test.ts:21:7           thrown      U       thrownValue: testObject,"
  - "src/error/GraphQLError.ts:13:5          remarks         U       * @remarks"
  - "src/error/GraphQLError.ts:15:42         shortened       U       project. Do not use a shortened identifier as this increases"
  - "src/error/GraphQLError.ts:15:71         increases       U       shortened identifier as this increases"
  - "src/error/GraphQLError.ts:16:30         recommend       U       risk of conflicts. We recommend you add at most one"
  - "src/error/GraphQLError.ts:75:12         phases          U       * execute phases of performing a GraphQL"
  - "src/error/GraphQLError.ts:86:39         produced        U       location, the field which produced the error."
  - "src/error/GraphQLError.ts:94:6          corresponds     U       * corresponds to this error. Only"
  - "src/error/GraphQLError.ts:114:28        offsets         U       An array of character offsets within the source GraphQL"
  - "src/error/GraphQLError.ts:271:11        occurrence      U       * from occurrence to occurrence of the"
  - "src/error/GraphQLError.ts:271:52        except          U       occurrence of the problem, except for purposes of"
  - "src/error/GraphQLError.ts:271:63        purposes        U       problem, except for purposes of"
  - "src/error/GraphQLError.ts:272:6         localization    U       * localization."
  - "src/error/GraphQLError.ts:284:6         identify        U       * identify whether a null result"
  - "src/error/GraphQLError.ts:284:40        intentional     U       whether a null result is intentional or caused by a runtime"
  - "src/error/GraphQLError.ts:288:19        implementors    U       * Reserved for implementors to extend the protocol"
  - "src/error/GraphQLError.ts:289:10        hence           U       * and hence there are no additional"
  - "src/error/GraphQLError.ts:289:40        restrictions    U       there are no additional restrictions on its contents."
  - "src/error/locatedError.ts:9:30          presumably      U       an arbitrary value, presumably thrown while attempting"
  - "src/error/locatedError.ts:9:54          attempting      U       presumably thrown while attempting to execute a"
  - "src/error/locatedError.ts:10:50         aware           U       produce a new GraphQLError aware of the location in the"
  - "src/error/locatedError.ts:11:13         responsible     U       * document responsible for the original Error"
  - "src/error/locatedError.ts:20:62         originating     U       support GraphQL errors originating from other contexts"
  - "src/error/locatedError.ts:21:9          Located         U       if (isLocatedGraphQLError(originalError"
  - "src/error/README.md:3:21        module          U       The `graphql/error` module is responsible for creating"
  - "src/error/README.md:3:60        formatting      U       responsible for creating and formatting"
  - "src/error/syntaxError.ts:6:4            Produces        U       * Produces a GraphQLError representing"
  - "src/error/syntaxError.ts:7:4            descriptive     U       * descriptive information about the"
  - "src/execution/__tests__/abstract-test.ts:48:3           woofs       U       woofs: boolean;"
  - "src/execution/__tests__/abstract-test.ts:58:3           meows       U       meows: boolean;"
  - "src/execution/__tests__/abstract-test.ts:66:20          Handles     U       describe('Execute: Handles execution of abstract"
  - "src/execution/__tests__/abstract-test.ts:105:11         pets        U       pets: {"
  - "src/execution/__tests__/abstract-test.ts:108:55         Garfield    U       Odie', true), new Cat('Garfield', false)];"
  - "src/execution/__tests__/abstract-test.ts:628:41         inject      U       workaround since we can't inject resolveType into SDL"
  - "src/execution/__tests__/directives-test.ts:56:18        omits       U       it('if false omits on scalar', () => {"
  - "src/execution/__tests__/directives-test.ts:81:31        spreads     U       describe('works on fragment spreads', () => {"
  - "src/execution/__tests__/executor-test.ts:71:89          Perhaps         U       is a variable value. Perhaps look to see if an unparsed"
  - "src/execution/__tests__/executor-test.ts:75:7           executes        U       it('executes arbitrary code', async"
  - "src/execution/__tests__/executor-test.ts:78:17          Banana          U       b: () => 'Banana',"
  - "src/execution/__tests__/executor-test.ts:80:17          Donut           U       d: () => 'Donut',"
  - "src/execution/__tests__/executor-test.ts:83:10          Called          U       // Called only by DataType::pic"
  - "src/execution/__tests__/executor-test.ts:91:17          Boring          U       b: () => 'Boring',"
  - "src/execution/__tests__/executor-test.ts:92:18          Contrived       U       c: () => ['Contrived', undefined, 'Confusing"
  - "src/execution/__tests__/executor-test.ts:92:42          Confusing       U       Contrived', undefined, 'Confusing'],"
  - "src/execution/__tests__/executor-test.ts:93:7           deeper          U       deeper: () => [data, null,"
  - "src/execution/__tests__/executor-test.ts:190:7          merges          U       it('merges parallel fragments'"
  - "src/execution/__tests__/executor-test.ts:196:51         Cherry          U       raphQLString, resolve: () => 'Cherry' },"
  - "src/execution/__tests__/executor-test.ts:288:7          populates       U       it('populates path correctly with"
  - "src/execution/__tests__/executor-test.ts:400:7          nulls           U       it('nulls out error subtrees'"
  - "src/execution/__tests__/executor-test.ts:593:24         Food            U       name: 'Food',"
  - "src/execution/__tests__/executor-test.ts:600:48         Oops            U       Promise.reject(new Error('Oops'));"
  - "src/execution/__tests__/executor-test.ts:1009:30        despite         U       correct field ordering despite execution order', async"
  - "src/execution/__tests__/executor-test.ts:1037:7         Avoids          U       it('Avoids recursion', () => {"
  - "src/execution/__tests__/executor-test.ts:1037:14        recursion       U       it('Avoids recursion', () => {"
  - "src/execution/__tests__/executor-test.ts:1066:7         ignores         U       it('ignores missing sub selections"
  - "src/execution/__tests__/executor-test.ts:1090:24        illegal         U       it('does not include illegal fields in output',"
  - "src/execution/__tests__/executor-test.ts:1099:37        Illegal         U       document = parse('{ thisIsIllegalDoNotIncludeMe }');"
  - "src/execution/__tests__/executor-test.ts:1166:11        specials        U       specials: { type: new GraphQLList"
  - "src/execution/__tests__/executor-test.ts:1234:37        executable      U       ignoring invalid non-executable definitions', () =>"
  - "src/execution/__tests__/lists-test.ts:22:42         banana          U       new Set(['apple', 'banana', 'apple', 'coconut"
  - "src/execution/__tests__/lists-test.ts:22:61         coconut         U       'banana', 'apple', 'coconut']);"
  - "src/execution/__tests__/lists-test.ts:53:24         Singular        U       const listField = 'Singular';"
  - "src/execution/__tests__/lists-test.ts:69:33         nullability     U       Execute: Handles list nullability', () => {"
  - "src/execution/__tests__/mapAsyncIterator-test.ts:15:11          doubles         U       const doubles = mapAsyncIterator(source"
  - "src/execution/__tests__/mapAsyncIterator-test.ts:90:24          early           U       it('allows returning early from mapped async generator"
  - "src/execution/__tests__/mapAsyncIterator-test.ts:96:21          Shouldn't       U       yield 3; // Shouldn't be reached."
  - "src/execution/__tests__/mapAsyncIterator-test.ts:96:34          reached         U       yield 3; // Shouldn't be reached."
  - "src/execution/__tests__/mapAsyncIterator-test.ts:108:8          Early           U       // Early return"
  - "src/execution/__tests__/mapAsyncIterator-test.ts:114:8          Subsequent      U       // Subsequent next calls"
  - "src/execution/__tests__/mapAsyncIterator-test.ts:189:14         throwing        U       it('allows throwing errors through async"
  - "src/execution/__tests__/mapAsyncIterator-test.ts:212:9          caught          U       let caughtError;"
  - "src/execution/__tests__/mapAsyncIterator-test.ts:215:28         ouch            U       await doubles.throw('ouch');"
  - "src/execution/__tests__/mapAsyncIterator-test.ts:222:50         generators      U       errors through async generators', async () => {"
  - "src/execution/__tests__/mapAsyncIterator-test.ts:240:33         Ouch            U       await doubles.throw('Ouch')).to.deep.equal({"
  - "src/execution/__tests__/mapAsyncIterator-test.ts:258:24         Goodbye         U       throw new Error('Goodbye');"
  - "src/execution/__tests__/mapAsyncIterator-test.ts:281:22         Closes          U       async function testClosesSourceWithMapper<T>(mapper"
  - "src/execution/__tests__/mapAsyncIterator-test.ts:281:38         Mapper          U       testClosesSourceWithMapper<T>(mapper: (value: number"
  - "src/execution/__tests__/mapAsyncIterator-test.ts:281:48         mapper          U       testClosesSourceWithMapper<T>(mapper: (value: number) =>"
  - "src/execution/__tests__/mapAsyncIterator-test.ts:320:7          closes          U       it('closes source if mapper throws"
  - "src/execution/__tests__/mutations-test.ts:15:13         Holder          U       class NumberHolder {"
  - "src/execution/__tests__/mutations-test.ts:100:7         evaluates       U       it('evaluates mutations serially'"
  - "src/execution/__tests__/mutations-test.ts:100:27        serially        U       evaluates mutations serially', async () => {"
  - "src/execution/__tests__/mutations-test.ts:144:44        presence        U       mutations correctly in the presence of a failed mutation"
  - "src/execution/__tests__/mutations-test.ts:162:9         sixth           U       sixth: promiseAndFailToChangeTheNum"
  - "src/execution/__tests__/nonnull-test.ts:57:7        nulling             U       const nullingData = {"
  - "src/execution/__tests__/nonnull-test.ts:122:4       avoids              U       // avoids also doing any nests"
  - "src/execution/__tests__/nonnull-test.ts:122:26      nests               U       avoids also doing any nests"
  - "src/execution/__tests__/nonnull-test.ts:545:9       succeeds            U       it('succeeds when passed non-null"
  - "src/execution/__tests__/nonnull-test.ts:591:14      Intentionally       U       // Intentionally missing variable"
  - "src/execution/__tests__/oneof-test.ts:85:28         vague       U       // hence the vague error message here."
  - "src/execution/__tests__/oneof-test.ts:155:74        Exactly     U       a: \"abc\", b: 123 }; Exactly one key must be specified"
  - "src/execution/__tests__/resolve-test.ts:25:24       accesses    U       it('default function accesses properties', () =>"
  - "src/execution/__tests__/resolve-test.ts:60:11       Adder       U       class Adder {"
  - "src/execution/__tests__/resolve-test.ts:67:20       addend      U       test(args: { addend1: number }, context"
  - "src/execution/__tests__/schema-test.ts:100:35       exposed             U       hidden: 'This data is not exposed in the schema',"
  - "src/execution/__tests__/schema-test.ts:147:22       intentionally       U       // Note: this is intentionally not validating to ensure"
  - "src/execution/__tests__/schema-test.ts:147:40       validating          U       is intentionally not validating to ensure appropriate"
  - "src/execution/__tests__/schema-test.ts:147:61       appropriate         U       validating to ensure appropriate"
  - "src/execution/__tests__/schema-test.ts:148:17       occurs              U       // behavior occurs when executing an invalid"
  - "src/execution/__tests__/simplePubSub-test.ts:7:32           mock            U       subscribe async-iterator mock', async () => {"
  - "src/execution/__tests__/simplePubSub-test.ts:9:32           Subscriber      U       iterator = pubsub.getSubscriber((x) => x);"
  - "src/execution/__tests__/simplePubSub-test.ts:11:17          publishes       U       // Queue up publishes"
  - "src/execution/__tests__/simplePubSub-test.ts:15:13          payloads        U       // Read payloads"
  - "src/execution/__tests__/simplePubSub-test.ts:30:25          Coconut         U       expect(pubsub.emit('Coconut')).to.equal(true);"
  - "src/execution/__tests__/simplePubSub-test.ts:31:25          Durian          U       expect(pubsub.emit('Durian')).to.equal(true);"
  - "src/execution/__tests__/simplePubSub.ts:4:50        Useful          U       from an EventEmitter. Useful for mocking a"
  - "src/execution/__tests__/simplePubSub.ts:4:61        mocking         U       EventEmitter. Useful for mocking a"
  - "src/execution/__tests__/simplePubSub.ts:8:12        subscribers     U       private _subscribers: Set<(value: T) => void"
  - "src/execution/__tests__/simplePubSub.ts:15:16       subscriber      U       for (const subscriber of this._subscribers"
  - "src/execution/__tests__/subscribe-test.ts:24:3          unread              U       unread: boolean;"
  - "src/execution/__tests__/subscribe-test.ts:37:7          Inbox               U       const InboxType = new GraphQLObjectType"
  - "src/execution/__tests__/subscribe-test.ts:42:17         inbox               U       resolve: (inbox) => inbox.emails.length"
  - "src/execution/__tests__/subscribe-test.ts:110:18        shouldn't           U       // FIXME: we shouldn't use mapAsyncIterator"
  - "src/execution/__tests__/subscribe-test.ts:110:63        makes               U       apAsyncIterator here since it makes tests way more complex"
  - "src/execution/__tests__/subscribe-test.ts:148:7         Dummy               U       const DummyQueryType = new GraphQLObjectT"
  - "src/execution/__tests__/subscribe-test.ts:380:26        positional          U       'Deprecated: allows positional arguments to createSourceEven"
  - "src/execution/__tests__/subscribe-test.ts:478:27        unexpected          U       should pass through unexpected errors thrown in subscribe"
  - "src/execution/__tests__/subscribe-test.ts:550:10        Throwing            U       // Throwing an error"
  - "src/execution/__tests__/subscribe-test.ts:562:10        Rejecting           U       // Rejecting with an error"
  - "src/execution/__tests__/subscribe-test.ts:588:47        coerced             U       variables that cannot be coerced correctly, subscribe"
  - "src/execution/__tests__/subscribe-test.ts:589:55        informative         U       cutionResult that contains an informative error description."
  - "src/execution/__tests__/subscribe-test.ts:620:19        Alright             U       subject: 'Alright',"
  - "src/execution/__tests__/subscribe-test.ts:656:20        arrives             U       // A new email arrives!"
  - "src/execution/__tests__/subscribe-test.ts:666:23        waited              U       // The previously waited on payload now has a"
  - "src/execution/__tests__/subscribe-test.ts:685:65        called              U       subscription.next() is called."
  - "src/execution/__tests__/subscribe-test.ts:714:19        decides             U       // The client decides to disconnect."
  - "src/execution/__tests__/subscribe-test.ts:720:28        disconnecting       U       Which may result in disconnecting upstream services as"
  - "src/execution/__tests__/subscribe-test.ts:724:19        Important           U       subject: 'Important',"
  - "src/execution/__tests__/subscribe-test.ts:730:8         Awaiting            U       // Awaiting a subscription after"
  - "src/execution/__tests__/subscribe-test.ts:980:14        Bonjour             U       yield 'Bonjour';"
  - "src/execution/__tests__/subscribe-test.ts:1013:33       presented           U       error in execution is presented as such."
  - "src/execution/__tests__/subscribe-test.ts:1029:36       executed            U       Subsequent events are still executed."
  - "src/execution/__tests__/sync-test.ts:106:19         encountering    U       it('throws if encountering async execution', ("
  - "src/execution/__tests__/union-interface-test.ts:19:3        barks           U       barks: boolean;"
  - "src/execution/__tests__/union-interface-test.ts:20:3        mother          U       mother?: Dog;"
  - "src/execution/__tests__/union-interface-test.ts:22:3        progeny         U       progeny: ReadonlyArray<Dog>"
  - "src/execution/__tests__/union-interface-test.ts:75:7        Mammal          U       const MammalType: GraphQLInterfaceType"
  - "src/execution/__tests__/union-interface-test.ts:122:12      reachable       U       // Not reachable, all possible types"
  - "src/execution/__tests__/union-interface-test.ts:146:7       garfield        U       const garfield = new Cat('Garfield"
  - "src/execution/__tests__/union-interface-test.ts:147:28      Garfield's      U       garfield.mother = new Cat(\"Garfield's Mom\", false);"
  - "src/execution/__tests__/union-interface-test.ts:150:7       odie            U       const odie = new Dog('Odie', true"
  - "src/execution/__tests__/union-interface-test.ts:155:7       john            U       const john = new Person('John'"
  - "src/execution/__tests__/union-interface-test.ts:158:11      introspect      U       it('can introspect on union and intersection"
  - "src/execution/__tests__/union-interface-test.ts:388:17      Barks           U       ...DogBarks"
  - "src/execution/__tests__/union-interface-test.ts:389:17      Meows           U       ...CatMeows"
  - "src/execution/__tests__/union-interface-test.ts:430:18      Progeny         U       ...ProgenyFields"
  - "src/execution/__tests__/union-interface-test.ts:500:7       gets            U       it('gets execution info in resolver"
  - "src/execution/__tests__/union-interface-test.ts:501:9       encountered     U       let encounteredContext;"
  - "src/execution/__tests__/variables-test.ts:32:11         Faulty          U       const TestFaultyScalarGraphQLError ="
  - "src/execution/__tests__/variables-test.ts:174:11        properly        U       it('properly parses single value"
  - "src/execution/__tests__/variables-test.ts:174:20        parses          U       it('properly parses single value to list"
  - "src/execution/__tests__/variables-test.ts:253:19        faulty          U       it('errors on faulty scalar type input',"
  - "src/execution/__tests__/variables-test.ts:458:21        omission        U       it('errors on omission of nested non-null'"
  - "src/execution/__tests__/variables-test.ts:582:52        unlisted        U       to be omitted in an unlisted variable', () => {"
  - "src/execution/__tests__/variables-test.ts:776:32        typically       U       Note: this test would typically fail validation before"
  - "src/execution/__tests__/variables-test.ts:777:69        validated       U       queries which previously validated"
  - "src/execution/__tests__/variables-test.ts:778:60        introduced      U       new schema which have introduced a breaking"
  - "src/execution/__tests__/variables-test.ts:779:27        formerly        U       // change to make a formerly non-required argument"
  - "src/execution/__tests__/variables-test.ts:993:53        Knows           U       xecuteQuery(doc, { input: 'WhoKnows' });"
  - "src/execution/__tests__/variables-test.ts:1069:56       coercion        U       limit maximum number of coercion errors', () => {"
  - "src/execution/collectFields.ts:25:26        collects        U       Given a selectionSet, collects all of the fields and"
  - "src/execution/collectFields.ts:162:4        Determines      U       * Determines if a field should be"
  - "src/execution/collectFields.ts:208:19       logic           U       * Implements the logic to compute the key of"
  - "src/execution/execute.ts:33:10          Leaf            U       GraphQLLeafType,"
  - "src/execution/execute.ts:62:53          regard          U       relevant subfields with regard to the return"
  - "src/execution/execute.ts:63:20          ensures         U       * type. Memoizing ensures the subfields are not"
  - "src/execution/execute.ts:63:50          repeatedly      U       the subfields are not repeatedly calculated, which"
  - "src/execution/execute.ts:64:4           saves           U       * saves overhead when resolving"
  - "src/execution/execute.ts:64:10          overhead        U       * saves overhead when resolving lists"
  - "src/execution/execute.ts:94:53          legally         U       definitions that can appear legally and at"
  - "src/execution/execute.ts:104:4          Namely          U       * Namely, schema of the type"
  - "src/execution/execute.ts:161:67         eventually      U       ExecutionResult that will eventually be"
  - "src/execution/execute.ts:165:46         explaining      U       be thrown immediately explaining the invalid input."
  - "src/execution/execute.ts:192:20         descendants     U       // field and its descendants will be omitted, and"
  - "src/execution/execute.ts:193:38         encounters      U       An execution which encounters errors will still result"
  - "src/execution/execute.ts:196:51         propagate       U       of a NonNull type may propagate to the top level,"
  - "src/execution/execute.ts:198:26         entire          U       in this case is the entire response."
  - "src/execution/execute.ts:220:16         guarantees      U       * However, it guarantees to complete synchronously"
  - "src/execution/execute.ts:220:73         assuming        U       (or throw an error) assuming"
  - "src/execution/execute.ts:246:4          Essential       U       * Essential assertions before executing"
  - "src/execution/execute.ts:247:4          improper        U       * improper use of the GraphQL library"
  - "src/execution/execute.ts:270:32         throughout      U       which we will pass throughout the other execution"
  - "src/execution/execute.ts:382:27         Serially        U       return executeFieldsSerially("
  - "src/execution/execute.ts:391:75         together        U       execute and subscribe together"
  - "src/execution/execute.ts:468:64         handled         U       by other fields are handled, as they may also reject"
  - "src/execution/execute.ts:483:38         replaced        U       but with any promises replaced with the values they"
  - "src/execution/execute.ts:516:73         abrupt          U       result is normal or abrupt (error)."
  - "src/execution/execute.ts:519:27         fulfill         U       variables scope to fulfill any variable references"
  - "src/execution/execute.ts:528:73         commonly        U       an execution. It is commonly"
  - "src/execution/execute.ts:551:25         rely            U       // Note: we don't rely on a `catch` method"
  - "src/execution/execute.ts:597:56         locates         U       however it still properly locates the error."
  - "src/execution/execute.ts:609:19         instructions    U       * Implements the instructions for completeValue as"
  - "src/execution/execute.ts:612:45         recursively     U       Non-Null, then this recursively completes the value"
  - "src/execution/execute.ts:612:57         completes       U       then this recursively completes the value"
  - "src/execution/execute.ts:614:16         Nullability     U       * as per the \"Nullability\" section of the spec"
  - "src/execution/execute.ts:626:30         expects         U       Otherwise, the field type expects a sub-selection set"
  - "src/execution/execute.ts:678:25         leaf            U       If field type is a leaf type, Scalar or Enum"
  - "src/execution/execute.ts:717:29         completing      U       Complete a list value by completing each item in the list"
  - "src/execution/execute.ts:734:55         optimizing      U       simple map, however we're optimizing the path"
  - "src/execution/execute.ts:735:45         avoiding        U       contains no Promises by avoiding creating another Promise"
  - "src/execution/execute.ts:808:44         determining     U       an abstract type by determining the runtime object type"
  - "src/execution/execute.ts:930:54         raise           U       returns false, then raise an error rather"
  - "src/execution/execute.ts:931:11         continuing      U       // than continuing execution."
  - "src/execution/execute.ts:971:15         attempts        U       * used which attempts two strategies:"
  - "src/execution/execute.ts:971:28         strategies      U       used which attempts two strategies:"
  - "src/execution/execute.ts:988:11         promised        U       const promisedIsTypeOfResults = []"
  - "src/execution/execute.ts:1019:43        along           U       function while passing along args and context value"
  - "src/execution/execute.ts:1023:62        acceptable      U       which property access is acceptable."
  - "src/execution/execute.ts:1037:21        queried         U       * it can always be queried as a field, even in"
  - "src/execution/execute.ts:1037:49        situations      U       as a field, even in situations where no"
  - "src/execution/execute.ts:1040:12        mutating        U       * require mutating type definitions, which"
  - "src/execution/README.md:3:65        phase           U       responsible for the execution phase of"
  - "src/execution/README.md:4:1         fulfilling      U       fulfilling a GraphQL request."
  - "src/execution/subscribe.ts:67:23        yielded         U       // For each payload yielded from a subscription"
  - "src/execution/subscribe.ts:71:53        nearly          U       algorithm, as it is nearly identical to the"
  - "src/execution/subscribe.ts:71:60        identical       U       algorithm, as it is nearly identical to the"
  - "src/execution/subscribe.ts:136:28       hosting         U       This may be useful when hosting the stateful subscription"
  - "src/execution/subscribe.ts:137:42       stateless       U       or machine than the stateless GraphQL execution engine"
  - "src/execution/subscribe.ts:138:17       separating      U       * or otherwise separating these two steps. For"
  - "src/execution/subscribe.ts:139:5        Supporting      U       * \"Supporting Subscriptions at Scale"
  - "src/execution/subscribe.ts:144:58       favor           U       next major version in favor of named arguments"
  - "src/execution/subscribe.ts:161:34       incorrectly     U       arguments are missing or incorrectly typed, this is an internal"
  - "src/execution/subscribe.ts:162:16       mistake         U       // developer mistake which should throw an"
  - "src/execution/subscribe.ts:239:11       differs         U       // It differs from \"ResolveFieldValue"
  - "src/execution/subscribe.ts:239:51       providing       U       ResolveFieldValue\" due to providing a different `resolveFn"
  - "src/execution/subscribe.ts:251:22       yielding        U       // AsyncIterable yielding raw payloads."
  - "src/execution/values.ts:22:10       coerce      U       import { coerceInputValue } from '."
  - "src/execution/values.ts:26:6        Coerced     U       type CoercedVariableValues ="
  - "src/execution/values.ts:31:4        Prepares    U       * Prepares an object map of variableValu"
  - "src/execution/values.ts:84:56       safety      U       checked again here for safety."
  - "src/execution/values.ts:215:24      Correct     U       // Note: ValuesOfCorrectTypeRule validation should"
  - "src/graphql.ts:26:4         More                U       * More sophisticated GraphQL"
  - "src/graphql.ts:26:9         sophisticated       U       * More sophisticated GraphQL servers, such"
  - "src/graphql.ts:27:8         wish                U       * may wish to separate the validation"
  - "src/graphql.ts:28:4         tooling             U       * tooling step, and a server runtime"
  - "src/graphql.ts:58:29        alternatively       U       _typename` field or alternatively calls the `isTypeOf"
  - "src/graphql.ts:77:34        fulfills            U       graphqlSync function also fulfills GraphQL operations by"
  - "src/index.ts:3:25           utility             U       but is also a useful utility for operating on GraphQL"
  - "src/index.ts:3:37           operating           U       a useful utility for operating on GraphQL files and"
  - "src/index.ts:12:8           Validating          U       * - Validating a GraphQL request against"
  - "src/index.ts:16:25          facilitate          U       GraphQL documents to facilitate building tools."
  - "src/index.ts:19:40          equivalent          U       import statements are equivalent:"
  - "src/index.ts:36:15          operate             U       // Create and operate on GraphQL type definitions"
  - "src/index.ts:51:23          Scalars             U       // Standard GraphQL Scalars"
  - "src/index.ts:58:10          boundaries          U       // Int boundaries constants"
  - "src/index.ts:61:6           Built               U       // Built-in Directives defined"
  - "src/index.ts:61:41          Spec                U       Directives defined by the Spec"
  - "src/index.ts:71:11          DEPRECATION         U       DEFAULT_DEPRECATION_REASON,"
  - "src/index.ts:137:6          Upholds             U       // Upholds the spec rules about"
  - "src/index.ts:137:35         naming              U       the spec rules about naming."
  - "src/index.ts:230:5          Executable          U       isExecutableDefinitionNode,"
  - "src/index.ts:344:6          Individual          U       // Individual validation rules."
  - "src/index.ts:352:3          Lone                U       LoneAnonymousOperationRule"
  - "src/index.ts:357:3          Overlapping         U       OverlappingFieldsCanBeMergedRule"
  - "src/index.ts:358:19         Spreads             U       PossibleFragmentSpreadsRule,"
  - "src/index.ts:359:3          Provided            U       ProvidedRequiredArgumentsRule"
  - "src/index.ts:360:9          Leafs               U       ScalarLeafsRule,"
  - "src/index.ts:406:6          Produce             U       // Produce the GraphQL query recommended"
  - "src/index.ts:409:6          Gets                U       // Gets the target Operation"
  - "src/index.ts:424:3          lexicographic       U       lexicographicSortSchema,"
  - "src/index.ts:429:17         built               U       // Prints the built-in introspection schema"
  - "src/index.ts:442:6          Coerces             U       // Coerces a JavaScript value to"
  - "src/index.ts:444:6          Concatenates        U       // Concatenates multiple AST together"
  - "src/index.ts:446:6          Separates           U       // Separates an AST into an AST per"
  - "src/index.ts:448:6          Strips              U       // Strips characters that are"
  - "src/index.ts:450:6          Comparators         U       // Comparators for types"
  - "src/index.ts:458:6          Compares            U       // Compares two GraphQLSchemas and"
  - "src/index.ts:458:38         detects             U       two GraphQLSchemas and detects breaking changes."
  - "src/index.ts:460:3          Dangerous           U       DangerousChangeType,"
  - "src/jsutils/__tests__/identityFunc-test.ts:7:37         receives    U       the first argument it receives', () => {"
  - "src/jsutils/__tests__/identityFunc-test.ts:8:26         Expects     U       / @ts-expect-error (Expects an argument)"
  - "src/jsutils/__tests__/instanceOf-test.ts:19:19          clashes     U       it('detect name clashes with older versions"
  - "src/jsutils/__tests__/instanceOf-test.ts:19:32          older       U       detect name clashes with older versions of this lib"
  - "src/jsutils/__tests__/instanceOf-test.ts:41:17          Minified    U       function getMinifiedClass(tag: string) {"
  - "src/jsutils/__tests__/instanceOf-test.ts:73:52          realm       U       from another module or realm./m,"
  - "src/jsutils/__tests__/isIterableObject-test.ts:12:40        wrappers    U       disable-next-line no-new-wrappers"
  - "src/jsutils/__tests__/isIterableObject-test.ts:64:21        Bravo       U       arrayLike[1] = 'Bravo';"
  - "src/jsutils/__tests__/isIterableObject-test.ts:65:21        Charlie     U       arrayLike[2] = 'Charlie';"
  - "src/jsutils/__tests__/naturalCompare-test.ts:39:36          zeros       U       numbers with leading zeros', () => {"
  - "src/jsutils/__tests__/suggestionList-test.ts:20:24          greenish                U       expectSuggestions('greenish', ['green']).to.deep"
  - "src/jsutils/__tests__/suggestionList-test.ts:49:28          transpositions          U       Returns options with transpositions', () => {"
  - "src/jsutils/__tests__/suggestionList-test.ts:62:61          lexicographically       U       lexical distance sorted lexicographically', () => {"
  - "src/jsutils/__tests__/toObjMap-test.ts:7:4          Workaround      U       // Workaround to make both ESLint"
  - "src/jsutils/__tests__/toObjMap-test.ts:7:35         happy           U       to make both ESLint happy"
  - "src/jsutils/inspect.ts:41:12        Nable       U       if (isJSONable(value)) {"
  - "src/jsutils/inspect.ts:44:18        infinite    U       // check for infinite recursion"
  - "src/jsutils/instanceOf.ts:4:9           Production      U       const isProduction ="
  - "src/jsutils/instanceOf.ts:11:4          constructors    U       * constructors are detected."
  - "src/jsutils/instanceOf.ts:11:21         detected        U       * constructors are detected."
  - "src/jsutils/instanceOf.ts:27:52         immune          U       toStringTag since it is immune to minification."
  - "src/jsutils/instanceOf.ts:42:1          relied          U       relied on modules, use \"resolutions"
  - "src/jsutils/instanceOf.ts:42:25         resolutions     U       relied on modules, use \"resolutions\" to ensure only one"
  - "src/jsutils/instanceOf.ts:48:57         confusing       U       another could produce confusing and"
  - "src/jsutils/instanceOf.ts:49:1          spurious        U       spurious results.`,"
  - "src/jsutils/isPromise.ts:2:30           acts    U       Returns true if the value acts like a Promise, i.e"
  - "src/jsutils/keyMap.ts:4:14          keyed           U       * Creates a keyed JS object from an array"
  - "src/jsutils/keyMap.ts:7:20          convenient      U       * This provides a convenient lookup for the array"
  - "src/jsutils/keyMap.ts:12:15         Jenny           U       * { name: 'Jenny', num: '867-5309' }"
  - "src/jsutils/keyMap.ts:25:10         jenny           U       * const jennyEntry = entriesByName"
  - "src/jsutils/keyValMap.ts:13:10          phones      U       * const phonesByName = keyValMap("
  - "src/jsutils/mapValue.ts:5:32        thru (through)      U       each value of `map` thru `fn`."
  - "src/jsutils/Maybe.ts:1:5            Conveniently    U       /** Conveniently represents flow's \"Maybe"
  - "src/jsutils/naturalCompare.ts:2:59          comes       U       whether a reference string comes before, or after,"
  - "src/jsutils/naturalCompare.ts:16:11         Digit       U       if (isDigit(aChar) && isDigit(bChar"
  - "src/jsutils/naturalCompare.ts:20:36         DIGIT       U       aNum * 10 + aChar - DIGIT_0;"
  - "src/jsutils/Path.ts:26:9        flattened       U       const flattened = [];"
  - "src/jsutils/promiseForObject.ts:7:12        akin    U       * This is akin to bluebird's `Promise"
  - "src/jsutils/promiseReduce.ts:5:4            Similar         U       * Similar to Array.prototype.reduce"
  - "src/jsutils/promiseReduce.ts:5:53           reducing        U       reduce(), however the reducing callback may return"
  - "src/jsutils/promiseReduce.ts:13:16          accumulator     U       callbackFn: (accumulator: U, currentValue: T"
  - "src/jsutils/README.md:3:25          dependency      U       This directory contains dependency-free JavaScript utility"
  - "src/jsutils/suggestionList.ts:5:48          similarity          U       sorted based on their similarity with the input."
  - "src/jsutils/suggestionList.ts:36:22         alteration          U       * Includes a custom alteration from Damerau-Levenshtein"
  - "src/jsutils/suggestionList.ts:37:27         helps               U       a single edit which helps identify mis-cased values"
  - "src/jsutils/suggestionList.ts:37:46         cased               U       which helps identify mis-cased values with an edit"
  - "src/jsutils/suggestionList.ts:40:36         detecting           U       distance can be useful for detecting typos in input or sorting"
  - "src/jsutils/suggestionList.ts:40:46         typos               U       useful for detecting typos in input or sorting"
  - "src/jsutils/suggestionList.ts:96:11         smallest            U       let smallestCell = (currentRow[0"
  - "src/jsutils/suggestionList.ts:107:14        transposition       U       // transposition"
  - "src/jsutils/suggestionList.ts:108:23        Diagonal            U       const doubleDiagonalCell = rows[(i - 2)"
  - "src/jsutils/suggestionList.ts:119:46        smaller             U       since distance can't go smaller than smallest element"
  - "src/jsutils/toError.ts:4:4          Sometimes       U       * Sometimes a non-error is thrown"
  - "src/language/__tests__/blockString-fuzz.ts:9:12         Printable           U       import { isPrintableAsBlockString, printBlockStrin"
  - "src/language/__tests__/blockString-fuzz.ts:27:9         printed             U       const printedValue = lexValue(blockString"
  - "src/language/__tests__/blockString-fuzz.ts:52:34        taking              U       Testing with length >7 is taking exponentially more time"
  - "src/language/__tests__/blockString-fuzz.ts:52:41        exponentially       U       length >7 is taking exponentially more time. However it"
  - "src/language/__tests__/blockString-fuzz.ts:53:8         highly              U       // highly recommended to test"
  - "src/language/__tests__/blockString-fuzz.ts:53:40        increased           U       recommended to test with increased limit if you make any"
  - "src/language/__tests__/blockString-test.ts:51:12        Yours           U       ' Yours,',"
  - "src/language/__tests__/blockString-test.ts:105:7        retains         U       it('retains indentation from first"
  - "src/language/__tests__/blockString-test.ts:165:32       printable       U       rejects strings with non-printable characters', () =>"
  - "src/language/__tests__/blockString-test.ts:224:22       liner           U       const str = 'one liner';"
  - "src/language/__tests__/blockString-test.ts:228:50       triple          U       strings ending with triple quotation as multi-line"
  - "src/language/__tests__/blockString-test.ts:228:57       quotation       U       strings ending with triple quotation as multi-line', ()"
  - "src/language/__tests__/blockString-test.ts:231:22       ntriple         U       readable: '\"\"\"\\ntriple quotation \\\\\"\"\"\\n\"\""
  - "src/language/__tests__/blockString-test.ts:242:39       quoted          U       space-led value \"quoted string\"';"
  - "src/language/__tests__/blockString-test.ts:248:50       backslash       U       single-line with trailing backslash', () => {"
  - "src/language/__tests__/blockString-test.ts:251:22       nbackslash      U       readable: '\"\"\"\\nbackslash \\\\\\n\"\"\"',"
  - "src/language/__tests__/lexer-test.ts:12:12          Punctuator      U       import { isPunctuatorTokenKind, Lexer } from"
  - "src/language/__tests__/lexer-test.ts:41:19          breaks          U       it('tracks line breaks', () => {"
  - "src/language/__tests__/lexer-test.ts:111:65         inspected       U       stringified, or jsutils.inspected', () => {"
  - "src/language/__tests__/lexer-test.ts:126:7          skips           U       it('skips whitespace and comments"
  - "src/language/__tests__/lexer-test.ts:168:14         respect         U       it('errors respect whitespace', () =>"
  - "src/language/__tests__/lexer-test.ts:274:26         maximal         U       lexOne('\"unescaped maximal unicode outside BMP"
  - "src/language/__tests__/lexer-test.ts:289:60         CDEF            U       u{5678}\\\\u{90AB}\\\\u{CDEF}\"')).to.contain("
  - "src/language/__tests__/lexer-test.ts:333:36         surrogate       U       string with unicode surrogate pair escape \\\\uD83D"
  - "src/language/__tests__/lexer-test.ts:815:58         digit           U       Invalid number, unexpected digit after 0: \"0\".',"
  - "src/language/__tests__/lexer-test.ts:933:23         BANG            U       kind: TokenKind.BANG,"
  - "src/language/__tests__/lexer-test.ts:1086:42        dashes          U       useful information for dashes in names', () => {"
  - "src/language/__tests__/lexer-test.ts:1118:16        advances        U       // Lexer advances over ignored comment"
  - "src/language/__tests__/lexer-test.ts:1119:10        easier          U       // easier, but will include them"
  - "src/language/__tests__/lexer-test.ts:1182:24        punctuator      U       it('returns true for punctuator tokens', () => {"
  - "src/language/__tests__/parser-test.ts:161:30        naively         U       Note: \\u0A0A could be naively interpreted as two line"
  - "src/language/__tests__/parser-test.ts:161:38        interpreted     U       A0A could be naively interpreted as two line-feed chars"
  - "src/language/__tests__/parser-test.ts:177:27        anywhere        U       allows non-keywords anywhere a Name is allowed',"
  - "src/language/__tests__/parser-test.ts:336:24        nameless        U       it('creates ast from nameless query without variables"
  - "src/language/__tests__/printer-test.ts:20:16        helpful             U       it('produces helpful error messages', ()"
  - "src/language/__tests__/printer-test.ts:30:19        Shorthanded         U       const queryASTShorthanded = parse('query { id"
  - "src/language/__tests__/printer-test.ts:78:7         keeps               U       it('keeps arguments on one line"
  - "src/language/__tests__/printer-test.ts:80:20        wheelchair          U       parse('{trip(wheelchair:false arriveBy:false"
  - "src/language/__tests__/printer-test.ts:80:37        arrive              U       trip(wheelchair:false arriveBy:false){dateTime}}"
  - "src/language/__tests__/printer-test.ts:95:55        Planned             U       arriveBy:false includePlannedCancellations:true transitDist"
  - "src/language/__tests__/printer-test.ts:95:62        Cancellations       U       false includePlannedCancellations:true transitDistanceReluctanc"
  - "src/language/__tests__/printer-test.ts:95:96        Reluctance          U       true transitDistanceReluctance:2000){dateTime}}',"
  - "src/language/__tests__/printer-test.ts:141:35       altering            U       kitchen sink without altering ast', () => {"
  - "src/language/__tests__/printLocation-test.ts:10:14          minified    U       it('prints minified documents', () => {"
  - "src/language/__tests__/printLocation-test.ts:12:72          HERE        U       String!=FIRST_ERROR_HERE$bar:String){someField"
  - "src/language/__tests__/printString-test.ts:11:7         escapes             U       it('escapes quotes', () => {"
  - "src/language/__tests__/printString-test.ts:16:50        who\\'s              U       s test\")).to.equal('\"who\\'s test\"');"
  - "src/language/__tests__/printString-test.ts:19:15        backslashes         U       it('escapes backslashes', () => {"
  - "src/language/__tests__/printString-test.ts:39:23        supplementary       U       it('does not escape supplementary character', () => {"
  - "src/language/__tests__/printString-test.ts:44:8         spellchecker        U       /* spellchecker:ignore abcdefghijklmnopqrstuv"
  - "src/language/__tests__/schema-parser-test.ts:130:9          Even            U       # Even with comments between"
  - "src/language/__tests__/schema-parser-test.ts:197:53         Greeting        U       type Hello implements Greeting');"
  - "src/language/__tests__/schema-parser-test.ts:264:25         anything        U       it('Extension without anything throws', () => {"
  - "src/language/__tests__/schema-parser-test.ts:469:24         inheriting      U       it('Simple interface inheriting interface', () => {"
  - "src/language/__tests__/visitor-test.ts:64:7         validates       U       it('validates path argument', ()"
  - "src/language/__tests__/visitor-test.ts:106:23       Ancestors       U       const expectedAncestors = visitedNodes.slice"
  - "src/language/__tests__/visitor-test.ts:250:7        visits          U       it('visits edited node', () =>"
  - "src/language/__tests__/visitor-test.ts:318:31       visiting        U       allows early exit while visiting', () => {"
  - "src/language/ast.ts:86:6        convenience     U       * convenience in the parser."
  - "src/language/ast.ts:91:52       amongst         U       a double-linked-list amongst all tokens"
  - "src/language/ast.ts:185:4       Utility         U       * Utility type listing all nodes"
  - "src/language/blockString.ts:1:42        Classes         U       WhiteSpace } from './characterClasses';"
  - "src/language/blockString.ts:7:32        spec's          U       implements the GraphQL spec's BlockStringValue() static"
  - "src/language/blockString.ts:139:20      Triple          U       const hasTrailingTripleQuotes = escapedValue"
  - "src/language/blockString.ts:141:49      forces          U       or double) or slash forces trailing new line"
  - "src/language/blockString.ts:148:54      improves        U       new lines only if it improves readability"
  - "src/language/blockString.ts:148:63      readability     U       only if it improves readability"
  - "src/language/lexer.ts:15:4          whenever            U       * whenever called."
  - "src/language/lexer.ts:55:6          Advances            U       * Advances the token stream to"
  - "src/language/lexer.ts:112:32        inclusive           U       In other words, the inclusive ranges of values 0x"
  - "src/language/lexer.ts:128:12        surrogates          U       * include surrogates. A surrogate pair is"
  - "src/language/lexer.ts:129:4         encodes             U       * encodes a supplementary code"
  - "src/language/lexer.ts:129:59        unpaired            U       (above U+FFFF), but unpaired surrogate"
  - "src/language/lexer.ts:132:12        Supplementary       U       function isSupplementaryCodePoint(body: string"
  - "src/language/lexer.ts:134:14        Surrogate           U       isLeadingSurrogate(body.charCodeAt(location"
  - "src/language/lexer.ts:187:40        finds               U       whitespace until it finds the next lexable token"
  - "src/language/lexer.ts:188:4         punctuators         U       * punctuators immediately or calls"
  - "src/language/lexer.ts:189:4         complicated         U       * complicated tokens."
  - "src/language/lexer.ts:204:18        Terminator          U       // - LineTerminator"
  - "src/language/lexer.ts:320:4         Reads               U       * Reads a comment token from"
  - "src/language/lexer.ts:362:27        Fractional          U       depending on whether a FractionalPart or ExponentPart"
  - "src/language/lexer.ts:615:22        formed              U       // a valid pair is formed."
  - "src/language/lexer.ts:628:21        internally          U       // not been internally based on UTF-16, then"
  - "src/language/lexer.ts:643:15        hexadecimal         U       * Reads four hexadecimal characters and returns"
  - "src/language/lexer.ts:688:47        solidus             U       U+005C | reverse solidus (back slash) |"
  - "src/language/lexer.ts:690:39        backspace           U       | U+0008 | backspace"
  - "src/language/location.ts:16:4           Takes       U       * Takes a Source and a UTF-"
  - "src/language/parser.ts:75:52        know            U       creates AST nodes that know the location"
  - "src/language/parser.ts:77:6         disables        U       * disables that behavior for performance"
  - "src/language/parser.ts:83:17        extreme         U       * however in extreme cases it becomes quadratic"
  - "src/language/parser.ts:83:66        exhaustion      U       quadratic due to memory exhaustion."
  - "src/language/parser.ts:84:14        happens         U       * Parsing happens before validation so"
  - "src/language/parser.ts:93:34        understand      U       enabled, the parser will understand and parse variable definition"
  - "src/language/parser.ts:94:42        They'll         U       fragment definition. They'll be represented in the"
  - "src/language/parser.ts:131:7        isolation       U       * in isolation of complete GraphQL"
  - "src/language/parser.ts:133:4        Consider        U       * Consider providing the results"
  - "src/language/parser.ts:147:33       raises          U       to parseValue(), but raises a parse error if it"
  - "src/language/parser.ts:183:35       assist          U       is exported only to assist people in implementing"
  - "src/language/parser.ts:184:70       resort          U       be used only as last resort for cases"
  - "src/language/parser.ts:187:48       versioned       U       internal API and is versioned, so any changes to it"
  - "src/language/parser.ts:211:6        Converts        U       * Converts a name lex token into"
  - "src/language/parser.ts:261:14       peek            U       if (this.peek(TokenKind.BRACE_L))"
  - "src/language/parser.ts:495:6        Corresponds     U       * Corresponds to both FragmentSpread"
  - "src/language/parser.ts:530:27       defining        U       Legacy support for defining variables within fragments"
  - "src/language/parser.ts:1428:70      advancing       U       return that token after advancing the lexer."
  - "src/language/parser.ts:1501:52      determined      U       list of parse nodes, determined by the parseFn."
  - "src/language/parser.ts:1559:78      separated       U       limiterKind followed by items separated by lex tokens of tokenKind"
  - "src/language/printer.ts:6:18        Reducer         U       import type { ASTReducer } from './visitor';"
  - "src/language/printer.ts:10:52       reasonable      U       string, using one set of reasonable"
  - "src/language/printLocation.ts:48:12         Prefixed    U       printPrefixedLines(["
  - "src/language/printString.ts:13:16       Sequences       U       return escapeSequences[str.charCodeAt(0)];"
  - "src/language/README.md:3:50         parsing     U       module is responsible for parsing and operating on the"
  - "src/language/tokenKind.ts:3:10          emits       U       * lexer emits."
  - "src/language/visitor.ts:10:57       traversal           U       during the visitor's traversal."
  - "src/language/visitor.ts:20:30       Visited             U       interface EnterLeaveVisitor<TVisitedNode extends ASTNode"
  - "src/language/visitor.ts:26:17       comprised           U       * A visitor is comprised of visit functions,"
  - "src/language/visitor.ts:39:42       reaching            U       Arrays visited before reaching parent of this node"
  - "src/language/visitor.ts:47:6        reducer             U       * A reducer is comprised of reducer"
  - "src/language/visitor.ts:81:32       traversable         U       KeyMap describes each the traversable properties of each kind"
  - "src/language/visitor.ts:97:35       altered             U       of the visitor can be altered, including skipping"
  - "src/language/visitor.ts:111:42      altogether          U       BREAK: stop visiting altogether"
  - "src/language/visitor.ts:126:4       Alternatively       U       * Alternatively to providing enter("
  - "src/language/visitor.ts:128:58      permutations        U       key, leading to three permutations of the"
  - "src/language/visitor.ts:131:37      entering            U       visitors triggered when entering a node of a specific"
  - "src/language/visitor.ts:204:13      Leaving             U       const isLeaving = index === keys.length"
  - "src/README.md:3:39          everything      U       graphql` module includes everything you need to define a"
  - "src/README.md:20:39         Creating        U       ](error/README.md): Creating and formatting GraphQL"
  - "src/README.md:21:61         computations    U       README.md): Common useful computations upon"
  - "src/subscription/index.ts:4:4           better          U       * better conform with the terminology"
  - "src/subscription/index.ts:4:11          conform         U       * better conform with the terminology"
  - "src/subscription/index.ts:17:27         broadened       U       ExecutionArgs has been broadened to include all properties"
  - "src/subscription/index.ts:18:33         retained        U       SubscriptionArgs type is retained for backwards compatibility"
  - "src/subscription/README.md:3:70         exported        U       deprecated with its exported functions integrated"
  - "src/subscription/README.md:3:359        major           U       module. In the next major release, the `graphql"
  - "src/subscription/README.md:3:416        dropped         U       subscription` module will be dropped entirely."
  - "src/subscription/README.md:5:54         subscribing     U       module is responsible for subscribing to updates on specific"
  - "src/type/__tests__/assertName-test.ts:29:32         Meanings    U       () => assertName('42MeaningsOfLife')).to.throw("
  - "src/type/__tests__/definition-test.ts:155:16        mutate          U       it('does not mutate passed field definitions"
  - "src/type/__tests__/definition-test.ts:215:33        terrible        U       deprecationReason: 'A terrible reason',"
  - "src/type/__tests__/definition-test.ts:556:24        Unions          U       describe('Type System: Unions', () => {"
  - "src/type/__tests__/definition-test.ts:629:36        Just            U       deprecationReason: 'Just because' },"
  - "src/type/__tests__/definition-test.ts:876:29        preserved       U       Deprecation reason is preserved on fields', () => {"
  - "src/type/__tests__/definition-test.ts:882:40        anymore         U       deprecationReason: 'not used anymore',"
  - "src/type/__tests__/enumType-test.ts:78:16       Good            U       provideGoodValue: { type: GraphQLBoolean"
  - "src/type/__tests__/enumType-test.ts:182:56      GREENISH        U       colorEnum(fromEnum: GREENISH) }');"
  - "src/type/__tests__/enumType-test.ts:301:67      expecting       U       String!\" used in position expecting type \"Color\".',"
  - "src/type/__tests__/enumType-test.ts:361:7       presents        U       it('presents a getValues() API for"
  - "src/type/__tests__/enumType-test.ts:428:14      introspected    U       it('can be introspected without error', ()"
  - "src/type/__tests__/introspection-test.ts:1015:7         introspects     U       it('introspects on input object', ("
  - "src/type/__tests__/introspection-test.ts:1216:7         respects        U       it('respects the includeDeprecated"
  - "src/type/__tests__/introspection-test.ts:1353:9         ALSO            U       ALSO_NON_DEPRECATED"
  - "src/type/__tests__/predicate-test.ts:115:34         garbage     U       returns false for random garbage', () => {"
  - "src/type/__tests__/predicate-test.ts:522:9          unwraps     U       it('unwraps non-null type', ()"
  - "src/type/__tests__/predicate-test.ts:553:17         wrapper     U       it('unwraps wrapper types', () => {"
  - "src/type/__tests__/predicate-test.ts:558:17         deeply      U       it('unwraps deeply wrapper types', ()"
  - "src/type/__tests__/scalars-test.ts:134:26       accidental          U       // as Int to avoid accidental data loss."
  - "src/type/__tests__/scalars-test.ts:148:43       bigger              U       JavaScript int, but bigger than 2^32, so not"
  - "src/type/__tests__/scalars-test.ts:149:10       representable       U       // representable as a GraphQL Int"
  - "src/type/__tests__/scalars-test.ts:168:10       Doesn't             U       // Doesn't represent number"
  - "src/type/__tests__/schema-test.ts:190:36        subtypes        U       includes interface's thunk subtypes in the type map\", ("
  - "src/type/__tests__/schema-test.ts:263:7         preserves       U       it('preserves the order of user provided"
  - "src/type/__tests__/schema-test.ts:323:24        assumed         U       describe('when not assumed valid', () => {"
  - "src/type/__tests__/schema-test.ts:324:11        configures      U       it('configures the schema to still"
  - "src/type/__tests__/schema-test.ts:324:42        needing         U       the schema to still needing validation', () =>"
  - "src/type/__tests__/schema-test.ts:332:40        mistakes        U       the configuration for mistakes', () => {"
  - "src/type/__tests__/schema-test.ts:342:37        uniquely        U       Schema must contain uniquely named types', () =>"
  - "src/type/__tests__/schema-test.ts:343:34        redefines       U       rejects a Schema which redefines a built-in type', ("
  - "src/type/__tests__/schema-test.ts:344:15        Fake            U       const FakeString = new GraphQLScalarType"
  - "src/type/__tests__/schema-test.ts:350:13        fake            U       fake: { type: FakeString"
  - "src/type/__tests__/schema-test.ts:372:57        twice           U       defines an object type twice', () => {"
  - "src/type/__tests__/validation-test.ts:770:36        breakable       U       an Input Object with breakable circular reference'"
  - "src/type/__tests__/validation-test.ts:1259:66       mismatching     U       extended interface due to mismatching interface type', ()"
  - "src/type/__tests__/validation-test.ts:1284:19       Mismatching     U       interface MismatchingInterface {"
  - "src/type/__tests__/validation-test.ts:1724:24       adhere          U       describe('Objects must adhere to Interface they implement"
  - "src/type/__tests__/validation-test.ts:1829:32       differently     U       rejects an Object with a differently typed Interface field"
  - "src/type/__tests__/validation-test.ts:2015:33       equivalently    U       accepts an Object with an equivalently wrapped Interface field"
  - "src/type/__tests__/validation-test.ts:2101:32       superset        U       rejects an Object with a superset nullable Interface field"
  - "src/type/__tests__/validation-test.ts:2127:35       transitive      U       an Object missing a transitive interface', () => {"
  - "src/type/__tests__/validation-test.ts:2680:7        combines        U       it('combines multiple errors', ("
  - "src/type/definition.ts:328:14       Wrapper             U       * List Type Wrapper"
  - "src/type/definition.ts:375:19       enforce             U       * Non-null types enforce that their values are"
  - "src/type/definition.ts:377:39       guarantee           U       you can make a strong guarantee on non-nullability,"
  - "src/type/definition.ts:390:14       enforcement         U       * Note: the enforcement of non-nullability occurs"
  - "src/type/definition.ts:685:7        Parses              U       /** Parses an externally provided"
  - "src/type/definition.ts:685:17       externally          U       /** Parses an externally provided value to use"
  - "src/type/definition.ts:722:4        Almost              U       * Almost all of the GraphQL types"
  - "src/type/definition.ts:723:26       importantly         U       have a name, but most importantly describe their fields"
  - "src/type/definition.ts:743:58       needs               U       each other, or a type needs to refer to"
  - "src/type/definition.ts:744:64       closure             U       function expression (aka a closure or a"
  - "src/type/definition.ts:745:32       lazily              U       to supply the fields lazily."
  - "src/type/definition.ts:848:7        Plain               U       isPlainObj(fieldMap),"
  - "src/type/definition.ts:1096:37      heterogeneous       U       can return one of a heterogeneous set of types, a Interface"
  - "src/type/definition.ts:1607:4       supplied            U       * supplied to a field argument"
  - "src/type/directives.ts:53:59        modifying       U       runtime as a way of modifying execution"
  - "src/type/directives.ts:54:26        creators        U       behavior. Type system creators will usually not create"
  - "src/type/directives.ts:202:19       Exposes         U       description: 'Exposes a URL that specifies"
  - "src/type/directives.ts:202:38       specifies       U       'Exposes a URL that specifies the behavior of this"
  - "src/type/index.ts:64:11         Wrappers    U       // Type Wrappers"
  - "src/type/schema.ts:65:27        supplying           U       Schema is created by supplying the root types of each"
  - "src/type/schema.ts:78:29        constructed         U       When the schema is constructed, by default only the"
  - "src/type/schema.ts:79:17        traversing          U       * reachable by traversing the root types are included"
  - "src/type/schema.ts:80:4         explicitly          U       * explicitly referenced."
  - "src/type/schema.ts:111:9        necessary           U       * // necessary to explicitly list the"
  - "src/type/schema.ts:145:12       implementations     U       private _implementationsMap: ObjMap<{"
  - "src/type/schema.ts:179:20       collected           U       // the set of \"collected\" types, so `collectReferenced"
  - "src/type/schema.ts:210:8        Storing             U       // Storing the resulting map for"
  - "src/type/schema.ts:307:17       Implementations     U       : this.getImplementations(abstractType).objects"
  - "src/type/validate.ts:57:53          fact            U       provided value is in fact a GraphQLSchema."
  - "src/type/validate.ts:65:27          producing       U       Validate the schema, producing a list of errors."
  - "src/type/validate.ts:379:26         covariant       U       / a valid subtype. (covariant)"
  - "src/type/validate.ts:571:14         redundantly     U       // are not redundantly reported."
  - "src/type/validate.ts:574:43         meaningful      U       nodes used to produce meaningful errors"
  - "src/type/validate.ts:582:18         straight        U       // This does a straight-forward DFS to find"
  - "src/type/validate.ts:583:55         continues       U       cycle was found but continues to explore"
  - "src/type/validate.ts:583:68         explore         U       found but continues to explore"
  - "src/utilities/__tests__/astFromValue-test.ts:72:36          coercing        U       spec does not allow coercing non-integer values to"
  - "src/utilities/__tests__/astFromValue-test.ts:249:7          GOODBYE         U       GOODBYE: {},"
  - "src/utilities/__tests__/astFromValue-test.ts:250:7          COMPLEX         U       COMPLEX: { value: complexValue"
  - "src/utilities/__tests__/astFromValue-test.ts:315:21         singletons      U       it('converts list singletons', () => {"
  - "src/utilities/__tests__/buildASTSchema-test.ts:47:39        going               U       does a full cycle of going from a string with the"
  - "src/utilities/__tests__/buildASTSchema-test.ts:48:37        materializing       U       parsed in a schema AST, materializing that schema AST into"
  - "src/utilities/__tests__/buildASTSchema-test.ts:49:46        printing            U       aphQLSchema, and then finally printing that object into the"
  - "src/utilities/__tests__/buildASTSchema-test.ts:100:7        Ignores             U       it('Ignores non-type system definitions"
  - "src/utilities/__tests__/buildASTSchema-test.ts:176:17       agree               U       \"\"\"Do you agree that this is the most"
  - "src/utilities/__tests__/buildASTSchema-test.ts:176:45       creative            U       that this is the most creative schema ever?\"\"\""
  - "src/utilities/__tests__/buildASTSchema-test.ts:187:14       knows               U       \"\"\"Who knows what inside this scalar"
  - "src/utilities/__tests__/buildASTSchema-test.ts:188:14       Mystery             U       scalar MysteryScalar"
  - "src/utilities/__tests__/buildASTSchema-test.ts:203:18       Hole                U       union BlackHole"
  - "src/utilities/__tests__/buildASTSchema-test.ts:214:17       great               U       \"\"\"What a great type\"\"\""
  - "src/utilities/__tests__/buildASTSchema-test.ts:216:27       boot                U       \"\"\"And a field to boot\"\"\""
  - "src/utilities/__tests__/buildASTSchema-test.ts:223:7        Maintains           U       it('Maintains @include, @skip & @specifiedB"
  - "src/utilities/__tests__/buildASTSchema-test.ts:238:7        Overriding          U       it('Overriding directives excludes"
  - "src/utilities/__tests__/buildASTSchema-test.ts:261:7        Adding              U       it('Adding directives maintains"
  - "src/utilities/__tests__/buildASTSchema-test.ts:261:25       maintains           U       it('Adding directives maintains @include, @skip, @deprecated"
  - "src/utilities/__tests__/buildASTSchema-test.ts:574:12       Concrete            U       type Concrete implements Interface"
  - "src/utilities/__tests__/buildASTSchema-test.ts:626:42       Terrible            U       deprecated(reason: \"Terrible reasons\")"
  - "src/utilities/__tests__/buildASTSchema-test.ts:637:42       Because             U       deprecated(reason: \"Because I said so\")"
  - "src/utilities/__tests__/buildASTSchema-test.ts:637:52       said                U       deprecated(reason: \"Because I said so\")"
  - "src/utilities/__tests__/buildASTSchema-test.ts:1044:53      silently            U       desired behavior to just silently ignore override"
  - "src/utilities/__tests__/buildASTSchema-test.ts:1045:25      documenting         U       // attempts so just documenting it here."
  - "src/utilities/__tests__/buildClientSchema-test.ts:196:27        Friendly        U       type Dog implements Friendly {"
  - "src/utilities/__tests__/buildClientSchema-test.ts:201:21        friend          U       \"\"\"The best friend of this friendly thing"
  - "src/utilities/__tests__/buildClientSchema-test.ts:336:11        food            U       const foodEnum = new GraphQLEnumType"
  - "src/utilities/__tests__/buildClientSchema-test.ts:338:21        Varieties       U       description: 'Varieties of food stuffs',"
  - "src/utilities/__tests__/buildClientSchema-test.ts:338:39        stuffs          U       'Varieties of food stuffs',"
  - "src/utilities/__tests__/buildClientSchema-test.ts:340:9         VEGETABLES      U       VEGETABLES: {"
  - "src/utilities/__tests__/buildClientSchema-test.ts:341:40        vegetables      U       description: 'Foods that are vegetables.',"
  - "src/utilities/__tests__/buildClientSchema-test.ts:344:9         FRUITS          U       FRUITS: {"
  - "src/utilities/__tests__/buildClientSchema-test.ts:347:9         OILS            U       OILS: {"
  - "src/utilities/__tests__/buildClientSchema-test.ts:349:35        fatty           U       deprecationReason: 'Too fatty',"
  - "src/utilities/__tests__/buildClientSchema-test.ts:358:27        Repeats         U       description: 'Repeats the arg you give it"
  - "src/utilities/__tests__/buildClientSchema-test.ts:358:47        give            U       Repeats the arg you give it',"
  - "src/utilities/__tests__/buildClientSchema-test.ts:380:63        mirrors         U       only values, so `value` mirrors `name`,"
  - "src/utilities/__tests__/buildClientSchema-test.ts:491:22        shiny           U       \"\"\"This is a shiny new argument\"\"\""
  - "src/utilities/__tests__/buildClientSchema-test.ts:499:15        rosy            U       \"\"\"So rosy\"\"\""
  - "src/utilities/__tests__/buildClientSchema-test.ts:502:15        grassy          U       \"\"\"So grassy\"\"\""
  - "src/utilities/__tests__/buildClientSchema-test.ts:505:15        calming         U       \"\"\"So calming\"\"\""
  - "src/utilities/__tests__/buildClientSchema-test.ts:508:15        sickening       U       \"\"\"So sickening\"\"\""
  - "src/utilities/__tests__/buildClientSchema-test.ts:509:9         MAUVE           U       MAUVE @deprecated(reason:"
  - "src/utilities/__tests__/buildClientSchema-test.ts:509:49        fashion         U       reason: \"No longer in fashion\")"
  - "src/utilities/__tests__/buildClientSchema-test.ts:649:153       alongside       U       errors\" was returned alongside: null.',"
  - "src/utilities/__tests__/buildClientSchema-test.ts:906:10        Decorated       U       'Decorated type deeper than introspectio"
  - "src/utilities/__tests__/buildClientSchema-test.ts:935:13        prevents        U       describe('prevents infinite recursion on"
  - "src/utilities/__tests__/coerceInputValue-test.ts:16:11          Coerce          U       interface CoerceResult {"
  - "src/utilities/__tests__/coerceInputValue-test.ts:107:30         satisfy         U       expectValue(result).to.satisfy(Number.isNaN);"
  - "src/utilities/__tests__/coerceInputValue-test.ts:151:30         misspelled      U       returns an error for misspelled enum value', () =>"
  - "src/utilities/__tests__/coerceInputValue-test.ts:264:46         bart            U       coerceValue({ foo: 123, bart: 123 }, TestInputObject"
  - "src/utilities/__tests__/concatAST-test.ts:13:7          concatenates    U       it('concatenates two ASTs together',"
  - "src/utilities/__tests__/extendSchema-test.ts:155:17         Twice           U       const extendTwiceAST = parse(`"
  - "src/utilities/__tests__/extendSchema-test.ts:204:15         unions          U       it('extends unions by adding new types"
  - "src/utilities/__tests__/extendSchema-test.ts:375:13         MORE            U       ONE_MORE_NEW_VALUE"
  - "src/utilities/__tests__/extendSchema-test.ts:555:7          adds            U       it('adds new unused types',"
  - "src/utilities/__tests__/extendSchema-test.ts:839:9          ANOTHER         U       ANOTHER_NEW_VALUE"
  - "src/utilities/__tests__/extendSchema-test.ts:1157:22        replacing       U       it('does not allow replacing a default directive"
  - "src/utilities/__tests__/extendSchema-test.ts:1164:72        redefined       U       schema. It cannot be redefined.',"
  - "src/utilities/__tests__/findBreakingChanges-test.ts:68:27       Becomes         U       scalar TypeWasScalarBecomesEnum"
  - "src/utilities/__tests__/findBreakingChanges-test.ts:656:24      Loses           U       enum EnumTypeThatLosesAValue {"
  - "src/utilities/__tests__/findBreakingChanges-test.ts:663:20      Loose           U       type TypeThatLooseInterface1 implements"
  - "src/utilities/__tests__/findBreakingChanges-test.ts:769:44      REPEATABLE      U       BreakingChangeType.DIRECTIVE_REPEATABLE_REMOVED,"
  - "src/utilities/__tests__/findBreakingChanges-test.ts:783:31      Stays           U       directive @DirectiveThatStays on FIELD_DEFINITION"
  - "src/utilities/__tests__/findBreakingChanges-test.ts:798:40      implicitly      U       detect if a directive was implicitly removed', () => {"
  - "src/utilities/__tests__/findBreakingChanges-test.ts:1152:23     dangerous       U       it('should find all dangerous changes', () => {"
  - "src/utilities/__tests__/findBreakingChanges-test.ts:1164:20     Gains           U       type TypeThatGainsInterface1"
  - "src/utilities/__tests__/getOperationAST-test.ts:29:20       ambiguous       U       it('Does not get ambiguous unnamed operation',"
  - "src/utilities/__tests__/getOperationAST-test.ts:47:20       misnamed        U       it('Does not get misnamed operation', () => {"
  - "src/utilities/__tests__/printSchema-test.ts:26:16       Printed         U       function expectPrintedSchema(schema: GraphQLSchema"
  - "src/utilities/__tests__/printSchema-test.ts:279:7       Omits           U       it('Omits schema of common names"
  - "src/utilities/__tests__/printSchema-test.ts:398:13      Hierarchical    U       it('Print Hierarchical Interface', () => {"
  - "src/utilities/__tests__/printSchema-test.ts:646:35      awesome         U       description: 'This field is awesome',"
  - "src/utilities/__tests__/separateOperations-test.ts:14:7         separates       U       it('separates one AST into multiple"
  - "src/utilities/__tests__/separateOperations-test.ts:14:40        maintaining     U       one AST into multiple, maintaining document order', ()"
  - "src/utilities/__tests__/separateOperations-test.ts:112:7        survives        U       it('survives circular dependencies"
  - "src/utilities/__tests__/separateOperations-test.ts:162:7        distinguish     U       it('distinguish query and fragment names"
  - "src/utilities/__tests__/separateOperations-test.ts:165:16       Clash           U       ...NameClash"
  - "src/utilities/__tests__/stripIgnoredCharacters-fuzz.ts:23:7         strips      U       it('strips ignored characters inside"
  - "src/utilities/__tests__/stripIgnoredCharacters-fuzz.ts:39:13        stripped    U       const strippedValue = lexValue(stripIgnoredC"
  - "src/utilities/__tests__/stripIgnoredCharacters-test.ts:70:16        Stripped    U       function expectStripped(docString: string)"
  - "src/utilities/__tests__/stripIgnoredCharacters-test.ts:95:7         Stay        U       toStayTheSame(): void {"
  - "src/utilities/__tests__/stripIgnoredCharacters-test.ts:161:18       parsable    U       it('strips non-parsable document', () => {"
  - "src/utilities/__tests__/stripIgnoredCharacters-test.ts:272:52       below       U       that is handled in the below test"
  - "src/utilities/__tests__/TypeInfo-test.ts:34:8           Alien           U       type Alien {"
  - "src/utilities/__tests__/TypeInfo-test.ts:40:5           alien           U       alien: Alien"
  - "src/utilities/__tests__/TypeInfo-test.ts:351:16         traversals      U       it('supports traversals of input values', ("
  - "src/utilities/__tests__/valueFromAST-test.ts:133:7          coerces         U       it('coerces to null unless non-null"
  - "src/utilities/__tests__/valueFromAST-test.ts:264:26         singleton       U       / do not expect the singleton wrapping behavior for"
  - "src/utilities/__tests__/valueFromAST-test.ts:271:37         unprovided      U       input object fields for unprovided variables', () => {"
  - "src/utilities/astFromValue.ts:80:6          Populate        U       // Populate the fields of the input"
  - "src/utilities/astFromValue.ts:102:50        converting      U       represented value before converting into an AST."
  - "src/utilities/astFromValue.ts:108:8         Others          U       // Others serialize based on their"
  - "src/utilities/buildASTSchema.ts:64:63       actionable      U       ) will produce more actionable results."
  - "src/utilities/buildClientSchema.ts:59:20        mechanisms          U       * server-internal mechanisms."
  - "src/utilities/buildClientSchema.ts:123:6        preferring          U       // preferring cached instances before"
  - "src/utilities/buildClientSchema.ts:176:17       Properly            U       // FIXME: Properly type IntrospectionType"
  - "src/utilities/buildClientSchema.ts:177:61       exhaustiveness      U       typescript-eslint/switch-exhaustiveness-check"
  - "src/utilities/buildClientSchema.ts:354:15       Introspections      U       inputValueIntrospections: ReadonlyArray<IntrospectionI"
  - "src/utilities/coerceInputValue.ts:72:8          Explicitly      U       // Explicitly return the value null"
  - "src/utilities/concatAST.ts:6:4          concatenate     U       * concatenate the ASTs together into"
  - "src/utilities/concatAST.ts:7:54         conceptual      U       together represent one conceptual application."
  - "src/utilities/extendSchema.ts:98:4          remain          U       * remain unaltered."
  - "src/utilities/extendSchema.ts:98:11         unaltered       U       * remain unaltered."
  - "src/utilities/extendSchema.ts:101:21        effectively     U       * extended without effectively making an entire copy"
  - "src/utilities/extendSchema.ts:102:8         late            U       * too late if subgraphs remain"
  - "src/utilities/extendSchema.ts:104:19        copies          U       * This algorithm copies the provided schema"
  - "src/utilities/extendSchema.ts:105:44        remains         U       The original schema remains unaltered."
  - "src/utilities/extendSchema.ts:196:14        incorporate     U       // Then, incorporate schema definition and"
  - "src/utilities/extendSchema.ts:216:6         Below           U       // Below are functions used for"
  - "src/utilities/findBreakingChanges.ts:79:24          covered     U       of breaking changes covered by the other functions"
  - "src/utilities/findBreakingChanges.ts:414:21         looking     U       // Since we looking only for client's observable"
  - "src/utilities/getOperationAST.ts:20:44          Upon    U       defined in the document. Upon encountering the second"
  - "src/utilities/getOperationRootType.ts:12:4          Extracts    U       * Extracts the root type of the"
  - "src/utilities/index.ts:104:66       deduced     U       and types that can be deduced from it."
  - "src/utilities/introspectionFromSchema.ts:19:4           relationships       U       * relationships, but do not need to"
  - "src/utilities/introspectionFromSchema.ts:22:58          comparisons         U       instance when doing schema comparisons."
  - "src/utilities/printSchema.ts:40:15          Filtered        U       return printFilteredSchema("
  - "src/utilities/printSchema.ts:99:55          manner          U       can be named in any manner, however there is"
  - "src/utilities/printSchema.ts:100:20         convention      U       * a common naming convention:"
  - "src/utilities/separateOperations.ts:15:4        refers          U       * refers to."
  - "src/utilities/separateOperations.ts:46:14       Transitive      U       collectTransitiveDependencies(dependencies"
  - "src/utilities/separateOperations.ts:49:8        Provides        U       // Provides the empty string for"
  - "src/utilities/separateOperations.ts:53:11       retain          U       // to retain the same order as the"
  - "src/utilities/stripIgnoredCharacters.ts:16:63       neighboring     U       delimiter character between neighboring"
  - "src/utilities/stripIgnoredCharacters.ts:19:10       guaranteed      U       * It is guaranteed that both input and"
  - "src/utilities/stripIgnoredCharacters.ts:23:46       stay            U       guaranteed that it will stay the same between different"
  - "src/utilities/typeComparators.ts:15:6           Equivalent      U       // Equivalent types are equal."
  - "src/utilities/typeComparators.ts:83:44          concrete        U       the Sets of possible concrete types for each intersect"
  - "src/utilities/typeComparators.ts:83:68          intersect       U       concrete types for each intersect."
  - "src/utilities/typeComparators.ts:88:21          commutative     U       * This function is commutative."
  - "src/utilities/typeComparators.ts:108:25         latter          U       // Determine if the latter type is a possible concrete"
  - "src/utilities/typeComparators.ts:108:72         former          U       concrete type of the former."
  - "src/utilities/typedQueryDocumentNode.ts:10:61       nominal     U       proper way to enforce nominal typing"
  - "src/utilities/typedQueryDocumentNode.ts:13:43       whatever    U       Result is assignable to whatever you pass your result"
  - "src/utilities/TypeInfo.ts:62:19         somewhere       U       * beginning somewhere other than documents"
  - "src/utilities/TypeInfo.ts:147:12        assumptions     U       // any assumptions of a valid schema to"
  - "src/utilities/TypeInfo.ts:302:4         statically      U       * statically evaluated environment"
  - "src/utilities/valueFromAST.ts:24:52         validly         U       the value could not be validly coerced according to"
  - "src/utilities/valueFromAST.ts:45:8          Importantly     U       // Importantly, this is different from"
  - "src/utilities/valueFromAST.ts:59:27         further         U       Note: This does no further checking that this variable"
  - "src/utilities/valueFromAST.ts:60:13         assumes         U       // This assumes that this query has"
  - "src/validation/__tests__/ExecutableDefinitionsRule-test.ts:5:43         harness     U       ectValidationErrors } from './harness';"
  - "src/validation/__tests__/FieldsOnCorrectTypeRule-test.ts:35:5           bark            U       barkVolume: Int"
  - "src/validation/__tests__/FieldsOnCorrectTypeRule-test.ts:92:7           Lying           U       it('Lying alias selection', ("
  - "src/validation/__tests__/FieldsOnCorrectTypeRule-test.ts:94:16          lying           U       fragment lyingAliasSelection on Dog"
  - "src/validation/__tests__/FieldsOnCorrectTypeRule-test.ts:110:25         Again           U       fragment typeKnownAgain on Pet {"
  - "src/validation/__tests__/FieldsOnCorrectTypeRule-test.ts:232:25         Implementors    U       fragment definedOnImplementorsButNotInterface on Pet"
  - "src/validation/__tests__/FieldsOnCorrectTypeRule-test.ts:267:37         Queried         U       definedOnImplementorsQueriedOnUnion on CatOrDog"
  - "src/validation/__tests__/FieldsOnCorrectTypeRule-test.ts:342:14         shows           U       it('Only shows one set of suggestions"
  - "src/validation/__tests__/FieldsOnCorrectTypeRule-test.ts:367:40         inheritance     U       suggestions based on inheritance order', () => {"
  - "src/validation/__tests__/FieldsOnCorrectTypeRule-test.ts:393:19         Animal          U       interface Animal { name: String }"
  - "src/validation/__tests__/FieldsOnCorrectTypeRule-test.ts:396:19         Canine          U       interface Canine implements Animal &"
  - "src/validation/__tests__/FieldsOnCorrectTypeRule-test.ts:399:19         Feline          U       interface Feline implements Animal &"
  - "src/validation/__tests__/harness.ts:32:5        HEEL            U       HEEL"
  - "src/validation/__tests__/harness.ts:41:9        Know            U       doesKnowCommand(dogCommand: DogCommand"
  - "src/validation/__tests__/harness.ts:42:12       Trained         U       isHouseTrained(atOtherHomes: Boolean"
  - "src/validation/__tests__/harness.ts:42:27       Homes           U       isHouseTrained(atOtherHomes: Boolean = true): Boolean"
  - "src/validation/__tests__/harness.ts:61:5        relatives       U       relatives: [Human]"
  - "src/validation/__tests__/harness.ts:68:5        SPOTTED         U       SPOTTED"
  - "src/validation/__tests__/harness.ts:87:8        Complicated     U       type ComplicatedArgs {"
  - "src/validation/__tests__/harness.ts:89:12       Coercion        U       # TODO Coercion"
  - "src/validation/__tests__/harness.ts:90:15       Nulls           U       # TODO NotNulls"
  - "src/validation/__tests__/KnownArgumentNamesRule-test.ts:273:24      overridden      U       it('unknown arg on overridden standard directive'"
  - "src/validation/__tests__/KnownDirectivesRule-test.ts:134:17         placed      U       it('with well placed directives', () =>"
  - "src/validation/__tests__/KnownTypeNamesRule-test.ts:56:24       Jumbled     U       query Foo($var: [JumbledUpLetters!]!) {"
  - "src/validation/__tests__/KnownTypeNamesRule-test.ts:56:33       Letters     U       Foo($var: [JumbledUpLetters!]!) {"
  - "src/validation/__tests__/KnownTypeNamesRule-test.ts:62:29       Peat        U       fragment PetFields on Peat {"
  - "src/validation/__tests__/LoneAnonymousOperationRule-test.ts:15:49       alone       U       Anonymous operation must be alone', () => {"
  - "src/validation/__tests__/LoneAnonymousOperationRule-test.ts:24:11       anon        U       it('one anon operation', () => {"
  - "src/validation/__tests__/LoneSchemaDefinitionRule-test.ts:86:7          redefine    U       it('redefine schema in schema extension"
  - "src/validation/__tests__/MaxIntrospectionDepthRule-test.ts:540:15       infinitely      U       it(\"doesn't infinitely recurse on fragment"
  - "src/validation/__tests__/NoFragmentCyclesRule-test.ts:23:7          spreading       U       it('spreading twice is not circular"
  - "src/validation/__tests__/NoFragmentCyclesRule-test.ts:30:23         indirectly      U       it('spreading twice indirectly is not circular', ("
  - "src/validation/__tests__/NoFragmentCyclesRule-test.ts:45:25         Anon            U       fragment spreadsInAnon on Pet {"
  - "src/validation/__tests__/NoFragmentCyclesRule-test.ts:112:46        opposite        U       itself indirectly reports opposite order', () => {"
  - "src/validation/__tests__/NoSchemaIntrospectionCustomRule-test.ts:32:21          Prohibit    U       describe('Validate: Prohibit introspection queries"
  - "src/validation/__tests__/OverlappingFieldsCanBeMergedRule-test.ts:46:21         Identical       U       fragment mergeIdenticalFields on Dog {"
  - "src/validation/__tests__/OverlappingFieldsCanBeMergedRule-test.ts:90:14         Differing       U       // Note: Differing skip/include directives"
  - "src/validation/__tests__/OverlappingFieldsCanBeMergedRule-test.ts:91:53         differing       U       in conditions where differing runtime values"
  - "src/validation/__tests__/OverlappingFieldsCanBeMergedRule-test.ts:119:35        overlapping     U       aliases allowed on non-overlapping fields', () => {"
  - "src/validation/__tests__/OverlappingFieldsCanBeMergedRule-test.ts:120:71        thus            U       a \"Dog\" and a \"Cat\", thus"
  - "src/validation/__tests__/OverlappingFieldsCanBeMergedRule-test.ts:134:13        masking         U       it('Alias masking direct field access"
  - "src/validation/__tests__/OverlappingFieldsCanBeMergedRule-test.ts:136:21        Masking         U       fragment aliasMaskingDirectFieldAccess on"
  - "src/validation/__tests__/OverlappingFieldsCanBeMergedRule-test.ts:593:34        unambiguous     U       return types must be unambiguous', () => {"
  - "src/validation/__tests__/OverlappingFieldsCanBeMergedRule-test.ts:597:9         unrelated       U       unrelatedField: String"
  - "src/validation/__tests__/OverlappingFieldsCanBeMergedRule-test.ts:661:46        Thus            U       future to allow this. Thus it is invalid."
  - "src/validation/__tests__/OverlappingFieldsCanBeMergedRule-test.ts:688:27        shapes          U       it('compatible return shapes on different return"
  - "src/validation/__tests__/OverlappingFieldsCanBeMergedRule-test.ts:713:9         disallows       U       it('disallows differing return types"
  - "src/validation/__tests__/OverlappingFieldsCanBeMergedRule-test.ts:1003:9        compares        U       it('compares deep types including"
  - "src/validation/__tests__/OverlappingFieldsCanBeMergedRule-test.ts:1137:33       transitively    U       not infinite loop on transitively recursive fragment'"
  - "src/validation/__tests__/PossibleFragmentSpreadsRule-test.ts:22:13          Being           U       interface Being {"
  - "src/validation/__tests__/PossibleFragmentSpreadsRule-test.ts:42:13          Intelligent     U       interface Intelligent {"
  - "src/validation/__tests__/PossibleFragmentSpreadsRule-test.ts:251:57         intelligent     U       rfaceWithinObject on Cat { ...intelligentFragment }"
  - "src/validation/__tests__/PossibleTypeExtensionsRule-test.ts:74:7        extending       U       it('extending unknown type', () ="
  - "src/validation/__tests__/ScalarLeafsRule-test.ts:22:28          leafs           U       describe('Validate: Scalar leafs', () => {"
  - "src/validation/__tests__/ScalarLeafsRule-test.ts:137:19         having          U       it('object type having only one selection'"
  - "src/validation/__tests__/ScalarLeafsRule-test.ts:158:17         leverage        U       // We can't leverage expectErrors since it"
  - "src/validation/__tests__/ScalarLeafsRule-test.ts:159:66         technically     U       this because this is technically"
  - "src/validation/__tests__/SingleFieldSubscriptionsRule-test.ts:179:12        Spam        U       ...SpamEmails"
  - "src/validation/__tests__/SingleFieldSubscriptionsRule-test.ts:200:22        Infinite    U       subscription NoInfiniteLoop {"
  - "src/validation/__tests__/SingleFieldSubscriptionsRule-test.ts:231:15        Existent    U       ...NonExistentFragment"
  - "src/validation/__tests__/ValuesOfCorrectTypeRule-test.ts:229:9          Unquoted    U       it('Unquoted String into String'"
  - "src/validation/__tests__/ValuesOfCorrectTypeRule-test.ts:1123:51        specify     U       Object \"OneOfInput\" must specify exactly one key.',"
  - "src/validation/index.ts:45:35       Merging         U       Section: \"Field Selection Merging\""
  - "src/validation/index.ts:51:28       Optionality     U       Spec Section: \"Argument Optionality\""
  - "src/validation/index.ts:60:28       Uniqueness      U       Spec Section: \"Argument Uniqueness\""
  - "src/validation/index.ts:78:31       Correctness     U       Section: \"Values Type Correctness\""
  - "src/validation/rules/custom/NoDeprecatedCustomRule.ts:19:4          necessarily     U       * necessarily to forbid their use"
  - "src/validation/rules/custom/NoSchemaIntrospectionCustomRule.ts:19:26        practices       U       does not reflect best practices and should only be done"
  - "src/validation/rules/custom/NoSchemaIntrospectionCustomRule.ts:19:63        absolutely      U       should only be done if absolutely necessary."
  - "src/validation/rules/FieldsOnCorrectTypeRule.ts:41:40       lets        U       field doesn't exist, lets look for suggestions"
  - "src/validation/rules/FieldsOnCorrectTypeRule.ts:51:52       perhaps     U       suggested types, then perhaps this was a typo?"
  - "src/validation/rules/FieldsOnCorrectTypeRule.ts:51:71       typo        U       then perhaps this was a typo?"
  - "src/validation/rules/KnownDirectivesRule.ts:23:23       positioned      U       schema and legally positioned."
  - "src/validation/rules/KnownTypeNamesRule.ts:25:58        specifically    U       if referenced types (specifically"
  - "src/validation/rules/MaxIntrospectionDepthRule.ts:37:10         Rather          U       // Rather than following an immutable"
  - "src/validation/rules/MaxIntrospectionDepthRule.ts:39:25         approach        U       // take a mutable approach for efficiency's sake"
  - "src/validation/rules/MaxIntrospectionDepthRule.ts:39:38         efficiency's    U       mutable approach for efficiency's sake. Importantly visiting"
  - "src/validation/rules/MaxIntrospectionDepthRule.ts:40:28         fine            U       / fragment twice is fine, so long as you don"
  - "src/validation/rules/MaxIntrospectionDepthRule.ts:58:44         reassign        U       disable-next-line no-param-reassign"
  - "src/validation/rules/NoFragmentCyclesRule.ts:26:16          Frags       U       const visitedFrags: ObjMap<boolean> = Object"
  - "src/validation/rules/NoUnusedFragmentsRule.ts:38:45         Recursively     U       fragment of context.getRecursivelyReferencedFragments("
  - "src/validation/rules/OverlappingFieldsCanBeMergedRule.ts:54:36          distinct            U       either correspond to distinct response names or can"
  - "src/validation/rules/OverlappingFieldsCanBeMergedRule.ts:55:12          ambiguity           U       * without ambiguity."
  - "src/validation/rules/OverlappingFieldsCanBeMergedRule.ts:63:42          Comparisons         U       other for conflicts. Comparisons made be made many times"
  - "src/validation/rules/OverlappingFieldsCanBeMergedRule.ts:64:28          dramatically        U       so memoizing this can dramatically improve the performance"
  - "src/validation/rules/OverlappingFieldsCanBeMergedRule.ts:72:43          asked               U       Selection sets may be asked for this information"
  - "src/validation/rules/OverlappingFieldsCanBeMergedRule.ts:118:14         occur               U       * Conflicts occur when two fields exist"
  - "src/validation/rules/OverlappingFieldsCanBeMergedRule.ts:129:29         finding             U       collected set of fields, finding any conflicts between"
  - "src/validation/rules/OverlappingFieldsCanBeMergedRule.ts:135:4          comparison          U       * comparison is made \"between\" the"
  - "src/validation/rules/OverlappingFieldsCanBeMergedRule.ts:141:12         comparing           U       * D) When comparing \"between\" a set of fields"
  - "src/validation/rules/OverlappingFieldsCanBeMergedRule.ts:147:37         referring           U       fragment (recursively referring to step D)."
  - "src/validation/rules/OverlappingFieldsCanBeMergedRule.ts:244:6          Mutually            U       areMutuallyExclusive: boolean,"
  - "src/validation/rules/OverlappingFieldsCanBeMergedRule.ts:519:54         mutually            U       collection is never mutually exclusive"
  - "src/validation/rules/OverlappingFieldsCanBeMergedRule.ts:536:71         traverses           U       because this validator traverses"
  - "src/validation/rules/OverlappingFieldsCanBeMergedRule.ts:593:56         permit              U       then it is safe to permit them to diverge"
  - "src/validation/rules/OverlappingFieldsCanBeMergedRule.ts:593:71         diverge             U       safe to permit them to diverge"
  - "src/validation/rules/OverlappingFieldsCanBeMergedRule.ts:599:19         safely              U       // thus may not safely diverge."
  - "src/validation/rules/OverlappingFieldsCanBeMergedRule.ts:703:64         simultaneously      U       not apply to a value simultaneously."
  - "src/validation/rules/OverlappingFieldsCanBeMergedRule.ts:845:4          matters             U       * matters."
  - "src/validation/rules/OverlappingFieldsCanBeMergedRule.ts:847:51         flagging            U       for has/set to allow flagging the pair as"
  - "src/validation/rules/OverlappingFieldsCanBeMergedRule.ts:848:4          weakly              U       * weakly or strongly present"
  - "src/validation/rules/OverlappingFieldsCanBeMergedRule.ts:848:14         strongly            U       * weakly or strongly present within the collection"
  - "src/validation/rules/OverlappingFieldsCanBeMergedRule.ts:878:13         matter              U       * does not matter."
  - "src/validation/rules/VariablesInAllowedPositionRule.ts:81:19        considering     U       * which includes considering if default values exist"
  - "src/validation/specifiedRules.ts:73:4           Technically     U       * Technically these aren't part of"
  - "src/validation/specifiedRules.ts:73:22          aren't          U       * Technically these aren't part of the spec but"
  - "src/validation/specifiedRules.ts:73:68          encouraged      U       but they are strongly encouraged"
  - "src/validation/specifiedRules.ts:81:49          adjusted        U       in this list has been adjusted to lead to the"
  - "src/validation/specifiedRules.ts:81:61          lead            U       has been adjusted to lead to the"
  - "src/validation/validate.ts:32:4         Attackers           U       * Attackers can send pathologically"
  - "src/validation/validate.ts:32:23        pathologically      U       Attackers can send pathologically invalid queries to induce"
  - "src/validation/validate.ts:32:57        induce              U       ologically invalid queries to induce a DoS attack,"
  - "src/validation/validate.ts:73:18        specialized         U       // This uses a specialized visitor which runs multiple"
  - "tsconfig.json:10:6          isolated        U       \"isolatedModules\": true,"
  - "tsconfig.json:12:11         Consistent      U       \"forceConsistentCasingInFileNames\": true"
  - "tsconfig.json:12:21         Casing          U       \"forceConsistentCasingInFileNames\": true"
  - "website/css/globals.css:1:2         tailwind        U       @tailwind base;"
  - "website/css/globals.css:6:5         foreground      U       --foreground-rgb: 0, 0, 0;"
  - "website/css/globals.css:11:9        prefers         U       @media (prefers-color-scheme: dark)"
  - "website/css/globals.css:19:2        conf            U       .conf-hero {"
  - "website/css/globals.css:20:22       gradient        U       background: linear-gradient("
  - "website/css/globals.css:39:2        nextra          U       .nextra-logo {"
  - "website/css/globals.css:60:10       rounded         U       @apply rounded-none;"
  - "website/css/globals.css:106:14      maybe           U       /* !* TODO: maybe add to nextra as option"
  - "website/css/globals.css:110:2       mini            U       .miniGraphiQL {"
  - "website/css/globals.css:111:44      neutral         U       border-2 dark:border-neutral-900 dark:!bg-neutral"
  - "website/css/globals.css:168:2       donts           U       .donts-images ul {"
  - "website/css/globals.css:186:25      brand           U       background: url('/img/brand/do.svg');"
  - "website/css/globals.css:190:31      dont            U       background: url('/img/brand/dont.svg');"
  - "website/css/globals.css:396:7       evolution       U       .type-evolution {"
  - "website/css/globals.css:399:8       Evolve          U       #typeEvolveView {"
  - "website/icons/discord.svg:1:61          fill    U       www.w3.org/2000/svg\" fill=\"#5865f2\">"
  - "website/icons/github.svg:2:3            width       U       width=\"30\""
  - "website/icons/github.svg:8:16           evenodd     U       fill-rule=\"evenodd\""
  - "website/icons/github.svg:9:5            clip        U       clip-rule=\"evenodd\""
  - "website/icons/graphql-wordmark.svg:2:4          style       U       <style>"
  - "website/icons/graphql-wordmark.svg:12:4         circle      U       <circle cx=\"14.41\" cy=\"29.4"
  - "website/icons/index.ts:3:28         Logo                U       { default as GraphQLLogo } from './graphql.svg"
  - "website/icons/index.ts:4:59         wordmark            U       ordmarkLogo } from './graphql-wordmark.svg';"
  - "website/icons/index.ts:5:49         stackoverflow       U       StackOverflowIcon } from './stackoverflow.svg';"
  - "website/next.config.mjs:5:3         theme           U       theme: 'nextra-theme-docs"
  - "website/next.config.mjs:18:15       Loader          U       const fileLoaderRule = config.module"
  - "website/next.config.mjs:32:5        loader          U       loader: 'custom',"
  - "website/next.config.mjs:36:42       optimizer       U       ['next-image-export-optimizer'],"
  - "website/next.config.mjs:38:20       Optimizer       U       nextImageExportOptimizer_imageFolderPath: 'public"
  - "website/next.config.mjs:41:35       Pictures        U       nextImageExportOptimizer_storePicturesInWEBP: 'true',"
  - "website/next.config.mjs:43:34       blurry          U       you do not want to use blurry placeholder images,"
  - "website/package.json:15:19          typography      U       \"@tailwindcss/typography\": \"^0.5.10\","
  - "website/pages/_app.tsx:1:18         Props       U       import type { AppProps } from 'next/app';"
  - "website/pages/_app.tsx:7:3          subsets     U       subsets: ['latin'],"
  - "website/pages/_meta.ts:17:22        Guides          U       title: 'Advanced Guides',"
  - "website/pages/_meta.ts:19:4         constructing    U       'constructing-types': '',"
  - "website/pages/api-v16/error.mdx:5:45        sidebar     U       removed in Nextra 4, since sidebar title will take from"
  - "website/pages/api-v16/error.mdx:17:4        Overview    U       ## Overview"
  - "website/pages/api-v16/error.mdx:65:72       Most        U       occurred for debugging. Most"
  - "website/pages/api-v16/execution.mdx:22:26       Executes    U       `function execute` Executes a GraphQL request on"
  - "website/pages/api-v16/graphql-http.mdx:9:6          official        U       The [official `graphql-http` package"
  - "website/pages/api-v16/graphql-http.mdx:9:264        frameworks      U       handlers for well-known frameworks like [Express](https"
  - "website/pages/api-v16/graphql-http.mdx:39:75        extensive       U       graphql-http) for more extensive documentation, including"
  - "website/pages/api-v16/graphql.mdx:9:55          functionality       U       core subset of GraphQL functionality for creation"
  - "website/pages/api-v16/language.mdx:99:8         mostly      U       but is mostly useful for clients who"
  - "website/pages/api-v16/language.mdx:142:1        rewind      U       rewind or fast forward the"
  - "website/pages/api-v16/language.mdx:284:5        sentinel    U       The sentinel `BREAK` value described"
  - "website/pages/api-v16/utilities.mdx:25:22       reproduce           U       information to reproduce a type system."
  - "website/pages/api-v16/utilities.mdx:75:5        Visitors            U       ### Visitors"
  - "website/pages/api-v16/utilities.mdx:122:63      creates             U       introspection query, creates and"
  - "website/pages/api-v16/utilities.mdx:128:11      Representation      U       ## Schema Representation"
  - "website/pages/api-v16/utilities.mdx:136:221     cheat               U       this [schema language cheat sheet](https://wehavefaces"
  - "website/pages/api-v16/utilities.mdx:188:1       disambiguate        U       disambiguate between value primitives"
  - "website/pages/api-v16/utilities.mdx:219:33      primarily           U       for that type. This is primarily useful for validating"
  - "website/pages/authentication-and-express-middleware.mdx:8:46        conjunction         U       Express middleware in conjunction with `graphql-http`"
  - "website/pages/authentication-and-express-middleware.mdx:12:27       wanted              U       example, let's say we wanted our server to log the"
  - "website/pages/authentication-and-express-middleware.mdx:98:97       proves              U       an auth token which proves what user is making"
  - "website/pages/authentication-and-express-middleware.mdx:100:15      familiar            U       If you aren't familiar with any of these authenticat"
  - "website/pages/authentication-and-express-middleware.mdx:100:130     sacrificing         U       it's simple without sacrificing any future flexibility"
  - "website/pages/authentication-and-express-middleware.mdx:100:153     flexibility         U       sacrificing any future flexibility."
  - "website/pages/authentication-and-express-middleware.mdx:102:33      linearly            U       read through the docs linearly to get to this point"
  - "website/pages/authentication-and-express-middleware.mdx:102:64      congratulations     U       to get to this point, congratulations! You now know everything"
  - "website/pages/authentication-and-express-middleware.mdx:102:125     practical           U       you need to build a practical GraphQL API server."
  - "website/pages/basic-types.mdx:11:43         legitimate              U       type is nullable - it's legitimate to return `null` as"
  - "website/pages/basic-types.mdx:15:26         straightforwardly       U       of these types maps straightforwardly to JavaScript, so you"
  - "website/pages/basic-types.mdx:29:5          roll                    U       rollThreeDice: [Int]"
  - "website/pages/basic-types.mdx:29:14         Dice                    U       rollThreeDice: [Int]"
  - "website/pages/basic-types.mdx:36:43         easy                    U       random() < 0.5 ? 'Take it easy' : 'Salvation lies within"
  - "website/pages/basic-types.mdx:36:52         Salvation               U       ? 'Take it easy' : 'Salvation lies within';"
  - "website/pages/basic-types.mdx:36:62         lies                    U       it easy' : 'Salvation lies within';"
  - "website/pages/basic-types.mdx:113:48        browse                  U       node server.js` and browse to http://localhost"
  - "website/pages/basic-types.mdx:115:138       learn                   U       you will also need to learn about [passing arguments"
  - "website/pages/constructing-types.mdx:2:8            Constructing        U       title: Constructing Types"
  - "website/pages/constructing-types.mdx:7:169          programmatically    U       to construct a schema programmatically. You can do this using"
  - "website/pages/constructing-types.mdx:9:121          solely              U       and `Mutation` types solely using schema language"
  - "website/pages/constructing-types.mdx:124:13         particularly        U       This can be particularly useful if you want to"
  - "website/pages/constructing-types.mdx:124:300        cleanly             U       types which don't map cleanly to ES6 classes and schema"
  - "website/pages/defer-stream.mdx:2:8          Enabling    U       title: Enabling Defer & Stream"
  - "website/pages/getting-started.mdx:12:4          Prerequisites       U       ## Prerequisites"
  - "website/pages/getting-started.mdx:14:60         although            U       have Node v6 installed, although the examples should"
  - "website/pages/getting-started.mdx:15:10         guide               U       For this guide, we won't use any language"
  - "website/pages/getting-started.mdx:19:119        choose              U       starters-znvgwr) - if you choose"
  - "website/pages/getting-started.mdx:110:1         Congratulations     U       Congratulations - you just executed"
  - "website/pages/going-to-production.mdx:2:8           Going       U       title: Going to Production"
  - "website/pages/going-to-production.mdx:5:77          slower      U       production will cause slower performance and"
  - "website/pages/going-to-production.mdx:6:43          goes        U       size. Every bundler goes about these changes"
  - "website/pages/going-to-production.mdx:7:22          ones        U       out the most popular ones."
  - "website/pages/going-to-production.mdx:93:9          mangle      U       mangle: {"
  - "website/pages/going-to-production.mdx:117:12        vars        U       \"vars\": {"
  - "website/pages/graphql-clients.mdx:5:83          powerful        U       API, there are more powerful clients like [Relay"
  - "website/pages/graphql-clients.mdx:5:179         batching        U       automatically handle batching, caching, and other"
  - "website/pages/graphql-clients.mdx:5:189         caching         U       utomatically handle batching, caching, and other features"
  - "website/pages/graphql-clients.mdx:22:149        Insomnia        U       graphql/graphiql), [Insomnia](https://github.com"
  - "website/pages/graphql-clients.mdx:22:206        Postman         U       getinsomnia/insomnia), and [Postman](https://www.postman"
  - "website/pages/graphql-clients.mdx:45:166        Passing         U       arguments as described in [Passing Arguments](/passing"
  - "website/pages/graphql-clients.mdx:45:321        prefixed        U       including a keyword prefixed with a dollar sign in"
  - "website/pages/graphql-clients.mdx:51:30         Sides           U       rollDice(numDice: Int!, numSides: Int): [Int]"
  - "website/pages/graphql-clients.mdx:58:5          dice            U       let dice = 3;"
  - "website/pages/graphql-clients.mdx:59:5          sides           U       let sides = 6;"
  - "website/pages/graphql-clients.mdx:61:9          Roll            U       query RollDice($dice: Int!, $sides"
  - "website/pages/graphql-clients.mdx:81:43         idea            U       variables is a good idea because it automatically"
  - "website/pages/graphql-clients.mdx:83:90         worth           U       like Relay, but it's worth it to get more features"
  - "website/pages/graphql-clients.mdx:83:140        grows           U       as your application grows. You might want to start"
  - "website/pages/graphql-clients.mdx:83:239        switching       U       transport layer, and switching to a more complex client"
  - "website/pages/index.mdx:7:7         closely     U       while closely following the Specification"
  - "website/pages/index.mdx:10:100      diffing     U       utilities for schema-diffing, working with arguments"
  - "website/pages/mutations-and-input-types.mdx:7:34        alters          U       an API endpoint that alters data, like inserting"
  - "website/pages/mutations-and-input-types.mdx:7:52        inserting       U       that alters data, like inserting data into a database"
  - "website/pages/mutations-and-input-types.mdx:9:56        anyone          U       the day‚Äù server, where anyone can update the message"
  - "website/pages/mutations-and-input-types.mdx:9:166       simply          U       GraphQL schema for this is simply:"
  - "website/pages/mutations-and-input-types.mdx:50:151      stored          U       thing that the server stored. That way, if you modify"
  - "website/pages/mutations-and-input-types.mdx:67:319      simpler         U       To make your schema simpler, you can use ‚Äúinput"
  - "website/pages/mutations-and-input-types.mdx:160:165     mutates         U       as the request that mutates it."
  - "website/pages/mutations-and-input-types.mdx:164:1       Naming          U       Naming input types with `Input"
  - "website/pages/mutations-and-input-types.mdx:164:143     slightly        U       output type that are slightly different for a single"
  - "website/pages/mutations-and-input-types.mdx:166:56      keeping         U       implements this schema, keeping the data in memory:"
  - "website/pages/mutations-and-input-types.mdx:366:35      andy            U       eateMessage(input: { author: \"andy\", content: \"hope is"
  - "website/pages/mutations-and-input-types.mdx:366:52      hope            U       author: \"andy\", content: \"hope is a good thing\" })"
  - "website/pages/mutations-and-input-types.mdx:372:26      simplify        U       can use variables to simplify mutation client logic"
  - "website/pages/object-types.mdx:7:152        perfect         U       behavior. GraphQL is a perfect fit for this."
  - "website/pages/object-types.mdx:57:11        Rolls           U       roll(numRolls: Int!): [Int]"
  - "website/pages/object-types.mdx:111:1        Instead         U       Instead of a root-level resolver"
  - "website/pages/object-types.mdx:207:1        Putting         U       Putting this all together, here"
  - "website/pages/object-types.mdx:357:129      nesting         U       the object at once by nesting the GraphQL field names"
  - "website/pages/object-types.mdx:370:50       advantages      U       types often provides advantages over a traditional REST"
  - "website/pages/object-types.mdx:370:183      subsequent      U       object, and then multiple subsequent API requests to find"
  - "website/pages/object-types.mdx:370:364      simplifies      U       app run faster, and simplifies your client-side logic"
  - "website/pages/object-types.mdx:372:25       looked          U       far, every API we've looked at is designed for returning"
  - "website/pages/oneof-input-objects.mdx:7:18          behave          U       Some inputs will behave differently depending"
  - "website/pages/oneof-input-objects.mdx:9:8           tradeoff        U       make a tradeoff for this by introducing"
  - "website/pages/oneof-input-objects.mdx:9:29          introducing     U       tradeoff for this by introducing two arguments that are"
  - "website/pages/oneof-input-objects.mdx:11:73         strictly        U       without sacrificing the strictly typed nature of our"
  - "website/pages/oneof-input-objects.mdx:11:88         nature          U       acrificing the strictly typed nature of our GraphQL Schema"
  - "website/pages/oneof-input-objects.mdx:23:5          aisle           U       aisleNumber: Int!"
  - "website/pages/oneof-input-objects.mdx:24:5          shelf           U       shelfNumber: Int!"
  - "website/pages/oneof-input-objects.mdx:25:15         Shelf           U       positionOnShelf: Int!"
  - "website/pages/passing-arguments.mdx:15:76       rolls           U       general function that rolls `numDice` dice, each"
  - "website/pages/passing-arguments.mdx:57:79       means           U       can't be null, which means we can skip a bit of"
  - "website/pages/passing-arguments.mdx:59:32       took            U       our resolver functions took no arguments. When a"
  - "website/pages/passing-arguments.mdx:87:54       nicer           U       destructuring, this is a bit nicer because the line of"
  - "website/pages/passing-arguments.mdx:87:113      tells           U       rollDice` is defined tells you about what the arguments"
  - "website/pages/passing-arguments.mdx:184:143     sided           U       query to roll three six-sided dice:"
  - "website/pages/passing-arguments.mdx:194:45      generally       U       arguments in code, it's generally better to avoid constructing"
  - "website/pages/passing-arguments.mdx:194:107     yourself        U       the whole query string yourself. Instead, you can use"
  - "website/pages/passing-arguments.mdx:222:75      worry           U       means we don't have to worry about escaping on the"
  - "website/pages/running-an-express-graphql-server.mdx:8:5         simplest        U       The simplest way to run a GraphQL"
  - "website/pages/running-an-express-graphql-server.mdx:100:95      exploring       U       way of querying and exploring your GraphQL API."
  - "website/pages/running-an-express-graphql-server.mdx:117:24      learned         U       this point you have learned how to run a GraphQL"
  - "website/tailwind.config.js:22:63        stops       U       gradient(var(--tw-gradient-stops))',"
  - "website/tailwind.config.js:23:19        conic       U       'gradient-conic':"
  - "website/tailwind.config.js:40:3         dark        U       darkMode: ['class', 'html"
  - "website/theme.config.tsx:2:14           Theme           U       import { DocsThemeConfig, ThemeSwitch,"
  - "website/theme.config.tsx:52:23          Introduction    U       { title: 'Introduction to GraphQL', url: '"
  - "website/theme.config.tsx:54:23          Frequently      U       title: 'Frequently Asked Questions',"
  - "website/theme.config.tsx:54:34          Asked           U       title: 'Frequently Asked Questions',"
  - "website/theme.config.tsx:54:40          Questions       U       title: 'Frequently Asked Questions',"
  - "website/theme.config.tsx:58:32          Courses         U       title: 'Training Courses',"
  - "website/theme.config.tsx:86:32          Meetups         U       title: 'Events & Meetups',"
  - "website/theme.config.tsx:90:23          Contribute      U       title: 'Contribute to GraphQL',"
  - "website/theme.config.tsx:94:23          Shop            U       { title: 'Shop', url: 'https://store"
  - "website/theme.config.tsx:110:38         Guidelines      U       title: 'Logo and Brand Guidelines',"
  - "website/theme.config.tsx:125:38         trademark       U       web site terms of use, trademark policy and general project"
  - "website/theme.config.tsx:165:13         Powered         U       Powered by{' '}"
  - "website/theme.config.tsx:215:60         Videos          U       GraphQLConf 2024! ‚Ä¢ Watch the Videos ‚Ä¢{' '}"
  - "website/theme.config.tsx:220:25         recorded        U       Check out the recorded talks and workshops"
  - "website/theme.config.tsx:220:34         talks           U       Check out the recorded talks and workshops"
  - "website/theme.config.tsx:220:44         workshops       U       the recorded talks and workshops"
  - "website/theme.config.tsx:239:32         lite            U       extraContent: <ThemeSwitch lite className=\"[&_span]"
  - "website/tsconfig.json:9:6           incremental     U       \"incremental\": true,"
  - "website/tsconfig.json:14:13         preserve        U       \"jsx\": \"preserve\","
  - "website/vercel.json:2:4         redirects       U       \"redirects\": ["
  - "website/vercel.json:6:8         permanent       U       \"permanent\": true"
