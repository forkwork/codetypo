
Repository: graphql/graphql-js
Url: "https://github.com/graphql/graphql-js.git"
Args: ["**/*.*"]
Lines:
 Dictionary Error with (en_us) Error: ENOENT: no such file or directory, open './dictionaries/en_US/en_US.trie.gz'
 exit code: 1
-------------------------------------------
-------------------------------------------
CodeTypo: Files checked: 360, Issues found: 14043 in 332 files with 4 errors.
Dictionary Error with (en_us) Error: ENOENT: no such file or directory, open './dictionaries/en_US/en_US.trie.gz'
Dictionary Error with (filetypes) Error: ENOENT: no such file or directory, open './dictionaries/filetypes/filetypes.txt.gz'
Dictionary Error with (filetypes) Error: ENOENT: no such file or directory, open './dictionaries/filetypes/filetypes.txt.gz'
Dictionary Error with (html-symbol-entities) Error: ENOENT: no such file or directory, open './dictionaries/html-symbol-entities/entities.txt.gz'
Dictionary Error with (html-symbol-entities) Error: ENOENT: no such file or directory, open './dictionaries/html-symbol-entities/entities.txt.gz'
Dictionary Error with (public-licenses) Error: ENOENT: no such file or directory, open './dictionaries/public-licenses/public-licenses.txt.gz'
Dictionary Error with (public-licenses) Error: ENOENT: no such file or directory, open './dictionaries/public-licenses/public-licenses.txt.gz'
Errors:
README.md:106:11    - Unknown word (Please)        -- **Note**: Please don't forget to set
README.md:106:116   - Unknown word (some)          -- server. It will disable some checks that can be useful
README.md:106:140   - Unknown word (useful)        -- some checks that can be useful during development but
README.md:106:147   - Unknown word (during)        -- checks that can be useful during development but will
README.md:106:175   - Unknown word (significantly) -- development but will significantly improve performance
README.md:106:189   - Unknown word (improve)       -- but will significantly improve performance.
README.md:106:197   - Unknown word (performance)   -- significantly improve performance.
README.md:108:13    - Unknown word (ride)          -- ### Want to ride the bleeding edge?
README.md:108:22    - Unknown word (bleeding)      -- ## Want to ride the bleeding edge?
README.md:108:5     - Unknown word (Want)          -- ### Want to ride the bleeding
README.md:110:54    - Unknown word (maintained)    -- repository is automatically maintained to be the last
README.md:112:1     - Unknown word (recommended)   -- recommended to use builds deployed
README.md:113:20    - Unknown word (released)      -- the latest not-yet-released version of graphql-js
README.md:113:69    - Unknown word (depending)     -- js, you can do so by depending
README.md:114:1     - Unknown word (directly)      -- directly on this branch:
README.md:122:104   - Unknown word (defer)         -- containing support for the `@defer` and `@stream` directive
README.md:122:152   - Unknown word (hoping)        -- directive proposal. We are hoping to get community feedback
README.md:122:322   - Unknown word (adding)        -- release of GraphQL.js by adding the following to your
README.md:122:36    - Unknown word (accompanied)   -- of GraphQL.js will be accompanied by an experimental release
README.md:128:52    - Unknown word (much)          -- experimental release is much appreciated and can
README.md:128:57    - Unknown word (appreciated)   -- experimental release is much appreciated and can be provided
README.md:132:33    - Unknown word (library)       -- is a general-purpose library and can be used both
README.md:133:41    - Unknown word (Graphi)        -- As an example, the [GraphiQL](https://github.com
README.md:138:5     - Unknown word (portions)      -- the portions of the library you use
README.md:138:71    - Unknown word (distributed)   -- because GraphQL.js is distributed
README.md:139:40    - Unknown word (Module)        -- (`require()`) and ESModule (`import`) files. Ensure
README.md:142:5     - Unknown word (Contributing)  -- ### Contributing
README.md:144:13    - Unknown word (welcome)       -- We actively welcome pull requests. Learn
README.md:144:36    - Unknown word (Learn)         -- welcome pull requests. Learn how to [contribute]
README.md:144:4     - Unknown word (actively)      -- We actively welcome pull requests
README.md:146:272   - Unknown word (contributors)  -- signed by [individual contributors](http://individual-spec
README.md:146:31    - Unknown word (Easy)          -- repository is managed by EasyCLA. Project participants
README.md:146:344   - Unknown word (employers)     -- graphql.org/) or their [employers](http://corporate-spec
README.md:148:35    - Unknown word (please)        -- the signature process please open a PR against this
README.md:14:1      - Unknown word (Looking)    -- Looking for help? Find resources
README.md:14:13     - Unknown word (help)       -- Looking for help? Find resources [from
README.md:150:36    - Unknown word (here)          -- detailed information here](https://github.com
README.md:152:162   - Unknown word (consider)      -- community, please also consider membership in the [GraphQL
README.md:152:17    - Unknown word (benefits)      -- If your company benefits from GraphQL and you
README.md:152:47    - Unknown word (would)         -- from GraphQL and you would like to provide essential
README.md:152:69    - Unknown word (essential)     -- would like to provide essential financial support for
README.md:156:13    - Unknown word (tracked)       -- Changes are tracked as [GitHub releases
README.md:160:20    - Unknown word (licensed)      -- GraphQL.js is [MIT-licensed](./LICENSE).
README.md:16:12     - Unknown word (Started)    -- ## Getting Started
README.md:16:4      - Unknown word (Getting)    -- ## Getting Started
README.md:18:11     - Unknown word (overview)   -- A general overview of GraphQL is available
README.md:1:11      - Unknown word (Conf)       -- [![GraphQLConf 2024 Banner: September
README.md:1:29      - Unknown word (September)  -- GraphQLConf 2024 Banner: September 10-12, San Francisco
README.md:1:50      - Unknown word (Francisco)  -- September 10-12, San Francisco. Hosted by the GraphQL
README.md:20:71     - Unknown word (That)       -- graphql/graphql-spec). That overview
README.md:22:23     - Unknown word (good)       -- in this repository. A good way to get started with
README.md:25:5      - Unknown word (Using)      -- ### Using GraphQL.js
README.md:35:4      - Unknown word (using)      -- or using yarn:
README.md:41:25     - Unknown word (important)  -- GraphQL.js provides two important capabilities: building
README.md:42:1      - Unknown word (serving)    -- serving queries against that
README.md:44:42     - Unknown word (maps)       -- GraphQL type schema which maps to your codebase.
README.md:69:65     - Unknown word (resolves)   -- and one field, that resolves
README.md:71:16     - Unknown word (promises)   -- or an array of promises. A more complex example
README.md:71:33     - Unknown word (complex)    -- of promises. A more complex example is included
README.md:79:6      - Unknown word (Prints)     -- // Prints
README.md:88:27     - Unknown word (syntactically) -- ensure the query is syntactically and semantically valid
README.md:88:45     - Unknown word (semantically)  -- is syntactically and semantically valid before executing
README.md:88:71     - Unknown word (executing)     -- semantically valid before executing
README.md:89:5      - Unknown word (reporting)     -- it, reporting errors otherwise.
README.md:92:20     - Unknown word (Howdy)         -- var source = '{ BoyHowdy }';
benchmark/benchmark.js:108:14    - Unknown word (permits)     -- // If time permits, increase sample size
benchmark/benchmark.js:111:13    - Unknown word (clocked)     -- const { clocked, memUsed } = await sampleModu
benchmark/benchmark.js:119:23    - Unknown word (tailed)      -- T-Distribution two-tailed critical values for
benchmark/benchmark.js:12:69     - Unknown word (finishing)  -- allowed to run before finishing.
benchmark/benchmark.js:131:4     - Unknown word (Computes)    -- // Computes stats on benchmark results
benchmark/benchmark.js:135:47    - Unknown word (population)  -- mean (estimate of the population mean).
benchmark/benchmark.js:145:25    - Unknown word (variance)    -- Compute the sample variance (estimate of the population
benchmark/benchmark.js:14:40     - Unknown word (perform)    -- sample size required to perform statistical analysis
benchmark/benchmark.js:14:48     - Unknown word (statistical) -- required to perform statistical analysis.
benchmark/benchmark.js:158:29    - Unknown word (freedom)     -- Compute the degrees of freedom.
benchmark/benchmark.js:167:36    - Unknown word (expressed)   -- relative margin of error (expressed as a percentage of the
benchmark/benchmark.js:178:10    - Unknown word (beautify)    -- function beautifyBenchmark(results) {
benchmark/benchmark.js:17:38     - Unknown word (happen)      -- revisions and make things happen!
benchmark/benchmark.js:188:10    - Unknown word (Bench)       -- printBench(result);
benchmark/benchmark.js:191:23    - Unknown word (bench)       -- function printBench(bench) {
benchmark/benchmark.js:19:11     - Unknown word (benchmarks)  -- const { benchmarks, revisions } = getArguments
benchmark/benchmark.js:22:6      - Unknown word (Benchmarks)  -- runBenchmarks(benchmarks, benchmarkProjects
benchmark/benchmark.js:244:64    - Unknown word (against)     -- benchmarks matching a pattern against them.
benchmark/benchmark.js:244:72    - Unknown word (them)        -- matching a pattern against them.
benchmark/benchmark.js:278:9     - Unknown word (revs)        -- const revsIndex = argv.indexOf
benchmark/benchmark.js:285:8     - Unknown word (fall)        -- // fall through
benchmark/benchmark.js:290:21    - Unknown word (Assuming)    -- console.warn('Assuming you meant: ' + bold
benchmark/benchmark.js:290:34    - Unknown word (meant)       -- console.warn('Assuming you meant: ' + bold(assumeArgv
benchmark/benchmark.js:343:34    - Unknown word (warm)        -- module.measure); // warm up
benchmark/benchmark.js:355:24    - Unknown word (taken)       -- // Clocks the time taken to execute a test per
benchmark/benchmark.js:355:59    - Unknown word (secs)        -- execute a test per cycle (secs).
benchmark/benchmark.js:355:8     - Unknown word (Clocks)      -- // Clocks the time taken to execute
benchmark/benchmark.js:369:26    - Unknown word (sweeping)    -- '--no-concurrent-sweeping',
benchmark/benchmark.js:370:12    - Unknown word (predictable) -- '--predictable',
benchmark/benchmark.js:371:12    - Unknown word (expose)      -- '--expose-gc',
benchmark/benchmark.js:377:27    - Unknown word (production)  -- env: { NODE_ENV: 'production' },
benchmark/benchmark.js:41:22     - Unknown word (friendly)    -- / Build a benchmark-friendly environment for the
benchmark/benchmark.js:52:22     - Unknown word (Preparing)   -- console.log(`🍳 Preparing ${revision}...`);
benchmark/benchmark.js:62:14     - Unknown word (quiet)       -- 'npm --quiet install --ignore-scripts
benchmark/buildASTSchema-benchmark.js:6:37      - Unknown word (fixtures)   -- bigSchemaSDL } = require('./fixtures.js');
benchmark/github-schema.graphql:10035:17  - Unknown word (originally)    -- The actor who originally created the project
benchmark/github-schema.graphql:10056:24  - Unknown word (Currently)     -- The project's owner. Currently limited to repositories
benchmark/github-schema.graphql:10121:69  - Unknown word (belong)        -- under. A card may only belong to one
benchmark/github-schema.graphql:10123:66  - Unknown word (Once)          -- associated with a column. Once cards are
benchmark/github-schema.graphql:10124:43  - Unknown word (become)        -- column, they will not become pending in the future
benchmark/github-schema.graphql:10160:20  - Unknown word (contains)      -- The project that contains this card.
benchmark/github-schema.graphql:10192:3   - Unknown word (ARCHIVED)      -- ARCHIVED
benchmark/github-schema.graphql:10241:24  - Unknown word (owning)        -- issue or PR and its owning repository to be used
benchmark/github-schema.graphql:10261:1   - Unknown word (Various)       -- Various content states of a
benchmark/github-schema.graphql:10275:15  - Unknown word (redacted)      -- The card is redacted.
benchmark/github-schema.graphql:10277:3   - Unknown word (REDACTED)      -- REDACTED
benchmark/github-schema.graphql:10326:15  - Unknown word (column's)      -- The project column's name.
benchmark/github-schema.graphql:10336:16  - Unknown word (purpose)       -- The semantic purpose of the column
benchmark/github-schema.graphql:10336:7   - Unknown word (semantic)      -- The semantic purpose of the column
benchmark/github-schema.graphql:10338:25  - Unknown word (Purpose)       -- purpose: ProjectColumnPurpose
benchmark/github-schema.graphql:10417:60  - Unknown word (done)          -- todo, in progress, or done.
benchmark/github-schema.graphql:10421:41  - Unknown word (worked)        -- contains cards still to be worked on
benchmark/github-schema.graphql:10433:3   - Unknown word (DONE)          -- DONE
benchmark/github-schema.graphql:10613:7   - Unknown word (fingerprint)   -- The fingerprint for this PublicKey
benchmark/github-schema.graphql:106:22    - Unknown word (subject)    -- The Node ID of the subject to modify.
benchmark/github-schema.graphql:1072:113  - Unknown word (grinning)    -- with colons, e.g., :grinning:.
benchmark/github-schema.graphql:1072:16   - Unknown word (represent)   -- The emoji to represent your status. Can either
benchmark/github-schema.graphql:1072:26   - Unknown word (your)        -- The emoji to represent your status. Can either be
benchmark/github-schema.graphql:1072:43   - Unknown word (either)      -- represent your status. Can either be a native Unicode
benchmark/github-schema.graphql:1072:55   - Unknown word (native)      -- status. Can either be a native Unicode emoji or an
benchmark/github-schema.graphql:1072:62   - Unknown word (Unicode)     -- Can either be a native Unicode emoji or an emoji name
benchmark/github-schema.graphql:1072:98   - Unknown word (colons)      -- or an emoji name with colons, e.g., :grinning:.
benchmark/github-schema.graphql:1082:30   - Unknown word (whose)       -- of the organization whose members will be allowed
benchmark/github-schema.graphql:1082:44   - Unknown word (will)        -- organization whose members will be allowed to see the
benchmark/github-schema.graphql:1083:3    - Unknown word (omitted)     -- omitted, the status will be
benchmark/github-schema.graphql:1083:31   - Unknown word (publicly)    -- the status will be publicly visible.
benchmark/github-schema.graphql:1083:40   - Unknown word (visible)     -- status will be publicly visible.
benchmark/github-schema.graphql:1088:23   - Unknown word (should)      -- Whether this status should indicate you are not
benchmark/github-schema.graphql:1088:3    - Unknown word (Whether)     -- Whether this status should indicate
benchmark/github-schema.graphql:1088:30   - Unknown word (indicate)    -- Whether this status should indicate you are not fully available
benchmark/github-schema.graphql:1088:92   - Unknown word (away)        -- GitHub, e.g., you are away.
benchmark/github-schema.graphql:1090:34   - Unknown word (false)       -- imitedAvailability: Boolean = false
benchmark/github-schema.graphql:10955:62  - Unknown word (existence)     -- merged based on the existence of merge conflicts.
benchmark/github-schema.graphql:11015:40  - Unknown word (generated)     -- GitHub automatically generated to test if this pull
benchmark/github-schema.graphql:11020:3   - Unknown word (potential)     -- potentialMergeCommit: Commit
benchmark/github-schema.graphql:1108:3    - Unknown word (Your)        -- Your updated status.
benchmark/github-schema.graphql:11108:21  - Unknown word (reverting)     -- The HTTP path for reverting this pull request.
benchmark/github-schema.graphql:11110:3   - Unknown word (revert)        -- revertResourcePath: URI!
benchmark/github-schema.graphql:11208:13  - Unknown word (reviewer)      -- A list of reviewer suggestions based on
benchmark/github-schema.graphql:11208:62  - Unknown word (past)          -- on commit history and past review comments.
benchmark/github-schema.graphql:11210:12  - Unknown word (Reviewers)     -- suggestedReviewers: [SuggestedReviewer
benchmark/github-schema.graphql:11210:24  - Unknown word (Suggested)     -- suggestedReviewers: [SuggestedReviewer]!
benchmark/github-schema.graphql:11210:33  - Unknown word (Reviewer)      -- suggestedReviewers: [SuggestedReviewer]!
benchmark/github-schema.graphql:1138:21   - Unknown word (unlabeled)   -- The item that was unlabeled.
benchmark/github-schema.graphql:113:3     - Unknown word (body)       -- body: String!
benchmark/github-schema.graphql:11705:39  - Unknown word (plain)         -- this review rendered as plain text.
benchmark/github-schema.graphql:1173:34   - Unknown word (defaults)    -- visibility of the project, defaults to false (private).
benchmark/github-schema.graphql:11773:5   - Unknown word (Behalf)        -- onBehalfOf(
benchmark/github-schema.graphql:1193:31   - Unknown word (populating)  -- of the JobStatus for populating cloned fields.
benchmark/github-schema.graphql:1193:42   - Unknown word (cloned)      -- JobStatus for populating cloned fields.
benchmark/github-schema.graphql:11976:12  - Unknown word (hunk)          -- The diff hunk to which the comment
benchmark/github-schema.graphql:11976:38  - Unknown word (applies)       -- to which the comment applies.
benchmark/github-schema.graphql:11978:7   - Unknown word (Hunk)          -- diffHunk: String!
benchmark/github-schema.graphql:11983:3   - Unknown word (drafted)       -- draftedAt: DateTime!
benchmark/github-schema.graphql:11:19     - Unknown word (suggested)  -- The name of the suggested topic.
benchmark/github-schema.graphql:12012:18  - Unknown word (original)      -- Identifies the original commit associated with
benchmark/github-schema.graphql:12022:39  - Unknown word (outdated)      -- the comment body is outdated
benchmark/github-schema.graphql:1206:11   - Unknown word (Closable)    -- interface Closable {
benchmark/github-schema.graphql:1208:4    - Unknown word (true)        -- `true` if the object is closed
benchmark/github-schema.graphql:1208:60   - Unknown word (depend)      -- definition of closed may depend on type)
benchmark/github-schema.graphql:12229:3   - Unknown word (SUBMITTED)     -- SUBMITTED
benchmark/github-schema.graphql:1230:3    - Unknown word (closable)    -- closable: Closable!
benchmark/github-schema.graphql:12317:35  - Unknown word (explicit)      -- general feedback without explicit approval.
benchmark/github-schema.graphql:12327:32  - Unknown word (addressed)     -- feedback that must be addressed before merging.
benchmark/github-schema.graphql:12332:35  - Unknown word (effects)       -- review so it now longer effects merging.
benchmark/github-schema.graphql:12334:3   - Unknown word (DISMISS)       -- DISMISS
benchmark/github-schema.graphql:12347:6   - Unknown word (informational) -- An informational review.
benchmark/github-schema.graphql:12349:3   - Unknown word (COMMENTED)     -- COMMENTED
benchmark/github-schema.graphql:12352:12  - Unknown word (allowing)      -- A review allowing the pull request to
benchmark/github-schema.graphql:12354:3   - Unknown word (APPROVED)      -- APPROVED
benchmark/github-schema.graphql:12357:12  - Unknown word (blocking)      -- A review blocking the pull request from
benchmark/github-schema.graphql:1235:11   - Unknown word (Closer)      -- closer: Closer
benchmark/github-schema.graphql:1235:3    - Unknown word (closer)      -- closer: Closer
benchmark/github-schema.graphql:12364:3   - Unknown word (DISMISSED)     -- DISMISSED
benchmark/github-schema.graphql:12368:3   - Unknown word (threaded)      -- A threaded list of comments for
benchmark/github-schema.graphql:12400:5   - Unknown word (Resolved)      -- isResolved: Boolean!
benchmark/github-schema.graphql:12469:83  - Unknown word (seen)          -- which the viewer has seen the pull request's commits
benchmark/github-schema.graphql:12480:7   - Unknown word (Seen)          -- lastSeenCommit: Commit!
benchmark/github-schema.graphql:12505:3   - Unknown word (MERGED)        -- MERGED
benchmark/github-schema.graphql:12567:11  - Unknown word (Dismissed)     -- | ReviewDismissedEvent
benchmark/github-schema.graphql:12719:12  - Unknown word (CHANGED)       -- BASE_REF_CHANGED_EVENT
benchmark/github-schema.graphql:12749:12  - Unknown word (RESTORED)      -- HEAD_REF_RESTORED_EVENT
benchmark/github-schema.graphql:12903:28  - Unknown word (ability)       -- or user who has the ability to push to a protected
benchmark/github-schema.graphql:12968:21  - Unknown word (conduct)       -- Look up a code of conduct by its key
benchmark/github-schema.graphql:12972:17  - Unknown word (conduct's)     -- The code of conduct's key
benchmark/github-schema.graphql:12998:7   - Unknown word (alphabetically) -- Get alphabetically sorted list of Marketplace
benchmark/github-schema.graphql:13009:12  - Unknown word (Empty)          -- excludeEmpty: Boolean
benchmark/github-schema.graphql:13012:40  - Unknown word (excluding)      -- level categories only, excluding any subcategories.
benchmark/github-schema.graphql:13012:54  - Unknown word (subcategories)  -- only, excluding any subcategories.
benchmark/github-schema.graphql:13014:12  - Unknown word (Subcategories)  -- excludeSubcategories: Boolean
benchmark/github-schema.graphql:13027:5   - Unknown word (Also)           -- Also check topic aliases
benchmark/github-schema.graphql:13037:29  - Unknown word (matches)        -- Select the listing that matches this slug. It's the
benchmark/github-schema.graphql:13069:13  - Unknown word (Slug)           -- categorySlug: String
benchmark/github-schema.graphql:13083:33  - Unknown word (administered)   -- listings that can be administered by the specified user
benchmark/github-schema.graphql:13099:36  - Unknown word (slugs)          -- listings with these slugs, if they are visible
benchmark/github-schema.graphql:13109:31  - Unknown word (offer)          -- Select only listings that offer a free trial.
benchmark/github-schema.graphql:13111:13  - Unknown word (Trials)         -- withFreeTrialsOnly: Boolean = false
benchmark/github-schema.graphql:13154:14  - Unknown word (calculate)      -- If true, calculate the cost for the query
benchmark/github-schema.graphql:13154:55  - Unknown word (evaluating)     -- for the query without evaluating it
benchmark/github-schema.graphql:13160:11  - Unknown word (workaround)     -- Hack to workaround https://github.com/facebook
benchmark/github-schema.graphql:13160:3   - Unknown word (Hack)           -- Hack to workaround https
benchmark/github-schema.graphql:13160:70  - Unknown word (exposing)       -- relay/issues/112 re-exposing the root query object
benchmark/github-schema.graphql:131:21    - Unknown word (subject's)  -- The edge from the subject's comment connection.
benchmark/github-schema.graphql:131:7     - Unknown word (edge)       -- The edge from the subject's comment
benchmark/github-schema.graphql:13200:3   - Unknown word (Perform)        -- Perform a search across resources
benchmark/github-schema.graphql:1320:13   - Unknown word (Conduct)     -- The Code of Conduct for a repository
benchmark/github-schema.graphql:13224:26  - Unknown word (look)           -- The search string to look for.
benchmark/github-schema.graphql:13235:19  - Unknown word (Advisories)     -- GitHub Security Advisories
benchmark/github-schema.graphql:13241:22  - Unknown word (Advisory)       -- orderBy: SecurityAdvisoryOrder
benchmark/github-schema.graphql:13244:12  - Unknown word (advisories)     -- Filter advisories by identifier, e.g.
benchmark/github-schema.graphql:13244:43  - Unknown word (GHSA)           -- by identifier, e.g. GHSA or CVE.
benchmark/github-schema.graphql:13251:14  - Unknown word (Since)          -- publishedSince: DateTime
benchmark/github-schema.graphql:13286:5   - Unknown word (ghsa)           -- ghsaId: String!
benchmark/github-schema.graphql:13290:12  - Unknown word (Vulnerabilities) -- Software Vulnerabilities documented by GitHub
benchmark/github-schema.graphql:13290:28  - Unknown word (documented)      -- Software Vulnerabilities documented by GitHub Security Advisories
benchmark/github-schema.graphql:13296:22  - Unknown word (Vulnerability)   -- orderBy: SecurityVulnerabilityOrder
benchmark/github-schema.graphql:13299:28  - Unknown word (vulnerabilities) -- ecosystem to filter vulnerabilities by.
benchmark/github-schema.graphql:13299:8   - Unknown word (ecosystem)       -- An ecosystem to filter vulnerabilities
benchmark/github-schema.graphql:13301:32  - Unknown word (Ecosystem)       -- ecosystem: SecurityAdvisoryEcosystem
benchmark/github-schema.graphql:13309:15  - Unknown word (severities)      -- A list of severities to filter vulnerabilities
benchmark/github-schema.graphql:13311:34  - Unknown word (Severity)        -- severities: [SecurityAdvisorySeverity!]
benchmark/github-schema.graphql:1335:7    - Unknown word (formal)      -- The formal name of the Code of
benchmark/github-schema.graphql:13365:40  - Unknown word (counting)        -- for the current query counting against the rate limit
benchmark/github-schema.graphql:13370:46  - Unknown word (permitted)       -- points the client is permitted to consume in a 60 minute
benchmark/github-schema.graphql:13370:59  - Unknown word (consume)         -- client is permitted to consume in a 60 minute window
benchmark/github-schema.graphql:13380:24  - Unknown word (remaining)       -- The number of points remaining in the current rate
benchmark/github-schema.graphql:13385:51  - Unknown word (resets)          -- current rate limit window resets in UTC epoch seconds
benchmark/github-schema.graphql:13385:65  - Unknown word (epoch)           -- window resets in UTC epoch seconds.
benchmark/github-schema.graphql:13385:71  - Unknown word (seconds)         -- resets in UTC epoch seconds.
benchmark/github-schema.graphql:13391:34  - Unknown word (reacted)         -- subject that can be reacted on.
benchmark/github-schema.graphql:133:10    - Unknown word (Edge)       -- commentEdge: IssueCommentEdge
benchmark/github-schema.graphql:13449:6   - Unknown word (Reacting)        -- type ReactingUserConnection {
benchmark/github-schema.graphql:13488:35  - Unknown word (piece)           -- reaction to a particular piece of content.
benchmark/github-schema.graphql:1351:1    - Unknown word (Collaborators) -- Collaborators affiliation level with
benchmark/github-schema.graphql:1351:15   - Unknown word (affiliation)   -- Collaborators affiliation level with a subject
benchmark/github-schema.graphql:1353:18   - Unknown word (Affiliation)   -- enum CollaboratorAffiliation {
benchmark/github-schema.graphql:1353:6    - Unknown word (Collaborator)  -- enum CollaboratorAffiliation {
benchmark/github-schema.graphql:13545:12  - Unknown word (Reacted)         -- viewerHasReacted: Boolean!
benchmark/github-schema.graphql:13549:1   - Unknown word (Emojis)          -- Emojis that can be attached
benchmark/github-schema.graphql:13555:3   - Unknown word (THUMBS)          -- THUMBS_UP
benchmark/github-schema.graphql:1355:15   - Unknown word (collaborators) -- All outside collaborators of an organization-owned
benchmark/github-schema.graphql:1355:48   - Unknown word (owned)         -- laborators of an organization-owned subject.
benchmark/github-schema.graphql:1355:7    - Unknown word (outside)       -- All outside collaborators of an
benchmark/github-schema.graphql:13565:3   - Unknown word (LAUGH)           -- LAUGH
benchmark/github-schema.graphql:13570:3   - Unknown word (HOORAY)          -- HOORAY
benchmark/github-schema.graphql:13575:3   - Unknown word (CONFUSED)        -- CONFUSED
benchmark/github-schema.graphql:1357:3    - Unknown word (OUTSIDE)       -- OUTSIDE
benchmark/github-schema.graphql:13580:3   - Unknown word (HEART)           -- HEART
benchmark/github-schema.graphql:13585:3   - Unknown word (ROCKET)          -- ROCKET
benchmark/github-schema.graphql:13590:3   - Unknown word (EYES)            -- EYES
benchmark/github-schema.graphql:1360:72   - Unknown word (regardless)    -- organization-owned subject, regardless of organization membership
benchmark/github-schema.graphql:13628:59  - Unknown word (emotion)         -- reaction subject with the emotion represented by this
benchmark/github-schema.graphql:13628:67  - Unknown word (represented)     -- subject with the emotion represented by this reaction group
benchmark/github-schema.graphql:1365:25   - Unknown word (authenticated) -- All collaborators the authenticated user can see.
benchmark/github-schema.graphql:1371:19   - Unknown word (inside)        -- Types that can be inside Collection Items.
benchmark/github-schema.graphql:13744:35  - Unknown word (heads)           -- prefix, such as `refs/heads/` or `refs/tags/`.
benchmark/github-schema.graphql:1380:17   - Unknown word (authored)      -- The actor who authored the comment.
benchmark/github-schema.graphql:13830:32  - Unknown word (itself)          -- if the commit message itself references the subject
benchmark/github-schema.graphql:13841:5   - Unknown word (referencable)    -- Any referencable object
benchmark/github-schema.graphql:1385:3    - Unknown word (Author's)      -- Author's association with the
benchmark/github-schema.graphql:13865:17  - Unknown word (underlying)      -- Order refs by underlying commit date if the ref
benchmark/github-schema.graphql:13870:23  - Unknown word (alphanumeric)    -- Order refs by their alphanumeric name
benchmark/github-schema.graphql:13872:3   - Unknown word (ALPHABETICAL)    -- ALPHABETICAL
benchmark/github-schema.graphql:13876:26  - Unknown word (registry)        -- Represents an owner of a registry package.
benchmark/github-schema.graphql:1387:29   - Unknown word (Author)        -- authorAssociation: CommentAuthorAssociation!
benchmark/github-schema.graphql:13930:11  - Unknown word (releases)        -- List of releases assets which are dependent
benchmark/github-schema.graphql:13930:37  - Unknown word (dependent)       -- releases assets which are dependent on this release.
benchmark/github-schema.graphql:1395:12   - Unknown word (rendered)      -- The body rendered to HTML.
benchmark/github-schema.graphql:13:9      - Unknown word (String)     -- name: String!
benchmark/github-schema.graphql:14000:17  - Unknown word (times)           -- The number of times this asset was downloaded
benchmark/github-schema.graphql:1415:17   - Unknown word (edited)        -- The actor who edited the comment.
benchmark/github-schema.graphql:1421:40   - Unknown word (includes)      -- comment was edited and includes an edit with the creation
benchmark/github-schema.graphql:1421:52   - Unknown word (edit)          -- edited and includes an edit with the creation data
benchmark/github-schema.graphql:1423:18   - Unknown word (Edit)          -- includesCreatedEdit: Boolean!
benchmark/github-schema.graphql:1426:25   - Unknown word (made)          -- The moment the editor made the last edit
benchmark/github-schema.graphql:1426:7    - Unknown word (moment)        -- The moment the editor made the
benchmark/github-schema.graphql:1428:7    - Unknown word (Edited)        -- lastEditedAt: DateTime
benchmark/github-schema.graphql:14322:23  - Unknown word (unstar)          -- The Starrable ID to unstar.
benchmark/github-schema.graphql:14379:23  - Unknown word (renamable)       -- An object which has a renamable title
benchmark/github-schema.graphql:1441:13   - Unknown word (edits)         -- A list of edits to this content.
benchmark/github-schema.graphql:1443:14   - Unknown word (Edits)         -- userContentEdits(
benchmark/github-schema.graphql:14465:39  - Unknown word (reported)        -- piece of content can be reported or minimized.
benchmark/github-schema.graphql:14469:5   - Unknown word (spammy)          -- A spammy piece of content
benchmark/github-schema.graphql:14474:17  - Unknown word (harassing)       -- An abusive or harassing piece of content
benchmark/github-schema.graphql:14474:6   - Unknown word (abusive)         -- An abusive or harassing piece of
benchmark/github-schema.graphql:14476:3   - Unknown word (ABUSE)           -- ABUSE
benchmark/github-schema.graphql:14479:6   - Unknown word (irrelevant)      -- An irrelevant piece of content
benchmark/github-schema.graphql:14486:3   - Unknown word (OUTDATED)        -- OUTDATED
benchmark/github-schema.graphql:1466:11   - Unknown word (viewer)        -- Did the viewer author this comment
benchmark/github-schema.graphql:14694:17  - Unknown word (kilobytes)       -- The number of kilobytes this repository occupies
benchmark/github-schema.graphql:14694:43  - Unknown word (occupies)        -- kilobytes this repository occupies on disk.
benchmark/github-schema.graphql:14704:20  - Unknown word (forked)          -- A list of direct forked repositories.
benchmark/github-schema.graphql:1476:47   - Unknown word (owns)          -- the organization that owns the repository.
benchmark/github-schema.graphql:14774:34  - Unknown word (unmaintained)    -- if the repository is unmaintained.
benchmark/github-schema.graphql:14779:42  - Unknown word (disabled)        -- not this repository disabled.
benchmark/github-schema.graphql:14794:37  - Unknown word (mirror)          -- the repository is a mirror.
benchmark/github-schema.graphql:14796:5   - Unknown word (Mirror)          -- isMirror: Boolean!
benchmark/github-schema.graphql:147:15    - Unknown word (added)      -- Represents a 'added_to_project' event on
benchmark/github-schema.graphql:147:44    - Unknown word (given)      -- project' event on a given issue or pull request
benchmark/github-schema.graphql:1486:14   - Unknown word (been)          -- Author has been invited to collaborate
benchmark/github-schema.graphql:1486:19   - Unknown word (invited)       -- Author has been invited to collaborate on the
benchmark/github-schema.graphql:1486:30   - Unknown word (collaborate)   -- has been invited to collaborate on the repository.
benchmark/github-schema.graphql:1488:3    - Unknown word (COLLABORATOR)  -- COLLABORATOR
benchmark/github-schema.graphql:14903:18  - Unknown word (searches)        -- If provided, searches labels by name and descriptio
benchmark/github-schema.graphql:14909:23  - Unknown word (breakdown)       -- A list containing a breakdown of the language composition
benchmark/github-schema.graphql:14909:49  - Unknown word (composition)     -- breakdown of the language composition of the repository.
benchmark/github-schema.graphql:1491:14   - Unknown word (previously)    -- Author has previously committed to the repository
benchmark/github-schema.graphql:1491:25   - Unknown word (committed)     -- Author has previously committed to the repository.
benchmark/github-schema.graphql:1493:3    - Unknown word (CONTRIBUTOR)   -- CONTRIBUTOR
benchmark/github-schema.graphql:14951:3   - Unknown word (mentionable)     -- mentionableUsers(
benchmark/github-schema.graphql:149:6     - Unknown word (Added)      -- type AddedToProjectEvent implements
benchmark/github-schema.graphql:15048:31  - Unknown word (suitable)        -- revision expression suitable for rev-parse
benchmark/github-schema.graphql:15048:48  - Unknown word (parse)           -- expression suitable for rev-parse
benchmark/github-schema.graphql:1508:3    - Unknown word (NONE)          -- NONE
benchmark/github-schema.graphql:1512:31   - Unknown word (prevent)       -- possible errors that will prevent a user from updating
benchmark/github-schema.graphql:1512:5    - Unknown word (possible)      -- The possible errors that will prevent
benchmark/github-schema.graphql:1512:51   - Unknown word (updating)      -- prevent a user from updating a comment.
benchmark/github-schema.graphql:1514:13   - Unknown word (Cannot)        -- enum CommentCannotUpdateReason {
benchmark/github-schema.graphql:1518:3    - Unknown word (INSUFFICIENT)  -- INSUFFICIENT_ACCESS
benchmark/github-schema.graphql:151:28    - Unknown word (performed)  -- Identifies the actor who performed the event.
benchmark/github-schema.graphql:151:3     - Unknown word (Identifies) -- Identifies the actor who performed
benchmark/github-schema.graphql:15203:26  - Unknown word (Fully)           -- The ref to retrieve. Fully qualified matches are
benchmark/github-schema.graphql:15203:54  - Unknown word (checked)         -- qualified matches are checked in order
benchmark/github-schema.graphql:15204:34  - Unknown word (falling)         -- heads/master`) before falling back onto checks for
benchmark/github-schema.graphql:15204:47  - Unknown word (onto)            -- before falling back onto checks for short name
benchmark/github-schema.graphql:1521:28   - Unknown word (because)       -- Unable to create comment because issue is locked.
benchmark/github-schema.graphql:1521:3    - Unknown word (Unable)        -- Unable to create comment because
benchmark/github-schema.graphql:15239:5   - Unknown word (DEPRECATED)      -- DEPRECATED: use orderBy. The ordering
benchmark/github-schema.graphql:15250:33  - Unknown word (various)         -- single release given various criteria.
benchmark/github-schema.graphql:15250:41  - Unknown word (criteria)        -- release given various criteria.
benchmark/github-schema.graphql:1526:15   - Unknown word (logged)        -- You must be logged in to update this comment
benchmark/github-schema.graphql:1528:9    - Unknown word (REQUIRED)      -- LOGIN_REQUIRED
benchmark/github-schema.graphql:1536:6    - Unknown word (least)         -- At least one email address must
benchmark/github-schema.graphql:15417:3   - Unknown word (watchers)        -- watchers(
benchmark/github-schema.graphql:1541:7    - Unknown word (cannot)        -- You cannot update this comment
benchmark/github-schema.graphql:1543:3    - Unknown word (DENIED)        -- DENIED
benchmark/github-schema.graphql:15455:44  - Unknown word (through)         -- the user has access to through being a member of an
benchmark/github-schema.graphql:15456:31  - Unknown word (every)           -- organization. This includes every repository on every
benchmark/github-schema.graphql:1547:23   - Unknown word (deleted)       -- Represents a 'comment_deleted' event on a given issue
benchmark/github-schema.graphql:1549:13   - Unknown word (Deleted)       -- type CommentDeletedEvent implements Node
benchmark/github-schema.graphql:15553:39  - Unknown word (contributed)     -- repository is listed as 'contributed'.
benchmark/github-schema.graphql:15577:3   - Unknown word (Reviewed)        -- Reviewed a pull request
benchmark/github-schema.graphql:15598:3   - Unknown word (subset)         -- A subset of repository info.
benchmark/github-schema.graphql:156:18    - Unknown word (date)       -- Identifies the date and time when the object
benchmark/github-schema.graphql:1577:17   - Unknown word (additions)     -- The number of additions in this commit.
benchmark/github-schema.graphql:15786:3   - Unknown word (MIGRATING)      -- MIGRATING
benchmark/github-schema.graphql:15841:3   - Unknown word (STARGAZERS)     -- STARGAZERS
benchmark/github-schema.graphql:1606:5    - Unknown word (Ordering)      -- Ordering options for pull requests
benchmark/github-schema.graphql:16099:29  - Unknown word (reviewers)      -- that can be requested reviewers.
benchmark/github-schema.graphql:16123:24  - Unknown word (rather)         -- Add users to the set rather than replace.
benchmark/github-schema.graphql:1612:3    - Unknown word (Authorship)    -- Authorship details of the commit
benchmark/github-schema.graphql:16143:28  - Unknown word (getting)        -- pull request that is getting requests.
benchmark/github-schema.graphql:1617:16   - Unknown word (committer)     -- Check if the committer and the author match
benchmark/github-schema.graphql:1619:13   - Unknown word (Committer)     -- authoredByCommitter: Boolean!
benchmark/github-schema.graphql:1624:11   - Unknown word (Date)          -- authoredDate: DateTime!
benchmark/github-schema.graphql:1627:3    - Unknown word (Fetches)       -- Fetches `git blame` information
benchmark/github-schema.graphql:16311:68  - Unknown word (whereas)        -- because it not nullable, whereas the underlying field
benchmark/github-schema.graphql:1631:46   - Unknown word (want)          -- blame information you want.
benchmark/github-schema.graphql:16333:31  - Unknown word (caused)         -- Identifies the commit which caused the review to become
benchmark/github-schema.graphql:16478:24  - Unknown word (matched)        -- list of results that matched against a search query
benchmark/github-schema.graphql:16482:17  - Unknown word (pieces)         -- The number of pieces of code that matched
benchmark/github-schema.graphql:16539:7   - Unknown word (Matches)        -- textMatches: [TextMatch]
benchmark/github-schema.graphql:16543:16  - Unknown word (individual)     -- Represents the individual results of a search
benchmark/github-schema.graphql:16572:47  - Unknown word (advisory)       -- plaintext description of the advisory
benchmark/github-schema.graphql:16583:13  - Unknown word (identifiers)    -- A list of identifiers for this advisory
benchmark/github-schema.graphql:16603:7   - Unknown word (severity)       -- The severity of the advisory
benchmark/github-schema.graphql:16663:25  - Unknown word (withdrawn)      -- When the advisory was withdrawn, if it has been withdrawn
benchmark/github-schema.graphql:16694:14  - Unknown word (ecosystems)     -- The possible ecosystems of a security vulnerability
benchmark/github-schema.graphql:16694:39  - Unknown word (vulnerability's) -- ecosystems of a security vulnerability's package.
benchmark/github-schema.graphql:16698:27  - Unknown word (Gems)            -- Ruby gems hosted at RubyGems.org
benchmark/github-schema.graphql:16698:8   - Unknown word (gems)            -- Ruby gems hosted at RubyGems.org
benchmark/github-schema.graphql:16700:3   - Unknown word (RUBYGEMS)        -- RUBYGEMS
benchmark/github-schema.graphql:16703:33  - Unknown word (npmjs)           -- JavaScript packages hosted at npmjs.com
benchmark/github-schema.graphql:16713:32  - Unknown word (Maven)           -- artifacts hosted at the Maven central repository
benchmark/github-schema.graphql:16715:3   - Unknown word (MAVEN)           -- MAVEN
benchmark/github-schema.graphql:16718:37  - Unknown word (Gallery)         -- hosted at the NuGet Gallery
benchmark/github-schema.graphql:16763:26  - Unknown word (Supports)        -- The identifier string. Supports exact or partial matching
benchmark/github-schema.graphql:16763:35  - Unknown word (exact)           -- identifier string. Supports exact or partial matching
benchmark/github-schema.graphql:16763:44  - Unknown word (partial)         -- string. Supports exact or partial matching.
benchmark/github-schema.graphql:16769:12  - Unknown word (formats)         -- Identifier formats available for advisories
benchmark/github-schema.graphql:16773:30  - Unknown word (Exposures)       -- Vulnerabilities and Exposures Identifier.
benchmark/github-schema.graphql:16803:23  - Unknown word (publication)     -- Order advisories by publication time
benchmark/github-schema.graphql:1682:12   - Unknown word (commited)      -- Check if commited via GitHub web UI.
benchmark/github-schema.graphql:16843:14  - Unknown word (accessible)      -- A publicly accessible reference
benchmark/github-schema.graphql:16849:17  - Unknown word (vulnerability)   -- Severity of the vulnerability.
benchmark/github-schema.graphql:16858:3   - Unknown word (Moderate)        -- Moderate.
benchmark/github-schema.graphql:16860:3   - Unknown word (MODERATE)        -- MODERATE
benchmark/github-schema.graphql:1687:3    - Unknown word (Committership) -- Committership details of the commit
benchmark/github-schema.graphql:16885:8   - Unknown word (Patched)         -- firstPatchedVersion: SecurityAdvisoryPacka
benchmark/github-schema.graphql:16888:24  - Unknown word (vulnerable)      -- A description of the vulnerable package
benchmark/github-schema.graphql:168:40    - Unknown word (Labelable)  -- input type of AddLabelsToLabelable
benchmark/github-schema.graphql:16904:15  - Unknown word (follows)         -- This string follows a basic syntax with
benchmark/github-schema.graphql:16904:49  - Unknown word (forms)           -- basic syntax with a few forms.
benchmark/github-schema.graphql:16905:15  - Unknown word (denotes)         -- + `= 0.2.0` denotes a single vulnerable
benchmark/github-schema.graphql:16908:62  - Unknown word (minimum)         -- version range with a known minimum and maximum version
benchmark/github-schema.graphql:16982:6   - Unknown word (Smime)           -- type SmimeSignature implements
benchmark/github-schema.graphql:16:38     - Unknown word (performing) -- identifier for the client performing the mutation.
benchmark/github-schema.graphql:16:53     - Unknown word (mutation)   -- client performing the mutation.
benchmark/github-schema.graphql:1706:38   - Unknown word (returned)      -- options for deployments returned from the connection
benchmark/github-schema.graphql:17081:29  - Unknown word (stars)           -- Allows ordering a list of stars by when they were created
benchmark/github-schema.graphql:17083:3   - Unknown word (STARRED)         -- STARRED_AT
benchmark/github-schema.graphql:17195:7   - Unknown word (combined)        -- The combined commit status.
benchmark/github-schema.graphql:17248:3   - Unknown word (EXPECTED)        -- EXPECTED
benchmark/github-schema.graphql:17256:13  - Unknown word (failing)         -- Status is failing.
benchmark/github-schema.graphql:172:17    - Unknown word (labelable)  -- The id of the labelable object to add labels
benchmark/github-schema.graphql:1732:48   - Unknown word (including)     -- history starting from (and including) this commit, in the
benchmark/github-schema.graphql:1732:7    - Unknown word (linear)        -- The linear commit history starting
benchmark/github-schema.graphql:1732:79   - Unknown word (same)          -- this commit, in the same order as `git log`.
benchmark/github-schema.graphql:17354:20  - Unknown word (notified)        -- The User is only notified when participating or
benchmark/github-schema.graphql:17359:31  - Unknown word (conversations)   -- User is notified of all conversations.
benchmark/github-schema.graphql:17364:15  - Unknown word (never)           -- The User is never notified.
benchmark/github-schema.graphql:17366:3   - Unknown word (IGNORED)         -- IGNORED
benchmark/github-schema.graphql:17381:5   - Unknown word (Commenter)       -- isCommenter: Boolean!
benchmark/github-schema.graphql:17432:3   - Unknown word (tagger)          -- tagger: GitActor
benchmark/github-schema.graphql:17445:28  - Unknown word (ancestors)       -- list of teams that are ancestors of this team.
benchmark/github-schema.graphql:17480:23  - Unknown word (belonging)       -- List of child teams belonging to this team
benchmark/github-schema.graphql:17494:21  - Unknown word (immediate)       -- Whether to list immediate child teams or all descendant
benchmark/github-schema.graphql:17494:50  - Unknown word (descendant)      -- immediate child teams or all descendant child teams.
benchmark/github-schema.graphql:17535:21  - Unknown word (editing)         -- The HTTP path for editing this team
benchmark/github-schema.graphql:1756:55   - Unknown word (touching)      -- to only show commits touching files under this path
benchmark/github-schema.graphql:1761:69   - Unknown word (authorship)    -- commits with matching authorship.
benchmark/github-schema.graphql:1766:12   - Unknown word (specifying)    -- Allows specifying a beginning time or
benchmark/github-schema.graphql:1766:25   - Unknown word (beginning)     -- Allows specifying a beginning time or date for fetching
benchmark/github-schema.graphql:1766:5    - Unknown word (Allows)        -- Allows specifying a beginning
benchmark/github-schema.graphql:1766:52   - Unknown word (fetching)      -- beginning time or date for fetching commits.
benchmark/github-schema.graphql:1768:5    - Unknown word (since)         -- since: GitTimestamp
benchmark/github-schema.graphql:1773:5    - Unknown word (until)         -- until: GitTimestamp
benchmark/github-schema.graphql:1785:10   - Unknown word (Body)          -- messageBody: String!
benchmark/github-schema.graphql:17904:3   - Unknown word (MAINTAINER)      -- MAINTAINER
benchmark/github-schema.graphql:17907:24  - Unknown word (administrative)  -- A team member has no administrative permissions on the team
benchmark/github-schema.graphql:17913:1   - Unknown word (Defines)         -- Defines which types of team
benchmark/github-schema.graphql:17913:86  - Unknown word (IMMEDIATE)       -- list. Can be one of IMMEDIATE, CHILD_TEAM or ALL.
benchmark/github-schema.graphql:17917:3   - Unknown word (Includes)        -- Includes only immediate members
benchmark/github-schema.graphql:1793:26   - Unknown word (headline)      -- The Git commit message headline
benchmark/github-schema.graphql:1795:10   - Unknown word (Headline)      -- messageHeadline: String!
benchmark/github-schema.graphql:17969:3   - Unknown word (VISIBLE)         -- VISIBLE
benchmark/github-schema.graphql:18068:18  - Unknown word (rights)          -- User has admin rights on the team.
benchmark/github-schema.graphql:18088:3   - Unknown word (Highlights)      -- Highlights within the matched fragment
benchmark/github-schema.graphql:18090:25  - Unknown word (Highlight)       -- highlights: [TextMatchHighlight!]!
benchmark/github-schema.graphql:18090:3   - Unknown word (highlights)      -- highlights: [TextMatchHighlight
benchmark/github-schema.graphql:18099:21  - Unknown word (highlight)       -- Represents a single highlight in a search result match
benchmark/github-schema.graphql:18103:53  - Unknown word (begins)          -- where the matched text begins.
benchmark/github-schema.graphql:18103:7   - Unknown word (indice)          -- The indice in the fragment where
benchmark/github-schema.graphql:18105:8   - Unknown word (Indice)          -- beginIndice: Int!
benchmark/github-schema.graphql:18130:83  - Unknown word (relevant)        -- sorted with the most relevant
benchmark/github-schema.graphql:18223:7   - Unknown word (RELEVANT)        -- NOT_RELEVANT
benchmark/github-schema.graphql:18226:73  - Unknown word (rails)           -- repository (e.g. #ruby-on-rails-version-4-2-1).
benchmark/github-schema.graphql:18256:23  - Unknown word (came)            -- The repository this came from
benchmark/github-schema.graphql:18287:18  - Unknown word (entries)         -- A list of tree entries.
benchmark/github-schema.graphql:18308:14  - Unknown word (mode)            -- Entry file mode.
benchmark/github-schema.graphql:18365:31  - Unknown word (retrieved)       -- Represents a type that can be retrieved by a URL.
benchmark/github-schema.graphql:18380:15  - Unknown word (unknown)         -- Represents an unknown signature on a Commit
benchmark/github-schema.graphql:1848:34   - Unknown word (present)       -- signing information, if present.
benchmark/github-schema.graphql:18502:45  - Unknown word (marked)          -- pull request currently marked as a duplicate.
benchmark/github-schema.graphql:18507:56  - Unknown word (canonical)       -- currently considered canonical/authoritative/original
benchmark/github-schema.graphql:18507:66  - Unknown word (authoritative)   -- considered canonical/authoritative/original.
benchmark/github-schema.graphql:1850:17   - Unknown word (Signature)     -- signature: GitSignature
benchmark/github-schema.graphql:1850:3    - Unknown word (signature)     -- signature: GitSignature
benchmark/github-schema.graphql:18533:29  - Unknown word (Unminimize)      -- Autogenerated input type of UnminimizeComment
benchmark/github-schema.graphql:18548:29  - Unknown word (Unpin)           -- Autogenerated input type of UnpinIssue
benchmark/github-schema.graphql:1858:31   - Unknown word (tarball)       -- a URL to download a tarball archive for a repository
benchmark/github-schema.graphql:1859:35   - Unknown word (these)         -- private repositories, these links are temporary
benchmark/github-schema.graphql:1859:78   - Unknown word (five)          -- temporary and expire after five minutes.
benchmark/github-schema.graphql:1859:83   - Unknown word (minutes)       -- and expire after five minutes.
benchmark/github-schema.graphql:1884:26   - Unknown word (able)          -- Check if the viewer is able to change their subscription
benchmark/github-schema.graphql:1884:41   - Unknown word (their)         -- viewer is able to change their subscription status
benchmark/github-schema.graphql:1889:31   - Unknown word (watching)      -- Identifies if the viewer is watching, not watching, or ignoring
benchmark/github-schema.graphql:1889:58   - Unknown word (ignoring)      -- watching, not watching, or ignoring the subscribable entity
benchmark/github-schema.graphql:1894:31   - Unknown word (zipball)       -- a URL to download a zipball archive for a repository
benchmark/github-schema.graphql:18:9      - Unknown word (Mutation)   -- clientMutationId: String
benchmark/github-schema.graphql:1901:1    - Unknown word (Specifies)     -- Specifies an author for filtering
benchmark/github-schema.graphql:1901:25   - Unknown word (filtering)     -- Specifies an author for filtering Git commits.
benchmark/github-schema.graphql:1906:38   - Unknown word (precedence)    -- returned. This field takes precedence over emails.
benchmark/github-schema.graphql:19176:47  - Unknown word (compliant)       -- and RFC 6570 (level 4) compliant URI string.
benchmark/github-schema.graphql:19181:14  - Unknown word (individual's)   -- A user is an individual's account on GitHub that
benchmark/github-schema.graphql:19259:45  - Unknown word (later)          -- made at this time or later will be counted. If
benchmark/github-schema.graphql:19259:59  - Unknown word (counted)        -- time or later will be counted. If omitted, defaults
benchmark/github-schema.graphql:19286:37  - Unknown word (followed)       -- users the given user is followed by.
benchmark/github-schema.graphql:19288:3   - Unknown word (followers)      -- followers(
benchmark/github-schema.graphql:19311:37  - Unknown word (following)      -- users the given user is following.
benchmark/github-schema.graphql:19407:33  - Unknown word (participant)    -- or not this user is a participant in the GitHub Security
benchmark/github-schema.graphql:19407:72  - Unknown word (Bounty)         -- GitHub Security Bug Bounty.
benchmark/github-schema.graphql:19409:11  - Unknown word (Hunter)         -- isBountyHunter: Boolean!
benchmark/github-schema.graphql:19412:59  - Unknown word (Campus)         -- participant in the GitHub Campus Experts Program.
benchmark/github-schema.graphql:19412:66  - Unknown word (Experts)        -- in the GitHub Campus Experts Program.
benchmark/github-schema.graphql:19412:74  - Unknown word (Program)        -- GitHub Campus Experts Program.
benchmark/github-schema.graphql:19414:11  - Unknown word (Expert)         -- isCampusExpert: Boolean!
benchmark/github-schema.graphql:19422:40  - Unknown word (employee)       -- this user is a GitHub employee.
benchmark/github-schema.graphql:19424:5   - Unknown word (Employee)       -- isEmployee: Boolean!
benchmark/github-schema.graphql:19427:38  - Unknown word (themselves)     -- the user has marked themselves as for hire.
benchmark/github-schema.graphql:19427:56  - Unknown word (hire)           -- marked themselves as for hire.
benchmark/github-schema.graphql:19429:5   - Unknown word (Hireable)       -- isHireable: Boolean!
benchmark/github-schema.graphql:19434:5   - Unknown word (Site)           -- isSiteAdmin: Boolean!
benchmark/github-schema.graphql:1946:68   - Unknown word (exists)        -- comment, if the commit exists.
benchmark/github-schema.graphql:1977:45   - Unknown word (minimized)     -- not a comment has been minimized.
benchmark/github-schema.graphql:1979:5    - Unknown word (Minimized)     -- isMinimized: Boolean!
benchmark/github-schema.graphql:197:21    - Unknown word (labeled)    -- The item that was labeled.
benchmark/github-schema.graphql:19884:40  - Unknown word (recently)       -- repositories that the user recently contributed to.
benchmark/github-schema.graphql:19909:19  - Unknown word (uses)           -- GitHub.com UI uses [COMMIT, ISSUE, PULL
benchmark/github-schema.graphql:19985:29  - Unknown word (what)           -- user's description of what they're currently doing
benchmark/github-schema.graphql:19985:34  - Unknown word (they're)        -- description of what they're currently doing.
benchmark/github-schema.graphql:19985:52  - Unknown word (doing)          -- what they're currently doing.
benchmark/github-schema.graphql:20010:40  - Unknown word (follow)         -- the viewer is able to follow the user.
benchmark/github-schema.graphql:20012:12  - Unknown word (Follow)         -- viewerCanFollow: Boolean!
benchmark/github-schema.graphql:20078:14  - Unknown word (durations)      -- The possible durations that a user can be blocked
benchmark/github-schema.graphql:2007:13   - Unknown word (reactions)     -- A list of reactions grouped by content left
benchmark/github-schema.graphql:2007:23   - Unknown word (grouped)       -- A list of reactions grouped by content left on the
benchmark/github-schema.graphql:20080:15  - Unknown word (Duration)       -- enum UserBlockDuration {
benchmark/github-schema.graphql:20089:9   - Unknown word (DAYS)           -- THREE_DAYS
benchmark/github-schema.graphql:20094:7   - Unknown word (WEEK)           -- ONE_WEEK
benchmark/github-schema.graphql:20099:7   - Unknown word (MONTH)          -- ONE_MONTH
benchmark/github-schema.graphql:20102:24  - Unknown word (permanently)    -- The user was blocked permanently
benchmark/github-schema.graphql:20104:3   - Unknown word (PERMANENT)      -- PERMANENT
benchmark/github-schema.graphql:2012:13   - Unknown word (Reactions)     -- A list of Reactions left on the Issue.
benchmark/github-schema.graphql:20264:12  - Unknown word (summarizing)    -- An emoji summarizing the user's status.
benchmark/github-schema.graphql:20274:23  - Unknown word (indicates)      -- Whether this status indicates the user is not fully
benchmark/github-schema.graphql:20279:19  - Unknown word (describing)     -- A brief message describing what the user is doing
benchmark/github-schema.graphql:203:39    - Unknown word (Card)       -- input type of AddProjectCard
benchmark/github-schema.graphql:207:29    - Unknown word (Column)     -- Node ID of the ProjectColumn.
benchmark/github-schema.graphql:2097:35   - Unknown word (minimize)      -- the current viewer can minimize this object.
benchmark/github-schema.graphql:2099:12   - Unknown word (Minimize)      -- viewerCanMinimize: Boolean!
benchmark/github-schema.graphql:2104:12   - Unknown word (React)         -- viewerCanReact: Boolean!
benchmark/github-schema.graphql:2112:3    - Unknown word (Reasons)       -- Reasons why the current viewer
benchmark/github-schema.graphql:212:22    - Unknown word (card)       -- The content of the card. Must be a member of
benchmark/github-schema.graphql:212:28    - Unknown word (Must)       -- content of the card. Must be a member of the ProjectCar
benchmark/github-schema.graphql:2167:21   - Unknown word (exist)         -- The comments that exist in this thread.
benchmark/github-schema.graphql:2192:27   - Unknown word (were)          -- commit the comments were made on.
benchmark/github-schema.graphql:2239:29   - Unknown word (contribution)  -- Ordering options for commit contribution connections.
benchmark/github-schema.graphql:2241:13   - Unknown word (Contribution)  -- input CommitContributionOrder {
benchmark/github-schema.graphql:2243:38   - Unknown word (contributions) -- which to order commit contributions.
benchmark/github-schema.graphql:2248:16   - Unknown word (direction)     -- The ordering direction.
benchmark/github-schema.graphql:2248:7    - Unknown word (ordering)      -- The ordering direction.
benchmark/github-schema.graphql:2250:19   - Unknown word (Direction)     -- direction: OrderDirection!
benchmark/github-schema.graphql:2254:60   - Unknown word (ordered)       -- ntribution connections can be ordered.
benchmark/github-schema.graphql:2258:38   - Unknown word (they)          -- contributions by when they were made.
benchmark/github-schema.graphql:2260:3    - Unknown word (OCCURRED)      -- OCCURRED_AT
benchmark/github-schema.graphql:2263:37   - Unknown word (many)          -- contributions by how many commits they represent
benchmark/github-schema.graphql:2269:40   - Unknown word (within)        -- commits made by a user within one repository.
benchmark/github-schema.graphql:2271:12   - Unknown word (Contributions) -- type CommitContributionsByRepository {
benchmark/github-schema.graphql:2273:29   - Unknown word (each)          -- commit contributions, each representing a day.
benchmark/github-schema.graphql:2273:34   - Unknown word (representing)  -- contributions, each representing a day.
benchmark/github-schema.graphql:232:28    - Unknown word (Column's)   -- edge from the ProjectColumn's card connection.
benchmark/github-schema.graphql:2363:59   - Unknown word (supports)      -- attachment. This parameter supports markdown.
benchmark/github-schema.graphql:2401:50   - Unknown word (such)          -- user made on GitHub, such as opening an issue
benchmark/github-schema.graphql:2401:58   - Unknown word (opening)       -- made on GitHub, such as opening an issue.
benchmark/github-schema.graphql:2406:3    - Unknown word (example)       -- example, your own 'first issue
benchmark/github-schema.graphql:2407:3    - Unknown word (longer)        -- longer access.
benchmark/github-schema.graphql:2409:5    - Unknown word (Restricted)    -- isRestricted: Boolean!
benchmark/github-schema.graphql:2414:3    - Unknown word (occurred)      -- occurredAt: DateTime!
benchmark/github-schema.graphql:2433:3    - Unknown word (calendar)      -- A calendar of contributions made
benchmark/github-schema.graphql:2435:18   - Unknown word (Calendar)      -- type ContributionCalendar {
benchmark/github-schema.graphql:2437:100  - Unknown word (represents)    -- more contributions it represents.
benchmark/github-schema.graphql:2437:23   - Unknown word (codes)         -- A list of hex color codes used in this calendar
benchmark/github-schema.graphql:2437:56   - Unknown word (darker)        -- in this calendar. The darker the color, the more
benchmark/github-schema.graphql:2437:78   - Unknown word (more)          -- darker the color, the more contributions it represents
benchmark/github-schema.graphql:2439:3    - Unknown word (colors)        -- colors: [String!]!
benchmark/github-schema.graphql:2442:3    - Unknown word (Determine)     -- Determine if the color set was
benchmark/github-schema.graphql:2442:34   - Unknown word (chosen)        -- if the color set was chosen because it's currently
benchmark/github-schema.graphql:2442:54   - Unknown word (currently)     -- chosen because it's currently Halloween.
benchmark/github-schema.graphql:2442:64   - Unknown word (Halloween)     -- because it's currently Halloween.
benchmark/github-schema.graphql:2447:17   - Unknown word (months)        -- A list of the months of contributions in
benchmark/github-schema.graphql:2449:32   - Unknown word (Month)         -- ContributionCalendarMonth!]!
benchmark/github-schema.graphql:2457:17   - Unknown word (weeks)         -- A list of the weeks of contributions in
benchmark/github-schema.graphql:2459:31   - Unknown word (Week)          -- ContributionCalendarWeek!]!
benchmark/github-schema.graphql:2463:14   - Unknown word (single)        -- Represents a single day of contributions
benchmark/github-schema.graphql:2467:95   - Unknown word (others)        -- this day compared to others in the calendar.
benchmark/github-schema.graphql:2482:42   - Unknown word (week)          -- representing which day of the week this square represents
benchmark/github-schema.graphql:2482:82   - Unknown word (Monday)        -- represents, e.g., 1 is Monday.
benchmark/github-schema.graphql:2484:3    - Unknown word (weekday)       -- weekday: Int!
benchmark/github-schema.graphql:2488:3    - Unknown word (month)         -- A month of contributions in
benchmark/github-schema.graphql:24:27     - Unknown word (Payload)    -- AcceptTopicSuggestionPayload {
benchmark/github-schema.graphql:2502:18   - Unknown word (started)       -- How many weeks started in this month.
benchmark/github-schema.graphql:2504:8    - Unknown word (Weeks)         -- totalWeeks: Int!
benchmark/github-schema.graphql:2507:7    - Unknown word (year)          -- The year the month occurred in
benchmark/github-schema.graphql:2517:7    - Unknown word (days)          -- The days of contributions in
benchmark/github-schema.graphql:2519:15   - Unknown word (Days)          -- contributionDays: [ContributionCalendarDay
benchmark/github-schema.graphql:2522:19   - Unknown word (earliest)      -- The date of the earliest square in this week
benchmark/github-schema.graphql:2553:61   - Unknown word (opened)        -- contributions such as opened issues and commits created
benchmark/github-schema.graphql:2553:68   - Unknown word (issues)        -- contributions such as opened issues and commits created
benchmark/github-schema.graphql:2561:37   - Unknown word (included)      -- repositories should be included.
benchmark/github-schema.graphql:2572:31   - Unknown word (making)        -- years the user has been making contributions with the
benchmark/github-schema.graphql:2572:61   - Unknown word (most)          -- contributions with the most recent year first.
benchmark/github-schema.graphql:2572:66   - Unknown word (recent)        -- contributions with the most recent year first.
benchmark/github-schema.graphql:2572:7    - Unknown word (years)         -- The years the user has been making
benchmark/github-schema.graphql:2574:15   - Unknown word (Years)         -- contributionYears: [Int!]!
benchmark/github-schema.graphql:2577:39   - Unknown word (span)          -- this collection's time span ends in the current
benchmark/github-schema.graphql:2577:44   - Unknown word (ends)          -- collection's time span ends in the current month
benchmark/github-schema.graphql:2579:3    - Unknown word (does)          -- doesEndInCurrentMonth: Boolean
benchmark/github-schema.graphql:257:19    - Unknown word (column)     -- The name of the column.
benchmark/github-schema.graphql:2590:3    - Unknown word (ended)         -- endedAt: DateTime!
benchmark/github-schema.graphql:2600:47   - Unknown word (even)          -- issue will be returned even if it was opened outside
benchmark/github-schema.graphql:2602:7    - Unknown word (Upcoming)      -- **Upcoming Change on 2019-07-0
benchmark/github-schema.graphql:2603:115  - Unknown word (back)          -- starting sufficiently far back
benchmark/github-schema.graphql:2603:48   - Unknown word (removed)       -- ignoreTimeRange` will be removed. Use a `ContributionsCollecti
benchmark/github-schema.graphql:2603:98   - Unknown word (sufficiently)  -- ributionsCollection` starting sufficiently far back
benchmark/github-schema.graphql:2644:3    - Unknown word (Does)          -- Does the user have any more
benchmark/github-schema.graphql:2644:70   - Unknown word (prior)         -- timeline that occurred prior to the collection's
benchmark/github-schema.graphql:2646:19   - Unknown word (Past)          -- hasActivityInThePast: Boolean!
benchmark/github-schema.graphql:2649:16   - Unknown word (there)         -- Determine if there are any contributions
benchmark/github-schema.graphql:2654:61   - Unknown word (frame)         -- contributions in this time frame whose details
benchmark/github-schema.graphql:2661:22   - Unknown word (collector's)   -- Whether or not the collector's time span is all within
benchmark/github-schema.graphql:2663:5    - Unknown word (Single)        -- isSingleDay: Boolean!
benchmark/github-schema.graphql:2690:43   - Unknown word (excluded)      -- first issue ever be excluded from the result.
benchmark/github-schema.graphql:2690:5    - Unknown word (Should)        -- Should the user's first issue
benchmark/github-schema.graphql:2695:28   - Unknown word (commented)     -- Should the user's most commented issue be excluded from
benchmark/github-schema.graphql:2697:12   - Unknown word (Popular)       -- excludePopular: Boolean = false
benchmark/github-schema.graphql:2727:3    - Unknown word (falls)         -- falls outside the collection
benchmark/github-schema.graphql:2729:3    - Unknown word (joined)        -- joinedGitHubContribution(
benchmark/github-schema.graphql:2738:6    - Unknown word (Joined)        -- ): JoinedGitHubContribution
benchmark/github-schema.graphql:2744:3    - Unknown word (latest)        -- latestRestrictedContributionDate
benchmark/github-schema.graphql:2748:12   - Unknown word (different)     -- to get a different collection from an earlier
benchmark/github-schema.graphql:2748:41   - Unknown word (earlier)       -- different collection from an earlier time range that does
benchmark/github-schema.graphql:2750:7    - Unknown word (Recent)        -- mostRecentCollectionWithActivity
benchmark/github-schema.graphql:2753:75   - Unknown word (than)          -- an earlier time range than this one
benchmark/github-schema.graphql:2759:44   - Unknown word (received)      -- opened on GitHub that received the most comments in
benchmark/github-schema.graphql:2762:3    - Unknown word (popular)       -- popularIssueContribution: CreatedIssu
benchmark/github-schema.graphql:2959:24   - Unknown word (Contributed)   -- totalRepositoriesWithContributedCommits: Int!
benchmark/github-schema.graphql:2964:35   - Unknown word (Issues)        -- talRepositoriesWithContributedIssues(
benchmark/github-schema.graphql:3013:15   - Unknown word (converted)     -- Represents a 'converted_note_to_issue' event
benchmark/github-schema.graphql:3015:6    - Unknown word (Converted)     -- type ConvertedNoteToIssueEvent implements
benchmark/github-schema.graphql:3034:29   - Unknown word (Convert)       -- Autogenerated input type of ConvertProjectCardNoteToIssue
benchmark/github-schema.graphql:3038:25   - Unknown word (convert)       -- The ProjectCard ID to convert.
benchmark/github-schema.graphql:3048:41   - Unknown word (Defaults)     -- newly created issue. Defaults to the card's note text
benchmark/github-schema.graphql:3048:57   - Unknown word (card's)       -- issue. Defaults to the card's note text.
benchmark/github-schema.graphql:307:7     - Unknown word (relative)   -- The relative path of the file to
benchmark/github-schema.graphql:3083:14   - Unknown word (relay)        -- The global relay id of the repository
benchmark/github-schema.graphql:3088:12   - Unknown word (like)         -- The glob-like pattern used to determine
benchmark/github-schema.graphql:3088:33   - Unknown word (determine)    -- like pattern used to determine matching branches.
benchmark/github-schema.graphql:3088:7    - Unknown word (glob)         -- The glob-like pattern used to
benchmark/github-schema.graphql:3123:25   - Unknown word (owners)       -- Are reviews from code owners required to update matching
benchmark/github-schema.graphql:3138:74   - Unknown word (targeting)    -- reviews on pull requests targeting matching branches.
benchmark/github-schema.graphql:3193:49   - Unknown word (contain)      -- attachment, which may contain markdown.
benchmark/github-schema.graphql:3204:44   - Unknown word (committing)   -- contribution a user made by committing to a repository.
benchmark/github-schema.graphql:3265:41   - Unknown word (across)       -- total count of commits across days and repositories
benchmark/github-schema.graphql:337:7     - Unknown word (newly)      -- The newly created comment.
benchmark/github-schema.graphql:3454:44   - Unknown word (leaving)      -- contribution a user made by leaving a review on a pull request
benchmark/github-schema.graphql:3470:29   - Unknown word (reviewed)     -- pull request the user reviewed.
benchmark/github-schema.graphql:3480:18   - Unknown word (containing)   -- The repository containing the pull request that
benchmark/github-schema.graphql:3541:54   - Unknown word (creating)     -- user made on GitHub by creating a repository.
benchmark/github-schema.graphql:357:29    - Unknown word (pertains)   -- commit OID the review pertains to.
benchmark/github-schema.graphql:3649:22   - Unknown word (milestone)    -- The Node ID of the milestone for this issue.
benchmark/github-schema.graphql:3734:48   - Unknown word (pulled)       -- you want your changes pulled into. This should be
benchmark/github-schema.graphql:3734:79   - Unknown word (existing)     -- into. This should be an existing branch
benchmark/github-schema.graphql:3736:6    - Unknown word (another)      -- to another repository.
benchmark/github-schema.graphql:3741:26   - Unknown word (where)        -- The name of the branch where your changes are implemented
benchmark/github-schema.graphql:374:14    - Unknown word (Draft)      -- comments: [DraftPullRequestReviewComment
benchmark/github-schema.graphql:3757:21   - Unknown word (maintainers)  -- Indicates whether maintainers can modify the pull
benchmark/github-schema.graphql:3759:3    - Unknown word (maintainer)   -- maintainerCanModify: Boolean =
benchmark/github-schema.graphql:3783:14   - Unknown word (mention)      -- Represents a mention made by one issue or
benchmark/github-schema.graphql:3785:11   - Unknown word (Referenced)   -- type CrossReferencedEvent implements Node
benchmark/github-schema.graphql:3798:13   - Unknown word (originated)   -- Reference originated in a different repository
benchmark/github-schema.graphql:37:1      - Unknown word (Represents) -- Represents an object which can
benchmark/github-schema.graphql:37:22     - Unknown word (which)      -- Represents an object which can take actions on
benchmark/github-schema.graphql:37:32     - Unknown word (take)       -- an object which can take actions on GitHub. Typically
benchmark/github-schema.graphql:37:56     - Unknown word (Typically)  -- take actions on GitHub. Typically a User or Bot.
benchmark/github-schema.graphql:3815:21   - Unknown word (Subject)      -- source: ReferencedSubject!
benchmark/github-schema.graphql:3828:58   - Unknown word (merged)       -- closed when the source is merged.
benchmark/github-schema.graphql:3834:13   - Unknown word (encoded)      -- An ISO-8601 encoded date string.
benchmark/github-schema.graphql:3834:26   - Unknown word (string)       -- ISO-8601 encoded date string.
benchmark/github-schema.graphql:3836:1    - Unknown word (scalar)       -- scalar Date
benchmark/github-schema.graphql:3858:41   - Unknown word (declined)     -- the suggested topic is declined.
benchmark/github-schema.graphql:3903:24   - Unknown word (administrate) -- Can read, write, and administrate repos by default
benchmark/github-schema.graphql:3993:28   - Unknown word (belonged)     -- repository the issue belonged to
benchmark/github-schema.graphql:39:11     - Unknown word (Actor)      -- interface Actor {
benchmark/github-schema.graphql:403:32    - Unknown word (Reaction)   -- utogenerated input type of AddReaction
benchmark/github-schema.graphql:412:19    - Unknown word (emoji)      -- The name of the emoji to react with.
benchmark/github-schema.graphql:412:28    - Unknown word (react)      -- name of the emoji to react with.
benchmark/github-schema.graphql:4159:15   - Unknown word (demilestoned) -- Represents a 'demilestoned' event on a given issue
benchmark/github-schema.graphql:4161:6    - Unknown word (Demilestoned) -- type DemilestonedEvent implements Node
benchmark/github-schema.graphql:4181:12   - Unknown word (Milestone)    -- subject: MilestoneItem!
benchmark/github-schema.graphql:41:25     - Unknown word (actor's)    -- URL pointing to the actor's public avatar.
benchmark/github-schema.graphql:41:40     - Unknown word (avatar)     -- to the actor's public avatar.
benchmark/github-schema.graphql:41:9      - Unknown word (pointing)   -- A URL pointing to the actor's public
benchmark/github-schema.graphql:432:7     - Unknown word (reaction)   -- The reaction object.
benchmark/github-schema.graphql:4337:46   - Unknown word (might)        -- a deployment system might need.
benchmark/github-schema.graphql:4337:52   - Unknown word (need)         -- deployment system might need.
benchmark/github-schema.graphql:4339:3    - Unknown word (payload)      -- payload: String
benchmark/github-schema.graphql:437:7     - Unknown word (reactable)  -- The reactable subject.
benchmark/github-schema.graphql:439:12    - Unknown word (Reactable)  -- subject: Reactable
benchmark/github-schema.graphql:443:32    - Unknown word (Star)       -- utogenerated input type of AddStar
benchmark/github-schema.graphql:447:23    - Unknown word (star)       -- The Starrable ID to star.
benchmark/github-schema.graphql:447:7     - Unknown word (Starrable)  -- The Starrable ID to star.
benchmark/github-schema.graphql:4490:3    - Unknown word (ABANDONED)    -- ABANDONED
benchmark/github-schema.graphql:4498:15   - Unknown word (transient)    -- An inactive transient deployment.
benchmark/github-schema.graphql:4498:6    - Unknown word (inactive)     -- An inactive transient deployment
benchmark/github-schema.graphql:449:3     - Unknown word (starrable)  -- starrableId: ID!
benchmark/github-schema.graphql:4500:3    - Unknown word (DESTROYED)    -- DESTROYED
benchmark/github-schema.graphql:4503:18   - Unknown word (experienced)  -- The deployment experienced an error.
benchmark/github-schema.graphql:4515:3    - Unknown word (INACTIVE)     -- INACTIVE
benchmark/github-schema.graphql:4534:1    - Unknown word (Describes)    -- Describes the status of a given
benchmark/github-schema.graphql:4534:44   - Unknown word (attempt)      -- of a given deployment attempt.
benchmark/github-schema.graphql:45:21     - Unknown word (resulting)  -- The size of the resulting square image.
benchmark/github-schema.graphql:4629:22   - Unknown word (successful)   -- The deployment was successful.
benchmark/github-schema.graphql:4660:29   - Unknown word (Dismiss)      -- Autogenerated input type of DismissPullRequestReview
benchmark/github-schema.graphql:4689:7    - Unknown word (dismissed)    -- The dismissed pull request review
benchmark/github-schema.graphql:4699:20   - Unknown word (being)        -- Path to the file being commented on.
benchmark/github-schema.graphql:4715:49   - Unknown word (SCIM)         -- provisioned by SAML SSO or SCIM.
benchmark/github-schema.graphql:4737:3    - Unknown word (scim)         -- scimIdentity: ExternalIdentityScim
benchmark/github-schema.graphql:4737:33   - Unknown word (Scim)         -- scimIdentity: ExternalIdentityScimAttributes
benchmark/github-schema.graphql:4740:50   - Unknown word (NULL)         -- external identity. Will be NULL if this identity has
benchmark/github-schema.graphql:4740:85   - Unknown word (claimed)      -- identity has not been claimed by an organization member
benchmark/github-schema.graphql:4808:6    - Unknown word (Follower)     -- type FollowerConnection {
benchmark/github-schema.graphql:4833:6    - Unknown word (Following)    -- type FollowingConnection {
benchmark/github-schema.graphql:4856:3    - Unknown word (Gist)         -- A Gist.
benchmark/github-schema.graphql:4860:42   - Unknown word (gist)         -- associated with the gist
benchmark/github-schema.graphql:4899:9    - Unknown word (maximum)      -- The maximum number of files to return
benchmark/github-schema.graphql:4931:28   - Unknown word (starred)      -- list of users who have starred this starrable.
benchmark/github-schema.graphql:4933:3    - Unknown word (stargazers)   -- stargazers(
benchmark/github-schema.graphql:493:11    - Unknown word (color)      -- The hex color code, without the leading
benchmark/github-schema.graphql:493:35    - Unknown word (leading)    -- color code, without the leading '#', for the logo background
benchmark/github-schema.graphql:493:56    - Unknown word (logo)       -- leading '#', for the logo background.
benchmark/github-schema.graphql:493:61    - Unknown word (background) -- leading '#', for the logo background.
benchmark/github-schema.graphql:4958:6    - Unknown word (Stargazer)    -- ): StargazerConnection!
benchmark/github-schema.graphql:495:17    - Unknown word (Color)      -- logoBackgroundColor: String!
benchmark/github-schema.graphql:495:7     - Unknown word (Background) -- logoBackgroundColor: String!
benchmark/github-schema.graphql:4966:21   - Unknown word (indicating)   -- Returns a boolean indicating whether the viewing
benchmark/github-schema.graphql:4966:44   - Unknown word (viewing)      -- indicating whether the viewing user has starred this
benchmark/github-schema.graphql:4968:12   - Unknown word (Starred)      -- viewerHasStarred: Boolean!
benchmark/github-schema.graphql:513:5     - Unknown word (slug)       -- A slug based on the name of
benchmark/github-schema.graphql:518:57    - Unknown word (updated)    -- the object was last updated.
benchmark/github-schema.graphql:5192:35   - Unknown word (characters)   -- name encoded to remove characters that are invalid in
benchmark/github-schema.graphql:5192:55   - Unknown word (invalid)      -- characters that are invalid in URL paths.
benchmark/github-schema.graphql:5197:17   - Unknown word (encoding)     -- The gist file encoding.
benchmark/github-schema.graphql:51:23     - Unknown word (actor)      -- The username of the actor.
benchmark/github-schema.graphql:5217:41   - Unknown word (written)      -- language this file is written in.
benchmark/github-schema.graphql:5217:7    - Unknown word (programming)  -- The programming language this file is
benchmark/github-schema.graphql:5227:25   - Unknown word (bytes)        -- The gist file size in bytes.
benchmark/github-schema.graphql:5236:16   - Unknown word (truncate)     -- Optionally truncate the returned file to
benchmark/github-schema.graphql:5236:5    - Unknown word (Optionally)   -- Optionally truncate the returned
benchmark/github-schema.graphql:5262:9    - Unknown word (gists)        -- Order gists by creation time
benchmark/github-schema.graphql:5269:3    - Unknown word (UPDATED)      -- UPDATED_AT
benchmark/github-schema.graphql:5274:3    - Unknown word (PUSHED)       -- PUSHED_AT
benchmark/github-schema.graphql:5292:3    - Unknown word (Gists)        -- Gists that are public and
benchmark/github-schema.graphql:5302:25   - Unknown word (author's)     -- URL pointing to the author's public avatar.
benchmark/github-schema.graphql:5312:36   - Unknown word (authoring)    -- timestamp of the Git action (authoring or committing).
benchmark/github-schema.graphql:5327:19   - Unknown word (corresponding) -- The GitHub user corresponding to the email field.
benchmark/github-schema.graphql:5327:53   - Unknown word (Null)          -- to the email field. Null if no such user exists
benchmark/github-schema.graphql:5333:24   - Unknown word (about)         -- Represents information about the GitHub instance
benchmark/github-schema.graphql:5337:20   - Unknown word (that's)        -- Returns a String that's a SHA of `github-services
benchmark/github-schema.graphql:533:23    - Unknown word (pagination) -- A cursor for use in pagination.
benchmark/github-schema.graphql:533:5     - Unknown word (cursor)     -- A cursor for use in pagination
benchmark/github-schema.graphql:5347:39   - Unknown word (sent)          -- that service hooks are sent from
benchmark/github-schema.graphql:5352:25   - Unknown word (importer)      -- IP addresses that the importer connects from
benchmark/github-schema.graphql:5352:34   - Unknown word (connects)      -- addresses that the importer connects from
benchmark/github-schema.graphql:5359:13   - Unknown word (Authentication) -- isPasswordAuthenticationVerifiable: Boolean!
benchmark/github-schema.graphql:5359:27   - Unknown word (Verifiable)     -- isPasswordAuthenticationVerifiable: Boolean!
benchmark/github-schema.graphql:5362:27   - Unknown word (Pages)          -- addresses for GitHub Pages' A records
benchmark/github-schema.graphql:5364:3    - Unknown word (pages)          -- pagesIpAddresses: [String
benchmark/github-schema.graphql:5404:41   - Unknown word (MIME)           -- signature (GPG or S/MIME) on a Commit or Tag
benchmark/github-schema.graphql:5413:3    - Unknown word (True)           -- True if the signature is
benchmark/github-schema.graphql:5423:3    - Unknown word (ASCII)          -- ASCII-armored signature header
benchmark/github-schema.graphql:5423:9    - Unknown word (armored)        -- ASCII-armored signature header from
benchmark/github-schema.graphql:5434:11   - Unknown word (otherwise)      -- GitHub, otherwise represents reason why
benchmark/github-schema.graphql:5434:56   - Unknown word (considered)     -- reason why signature is considered invalid.
benchmark/github-schema.graphql:5441:6    - Unknown word (Signed)         -- wasSignedByGitHub: Boolean!
benchmark/github-schema.graphql:544:20    - Unknown word (have)       -- An object that can have users assigned to it
benchmark/github-schema.graphql:5454:3    - Unknown word (Invalid)        -- Invalid signature
benchmark/github-schema.graphql:5456:3    - Unknown word (INVALID)        -- INVALID
benchmark/github-schema.graphql:5459:3    - Unknown word (Malformed)      -- Malformed signature
benchmark/github-schema.graphql:5461:3    - Unknown word (MALFORMED)      -- MALFORMED_SIG
benchmark/github-schema.graphql:5466:3    - Unknown word (UNKNOWN)        -- UNKNOWN_KEY
benchmark/github-schema.graphql:5474:26   - Unknown word (unverified)     -- Email used for signing unverified on GitHub
benchmark/github-schema.graphql:5476:3    - Unknown word (UNVERIFIED)     -- UNVERIFIED_EMAIL
benchmark/github-schema.graphql:5484:3    - Unknown word (Unknown)        -- Unknown signature type
benchmark/github-schema.graphql:5489:3    - Unknown word (Unsigned)       -- Unsigned
benchmark/github-schema.graphql:5491:3    - Unknown word (UNSIGNED)       -- UNSIGNED
benchmark/github-schema.graphql:5494:3    - Unknown word (Internal)       -- Internal error - the GPG verification
benchmark/github-schema.graphql:5494:52   - Unknown word (unavailable)    -- verification service is unavailable at the moment
benchmark/github-schema.graphql:5496:13   - Unknown word (UNAVAILABLE)    -- GPGVERIFY_UNAVAILABLE
benchmark/github-schema.graphql:5496:3    - Unknown word (GPGVERIFY)      -- GPGVERIFY_UNAVAILABLE
benchmark/github-schema.graphql:5499:49   - Unknown word (misbehaved)     -- verification service misbehaved
benchmark/github-schema.graphql:5504:13   - Unknown word (flags)          -- The usage flags for the key that signed
benchmark/github-schema.graphql:5504:54   - Unknown word (allow)          -- that signed this don't allow signing
benchmark/github-schema.graphql:5509:15   - Unknown word (expired)        -- Signing key expired
benchmark/github-schema.graphql:5511:3    - Unknown word (EXPIRED)        -- EXPIRED_KEY
benchmark/github-schema.graphql:5514:51   - Unknown word (checking)       -- certificate revocation checking
benchmark/github-schema.graphql:5516:3    - Unknown word (OCSP)           -- OCSP_PENDING
benchmark/github-schema.graphql:5519:20   - Unknown word (though)         -- Valid siganture, though certificate revocation
benchmark/github-schema.graphql:5519:9    - Unknown word (siganture)      -- Valid siganture, though certificate
benchmark/github-schema.graphql:5524:34   - Unknown word (chain)          -- signing certificate or its chain could not be verified
benchmark/github-schema.graphql:5524:40   - Unknown word (could)          -- certificate or its chain could not be verified
benchmark/github-schema.graphql:5529:46   - Unknown word (revoked)        -- ertificates in chain has been revoked
benchmark/github-schema.graphql:552:17    - Unknown word (elements)   -- Returns the elements in the list that come
benchmark/github-schema.graphql:552:43    - Unknown word (come)       -- elements in the list that come after the specified
benchmark/github-schema.graphql:552:48    - Unknown word (after)      -- in the list that come after the specified cursor
benchmark/github-schema.graphql:552:5     - Unknown word (Returns)    -- Returns the elements in the
benchmark/github-schema.graphql:552:58    - Unknown word (specified)  -- that come after the specified cursor.
benchmark/github-schema.graphql:5531:8    - Unknown word (REVOKED)        -- OCSP_REVOKED
benchmark/github-schema.graphql:5540:34   - Unknown word (Unlike)         -- encoded date string. Unlike the DateTime type, GitTimesta
benchmark/github-schema.graphql:557:48    - Unknown word (before)     -- in the list that come before the specified cursor
benchmark/github-schema.graphql:5658:24   - Unknown word (restored)       -- Represents a 'head_ref_restored' event on a given pull
benchmark/github-schema.graphql:5660:13   - Unknown word (Restored)       -- type HeadRefRestoredEvent implements Node
benchmark/github-schema.graphql:5684:30   - Unknown word (authentication) -- possible states in which authentication can be configured with
benchmark/github-schema.graphql:5684:52   - Unknown word (configured)     -- authentication can be configured with an identity provider
benchmark/github-schema.graphql:5688:62   - Unknown word (enforced)       -- provider is configured and enforced.
benchmark/github-schema.graphql:5690:3    - Unknown word (ENFORCED)       -- ENFORCED
benchmark/github-schema.graphql:5695:3    - Unknown word (CONFIGURED)     -- CONFIGURED
benchmark/github-schema.graphql:56:21     - Unknown word (this)       -- The HTTP path for this actor.
benchmark/github-schema.graphql:5700:3    - Unknown word (UNCONFIGURED)   -- UNCONFIGURED
benchmark/github-schema.graphql:5728:13   - Unknown word (columns)        -- A list of columns containing issues and
benchmark/github-schema.graphql:5739:15   - Unknown word (place)          -- An Issue is a place to discuss ideas, enhancement
benchmark/github-schema.graphql:5739:24   - Unknown word (discuss)        -- Issue is a place to discuss ideas, enhancements
benchmark/github-schema.graphql:5739:32   - Unknown word (ideas)          -- is a place to discuss ideas, enhancements, tasks
benchmark/github-schema.graphql:5739:39   - Unknown word (enhancements)   -- place to discuss ideas, enhancements, tasks, and bugs for
benchmark/github-schema.graphql:5739:64   - Unknown word (bugs)           -- enhancements, tasks, and bugs for a project.
benchmark/github-schema.graphql:5741:107  - Unknown word (Lockable)       -- pdatableComment & Labelable & Lockable & Reactable & RepositoryNode
benchmark/github-schema.graphql:5743:19   - Unknown word (conversation)   -- Reason that the conversation was locked.
benchmark/github-schema.graphql:576:6     - Unknown word (Assigned)   -- type AssignedEvent implements Node
benchmark/github-schema.graphql:5904:28   - Unknown word (participating)  -- list of Users that are participating in the Issue conversation
benchmark/github-schema.graphql:5906:3    - Unknown word (participants)   -- participants(
benchmark/github-schema.graphql:5929:19   - Unknown word (cards)          -- List of project cards associated with this
benchmark/github-schema.graphql:5931:10   - Unknown word (Cards)          -- projectCards(
benchmark/github-schema.graphql:5953:15   - Unknown word (archived)       -- A list of archived states to filter the
benchmark/github-schema.graphql:5955:33   - Unknown word (Archived)       -- archivedStates: [ProjectCardArchivedState]
benchmark/github-schema.graphql:600:24    - Unknown word (changed)    -- Represents a 'base_ref_changed' event on a given issue
benchmark/github-schema.graphql:602:13    - Unknown word (Changed)    -- type BaseRefChangedEvent implements Node
benchmark/github-schema.graphql:6058:5    - Unknown word (Skips)          -- Skips the first _n_ elements
benchmark/github-schema.graphql:6060:5    - Unknown word (skip)           -- skip: Int
benchmark/github-schema.graphql:621:30    - Unknown word (pushed)     -- Represents a 'base_ref_force_pushed' event on a given pull
benchmark/github-schema.graphql:623:18    - Unknown word (Pushed)     -- type BaseRefForcePushedEvent implements Node
benchmark/github-schema.graphql:646:15    - Unknown word (referenced) -- PullRequest referenced by event.
benchmark/github-schema.graphql:6482:1    - Unknown word (Ways)           -- Ways in which to filter lists
benchmark/github-schema.graphql:6502:39   - Unknown word (mentioned)      -- where the given name is mentioned in the issue.
benchmark/github-schema.graphql:6507:34   - Unknown word (argument)       -- issues by given milestone argument. If an string representation
benchmark/github-schema.graphql:6507:57   - Unknown word (representation) -- argument. If an string representation of an
benchmark/github-schema.graphql:6508:14   - Unknown word (passed)         -- integer is passed, it should refer to
benchmark/github-schema.graphql:6508:32   - Unknown word (refer)          -- is passed, it should refer to a milestone by its
benchmark/github-schema.graphql:6519:15   - Unknown word (filtered)       -- List issues filtered by the list of states
benchmark/github-schema.graphql:651:18    - Unknown word (fully)      -- Identifies the fully qualified ref name for
benchmark/github-schema.graphql:651:24    - Unknown word (qualified)  -- Identifies the fully qualified ref name for the 'base
benchmark/github-schema.graphql:6530:46   - Unknown word (upon)           -- issues can be ordered upon return.
benchmark/github-schema.graphql:6574:22   - Unknown word (observing)      -- The channel ID for observing issue updates.
benchmark/github-schema.graphql:6579:22   - Unknown word (marking)        -- The channel ID for marking an issue as read.
benchmark/github-schema.graphql:657:18    - Unknown word (blame)      -- Represents a Git blame.
benchmark/github-schema.graphql:6581:3    - Unknown word (MARKASREAD)     -- MARKASREAD
benchmark/github-schema.graphql:6599:20   - Unknown word (still)          -- An issue that is still open
benchmark/github-schema.graphql:659:6     - Unknown word (Blame)      -- type Blame {
benchmark/github-schema.graphql:663:17    - Unknown word (Range)      -- ranges: [BlameRange!]!
benchmark/github-schema.graphql:6642:5    - Unknown word (Reopened)       -- | ReopenedEvent
benchmark/github-schema.graphql:6644:5    - Unknown word (Unsubscribed)   -- | UnsubscribedEvent
benchmark/github-schema.graphql:6647:5    - Unknown word (Unassigned)     -- | UnassignedEvent
benchmark/github-schema.graphql:6648:5    - Unknown word (Labeled)        -- | LabeledEvent
benchmark/github-schema.graphql:6649:5    - Unknown word (Unlabeled)      -- | UnlabeledEvent
benchmark/github-schema.graphql:6651:5    - Unknown word (Milestoned)     -- | MilestonedEvent
benchmark/github-schema.graphql:6653:5    - Unknown word (Renamed)        -- | RenamedTitleEvent
benchmark/github-schema.graphql:6655:5    - Unknown word (Unlocked)       -- | UnlockedEvent
benchmark/github-schema.graphql:6656:5    - Unknown word (Transferred)    -- | TransferredEvent
benchmark/github-schema.graphql:667:14    - Unknown word (range)      -- Represents a range of information from
benchmark/github-schema.graphql:6687:5    - Unknown word (Mentioned)      -- | MentionedEvent
benchmark/github-schema.graphql:6689:10   - Unknown word (Columns)        -- | MovedColumnsInProjectEvent
benchmark/github-schema.graphql:6689:5    - Unknown word (Moved)          -- | MovedColumnsInProjectEvent
benchmark/github-schema.graphql:6690:5    - Unknown word (Pinned)         -- | PinnedEvent
benchmark/github-schema.graphql:6692:5    - Unknown word (Removed)        -- | RemovedFromProjectEvent
benchmark/github-schema.graphql:6701:5    - Unknown word (Unpinned)       -- | UnpinnedEvent
benchmark/github-schema.graphql:6714:39   - Unknown word (applying)       -- count of items after applying `before` and `after
benchmark/github-schema.graphql:671:18    - Unknown word (recency)    -- Identifies the recency of the change, from
benchmark/github-schema.graphql:671:67    - Unknown word (This)       -- (new) to 10 (old). This is
benchmark/github-schema.graphql:6724:99   - Unknown word (slicing)        -- first`/`last`/`skip` slicing.
benchmark/github-schema.graphql:672:21    - Unknown word (quantile)   -- calculated as a 2-quantile and determines the length
benchmark/github-schema.graphql:672:3     - Unknown word (calculated) -- calculated as a 2-quantile and
benchmark/github-schema.graphql:672:34    - Unknown word (determines) -- as a 2-quantile and determines the length of distance
benchmark/github-schema.graphql:672:49    - Unknown word (length)     -- quantile and determines the length of distance between
benchmark/github-schema.graphql:672:59    - Unknown word (distance)   -- determines the length of distance between the
benchmark/github-schema.graphql:672:68    - Unknown word (between)    -- the length of distance between the
benchmark/github-schema.graphql:673:3     - Unknown word (median)     -- median age of all the changes
benchmark/github-schema.graphql:674:3     - Unknown word (range's)    -- range's change.
benchmark/github-schema.graphql:6760:25   - Unknown word (found)          -- possible item types found in a timeline.
benchmark/github-schema.graphql:6771:9    - Unknown word (REFERENCED)     -- CROSS_REFERENCED_EVENT
benchmark/github-schema.graphql:6776:3    - Unknown word (ADDED)          -- ADDED_TO_PROJECT_EVENT
benchmark/github-schema.graphql:6781:3    - Unknown word (ASSIGNED)       -- ASSIGNED_EVENT
benchmark/github-schema.graphql:6791:11   - Unknown word (DELETED)        -- COMMENT_DELETED_EVENT
benchmark/github-schema.graphql:6796:3    - Unknown word (CONVERTED)      -- CONVERTED_NOTE_TO_ISSUE_EVENT
benchmark/github-schema.graphql:679:23    - Unknown word (author)     -- Identifies the line author
benchmark/github-schema.graphql:67:32     - Unknown word (Assignees)  -- utogenerated input type of AddAssigneesToAssignable
benchmark/github-schema.graphql:67:43     - Unknown word (Assignable) -- type of AddAssigneesToAssignable
benchmark/github-schema.graphql:6801:3    - Unknown word (DEMILESTONED)   -- DEMILESTONED_EVENT
benchmark/github-schema.graphql:6806:3    - Unknown word (LABELED)        -- LABELED_EVENT
benchmark/github-schema.graphql:6816:3    - Unknown word (MENTIONED)      -- MENTIONED_EVENT
benchmark/github-schema.graphql:6819:17   - Unknown word (milestoned)     -- Represents a 'milestoned' event on a given issue
benchmark/github-schema.graphql:6821:3    - Unknown word (MILESTONED)     -- MILESTONED_EVENT
benchmark/github-schema.graphql:6824:17   - Unknown word (moved)          -- Represents a 'moved_columns_in_project'
benchmark/github-schema.graphql:6826:3    - Unknown word (MOVED)          -- MOVED_COLUMNS_IN_PROJECT_EVENT
benchmark/github-schema.graphql:6826:9    - Unknown word (COLUMNS)        -- MOVED_COLUMNS_IN_PROJECT_EVENT
benchmark/github-schema.graphql:6829:17   - Unknown word (pinned)         -- Represents a 'pinned' event on a given issue
benchmark/github-schema.graphql:6831:3    - Unknown word (PINNED)         -- PINNED_EVENT
benchmark/github-schema.graphql:6841:3    - Unknown word (REMOVED)        -- REMOVED_FROM_PROJECT_EVENT
benchmark/github-schema.graphql:6844:17   - Unknown word (renamed)        -- Represents a 'renamed' event on a given issue
benchmark/github-schema.graphql:6846:3    - Unknown word (RENAMED)        -- RENAMED_TITLE_EVENT
benchmark/github-schema.graphql:6849:17   - Unknown word (reopened)       -- Represents a 'reopened' event on any `Closable
benchmark/github-schema.graphql:684:7     - Unknown word (ending)     -- The ending line for the range
benchmark/github-schema.graphql:6851:3    - Unknown word (REOPENED)       -- REOPENED_EVENT
benchmark/github-schema.graphql:6859:17   - Unknown word (transferred)    -- Represents a 'transferred' event on a given issue
benchmark/github-schema.graphql:6861:3    - Unknown word (TRANSFERRED)    -- TRANSFERRED_EVENT
benchmark/github-schema.graphql:6864:18   - Unknown word (unassigned)     -- Represents an 'unassigned' event on any assignable
benchmark/github-schema.graphql:6866:3    - Unknown word (UNASSIGNED)     -- UNASSIGNED_EVENT
benchmark/github-schema.graphql:6871:3    - Unknown word (UNLABELED)      -- UNLABELED_EVENT
benchmark/github-schema.graphql:6874:18   - Unknown word (unlocked)       -- Represents an 'unlocked' event on a given issue
benchmark/github-schema.graphql:6876:3    - Unknown word (UNLOCKED)       -- UNLOCKED_EVENT
benchmark/github-schema.graphql:6884:18   - Unknown word (unpinned)       -- Represents an 'unpinned' event on a given issue
benchmark/github-schema.graphql:6886:3    - Unknown word (UNPINNED)       -- UNPINNED_EVENT
benchmark/github-schema.graphql:6889:18   - Unknown word (unsubscribed)   -- Represents an 'unsubscribed' event on a given `Subscribab
benchmark/github-schema.graphql:6891:3    - Unknown word (UNSUBSCRIBED)   -- UNSUBSCRIBED_EVENT
benchmark/github-schema.graphql:689:7     - Unknown word (starting)   -- The starting line for the range
benchmark/github-schema.graphql:6927:13   - Unknown word (categorizing)   -- A label for categorizing Issues or Milestones
benchmark/github-schema.graphql:6927:36   - Unknown word (Milestones)     -- categorizing Issues or Milestones with a given Repository
benchmark/github-schema.graphql:6941:5    - Unknown word (brief)          -- A brief description of this
benchmark/github-schema.graphql:6971:5    - Unknown word (Filtering)      -- Filtering options for issues returned
benchmark/github-schema.graphql:699:6     - Unknown word (abbreviated) -- An abbreviated version of the Git object
benchmark/github-schema.graphql:7185:11   - Unknown word (languages)      -- A list of languages associated with the
benchmark/github-schema.graphql:71:17     - Unknown word (assignable) -- The id of the assignable object to add assignees
benchmark/github-schema.graphql:71:42     - Unknown word (assignees)  -- assignable object to add assignees to.
benchmark/github-schema.graphql:720:13    - Unknown word (whether)     -- Indicates whether the Blob is binary or
benchmark/github-schema.graphql:720:3     - Unknown word (Indicates)   -- Indicates whether the Blob is
benchmark/github-schema.graphql:720:33    - Unknown word (binary)      -- whether the Blob is binary or text
benchmark/github-schema.graphql:722:5     - Unknown word (Binary)      -- isBinary: Boolean!
benchmark/github-schema.graphql:7257:7    - Unknown word (full)           -- The full text of the license
benchmark/github-schema.graphql:725:37    - Unknown word (truncated)   -- whether the contents is truncated
benchmark/github-schema.graphql:7267:11   - Unknown word (readable)       -- A human-readable description of the license
benchmark/github-schema.graphql:7267:5    - Unknown word (human)          -- A human-readable description
benchmark/github-schema.graphql:7272:33   - Unknown word (featured)       -- the license should be featured
benchmark/github-schema.graphql:7277:33   - Unknown word (displayed)      -- the license should be displayed in license pickers
benchmark/github-schema.graphql:7277:54   - Unknown word (pickers)        -- displayed in license pickers
benchmark/github-schema.graphql:7279:3    - Unknown word (hidden)         -- hidden: Boolean!
benchmark/github-schema.graphql:727:5     - Unknown word (Truncated)   -- isTruncated: Boolean!
benchmark/github-schema.graphql:7283:3    - Unknown word (Instructions)   -- Instructions on how to implement
benchmark/github-schema.graphql:7285:3    - Unknown word (implementation) -- implementation: String
benchmark/github-schema.graphql:7293:7    - Unknown word (limitations)    -- The limitations set by the license
benchmark/github-schema.graphql:7303:27   - Unknown word (applicable)     -- Customary short name if applicable (e.g, GPLv3)
benchmark/github-schema.graphql:7303:3    - Unknown word (Customary)      -- Customary short name if applicable
benchmark/github-schema.graphql:7305:3    - Unknown word (nickname)       -- nickname: String
benchmark/github-schema.graphql:7313:28   - Unknown word (pseudo)         -- Whether the license is a pseudo-license placeholder
benchmark/github-schema.graphql:7313:43   - Unknown word (placeholder)    -- is a pseudo-license placeholder (e.g., other, no-license
benchmark/github-schema.graphql:735:33    - Unknown word (belongs)     -- Repository the Git object belongs to
benchmark/github-schema.graphql:7379:44   - Unknown word (optional)       -- conversation was locked (optional).
benchmark/github-schema.graphql:7386:3    - Unknown word (lockable)       -- lockable: Lockable!
benchmark/github-schema.graphql:740:21    - Unknown word (null)        -- UTF8 text data or null if the Blob is binary
benchmark/github-schema.graphql:7425:14   - Unknown word (reasons)        -- The possible reasons that an issue or pull
benchmark/github-schema.graphql:7434:73   - Unknown word (heated)         -- conversation was too heated.
benchmark/github-schema.graphql:7436:7    - Unknown word (HEATED)         -- TOO_HEATED
benchmark/github-schema.graphql:7439:69   - Unknown word (resolved)       -- the conversation was resolved.
benchmark/github-schema.graphql:7441:3    - Unknown word (RESOLVED)       -- RESOLVED
benchmark/github-schema.graphql:7444:69   - Unknown word (spam)           -- the conversation was spam.
benchmark/github-schema.graphql:7446:3    - Unknown word (SPAM)           -- SPAM
benchmark/github-schema.graphql:7450:24   - Unknown word (attribution)    -- placeholder user for attribution of imported data on
benchmark/github-schema.graphql:7452:6    - Unknown word (Mannequin)      -- type Mannequin implements Node & Actor
benchmark/github-schema.graphql:746:3     - Unknown word (special)     -- A special type of user which takes
benchmark/github-schema.graphql:746:30    - Unknown word (takes)       -- special type of user which takes actions on behalf of
benchmark/github-schema.graphql:746:47    - Unknown word (behalf)      -- which takes actions on behalf of GitHub Apps.
benchmark/github-schema.graphql:748:36    - Unknown word (Uniform)     -- implements Node & Actor & UniformResourceLocatable {
benchmark/github-schema.graphql:748:51    - Unknown word (Locatable)   -- Actor & UniformResourceLocatable {
benchmark/github-schema.graphql:7505:41   - Unknown word (listed)         -- description of how apps listed in this category work
benchmark/github-schema.graphql:7526:52   - Unknown word (secondary)      -- listings have this as their secondary category.
benchmark/github-schema.graphql:7551:38   - Unknown word (site)           -- listing owner's company site.
benchmark/github-schema.graphql:7556:21   - Unknown word (configuring)    -- The HTTP path for configuring access to the listing
benchmark/github-schema.graphql:7566:24   - Unknown word (documentation)  -- URL to the listing's documentation.
benchmark/github-schema.graphql:7581:17   - Unknown word (introductory)   -- The listing's introductory description.
benchmark/github-schema.graphql:7591:33   - Unknown word (submitted)      -- this listing has been submitted for review from GitHub
benchmark/github-schema.graphql:7593:14   - Unknown word (Been)           -- hasApprovalBeenRequested: Boolean!
benchmark/github-schema.graphql:7594:6    - Unknown word (deprecated)     -- @deprecated(
benchmark/github-schema.graphql:7595:106  - Unknown word (Removal)        -- ionPendingFromDraft` instead. Removal on 2019-10-01 UTC."
benchmark/github-schema.graphql:7595:97   - Unknown word (instead)        -- VerificationPendingFromDraft` instead. Removal on 2019-10
benchmark/github-schema.graphql:7599:48   - Unknown word (trial)          -- any plans with a free trial?
benchmark/github-schema.graphql:7601:19   - Unknown word (Trial)          -- hasPublishedFreeTrialPlans: Boolean!
benchmark/github-schema.graphql:7620:37   - Unknown word (viewer's)       -- install the product to the viewer's account or organization
benchmark/github-schema.graphql:7622:3    - Unknown word (installation)   -- installationUrl: URI
benchmark/github-schema.graphql:7625:39   - Unknown word (installed)      -- listing's app has been installed for the current viewer
benchmark/github-schema.graphql:7627:15   - Unknown word (Viewer)         -- installedForViewer: Boolean!
benchmark/github-schema.graphql:7630:33   - Unknown word (approved)       -- this listing has been approved for display in the Marketplac
benchmark/github-schema.graphql:7632:5    - Unknown word (Approved)       -- isApproved: Boolean!
benchmark/github-schema.graphql:7645:5    - Unknown word (Delisted)       -- isDelisted: Boolean!
benchmark/github-schema.graphql:7651:36   - Unknown word (editable)       -- listing is still an editable draft that has not been
benchmark/github-schema.graphql:7651:45   - Unknown word (draft)          -- is still an editable draft that has not been submitted
benchmark/github-schema.graphql:7657:73   - Unknown word (paid)           -- available as part of a paid plan.
benchmark/github-schema.graphql:7659:5    - Unknown word (Paid)           -- isPaid: Boolean!
benchmark/github-schema.graphql:7674:5    - Unknown word (Unverified)     -- isUnverified: Boolean!
benchmark/github-schema.graphql:7706:17   - Unknown word (pixels)         -- The size in pixels of the resulting square
benchmark/github-schema.graphql:7717:17   - Unknown word (very)           -- The listing's very short description without
benchmark/github-schema.graphql:7717:50   - Unknown word (trailing)       -- description without a trailing period or ampersands
benchmark/github-schema.graphql:7717:69   - Unknown word (ampersands)     -- a trailing period or ampersands.
benchmark/github-schema.graphql:7719:3    - Unknown word (normalized)     -- normalizedShortDescription: String
benchmark/github-schema.graphql:7727:26   - Unknown word (describes)      -- The category that best describes the listing.
benchmark/github-schema.graphql:7732:54   - Unknown word (empty)          -- policy, may return an empty string for listings
benchmark/github-schema.graphql:7732:92   - Unknown word (require)        -- listings that do not require a privacy policy URL
benchmark/github-schema.graphql:7742:30   - Unknown word (screenshots)    -- URLs for the listing's screenshots.
benchmark/github-schema.graphql:7747:6    - Unknown word (alternate)      -- An alternate category that describes
benchmark/github-schema.graphql:7772:3    - Unknown word (Either)         -- Either a URL or an email address
benchmark/github-schema.graphql:7798:26   - Unknown word (delist)         -- Can the current viewer delist this Marketplace listing
benchmark/github-schema.graphql:7800:12   - Unknown word (Delist)         -- viewerCanDelist: Boolean!
benchmark/github-schema.graphql:7820:26   - Unknown word (again)          -- it becomes editable again.
benchmark/github-schema.graphql:7820:9    - Unknown word (becomes)        -- so it becomes editable again.
benchmark/github-schema.graphql:7822:12   - Unknown word (Redraft)        -- viewerCanRedraft: Boolean!
benchmark/github-schema.graphql:7825:61   - Unknown word (returning)      -- Marketplace listing by returning it to
benchmark/github-schema.graphql:7826:30   - Unknown word (rejecting)      -- editable draft state or rejecting it entirely.
benchmark/github-schema.graphql:7826:43   - Unknown word (entirely)       -- state or rejecting it entirely.
benchmark/github-schema.graphql:7839:12   - Unknown word (Purchased)      -- viewerHasPurchased: Boolean!
benchmark/github-schema.graphql:7842:37   - Unknown word (purchased)      -- the current user has purchased a subscription to this
benchmark/github-schema.graphql:7848:46   - Unknown word (administer)     -- viewer role allow them to administer this Marketplace listing
benchmark/github-schema.graphql:7854:1    - Unknown word (Look)           -- Look up Marketplace Listings
benchmark/github-schema.graphql:7896:17   - Unknown word (Statusable)     -- interface MemberStatusable {
benchmark/github-schema.graphql:78:3      - Unknown word (assignee)   -- assigneeIds: [ID!]!
benchmark/github-schema.graphql:7961:3    - Unknown word (CONFLICTING)    -- CONFLICTING
benchmark/github-schema.graphql:796:23    - Unknown word (matching)    -- A list of conflicts matching branches protection
benchmark/github-schema.graphql:796:61    - Unknown word (other)       -- protection rule and other branch protection rules
benchmark/github-schema.graphql:7972:6    - Unknown word (Merged)         -- type MergedEvent implements Node
benchmark/github-schema.graphql:8037:3    - Unknown word (expected)       -- expectedHeadOid: GitObjectID
benchmark/github-schema.graphql:818:26    - Unknown word (Conflict)    -- BranchProtectionRuleConflictConnection!
benchmark/github-schema.graphql:823:3     - Unknown word (creator)     -- creator: Actor
benchmark/github-schema.graphql:8302:22   - Unknown word (milestones)     -- The field to order milestones by.
benchmark/github-schema.graphql:8319:7    - Unknown word (DATE)           -- DUE_DATE
benchmark/github-schema.graphql:831:3     - Unknown word (Will)        -- Will new commits pushed to
benchmark/github-schema.graphql:831:48    - Unknown word (dismiss)     -- to matching branches dismiss pull request review
benchmark/github-schema.graphql:831:76    - Unknown word (approvals)   -- pull request review approvals.
benchmark/github-schema.graphql:833:17    - Unknown word (Reviews)     -- dismissesStaleReviews: Boolean!
benchmark/github-schema.graphql:833:3     - Unknown word (dismisses)   -- dismissesStaleReviews: Boolean
benchmark/github-schema.graphql:8364:15   - Unknown word (Reported)       -- classifier: ReportedContentClassifiers!
benchmark/github-schema.graphql:837:14    - Unknown word (overwrite)   -- Can admins overwrite branch protection.
benchmark/github-schema.graphql:837:7     - Unknown word (admins)      -- Can admins overwrite branch protection
benchmark/github-schema.graphql:839:10    - Unknown word (Enforced)    -- isAdminEnforced: Boolean!
benchmark/github-schema.graphql:8408:3    - Unknown word (Place)          -- Place the new card after the
benchmark/github-schema.graphql:8469:41   - Unknown word (mutations)      -- implementing GraphQL mutations.
benchmark/github-schema.graphql:8473:3    - Unknown word (Applies)       -- Applies a suggested topic to
benchmark/github-schema.graphql:8480:3    - Unknown word (Adds)          -- Adds assignees to an assignable
benchmark/github-schema.graphql:8499:72   - Unknown word (provided)      -- contentId` or `note` must be provided but **not** both.
benchmark/github-schema.graphql:8499:93   - Unknown word (both)          -- provided but **not** both.
benchmark/github-schema.graphql:8538:3    - Unknown word (Clears)        -- Clears all labels from a labelable
benchmark/github-schema.graphql:8545:28   - Unknown word (cloning)       -- Creates a new project by cloning configuration from an
benchmark/github-schema.graphql:8545:3    - Unknown word (Creates)       -- Creates a new project by cloning
benchmark/github-schema.graphql:8589:3    - Unknown word (Rejects)       -- Rejects a suggested topic for
benchmark/github-schema.graphql:8603:3    - Unknown word (Deletes)       -- Deletes an Issue object.
benchmark/github-schema.graphql:8644:3    - Unknown word (Dismisses)     -- Dismisses an approved or rejected
benchmark/github-schema.graphql:8661:3    - Unknown word (Moves)         -- Moves a project card to another
benchmark/github-schema.graphql:8671:3    - Unknown word (Removes)       -- Removes assignees from an assignable
benchmark/github-schema.graphql:8685:19   - Unknown word (collaborator)  -- Removes outside collaborator from all repositories
benchmark/github-schema.graphql:8687:9    - Unknown word (Outside)       -- removeOutsideCollaborator(
benchmark/github-schema.graphql:8702:3    - Unknown word (Reopen)        -- Reopen a issue.
benchmark/github-schema.graphql:8704:3    - Unknown word (reopen)        -- reopenIssue(input: ReopenIssueInput
benchmark/github-schema.graphql:8717:3    - Unknown word (Marks)         -- Marks a review thread as resolved
benchmark/github-schema.graphql:8724:3    - Unknown word (Submits)       -- Submits a pending pull request
benchmark/github-schema.graphql:872:15    - Unknown word (allowances)  -- A list push allowances for this branch protection
benchmark/github-schema.graphql:8736:24   - Unknown word (duplicate)     -- Unmark an issue as a duplicate of another issue.
benchmark/github-schema.graphql:8736:3    - Unknown word (Unmark)        -- Unmark an issue as a duplicate
benchmark/github-schema.graphql:8738:16   - Unknown word (Duplicate)     -- unmarkIssueAsDuplicate(
benchmark/github-schema.graphql:8738:3    - Unknown word (unmark)        -- unmarkIssueAsDuplicate(
benchmark/github-schema.graphql:8743:28   - Unknown word (unresolved)    -- Marks a review thread as unresolved.
benchmark/github-schema.graphql:8745:3    - Unknown word (unresolve)     -- unresolveReviewThread(
benchmark/github-schema.graphql:8746:12   - Unknown word (Unresolve)     -- input: UnresolveReviewThreadInput!
benchmark/github-schema.graphql:874:7     - Unknown word (Allowances)  -- pushAllowances(
benchmark/github-schema.graphql:8803:38   - Unknown word (subjects)      -- state for subscribable subjects.
benchmark/github-schema.graphql:8808:3    - Unknown word (Replaces)      -- Replaces the repository's topics
benchmark/github-schema.graphql:8824:1    - Unknown word (Possible)      -- Possible directions in which
benchmark/github-schema.graphql:8824:10   - Unknown word (directions)    -- Possible directions in which to order a
benchmark/github-schema.graphql:8828:16   - Unknown word (ascending)     -- Specifies an ascending order for a given `orderBy
benchmark/github-schema.graphql:8833:15   - Unknown word (descending)    -- Specifies a descending order for a given `orderBy
benchmark/github-schema.graphql:8841:45   - Unknown word (Registry)      -- implements Node & Actor & RegistryPackageOwner & RegistryPackage
benchmark/github-schema.graphql:8845:6    - Unknown word (Pinnable)      -- anyPinnableItems(
benchmark/github-schema.graphql:8847:22   - Unknown word (particular)    -- Filter to only a particular kind of pinnable item
benchmark/github-schema.graphql:8847:33   - Unknown word (kind)          -- to only a particular kind of pinnable item.
benchmark/github-schema.graphql:8847:41   - Unknown word (pinnable)      -- a particular kind of pinnable item.
benchmark/github-schema.graphql:8884:3    - Unknown word (Showcases)     -- Showcases a selection of repositories
benchmark/github-schema.graphql:8885:36   - Unknown word (selected)      -- curated or that have been selected automatically based
benchmark/github-schema.graphql:8885:45   - Unknown word (automatically) -- that have been selected automatically based on popularity
benchmark/github-schema.graphql:8885:68   - Unknown word (popularity)    -- automatically based on popularity.
benchmark/github-schema.graphql:8887:7    - Unknown word (Showcase)      -- itemShowcase: ProfileItemShowcase
benchmark/github-schema.graphql:894:10    - Unknown word (Allowance)   -- ): PushAllowanceConnection!
benchmark/github-schema.graphql:902:13    - Unknown word (approving)   -- Number of approving reviews required to
benchmark/github-schema.graphql:902:23    - Unknown word (reviews)     -- Number of approving reviews required to update matching
benchmark/github-schema.graphql:902:31    - Unknown word (required)    -- of approving reviews required to update matching branches
benchmark/github-schema.graphql:904:11    - Unknown word (Approving)   -- requiredApprovingReviewCount: Int
benchmark/github-schema.graphql:9062:14   - Unknown word (Remaining)     -- pinnedItemsRemaining: Int!
benchmark/github-schema.graphql:9069:39   - Unknown word (according)     -- filters repositories according to privacy
benchmark/github-schema.graphql:907:33    - Unknown word (contexts)    -- required status check contexts that must pass for commits
benchmark/github-schema.graphql:907:47    - Unknown word (must)        -- check contexts that must pass for commits to
benchmark/github-schema.graphql:9083:5    - Unknown word (affiliations)  -- affiliations: [RepositoryAffiliation
benchmark/github-schema.graphql:9088:32   - Unknown word (viewed)        -- organization or user being viewed owns.
benchmark/github-schema.graphql:9090:10   - Unknown word (Affiliations)  -- ownerAffiliations: [RepositoryAffiliation
benchmark/github-schema.graphql:909:22    - Unknown word (Contexts)    -- requiredStatusCheckContexts: [String]
benchmark/github-schema.graphql:9122:3    - Unknown word (Find)          -- Find project by number.
benchmark/github-schema.graphql:9126:27   - Unknown word (find)          -- The project number to find.
benchmark/github-schema.graphql:9141:49   - Unknown word (searching)     -- projects by, currently only searching by name.
benchmark/github-schema.graphql:914:3     - Unknown word (requires)    -- requiresApprovingReviews: Boolean
benchmark/github-schema.graphql:917:30    - Unknown word (signed)      -- commits required to be signed.
benchmark/github-schema.graphql:919:17    - Unknown word (Signatures)  -- requiresCommitSignatures: Boolean!
benchmark/github-schema.graphql:91:12     - Unknown word (that)       -- The item that was assigned.
benchmark/github-schema.graphql:91:21     - Unknown word (assigned)   -- The item that was assigned.
benchmark/github-schema.graphql:9235:69   - Unknown word (forks)         -- to whether they are forks of another repository
benchmark/github-schema.graphql:9251:60   - Unknown word (managers)      -- all members, billing managers, and outside
benchmark/github-schema.graphql:927:49    - Unknown word (merging)     -- be up to date before merging.
benchmark/github-schema.graphql:9296:10   - Unknown word (logins)        -- User logins to filter by
benchmark/github-schema.graphql:9298:9    - Unknown word (Logins)        -- userLogins: [String!]
benchmark/github-schema.graphql:929:11    - Unknown word (Strict)      -- requiresStrictStatusChecks: Boolean
benchmark/github-schema.graphql:9306:37   - Unknown word (mapped)        -- filters teams that are mapped to an LDAP Group (Enterprise
benchmark/github-schema.graphql:9308:9    - Unknown word (Mapped)        -- ldapMapped: Boolean
benchmark/github-schema.graphql:9311:14   - Unknown word (restrict)      -- If true, restrict to only root teams
benchmark/github-schema.graphql:932:35    - Unknown word (restricted)  -- to matching branches restricted.
benchmark/github-schema.graphql:932:6     - Unknown word (pushing)     -- Is pushing to matching branches
benchmark/github-schema.graphql:934:12    - Unknown word (Pushes)      -- restrictsPushes: Boolean!
benchmark/github-schema.graphql:934:3     - Unknown word (restricts)   -- restrictsPushes: Boolean!
benchmark/github-schema.graphql:9352:19   - Unknown word (adminable)     -- Organization is adminable by the viewer.
benchmark/github-schema.graphql:9354:12   - Unknown word (Administer)    -- viewerCanAdminister: Boolean!
benchmark/github-schema.graphql:937:6     - Unknown word (dismissal)   -- Is dismissal of pull request reviews
benchmark/github-schema.graphql:939:18    - Unknown word (Dismissals)  -- restrictsReviewDismissals: Boolean!
benchmark/github-schema.graphql:944:9     - Unknown word (Dismissal)   -- reviewDismissalAllowances(
benchmark/github-schema.graphql:9463:45   - Unknown word (Provder)       -- used by the Identity Provder to sign assertions and
benchmark/github-schema.graphql:9463:61   - Unknown word (assertions)    -- Identity Provder to sign assertions and responses.
benchmark/github-schema.graphql:9463:76   - Unknown word (responses)     -- sign assertions and responses.
benchmark/github-schema.graphql:9468:7    - Unknown word (Issuer)        -- The Issuer Entity ID for the SAML
benchmark/github-schema.graphql:9470:3    - Unknown word (issuer)        -- issuer: String
benchmark/github-schema.graphql:9511:3    - Unknown word (invitee)       -- invitee: User
benchmark/github-schema.graphql:9516:3    - Unknown word (inviter)       -- inviter: User!
benchmark/github-schema.graphql:9589:14   - Unknown word (previous)      -- The user's previous role will be reinstated
benchmark/github-schema.graphql:9589:36   - Unknown word (reinstated)    -- previous role will be reinstated.
benchmark/github-schema.graphql:9591:3    - Unknown word (REINSTATE)     -- REINSTATE
benchmark/github-schema.graphql:9669:18   - Unknown word (administrator) -- The user is an administrator of the organization
benchmark/github-schema.graphql:9679:19   - Unknown word (forwards)      -- When paginating forwards, the cursor to continue
benchmark/github-schema.graphql:9679:8    - Unknown word (paginating)    -- When paginating forwards, the cursor
benchmark/github-schema.graphql:9681:6    - Unknown word (Cursor)        -- endCursor: String
benchmark/github-schema.graphql:9689:19   - Unknown word (backwards)     -- When paginating backwards, are there more items
benchmark/github-schema.graphql:968:3     - Unknown word (conflict)    -- A conflict between two branch protection
benchmark/github-schema.graphql:9691:6    - Unknown word (Previous)      -- hasPreviousPage: Boolean!
benchmark/github-schema.graphql:9702:17   - Unknown word (Granter)       -- union PermissionGranter = Organization | Repository
benchmark/github-schema.graphql:9714:39   - Unknown word (granted)       -- access this source has granted to the user.
benchmark/github-schema.graphql:977:18    - Unknown word (conflicting) -- Identifies the conflicting branch protection rule
benchmark/github-schema.graphql:9796:3    - Unknown word (GIST)          -- GIST
benchmark/github-schema.graphql:9826:3    - Unknown word (curatable)     -- A curatable list of repositories
benchmark/github-schema.graphql:9826:34   - Unknown word (relating)      -- list of repositories relating to a repository owner
benchmark/github-schema.graphql:9827:4    - Unknown word (showing)       -- to showing the most popular repositories
benchmark/github-schema.graphql:9836:37   - Unknown word (showcase)      -- repositories and gists in the showcase. If the profile owner
benchmark/github-schema.graphql:9837:17   - Unknown word (those)         -- pinned items, those will be returned. Otherwise
benchmark/github-schema.graphql:9837:41   - Unknown word (Otherwise)     -- those will be returned. Otherwise, the profile owner's
benchmark/github-schema.graphql:992:13    - Unknown word (edges)       -- A list of edges.
benchmark/github-schema.graphql:9981:43   - Unknown word (notes)         -- issues, pull requests and notes within a project owner
benchmark/github-schema.json:1533:158  - Unknown word (appears)     -- a cache. The ID type appears in a JSON response as
benchmark/github-schema.json:1533:198  - Unknown word (however)     -- response as a String; however, it is not intended
benchmark/github-schema.json:1533:217  - Unknown word (intended)    -- however, it is not intended to be human-readable
benchmark/github-schema.json:1533:305  - Unknown word (Nlci)        -- string (such as `\"VXNlci0xMA==\"`) or integer
benchmark/github-schema.json:1533:73   - Unknown word (obfuscated)  -- identifier that is Base64 obfuscated. It is often used to
benchmark/github-schema.json:25:139    - Unknown word (form)       -- GraphQL to represent free-form human-readable text
benchmark/github-schema.json:25:38     - Unknown word (textual)    -- description": "Represents textual data as UTF-8 character
benchmark/github-schema.json:25:60     - Unknown word (character)  -- textual data as UTF-8 character sequences. This type
benchmark/github-schema.json:25:70     - Unknown word (sequences)  -- data as UTF-8 character sequences. This type is most often
benchmark/github-schema.json:25:99     - Unknown word (often)      -- sequences. This type is most often used by GraphQL to represent
benchmark/github-schema.json:320:119   - Unknown word (nviewer)     -- listings visible to the\nviewer are returned.\n",
benchmark/github-schema.json:4013:42   - Unknown word (fractional)  -- description": "Represents non-fractional signed whole numeric
benchmark/github-schema.json:4013:66   - Unknown word (numeric)     -- fractional signed whole numeric values. Int can represent
benchmark/github-schema.json:43071:117  - Unknown word (nthat)       -- range than this one\nthat does not have any contributio
benchmark/github-schema.json:43095:113  - Unknown word (nspecified)  -- most comments in the\nspecified time frame.\n",
benchmark/github-schema.json:43840:208  - Unknown word (nlonger)     -- repository you can no\nlonger access.\n",
benchmark/github-schema.json:55376:44  - Unknown word (defines)     -- : "A GraphQL Schema defines the capabilities of
benchmark/github-schema.json:55376:56  - Unknown word (capabilities) -- GraphQL Schema defines the capabilities of a GraphQL server
benchmark/github-schema.json:55376:93  - Unknown word (exposes)      -- a GraphQL server. It exposes all available types
benchmark/github-schema.json:55404:107  - Unknown word (rooted)       -- mutation operations will be rooted at.",
benchmark/github-schema.json:55475:168  - Unknown word (Depending)    -- _TypeKind` enum.\n\nDepending on the kind of a type
benchmark/github-schema.json:55475:201  - Unknown word (certain)      -- the kind of a type, certain fields describe information
benchmark/github-schema.json:55475:267  - Unknown word (provide)      -- that type. Scalar types provide no information beyond
benchmark/github-schema.json:55475:31  - Unknown word (fundamental)  -- "description": "The fundamental unit of any GraphQL
benchmark/github-schema.json:55475:421  - Unknown word (Abstract)     -- fields they describe. Abstract types, Union and Interface
benchmark/github-schema.json:55475:83  - Unknown word (There)        -- Schema is the type. There are many kinds of types
benchmark/github-schema.json:55475:98  - Unknown word (kinds)        -- type. There are many kinds of types in GraphQL
benchmark/github-schema.json:55660:115  - Unknown word (potentially)  -- of which has a name, potentially a list of arguments
benchmark/github-schema.json:55660:58  - Unknown word (described)    -- Interface types are described by a list of Fields
benchmark/github-schema.json:55767:114  - Unknown word (behavior)     -- and type validation behavior in a GraphQL document
benchmark/github-schema.json:55767:157  - Unknown word (cases)        -- document.\n\nIn some cases, you need to provide
benchmark/github-schema.json:55767:195  - Unknown word (alter)        -- to provide options to alter GraphQL's execution
benchmark/github-schema.json:55767:233  - Unknown word (ways)         -- execution behavior in ways field arguments will
benchmark/github-schema.json:55767:263  - Unknown word (suffice)      -- field arguments will not suffice, such as conditionally
benchmark/github-schema.json:55767:280  - Unknown word (conditionally) -- not suffice, such as conditionally including or skipping
benchmark/github-schema.json:55767:307  - Unknown word (skipping)      -- conditionally including or skipping a field. Directives
benchmark/github-schema.json:55767:363  - Unknown word (additional)    -- provide this by describing additional information to the executor
benchmark/github-schema.json:55767:39  - Unknown word (provides)     -- description": "A Directive provides a way to describe alternate
benchmark/github-schema.json:55767:393  - Unknown word (executor)      -- additional information to the executor.",
benchmark/github-schema.json:55902:144  - Unknown word (However)       -- string or numeric value. However an Enum value is returned
benchmark/github-schema.json:55969:171  - Unknown word (optionally)    -- describe their type and optionally a default value.",
benchmark/github-schema.json:55973:41  - Unknown word (formatted)     -- description": "A GraphQL-formatted string representing
benchmark/github-schema.json:56095:144  - Unknown word (adjacencies)   -- describes one such possible adjacencies.",
benchmark/github-schema.json:56095:46  - Unknown word (adjacent)      -- "A Directive can be adjacent to many parts of the
benchmark/github-schema.json:56107:24  - Unknown word (MUTATION)      -- "name": "MUTATION",
benchmark/github-schema.json:56131:33  - Unknown word (SPREAD)        -- "name": "FRAGMENT_SPREAD",
benchmark/github-schema.json:56132:63  - Unknown word (spread)        -- adjacent to a fragment spread.",
benchmark/github-schema.json:56167:24  - Unknown word (ARGUMENT)      -- "name": "ARGUMENT_DEFINITION",
benchmark/github-schema.json:56776:27  - Unknown word (Directs)       -- "description": "Directs the executor to include
benchmark/github-schema.json:56781:31  - Unknown word (Included)      -- "description": "Included when true.",
benchmark/github-schema.json:56802:31  - Unknown word (Skipped)       -- "description": "Skipped when true.",
benchmark/github-schema.json:56818:36  - Unknown word (element)       -- description": "Marks an element of a GraphQL schema
benchmark/github-schema.json:56823:137  - Unknown word (similar)       -- to access supported similar data. Formatted in
benchmark/github-schema.json:56823:151  - Unknown word (Formatted)     -- supported similar data. Formatted in [Markdown](https
benchmark/github-schema.json:56823:31  - Unknown word (Explains)      -- "description": "Explains why this element was
benchmark/github-schema.json:56823:73  - Unknown word (usually)       -- element was deprecated, usually also including a suggestion
benchmark/github-schema.json:56823:81  - Unknown word (also)          -- deprecated, usually also including a suggestion
benchmark/github-schema.json:61:18     - Unknown word (Deprecated) -- "isDeprecated": false,
benchmark/github-schema.json:62:16     - Unknown word (deprecation) -- "deprecationReason": null
benchmark/repeated-fields-benchmark.js:10:15     - Unknown word (repeated)   -- name: 'Many repeated fields',
benchmark/validateInvalidGQL-benchmark.js:20:8      - Unknown word (Another)    -- yetAnotherUnknownField
benchmark/visitInParallel-benchmark.js:10:7      - Unknown word (visitors)   -- const visitors = new Array(50).fill
codecov.yml:5:1       - Unknown word (parsers)    -- parsers:
codecov.yml:7:12      - Unknown word (partials)   -- enable_partials: true
cspell.yml:100:5     - Unknown word (isvalidliteralvalue)      -- - isvalidliteralvalue
cspell.yml:101:5     - Unknown word (specifiedrules)           -- - specifiedrules
cspell.yml:102:5     - Unknown word (Wordmark)                 -- - Wordmark
cspell.yml:103:5     - Unknown word (codeofconduct)            -- - codeofconduct
cspell.yml:104:5     - Unknown word (graphqlconf)              -- - graphqlconf
cspell.yml:109:18    - Unknown word (bellow)                   -- # TODO: remove bellow words
cspell.yml:10:5      - Unknown word (benchmark)  -- - benchmark/github-schema.graphql
cspell.yml:110:5     - Unknown word (QLID)                     -- - QLID # GraphQLID
cspell.yml:111:5     - Unknown word (QLJS)                     -- - QLJS # GraphQLJS
cspell.yml:112:5     - Unknown word (iface)                    -- - iface
cspell.yml:113:5     - Unknown word (Reqs)                     -- - Reqs
cspell.yml:114:5     - Unknown word (FXXX)                     -- - FXXX
cspell.yml:115:5     - Unknown word (XXXF)                     -- - XXXF
cspell.yml:116:5     - Unknown word (bfnrt)                    -- - bfnrt
cspell.yml:117:5     - Unknown word (wrds)                     -- - wrds
cspell.yml:12:13     - Unknown word (icons)      -- - website/icons
cspell.yml:14:1      - Unknown word (overrides)  -- overrides:
cspell.yml:16:5      - Unknown word (dictionaries) -- dictionaries:
cspell.yml:19:9      - Unknown word (clsx)         -- - clsx
cspell.yml:20:9      - Unknown word (infima)       -- - infima
cspell.yml:21:9      - Unknown word (noopener)     -- - noopener
cspell.yml:22:9      - Unknown word (Vite)         -- - Vite
cspell.yml:23:9      - Unknown word (craco)        -- - craco
cspell.yml:24:9      - Unknown word (esbuild)      -- - esbuild
cspell.yml:25:9      - Unknown word (swcrc)        -- - swcrc
cspell.yml:26:9      - Unknown word (noreferrer)   -- - noreferrer
cspell.yml:27:9      - Unknown word (xlink)        -- - xlink
cspell.yml:33:5      - Unknown word (graphiql)     -- - graphiql
cspell.yml:34:5      - Unknown word (sublinks)     -- - sublinks
cspell.yml:37:5      - Unknown word (Different)    -- # Different names used inside tests
cspell.yml:38:5      - Unknown word (Skywalker)    -- - Skywalker
cspell.yml:39:5      - Unknown word (Leia)         -- - Leia
cspell.yml:3:14      - Unknown word (Glob)       -- # TODO enableGlobDot: true
cspell.yml:40:5      - Unknown word (Wilhuff)      -- - Wilhuff
cspell.yml:41:5      - Unknown word (Tarkin)       -- - Tarkin
cspell.yml:42:5      - Unknown word (Artoo)        -- - Artoo
cspell.yml:43:5      - Unknown word (Threepio)     -- - Threepio
cspell.yml:44:5      - Unknown word (Odie)         -- - Odie
cspell.yml:45:5      - Unknown word (Odie's)       -- - Odie's
cspell.yml:46:5      - Unknown word (Damerau)      -- - Damerau
cspell.yml:47:5      - Unknown word (Alderaan)     -- - Alderaan
cspell.yml:48:5      - Unknown word (Tatooine)     -- - Tatooine
cspell.yml:49:5      - Unknown word (astromech)    -- - astromech
cspell.yml:51:11     - Unknown word (contribute)   -- # TODO: contribute upstream
cspell.yml:56:5      - Unknown word (Nextra)       -- - Nextra
cspell.yml:57:5      - Unknown word (headlessui)   -- - headlessui
cspell.yml:58:5      - Unknown word (Fastify)      -- - Fastify
cspell.yml:5:19      - Unknown word (spelling)   -- # Excluded from spelling check
cspell.yml:5:5       - Unknown word (Excluded)   -- # Excluded from spelling check
cspell.yml:60:5      - Unknown word (svgr)         -- - svgr
cspell.yml:61:5      - Unknown word (ruru)         -- - ruru
cspell.yml:64:18     - Unknown word (anchors)      -- # used as href anchors
cspell.yml:65:5      - Unknown word (graphqlerror) -- - graphqlerror
cspell.yml:66:5      - Unknown word (syntaxerror)  -- - syntaxerror
cspell.yml:67:5      - Unknown word (formaterror)  -- - formaterror
cspell.yml:68:5      - Unknown word (graphqlschema) -- - graphqlschema
cspell.yml:69:5      - Unknown word (graphqlscalartype) -- - graphqlscalartype
cspell.yml:6:5       - Unknown word (cspell)     -- - cspell.yml
cspell.yml:70:5      - Unknown word (graphqlobjecttype) -- - graphqlobjecttype
cspell.yml:71:5      - Unknown word (graphqlinterfacetype) -- - graphqlinterfacetype
cspell.yml:72:5      - Unknown word (graphqluniontype)     -- - graphqluniontype
cspell.yml:73:5      - Unknown word (graphqlenumtype)      -- - graphqlenumtype
cspell.yml:74:5      - Unknown word (graphqlinputobjecttype) -- - graphqlinputobjecttype
cspell.yml:75:5      - Unknown word (graphqllist)            -- - graphqllist
cspell.yml:76:5      - Unknown word (graphqlnonnull)         -- - graphqlnonnull
cspell.yml:77:5      - Unknown word (graphqlint)             -- - graphqlint
cspell.yml:78:5      - Unknown word (graphqlfloat)           -- - graphqlfloat
cspell.yml:79:5      - Unknown word (graphqlstring)          -- - graphqlstring
cspell.yml:80:5      - Unknown word (graphqlboolean)         -- - graphqlboolean
cspell.yml:81:5      - Unknown word (graphqlid)              -- - graphqlid
cspell.yml:82:5      - Unknown word (getlocation)            -- - getlocation
cspell.yml:83:5      - Unknown word (isinputtype)            -- - isinputtype
cspell.yml:84:5      - Unknown word (isoutputtype)           -- - isoutputtype
cspell.yml:85:5      - Unknown word (isleaftype)             -- - isleaftype
cspell.yml:86:5      - Unknown word (iscompositetype)        -- - iscompositetype
cspell.yml:87:5      - Unknown word (isabstracttype)         -- - isabstracttype
cspell.yml:88:5      - Unknown word (getnullabletype)        -- - getnullabletype
cspell.yml:89:5      - Unknown word (getnamedtype)           -- - getnamedtype
cspell.yml:90:5      - Unknown word (introspectionquery)     -- - introspectionquery
cspell.yml:91:5      - Unknown word (buildclientschema)      -- - buildclientschema
cspell.yml:92:5      - Unknown word (buildschema)            -- - buildschema
cspell.yml:93:5      - Unknown word (printschema)            -- - printschema
cspell.yml:94:5      - Unknown word (printintrospectionschema) -- - printintrospectionschema
cspell.yml:95:5      - Unknown word (buildastschema)           -- - buildastschema
cspell.yml:96:5      - Unknown word (typefromast)              -- - typefromast
cspell.yml:97:5      - Unknown word (astfromvalue)             -- - astfromvalue
cspell.yml:98:5      - Unknown word (typeinfo)                 -- - typeinfo
cspell.yml:99:5      - Unknown word (isvalidjsvalue)           -- - isvalidjsvalue
integrationTests/node/test.js:16:83     - Unknown word (slim)       -- app node:${version}-slim node ./index.js`,
integrationTests/ts/TypedQueryDocumentNode-test.ts:49:14     - Unknown word (passing)    -- // We're now passing in {input: string} which
integrationTests/ts/basic-test.ts:33:27     - Unknown word (Dolly)      -- variableValues: { who: 'Dolly' },
integrationTests/ts/internalImports-test.ts:3:78      - Unknown word (breaking)   -- are never considered breaking changes.
integrationTests/ts/internalImports-test.ts:4:7       - Unknown word (just)       -- // We just want to test that we
integrationTests/webpack/test.js:14:31     - Unknown word (correct)    -- log('Test script: Got correct result from Webpack
package.json:16:8      - Unknown word (Effects)    -- "sideEffects": false,
package.json:33:43     - Unknown word (checkgit)   -- bash -c '. ./resources/checkgit.sh && npm ci --ignore
package.json:35:59     - Unknown word (fuzz)       -- src/**/__tests__/**/*-fuzz.ts",
package.json:35:6      - Unknown word (fuzzonly)   -- "fuzzonly": "mocha --full-trace
package.json:38:133    - Unknown word (integrations) -- spelling && npm run check:integrations",
package.json:38:55     - Unknown word (testonly)   -- run check && npm run testonly && npm run prettier
package.json:39:35     - Unknown word (warnings)     -- eslint --cache --max-warnings 0 .",
package.json:40:21     - Unknown word (pretty)       -- "check": "tsc --pretty",
package.json:42:15     - Unknown word (cover)        -- "testonly:cover": "c8 npm run testonly
package.json:49:6      - Unknown word (gitpublish)   -- "gitpublish:npm": "bash ./resources
package.json:72:20     - Unknown word (simple)       -- "eslint-plugin-simple-import-sort": "7.0.
resources/add-extension-to-import-paths.js:28:32     - Unknown word (doesn't)    -- bail if the declaration doesn't have a source, e.g.
resources/add-extension-to-import-paths.js:28:8      - Unknown word (bail)       -- // bail if the declaration doesn
resources/build-deno.js:25:25     - Unknown word (babelrc)    -- const options = { babelrc: false, configFile:
resources/build-npm.js:117:52    - Unknown word (spec)       -- does not match semver spec: ' + version);
resources/build-npm.js:65:44     - Unknown word (Unexpected) -- types === undefined, 'Unexpected "types" in package.json
resources/build-npm.js:69:43     - Unknown word (exactly)    -- typesVersions" should have exactly one key.',
resources/build-npm.js:71:12     - Unknown word (revisit)    -- // TODO: revisit once TS implements https
resources/build-npm.js:75:8      - Unknown word (Provoke)    -- // Provoke syntax error to show
resources/checkgit.sh:13:5      - Unknown word (MODIFIED)    -- GIT_MODIFIED_FILES=$(git ls-files
resources/checkgit.sh:14:31     - Unknown word (cached)      -- STAGED_FILES=$(git diff --cached --name-only 2> /dev
resources/checkgit.sh:14:5      - Unknown word (STAGED)      -- GIT_STAGED_FILES=$(git diff --cached
resources/checkgit.sh:1:38      - Unknown word (terminated)  -- immediately if any subcommand terminated
resources/checkgit.sh:1:8       - Unknown word (immediately) -- # Exit immediately if any subcommand terminated
resources/checkgit.sh:20:18     - Unknown word (ensure)      -- # First fetch to ensure git is up to date. Fail
resources/checkgit.sh:20:62     - Unknown word (fails)       -- date. Fail-fast if this fails.
resources/checkgit.sh:24:3      - Unknown word (Extract)     -- # Extract useful information.
resources/checkgit.sh:35:22     - Unknown word (synced)      -- Check if branch is synced with remote
resources/checkgit.sh:6:65      - Unknown word (main)        -- state is the up to date main. If so
resources/checkgit.sh:7:12      - Unknown word (normally)    -- # it exits normally. If not it prompts for
resources/checkgit.sh:7:32      - Unknown word (prompts)     -- normally. If not it prompts for an explicit continue
resources/checkgit.sh:7:6       - Unknown word (exits)       -- # it exits normally. If not it
resources/checkgit.sh:8:14      - Unknown word (protect)     -- # intends to protect from versioning for
resources/checkgit.sh:8:3       - Unknown word (intends)     -- # intends to protect from versioning
resources/diff-npm-package.js:30:17     - Unknown word (Generating) -- console.log('➖➕ Generating diff...');
resources/diff-npm-package.js:47:19     - Unknown word (sure)       -- <!-- Make sure to load the highlight
resources/eslint-internal-rules/README.md:3:11      - Unknown word (dummy)      -- This is a dummy npm package that allows
resources/eslint-internal-rules/README.md:3:34      - Unknown word (allows)     -- dummy npm package that allows us to treat it as an
resources/eslint-internal-rules/README.md:3:47      - Unknown word (treat)      -- package that allows us to treat it as an `eslint-plugin
resources/eslint-internal-rules/README.md:3:85      - Unknown word (internal)   -- eslint-plugin-graphql-internal`.
resources/eslint-internal-rules/README.md:4:10      - Unknown word (actually)   -- It's not actually published, nor are the
resources/eslint-internal-rules/only-ascii.js:9:16      - Unknown word (Emoji)      -- allowEmoji: {
resources/eslint-internal-rules/require-to-string-tag.js:14:21     - Unknown word (proper)     -- // FIXME: use proper TSDoc parser instead
resources/eslint-internal-rules/require-to-string-tag.js:22:16     - Unknown word (classes)    -- 'All classes in public API required
resources/gen-changelog.js:115:33    - Unknown word (Unreleased)  -- changelog = `## ${tag || 'Unreleased'} (${date})\n`;
resources/gen-changelog.js:119:19    - Unknown word (Fold)        -- const shouldFold = config.fold && prs
resources/gen-changelog.js:13:15     - Unknown word (Breaking)   -- section: 'Breaking Change 💥',
resources/gen-changelog.js:141:24    - Unknown word (Committers)  -- changelog += `\n#### Committers: ${committers.length
resources/gen-changelog.js:155:23    - Unknown word (bearer)      -- Authorization: 'bearer ' + GH_TOKEN,
resources/gen-changelog.js:16:15     - Unknown word (Deprecation) -- section: 'Deprecation ⚠',
resources/gen-changelog.js:172:21    - Unknown word (responded)   -- `GitHub responded with ${res.statusCode
resources/gen-changelog.js:26:5      - Unknown word (fold)        -- fold: true,
resources/gen-changelog.js:28:8      - Unknown word (polish)      -- 'PR: polish 💅': {
resources/gen-changelog.js:29:15     - Unknown word (Polish)      -- section: 'Polish 💅',
resources/gen-changelog.js:304:20    - Unknown word (batches)     -- // Split pr into batches of 50 to prevent timeouts
resources/gen-changelog.js:304:45    - Unknown word (timeouts)    -- batches of 50 to prevent timeouts
resources/gen-changelog.js:90:9      - Unknown word (committers)  -- const committersByLogin = {};
resources/inline-invariant.js:4:4       - Unknown word (Eliminates) -- * Eliminates function call to `invariant
src/README.md:20:39     - Unknown word (Creating)   -- ](error/README.md): Creating and formatting GraphQL
src/README.md:21:61     - Unknown word (computations) -- README.md): Common useful computations upon
src/README.md:3:39      - Unknown word (everything) -- graphql` module includes everything you need to define a
src/__testUtils__/__tests__/dedent-test.ts:110:19    - Unknown word (John)       -- const name = 'John';
src/__testUtils__/__tests__/dedent-test.ts:111:11    - Unknown word (surname)    -- const surname = 'Doe';
src/__testUtils__/__tests__/dedent-test.ts:37:19     - Unknown word (fourth)     -- fourth
src/__testUtils__/__tests__/dedent-test.ts:47:39     - Unknown word (fault)      -- String = "wi\th de\fault"): String
src/__testUtils__/__tests__/dedent-test.ts:68:36     - Unknown word (newlines)   -- leading and trailing newlines', () => {
src/__testUtils__/__tests__/dedent-test.ts:7:30      - Unknown word (typical)    -- removes indentation in typical usage', () => {
src/__testUtils__/__tests__/dedent-test.ts:7:7       - Unknown word (removes)    -- it('removes indentation in typical
src/__testUtils__/__tests__/genFuzzStrings-test.ts:4:13      - Unknown word (Fuzz)       -- import { genFuzzStrings } from '../genFuzzStri
src/__testUtils__/__tests__/inspectStr-test.ts:12:7      - Unknown word (correctly)  -- it('correctly print various strings
src/__testUtils__/__tests__/inspectStr-test.ts:7:7       - Unknown word (handles)    -- it('handles null and undefined values
src/__testUtils__/dedent.ts:19:54     - Unknown word (trims)      -- indentation and also trims string.
src/__testUtils__/dedent.ts:2:9       - Unknown word (trimmed)    -- const trimmedStr = string
src/__testUtils__/dedent.ts:6:27      - Unknown word (removing)   -- fixes indentation by removing leading spaces and tabs
src/__testUtils__/expectJSON.ts:7:4       - Unknown word (Deeply)     -- * Deeply transforms an arbitrary
src/__testUtils__/genFuzzStrings.ts:11:10     - Unknown word (Combinations) -- let numCombinations = 0;
src/__testUtils__/genFuzzStrings.ts:18:9      - Unknown word (permutation)  -- let permutation = '';
src/__testUtils__/genFuzzStrings.ts:22:13     - Unknown word (reminder)     -- const reminder = leftOver % numAllowedChars
src/__testUtils__/genFuzzStrings.ts:2:19      - Unknown word (produces)   -- * Generator that produces all possible combinations
src/__testUtils__/genFuzzStrings.ts:2:41      - Unknown word (combinations) -- produces all possible combinations of allowed characters
src/__testUtils__/inspectStr.ts:4:32      - Unknown word (produce)    -- inspect function to produce readable string literal
src/__testUtils__/kitchenSinkQuery.ts:14:15     - Unknown word (unless)     -- ... @skip(unless: $foo) {
src/__testUtils__/kitchenSinkQuery.ts:1:14      - Unknown word (kitchen)    -- export const kitchenSinkQuery: string = String
src/__testUtils__/kitchenSinkQuery.ts:23:14     - Unknown word (Story)      -- mutation likeStory @onMutation {
src/__testUtils__/kitchenSinkQuery.ts:2:23      - Unknown word (Complex)    -- query queryName($foo: ComplexType, $site: Site = MOBILE
src/__testUtils__/kitchenSinkQuery.ts:37:7      - Unknown word (likers)     -- likers {
src/__testUtils__/kitchenSinkQuery.ts:3:3       - Unknown word (whoever)    -- whoever123is: node(id: [123
src/__testUtils__/kitchenSinkQuery.ts:40:11     - Unknown word (Sentence)   -- likeSentence {
src/__testUtils__/kitchenSinkQuery.ts:47:18     - Unknown word (Friend)     -- fragment frag on Friend @onFragmentDefinition
src/__testUtils__/kitchenSinkQuery.ts:61:3      - Unknown word (unnamed)    -- unnamed(truthy: true, falsy
src/__testUtils__/kitchenSinkSDL.ts:103:3     - Unknown word (ANNOTATED)  -- ANNOTATED_VALUE @onEnumValue
src/__testUtils__/kitchenSinkSDL.ts:155:14    - Unknown word (Repeatable) -- directive @myRepeatableDir(name: String!) repeatable
src/__testUtils__/kitchenSinkSDL.ts:155:43    - Unknown word (repeatable) -- yRepeatableDir(name: String!) repeatable on
src/__testUtils__/kitchenSinkSDL.ts:26:3      - Unknown word (four)       -- four(argument: String =
src/__testUtils__/kitchenSinkSDL.ts:30:3      - Unknown word (eight)      -- eight(argument: OneOfInputType
src/__testUtils__/kitchenSinkSDL.ts:33:6      - Unknown word (Annotated)  -- type AnnotatedObject @onObject(arg
src/__testUtils__/kitchenSinkSDL.ts:34:3      - Unknown word (annotated)  -- annotatedField(arg: Type = "default
src/__testUtils__/kitchenSinkSDL.ts:71:5      - Unknown word (Advert)     -- | Advert
src/__testUtils__/kitchenSinkSDL.ts:79:21     - Unknown word (Photo)      -- extend union Feed = Photo | Video
src/__tests__/starWarsData.ts:104:21    - Unknown word (Astromech)  -- primaryFunction: 'Astromech',
src/__tests__/starWarsData.ts:107:7     - Unknown word (droid)      -- const droidData: { [id: string]
src/__tests__/starWarsData.ts:116:34    - Unknown word (illustrate) -- Returning a promise just to illustrate that GraphQL.js supports
src/__tests__/starWarsData.ts:116:6     - Unknown word (Returning)  -- // Returning a promise just to illustrate
src/__tests__/starWarsData.ts:123:20    - Unknown word (Friends)    -- export function getFriends(
src/__tests__/starWarsData.ts:126:6     - Unknown word (Notice)     -- // Notice that GraphQL accepts
src/__tests__/starWarsData.ts:12:18     - Unknown word (Human)      -- export interface Human {
src/__tests__/starWarsData.ts:131:27    - Unknown word (undisputed) -- Allows us to fetch the undisputed hero of the Star Wars
src/__tests__/starWarsData.ts:131:38    - Unknown word (hero)       -- fetch the undisputed hero of the Star Wars trilogy
src/__tests__/starWarsData.ts:131:60    - Unknown word (trilogy)    -- hero of the Star Wars trilogy, R2-D2.
src/__tests__/starWarsData.ts:133:20    - Unknown word (Hero)       -- export function getHero(episode: number): Character
src/__tests__/starWarsData.ts:133:25    - Unknown word (episode)    -- export function getHero(episode: number): Character
src/__tests__/starWarsData.ts:135:28    - Unknown word (Episode)    -- Luke is the hero of Episode V.
src/__tests__/starWarsData.ts:21:18     - Unknown word (Droid)      -- export interface Droid {
src/__tests__/starWarsData.ts:2:26      - Unknown word (correspond) -- These are types which correspond to the schema.
src/__tests__/starWarsData.ts:2:4       - Unknown word (These)      -- * These are types which correspond
src/__tests__/starWarsData.ts:31:50     - Unknown word (Wars)       -- of data for our Star Wars Schema.
src/__tests__/starWarsData.ts:33:22     - Unknown word (coded)      -- * This data is hard coded for the sake of the
src/__tests__/starWarsData.ts:33:36     - Unknown word (sake)       -- is hard coded for the sake of the demo, but you
src/__tests__/starWarsData.ts:33:68     - Unknown word (imagine)    -- demo, but you could imagine
src/__tests__/starWarsData.ts:38:7      - Unknown word (luke)       -- const luke: Human = {
src/__tests__/starWarsData.ts:3:4       - Unknown word (They)       -- * They represent the shape
src/__tests__/starWarsData.ts:3:41      - Unknown word (visited)    -- the shape of the data visited during field resolution
src/__tests__/starWarsData.ts:41:10     - Unknown word (Luke)       -- name: 'Luke Skywalker',
src/__tests__/starWarsData.ts:47:7      - Unknown word (vader)      -- const vader: Human = {
src/__tests__/starWarsData.ts:50:10     - Unknown word (Darth)      -- name: 'Darth Vader',
src/__tests__/starWarsData.ts:50:16     - Unknown word (Vader)      -- name: 'Darth Vader',
src/__tests__/starWarsData.ts:59:14     - Unknown word (Solo)       -- name: 'Han Solo',
src/__tests__/starWarsData.ts:64:7      - Unknown word (leia)       -- const leia: Human = {
src/__tests__/starWarsData.ts:67:15     - Unknown word (Organa)     -- name: 'Leia Organa',
src/__tests__/starWarsData.ts:73:7      - Unknown word (tarkin)     -- const tarkin: Human = {
src/__tests__/starWarsData.ts:89:7      - Unknown word (threepio)   -- const threepio: Droid = {
src/__tests__/starWarsData.ts:8:3       - Unknown word (friends)    -- friends: ReadonlyArray<string
src/__tests__/starWarsData.ts:98:7      - Unknown word (artoo)      -- const artoo: Droid = {
src/__tests__/starWarsIntrospection-test.ts:162:28    - Unknown word (Backstory)  -- name: 'secretBackstory',
src/__tests__/starWarsIntrospection-test.ts:16:16     - Unknown word (querying)   -- it('Allows querying the schema for types
src/__tests__/starWarsIntrospection-test.ts:296:66    - Unknown word (saga)       -- the hero of the whole saga. If provided, returns
src/__tests__/starWarsIntrospection-test.ts:361:27    - Unknown word (mechanical) -- description: 'A mechanical creature in the Star
src/__tests__/starWarsIntrospection-test.ts:361:38    - Unknown word (creature)   -- description: 'A mechanical creature in the Star Wars universe
src/__tests__/starWarsIntrospection-test.ts:361:64    - Unknown word (universe)   -- creature in the Star Wars universe.',
src/__tests__/starWarsQuery-test.ts:12:19     - Unknown word (identifies) -- it('Correctly identifies R2-D2 as the hero of
src/__tests__/starWarsQuery-test.ts:12:65     - Unknown word (Saga)       -- hero of the Star Wars Saga', async () => {
src/__tests__/starWarsQuery-test.ts:12:9      - Unknown word (Correctly)  -- it('Correctly identifies R2-D2 as
src/__tests__/starWarsQuery-test.ts:234:38    - Unknown word (changing)   -- us to query for Luke, changing his key with an alias
src/__tests__/starWarsQuery-test.ts:280:34    - Unknown word (duplicated) -- Allows us to query using duplicated content', async ()
src/__tests__/starWarsQuery-test.ts:309:40    - Unknown word (avoid)      -- to use a fragment to avoid duplicating content
src/__tests__/starWarsQuery-test.ts:309:46    - Unknown word (duplicating) -- a fragment to avoid duplicating content', async ()
src/__tests__/starWarsQuery-test.ts:386:13    - Unknown word (Reporting)   -- describe('Reporting errors raised in resolvers
src/__tests__/starWarsQuery-test.ts:386:30    - Unknown word (raised)      -- describe('Reporting errors raised in resolvers', () =
src/__tests__/starWarsQuery-test.ts:387:36    - Unknown word (accessing)   -- Correctly reports error on accessing secretBackstory', async
src/__tests__/starWarsQuery-test.ts:474:13    - Unknown word (story)       -- story: secretBackstory
src/__tests__/starWarsQuery-test.ts:92:34     - Unknown word (HOPE)       -- appearsIn: ['NEW_HOPE', 'EMPIRE', 'JEDI']
src/__tests__/starWarsQuery-test.ts:92:42     - Unknown word (EMPIRE)     -- appearsIn: ['NEW_HOPE', 'EMPIRE', 'JEDI'],
src/__tests__/starWarsQuery-test.ts:92:52     - Unknown word (JEDI)       -- NEW_HOPE', 'EMPIRE', 'JEDI'],
src/__tests__/starWarsSchema.ts:124:39    - Unknown word (appear)        -- 'Which movies they appear in.',
src/__tests__/starWarsSchema.ts:14:12     - Unknown word (designed)   -- * This is designed to be an end-to-end
src/__tests__/starWarsSchema.ts:14:47     - Unknown word (demonstrating) -- an end-to-end test, demonstrating
src/__tests__/starWarsSchema.ts:157:19    - Unknown word (humanoid)      -- description: 'A humanoid creature in the Star
src/__tests__/starWarsSchema.ts:20:27     - Unknown word (spoilers)      -- NOTE: This may contain spoilers for the original Star
src/__tests__/starWarsSchema.ts:231:59    - Unknown word (designer)      -- and the name of the designer.',
src/__tests__/starWarsSchema.ts:246:36    - Unknown word (gives)         -- into our schema. It gives us the ability to fetch
src/__tests__/starWarsSchema.ts:298:20    - Unknown word (above)         -- * type we defined above) and export it.
src/__tests__/starWarsSchema.ts:65:25     - Unknown word (consists)      -- The original trilogy consists of three movies.
src/__tests__/starWarsSchema.ts:65:43     - Unknown word (movies)        -- trilogy consists of three movies.
src/__tests__/starWarsSchema.ts:74:28     - Unknown word (films)         -- description: 'One of the films in the Star Wars Trilogy
src/__tests__/starWarsSchema.ts:74:51     - Unknown word (Trilogy)       -- films in the Star Wars Trilogy',
src/__tests__/starWarsSchema.ts:8:40      - Unknown word (scalars)    -- GraphQLString } from '../type/scalars';
src/__tests__/starWarsSchema.ts:92:51     - Unknown word (humans)        -- Wars trilogy are either humans or droids.
src/__tests__/starWarsSchema.ts:92:61     - Unknown word (droids)        -- are either humans or droids.
src/__tests__/starWarsValidation-test.ts:22:9      - Unknown word (Validates)  -- it('Validates a complex but valid
src/__tests__/starWarsValidation-test.ts:26:23     - Unknown word (Appearances) -- ...NameAndAppearances
src/__tests__/starWarsValidation-test.ts:44:24     - Unknown word (existent)    -- it('Notes that non-existent fields are invalid'
src/__tests__/starWarsValidation-test.ts:44:9      - Unknown word (Notes)       -- it('Notes that non-existent fields
src/__tests__/starWarsValidation-test.ts:46:19     - Unknown word (Spaceship)   -- query HeroSpaceshipQuery {
src/__tests__/starWarsValidation-test.ts:48:13     - Unknown word (favorite)    -- favoriteSpaceship
src/__tests__/starWarsValidation-test.ts:64:9      - Unknown word (Disallows)   -- it('Disallows fields on scalars',
src/error/GraphQLError.ts:114:28    - Unknown word (offsets)     -- An array of character offsets within the source GraphQL
src/error/GraphQLError.ts:13:5      - Unknown word (remarks)    -- * @remarks
src/error/GraphQLError.ts:15:42     - Unknown word (shortened)  -- project. Do not use a shortened identifier as this increases
src/error/GraphQLError.ts:15:71     - Unknown word (increases)  -- shortened identifier as this increases
src/error/GraphQLError.ts:16:30     - Unknown word (recommend)  -- risk of conflicts. We recommend you add at most one
src/error/GraphQLError.ts:271:11    - Unknown word (occurrence)  -- * from occurrence to occurrence of the
src/error/GraphQLError.ts:271:52    - Unknown word (except)      -- occurrence of the problem, except for purposes of
src/error/GraphQLError.ts:271:63    - Unknown word (purposes)    -- problem, except for purposes of
src/error/GraphQLError.ts:272:6     - Unknown word (localization) -- * localization.
src/error/GraphQLError.ts:284:40    - Unknown word (intentional)  -- whether a null result is intentional or caused by a runtime
src/error/GraphQLError.ts:284:6     - Unknown word (identify)     -- * identify whether a null result
src/error/GraphQLError.ts:288:19    - Unknown word (implementors) -- * Reserved for implementors to extend the protocol
src/error/GraphQLError.ts:289:10    - Unknown word (hence)        -- * and hence there are no additional
src/error/GraphQLError.ts:289:40    - Unknown word (restrictions) -- there are no additional restrictions on its contents.
src/error/GraphQLError.ts:75:12     - Unknown word (phases)     -- * execute phases of performing a GraphQL
src/error/GraphQLError.ts:86:39     - Unknown word (produced)   -- location, the field which produced the error.
src/error/GraphQLError.ts:94:6      - Unknown word (corresponds) -- * corresponds to this error. Only
src/error/README.md:3:21      - Unknown word (module)     -- The `graphql/error` module is responsible for creating
src/error/README.md:3:60      - Unknown word (formatting) -- responsible for creating and formatting
src/error/__tests__/GraphQLError-test.ts:152:11    - Unknown word (inherited)  -- const inheritedExtensions = new GraphQLError
src/error/__tests__/GraphQLError-test.ts:152:51    - Unknown word (Inherited)  -- = new GraphQLError('InheritedExtensions', {
src/error/__tests__/GraphQLError-test.ts:202:20    - Unknown word (wouldn't)   -- // Changing it wouldn't be breaking change but
src/error/__tests__/GraphQLError-test.ts:202:8     - Unknown word (Changing)   -- // Changing it wouldn't be breaking
src/error/__tests__/GraphQLError-test.ts:226:19    - Unknown word (prints)     -- it('Deprecated: prints an error using printError
src/error/__tests__/GraphQLError-test.ts:26:27     - Unknown word (subclass)   -- is a class and is a subclass of Error', () => {
src/error/__tests__/GraphQLError-test.ts:332:25    - Unknown word (turtles)    -- new Error('I like turtles'),
src/error/__tests__/GraphQLError-test.ts:42:33     - Unknown word (prescribed) -- enumerate only properties prescribed by the spec', () =>
src/error/__tests__/GraphQLError-test.ts:46:7      - Unknown word (positions)  -- positions: [1, 2, 3],
src/error/__tests__/GraphQLError-test.ts:86:7      - Unknown word (converts)   -- it('converts nodes to positions and
src/error/__tests__/locatedError-test.ts:14:7      - Unknown word (wraps)      -- it('wraps non-errors', () =>
src/error/__tests__/locatedError-test.ts:20:22     - Unknown word (Thrown)     -- name: 'NonErrorThrown',
src/error/__tests__/locatedError-test.ts:21:7      - Unknown word (thrown)     -- thrownValue: testObject,
src/error/__tests__/locatedError-test.ts:5:10      - Unknown word (located)    -- import { locatedError } from '../locatedError
src/error/__tests__/locatedError-test.ts:8:7       - Unknown word (passes)     -- it('passes GraphQLError through
src/error/locatedError.ts:10:50     - Unknown word (aware)      -- produce a new GraphQLError aware of the location in the
src/error/locatedError.ts:11:13     - Unknown word (responsible) -- * document responsible for the original Error
src/error/locatedError.ts:20:62     - Unknown word (originating) -- support GraphQL errors originating from other contexts
src/error/locatedError.ts:21:9      - Unknown word (Located)     -- if (isLocatedGraphQLError(originalError
src/error/locatedError.ts:9:30      - Unknown word (presumably) -- an arbitrary value, presumably thrown while attempting
src/error/locatedError.ts:9:54      - Unknown word (attempting) -- presumably thrown while attempting to execute a
src/error/syntaxError.ts:6:4       - Unknown word (Produces)   -- * Produces a GraphQLError representing
src/error/syntaxError.ts:7:4       - Unknown word (descriptive) -- * descriptive information about the
src/execution/README.md:3:65      - Unknown word (phase)      -- responsible for the execution phase of
src/execution/README.md:4:1       - Unknown word (fulfilling) -- fulfilling a GraphQL request.
src/execution/__tests__/abstract-test.ts:105:11    - Unknown word (pets)       -- pets: {
src/execution/__tests__/abstract-test.ts:108:55    - Unknown word (Garfield)   -- Odie', true), new Cat('Garfield', false)];
src/execution/__tests__/abstract-test.ts:48:3      - Unknown word (woofs)      -- woofs: boolean;
src/execution/__tests__/abstract-test.ts:58:3      - Unknown word (meows)      -- meows: boolean;
src/execution/__tests__/abstract-test.ts:628:41    - Unknown word (inject)     -- workaround since we can't inject resolveType into SDL
src/execution/__tests__/abstract-test.ts:66:20     - Unknown word (Handles)    -- describe('Execute: Handles execution of abstract
src/execution/__tests__/directives-test.ts:56:18     - Unknown word (omits)      -- it('if false omits on scalar', () => {
src/execution/__tests__/directives-test.ts:81:31     - Unknown word (spreads)    -- describe('works on fragment spreads', () => {
src/execution/__tests__/executor-test.ts:1009:30   - Unknown word (despite)    -- correct field ordering despite execution order', async
src/execution/__tests__/executor-test.ts:1037:14   - Unknown word (recursion)  -- it('Avoids recursion', () => {
src/execution/__tests__/executor-test.ts:1037:7    - Unknown word (Avoids)     -- it('Avoids recursion', () => {
src/execution/__tests__/executor-test.ts:1066:7    - Unknown word (ignores)    -- it('ignores missing sub selections
src/execution/__tests__/executor-test.ts:1090:24   - Unknown word (illegal)    -- it('does not include illegal fields in output',
src/execution/__tests__/executor-test.ts:1099:37   - Unknown word (Illegal)    -- document = parse('{ thisIsIllegalDoNotIncludeMe }');
src/execution/__tests__/executor-test.ts:1166:11   - Unknown word (specials)   -- specials: { type: new GraphQLList
src/execution/__tests__/executor-test.ts:1234:37   - Unknown word (executable) -- ignoring invalid non-executable definitions', () =>
src/execution/__tests__/executor-test.ts:190:7     - Unknown word (merges)     -- it('merges parallel fragments'
src/execution/__tests__/executor-test.ts:196:51    - Unknown word (Cherry)     -- raphQLString, resolve: () => 'Cherry' },
src/execution/__tests__/executor-test.ts:288:7     - Unknown word (populates)  -- it('populates path correctly with
src/execution/__tests__/executor-test.ts:400:7     - Unknown word (nulls)      -- it('nulls out error subtrees'
src/execution/__tests__/executor-test.ts:593:24    - Unknown word (Food)       -- name: 'Food',
src/execution/__tests__/executor-test.ts:600:48    - Unknown word (Oops)       -- Promise.reject(new Error('Oops'));
src/execution/__tests__/executor-test.ts:71:89     - Unknown word (Perhaps)    -- is a variable value. Perhaps look to see if an unparsed
src/execution/__tests__/executor-test.ts:75:7      - Unknown word (executes)   -- it('executes arbitrary code', async
src/execution/__tests__/executor-test.ts:78:17     - Unknown word (Banana)     -- b: () => 'Banana',
src/execution/__tests__/executor-test.ts:80:17     - Unknown word (Donut)      -- d: () => 'Donut',
src/execution/__tests__/executor-test.ts:83:10     - Unknown word (Called)     -- // Called only by DataType::pic
src/execution/__tests__/executor-test.ts:91:17     - Unknown word (Boring)     -- b: () => 'Boring',
src/execution/__tests__/executor-test.ts:92:18     - Unknown word (Contrived)  -- c: () => ['Contrived', undefined, 'Confusing
src/execution/__tests__/executor-test.ts:92:42     - Unknown word (Confusing)  -- Contrived', undefined, 'Confusing'],
src/execution/__tests__/executor-test.ts:93:7      - Unknown word (deeper)     -- deeper: () => [data, null,
src/execution/__tests__/lists-test.ts:22:42     - Unknown word (banana)     -- new Set(['apple', 'banana', 'apple', 'coconut
src/execution/__tests__/lists-test.ts:22:61     - Unknown word (coconut)    -- 'banana', 'apple', 'coconut']);
src/execution/__tests__/lists-test.ts:53:24     - Unknown word (Singular)   -- const listField = 'Singular';
src/execution/__tests__/lists-test.ts:69:33     - Unknown word (nullability) -- Execute: Handles list nullability', () => {
src/execution/__tests__/mapAsyncIterator-test.ts:108:8     - Unknown word (Early)      -- // Early return
src/execution/__tests__/mapAsyncIterator-test.ts:114:8     - Unknown word (Subsequent) -- // Subsequent next calls
src/execution/__tests__/mapAsyncIterator-test.ts:15:11     - Unknown word (doubles)    -- const doubles = mapAsyncIterator(source
src/execution/__tests__/mapAsyncIterator-test.ts:189:14    - Unknown word (throwing)   -- it('allows throwing errors through async
src/execution/__tests__/mapAsyncIterator-test.ts:212:9     - Unknown word (caught)     -- let caughtError;
src/execution/__tests__/mapAsyncIterator-test.ts:215:28    - Unknown word (ouch)       -- await doubles.throw('ouch');
src/execution/__tests__/mapAsyncIterator-test.ts:222:50    - Unknown word (generators) -- errors through async generators', async () => {
src/execution/__tests__/mapAsyncIterator-test.ts:240:33    - Unknown word (Ouch)       -- await doubles.throw('Ouch')).to.deep.equal({
src/execution/__tests__/mapAsyncIterator-test.ts:258:24    - Unknown word (Goodbye)    -- throw new Error('Goodbye');
src/execution/__tests__/mapAsyncIterator-test.ts:281:22    - Unknown word (Closes)     -- async function testClosesSourceWithMapper<T>(mapper
src/execution/__tests__/mapAsyncIterator-test.ts:281:38    - Unknown word (Mapper)     -- testClosesSourceWithMapper<T>(mapper: (value: number
src/execution/__tests__/mapAsyncIterator-test.ts:281:48    - Unknown word (mapper)     -- testClosesSourceWithMapper<T>(mapper: (value: number) =>
src/execution/__tests__/mapAsyncIterator-test.ts:320:7     - Unknown word (closes)     -- it('closes source if mapper throws
src/execution/__tests__/mapAsyncIterator-test.ts:90:24     - Unknown word (early)      -- it('allows returning early from mapped async generator
src/execution/__tests__/mapAsyncIterator-test.ts:96:21     - Unknown word (Shouldn't)  -- yield 3; // Shouldn't be reached.
src/execution/__tests__/mapAsyncIterator-test.ts:96:34     - Unknown word (reached)    -- yield 3; // Shouldn't be reached.
src/execution/__tests__/mutations-test.ts:100:27    - Unknown word (serially)   -- evaluates mutations serially', async () => {
src/execution/__tests__/mutations-test.ts:100:7     - Unknown word (evaluates)  -- it('evaluates mutations serially'
src/execution/__tests__/mutations-test.ts:144:44    - Unknown word (presence)   -- mutations correctly in the presence of a failed mutation
src/execution/__tests__/mutations-test.ts:15:13     - Unknown word (Holder)     -- class NumberHolder {
src/execution/__tests__/mutations-test.ts:162:9     - Unknown word (sixth)      -- sixth: promiseAndFailToChangeTheNum
src/execution/__tests__/nonnull-test.ts:122:26    - Unknown word (nests)      -- avoids also doing any nests
src/execution/__tests__/nonnull-test.ts:122:4     - Unknown word (avoids)     -- // avoids also doing any nests
src/execution/__tests__/nonnull-test.ts:545:9     - Unknown word (succeeds)   -- it('succeeds when passed non-null
src/execution/__tests__/nonnull-test.ts:57:7      - Unknown word (nulling)    -- const nullingData = {
src/execution/__tests__/nonnull-test.ts:591:14    - Unknown word (Intentionally) -- // Intentionally missing variable
src/execution/__tests__/oneof-test.ts:155:74    - Unknown word (Exactly)    -- a: "abc", b: 123 }; Exactly one key must be specified
src/execution/__tests__/oneof-test.ts:85:28     - Unknown word (vague)      -- // hence the vague error message here.
src/execution/__tests__/resolve-test.ts:25:24     - Unknown word (accesses)   -- it('default function accesses properties', () =>
src/execution/__tests__/resolve-test.ts:60:11     - Unknown word (Adder)      -- class Adder {
src/execution/__tests__/resolve-test.ts:67:20     - Unknown word (addend)     -- test(args: { addend1: number }, context
src/execution/__tests__/schema-test.ts:100:35    - Unknown word (exposed)    -- hidden: 'This data is not exposed in the schema',
src/execution/__tests__/schema-test.ts:147:22    - Unknown word (intentionally) -- // Note: this is intentionally not validating to ensure
src/execution/__tests__/schema-test.ts:147:40    - Unknown word (validating)    -- is intentionally not validating to ensure appropriate
src/execution/__tests__/schema-test.ts:147:61    - Unknown word (appropriate)   -- validating to ensure appropriate
src/execution/__tests__/schema-test.ts:148:17    - Unknown word (occurs)        -- // behavior occurs when executing an invalid
src/execution/__tests__/simplePubSub-test.ts:11:17     - Unknown word (publishes)  -- // Queue up publishes
src/execution/__tests__/simplePubSub-test.ts:15:13     - Unknown word (payloads)   -- // Read payloads
src/execution/__tests__/simplePubSub-test.ts:30:25     - Unknown word (Coconut)    -- expect(pubsub.emit('Coconut')).to.equal(true);
src/execution/__tests__/simplePubSub-test.ts:31:25     - Unknown word (Durian)     -- expect(pubsub.emit('Durian')).to.equal(true);
src/execution/__tests__/simplePubSub-test.ts:7:32      - Unknown word (mock)       -- subscribe async-iterator mock', async () => {
src/execution/__tests__/simplePubSub-test.ts:9:32      - Unknown word (Subscriber) -- iterator = pubsub.getSubscriber((x) => x);
src/execution/__tests__/simplePubSub.ts:15:16     - Unknown word (subscriber)  -- for (const subscriber of this._subscribers
src/execution/__tests__/simplePubSub.ts:4:50      - Unknown word (Useful)     -- from an EventEmitter. Useful for mocking a
src/execution/__tests__/simplePubSub.ts:4:61      - Unknown word (mocking)    -- EventEmitter. Useful for mocking a
src/execution/__tests__/simplePubSub.ts:8:12      - Unknown word (subscribers) -- private _subscribers: Set<(value: T) => void
src/execution/__tests__/subscribe-test.ts:1013:33   - Unknown word (presented)     -- error in execution is presented as such.
src/execution/__tests__/subscribe-test.ts:1029:36   - Unknown word (executed)      -- Subsequent events are still executed.
src/execution/__tests__/subscribe-test.ts:110:18    - Unknown word (shouldn't)  -- // FIXME: we shouldn't use mapAsyncIterator
src/execution/__tests__/subscribe-test.ts:110:63    - Unknown word (makes)      -- apAsyncIterator here since it makes tests way more complex
src/execution/__tests__/subscribe-test.ts:148:7     - Unknown word (Dummy)      -- const DummyQueryType = new GraphQLObjectT
src/execution/__tests__/subscribe-test.ts:24:3      - Unknown word (unread)     -- unread: boolean;
src/execution/__tests__/subscribe-test.ts:37:7      - Unknown word (Inbox)      -- const InboxType = new GraphQLObjectType
src/execution/__tests__/subscribe-test.ts:380:26    - Unknown word (positional) -- 'Deprecated: allows positional arguments to createSourceEven
src/execution/__tests__/subscribe-test.ts:42:17     - Unknown word (inbox)      -- resolve: (inbox) => inbox.emails.length
src/execution/__tests__/subscribe-test.ts:478:27    - Unknown word (unexpected) -- should pass through unexpected errors thrown in subscribe
src/execution/__tests__/subscribe-test.ts:550:10    - Unknown word (Throwing)   -- // Throwing an error
src/execution/__tests__/subscribe-test.ts:562:10    - Unknown word (Rejecting)  -- // Rejecting with an error
src/execution/__tests__/subscribe-test.ts:588:47    - Unknown word (coerced)    -- variables that cannot be coerced correctly, subscribe
src/execution/__tests__/subscribe-test.ts:589:55    - Unknown word (informative) -- cutionResult that contains an informative error description.
src/execution/__tests__/subscribe-test.ts:620:19    - Unknown word (Alright)     -- subject: 'Alright',
src/execution/__tests__/subscribe-test.ts:656:20    - Unknown word (arrives)     -- // A new email arrives!
src/execution/__tests__/subscribe-test.ts:666:23    - Unknown word (waited)      -- // The previously waited on payload now has a
src/execution/__tests__/subscribe-test.ts:685:65    - Unknown word (called)      -- subscription.next() is called.
src/execution/__tests__/subscribe-test.ts:714:19    - Unknown word (decides)     -- // The client decides to disconnect.
src/execution/__tests__/subscribe-test.ts:720:28    - Unknown word (disconnecting) -- Which may result in disconnecting upstream services as
src/execution/__tests__/subscribe-test.ts:724:19    - Unknown word (Important)     -- subject: 'Important',
src/execution/__tests__/subscribe-test.ts:730:8     - Unknown word (Awaiting)      -- // Awaiting a subscription after
src/execution/__tests__/subscribe-test.ts:980:14    - Unknown word (Bonjour)       -- yield 'Bonjour';
src/execution/__tests__/sync-test.ts:106:19    - Unknown word (encountering) -- it('throws if encountering async execution', (
src/execution/__tests__/union-interface-test.ts:122:12    - Unknown word (reachable)  -- // Not reachable, all possible types
src/execution/__tests__/union-interface-test.ts:146:7     - Unknown word (garfield)   -- const garfield = new Cat('Garfield
src/execution/__tests__/union-interface-test.ts:147:28    - Unknown word (Garfield's) -- garfield.mother = new Cat("Garfield's Mom", false);
src/execution/__tests__/union-interface-test.ts:150:7     - Unknown word (odie)       -- const odie = new Dog('Odie', true
src/execution/__tests__/union-interface-test.ts:155:7     - Unknown word (john)       -- const john = new Person('John'
src/execution/__tests__/union-interface-test.ts:158:11    - Unknown word (introspect) -- it('can introspect on union and intersection
src/execution/__tests__/union-interface-test.ts:19:3      - Unknown word (barks)      -- barks: boolean;
src/execution/__tests__/union-interface-test.ts:20:3      - Unknown word (mother)     -- mother?: Dog;
src/execution/__tests__/union-interface-test.ts:22:3      - Unknown word (progeny)    -- progeny: ReadonlyArray<Dog>
src/execution/__tests__/union-interface-test.ts:388:17    - Unknown word (Barks)      -- ...DogBarks
src/execution/__tests__/union-interface-test.ts:389:17    - Unknown word (Meows)      -- ...CatMeows
src/execution/__tests__/union-interface-test.ts:430:18    - Unknown word (Progeny)    -- ...ProgenyFields
src/execution/__tests__/union-interface-test.ts:500:7     - Unknown word (gets)       -- it('gets execution info in resolver
src/execution/__tests__/union-interface-test.ts:501:9     - Unknown word (encountered) -- let encounteredContext;
src/execution/__tests__/union-interface-test.ts:75:7      - Unknown word (Mammal)     -- const MammalType: GraphQLInterfaceType
src/execution/__tests__/variables-test.ts:1069:56   - Unknown word (coercion)   -- limit maximum number of coercion errors', () => {
src/execution/__tests__/variables-test.ts:174:11    - Unknown word (properly)   -- it('properly parses single value
src/execution/__tests__/variables-test.ts:174:20    - Unknown word (parses)     -- it('properly parses single value to list
src/execution/__tests__/variables-test.ts:253:19    - Unknown word (faulty)     -- it('errors on faulty scalar type input',
src/execution/__tests__/variables-test.ts:32:11     - Unknown word (Faulty)     -- const TestFaultyScalarGraphQLError =
src/execution/__tests__/variables-test.ts:458:21    - Unknown word (omission)   -- it('errors on omission of nested non-null'
src/execution/__tests__/variables-test.ts:582:52    - Unknown word (unlisted)   -- to be omitted in an unlisted variable', () => {
src/execution/__tests__/variables-test.ts:776:32    - Unknown word (typically)  -- Note: this test would typically fail validation before
src/execution/__tests__/variables-test.ts:777:69    - Unknown word (validated)  -- queries which previously validated
src/execution/__tests__/variables-test.ts:778:60    - Unknown word (introduced) -- new schema which have introduced a breaking
src/execution/__tests__/variables-test.ts:779:27    - Unknown word (formerly)   -- // change to make a formerly non-required argument
src/execution/__tests__/variables-test.ts:993:53    - Unknown word (Knows)      -- xecuteQuery(doc, { input: 'WhoKnows' });
src/execution/collectFields.ts:162:4     - Unknown word (Determines) -- * Determines if a field should be
src/execution/collectFields.ts:208:19    - Unknown word (logic)      -- * Implements the logic to compute the key of
src/execution/collectFields.ts:25:26     - Unknown word (collects)   -- Given a selectionSet, collects all of the fields and
src/execution/execute.ts:1019:43   - Unknown word (along)        -- function while passing along args and context value
src/execution/execute.ts:1023:62   - Unknown word (acceptable)   -- which property access is acceptable.
src/execution/execute.ts:1037:21   - Unknown word (queried)      -- * it can always be queried as a field, even in
src/execution/execute.ts:1037:49   - Unknown word (situations)   -- as a field, even in situations where no
src/execution/execute.ts:1040:12   - Unknown word (mutating)     -- * require mutating type definitions, which
src/execution/execute.ts:104:4     - Unknown word (Namely)     -- * Namely, schema of the type
src/execution/execute.ts:161:67    - Unknown word (eventually) -- ExecutionResult that will eventually be
src/execution/execute.ts:165:46    - Unknown word (explaining) -- be thrown immediately explaining the invalid input.
src/execution/execute.ts:192:20    - Unknown word (descendants) -- // field and its descendants will be omitted, and
src/execution/execute.ts:193:38    - Unknown word (encounters)  -- An execution which encounters errors will still result
src/execution/execute.ts:196:51    - Unknown word (propagate)   -- of a NonNull type may propagate to the top level,
src/execution/execute.ts:198:26    - Unknown word (entire)      -- in this case is the entire response.
src/execution/execute.ts:220:16    - Unknown word (guarantees)  -- * However, it guarantees to complete synchronously
src/execution/execute.ts:220:73    - Unknown word (assuming)    -- (or throw an error) assuming
src/execution/execute.ts:246:4     - Unknown word (Essential)   -- * Essential assertions before executing
src/execution/execute.ts:247:4     - Unknown word (improper)    -- * improper use of the GraphQL library
src/execution/execute.ts:270:32    - Unknown word (throughout)  -- which we will pass throughout the other execution
src/execution/execute.ts:33:10     - Unknown word (Leaf)       -- GraphQLLeafType,
src/execution/execute.ts:382:27    - Unknown word (Serially)    -- return executeFieldsSerially(
src/execution/execute.ts:391:75    - Unknown word (together)    -- execute and subscribe together
src/execution/execute.ts:468:64    - Unknown word (handled)     -- by other fields are handled, as they may also reject
src/execution/execute.ts:483:38    - Unknown word (replaced)    -- but with any promises replaced with the values they
src/execution/execute.ts:516:73    - Unknown word (abrupt)      -- result is normal or abrupt (error).
src/execution/execute.ts:519:27    - Unknown word (fulfill)     -- variables scope to fulfill any variable references
src/execution/execute.ts:528:73    - Unknown word (commonly)    -- an execution. It is commonly
src/execution/execute.ts:551:25    - Unknown word (rely)        -- // Note: we don't rely on a `catch` method
src/execution/execute.ts:597:56    - Unknown word (locates)     -- however it still properly locates the error.
src/execution/execute.ts:609:19    - Unknown word (instructions) -- * Implements the instructions for completeValue as
src/execution/execute.ts:612:45    - Unknown word (recursively)  -- Non-Null, then this recursively completes the value
src/execution/execute.ts:612:57    - Unknown word (completes)    -- then this recursively completes the value
src/execution/execute.ts:614:16    - Unknown word (Nullability)  -- * as per the "Nullability" section of the spec
src/execution/execute.ts:626:30    - Unknown word (expects)      -- Otherwise, the field type expects a sub-selection set
src/execution/execute.ts:62:53     - Unknown word (regard)     -- relevant subfields with regard to the return
src/execution/execute.ts:63:20     - Unknown word (ensures)    -- * type. Memoizing ensures the subfields are not
src/execution/execute.ts:63:50     - Unknown word (repeatedly) -- the subfields are not repeatedly calculated, which
src/execution/execute.ts:64:10     - Unknown word (overhead)   -- * saves overhead when resolving lists
src/execution/execute.ts:64:4      - Unknown word (saves)      -- * saves overhead when resolving
src/execution/execute.ts:678:25    - Unknown word (leaf)         -- If field type is a leaf type, Scalar or Enum
src/execution/execute.ts:717:29    - Unknown word (completing)   -- Complete a list value by completing each item in the list
src/execution/execute.ts:734:55    - Unknown word (optimizing)   -- simple map, however we're optimizing the path
src/execution/execute.ts:735:45    - Unknown word (avoiding)     -- contains no Promises by avoiding creating another Promise
src/execution/execute.ts:808:44    - Unknown word (determining)  -- an abstract type by determining the runtime object type
src/execution/execute.ts:930:54    - Unknown word (raise)        -- returns false, then raise an error rather
src/execution/execute.ts:931:11    - Unknown word (continuing)   -- // than continuing execution.
src/execution/execute.ts:94:53     - Unknown word (legally)    -- definitions that can appear legally and at
src/execution/execute.ts:971:15    - Unknown word (attempts)     -- * used which attempts two strategies:
src/execution/execute.ts:971:28    - Unknown word (strategies)   -- used which attempts two strategies:
src/execution/execute.ts:988:11    - Unknown word (promised)     -- const promisedIsTypeOfResults = []
src/execution/subscribe.ts:136:28    - Unknown word (hosting)    -- This may be useful when hosting the stateful subscription
src/execution/subscribe.ts:137:42    - Unknown word (stateless)  -- or machine than the stateless GraphQL execution engine
src/execution/subscribe.ts:138:17    - Unknown word (separating) -- * or otherwise separating these two steps. For
src/execution/subscribe.ts:139:5     - Unknown word (Supporting) -- * "Supporting Subscriptions at Scale
src/execution/subscribe.ts:144:58    - Unknown word (favor)      -- next major version in favor of named arguments
src/execution/subscribe.ts:161:34    - Unknown word (incorrectly) -- arguments are missing or incorrectly typed, this is an internal
src/execution/subscribe.ts:162:16    - Unknown word (mistake)     -- // developer mistake which should throw an
src/execution/subscribe.ts:239:11    - Unknown word (differs)     -- // It differs from "ResolveFieldValue
src/execution/subscribe.ts:239:51    - Unknown word (providing)   -- ResolveFieldValue" due to providing a different `resolveFn
src/execution/subscribe.ts:251:22    - Unknown word (yielding)    -- // AsyncIterable yielding raw payloads.
src/execution/subscribe.ts:67:23     - Unknown word (yielded)    -- // For each payload yielded from a subscription
src/execution/subscribe.ts:71:53     - Unknown word (nearly)     -- algorithm, as it is nearly identical to the
src/execution/subscribe.ts:71:60     - Unknown word (identical)  -- algorithm, as it is nearly identical to the
src/execution/values.ts:215:24    - Unknown word (Correct)    -- // Note: ValuesOfCorrectTypeRule validation should
src/execution/values.ts:22:10     - Unknown word (coerce)     -- import { coerceInputValue } from '.
src/execution/values.ts:26:6      - Unknown word (Coerced)    -- type CoercedVariableValues =
src/execution/values.ts:31:4      - Unknown word (Prepares)   -- * Prepares an object map of variableValu
src/execution/values.ts:84:56     - Unknown word (safety)     -- checked again here for safety.
src/graphql.ts:26:4      - Unknown word (More)       -- * More sophisticated GraphQL
src/graphql.ts:26:9      - Unknown word (sophisticated) -- * More sophisticated GraphQL servers, such
src/graphql.ts:27:8      - Unknown word (wish)          -- * may wish to separate the validation
src/graphql.ts:28:4      - Unknown word (tooling)       -- * tooling step, and a server runtime
src/graphql.ts:58:29     - Unknown word (alternatively) -- _typename` field or alternatively calls the `isTypeOf
src/graphql.ts:77:34     - Unknown word (fulfills)      -- graphqlSync function also fulfills GraphQL operations by
src/index.ts:12:8      - Unknown word (Validating) -- * - Validating a GraphQL request against
src/index.ts:137:35    - Unknown word (naming)      -- the spec rules about naming.
src/index.ts:137:6     - Unknown word (Upholds)     -- // Upholds the spec rules about
src/index.ts:16:25     - Unknown word (facilitate) -- GraphQL documents to facilitate building tools.
src/index.ts:19:40     - Unknown word (equivalent) -- import statements are equivalent:
src/index.ts:230:5     - Unknown word (Executable)  -- isExecutableDefinitionNode,
src/index.ts:344:6     - Unknown word (Individual)  -- // Individual validation rules.
src/index.ts:352:3     - Unknown word (Lone)        -- LoneAnonymousOperationRule
src/index.ts:357:3     - Unknown word (Overlapping) -- OverlappingFieldsCanBeMergedRule
src/index.ts:358:19    - Unknown word (Spreads)     -- PossibleFragmentSpreadsRule,
src/index.ts:359:3     - Unknown word (Provided)    -- ProvidedRequiredArgumentsRule
src/index.ts:360:9     - Unknown word (Leafs)       -- ScalarLeafsRule,
src/index.ts:36:15     - Unknown word (operate)    -- // Create and operate on GraphQL type definitions
src/index.ts:3:25      - Unknown word (utility)    -- but is also a useful utility for operating on GraphQL
src/index.ts:3:37      - Unknown word (operating)  -- a useful utility for operating on GraphQL files and
src/index.ts:406:6     - Unknown word (Produce)     -- // Produce the GraphQL query recommended
src/index.ts:409:6     - Unknown word (Gets)        -- // Gets the target Operation
src/index.ts:424:3     - Unknown word (lexicographic) -- lexicographicSortSchema,
src/index.ts:429:17    - Unknown word (built)         -- // Prints the built-in introspection schema
src/index.ts:442:6     - Unknown word (Coerces)       -- // Coerces a JavaScript value to
src/index.ts:444:6     - Unknown word (Concatenates)  -- // Concatenates multiple AST together
src/index.ts:446:6     - Unknown word (Separates)     -- // Separates an AST into an AST per
src/index.ts:448:6     - Unknown word (Strips)        -- // Strips characters that are
src/index.ts:450:6     - Unknown word (Comparators)   -- // Comparators for types
src/index.ts:458:38    - Unknown word (detects)       -- two GraphQLSchemas and detects breaking changes.
src/index.ts:458:6     - Unknown word (Compares)      -- // Compares two GraphQLSchemas and
src/index.ts:460:3     - Unknown word (Dangerous)     -- DangerousChangeType,
src/index.ts:51:23     - Unknown word (Scalars)    -- // Standard GraphQL Scalars
src/index.ts:58:10     - Unknown word (boundaries) -- // Int boundaries constants
src/index.ts:61:41     - Unknown word (Spec)       -- Directives defined by the Spec
src/index.ts:61:6      - Unknown word (Built)      -- // Built-in Directives defined
src/index.ts:71:11     - Unknown word (DEPRECATION) -- DEFAULT_DEPRECATION_REASON,
src/jsutils/Maybe.ts:1:5       - Unknown word (Conveniently) -- /** Conveniently represents flow's "Maybe
src/jsutils/Path.ts:26:9      - Unknown word (flattened)  -- const flattened = [];
src/jsutils/README.md:3:25      - Unknown word (dependency) -- This directory contains dependency-free JavaScript utility
src/jsutils/__tests__/identityFunc-test.ts:7:37      - Unknown word (receives)   -- the first argument it receives', () => {
src/jsutils/__tests__/identityFunc-test.ts:8:26      - Unknown word (Expects)    -- / @ts-expect-error (Expects an argument)
src/jsutils/__tests__/instanceOf-test.ts:19:19     - Unknown word (clashes)    -- it('detect name clashes with older versions
src/jsutils/__tests__/instanceOf-test.ts:19:32     - Unknown word (older)      -- detect name clashes with older versions of this lib
src/jsutils/__tests__/instanceOf-test.ts:41:17     - Unknown word (Minified)   -- function getMinifiedClass(tag: string) {
src/jsutils/__tests__/instanceOf-test.ts:73:52     - Unknown word (realm)      -- from another module or realm./m,
src/jsutils/__tests__/isIterableObject-test.ts:12:40     - Unknown word (wrappers)   -- disable-next-line no-new-wrappers
src/jsutils/__tests__/isIterableObject-test.ts:64:21     - Unknown word (Bravo)      -- arrayLike[1] = 'Bravo';
src/jsutils/__tests__/isIterableObject-test.ts:65:21     - Unknown word (Charlie)    -- arrayLike[2] = 'Charlie';
src/jsutils/__tests__/naturalCompare-test.ts:39:36     - Unknown word (zeros)      -- numbers with leading zeros', () => {
src/jsutils/__tests__/suggestionList-test.ts:20:24     - Unknown word (greenish)   -- expectSuggestions('greenish', ['green']).to.deep
src/jsutils/__tests__/suggestionList-test.ts:49:28     - Unknown word (transpositions) -- Returns options with transpositions', () => {
src/jsutils/__tests__/suggestionList-test.ts:62:61     - Unknown word (lexicographically) -- lexical distance sorted lexicographically', () => {
src/jsutils/__tests__/toObjMap-test.ts:7:35      - Unknown word (happy)      -- to make both ESLint happy
src/jsutils/__tests__/toObjMap-test.ts:7:4       - Unknown word (Workaround) -- // Workaround to make both ESLint
src/jsutils/inspect.ts:41:12     - Unknown word (Nable)      -- if (isJSONable(value)) {
src/jsutils/inspect.ts:44:18     - Unknown word (infinite)   -- // check for infinite recursion
src/jsutils/instanceOf.ts:11:21     - Unknown word (detected)     -- * constructors are detected.
src/jsutils/instanceOf.ts:11:4      - Unknown word (constructors) -- * constructors are detected.
src/jsutils/instanceOf.ts:27:52     - Unknown word (immune)       -- toStringTag since it is immune to minification.
src/jsutils/instanceOf.ts:42:1      - Unknown word (relied)       -- relied on modules, use "resolutions
src/jsutils/instanceOf.ts:42:25     - Unknown word (resolutions)  -- relied on modules, use "resolutions" to ensure only one
src/jsutils/instanceOf.ts:48:57     - Unknown word (confusing)    -- another could produce confusing and
src/jsutils/instanceOf.ts:49:1      - Unknown word (spurious)     -- spurious results.`,
src/jsutils/instanceOf.ts:4:9       - Unknown word (Production) -- const isProduction =
src/jsutils/isPromise.ts:2:30      - Unknown word (acts)       -- Returns true if the value acts like a Promise, i.e
src/jsutils/keyMap.ts:12:15     - Unknown word (Jenny)      -- * { name: 'Jenny', num: '867-5309' }
src/jsutils/keyMap.ts:25:10     - Unknown word (jenny)      -- * const jennyEntry = entriesByName
src/jsutils/keyMap.ts:4:14      - Unknown word (keyed)      -- * Creates a keyed JS object from an array
src/jsutils/keyMap.ts:7:20      - Unknown word (convenient) -- * This provides a convenient lookup for the array
src/jsutils/keyValMap.ts:13:10     - Unknown word (phones)     -- * const phonesByName = keyValMap(
src/jsutils/mapValue.ts:5:32      - Unknown word (thru)       -- each value of `map` thru `fn`.
src/jsutils/naturalCompare.ts:16:11     - Unknown word (Digit)      -- if (isDigit(aChar) && isDigit(bChar
src/jsutils/naturalCompare.ts:20:36     - Unknown word (DIGIT)      -- aNum * 10 + aChar - DIGIT_0;
src/jsutils/naturalCompare.ts:2:59      - Unknown word (comes)      -- whether a reference string comes before, or after,
src/jsutils/promiseForObject.ts:7:12      - Unknown word (akin)       -- * This is akin to bluebird's `Promise
src/jsutils/promiseReduce.ts:13:16     - Unknown word (accumulator) -- callbackFn: (accumulator: U, currentValue: T
src/jsutils/promiseReduce.ts:5:4       - Unknown word (Similar)    -- * Similar to Array.prototype.reduce
src/jsutils/promiseReduce.ts:5:53      - Unknown word (reducing)   -- reduce(), however the reducing callback may return
src/jsutils/suggestionList.ts:107:14    - Unknown word (transposition) -- // transposition
src/jsutils/suggestionList.ts:108:23    - Unknown word (Diagonal)      -- const doubleDiagonalCell = rows[(i - 2)
src/jsutils/suggestionList.ts:119:46    - Unknown word (smaller)       -- since distance can't go smaller than smallest element
src/jsutils/suggestionList.ts:36:22     - Unknown word (alteration) -- * Includes a custom alteration from Damerau-Levenshtein
src/jsutils/suggestionList.ts:37:27     - Unknown word (helps)      -- a single edit which helps identify mis-cased values
src/jsutils/suggestionList.ts:37:46     - Unknown word (cased)      -- which helps identify mis-cased values with an edit
src/jsutils/suggestionList.ts:40:36     - Unknown word (detecting)  -- distance can be useful for detecting typos in input or sorting
src/jsutils/suggestionList.ts:40:46     - Unknown word (typos)      -- useful for detecting typos in input or sorting
src/jsutils/suggestionList.ts:5:48      - Unknown word (similarity) -- sorted based on their similarity with the input.
src/jsutils/suggestionList.ts:96:11     - Unknown word (smallest)   -- let smallestCell = (currentRow[0
src/jsutils/toError.ts:4:4       - Unknown word (Sometimes)  -- * Sometimes a non-error is thrown
src/language/README.md:3:50      - Unknown word (parsing)    -- module is responsible for parsing and operating on the
src/language/__tests__/blockString-fuzz.ts:27:9      - Unknown word (printed)    -- const printedValue = lexValue(blockString
src/language/__tests__/blockString-fuzz.ts:52:34     - Unknown word (taking)     -- Testing with length >7 is taking exponentially more time
src/language/__tests__/blockString-fuzz.ts:52:41     - Unknown word (exponentially) -- length >7 is taking exponentially more time. However it
src/language/__tests__/blockString-fuzz.ts:53:40     - Unknown word (increased)     -- recommended to test with increased limit if you make any
src/language/__tests__/blockString-fuzz.ts:53:8      - Unknown word (highly)        -- // highly recommended to test
src/language/__tests__/blockString-fuzz.ts:9:12      - Unknown word (Printable)  -- import { isPrintableAsBlockString, printBlockStrin
src/language/__tests__/blockString-test.ts:105:7     - Unknown word (retains)    -- it('retains indentation from first
src/language/__tests__/blockString-test.ts:165:32    - Unknown word (printable)  -- rejects strings with non-printable characters', () =>
src/language/__tests__/blockString-test.ts:224:22    - Unknown word (liner)      -- const str = 'one liner';
src/language/__tests__/blockString-test.ts:228:50    - Unknown word (triple)     -- strings ending with triple quotation as multi-line
src/language/__tests__/blockString-test.ts:228:57    - Unknown word (quotation)  -- strings ending with triple quotation as multi-line', ()
src/language/__tests__/blockString-test.ts:231:22    - Unknown word (ntriple)    -- readable: '"""\ntriple quotation \\"""\n""
src/language/__tests__/blockString-test.ts:242:39    - Unknown word (quoted)     -- space-led value "quoted string"';
src/language/__tests__/blockString-test.ts:248:50    - Unknown word (backslash)  -- single-line with trailing backslash', () => {
src/language/__tests__/blockString-test.ts:251:22    - Unknown word (nbackslash) -- readable: '"""\nbackslash \\\n"""',
src/language/__tests__/blockString-test.ts:51:12     - Unknown word (Yours)      -- ' Yours,',
src/language/__tests__/lexer-test.ts:1086:42   - Unknown word (dashes)     -- useful information for dashes in names', () => {
src/language/__tests__/lexer-test.ts:1118:16   - Unknown word (advances)   -- // Lexer advances over ignored comment
src/language/__tests__/lexer-test.ts:1119:10   - Unknown word (easier)     -- // easier, but will include them
src/language/__tests__/lexer-test.ts:111:65    - Unknown word (inspected)  -- stringified, or jsutils.inspected', () => {
src/language/__tests__/lexer-test.ts:1182:24   - Unknown word (punctuator) -- it('returns true for punctuator tokens', () => {
src/language/__tests__/lexer-test.ts:126:7     - Unknown word (skips)      -- it('skips whitespace and comments
src/language/__tests__/lexer-test.ts:12:12     - Unknown word (Punctuator) -- import { isPunctuatorTokenKind, Lexer } from
src/language/__tests__/lexer-test.ts:168:14    - Unknown word (respect)    -- it('errors respect whitespace', () =>
src/language/__tests__/lexer-test.ts:274:26    - Unknown word (maximal)    -- lexOne('"unescaped maximal unicode outside BMP
src/language/__tests__/lexer-test.ts:289:60    - Unknown word (CDEF)       -- u{5678}\\u{90AB}\\u{CDEF}"')).to.contain(
src/language/__tests__/lexer-test.ts:333:36    - Unknown word (surrogate)  -- string with unicode surrogate pair escape \\uD83D
src/language/__tests__/lexer-test.ts:41:19     - Unknown word (breaks)     -- it('tracks line breaks', () => {
src/language/__tests__/lexer-test.ts:815:58    - Unknown word (digit)      -- Invalid number, unexpected digit after 0: "0".',
src/language/__tests__/lexer-test.ts:933:23    - Unknown word (BANG)       -- kind: TokenKind.BANG,
src/language/__tests__/parser-test.ts:161:30    - Unknown word (naively)    -- Note: \u0A0A could be naively interpreted as two line
src/language/__tests__/parser-test.ts:161:38    - Unknown word (interpreted) -- A0A could be naively interpreted as two line-feed chars
src/language/__tests__/parser-test.ts:177:27    - Unknown word (anywhere)    -- allows non-keywords anywhere a Name is allowed',
src/language/__tests__/parser-test.ts:336:24    - Unknown word (nameless)    -- it('creates ast from nameless query without variables
src/language/__tests__/printLocation-test.ts:10:14     - Unknown word (minified)   -- it('prints minified documents', () => {
src/language/__tests__/printLocation-test.ts:12:72     - Unknown word (HERE)       -- String!=FIRST_ERROR_HERE$bar:String){someField
src/language/__tests__/printString-test.ts:11:7      - Unknown word (escapes)    -- it('escapes quotes', () => {
src/language/__tests__/printString-test.ts:16:50     - Unknown word (who\'s)     -- s test")).to.equal('"who\'s test"');
src/language/__tests__/printString-test.ts:19:15     - Unknown word (backslashes) -- it('escapes backslashes', () => {
src/language/__tests__/printString-test.ts:39:23     - Unknown word (supplementary) -- it('does not escape supplementary character', () => {
src/language/__tests__/printString-test.ts:44:8      - Unknown word (spellchecker)  -- /* spellchecker:ignore abcdefghijklmnopqrstuv
src/language/__tests__/printer-test.ts:141:35    - Unknown word (altering)      -- kitchen sink without altering ast', () => {
src/language/__tests__/printer-test.ts:20:16     - Unknown word (helpful)    -- it('produces helpful error messages', ()
src/language/__tests__/printer-test.ts:30:19     - Unknown word (Shorthanded) -- const queryASTShorthanded = parse('query { id
src/language/__tests__/printer-test.ts:78:7      - Unknown word (keeps)       -- it('keeps arguments on one line
src/language/__tests__/printer-test.ts:80:20     - Unknown word (wheelchair)  -- parse('{trip(wheelchair:false arriveBy:false
src/language/__tests__/printer-test.ts:80:37     - Unknown word (arrive)      -- trip(wheelchair:false arriveBy:false){dateTime}}
src/language/__tests__/printer-test.ts:95:55     - Unknown word (Planned)     -- arriveBy:false includePlannedCancellations:true transitDist
src/language/__tests__/printer-test.ts:95:62     - Unknown word (Cancellations) -- false includePlannedCancellations:true transitDistanceReluctanc
src/language/__tests__/printer-test.ts:95:96     - Unknown word (Reluctance)    -- true transitDistanceReluctance:2000){dateTime}}',
src/language/__tests__/schema-parser-test.ts:130:9     - Unknown word (Even)       -- # Even with comments between
src/language/__tests__/schema-parser-test.ts:197:53    - Unknown word (Greeting)   -- type Hello implements Greeting');
src/language/__tests__/schema-parser-test.ts:264:25    - Unknown word (anything)   -- it('Extension without anything throws', () => {
src/language/__tests__/schema-parser-test.ts:469:24    - Unknown word (inheriting) -- it('Simple interface inheriting interface', () => {
src/language/__tests__/visitor-test.ts:106:23    - Unknown word (Ancestors)  -- const expectedAncestors = visitedNodes.slice
src/language/__tests__/visitor-test.ts:250:7     - Unknown word (visits)     -- it('visits edited node', () =>
src/language/__tests__/visitor-test.ts:318:31    - Unknown word (visiting)   -- allows early exit while visiting', () => {
src/language/__tests__/visitor-test.ts:64:7      - Unknown word (validates)  -- it('validates path argument', ()
src/language/ast.ts:185:4     - Unknown word (Utility)     -- * Utility type listing all nodes
src/language/ast.ts:86:6      - Unknown word (convenience) -- * convenience in the parser.
src/language/ast.ts:91:52     - Unknown word (amongst)     -- a double-linked-list amongst all tokens
src/language/blockString.ts:139:20    - Unknown word (Triple)     -- const hasTrailingTripleQuotes = escapedValue
src/language/blockString.ts:141:49    - Unknown word (forces)     -- or double) or slash forces trailing new line
src/language/blockString.ts:148:54    - Unknown word (improves)   -- new lines only if it improves readability
src/language/blockString.ts:148:63    - Unknown word (readability) -- only if it improves readability
src/language/blockString.ts:1:42      - Unknown word (Classes)    -- WhiteSpace } from './characterClasses';
src/language/blockString.ts:7:32      - Unknown word (spec's)     -- implements the GraphQL spec's BlockStringValue() static
src/language/lexer.ts:112:32    - Unknown word (inclusive)  -- In other words, the inclusive ranges of values 0x
src/language/lexer.ts:128:12    - Unknown word (surrogates) -- * include surrogates. A surrogate pair is
src/language/lexer.ts:129:4     - Unknown word (encodes)    -- * encodes a supplementary code
src/language/lexer.ts:129:59    - Unknown word (unpaired)   -- (above U+FFFF), but unpaired surrogate
src/language/lexer.ts:132:12    - Unknown word (Supplementary) -- function isSupplementaryCodePoint(body: string
src/language/lexer.ts:134:14    - Unknown word (Surrogate)     -- isLeadingSurrogate(body.charCodeAt(location
src/language/lexer.ts:15:4      - Unknown word (whenever)   -- * whenever called.
src/language/lexer.ts:187:40    - Unknown word (finds)         -- whitespace until it finds the next lexable token
src/language/lexer.ts:188:4     - Unknown word (punctuators)   -- * punctuators immediately or calls
src/language/lexer.ts:189:4     - Unknown word (complicated)   -- * complicated tokens.
src/language/lexer.ts:204:18    - Unknown word (Terminator)    -- // - LineTerminator
src/language/lexer.ts:320:4     - Unknown word (Reads)         -- * Reads a comment token from
src/language/lexer.ts:362:27    - Unknown word (Fractional)    -- depending on whether a FractionalPart or ExponentPart
src/language/lexer.ts:55:6      - Unknown word (Advances)   -- * Advances the token stream to
src/language/lexer.ts:615:22    - Unknown word (formed)        -- // a valid pair is formed.
src/language/lexer.ts:628:21    - Unknown word (internally)    -- // not been internally based on UTF-16, then
src/language/lexer.ts:643:15    - Unknown word (hexadecimal)   -- * Reads four hexadecimal characters and returns
src/language/lexer.ts:688:47    - Unknown word (solidus)       -- U+005C | reverse solidus (back slash) |
src/language/lexer.ts:690:39    - Unknown word (backspace)     -- | U+0008     | backspace
src/language/location.ts:16:4      - Unknown word (Takes)      -- * Takes a Source and a UTF-
src/language/parser.ts:131:7     - Unknown word (isolation)  -- * in isolation of complete GraphQL
src/language/parser.ts:133:4     - Unknown word (Consider)   -- * Consider providing the results
src/language/parser.ts:1428:70   - Unknown word (advancing)   -- return that token after advancing the lexer.
src/language/parser.ts:147:33    - Unknown word (raises)     -- to parseValue(), but raises a parse error if it
src/language/parser.ts:1501:52   - Unknown word (determined)  -- list of parse nodes, determined by the parseFn.
src/language/parser.ts:1559:78   - Unknown word (separated)   -- limiterKind followed by items separated by lex tokens of tokenKind
src/language/parser.ts:183:35    - Unknown word (assist)     -- is exported only to assist people in implementing
src/language/parser.ts:184:70    - Unknown word (resort)     -- be used only as last resort for cases
src/language/parser.ts:187:48    - Unknown word (versioned)  -- internal API and is versioned, so any changes to it
src/language/parser.ts:211:6     - Unknown word (Converts)   -- * Converts a name lex token into
src/language/parser.ts:261:14    - Unknown word (peek)       -- if (this.peek(TokenKind.BRACE_L))
src/language/parser.ts:495:6     - Unknown word (Corresponds) -- * Corresponds to both FragmentSpread
src/language/parser.ts:530:27    - Unknown word (defining)    -- Legacy support for defining variables within fragments
src/language/parser.ts:75:52     - Unknown word (know)       -- creates AST nodes that know the location
src/language/parser.ts:77:6      - Unknown word (disables)   -- * disables that behavior for performance
src/language/parser.ts:83:17     - Unknown word (extreme)    -- * however in extreme cases it becomes quadratic
src/language/parser.ts:83:66     - Unknown word (exhaustion) -- quadratic due to memory exhaustion.
src/language/parser.ts:84:14     - Unknown word (happens)    -- * Parsing happens before validation so
src/language/parser.ts:93:34     - Unknown word (understand) -- enabled, the parser will understand and parse variable definition
src/language/parser.ts:94:42     - Unknown word (They'll)    -- fragment definition. They'll be represented in the
src/language/printLocation.ts:48:12     - Unknown word (Prefixed)   -- printPrefixedLines([
src/language/printString.ts:13:16     - Unknown word (Sequences)  -- return escapeSequences[str.charCodeAt(0)];
src/language/printer.ts:10:52     - Unknown word (reasonable) -- string, using one set of reasonable
src/language/printer.ts:6:18      - Unknown word (Reducer)    -- import type { ASTReducer } from './visitor';
src/language/tokenKind.ts:3:10      - Unknown word (emits)      -- * lexer emits.
src/language/visitor.ts:10:57     - Unknown word (traversal)  -- during the visitor's traversal.
src/language/visitor.ts:111:42    - Unknown word (altogether)  -- BREAK: stop visiting altogether
src/language/visitor.ts:126:4     - Unknown word (Alternatively) -- * Alternatively to providing enter(
src/language/visitor.ts:128:58    - Unknown word (permutations)  -- key, leading to three permutations of the
src/language/visitor.ts:131:37    - Unknown word (entering)      -- visitors triggered when entering a node of a specific
src/language/visitor.ts:204:13    - Unknown word (Leaving)       -- const isLeaving = index === keys.length
src/language/visitor.ts:20:30     - Unknown word (Visited)    -- interface EnterLeaveVisitor<TVisitedNode extends ASTNode
src/language/visitor.ts:26:17     - Unknown word (comprised)  -- * A visitor is comprised of visit functions,
src/language/visitor.ts:39:42     - Unknown word (reaching)   -- Arrays visited before reaching parent of this node
src/language/visitor.ts:47:6      - Unknown word (reducer)    -- * A reducer is comprised of reducer
src/language/visitor.ts:81:32     - Unknown word (traversable) -- KeyMap describes each the traversable properties of each kind
src/language/visitor.ts:97:35     - Unknown word (altered)     -- of the visitor can be altered, including skipping
src/subscription/README.md:3:359     - Unknown word (major)      -- module. In the next major release, the `graphql
src/subscription/README.md:3:416     - Unknown word (dropped)    -- subscription` module will be dropped entirely.
src/subscription/README.md:3:70      - Unknown word (exported)   -- deprecated with its exported functions integrated
src/subscription/README.md:5:54      - Unknown word (subscribing) -- module is responsible for subscribing to updates on specific
src/subscription/index.ts:17:27     - Unknown word (broadened)  -- ExecutionArgs has been broadened to include all properties
src/subscription/index.ts:18:33     - Unknown word (retained)   -- SubscriptionArgs type is retained for backwards compatibility
src/subscription/index.ts:4:11      - Unknown word (conform)    -- * better conform with the terminology
src/subscription/index.ts:4:4       - Unknown word (better)     -- * better conform with the terminology
src/type/__tests__/assertName-test.ts:29:32     - Unknown word (Meanings)   -- () => assertName('42MeaningsOfLife')).to.throw(
src/type/__tests__/definition-test.ts:155:16    - Unknown word (mutate)     -- it('does not mutate passed field definitions
src/type/__tests__/definition-test.ts:215:33    - Unknown word (terrible)   -- deprecationReason: 'A terrible reason',
src/type/__tests__/definition-test.ts:556:24    - Unknown word (Unions)     -- describe('Type System: Unions', () => {
src/type/__tests__/definition-test.ts:629:36    - Unknown word (Just)       -- deprecationReason: 'Just because' },
src/type/__tests__/definition-test.ts:876:29    - Unknown word (preserved)  -- Deprecation reason is preserved on fields', () => {
src/type/__tests__/definition-test.ts:882:40    - Unknown word (anymore)    -- deprecationReason: 'not used anymore',
src/type/__tests__/enumType-test.ts:182:56    - Unknown word (GREENISH)   -- colorEnum(fromEnum: GREENISH) }');
src/type/__tests__/enumType-test.ts:301:67    - Unknown word (expecting)  -- String!" used in position expecting type "Color".',
src/type/__tests__/enumType-test.ts:361:7     - Unknown word (presents)   -- it('presents a getValues() API for
src/type/__tests__/enumType-test.ts:428:14    - Unknown word (introspected) -- it('can be introspected without error', ()
src/type/__tests__/enumType-test.ts:78:16     - Unknown word (Good)       -- provideGoodValue: { type: GraphQLBoolean
src/type/__tests__/introspection-test.ts:1015:7    - Unknown word (introspects) -- it('introspects on input object', (
src/type/__tests__/introspection-test.ts:1216:7    - Unknown word (respects)    -- it('respects the includeDeprecated
src/type/__tests__/introspection-test.ts:1353:9    - Unknown word (ALSO)        -- ALSO_NON_DEPRECATED
src/type/__tests__/predicate-test.ts:115:34    - Unknown word (garbage)    -- returns false for random garbage', () => {
src/type/__tests__/predicate-test.ts:522:9     - Unknown word (unwraps)    -- it('unwraps non-null type', ()
src/type/__tests__/predicate-test.ts:553:17    - Unknown word (wrapper)    -- it('unwraps wrapper types', () => {
src/type/__tests__/predicate-test.ts:558:17    - Unknown word (deeply)     -- it('unwraps deeply wrapper types', ()
src/type/__tests__/scalars-test.ts:134:26    - Unknown word (accidental) -- // as Int to avoid accidental data loss.
src/type/__tests__/scalars-test.ts:148:43    - Unknown word (bigger)     -- JavaScript int, but bigger than 2^32, so not
src/type/__tests__/scalars-test.ts:149:10    - Unknown word (representable) -- // representable as a GraphQL Int
src/type/__tests__/scalars-test.ts:168:10    - Unknown word (Doesn't)       -- // Doesn't represent number
src/type/__tests__/schema-test.ts:190:36    - Unknown word (subtypes)   -- includes interface's thunk subtypes in the type map", (
src/type/__tests__/schema-test.ts:263:7     - Unknown word (preserves)  -- it('preserves the order of user provided
src/type/__tests__/schema-test.ts:323:24    - Unknown word (assumed)    -- describe('when not assumed valid', () => {
src/type/__tests__/schema-test.ts:324:11    - Unknown word (configures) -- it('configures the schema to still
src/type/__tests__/schema-test.ts:324:42    - Unknown word (needing)    -- the schema to still needing validation', () =>
src/type/__tests__/schema-test.ts:332:40    - Unknown word (mistakes)   -- the configuration for mistakes', () => {
src/type/__tests__/schema-test.ts:342:37    - Unknown word (uniquely)   -- Schema must contain uniquely named types', () =>
src/type/__tests__/schema-test.ts:343:34    - Unknown word (redefines)  -- rejects a Schema which redefines a built-in type', (
src/type/__tests__/schema-test.ts:344:15    - Unknown word (Fake)       -- const FakeString = new GraphQLScalarType
src/type/__tests__/schema-test.ts:350:13    - Unknown word (fake)       -- fake: { type: FakeString
src/type/__tests__/schema-test.ts:372:57    - Unknown word (twice)      -- defines an object type twice', () => {
src/type/__tests__/validation-test.ts:1259:66   - Unknown word (mismatching) -- extended interface due to mismatching interface type', ()
src/type/__tests__/validation-test.ts:1284:19   - Unknown word (Mismatching) -- interface MismatchingInterface {
src/type/__tests__/validation-test.ts:1724:24   - Unknown word (adhere)      -- describe('Objects must adhere to Interface they implement
src/type/__tests__/validation-test.ts:1829:32   - Unknown word (differently) -- rejects an Object with a differently typed Interface field
src/type/__tests__/validation-test.ts:2015:33   - Unknown word (equivalently) -- accepts an Object with an equivalently wrapped Interface field
src/type/__tests__/validation-test.ts:2101:32   - Unknown word (superset)     -- rejects an Object with a superset nullable Interface field
src/type/__tests__/validation-test.ts:2127:35   - Unknown word (transitive)   -- an Object missing a transitive interface', () => {
src/type/__tests__/validation-test.ts:2680:7    - Unknown word (combines)     -- it('combines multiple errors', (
src/type/__tests__/validation-test.ts:770:36    - Unknown word (breakable)  -- an Input Object with breakable circular reference'
src/type/definition.ts:1096:37   - Unknown word (heterogeneous) -- can return one of a heterogeneous set of types, a Interface
src/type/definition.ts:1607:4    - Unknown word (supplied)      -- * supplied to a field argument
src/type/definition.ts:328:14    - Unknown word (Wrapper)    -- * List Type Wrapper
src/type/definition.ts:375:19    - Unknown word (enforce)    -- * Non-null types enforce that their values are
src/type/definition.ts:377:39    - Unknown word (guarantee)  -- you can make a strong guarantee on non-nullability,
src/type/definition.ts:390:14    - Unknown word (enforcement) -- * Note: the enforcement of non-nullability occurs
src/type/definition.ts:685:17    - Unknown word (externally)  -- /** Parses an externally provided value to use
src/type/definition.ts:685:7     - Unknown word (Parses)      -- /** Parses an externally provided
src/type/definition.ts:722:4     - Unknown word (Almost)      -- * Almost all of the GraphQL types
src/type/definition.ts:723:26    - Unknown word (importantly) -- have a name, but most importantly describe their fields
src/type/definition.ts:743:58    - Unknown word (needs)       -- each other, or a type needs to refer to
src/type/definition.ts:744:64    - Unknown word (closure)     -- function expression (aka a closure or a
src/type/definition.ts:745:32    - Unknown word (lazily)      -- to supply the fields lazily.
src/type/definition.ts:848:7     - Unknown word (Plain)       -- isPlainObj(fieldMap),
src/type/directives.ts:202:19    - Unknown word (Exposes)    -- description: 'Exposes a URL that specifies
src/type/directives.ts:202:38    - Unknown word (specifies)  -- 'Exposes a URL that specifies the behavior of this
src/type/directives.ts:53:59     - Unknown word (modifying)  -- runtime as a way of modifying execution
src/type/directives.ts:54:26     - Unknown word (creators)   -- behavior. Type system creators will usually not create
src/type/index.ts:64:11     - Unknown word (Wrappers)   -- // Type Wrappers
src/type/schema.ts:111:9     - Unknown word (necessary)   -- * // necessary to explicitly list the
src/type/schema.ts:145:12    - Unknown word (implementations) -- private _implementationsMap: ObjMap<{
src/type/schema.ts:179:20    - Unknown word (collected)       -- // the set of "collected" types, so `collectReferenced
src/type/schema.ts:210:8     - Unknown word (Storing)         -- // Storing the resulting map for
src/type/schema.ts:307:17    - Unknown word (Implementations) -- : this.getImplementations(abstractType).objects
src/type/schema.ts:65:27     - Unknown word (supplying)  -- Schema is created by supplying the root types of each
src/type/schema.ts:78:29     - Unknown word (constructed) -- When the schema is constructed, by default only the
src/type/schema.ts:79:17     - Unknown word (traversing)  -- * reachable by traversing the root types are included
src/type/schema.ts:80:4      - Unknown word (explicitly)  -- * explicitly referenced.
src/type/validate.ts:379:26    - Unknown word (covariant)  -- / a valid subtype. (covariant)
src/type/validate.ts:571:14    - Unknown word (redundantly) -- // are not redundantly reported.
src/type/validate.ts:574:43    - Unknown word (meaningful)  -- nodes used to produce meaningful errors
src/type/validate.ts:57:53     - Unknown word (fact)       -- provided value is in fact a GraphQLSchema.
src/type/validate.ts:582:18    - Unknown word (straight)    -- // This does a straight-forward DFS to find
src/type/validate.ts:583:55    - Unknown word (continues)   -- cycle was found but continues to explore
src/type/validate.ts:583:68    - Unknown word (explore)     -- found but continues to explore
src/type/validate.ts:65:27     - Unknown word (producing)  -- Validate the schema, producing a list of errors.
src/utilities/TypeInfo.ts:147:12    - Unknown word (assumptions) -- // any assumptions of a valid schema to
src/utilities/TypeInfo.ts:302:4     - Unknown word (statically)  -- * statically evaluated environment
src/utilities/TypeInfo.ts:62:19     - Unknown word (somewhere)  -- * beginning somewhere other than documents
src/utilities/__tests__/TypeInfo-test.ts:34:8      - Unknown word (Alien)      -- type Alien {
src/utilities/__tests__/TypeInfo-test.ts:351:16    - Unknown word (traversals) -- it('supports traversals of input values', (
src/utilities/__tests__/TypeInfo-test.ts:40:5      - Unknown word (alien)      -- alien: Alien
src/utilities/__tests__/astFromValue-test.ts:249:7     - Unknown word (GOODBYE)    -- GOODBYE: {},
src/utilities/__tests__/astFromValue-test.ts:250:7     - Unknown word (COMPLEX)    -- COMPLEX: { value: complexValue
src/utilities/__tests__/astFromValue-test.ts:315:21    - Unknown word (singletons) -- it('converts list singletons', () => {
src/utilities/__tests__/astFromValue-test.ts:72:36     - Unknown word (coercing)   -- spec does not allow coercing non-integer values to
src/utilities/__tests__/buildASTSchema-test.ts:100:7     - Unknown word (Ignores)       -- it('Ignores non-type system definitions
src/utilities/__tests__/buildASTSchema-test.ts:1044:53   - Unknown word (silently)      -- desired behavior to just silently ignore override
src/utilities/__tests__/buildASTSchema-test.ts:1045:25   - Unknown word (documenting)   -- // attempts so just documenting it here.
src/utilities/__tests__/buildASTSchema-test.ts:176:17    - Unknown word (agree)         -- """Do you agree that this is the most
src/utilities/__tests__/buildASTSchema-test.ts:176:45    - Unknown word (creative)      -- that this is the most creative schema ever?"""
src/utilities/__tests__/buildASTSchema-test.ts:187:14    - Unknown word (knows)         -- """Who knows what inside this scalar
src/utilities/__tests__/buildASTSchema-test.ts:188:14    - Unknown word (Mystery)       -- scalar MysteryScalar
src/utilities/__tests__/buildASTSchema-test.ts:203:18    - Unknown word (Hole)          -- union BlackHole
src/utilities/__tests__/buildASTSchema-test.ts:214:17    - Unknown word (great)         -- """What a great type"""
src/utilities/__tests__/buildASTSchema-test.ts:216:27    - Unknown word (boot)          -- """And a field to boot"""
src/utilities/__tests__/buildASTSchema-test.ts:223:7     - Unknown word (Maintains)     -- it('Maintains @include, @skip & @specifiedB
src/utilities/__tests__/buildASTSchema-test.ts:238:7     - Unknown word (Overriding)    -- it('Overriding directives excludes
src/utilities/__tests__/buildASTSchema-test.ts:261:25    - Unknown word (maintains)     -- it('Adding directives maintains @include, @skip, @deprecated
src/utilities/__tests__/buildASTSchema-test.ts:261:7     - Unknown word (Adding)        -- it('Adding directives maintains
src/utilities/__tests__/buildASTSchema-test.ts:47:39     - Unknown word (going)      -- does a full cycle of going from a string with the
src/utilities/__tests__/buildASTSchema-test.ts:48:37     - Unknown word (materializing) -- parsed in a schema AST, materializing that schema AST into
src/utilities/__tests__/buildASTSchema-test.ts:49:46     - Unknown word (printing)      -- aphQLSchema, and then finally printing that object into the
src/utilities/__tests__/buildASTSchema-test.ts:574:12    - Unknown word (Concrete)      -- type Concrete implements Interface
src/utilities/__tests__/buildASTSchema-test.ts:626:42    - Unknown word (Terrible)      -- deprecated(reason: "Terrible reasons")
src/utilities/__tests__/buildASTSchema-test.ts:637:42    - Unknown word (Because)       -- deprecated(reason: "Because I said so")
src/utilities/__tests__/buildASTSchema-test.ts:637:52    - Unknown word (said)          -- deprecated(reason: "Because I said so")
src/utilities/__tests__/buildClientSchema-test.ts:196:27    - Unknown word (Friendly)   -- type Dog implements Friendly {
src/utilities/__tests__/buildClientSchema-test.ts:201:21    - Unknown word (friend)     -- """The best friend of this friendly thing
src/utilities/__tests__/buildClientSchema-test.ts:336:11    - Unknown word (food)       -- const foodEnum = new GraphQLEnumType
src/utilities/__tests__/buildClientSchema-test.ts:338:21    - Unknown word (Varieties)  -- description: 'Varieties of food stuffs',
src/utilities/__tests__/buildClientSchema-test.ts:338:39    - Unknown word (stuffs)     -- 'Varieties of food stuffs',
src/utilities/__tests__/buildClientSchema-test.ts:340:9     - Unknown word (VEGETABLES) -- VEGETABLES: {
src/utilities/__tests__/buildClientSchema-test.ts:341:40    - Unknown word (vegetables) -- description: 'Foods that are vegetables.',
src/utilities/__tests__/buildClientSchema-test.ts:344:9     - Unknown word (FRUITS)     -- FRUITS: {
src/utilities/__tests__/buildClientSchema-test.ts:347:9     - Unknown word (OILS)       -- OILS: {
src/utilities/__tests__/buildClientSchema-test.ts:349:35    - Unknown word (fatty)      -- deprecationReason: 'Too fatty',
src/utilities/__tests__/buildClientSchema-test.ts:358:27    - Unknown word (Repeats)    -- description: 'Repeats the arg you give it
src/utilities/__tests__/buildClientSchema-test.ts:358:47    - Unknown word (give)       -- Repeats the arg you give it',
src/utilities/__tests__/buildClientSchema-test.ts:380:63    - Unknown word (mirrors)    -- only values, so `value` mirrors `name`,
src/utilities/__tests__/buildClientSchema-test.ts:491:22    - Unknown word (shiny)      -- """This is a shiny new argument"""
src/utilities/__tests__/buildClientSchema-test.ts:499:15    - Unknown word (rosy)       -- """So rosy"""
src/utilities/__tests__/buildClientSchema-test.ts:502:15    - Unknown word (grassy)     -- """So grassy"""
src/utilities/__tests__/buildClientSchema-test.ts:505:15    - Unknown word (calming)    -- """So calming"""
src/utilities/__tests__/buildClientSchema-test.ts:508:15    - Unknown word (sickening)  -- """So sickening"""
src/utilities/__tests__/buildClientSchema-test.ts:509:49    - Unknown word (fashion)    -- reason: "No longer in fashion")
src/utilities/__tests__/buildClientSchema-test.ts:509:9     - Unknown word (MAUVE)      -- MAUVE @deprecated(reason:
src/utilities/__tests__/buildClientSchema-test.ts:649:153   - Unknown word (alongside)  -- errors" was returned alongside: null.',
src/utilities/__tests__/buildClientSchema-test.ts:906:10    - Unknown word (Decorated)  -- 'Decorated type deeper than introspectio
src/utilities/__tests__/buildClientSchema-test.ts:935:13    - Unknown word (prevents)   -- describe('prevents infinite recursion on
src/utilities/__tests__/coerceInputValue-test.ts:107:30    - Unknown word (satisfy)    -- expectValue(result).to.satisfy(Number.isNaN);
src/utilities/__tests__/coerceInputValue-test.ts:151:30    - Unknown word (misspelled) -- returns an error for misspelled enum value', () =>
src/utilities/__tests__/coerceInputValue-test.ts:16:11     - Unknown word (Coerce)     -- interface CoerceResult {
src/utilities/__tests__/coerceInputValue-test.ts:264:46    - Unknown word (bart)       -- coerceValue({ foo: 123, bart: 123 }, TestInputObject
src/utilities/__tests__/concatAST-test.ts:13:7      - Unknown word (concatenates) -- it('concatenates two ASTs together',
src/utilities/__tests__/extendSchema-test.ts:1157:22   - Unknown word (replacing)  -- it('does not allow replacing a default directive
src/utilities/__tests__/extendSchema-test.ts:1164:72   - Unknown word (redefined)  -- schema. It cannot be redefined.',
src/utilities/__tests__/extendSchema-test.ts:155:17    - Unknown word (Twice)      -- const extendTwiceAST = parse(`
src/utilities/__tests__/extendSchema-test.ts:204:15    - Unknown word (unions)     -- it('extends unions by adding new types
src/utilities/__tests__/extendSchema-test.ts:375:13    - Unknown word (MORE)       -- ONE_MORE_NEW_VALUE
src/utilities/__tests__/extendSchema-test.ts:555:7     - Unknown word (adds)       -- it('adds new unused types',
src/utilities/__tests__/extendSchema-test.ts:839:9     - Unknown word (ANOTHER)    -- ANOTHER_NEW_VALUE
src/utilities/__tests__/findBreakingChanges-test.ts:1152:23   - Unknown word (dangerous)  -- it('should find all dangerous changes', () => {
src/utilities/__tests__/findBreakingChanges-test.ts:1164:20   - Unknown word (Gains)      -- type TypeThatGainsInterface1
src/utilities/__tests__/findBreakingChanges-test.ts:656:24    - Unknown word (Loses)      -- enum EnumTypeThatLosesAValue {
src/utilities/__tests__/findBreakingChanges-test.ts:663:20    - Unknown word (Loose)      -- type TypeThatLooseInterface1 implements
src/utilities/__tests__/findBreakingChanges-test.ts:68:27     - Unknown word (Becomes)    -- scalar TypeWasScalarBecomesEnum
src/utilities/__tests__/findBreakingChanges-test.ts:769:44    - Unknown word (REPEATABLE) -- BreakingChangeType.DIRECTIVE_REPEATABLE_REMOVED,
src/utilities/__tests__/findBreakingChanges-test.ts:783:31    - Unknown word (Stays)      -- directive @DirectiveThatStays on FIELD_DEFINITION
src/utilities/__tests__/findBreakingChanges-test.ts:798:40    - Unknown word (implicitly) -- detect if a directive was implicitly removed', () => {
src/utilities/__tests__/getOperationAST-test.ts:29:20     - Unknown word (ambiguous)  -- it('Does not get ambiguous unnamed operation',
src/utilities/__tests__/getOperationAST-test.ts:47:20     - Unknown word (misnamed)   -- it('Does not get misnamed operation', () => {
src/utilities/__tests__/printSchema-test.ts:26:16     - Unknown word (Printed)    -- function expectPrintedSchema(schema: GraphQLSchema
src/utilities/__tests__/printSchema-test.ts:279:7     - Unknown word (Omits)      -- it('Omits schema of common names
src/utilities/__tests__/printSchema-test.ts:398:13    - Unknown word (Hierarchical) -- it('Print Hierarchical Interface', () => {
src/utilities/__tests__/printSchema-test.ts:646:35    - Unknown word (awesome)      -- description: 'This field is awesome',
src/utilities/__tests__/separateOperations-test.ts:112:7     - Unknown word (survives)    -- it('survives circular dependencies
src/utilities/__tests__/separateOperations-test.ts:14:40     - Unknown word (maintaining) -- one AST into multiple, maintaining document order', ()
src/utilities/__tests__/separateOperations-test.ts:14:7      - Unknown word (separates)  -- it('separates one AST into multiple
src/utilities/__tests__/separateOperations-test.ts:162:7     - Unknown word (distinguish) -- it('distinguish query and fragment names
src/utilities/__tests__/separateOperations-test.ts:165:16    - Unknown word (Clash)       -- ...NameClash
src/utilities/__tests__/stripIgnoredCharacters-fuzz.ts:23:7      - Unknown word (strips)     -- it('strips ignored characters inside
src/utilities/__tests__/stripIgnoredCharacters-fuzz.ts:39:13     - Unknown word (stripped)   -- const strippedValue = lexValue(stripIgnoredC
src/utilities/__tests__/stripIgnoredCharacters-test.ts:161:18    - Unknown word (parsable)   -- it('strips non-parsable document', () => {
src/utilities/__tests__/stripIgnoredCharacters-test.ts:272:52    - Unknown word (below)      -- that is handled in the below test
src/utilities/__tests__/stripIgnoredCharacters-test.ts:70:16     - Unknown word (Stripped)   -- function expectStripped(docString: string)
src/utilities/__tests__/stripIgnoredCharacters-test.ts:95:7      - Unknown word (Stay)       -- toStayTheSame(): void {
src/utilities/__tests__/valueFromAST-test.ts:133:7     - Unknown word (coerces)    -- it('coerces to null unless non-null
src/utilities/__tests__/valueFromAST-test.ts:264:26    - Unknown word (singleton)  -- / do not expect the singleton wrapping behavior for
src/utilities/__tests__/valueFromAST-test.ts:271:37    - Unknown word (unprovided) -- input object fields for unprovided variables', () => {
src/utilities/astFromValue.ts:102:50    - Unknown word (converting) -- represented value before converting into an AST.
src/utilities/astFromValue.ts:108:8     - Unknown word (Others)     -- // Others serialize based on their
src/utilities/astFromValue.ts:80:6      - Unknown word (Populate)   -- // Populate the fields of the input
src/utilities/buildASTSchema.ts:64:63     - Unknown word (actionable) -- ) will produce more actionable results.
src/utilities/buildClientSchema.ts:123:6     - Unknown word (preferring) -- // preferring cached instances before
src/utilities/buildClientSchema.ts:176:17    - Unknown word (Properly)   -- // FIXME: Properly type IntrospectionType
src/utilities/buildClientSchema.ts:177:61    - Unknown word (exhaustiveness) -- typescript-eslint/switch-exhaustiveness-check
src/utilities/buildClientSchema.ts:354:15    - Unknown word (Introspections) -- inputValueIntrospections: ReadonlyArray<IntrospectionI
src/utilities/buildClientSchema.ts:59:20     - Unknown word (mechanisms) -- * server-internal mechanisms.
src/utilities/coerceInputValue.ts:72:8      - Unknown word (Explicitly) -- // Explicitly return the value null
src/utilities/concatAST.ts:6:4       - Unknown word (concatenate) -- * concatenate the ASTs together into
src/utilities/concatAST.ts:7:54      - Unknown word (conceptual)  -- together represent one conceptual application.
src/utilities/extendSchema.ts:101:21    - Unknown word (effectively) -- * extended without effectively making an entire copy
src/utilities/extendSchema.ts:102:8     - Unknown word (late)        -- * too late if subgraphs remain
src/utilities/extendSchema.ts:104:19    - Unknown word (copies)      -- * This algorithm copies the provided schema
src/utilities/extendSchema.ts:105:44    - Unknown word (remains)     -- The original schema remains unaltered.
src/utilities/extendSchema.ts:196:14    - Unknown word (incorporate) -- // Then, incorporate schema definition and
src/utilities/extendSchema.ts:216:6     - Unknown word (Below)       -- // Below are functions used for
src/utilities/extendSchema.ts:98:11     - Unknown word (unaltered)  -- * remain unaltered.
src/utilities/extendSchema.ts:98:4      - Unknown word (remain)     -- * remain unaltered.
src/utilities/findBreakingChanges.ts:414:21    - Unknown word (looking)    -- // Since we looking only for client's observable
src/utilities/findBreakingChanges.ts:79:24     - Unknown word (covered)    -- of breaking changes covered by the other functions
src/utilities/getOperationAST.ts:20:44     - Unknown word (Upon)       -- defined in the document. Upon encountering the second
src/utilities/getOperationRootType.ts:12:4      - Unknown word (Extracts)   -- * Extracts the root type of the
src/utilities/index.ts:104:66    - Unknown word (deduced)    -- and types that can be deduced from it.
src/utilities/introspectionFromSchema.ts:19:4      - Unknown word (relationships) -- * relationships, but do not need to
src/utilities/introspectionFromSchema.ts:22:58     - Unknown word (comparisons)   -- instance when doing schema comparisons.
src/utilities/printSchema.ts:100:20    - Unknown word (convention) -- * a common naming convention:
src/utilities/printSchema.ts:40:15     - Unknown word (Filtered)   -- return printFilteredSchema(
src/utilities/printSchema.ts:99:55     - Unknown word (manner)     -- can be named in any manner, however there is
src/utilities/separateOperations.ts:15:4      - Unknown word (refers)     -- * refers to.
src/utilities/separateOperations.ts:46:14     - Unknown word (Transitive) -- collectTransitiveDependencies(dependencies
src/utilities/separateOperations.ts:49:8      - Unknown word (Provides)   -- // Provides the empty string for
src/utilities/separateOperations.ts:53:11     - Unknown word (retain)     -- // to retain the same order as the
src/utilities/stripIgnoredCharacters.ts:16:63     - Unknown word (neighboring) -- delimiter character between neighboring
src/utilities/stripIgnoredCharacters.ts:19:10     - Unknown word (guaranteed)  -- * It is guaranteed that both input and
src/utilities/stripIgnoredCharacters.ts:23:46     - Unknown word (stay)        -- guaranteed that it will stay the same between different
src/utilities/typeComparators.ts:108:25    - Unknown word (latter)      -- // Determine if the latter type is a possible concrete
src/utilities/typeComparators.ts:108:72    - Unknown word (former)      -- concrete type of the former.
src/utilities/typeComparators.ts:15:6      - Unknown word (Equivalent) -- // Equivalent types are equal.
src/utilities/typeComparators.ts:83:44     - Unknown word (concrete)   -- the Sets of possible concrete types for each intersect
src/utilities/typeComparators.ts:83:68     - Unknown word (intersect)  -- concrete types for each intersect.
src/utilities/typeComparators.ts:88:21     - Unknown word (commutative) -- * This function is commutative.
src/utilities/typedQueryDocumentNode.ts:10:61     - Unknown word (nominal)    -- proper way to enforce nominal typing
src/utilities/typedQueryDocumentNode.ts:13:43     - Unknown word (whatever)   -- Result is assignable to whatever you pass your result
src/utilities/valueFromAST.ts:24:52     - Unknown word (validly)    -- the value could not be validly coerced according to
src/utilities/valueFromAST.ts:45:8      - Unknown word (Importantly) -- // Importantly, this is different from
src/utilities/valueFromAST.ts:59:27     - Unknown word (further)     -- Note: This does no further checking that this variable
src/utilities/valueFromAST.ts:60:13     - Unknown word (assumes)     -- // This assumes that this query has
src/validation/__tests__/ExecutableDefinitionsRule-test.ts:5:43      - Unknown word (harness)    -- ectValidationErrors } from './harness';
src/validation/__tests__/FieldsOnCorrectTypeRule-test.ts:110:25    - Unknown word (Again)      -- fragment typeKnownAgain on Pet {
src/validation/__tests__/FieldsOnCorrectTypeRule-test.ts:232:25    - Unknown word (Implementors) -- fragment definedOnImplementorsButNotInterface on Pet
src/validation/__tests__/FieldsOnCorrectTypeRule-test.ts:267:37    - Unknown word (Queried)      -- definedOnImplementorsQueriedOnUnion on CatOrDog
src/validation/__tests__/FieldsOnCorrectTypeRule-test.ts:342:14    - Unknown word (shows)        -- it('Only shows one set of suggestions
src/validation/__tests__/FieldsOnCorrectTypeRule-test.ts:35:5      - Unknown word (bark)       -- barkVolume: Int
src/validation/__tests__/FieldsOnCorrectTypeRule-test.ts:367:40    - Unknown word (inheritance)  -- suggestions based on inheritance order', () => {
src/validation/__tests__/FieldsOnCorrectTypeRule-test.ts:393:19    - Unknown word (Animal)       -- interface Animal { name: String }
src/validation/__tests__/FieldsOnCorrectTypeRule-test.ts:396:19    - Unknown word (Canine)       -- interface Canine implements Animal &
src/validation/__tests__/FieldsOnCorrectTypeRule-test.ts:399:19    - Unknown word (Feline)       -- interface Feline implements Animal &
src/validation/__tests__/FieldsOnCorrectTypeRule-test.ts:92:7      - Unknown word (Lying)      -- it('Lying alias selection', (
src/validation/__tests__/FieldsOnCorrectTypeRule-test.ts:94:16     - Unknown word (lying)      -- fragment lyingAliasSelection on Dog
src/validation/__tests__/KnownArgumentNamesRule-test.ts:273:24    - Unknown word (overridden) -- it('unknown arg on overridden standard directive'
src/validation/__tests__/KnownDirectivesRule-test.ts:134:17    - Unknown word (placed)     -- it('with well placed directives', () =>
src/validation/__tests__/KnownTypeNamesRule-test.ts:56:24     - Unknown word (Jumbled)    -- query Foo($var: [JumbledUpLetters!]!) {
src/validation/__tests__/KnownTypeNamesRule-test.ts:56:33     - Unknown word (Letters)    -- Foo($var: [JumbledUpLetters!]!) {
src/validation/__tests__/KnownTypeNamesRule-test.ts:62:29     - Unknown word (Peat)       -- fragment PetFields on Peat {
src/validation/__tests__/LoneAnonymousOperationRule-test.ts:15:49     - Unknown word (alone)      -- Anonymous operation must be alone', () => {
src/validation/__tests__/LoneAnonymousOperationRule-test.ts:24:11     - Unknown word (anon)       -- it('one anon operation', () => {
src/validation/__tests__/LoneSchemaDefinitionRule-test.ts:86:7      - Unknown word (redefine)   -- it('redefine schema in schema extension
src/validation/__tests__/MaxIntrospectionDepthRule-test.ts:540:15    - Unknown word (infinitely) -- it("doesn't infinitely recurse on fragment
src/validation/__tests__/NoFragmentCyclesRule-test.ts:112:46    - Unknown word (opposite)   -- itself indirectly reports opposite order', () => {
src/validation/__tests__/NoFragmentCyclesRule-test.ts:23:7      - Unknown word (spreading)  -- it('spreading twice is not circular
src/validation/__tests__/NoFragmentCyclesRule-test.ts:30:23     - Unknown word (indirectly) -- it('spreading twice indirectly is not circular', (
src/validation/__tests__/NoFragmentCyclesRule-test.ts:45:25     - Unknown word (Anon)       -- fragment spreadsInAnon on Pet {
src/validation/__tests__/NoSchemaIntrospectionCustomRule-test.ts:32:21     - Unknown word (Prohibit)   -- describe('Validate: Prohibit introspection queries
src/validation/__tests__/OverlappingFieldsCanBeMergedRule-test.ts:1003:9    - Unknown word (compares)    -- it('compares deep types including
src/validation/__tests__/OverlappingFieldsCanBeMergedRule-test.ts:1137:33   - Unknown word (transitively) -- not infinite loop on transitively recursive fragment'
src/validation/__tests__/OverlappingFieldsCanBeMergedRule-test.ts:119:35    - Unknown word (overlapping) -- aliases allowed on non-overlapping fields', () => {
src/validation/__tests__/OverlappingFieldsCanBeMergedRule-test.ts:120:71    - Unknown word (thus)        -- a "Dog" and a "Cat", thus
src/validation/__tests__/OverlappingFieldsCanBeMergedRule-test.ts:134:13    - Unknown word (masking)     -- it('Alias masking direct field access
src/validation/__tests__/OverlappingFieldsCanBeMergedRule-test.ts:136:21    - Unknown word (Masking)     -- fragment aliasMaskingDirectFieldAccess on
src/validation/__tests__/OverlappingFieldsCanBeMergedRule-test.ts:46:21     - Unknown word (Identical)  -- fragment mergeIdenticalFields on Dog {
src/validation/__tests__/OverlappingFieldsCanBeMergedRule-test.ts:593:34    - Unknown word (unambiguous) -- return types must be unambiguous', () => {
src/validation/__tests__/OverlappingFieldsCanBeMergedRule-test.ts:597:9     - Unknown word (unrelated)   -- unrelatedField: String
src/validation/__tests__/OverlappingFieldsCanBeMergedRule-test.ts:661:46    - Unknown word (Thus)        -- future to allow this. Thus it is invalid.
src/validation/__tests__/OverlappingFieldsCanBeMergedRule-test.ts:688:27    - Unknown word (shapes)      -- it('compatible return shapes on different return
src/validation/__tests__/OverlappingFieldsCanBeMergedRule-test.ts:713:9     - Unknown word (disallows)   -- it('disallows differing return types
src/validation/__tests__/OverlappingFieldsCanBeMergedRule-test.ts:90:14     - Unknown word (Differing)  -- // Note: Differing skip/include directives
src/validation/__tests__/OverlappingFieldsCanBeMergedRule-test.ts:91:53     - Unknown word (differing)  -- in conditions where differing runtime values
src/validation/__tests__/PossibleFragmentSpreadsRule-test.ts:22:13     - Unknown word (Being)      -- interface Being {
src/validation/__tests__/PossibleFragmentSpreadsRule-test.ts:251:57    - Unknown word (intelligent) -- rfaceWithinObject on Cat { ...intelligentFragment }
src/validation/__tests__/PossibleFragmentSpreadsRule-test.ts:42:13     - Unknown word (Intelligent) -- interface Intelligent {
src/validation/__tests__/PossibleTypeExtensionsRule-test.ts:74:7      - Unknown word (extending)  -- it('extending unknown type', () =
src/validation/__tests__/ScalarLeafsRule-test.ts:137:19    - Unknown word (having)     -- it('object type having only one selection'
src/validation/__tests__/ScalarLeafsRule-test.ts:158:17    - Unknown word (leverage)   -- // We can't leverage expectErrors since it
src/validation/__tests__/ScalarLeafsRule-test.ts:159:66    - Unknown word (technically) -- this because this is technically
src/validation/__tests__/ScalarLeafsRule-test.ts:22:28     - Unknown word (leafs)      -- describe('Validate: Scalar leafs', () => {
src/validation/__tests__/SingleFieldSubscriptionsRule-test.ts:179:12    - Unknown word (Spam)       -- ...SpamEmails
src/validation/__tests__/SingleFieldSubscriptionsRule-test.ts:200:22    - Unknown word (Infinite)   -- subscription NoInfiniteLoop {
src/validation/__tests__/SingleFieldSubscriptionsRule-test.ts:231:15    - Unknown word (Existent)   -- ...NonExistentFragment
src/validation/__tests__/ValuesOfCorrectTypeRule-test.ts:1123:51   - Unknown word (specify)    -- Object "OneOfInput" must specify exactly one key.',
src/validation/__tests__/ValuesOfCorrectTypeRule-test.ts:229:9     - Unknown word (Unquoted)   -- it('Unquoted String into String'
src/validation/__tests__/harness.ts:32:5      - Unknown word (HEEL)       -- HEEL
src/validation/__tests__/harness.ts:41:9      - Unknown word (Know)       -- doesKnowCommand(dogCommand: DogCommand
src/validation/__tests__/harness.ts:42:12     - Unknown word (Trained)    -- isHouseTrained(atOtherHomes: Boolean
src/validation/__tests__/harness.ts:42:27     - Unknown word (Homes)      -- isHouseTrained(atOtherHomes: Boolean = true): Boolean
src/validation/__tests__/harness.ts:61:5      - Unknown word (relatives)  -- relatives: [Human]
src/validation/__tests__/harness.ts:68:5      - Unknown word (SPOTTED)    -- SPOTTED
src/validation/__tests__/harness.ts:87:8      - Unknown word (Complicated) -- type ComplicatedArgs {
src/validation/__tests__/harness.ts:89:12     - Unknown word (Coercion)    -- # TODO Coercion
src/validation/__tests__/harness.ts:90:15     - Unknown word (Nulls)       -- # TODO NotNulls
src/validation/index.ts:45:35     - Unknown word (Merging)    -- Section: "Field Selection Merging"
src/validation/index.ts:51:28     - Unknown word (Optionality) -- Spec Section: "Argument Optionality"
src/validation/index.ts:60:28     - Unknown word (Uniqueness)  -- Spec Section: "Argument Uniqueness"
src/validation/index.ts:78:31     - Unknown word (Correctness) -- Section: "Values Type Correctness"
src/validation/rules/FieldsOnCorrectTypeRule.ts:41:40     - Unknown word (lets)       -- field doesn't exist, lets look for suggestions
src/validation/rules/FieldsOnCorrectTypeRule.ts:51:52     - Unknown word (perhaps)    -- suggested types, then perhaps this was a typo?
src/validation/rules/FieldsOnCorrectTypeRule.ts:51:71     - Unknown word (typo)       -- then perhaps this was a typo?
src/validation/rules/KnownDirectivesRule.ts:23:23     - Unknown word (positioned) -- schema and legally positioned.
src/validation/rules/KnownTypeNamesRule.ts:25:58     - Unknown word (specifically) -- if referenced types (specifically
src/validation/rules/MaxIntrospectionDepthRule.ts:37:10     - Unknown word (Rather)     -- // Rather than following an immutable
src/validation/rules/MaxIntrospectionDepthRule.ts:39:25     - Unknown word (approach)   -- // take a mutable approach for efficiency's sake
src/validation/rules/MaxIntrospectionDepthRule.ts:39:38     - Unknown word (efficiency's) -- mutable approach for efficiency's sake. Importantly visiting
src/validation/rules/MaxIntrospectionDepthRule.ts:40:28     - Unknown word (fine)         -- / fragment twice is fine, so long as you don
src/validation/rules/MaxIntrospectionDepthRule.ts:58:44     - Unknown word (reassign)     -- disable-next-line no-param-reassign
src/validation/rules/NoFragmentCyclesRule.ts:26:16     - Unknown word (Frags)      -- const visitedFrags: ObjMap<boolean> = Object
src/validation/rules/NoUnusedFragmentsRule.ts:38:45     - Unknown word (Recursively) -- fragment of context.getRecursivelyReferencedFragments(
src/validation/rules/OverlappingFieldsCanBeMergedRule.ts:118:14    - Unknown word (occur)        -- * Conflicts occur when two fields exist
src/validation/rules/OverlappingFieldsCanBeMergedRule.ts:129:29    - Unknown word (finding)      -- collected set of fields, finding any conflicts between
src/validation/rules/OverlappingFieldsCanBeMergedRule.ts:135:4     - Unknown word (comparison)   -- * comparison is made "between" the
src/validation/rules/OverlappingFieldsCanBeMergedRule.ts:141:12    - Unknown word (comparing)    -- * D) When comparing "between" a set of fields
src/validation/rules/OverlappingFieldsCanBeMergedRule.ts:147:37    - Unknown word (referring)    -- fragment (recursively referring to step D).
src/validation/rules/OverlappingFieldsCanBeMergedRule.ts:244:6     - Unknown word (Mutually)     -- areMutuallyExclusive: boolean,
src/validation/rules/OverlappingFieldsCanBeMergedRule.ts:519:54    - Unknown word (mutually)     -- collection is never mutually exclusive
src/validation/rules/OverlappingFieldsCanBeMergedRule.ts:536:71    - Unknown word (traverses)    -- because this validator traverses
src/validation/rules/OverlappingFieldsCanBeMergedRule.ts:54:36     - Unknown word (distinct)   -- either correspond to distinct response names or can
src/validation/rules/OverlappingFieldsCanBeMergedRule.ts:55:12     - Unknown word (ambiguity)  -- * without ambiguity.
src/validation/rules/OverlappingFieldsCanBeMergedRule.ts:593:56    - Unknown word (permit)       -- then it is safe to permit them to diverge
src/validation/rules/OverlappingFieldsCanBeMergedRule.ts:593:71    - Unknown word (diverge)      -- safe to permit them to diverge
src/validation/rules/OverlappingFieldsCanBeMergedRule.ts:599:19    - Unknown word (safely)       -- // thus may not safely diverge.
src/validation/rules/OverlappingFieldsCanBeMergedRule.ts:63:42     - Unknown word (Comparisons) -- other for conflicts. Comparisons made be made many times
src/validation/rules/OverlappingFieldsCanBeMergedRule.ts:64:28     - Unknown word (dramatically) -- so memoizing this can dramatically improve the performance
src/validation/rules/OverlappingFieldsCanBeMergedRule.ts:703:64    - Unknown word (simultaneously) -- not apply to a value simultaneously.
src/validation/rules/OverlappingFieldsCanBeMergedRule.ts:72:43     - Unknown word (asked)        -- Selection sets may be asked for this information
src/validation/rules/OverlappingFieldsCanBeMergedRule.ts:845:4     - Unknown word (matters)        -- * matters.
src/validation/rules/OverlappingFieldsCanBeMergedRule.ts:847:51    - Unknown word (flagging)       -- for has/set to allow flagging the pair as
src/validation/rules/OverlappingFieldsCanBeMergedRule.ts:848:14    - Unknown word (strongly)       -- * weakly or strongly present within the collection
src/validation/rules/OverlappingFieldsCanBeMergedRule.ts:848:4     - Unknown word (weakly)         -- * weakly or strongly present
src/validation/rules/OverlappingFieldsCanBeMergedRule.ts:878:13    - Unknown word (matter)         -- * does not matter.
src/validation/rules/VariablesInAllowedPositionRule.ts:81:19     - Unknown word (considering) -- * which includes considering if default values exist
src/validation/rules/custom/NoDeprecatedCustomRule.ts:19:4      - Unknown word (necessarily) -- * necessarily to forbid their use
src/validation/rules/custom/NoSchemaIntrospectionCustomRule.ts:19:26     - Unknown word (practices)  -- does not reflect best practices and should only be done
src/validation/rules/custom/NoSchemaIntrospectionCustomRule.ts:19:63     - Unknown word (absolutely) -- should only be done if absolutely necessary.
src/validation/specifiedRules.ts:73:22     - Unknown word (aren't)      -- * Technically these aren't part of the spec but
src/validation/specifiedRules.ts:73:4      - Unknown word (Technically) -- * Technically these aren't part of
src/validation/specifiedRules.ts:73:68     - Unknown word (encouraged)  -- but they are strongly encouraged
src/validation/specifiedRules.ts:81:49     - Unknown word (adjusted)    -- in this list has been adjusted to lead to the
src/validation/specifiedRules.ts:81:61     - Unknown word (lead)        -- has been adjusted to lead to the
src/validation/validate.ts:32:23     - Unknown word (pathologically) -- Attackers can send pathologically invalid queries to induce
src/validation/validate.ts:32:4      - Unknown word (Attackers)  -- * Attackers can send pathologically
src/validation/validate.ts:32:57     - Unknown word (induce)         -- ologically invalid queries to induce a DoS attack,
src/validation/validate.ts:73:18     - Unknown word (specialized)    -- // This uses a specialized visitor which runs multiple
tsconfig.json:10:6      - Unknown word (isolated)   -- "isolatedModules": true,
tsconfig.json:12:11     - Unknown word (Consistent) -- "forceConsistentCasingInFileNames": true
tsconfig.json:12:21     - Unknown word (Casing)     -- "forceConsistentCasingInFileNames": true
website/css/globals.css:106:14    - Unknown word (maybe)      -- /* !* TODO: maybe add to nextra as option
website/css/globals.css:110:2     - Unknown word (mini)       -- .miniGraphiQL {
website/css/globals.css:111:44    - Unknown word (neutral)    -- border-2 dark:border-neutral-900 dark:!bg-neutral
website/css/globals.css:11:9      - Unknown word (prefers)    -- @media (prefers-color-scheme: dark)
website/css/globals.css:168:2     - Unknown word (donts)      -- .donts-images ul {
website/css/globals.css:186:25    - Unknown word (brand)      -- background: url('/img/brand/do.svg');
website/css/globals.css:190:31    - Unknown word (dont)       -- background: url('/img/brand/dont.svg');
website/css/globals.css:19:2      - Unknown word (conf)       -- .conf-hero {
website/css/globals.css:1:2       - Unknown word (tailwind)   -- @tailwind base;
website/css/globals.css:20:22     - Unknown word (gradient)   -- background: linear-gradient(
website/css/globals.css:396:7     - Unknown word (evolution)  -- .type-evolution {
website/css/globals.css:399:8     - Unknown word (Evolve)     -- #typeEvolveView {
website/css/globals.css:39:2      - Unknown word (nextra)     -- .nextra-logo {
website/css/globals.css:60:10     - Unknown word (rounded)    -- @apply rounded-none;
website/css/globals.css:6:5       - Unknown word (foreground) -- --foreground-rgb: 0, 0, 0;
website/icons/discord.svg:1:61      - Unknown word (fill)       -- www.w3.org/2000/svg" fill="#5865f2">
website/icons/github.svg:2:3       - Unknown word (width)      -- width="30"
website/icons/github.svg:8:16      - Unknown word (evenodd)    -- fill-rule="evenodd"
website/icons/github.svg:9:5       - Unknown word (clip)       -- clip-rule="evenodd"
website/icons/graphql-wordmark.svg:12:4      - Unknown word (circle)     -- <circle cx="14.41" cy="29.4
website/icons/graphql-wordmark.svg:2:4       - Unknown word (style)      -- <style>
website/icons/index.ts:3:28      - Unknown word (Logo)       -- { default as GraphQLLogo } from './graphql.svg
website/icons/index.ts:4:59      - Unknown word (wordmark)   -- ordmarkLogo } from './graphql-wordmark.svg';
website/icons/index.ts:5:49      - Unknown word (stackoverflow) -- StackOverflowIcon } from './stackoverflow.svg';
website/next.config.mjs:18:15     - Unknown word (Loader)     -- const fileLoaderRule = config.module
website/next.config.mjs:32:5      - Unknown word (loader)     -- loader: 'custom',
website/next.config.mjs:36:42     - Unknown word (optimizer)  -- ['next-image-export-optimizer'],
website/next.config.mjs:38:20     - Unknown word (Optimizer)  -- nextImageExportOptimizer_imageFolderPath: 'public
website/next.config.mjs:41:35     - Unknown word (Pictures)   -- nextImageExportOptimizer_storePicturesInWEBP: 'true',
website/next.config.mjs:43:34     - Unknown word (blurry)     -- you do not want to use blurry placeholder images,
website/next.config.mjs:5:3       - Unknown word (theme)      -- theme: 'nextra-theme-docs
website/package.json:15:19     - Unknown word (typography) -- "@tailwindcss/typography": "^0.5.10",
website/pages/_app.tsx:1:18      - Unknown word (Props)      -- import type { AppProps } from 'next/app';
website/pages/_app.tsx:7:3       - Unknown word (subsets)    -- subsets: ['latin'],
website/pages/_meta.ts:17:22     - Unknown word (Guides)     -- title: 'Advanced Guides',
website/pages/_meta.ts:19:4      - Unknown word (constructing) -- 'constructing-types': '',
website/pages/api-v16/error.mdx:17:4      - Unknown word (Overview)   -- ## Overview
website/pages/api-v16/error.mdx:5:45      - Unknown word (sidebar)    -- removed in Nextra 4, since sidebar title will take from
website/pages/api-v16/error.mdx:65:72     - Unknown word (Most)       -- occurred for debugging. Most
website/pages/api-v16/execution.mdx:22:26     - Unknown word (Executes)   -- `function execute` Executes a GraphQL request on
website/pages/api-v16/graphql-http.mdx:39:75     - Unknown word (extensive)  -- graphql-http) for more extensive documentation, including
website/pages/api-v16/graphql-http.mdx:9:264     - Unknown word (frameworks) -- handlers for well-known frameworks like [Express](https
website/pages/api-v16/graphql-http.mdx:9:6       - Unknown word (official)   -- The [official `graphql-http` package
website/pages/api-v16/graphql.mdx:9:55      - Unknown word (functionality) -- core subset of GraphQL functionality for creation
website/pages/api-v16/language.mdx:142:1     - Unknown word (rewind)     -- rewind or fast forward the
website/pages/api-v16/language.mdx:284:5     - Unknown word (sentinel)   -- The sentinel `BREAK` value described
website/pages/api-v16/language.mdx:99:8      - Unknown word (mostly)     -- but is mostly useful for clients who
website/pages/api-v16/utilities.mdx:122:63    - Unknown word (creates)    -- introspection query, creates and
website/pages/api-v16/utilities.mdx:128:11    - Unknown word (Representation) -- ## Schema Representation
website/pages/api-v16/utilities.mdx:136:221   - Unknown word (cheat)          -- this [schema language cheat sheet](https://wehavefaces
website/pages/api-v16/utilities.mdx:188:1     - Unknown word (disambiguate)   -- disambiguate between value primitives
website/pages/api-v16/utilities.mdx:219:33    - Unknown word (primarily)      -- for that type. This is primarily useful for validating
website/pages/api-v16/utilities.mdx:25:22     - Unknown word (reproduce)  -- information to reproduce a type system.
website/pages/api-v16/utilities.mdx:75:5      - Unknown word (Visitors)   -- ### Visitors
website/pages/authentication-and-express-middleware.mdx:100:130   - Unknown word (sacrificing) -- it's simple without sacrificing any future flexibility
website/pages/authentication-and-express-middleware.mdx:100:15    - Unknown word (familiar)    -- If you aren't familiar with any of these authenticat
website/pages/authentication-and-express-middleware.mdx:100:153   - Unknown word (flexibility) -- sacrificing any future flexibility.
website/pages/authentication-and-express-middleware.mdx:102:125   - Unknown word (practical)       -- you need to build a practical GraphQL API server.
website/pages/authentication-and-express-middleware.mdx:102:33    - Unknown word (linearly)    -- read through the docs linearly to get to this point
website/pages/authentication-and-express-middleware.mdx:102:64    - Unknown word (congratulations) -- to get to this point, congratulations! You now know everything
website/pages/authentication-and-express-middleware.mdx:12:27     - Unknown word (wanted)      -- example, let's say we wanted our server to log the
website/pages/authentication-and-express-middleware.mdx:8:46      - Unknown word (conjunction) -- Express middleware in conjunction with `graphql-http`
website/pages/authentication-and-express-middleware.mdx:98:97     - Unknown word (proves)      -- an auth token which proves what user is making
website/pages/basic-types.mdx:113:48    - Unknown word (browse)            -- node server.js` and browse to http://localhost
website/pages/basic-types.mdx:115:138   - Unknown word (learn)             -- you will also need to learn about [passing arguments
website/pages/basic-types.mdx:11:43     - Unknown word (legitimate) -- type is nullable - it's legitimate to return `null` as
website/pages/basic-types.mdx:15:26     - Unknown word (straightforwardly) -- of these types maps straightforwardly to JavaScript, so you
website/pages/basic-types.mdx:29:14     - Unknown word (Dice)              -- rollThreeDice: [Int]
website/pages/basic-types.mdx:29:5      - Unknown word (roll)              -- rollThreeDice: [Int]
website/pages/basic-types.mdx:36:43     - Unknown word (easy)              -- random() < 0.5 ? 'Take it easy' : 'Salvation lies within
website/pages/basic-types.mdx:36:52     - Unknown word (Salvation)         -- ? 'Take it easy' : 'Salvation lies within';
website/pages/basic-types.mdx:36:62     - Unknown word (lies)              -- it easy' : 'Salvation lies within';
website/pages/constructing-types.mdx:124:13    - Unknown word (particularly)     -- This can be particularly useful if you want to
website/pages/constructing-types.mdx:124:300   - Unknown word (cleanly)          -- types which don't map cleanly to ES6 classes and schema
website/pages/constructing-types.mdx:2:8       - Unknown word (Constructing) -- title: Constructing Types
website/pages/constructing-types.mdx:7:169     - Unknown word (programmatically) -- to construct a schema programmatically. You can do this using
website/pages/constructing-types.mdx:9:121     - Unknown word (solely)           -- and `Mutation` types solely using schema language
website/pages/defer-stream.mdx:2:8       - Unknown word (Enabling)   -- title: Enabling Defer & Stream
website/pages/getting-started.mdx:110:1     - Unknown word (Congratulations) -- Congratulations - you just executed
website/pages/getting-started.mdx:12:4      - Unknown word (Prerequisites) -- ## Prerequisites
website/pages/getting-started.mdx:14:60     - Unknown word (although)      -- have Node v6 installed, although the examples should
website/pages/getting-started.mdx:15:10     - Unknown word (guide)         -- For this guide, we won't use any language
website/pages/getting-started.mdx:19:119    - Unknown word (choose)        -- starters-znvgwr) - if you choose
website/pages/going-to-production.mdx:117:12    - Unknown word (vars)       -- "vars": {
website/pages/going-to-production.mdx:2:8       - Unknown word (Going)      -- title: Going to Production
website/pages/going-to-production.mdx:5:77      - Unknown word (slower)     -- production will cause slower performance and
website/pages/going-to-production.mdx:6:43      - Unknown word (goes)       -- size. Every bundler goes about these changes
website/pages/going-to-production.mdx:7:22      - Unknown word (ones)       -- out the most popular ones.
website/pages/going-to-production.mdx:93:9      - Unknown word (mangle)     -- mangle: {
website/pages/graphql-clients.mdx:22:149    - Unknown word (Insomnia)   -- graphql/graphiql), [Insomnia](https://github.com
website/pages/graphql-clients.mdx:22:206    - Unknown word (Postman)    -- getinsomnia/insomnia), and [Postman](https://www.postman
website/pages/graphql-clients.mdx:45:166    - Unknown word (Passing)    -- arguments as described in [Passing Arguments](/passing
website/pages/graphql-clients.mdx:45:321    - Unknown word (prefixed)   -- including a keyword prefixed with a dollar sign in
website/pages/graphql-clients.mdx:51:30     - Unknown word (Sides)      -- rollDice(numDice: Int!, numSides: Int): [Int]
website/pages/graphql-clients.mdx:58:5      - Unknown word (dice)       -- let dice = 3;
website/pages/graphql-clients.mdx:59:5      - Unknown word (sides)      -- let sides = 6;
website/pages/graphql-clients.mdx:5:179     - Unknown word (batching)   -- automatically handle batching, caching, and other
website/pages/graphql-clients.mdx:5:189     - Unknown word (caching)    -- utomatically handle batching, caching, and other features
website/pages/graphql-clients.mdx:5:83      - Unknown word (powerful)   -- API, there are more powerful clients like [Relay
website/pages/graphql-clients.mdx:61:9      - Unknown word (Roll)       -- query RollDice($dice: Int!, $sides
website/pages/graphql-clients.mdx:81:43     - Unknown word (idea)       -- variables is a good idea because it automatically
website/pages/graphql-clients.mdx:83:140    - Unknown word (grows)      -- as your application grows. You might want to start
website/pages/graphql-clients.mdx:83:239    - Unknown word (switching)  -- transport layer, and switching to a more complex client
website/pages/graphql-clients.mdx:83:90     - Unknown word (worth)      -- like Relay, but it's worth it to get more features
website/pages/index.mdx:10:100    - Unknown word (diffing)    -- utilities for schema-diffing, working with arguments
website/pages/index.mdx:7:7       - Unknown word (closely)    -- while closely following the Specification
website/pages/mutations-and-input-types.mdx:160:165   - Unknown word (mutates)    -- as the request that mutates it.
website/pages/mutations-and-input-types.mdx:164:1     - Unknown word (Naming)     -- Naming input types with `Input
website/pages/mutations-and-input-types.mdx:164:143   - Unknown word (slightly)   -- output type that are slightly different for a single
website/pages/mutations-and-input-types.mdx:166:56    - Unknown word (keeping)    -- implements this schema, keeping the data in memory:
website/pages/mutations-and-input-types.mdx:366:35    - Unknown word (andy)       -- eateMessage(input: { author: "andy", content: "hope is
website/pages/mutations-and-input-types.mdx:366:52    - Unknown word (hope)       -- author: "andy", content: "hope is a good thing" })
website/pages/mutations-and-input-types.mdx:372:26    - Unknown word (simplify)   -- can use variables to simplify mutation client logic
website/pages/mutations-and-input-types.mdx:50:151    - Unknown word (stored)     -- thing that the server stored. That way, if you modify
website/pages/mutations-and-input-types.mdx:67:319    - Unknown word (simpler)    -- To make your schema simpler, you can use “input
website/pages/mutations-and-input-types.mdx:7:34      - Unknown word (alters)     -- an API endpoint that alters data, like inserting
website/pages/mutations-and-input-types.mdx:7:52      - Unknown word (inserting)  -- that alters data, like inserting data into a database
website/pages/mutations-and-input-types.mdx:9:166     - Unknown word (simply)     -- GraphQL schema for this is simply:
website/pages/mutations-and-input-types.mdx:9:56      - Unknown word (anyone)     -- the day” server, where anyone can update the message
website/pages/object-types.mdx:111:1     - Unknown word (Instead)    -- Instead of a root-level resolver
website/pages/object-types.mdx:207:1     - Unknown word (Putting)    -- Putting this all together, here
website/pages/object-types.mdx:357:129   - Unknown word (nesting)    -- the object at once by nesting the GraphQL field names
website/pages/object-types.mdx:370:183   - Unknown word (subsequent) -- object, and then multiple subsequent API requests to find
website/pages/object-types.mdx:370:364   - Unknown word (simplifies) -- app run faster, and simplifies your client-side logic
website/pages/object-types.mdx:370:50    - Unknown word (advantages) -- types often provides advantages over a traditional REST
website/pages/object-types.mdx:372:25    - Unknown word (looked)     -- far, every API we've looked at is designed for returning
website/pages/object-types.mdx:57:11     - Unknown word (Rolls)      -- roll(numRolls: Int!): [Int]
website/pages/object-types.mdx:7:152     - Unknown word (perfect)    -- behavior. GraphQL is a perfect fit for this.
website/pages/oneof-input-objects.mdx:11:73     - Unknown word (strictly)    -- without sacrificing the strictly typed nature of our
website/pages/oneof-input-objects.mdx:11:88     - Unknown word (nature)      -- acrificing the strictly typed nature of our GraphQL Schema
website/pages/oneof-input-objects.mdx:23:5      - Unknown word (aisle)       -- aisleNumber: Int!
website/pages/oneof-input-objects.mdx:24:5      - Unknown word (shelf)       -- shelfNumber: Int!
website/pages/oneof-input-objects.mdx:25:15     - Unknown word (Shelf)       -- positionOnShelf: Int!
website/pages/oneof-input-objects.mdx:7:18      - Unknown word (behave)     -- Some inputs will behave differently depending
website/pages/oneof-input-objects.mdx:9:29      - Unknown word (introducing) -- tradeoff for this by introducing two arguments that are
website/pages/oneof-input-objects.mdx:9:8       - Unknown word (tradeoff)   -- make a tradeoff for this by introducing
website/pages/passing-arguments.mdx:15:76     - Unknown word (rolls)      -- general function that rolls `numDice` dice, each
website/pages/passing-arguments.mdx:184:143   - Unknown word (sided)      -- query to roll three six-sided dice:
website/pages/passing-arguments.mdx:194:107   - Unknown word (yourself)   -- the whole query string yourself. Instead, you can use
website/pages/passing-arguments.mdx:194:45    - Unknown word (generally)  -- arguments in code, it's generally better to avoid constructing
website/pages/passing-arguments.mdx:222:75    - Unknown word (worry)      -- means we don't have to worry about escaping on the
website/pages/passing-arguments.mdx:57:79     - Unknown word (means)      -- can't be null, which means we can skip a bit of
website/pages/passing-arguments.mdx:59:32     - Unknown word (took)       -- our resolver functions took no arguments. When a
website/pages/passing-arguments.mdx:87:113    - Unknown word (tells)      -- rollDice` is defined tells you about what the arguments
website/pages/passing-arguments.mdx:87:54     - Unknown word (nicer)      -- destructuring, this is a bit nicer because the line of
website/pages/running-an-express-graphql-server.mdx:100:95    - Unknown word (exploring)  -- way of querying and exploring your GraphQL API.
website/pages/running-an-express-graphql-server.mdx:117:24    - Unknown word (learned)    -- this point you have learned how to run a GraphQL
website/pages/running-an-express-graphql-server.mdx:8:5       - Unknown word (simplest)   -- The simplest way to run a GraphQL
website/tailwind.config.js:22:63     - Unknown word (stops)      -- gradient(var(--tw-gradient-stops))',
website/tailwind.config.js:23:19     - Unknown word (conic)      -- 'gradient-conic':
website/tailwind.config.js:40:3      - Unknown word (dark)       -- darkMode: ['class', 'html
website/theme.config.tsx:110:38    - Unknown word (Guidelines)   -- title: 'Logo and Brand Guidelines',
website/theme.config.tsx:125:38    - Unknown word (trademark)    -- web site terms of use, trademark policy and general project
website/theme.config.tsx:165:13    - Unknown word (Powered)      -- Powered by{' '}
website/theme.config.tsx:215:60    - Unknown word (Videos)       -- GraphQLConf 2024! • Watch the Videos •{' '}
website/theme.config.tsx:220:25    - Unknown word (recorded)     -- Check out the recorded talks and workshops
website/theme.config.tsx:220:34    - Unknown word (talks)        -- Check out the recorded talks and workshops
website/theme.config.tsx:220:44    - Unknown word (workshops)    -- the recorded talks and workshops
website/theme.config.tsx:239:32    - Unknown word (lite)         -- extraContent: <ThemeSwitch lite className="[&_span]
website/theme.config.tsx:2:14      - Unknown word (Theme)      -- import { DocsThemeConfig, ThemeSwitch,
website/theme.config.tsx:52:23     - Unknown word (Introduction) -- { title: 'Introduction to GraphQL', url: '
website/theme.config.tsx:54:23     - Unknown word (Frequently)   -- title: 'Frequently Asked Questions',
website/theme.config.tsx:54:34     - Unknown word (Asked)        -- title: 'Frequently Asked Questions',
website/theme.config.tsx:54:40     - Unknown word (Questions)    -- title: 'Frequently Asked Questions',
website/theme.config.tsx:58:32     - Unknown word (Courses)      -- title: 'Training Courses',
website/theme.config.tsx:86:32     - Unknown word (Meetups)      -- title: 'Events & Meetups',
website/theme.config.tsx:90:23     - Unknown word (Contribute)   -- title: 'Contribute to GraphQL',
website/theme.config.tsx:94:23     - Unknown word (Shop)         -- { title: 'Shop', url: 'https://store
website/tsconfig.json:14:13     - Unknown word (preserve)    -- "jsx": "preserve",
website/tsconfig.json:9:6       - Unknown word (incremental) -- "incremental": true,
website/vercel.json:2:4       - Unknown word (redirects)  -- "redirects": [
website/vercel.json:6:8       - Unknown word (permanent)  -- "permanent": true
