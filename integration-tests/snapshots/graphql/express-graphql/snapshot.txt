
Repository: graphql/express-graphql
Url: "https://github.com/graphql/express-graphql.git"
Args: ["**/*.*"]
Lines:
 Dictionary Error with (en_us) Error: ENOENT: no such file or directory, open './dictionaries/en_US/en_US.trie.gz'
 exit code: 1
-------------------------------------------
-------------------------------------------
CodeTypo: Files checked: 33, Issues found: 563 in 25 files with 4 errors.
Dictionary Error with (en_us) Error: ENOENT: no such file or directory, open './dictionaries/en_US/en_US.trie.gz'
Dictionary Error with (filetypes) Error: ENOENT: no such file or directory, open './dictionaries/filetypes/filetypes.txt.gz'
Dictionary Error with (filetypes) Error: ENOENT: no such file or directory, open './dictionaries/filetypes/filetypes.txt.gz'
Dictionary Error with (html-symbol-entities) Error: ENOENT: no such file or directory, open './dictionaries/html-symbol-entities/entities.txt.gz'
Dictionary Error with (html-symbol-entities) Error: ENOENT: no such file or directory, open './dictionaries/html-symbol-entities/entities.txt.gz'
Dictionary Error with (public-licenses) Error: ENOENT: no such file or directory, open './dictionaries/public-licenses/public-licenses.txt.gz'
Dictionary Error with (public-licenses) Error: ENOENT: no such file or directory, open './dictionaries/public-licenses/public-licenses.txt.gz'
Errors:
README.md:17:101    - Unknown word (exclusively)    -- graphql-http) implements exclusively the [GraphQL over HTTP
README.md:19:131    - Unknown word (recommended)    -- subscriptions, etc.), you're recommended to use some of the great
README.md:19:150    - Unknown word (some)           -- re recommended to use some of the great JavaScript
README.md:19:16     - Unknown word (seeking)        -- In case you're seeking for a full-featured
README.md:19:35     - Unknown word (featured)       -- re seeking for a full-featured experience (with file
README.md:19:44     - Unknown word (experience)     -- for a full-featured experience (with file uploads,
README.md:19:76     - Unknown word (defer)          -- with file uploads, @defer/@stream directives,
README.md:1:15      - Unknown word (need)       -- _If you still need to use `express-graphql
README.md:1:63      - Unknown word (previous)   -- graphql`, please [read the previous version of this readme
README.md:1:9       - Unknown word (still)      -- _If you still need to use `express
README.md:21:13     - Unknown word (yoga)           -- - [`graphql-yoga`](https://www.the-guild
README.md:21:187    - Unknown word (guide)          -- graphql-yoga), [migration guide](https://www.the-guild
README.md:21:69     - Unknown word (compliant)      -- graphql/yoga-server) ([compliant (0 warnings)](https
README.md:21:82     - Unknown word (warnings)       -- server) ([compliant (0 warnings)](https://github.com
README.md:25:13     - Unknown word (your)           -- - _\*To add your JavaScript server here
README.md:25:36     - Unknown word (here)           -- your JavaScript server here, please first add it
README.md:25:79     - Unknown word (implementations) -- it to [graphql-http/implementations](https://github.com
README.md:27:16     - Unknown word (authors)         -- ## For library authors
README.md:29:1      - Unknown word (Being)           -- Being the official [GraphQL
README.md:29:175    - Unknown word (follows)         -- graphql/graphql-http) follows the specification strictly
README.md:29:201    - Unknown word (strictly)        -- follows the specification strictly without any additional
README.md:29:222    - Unknown word (additional)      -- strictly without any additional features (like file
README.md:29:243    - Unknown word (like)            -- additional features (like file uploads, @stream
README.md:31:1      - Unknown word (Having)          -- Having said this, [`graphql
README.md:31:117    - Unknown word (simple)          -- library authors and simple server setups, where
README.md:31:131    - Unknown word (setups)          -- authors and simple server setups, where the requirements
README.md:31:139    - Unknown word (where)           -- simple server setups, where the requirements are
README.md:31:149    - Unknown word (requirements)    -- server setups, where the requirements are exact to what the
README.md:31:166    - Unknown word (exact)           -- the requirements are exact to what the aforementioned
README.md:31:175    - Unknown word (what)            -- requirements are exact to what the aforementioned spec
README.md:31:184    - Unknown word (aforementioned)  -- are exact to what the aforementioned spec offers.
README.md:31:204    - Unknown word (offers)          -- aforementioned spec offers.
README.md:31:8      - Unknown word (said)            -- Having said this, [`graphql-http
README.md:31:87     - Unknown word (aimed)           -- graphql-http) is mostly aimed for library authors
README.md:33:5      - Unknown word (Spec)            -- ### Spec compliance audit suite
README.md:37:1      - Unknown word (Additionally)    -- Additionally, `graphql-http` will
README.md:37:128    - Unknown word (them)            -- compliance results ([see them here](https://github
README.md:37:30     - Unknown word (will)            -- Additionally, `graphql-http` will maintain a list of GraphQL
README.md:37:35     - Unknown word (maintain)        -- `graphql-http` will maintain a list of GraphQL servers
README.md:37:77     - Unknown word (ecosystem)       -- GraphQL servers in the ecosystem and share their compliance
README.md:37:97     - Unknown word (their)           -- ecosystem and share their compliance results
README.md:3:19      - Unknown word (deprecated) -- # This library is deprecated
README.md:3:8       - Unknown word (library)    -- # This library is deprecated
README.md:5:102     - Unknown word (existed)        -- GraphQL with HTTP. It has existed since 2015 and was mostly
README.md:5:110     - Unknown word (since)          -- HTTP. It has existed since 2015 and was mostly
README.md:5:129     - Unknown word (mostly)         -- existed since 2015 and was mostly unmaintained in recent
README.md:5:136     - Unknown word (unmaintained)   -- 2015 and was mostly unmaintained in recent years.
README.md:5:152     - Unknown word (recent)         -- mostly unmaintained in recent years.
README.md:5:159     - Unknown word (years)          -- unmaintained in recent years.
README.md:5:33      - Unknown word (official)   -- graphql` was the first official reference implementation
README.md:5:52      - Unknown word (implementation) -- first official reference implementation of using GraphQL with
README.md:7:155     - Unknown word (made)           -- GraphQL over HTTP and it made great progress bringing
README.md:7:160     - Unknown word (great)          -- over HTTP and it made great progress bringing up
README.md:7:175     - Unknown word (bringing)       -- made great progress bringing up the need for a fresh
README.md:7:94      - Unknown word (standardizing)  -- http) work group is standardizing the way you transport
README.md:9:1       - Unknown word (Please)         -- Please read the [GraphQL over
README.md:9:36      - Unknown word (spec)           -- the [GraphQL over HTTP spec](https://graphql.github
codecov.yml:3:5       - Unknown word (require)    -- require_ci_to_pass: yes
codecov.yml:5:1       - Unknown word (parsers)    -- parsers:
codecov.yml:7:12      - Unknown word (partials)   -- enable_partials: yes
cspell.json:10:22     - Unknown word (spelling)   -- // Excluded from spelling check
cspell.json:10:8      - Unknown word (Excluded)   -- // Excluded from spelling check
cspell.json:11:6      - Unknown word (cspell)     -- "cspell.json",
cspell.json:17:6      - Unknown word (graphiql)   -- "graphiql",
cspell.json:18:6      - Unknown word (unfetch)    -- "unfetch",
cspell.json:19:6      - Unknown word (noindex)    -- "noindex",
cspell.json:21:6      - Unknown word (recognise)  -- "recognise",
cspell.json:24:6      - Unknown word (charsets)   -- "charsets",
cspell.json:26:6      - Unknown word (mercurius)  -- "mercurius",
cspell.json:27:6      - Unknown word (postgraphile) -- "postgraphile",
cspell.json:29:21     - Unknown word (bellow)       -- // TODO: remove bellow words
cspell.json:30:6      - Unknown word (Graphi)       -- "Graphi", // GraphiQL
cspell.json:4:34      - Unknown word (please)     -- Copied from '.gitignore', please keep it in sync.
cspell.json:4:41      - Unknown word (keep)       -- .gitignore', please keep it in sync.
cspell.json:4:8       - Unknown word (Copied)     -- // Copied from '.gitignore', please
examples/index.ts:13:13     - Unknown word (provides)   -- // The root provides a resolver function
examples/index.ts:6:24      - Unknown word (using)      -- Construct a schema, using GraphQL schema language
examples/index_subscription_legacy.ts:37:16     - Unknown word (disconnecting) -- console.log('disconnecting ...');
examples/schema.ts:25:32     - Unknown word (five)       -- countDown: async function* fiveToOne() {
examples/schema.ts:27:31     - Unknown word (slow)       -- await sleep(1000); // slow down a bit so user can
integrationTests/integration-test.js:24:35     - Unknown word (quiet)      -- archiveName = exec(`npm --quiet pack ${distDir}`, {
integrationTests/ts/tsconfig.json:4:28      - Unknown word (asynciterable) -- lib": ["es6", "esnext.asynciterable"],
package.json:16:8      - Unknown word (Effects)    -- "sideEffects": false,
package.json:38:34     - Unknown word (checkgit)   -- preversion": ". ./resources/checkgit.sh && npm ci",
package.json:41:160    - Unknown word (integrations) -- npm && npm run check:integrations",
package.json:41:55     - Unknown word (testonly)   -- run check && npm run testonly:cover && npm run prettier
package.json:41:64     - Unknown word (cover)      -- && npm run testonly:cover && npm run prettier
package.json:46:42     - Unknown word (different)    -- prettier --write --list-different .",
package.json:49:36     - Unknown word (full)         -- integrations": "mocha --full-trace integrationTests
package.json:4:19      - Unknown word (Production) -- "description": "Production ready GraphQL HTTP middleware
package.json:91:29     - Unknown word (fetcher)      -- graphiql-subscriptions-fetcher": "0.0.2",
resources/build-npm.js:13:20     - Unknown word (Statically) -- transformLoadFileStaticallyFromNPM,
resources/build-npm.js:14:21     - Unknown word (statically) -- } = require('./load-statically-from-npm');
resources/checkgit.sh:11:18     - Unknown word (ensure)      -- # First fetch to ensure git is up to date. Fail
resources/checkgit.sh:11:57     - Unknown word (this)        -- to date. Fail-fast if this fails.
resources/checkgit.sh:11:62     - Unknown word (fails)       -- date. Fail-fast if this fails.
resources/checkgit.sh:15:11     - Unknown word (useful)      -- # Extract useful information.
resources/checkgit.sh:15:3      - Unknown word (Extract)     -- # Extract useful information.
resources/checkgit.sh:16:36     - Unknown word (null)        -- git branch -v 2> /dev/null | sed '/^[^*]/d');
resources/checkgit.sh:1:38      - Unknown word (terminated)  -- immediately if any subcommand terminated
resources/checkgit.sh:1:8       - Unknown word (immediately) -- # Exit immediately if any subcommand terminated
resources/checkgit.sh:20:12     - Unknown word (main)        -- # Check if main is checked out
resources/checkgit.sh:20:20     - Unknown word (checked)     -- # Check if main is checked out
resources/checkgit.sh:26:22     - Unknown word (synced)      -- Check if branch is synced with remote
resources/checkgit.sh:5:15      - Unknown word (determines)  -- # This script determines if current git state
resources/checkgit.sh:5:3       - Unknown word (This)        -- # This script determines if
resources/checkgit.sh:5:60      - Unknown word (date)        -- git state is the up to date master. If so
resources/checkgit.sh:6:12      - Unknown word (normally)    -- # it exits normally. If not it prompts for
resources/checkgit.sh:6:32      - Unknown word (prompts)     -- normally. If not it prompts for an explicit continue
resources/checkgit.sh:6:47      - Unknown word (explicit)    -- not it prompts for an explicit continue. This script
resources/checkgit.sh:6:6       - Unknown word (exits)       -- # it exits normally. If not it
resources/checkgit.sh:7:14      - Unknown word (protect)     -- # intends to protect from versioning for
resources/checkgit.sh:7:3       - Unknown word (intends)     -- # intends to protect from versioning
resources/checkgit.sh:7:60      - Unknown word (pushing)     -- for NPM without first pushing changes
resources/checkgit.sh:8:7       - Unknown word (including)   -- # and including any changes on master
resources/eslint-internal-rules/README.md:3:11      - Unknown word (dummy)      -- This is a dummy npm package that allows
resources/eslint-internal-rules/README.md:3:29      - Unknown word (that)       -- a dummy npm package that allows us to treat it
resources/eslint-internal-rules/README.md:3:34      - Unknown word (allows)     -- dummy npm package that allows us to treat it as an
resources/eslint-internal-rules/README.md:3:47      - Unknown word (treat)      -- package that allows us to treat it as an `eslint-plugin
resources/eslint-internal-rules/README.md:3:85      - Unknown word (internal)   -- eslint-plugin-graphql-internal`.
resources/eslint-internal-rules/README.md:4:10      - Unknown word (actually)   -- It's not actually published, nor are the
resources/eslint-internal-rules/README.md:6:32      - Unknown word (must)       -- modify this rule, you must re-run `npm install
resources/eslint-internal-rules/README.md:6:68      - Unknown word (take)       -- npm install` for it to take effect.**
resources/eslint-internal-rules/no-dir-import.js:15:32     - Unknown word (doesn't)    -- bail if the declaration doesn't have a source, e.g.
resources/eslint-internal-rules/no-dir-import.js:15:8      - Unknown word (bail)       -- // bail if the declaration doesn
resources/gen-changelog.js:111:33    - Unknown word (Unreleased)  -- changelog = `## ${tag || 'Unreleased'} (${date})\n`;
resources/gen-changelog.js:115:19    - Unknown word (Fold)        -- const shouldFold = config.fold && prs
resources/gen-changelog.js:120:51    - Unknown word (were)        -- summary> ${prs.length} PRs were merged </summary>\n
resources/gen-changelog.js:120:56    - Unknown word (merged)      -- prs.length} PRs were merged </summary>\n\n`;
resources/gen-changelog.js:12:8      - Unknown word (breaking)   -- 'PR: breaking change 💥': {
resources/gen-changelog.js:137:24    - Unknown word (Committers)  -- changelog += `\n#### Committers: ${committers.length
resources/gen-changelog.js:138:14    - Unknown word (committer)   -- for (const committer of committers) {
resources/gen-changelog.js:13:15     - Unknown word (Breaking)   -- section: 'Breaking Change 💥',
resources/gen-changelog.js:151:23    - Unknown word (bearer)      -- Authorization: 'bearer ' + GH_TOKEN,
resources/gen-changelog.js:168:21    - Unknown word (responded)   -- `GitHub responded with ${res.statusCode
resources/gen-changelog.js:23:5      - Unknown word (fold)       -- fold: true,
resources/gen-changelog.js:25:8      - Unknown word (polish)     -- 'PR: polish 💅': {
resources/gen-changelog.js:26:15     - Unknown word (Polish)     -- section: 'Polish 💅',
resources/gen-changelog.js:300:20    - Unknown word (batches)     -- // Split pr into batches of 50 to prevent timeouts
resources/gen-changelog.js:300:45    - Unknown word (timeouts)    -- batches of 50 to prevent timeouts
resources/gen-changelog.js:41:18     - Unknown word (Must)       -- console.error('Must provide GH_TOKEN as
resources/gen-changelog.js:54:18     - Unknown word (Cannot)     -- console.error('Cannot extract organization
resources/gen-changelog.js:86:9      - Unknown word (committers) -- const committersByLogin = {};
resources/gen-changelog.js:98:17     - Unknown word (conflicting) -- `PR has conflicting labels: ${labels.join
src/__tests__/http-test.ts:1032:20   - Unknown word (printing)      -- describe('Pretty printing', () => {
src/__tests__/http-test.ts:1052:21   - Unknown word (printed)       -- // Pretty printed JSON
src/__tests__/http-test.ts:108:13    - Unknown word (ensures)     -- // This ensures consistent tests, as
src/__tests__/http-test.ts:108:86    - Unknown word (production)  -- spacing to 0 only in "production" mode.
src/__tests__/http-test.ts:1103:13   - Unknown word (unpretty)      -- const unprettyResponse = await app
src/__tests__/http-test.ts:1115:30   - Unknown word (caught)        -- handles field errors caught by GraphQL', async
src/__tests__/http-test.ts:1115:9    - Unknown word (handles)       -- it('handles field errors caught
src/__tests__/http-test.ts:1181:47   - Unknown word (sanitize)      -- error formatting to sanitize GraphQL errors', async
src/__tests__/http-test.ts:1242:47   - Unknown word (elaborate)     -- error formatting to elaborate', async () => {
src/__tests__/http-test.ts:1298:37   - Unknown word (Unexpected)    -- message: 'Syntax Error: Unexpected Name "syntax_error"
src/__tests__/http-test.ts:129:14    - Unknown word (lazily)      -- // We're lazily loading the restify
src/__tests__/http-test.ts:129:57    - Unknown word (avoid)       -- restify module so as to avoid issues caused by it
src/__tests__/http-test.ts:129:63    - Unknown word (issues)      -- module so as to avoid issues caused by it patching
src/__tests__/http-test.ts:129:70    - Unknown word (caused)      -- so as to avoid issues caused by it patching the
src/__tests__/http-test.ts:129:83    - Unknown word (patching)    -- issues caused by it patching the
src/__tests__/http-test.ts:1305:36   - Unknown word (lack)          -- handles errors caused by a lack of query', async ()
src/__tests__/http-test.ts:130:50    - Unknown word (classes)     -- ingMessage and ServerResponse classes. See https://github
src/__tests__/http-test.ts:131:22    - Unknown word (instead)     -- // Using require instead of import here to avoid
src/__tests__/http-test.ts:131:8     - Unknown word (Using)       -- // Using require instead of import
src/__tests__/http-test.ts:1450:35   - Unknown word (garbage)       -- Content-Encoding', 'garbage')
src/__tests__/http-test.ts:1481:17   - Unknown word (poorly)        -- it('handles poorly formed variables', async
src/__tests__/http-test.ts:1481:24   - Unknown word (formed)        -- it('handles poorly formed variables', async (
src/__tests__/http-test.ts:1522:13   - Unknown word (called)        -- spy.calledWith(
src/__tests__/http-test.ts:1523:44   - Unknown word (replaced)      -- ormatError` is deprecated and replaced by `customFormatErrorFn
src/__tests__/http-test.ts:153:17    - Unknown word (functionality) -- describe('GET functionality', () => {
src/__tests__/http-test.ts:1568:26   - Unknown word (prettifying)   -- it('allows disabling prettifying poorly formed requests
src/__tests__/http-test.ts:1607:31   - Unknown word (John)          -- variables: { who: ['John', 'Jane'] },
src/__tests__/http-test.ts:1607:39   - Unknown word (Jane)          -- variables: { who: ['John', 'Jane'] },
src/__tests__/http-test.ts:1616:75   - Unknown word (cannot)        -- John", "Jane"]; String cannot represent a non string
src/__tests__/http-test.ts:1616:82   - Unknown word (represent)     -- Jane"]; String cannot represent a non string value:
src/__tests__/http-test.ts:1639:13   - Unknown word (Built)         -- describe('Built-in GraphiQL support
src/__tests__/http-test.ts:1655:32   - Unknown word (accepting)     -- presents GraphiQL when accepting HTML', async () =>
src/__tests__/http-test.ts:1655:9    - Unknown word (presents)      -- it('presents GraphiQL when accepting
src/__tests__/http-test.ts:1758:9    - Unknown word (escapes)       -- it('escapes HTML in queries within
src/__tests__/http-test.ts:1811:17   - Unknown word (provided)      -- it('renders provided variables within GraphiQL
src/__tests__/http-test.ts:1811:9    - Unknown word (renders)       -- it('renders provided variables within
src/__tests__/http-test.ts:186:45    - Unknown word (Dolly)         -- JSON.stringify({ who: 'Dolly' }),
src/__tests__/http-test.ts:1931:9    - Unknown word (prefers)       -- it('prefers JSON if unknown accept
src/__tests__/http-test.ts:1952:25   - Unknown word (explicitly)    -- it('prefers JSON if explicitly requested raw response
src/__tests__/http-test.ts:1992:45   - Unknown word (Fetcher)       -- text).to.include('makeFetcher');
src/__tests__/http-test.ts:2091:53   - Unknown word (really)        -- AlwaysInvalidRule was really invalid!'),
src/__tests__/http-test.ts:210:34    - Unknown word (Everyone)      -- shared: test(who: "Everyone")
src/__tests__/http-test.ts:2231:16   - Unknown word (adding)        -- it('allows adding extensions', async
src/__tests__/http-test.ts:2257:9    - Unknown word (gives)         -- it('gives extensions access to
src/__tests__/http-test.ts:2268:22   - Unknown word (preserved)     -- return { preservedResult: { ...result
src/__tests__/http-test.ts:2307:38   - Unknown word (eventually)    -- return Promise.resolve({ eventually: 42 });
src/__tests__/http-test.ts:292:25    - Unknown word (perform)       -- 'Can only perform a mutation operation
src/__tests__/http-test.ts:298:21    - Unknown word (selecting)     -- it('errors when selecting a mutation within a
src/__tests__/http-test.ts:324:30    - Unknown word (exist)         -- allows a mutation to exist within a GET', async
src/__tests__/http-test.ts:375:16    - Unknown word (passing)       -- it('allows passing in a context', async
src/__tests__/http-test.ts:496:26    - Unknown word (adds)          -- // Middleware that adds req.foo to every request
src/__tests__/http-test.ts:49:5      - Unknown word (thrower)    -- thrower: {
src/__tests__/http-test.ts:518:16    - Unknown word (returning)     -- it('allows returning an options Promise'
src/__tests__/http-test.ts:574:24    - Unknown word (thrown)        -- it('catches errors thrown from options function
src/__tests__/http-test.ts:574:9     - Unknown word (catches)       -- it('catches errors thrown from options
src/__tests__/http-test.ts:876:16    - Unknown word (deflated)      -- it('allows deflated POST bodies', async
src/__tests__/http-test.ts:904:30    - Unknown word (illustrative)  -- but it is terse and illustrative of using express-graphql
src/__tests__/http-test.ts:905:10    - Unknown word (together)      -- // together.
src/__tests__/http-test.ts:90:25     - Unknown word (encountered) -- console.warn('App encountered an error:', error);
src/__tests__/http-test.ts:929:46    - Unknown word (just)          -- this test demo, we're just returning the uploaded
src/__tests__/http-test.ts:930:25    - Unknown word (directly)      -- // file directly, but presumably you
src/__tests__/http-test.ts:930:39    - Unknown word (presumably)    -- file directly, but presumably you might return a Promise
src/__tests__/http-test.ts:930:54    - Unknown word (might)         -- but presumably you might return a Promise
src/__tests__/http-test.ts:931:41    - Unknown word (somewhere)     -- to go store the file somewhere first.
src/__tests__/http-test.ts:945:10    - Unknown word (Providing)     -- // Providing the request as part
src/__tests__/http-test.ts:946:13    - Unknown word (accessible)    -- // be accessible from within Schema resolve
src/__tests__/http-test.ts:96:23     - Unknown word (likes)       -- // Connect only likes using app.use.
src/__tests__/http-test.ts:970:29    - Unknown word (plain)         -- mimetype: 'text/plain',
src/__tests__/usage-test.ts:99:7      - Unknown word (validates)   -- it('validates schema before executing
src/__tests__/usage-test.ts:9:11      - Unknown word (Useful)     -- describe('Useful errors when incorrectly
src/__tests__/usage-test.ts:9:30      - Unknown word (incorrectly) -- 'Useful errors when incorrectly used', () => {
src/index.ts:118:34    - Unknown word (often)      -- resulting JSON. This is often a useful place to add
src/index.ts:119:69    - Unknown word (consumed)   -- amount of resources consumed.
src/index.ts:121:18    - Unknown word (about)      -- * Information about the request is provided
src/index.ts:130:19    - Unknown word (optionally) -- * A boolean to optionally enable GraphiQL mode
src/index.ts:131:6     - Unknown word (Alternatively) -- * Alternatively, instead of `true` you
src/index.ts:145:28    - Unknown word (alternatively) -- _typename` field or alternatively calls the `isTypeOf
src/index.ts:183:28    - Unknown word (takes)         -- Middleware for express; takes an options object or
src/index.ts:193:100   - Unknown word (below)         -- asynchronous state machine below.
src/index.ts:193:36    - Unknown word (referred)      -- scoped variables are referred to at various stages
src/index.ts:193:51    - Unknown word (various)       -- variables are referred to at various stages in the asynchronous
src/index.ts:193:59    - Unknown word (stages)        -- referred to at various stages in the asynchronous
src/index.ts:258:13    - Unknown word (there)         -- // If there is no query, but GraphiQL
src/index.ts:258:53    - Unknown word (displayed)     -- but GraphiQL will be displayed, do not produce
src/index.ts:258:71    - Unknown word (produce)       -- be displayed, do not produce
src/index.ts:259:20    - Unknown word (otherwise)     -- // a result, otherwise return a 400: Bad Request
src/index.ts:276:31    - Unknown word (reporting)     -- Parse source to AST, reporting any syntax error.
src/index.ts:302:12    - Unknown word (Determine)     -- // Determine if this GET request
src/index.ts:305:33    - Unknown word (shown)         -- If GraphiQL can be shown, do not perform this
src/index.ts:307:14    - Unknown word (themselves)    -- // themselves if desired.
src/index.ts:312:14    - Unknown word (Otherwise)     -- // Otherwise, report a 405: Method
src/index.ts:321:10    - Unknown word (Perform)       -- // Perform the execution, reporting
src/index.ts:32:48     - Unknown word (coming)     -- for IncomingMessage coming from http.Server
src/index.ts:359:34    - Unknown word (Thrown)        -- istanbul ignore next: Thrown by underlying library
src/index.ts:387:23    - Unknown word (included)      -- // If no data was included in the result, that
src/index.ts:387:52    - Unknown word (indicates)     -- in the result, that indicates a runtime query
src/index.ts:388:15    - Unknown word (indicate)      -- // error, indicate as such with a generic
src/index.ts:389:42    - Unknown word (itself)        -- Information about the error itself will still be contained
src/index.ts:397:11    - Unknown word (formatted)     -- const formattedResult: FormattedExecutionResu
src/index.ts:39:52     - Unknown word (providing)  -- graphqlHTTP middleware by providing a schema
src/index.ts:472:4     - Unknown word (Provided)      -- * Provided a "Request" provided
src/index.ts:472:57    - Unknown word (typically)     -- express or connect (typically a node style
src/index.ts:514:23    - Unknown word (determine)     -- Helper function to determine if GraphiQL can be displayed
src/index.ts:70:29     - Unknown word (whether)    -- boolean to configure whether the output should be
src/index.ts:76:21     - Unknown word (those)      -- * in addition to those defined by the GraphQL
src/index.ts:8:3       - Unknown word (Formatted)  -- FormattedExecutionResult,
src/index.ts:97:67     - Unknown word (produced)   -- to format any errors produced by
src/index.ts:98:6      - Unknown word (fulfilling) -- * fulfilling a GraphQL operation
src/parseBody.ts:22:48     - Unknown word (keyed)      -- already parsed a body as a keyed object, use it.
src/parseBody.ts:40:29     - Unknown word (didn't)     -- Already parsed body we didn't recognise? Parse nothing
src/parseBody.ts:46:14     - Unknown word (correct)    -- // Use the correct body parser based on
src/renderGraphiQL.ts:121:21    - Unknown word (been)       -- and as a result has been presented GraphiQL
src/renderGraphiQL.ts:121:26    - Unknown word (presented)  -- as a result has been presented GraphiQL - an in-browser
src/renderGraphiQL.ts:122:1     - Unknown word (exploring)  -- exploring GraphQL.
src/renderGraphiQL.ts:124:8     - Unknown word (wish)       -- If you wish to receive JSON, provide
src/renderGraphiQL.ts:12:73     - Unknown word (stored)     -- query is provided and no stored
src/renderGraphiQL.ts:183:8     - Unknown word (Produce)    -- // Produce a Location query string
src/renderGraphiQL.ts:193:49    - Unknown word (sans)       -- from the current URL, sans the GraphQL parameters
src/renderGraphiQL.ts:19:32     - Unknown word (enables)    -- optional boolean which enables the header editor when
src/renderGraphiQL.ts:208:8     - Unknown word (Defines)    -- // Defines a GraphQL fetcher using
src/renderGraphiQL.ts:247:47    - Unknown word (edited)     -- variables string is edited, update the URL bar
src/renderGraphiQL.ts:248:23    - Unknown word (easily)     -- // that it can be easily shared.
src/renderGraphiQL.ts:32:70     - Unknown word (makes)      -- header editor. Only makes
src/renderGraphiQL.ts:33:6      - Unknown word (sense)      -- * sense if headerEditorEnabled
src/renderGraphiQL.ts:51:4      - Unknown word (Ensures)    -- // Ensures string values are safe
src/renderGraphiQL.ts:62:25     - Unknown word (receives)   -- When express-graphql receives a request which does
src/renderGraphiQL.ts:63:65     - Unknown word (explorer)   -- the in-browser GraphQL explorer IDE.
src/renderGraphiQL.ts:65:31     - Unknown word (populated)  -- shown, it will be pre-populated with the result of having
src/renderGraphiQL.ts:65:60     - Unknown word (having)     -- populated with the result of having executed the
src/renderGraphiQL.ts:65:67     - Unknown word (executed)   -- the result of having executed the
tsconfig.json:12:19     - Unknown word (Cases)       -- "noFallthroughCasesInSwitch": true,
tsconfig.json:13:16     - Unknown word (Returns)     -- "noImplicitReturns": true,
tsconfig.json:13:8      - Unknown word (Implicit)    -- "noImplicitReturns": true,
tsconfig.json:14:17     - Unknown word (Indexed)     -- "noUncheckedIndexedAccess": true,
tsconfig.json:15:14     - Unknown word (Locals)      -- "noUnusedLocals": true,
tsconfig.json:15:8      - Unknown word (Unused)      -- "noUnusedLocals": true,
tsconfig.json:17:11     - Unknown word (Consistent)  -- "forceConsistentCasingInFileNames": true
tsconfig.json:17:21     - Unknown word (Casing)      -- "forceConsistentCasingInFileNames": true,
tsconfig.json:20:6      - Unknown word (preserve)    -- "preserveConstEnums": true
tsconfig.json:4:6       - Unknown word (declaration) -- "declaration": true,
tsconfig.json:5:6       - Unknown word (isolated)    -- "isolatedModules": true,
