---
Repository: graphql/express-graphql
Url: https://github.com/graphql/express-graphql.git
Args: '["**/*.*"]'
Summary:
  files: 33
  filesWithIssues: 25
  issues: 563
  errors: 4
Errors:
  - Dictionary Error with (en_us)
  - Dictionary Error with (filetypes)
  - Dictionary Error with (public-licenses)
  - Dictionary Error with (html-symbol-entities)

issues:
  - "codecov.yml:3:5         require     U       require_ci_to_pass: yes"
  - "codecov.yml:5:1         parsers     U       parsers:"
  - "codecov.yml:7:12        partials    U       enable_partials: yes"
  - "cspell.json:4:8         Copied          U       // Copied from '.gitignore', please"
  - "cspell.json:4:34        please          U       Copied from '.gitignore', please keep it in sync."
  - "cspell.json:4:41        keep            U       .gitignore', please keep it in sync."
  - "cspell.json:10:8        Excluded        U       // Excluded from spelling check"
  - "cspell.json:10:22       spelling        U       // Excluded from spelling check"
  - "cspell.json:11:6        cspell          U       \"cspell.json\","
  - "cspell.json:17:6        graphiql        U       \"graphiql\","
  - "cspell.json:18:6        unfetch         U       \"unfetch\","
  - "cspell.json:19:6        noindex         U       \"noindex\","
  - "cspell.json:21:6        recognise       U       \"recognise\","
  - "cspell.json:24:6        charsets        U       \"charsets\","
  - "cspell.json:26:6        mercurius       U       \"mercurius\","
  - "cspell.json:27:6        postgraphile    U       \"postgraphile\","
  - "cspell.json:29:21       bellow          U       // TODO: remove bellow words"
  - "cspell.json:30:6        Graphi          U       \"Graphi\", // GraphiQL"
  - "examples/index_subscription_legacy.ts:37:16         disconnecting       U       console.log('disconnecting ...');"
  - "examples/index.ts:6:24          using       U       Construct a schema, using GraphQL schema language"
  - "examples/index.ts:13:13         provides    U       // The root provides a resolver function"
  - "examples/schema.ts:25:32        five    U       countDown: async function* fiveToOne() {"
  - "examples/schema.ts:27:31        slow    U       await sleep(1000); // slow down a bit so user can"
  - "integrationTests/integration-test.js:24:35          quiet       U       archiveName = exec(`npm --quiet pack ${distDir}`, {"
  - "integrationTests/ts/tsconfig.json:4:28          asynciterable       U       lib\": [\"es6\", \"esnext.asynciterable\"],"
  - "package.json:4:19           Production      U       \"description\": \"Production ready GraphQL HTTP middleware"
  - "package.json:16:8           Effects         U       \"sideEffects\": false,"
  - "package.json:38:34          checkgit        U       preversion\": \". ./resources/checkgit.sh && npm ci\","
  - "package.json:41:55          testonly        U       run check && npm run testonly:cover && npm run prettier"
  - "package.json:41:64          cover           U       && npm run testonly:cover && npm run prettier"
  - "package.json:41:160         integrations    U       npm && npm run check:integrations\","
  - "package.json:46:42          different       U       prettier --write --list-different .\","
  - "package.json:49:36          full            U       integrations\": \"mocha --full-trace integrationTests"
  - "package.json:91:29          fetcher         U       graphiql-subscriptions-fetcher\": \"0.0.2\","
  - "README.md:1:9           still               U       _If you still need to use `express"
  - "README.md:1:15          need                U       _If you still need to use `express-graphql"
  - "README.md:1:63          previous            U       graphql`, please [read the previous version of this readme"
  - "README.md:3:8           library             U       # This library is deprecated"
  - "README.md:3:19          deprecated          U       # This library is deprecated"
  - "README.md:5:33          official            U       graphql` was the first official reference implementation"
  - "README.md:5:52          implementation      U       first official reference implementation of using GraphQL with"
  - "README.md:5:102         existed             U       GraphQL with HTTP. It has existed since 2015 and was mostly"
  - "README.md:5:110         since               U       HTTP. It has existed since 2015 and was mostly"
  - "README.md:5:129         mostly              U       existed since 2015 and was mostly unmaintained in recent"
  - "README.md:5:136         unmaintained        U       2015 and was mostly unmaintained in recent years."
  - "README.md:5:152         recent              U       mostly unmaintained in recent years."
  - "README.md:5:159         years               U       unmaintained in recent years."
  - "README.md:7:94          standardizing       U       http) work group is standardizing the way you transport"
  - "README.md:7:155         made                U       GraphQL over HTTP and it made great progress bringing"
  - "README.md:7:160         great               U       over HTTP and it made great progress bringing up"
  - "README.md:7:175         bringing            U       made great progress bringing up the need for a fresh"
  - "README.md:9:1           Please              U       Please read the [GraphQL over"
  - "README.md:9:36          spec                U       the [GraphQL over HTTP spec](https://graphql.github"
  - "README.md:17:101        exclusively         U       graphql-http) implements exclusively the [GraphQL over HTTP"
  - "README.md:19:16         seeking             U       In case you're seeking for a full-featured"
  - "README.md:19:35         featured            U       re seeking for a full-featured experience (with file"
  - "README.md:19:44         experience          U       for a full-featured experience (with file uploads,"
  - "README.md:19:76         defer               U       with file uploads, @defer/@stream directives,"
  - "README.md:19:131        recommended         U       subscriptions, etc.), you're recommended to use some of the great"
  - "README.md:19:150        some                U       re recommended to use some of the great JavaScript"
  - "README.md:21:13         yoga                U       - [`graphql-yoga`](https://www.the-guild"
  - "README.md:21:69         compliant           U       graphql/yoga-server) ([compliant (0 warnings)](https"
  - "README.md:21:82         warnings            U       server) ([compliant (0 warnings)](https://github.com"
  - "README.md:21:187        guide               U       graphql-yoga), [migration guide](https://www.the-guild"
  - "README.md:25:13         your                U       - _\\*To add your JavaScript server here"
  - "README.md:25:36         here                U       your JavaScript server here, please first add it"
  - "README.md:25:79         implementations     U       it to [graphql-http/implementations](https://github.com"
  - "README.md:27:16         authors             U       ## For library authors"
  - "README.md:29:1          Being               U       Being the official [GraphQL"
  - "README.md:29:175        follows             U       graphql/graphql-http) follows the specification strictly"
  - "README.md:29:201        strictly            U       follows the specification strictly without any additional"
  - "README.md:29:222        additional          U       strictly without any additional features (like file"
  - "README.md:29:243        like                U       additional features (like file uploads, @stream"
  - "README.md:31:1          Having              U       Having said this, [`graphql"
  - "README.md:31:8          said                U       Having said this, [`graphql-http"
  - "README.md:31:87         aimed               U       graphql-http) is mostly aimed for library authors"
  - "README.md:31:117        simple              U       library authors and simple server setups, where"
  - "README.md:31:131        setups              U       authors and simple server setups, where the requirements"
  - "README.md:31:139        where               U       simple server setups, where the requirements are"
  - "README.md:31:149        requirements        U       server setups, where the requirements are exact to what the"
  - "README.md:31:166        exact               U       the requirements are exact to what the aforementioned"
  - "README.md:31:175        what                U       requirements are exact to what the aforementioned spec"
  - "README.md:31:184        aforementioned      U       are exact to what the aforementioned spec offers."
  - "README.md:31:204        offers              U       aforementioned spec offers."
  - "README.md:33:5          Spec                U       ### Spec compliance audit suite"
  - "README.md:37:1          Additionally        U       Additionally, `graphql-http` will"
  - "README.md:37:30         will                U       Additionally, `graphql-http` will maintain a list of GraphQL"
  - "README.md:37:35         maintain            U       `graphql-http` will maintain a list of GraphQL servers"
  - "README.md:37:77         ecosystem           U       GraphQL servers in the ecosystem and share their compliance"
  - "README.md:37:97         their               U       ecosystem and share their compliance results"
  - "README.md:37:128        them                U       compliance results ([see them here](https://github"
  - "resources/build-npm.js:13:20        Statically      U       transformLoadFileStaticallyFromNPM,"
  - "resources/build-npm.js:14:21        statically      U       } = require('./load-statically-from-npm');"
  - "resources/checkgit.sh:1:8           immediately     U       # Exit immediately if any subcommand terminated"
  - "resources/checkgit.sh:1:38          terminated      U       immediately if any subcommand terminated"
  - "resources/checkgit.sh:5:3           This            U       # This script determines if"
  - "resources/checkgit.sh:5:15          determines      U       # This script determines if current git state"
  - "resources/checkgit.sh:5:60          date            U       git state is the up to date master. If so"
  - "resources/checkgit.sh:6:6           exits           U       # it exits normally. If not it"
  - "resources/checkgit.sh:6:12          normally        U       # it exits normally. If not it prompts for"
  - "resources/checkgit.sh:6:32          prompts         U       normally. If not it prompts for an explicit continue"
  - "resources/checkgit.sh:6:47          explicit        U       not it prompts for an explicit continue. This script"
  - "resources/checkgit.sh:7:3           intends         U       # intends to protect from versioning"
  - "resources/checkgit.sh:7:14          protect         U       # intends to protect from versioning for"
  - "resources/checkgit.sh:7:60          pushing         U       for NPM without first pushing changes"
  - "resources/checkgit.sh:8:7           including       U       # and including any changes on master"
  - "resources/checkgit.sh:11:18         ensure          U       # First fetch to ensure git is up to date. Fail"
  - "resources/checkgit.sh:11:57         this            U       to date. Fail-fast if this fails."
  - "resources/checkgit.sh:11:62         fails           U       date. Fail-fast if this fails."
  - "resources/checkgit.sh:15:3          Extract         U       # Extract useful information."
  - "resources/checkgit.sh:15:11         useful          U       # Extract useful information."
  - "resources/checkgit.sh:16:36         null            U       git branch -v 2> /dev/null | sed '/^[^*]/d');"
  - "resources/checkgit.sh:20:12         main            U       # Check if main is checked out"
  - "resources/checkgit.sh:20:20         checked         U       # Check if main is checked out"
  - "resources/checkgit.sh:26:22         synced          U       Check if branch is synced with remote"
  - "resources/eslint-internal-rules/no-dir-import.js:15:8           bail        U       // bail if the declaration doesn"
  - "resources/eslint-internal-rules/no-dir-import.js:15:32          doesn't     U       bail if the declaration doesn't have a source, e.g."
  - "resources/eslint-internal-rules/README.md:3:11          dummy       U       This is a dummy npm package that allows"
  - "resources/eslint-internal-rules/README.md:3:29          that        U       a dummy npm package that allows us to treat it"
  - "resources/eslint-internal-rules/README.md:3:34          allows      U       dummy npm package that allows us to treat it as an"
  - "resources/eslint-internal-rules/README.md:3:47          treat       U       package that allows us to treat it as an `eslint-plugin"
  - "resources/eslint-internal-rules/README.md:3:85          internal    U       eslint-plugin-graphql-internal`."
  - "resources/eslint-internal-rules/README.md:4:10          actually    U       It's not actually published, nor are the"
  - "resources/eslint-internal-rules/README.md:6:32          must        U       modify this rule, you must re-run `npm install"
  - "resources/eslint-internal-rules/README.md:6:68          take        U       npm install` for it to take effect.**"
  - "resources/gen-changelog.js:12:8         breaking        U       'PR: breaking change 💥': {"
  - "resources/gen-changelog.js:13:15        Breaking        U       section: 'Breaking Change 💥',"
  - "resources/gen-changelog.js:23:5         fold            U       fold: true,"
  - "resources/gen-changelog.js:25:8         polish          U       'PR: polish 💅': {"
  - "resources/gen-changelog.js:26:15        Polish          U       section: 'Polish 💅',"
  - "resources/gen-changelog.js:41:18        Must            U       console.error('Must provide GH_TOKEN as"
  - "resources/gen-changelog.js:54:18        Cannot          U       console.error('Cannot extract organization"
  - "resources/gen-changelog.js:86:9         committers      U       const committersByLogin = {};"
  - "resources/gen-changelog.js:98:17        conflicting     U       `PR has conflicting labels: ${labels.join"
  - "resources/gen-changelog.js:111:33       Unreleased      U       changelog = `## ${tag || 'Unreleased'} (${date})\\n`;"
  - "resources/gen-changelog.js:115:19       Fold            U       const shouldFold = config.fold && prs"
  - "resources/gen-changelog.js:120:51       were            U       summary> ${prs.length} PRs were merged </summary>\\n"
  - "resources/gen-changelog.js:120:56       merged          U       prs.length} PRs were merged </summary>\\n\\n`;"
  - "resources/gen-changelog.js:137:24       Committers      U       changelog += `\\n#### Committers: ${committers.length"
  - "resources/gen-changelog.js:138:14       committer       U       for (const committer of committers) {"
  - "resources/gen-changelog.js:151:23       bearer          U       Authorization: 'bearer ' + GH_TOKEN,"
  - "resources/gen-changelog.js:168:21       responded       U       `GitHub responded with ${res.statusCode"
  - "resources/gen-changelog.js:300:20       batches         U       // Split pr into batches of 50 to prevent timeouts"
  - "resources/gen-changelog.js:300:45       timeouts        U       batches of 50 to prevent timeouts"
  - "src/__tests__/http-test.ts:49:5         thrower             U       thrower: {"
  - "src/__tests__/http-test.ts:90:25        encountered         U       console.warn('App encountered an error:', error);"
  - "src/__tests__/http-test.ts:96:23        likes               U       // Connect only likes using app.use."
  - "src/__tests__/http-test.ts:108:13       ensures             U       // This ensures consistent tests, as"
  - "src/__tests__/http-test.ts:108:86       production          U       spacing to 0 only in \"production\" mode."
  - "src/__tests__/http-test.ts:129:14       lazily              U       // We're lazily loading the restify"
  - "src/__tests__/http-test.ts:129:57       avoid               U       restify module so as to avoid issues caused by it"
  - "src/__tests__/http-test.ts:129:63       issues              U       module so as to avoid issues caused by it patching"
  - "src/__tests__/http-test.ts:129:70       caused              U       so as to avoid issues caused by it patching the"
  - "src/__tests__/http-test.ts:129:83       patching            U       issues caused by it patching the"
  - "src/__tests__/http-test.ts:130:50       classes             U       ingMessage and ServerResponse classes. See https://github"
  - "src/__tests__/http-test.ts:131:8        Using               U       // Using require instead of import"
  - "src/__tests__/http-test.ts:131:22       instead             U       // Using require instead of import here to avoid"
  - "src/__tests__/http-test.ts:153:17       functionality       U       describe('GET functionality', () => {"
  - "src/__tests__/http-test.ts:186:45       Dolly               U       JSON.stringify({ who: 'Dolly' }),"
  - "src/__tests__/http-test.ts:210:34       Everyone            U       shared: test(who: \"Everyone\")"
  - "src/__tests__/http-test.ts:292:25       perform             U       'Can only perform a mutation operation"
  - "src/__tests__/http-test.ts:298:21       selecting           U       it('errors when selecting a mutation within a"
  - "src/__tests__/http-test.ts:324:30       exist               U       allows a mutation to exist within a GET', async"
  - "src/__tests__/http-test.ts:375:16       passing             U       it('allows passing in a context', async"
  - "src/__tests__/http-test.ts:496:26       adds                U       // Middleware that adds req.foo to every request"
  - "src/__tests__/http-test.ts:518:16       returning           U       it('allows returning an options Promise'"
  - "src/__tests__/http-test.ts:574:9        catches             U       it('catches errors thrown from options"
  - "src/__tests__/http-test.ts:574:24       thrown              U       it('catches errors thrown from options function"
  - "src/__tests__/http-test.ts:876:16       deflated            U       it('allows deflated POST bodies', async"
  - "src/__tests__/http-test.ts:904:30       illustrative        U       but it is terse and illustrative of using express-graphql"
  - "src/__tests__/http-test.ts:905:10       together            U       // together."
  - "src/__tests__/http-test.ts:929:46       just                U       this test demo, we're just returning the uploaded"
  - "src/__tests__/http-test.ts:930:25       directly            U       // file directly, but presumably you"
  - "src/__tests__/http-test.ts:930:39       presumably          U       file directly, but presumably you might return a Promise"
  - "src/__tests__/http-test.ts:930:54       might               U       but presumably you might return a Promise"
  - "src/__tests__/http-test.ts:931:41       somewhere           U       to go store the file somewhere first."
  - "src/__tests__/http-test.ts:945:10       Providing           U       // Providing the request as part"
  - "src/__tests__/http-test.ts:946:13       accessible          U       // be accessible from within Schema resolve"
  - "src/__tests__/http-test.ts:970:29       plain               U       mimetype: 'text/plain',"
  - "src/__tests__/http-test.ts:1032:20      printing            U       describe('Pretty printing', () => {"
  - "src/__tests__/http-test.ts:1052:21      printed             U       // Pretty printed JSON"
  - "src/__tests__/http-test.ts:1103:13      unpretty            U       const unprettyResponse = await app"
  - "src/__tests__/http-test.ts:1115:9       handles             U       it('handles field errors caught"
  - "src/__tests__/http-test.ts:1115:30      caught              U       handles field errors caught by GraphQL', async"
  - "src/__tests__/http-test.ts:1181:47      sanitize            U       error formatting to sanitize GraphQL errors', async"
  - "src/__tests__/http-test.ts:1242:47      elaborate           U       error formatting to elaborate', async () => {"
  - "src/__tests__/http-test.ts:1298:37      Unexpected          U       message: 'Syntax Error: Unexpected Name \"syntax_error\""
  - "src/__tests__/http-test.ts:1305:36      lack                U       handles errors caused by a lack of query', async ()"
  - "src/__tests__/http-test.ts:1450:35      garbage             U       Content-Encoding', 'garbage')"
  - "src/__tests__/http-test.ts:1481:17      poorly              U       it('handles poorly formed variables', async"
  - "src/__tests__/http-test.ts:1481:24      formed              U       it('handles poorly formed variables', async ("
  - "src/__tests__/http-test.ts:1522:13      called              U       spy.calledWith("
  - "src/__tests__/http-test.ts:1523:44      replaced            U       ormatError` is deprecated and replaced by `customFormatErrorFn"
  - "src/__tests__/http-test.ts:1568:26      prettifying         U       it('allows disabling prettifying poorly formed requests"
  - "src/__tests__/http-test.ts:1607:31      John                U       variables: { who: ['John', 'Jane'] },"
  - "src/__tests__/http-test.ts:1607:39      Jane                U       variables: { who: ['John', 'Jane'] },"
  - "src/__tests__/http-test.ts:1616:75      cannot              U       John\", \"Jane\"]; String cannot represent a non string"
  - "src/__tests__/http-test.ts:1616:82      represent           U       Jane\"]; String cannot represent a non string value:"
  - "src/__tests__/http-test.ts:1639:13      Built               U       describe('Built-in GraphiQL support"
  - "src/__tests__/http-test.ts:1655:9       presents            U       it('presents GraphiQL when accepting"
  - "src/__tests__/http-test.ts:1655:32      accepting           U       presents GraphiQL when accepting HTML', async () =>"
  - "src/__tests__/http-test.ts:1758:9       escapes             U       it('escapes HTML in queries within"
  - "src/__tests__/http-test.ts:1811:9       renders             U       it('renders provided variables within"
  - "src/__tests__/http-test.ts:1811:17      provided            U       it('renders provided variables within GraphiQL"
  - "src/__tests__/http-test.ts:1931:9       prefers             U       it('prefers JSON if unknown accept"
  - "src/__tests__/http-test.ts:1952:25      explicitly          U       it('prefers JSON if explicitly requested raw response"
  - "src/__tests__/http-test.ts:1992:45      Fetcher             U       text).to.include('makeFetcher');"
  - "src/__tests__/http-test.ts:2091:53      really              U       AlwaysInvalidRule was really invalid!'),"
  - "src/__tests__/http-test.ts:2231:16      adding              U       it('allows adding extensions', async"
  - "src/__tests__/http-test.ts:2257:9       gives               U       it('gives extensions access to"
  - "src/__tests__/http-test.ts:2268:22      preserved           U       return { preservedResult: { ...result"
  - "src/__tests__/http-test.ts:2307:38      eventually          U       return Promise.resolve({ eventually: 42 });"
  - "src/__tests__/usage-test.ts:9:11        Useful          U       describe('Useful errors when incorrectly"
  - "src/__tests__/usage-test.ts:9:30        incorrectly     U       'Useful errors when incorrectly used', () => {"
  - "src/__tests__/usage-test.ts:99:7        validates       U       it('validates schema before executing"
  - "src/index.ts:8:3            Formatted           U       FormattedExecutionResult,"
  - "src/index.ts:32:48          coming              U       for IncomingMessage coming from http.Server"
  - "src/index.ts:39:52          providing           U       graphqlHTTP middleware by providing a schema"
  - "src/index.ts:70:29          whether             U       boolean to configure whether the output should be"
  - "src/index.ts:76:21          those               U       * in addition to those defined by the GraphQL"
  - "src/index.ts:97:67          produced            U       to format any errors produced by"
  - "src/index.ts:98:6           fulfilling          U       * fulfilling a GraphQL operation"
  - "src/index.ts:118:34         often               U       resulting JSON. This is often a useful place to add"
  - "src/index.ts:119:69         consumed            U       amount of resources consumed."
  - "src/index.ts:121:18         about               U       * Information about the request is provided"
  - "src/index.ts:130:19         optionally          U       * A boolean to optionally enable GraphiQL mode"
  - "src/index.ts:131:6          Alternatively       U       * Alternatively, instead of `true` you"
  - "src/index.ts:145:28         alternatively       U       _typename` field or alternatively calls the `isTypeOf"
  - "src/index.ts:183:28         takes               U       Middleware for express; takes an options object or"
  - "src/index.ts:193:36         referred            U       scoped variables are referred to at various stages"
  - "src/index.ts:193:51         various             U       variables are referred to at various stages in the asynchronous"
  - "src/index.ts:193:59         stages              U       referred to at various stages in the asynchronous"
  - "src/index.ts:193:100        below               U       asynchronous state machine below."
  - "src/index.ts:258:13         there               U       // If there is no query, but GraphiQL"
  - "src/index.ts:258:53         displayed           U       but GraphiQL will be displayed, do not produce"
  - "src/index.ts:258:71         produce             U       be displayed, do not produce"
  - "src/index.ts:259:20         otherwise           U       // a result, otherwise return a 400: Bad Request"
  - "src/index.ts:276:31         reporting           U       Parse source to AST, reporting any syntax error."
  - "src/index.ts:302:12         Determine           U       // Determine if this GET request"
  - "src/index.ts:305:33         shown               U       If GraphiQL can be shown, do not perform this"
  - "src/index.ts:307:14         themselves          U       // themselves if desired."
  - "src/index.ts:312:14         Otherwise           U       // Otherwise, report a 405: Method"
  - "src/index.ts:321:10         Perform             U       // Perform the execution, reporting"
  - "src/index.ts:359:34         Thrown              U       istanbul ignore next: Thrown by underlying library"
  - "src/index.ts:387:23         included            U       // If no data was included in the result, that"
  - "src/index.ts:387:52         indicates           U       in the result, that indicates a runtime query"
  - "src/index.ts:388:15         indicate            U       // error, indicate as such with a generic"
  - "src/index.ts:389:42         itself              U       Information about the error itself will still be contained"
  - "src/index.ts:397:11         formatted           U       const formattedResult: FormattedExecutionResu"
  - "src/index.ts:472:4          Provided            U       * Provided a \"Request\" provided"
  - "src/index.ts:472:57         typically           U       express or connect (typically a node style"
  - "src/index.ts:514:23         determine           U       Helper function to determine if GraphiQL can be displayed"
  - "src/parseBody.ts:22:48          keyed       U       already parsed a body as a keyed object, use it."
  - "src/parseBody.ts:40:29          didn't      U       Already parsed body we didn't recognise? Parse nothing"
  - "src/parseBody.ts:46:14          correct     U       // Use the correct body parser based on"
  - "src/renderGraphiQL.ts:12:73         stored          U       query is provided and no stored"
  - "src/renderGraphiQL.ts:19:32         enables         U       optional boolean which enables the header editor when"
  - "src/renderGraphiQL.ts:32:70         makes           U       header editor. Only makes"
  - "src/renderGraphiQL.ts:33:6          sense           U       * sense if headerEditorEnabled"
  - "src/renderGraphiQL.ts:51:4          Ensures         U       // Ensures string values are safe"
  - "src/renderGraphiQL.ts:62:25         receives        U       When express-graphql receives a request which does"
  - "src/renderGraphiQL.ts:63:65         explorer        U       the in-browser GraphQL explorer IDE."
  - "src/renderGraphiQL.ts:65:31         populated       U       shown, it will be pre-populated with the result of having"
  - "src/renderGraphiQL.ts:65:60         having          U       populated with the result of having executed the"
  - "src/renderGraphiQL.ts:65:67         executed        U       the result of having executed the"
  - "src/renderGraphiQL.ts:121:21        been            U       and as a result has been presented GraphiQL"
  - "src/renderGraphiQL.ts:121:26        presented       U       as a result has been presented GraphiQL - an in-browser"
  - "src/renderGraphiQL.ts:122:1         exploring       U       exploring GraphQL."
  - "src/renderGraphiQL.ts:124:8         wish            U       If you wish to receive JSON, provide"
  - "src/renderGraphiQL.ts:183:8         Produce         U       // Produce a Location query string"
  - "src/renderGraphiQL.ts:193:49        sans            U       from the current URL, sans the GraphQL parameters"
  - "src/renderGraphiQL.ts:208:8         Defines         U       // Defines a GraphQL fetcher using"
  - "src/renderGraphiQL.ts:247:47        edited          U       variables string is edited, update the URL bar"
  - "src/renderGraphiQL.ts:248:23        easily          U       // that it can be easily shared."
  - "tsconfig.json:4:6           declaration     U       \"declaration\": true,"
  - "tsconfig.json:5:6           isolated        U       \"isolatedModules\": true,"
  - "tsconfig.json:12:19         Cases           U       \"noFallthroughCasesInSwitch\": true,"
  - "tsconfig.json:13:8          Implicit        U       \"noImplicitReturns\": true,"
  - "tsconfig.json:13:16         Returns         U       \"noImplicitReturns\": true,"
  - "tsconfig.json:14:17         Indexed         U       \"noUncheckedIndexedAccess\": true,"
  - "tsconfig.json:15:8          Unused          U       \"noUnusedLocals\": true,"
  - "tsconfig.json:15:14         Locals          U       \"noUnusedLocals\": true,"
  - "tsconfig.json:17:11         Consistent      U       \"forceConsistentCasingInFileNames\": true"
  - "tsconfig.json:17:21         Casing          U       \"forceConsistentCasingInFileNames\": true,"
  - "tsconfig.json:20:6          preserve        U       \"preserveConstEnums\": true"
