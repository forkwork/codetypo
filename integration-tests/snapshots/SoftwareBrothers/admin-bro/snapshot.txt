
Repository: SoftwareBrothers/admin-bro
Url: "https://github.com/SoftwareBrothers/admin-bro.git"
Args: ["src/**/*.{ts,js,tsx,jsx}","**/*.md"]
Lines:
 Dictionary Error with (en_us) Error: ENOENT: no such file or directory, open './dictionaries/en_US/en_US.trie.gz'
 exit code: 1
-------------------------------------------
-------------------------------------------
CODE_OF_CONDUCT.md:11:23     - Unknown word (inclusive)       -- Using welcoming and inclusive language
CODE_OF_CONDUCT.md:11:3      - Unknown word (Using)           -- - Using welcoming and inclusive
CODE_OF_CONDUCT.md:12:23     - Unknown word (differing)       -- Being respectful of differing viewpoints and experiences
CODE_OF_CONDUCT.md:12:3      - Unknown word (Being)           -- - Being respectful of differing
CODE_OF_CONDUCT.md:12:33     - Unknown word (viewpoints)      -- respectful of differing viewpoints and experiences
CODE_OF_CONDUCT.md:12:48     - Unknown word (experiences)     -- differing viewpoints and experiences
CODE_OF_CONDUCT.md:12:9      - Unknown word (respectful)      -- - Being respectful of differing viewpoints
CODE_OF_CONDUCT.md:13:14     - Unknown word (accepting)       -- - Gracefully accepting constructive criticism
CODE_OF_CONDUCT.md:13:24     - Unknown word (constructive)    -- Gracefully accepting constructive criticism
CODE_OF_CONDUCT.md:13:3      - Unknown word (Gracefully)      -- - Gracefully accepting constructive
CODE_OF_CONDUCT.md:13:37     - Unknown word (criticism)       -- accepting constructive criticism
CODE_OF_CONDUCT.md:14:14     - Unknown word (collaboration)   -- - Attempting collaboration before conflict
CODE_OF_CONDUCT.md:14:28     - Unknown word (before)          -- Attempting collaboration before conflict
CODE_OF_CONDUCT.md:14:3      - Unknown word (Attempting)      -- - Attempting collaboration before
CODE_OF_CONDUCT.md:14:35     - Unknown word (conflict)        -- collaboration before conflict
CODE_OF_CONDUCT.md:15:15     - Unknown word (what)            -- - Focusing on what is best for the community
CODE_OF_CONDUCT.md:15:3      - Unknown word (Focusing)        -- - Focusing on what is best for
CODE_OF_CONDUCT.md:16:11     - Unknown word (empathy)         -- - Showing empathy towards other community
CODE_OF_CONDUCT.md:16:19     - Unknown word (towards)         -- - Showing empathy towards other community members
CODE_OF_CONDUCT.md:16:3      - Unknown word (Showing)         -- - Showing empathy towards other
CODE_OF_CONDUCT.md:18:13     - Unknown word (unacceptable)    -- Examples of unacceptable behavior by participants
CODE_OF_CONDUCT.md:18:38     - Unknown word (participants)    -- unacceptable behavior by participants include:
CODE_OF_CONDUCT.md:1:23      - Unknown word (Conduct)     -- Contributor Code of Conduct
CODE_OF_CONDUCT.md:1:3       - Unknown word (Contributor) -- # Contributor Code of Conduct
CODE_OF_CONDUCT.md:20:13     - Unknown word (threats)         -- - Violence, threats of violence, or inciting
CODE_OF_CONDUCT.md:20:24     - Unknown word (violence)        -- Violence, threats of violence, or inciting others
CODE_OF_CONDUCT.md:20:3      - Unknown word (Violence)        -- - Violence, threats of violence
CODE_OF_CONDUCT.md:20:37     - Unknown word (inciting)        -- threats of violence, or inciting others to commit self
CODE_OF_CONDUCT.md:20:46     - Unknown word (others)          -- violence, or inciting others to commit self-harm
CODE_OF_CONDUCT.md:20:63     - Unknown word (self)            -- inciting others to commit self-harm
CODE_OF_CONDUCT.md:20:68     - Unknown word (harm)            -- others to commit self-harm
CODE_OF_CONDUCT.md:21:14     - Unknown word (sexualized)      -- - The use of sexualized language or imagery
CODE_OF_CONDUCT.md:21:37     - Unknown word (imagery)         -- sexualized language or imagery and unwelcome sexual
CODE_OF_CONDUCT.md:21:49     - Unknown word (unwelcome)       -- language or imagery and unwelcome sexual attention or
CODE_OF_CONDUCT.md:21:66     - Unknown word (attention)       -- and unwelcome sexual attention or advances
CODE_OF_CONDUCT.md:21:79     - Unknown word (advances)        -- sexual attention or advances
CODE_OF_CONDUCT.md:22:13     - Unknown word (intentionally)   -- - Trolling, intentionally spreading misinformation
CODE_OF_CONDUCT.md:22:27     - Unknown word (spreading)       -- Trolling, intentionally spreading misinformation, insulting
CODE_OF_CONDUCT.md:22:3      - Unknown word (Trolling)        -- - Trolling, intentionally spreading
CODE_OF_CONDUCT.md:22:37     - Unknown word (misinformation)  -- intentionally spreading misinformation, insulting/derogatory
CODE_OF_CONDUCT.md:22:53     - Unknown word (insulting)       -- spreading misinformation, insulting/derogatory comments
CODE_OF_CONDUCT.md:22:63     - Unknown word (derogatory)      -- misinformation, insulting/derogatory comments, and personal
CODE_OF_CONDUCT.md:24:3      - Unknown word (Publishing)      -- - Publishing others' private information
CODE_OF_CONDUCT.md:24:43     - Unknown word (such)            -- private information, such as a physical or electronic
CODE_OF_CONDUCT.md:24:53     - Unknown word (physical)        -- information, such as a physical or electronic address
CODE_OF_CONDUCT.md:24:93     - Unknown word (explicit)        -- electronic address, without explicit permission
CODE_OF_CONDUCT.md:25:16     - Unknown word (reporting)       -- - Abuse of the reporting process to intentionally
CODE_OF_CONDUCT.md:25:3      - Unknown word (Abuse)           -- - Abuse of the reporting process
CODE_OF_CONDUCT.md:25:51     - Unknown word (harass)          -- process to intentionally harass or exclude others
CODE_OF_CONDUCT.md:26:22     - Unknown word (encouraging)     -- Advocating for, or encouraging, any of the above behavior
CODE_OF_CONDUCT.md:26:3      - Unknown word (Advocating)      -- - Advocating for, or encouraging
CODE_OF_CONDUCT.md:26:46     - Unknown word (above)           -- encouraging, any of the above behavior
CODE_OF_CONDUCT.md:27:23     - Unknown word (could)           -- Other conduct which could reasonably be considered
CODE_OF_CONDUCT.md:27:29     - Unknown word (reasonably)      -- conduct which could reasonably be considered inappropriate
CODE_OF_CONDUCT.md:27:43     - Unknown word (considered)      -- could reasonably be considered inappropriate in a profession
CODE_OF_CONDUCT.md:27:54     - Unknown word (inappropriate)   -- reasonably be considered inappropriate in a professional setting
CODE_OF_CONDUCT.md:27:73     - Unknown word (professional)   -- considered inappropriate in a professional setting
CODE_OF_CONDUCT.md:27:9      - Unknown word (conduct)         -- - Other conduct which could reasonably
CODE_OF_CONDUCT.md:29:8      - Unknown word (Responsibilities) -- ## Our Responsibilities
CODE_OF_CONDUCT.md:31:109    - Unknown word (take)             -- and are expected to take appropriate and fair
CODE_OF_CONDUCT.md:31:114    - Unknown word (appropriate)      -- are expected to take appropriate and fair corrective
CODE_OF_CONDUCT.md:31:130    - Unknown word (fair)             -- take appropriate and fair corrective action in
CODE_OF_CONDUCT.md:31:135    - Unknown word (corrective)       -- appropriate and fair corrective action in response to
CODE_OF_CONDUCT.md:31:25     - Unknown word (responsible)      -- Project maintainers are responsible for clarifying the standards
CODE_OF_CONDUCT.md:31:41     - Unknown word (clarifying)       -- are responsible for clarifying the standards of acceptable
CODE_OF_CONDUCT.md:31:69     - Unknown word (acceptable)       -- clarifying the standards of acceptable behavior and are expected
CODE_OF_CONDUCT.md:31:97     - Unknown word (expected)         -- acceptable behavior and are expected to take appropriate
CODE_OF_CONDUCT.md:33:112    - Unknown word (edits)            -- commits, code, wiki edits, issues, and other contributi
CODE_OF_CONDUCT.md:33:119    - Unknown word (issues)           -- commits, code, wiki edits, issues, and other contributions
CODE_OF_CONDUCT.md:33:137    - Unknown word (contributions)    -- edits, issues, and other contributions that are not aligned
CODE_OF_CONDUCT.md:33:164    - Unknown word (aligned)          -- contributions that are not aligned to this Code of Conduct
CODE_OF_CONDUCT.md:33:207    - Unknown word (temporarily)      -- of Conduct, or to ban temporarily or permanently any contributo
CODE_OF_CONDUCT.md:33:21     - Unknown word (have)             -- Project maintainers have the right and responsibility
CODE_OF_CONDUCT.md:33:222    - Unknown word (permanently)      -- to ban temporarily or permanently any contributor for
CODE_OF_CONDUCT.md:33:238    - Unknown word (contributor)      -- emporarily or permanently any contributor for other behaviors
CODE_OF_CONDUCT.md:33:275    - Unknown word (they)             -- other behaviors that they deem inappropriate,
CODE_OF_CONDUCT.md:33:280    - Unknown word (deem)             -- behaviors that they deem inappropriate, threatening
CODE_OF_CONDUCT.md:33:300    - Unknown word (threatening)      -- deem inappropriate, threatening, offensive, or harmful
CODE_OF_CONDUCT.md:33:313    - Unknown word (offensive)        -- inappropriate, threatening, offensive, or harmful.
CODE_OF_CONDUCT.md:33:327    - Unknown word (harmful)          -- threatening, offensive, or harmful.
CODE_OF_CONDUCT.md:33:40     - Unknown word (responsibility)   -- aintainers have the right and responsibility to remove, edit, or
CODE_OF_CONDUCT.md:33:66     - Unknown word (edit)             -- responsibility to remove, edit, or reject comments
CODE_OF_CONDUCT.md:37:100    - Unknown word (representing)     -- when an individual is representing the project or its community
CODE_OF_CONDUCT.md:37:199    - Unknown word (using)            -- or community include using an official project
CODE_OF_CONDUCT.md:37:208    - Unknown word (official)         -- community include using an official project e-mail address
CODE_OF_CONDUCT.md:37:22     - Unknown word (applies)          -- This Code of Conduct applies both within project
CODE_OF_CONDUCT.md:37:241    - Unknown word (posting)          -- project e-mail address, posting via an official social
CODE_OF_CONDUCT.md:37:265    - Unknown word (social)           -- posting via an official social media account, or acting
CODE_OF_CONDUCT.md:37:290    - Unknown word (acting)           -- social media account, or acting as an appointed representativ
CODE_OF_CONDUCT.md:37:30     - Unknown word (both)             -- Code of Conduct applies both within project spaces
CODE_OF_CONDUCT.md:37:303    - Unknown word (appointed)        -- account, or acting as an appointed representative at an
CODE_OF_CONDUCT.md:37:313    - Unknown word (representative)   -- acting as an appointed representative at an online or offline
CODE_OF_CONDUCT.md:37:35     - Unknown word (within)           -- Conduct applies both within project spaces and in
CODE_OF_CONDUCT.md:37:359    - Unknown word (Representation)   -- online or offline event. Representation of a project may be
CODE_OF_CONDUCT.md:37:394    - Unknown word (further)          -- of a project may be further defined and clarified
CODE_OF_CONDUCT.md:37:414    - Unknown word (clarified)        -- further defined and clarified by project maintainers
CODE_OF_CONDUCT.md:37:50     - Unknown word (spaces)           -- both within project spaces and in public spaces
CODE_OF_CONDUCT.md:37:86     - Unknown word (individual)       -- public spaces when an individual is representing the
CODE_OF_CONDUCT.md:39:4      - Unknown word (Enforcement)      -- ## Enforcement
CODE_OF_CONDUCT.md:3:8       - Unknown word (Pledge)      -- ## Our Pledge
CODE_OF_CONDUCT.md:41:134    - Unknown word (complaints)       -- adminjs@adminjs.co. All complaints will be reviewed and
CODE_OF_CONDUCT.md:41:14     - Unknown word (abusive)          -- Instances of abusive, harassing, or otherwise
CODE_OF_CONDUCT.md:41:145    - Unknown word (will)             -- adminjs.co. All complaints will be reviewed and investigated
CODE_OF_CONDUCT.md:41:153    - Unknown word (reviewed)         -- All complaints will be reviewed and investigated and
CODE_OF_CONDUCT.md:41:166    - Unknown word (investigated)     -- will be reviewed and investigated and will result in a
CODE_OF_CONDUCT.md:41:217    - Unknown word (deemed)           -- in a response that is deemed necessary and appropriate
CODE_OF_CONDUCT.md:41:224    - Unknown word (necessary)        -- response that is deemed necessary and appropriate to the
CODE_OF_CONDUCT.md:41:23     - Unknown word (harassing)        -- Instances of abusive, harassing, or otherwise unacceptable
CODE_OF_CONDUCT.md:41:257    - Unknown word (circumstances)    -- and appropriate to the circumstances. The project team is
CODE_OF_CONDUCT.md:41:292    - Unknown word (obligated)        -- The project team is obligated to maintain confidentiality
CODE_OF_CONDUCT.md:41:305    - Unknown word (maintain)         -- team is obligated to maintain confidentiality with
CODE_OF_CONDUCT.md:41:314    - Unknown word (confidentiality)  -- obligated to maintain confidentiality with regard to the reporter
CODE_OF_CONDUCT.md:41:335    - Unknown word (regard)           -- confidentiality with regard to the reporter of an
CODE_OF_CONDUCT.md:41:349    - Unknown word (reporter)         -- dentiality with regard to the reporter of an incident.
CODE_OF_CONDUCT.md:41:364    - Unknown word (incident)         -- to the reporter of an incident.
CODE_OF_CONDUCT.md:41:37     - Unknown word (otherwise)        -- abusive, harassing, or otherwise unacceptable behavior
CODE_OF_CONDUCT.md:41:76     - Unknown word (reported)         -- unacceptable behavior may be reported by contacting us through
CODE_OF_CONDUCT.md:41:88     - Unknown word (contacting)       -- behavior may be reported by contacting us through adminjs@adminjs
CODE_OF_CONDUCT.md:43:106    - Unknown word (permanent)        -- may face temporary or permanent repercussions as determined
CODE_OF_CONDUCT.md:43:116    - Unknown word (repercussions)    -- temporary or permanent repercussions as determined by other
CODE_OF_CONDUCT.md:43:133    - Unknown word (determined)      -- permanent repercussions as determined by other members of
CODE_OF_CONDUCT.md:43:178    - Unknown word (leadership)      -- members of the project's leadership.
CODE_OF_CONDUCT.md:43:32     - Unknown word (follow)           -- maintainers who do not follow or enforce the Code
CODE_OF_CONDUCT.md:43:42     - Unknown word (enforce)          -- who do not follow or enforce the Code of Conduct
CODE_OF_CONDUCT.md:43:73     - Unknown word (good)             -- the Code of Conduct in good faith may face temporary
CODE_OF_CONDUCT.md:43:78     - Unknown word (faith)            -- Code of Conduct in good faith may face temporary or
CODE_OF_CONDUCT.md:45:100    - Unknown word (place)           -- where the incident took place is covered by our Code
CODE_OF_CONDUCT.md:45:109    - Unknown word (covered)         -- incident took place is covered by our Code of Conduct
CODE_OF_CONDUCT.md:45:12     - Unknown word (unsure)          -- If you are unsure whether an incident
CODE_OF_CONDUCT.md:45:146    - Unknown word (encourage)       -- Code of Conduct, **we encourage you to still report
CODE_OF_CONDUCT.md:45:163    - Unknown word (still)           -- we encourage you to still report it**. We would
CODE_OF_CONDUCT.md:45:185    - Unknown word (would)           -- still report it**. We would prefer to have a few
CODE_OF_CONDUCT.md:45:19     - Unknown word (whether)         -- If you are unsure whether an incident is a violation
CODE_OF_CONDUCT.md:45:191    - Unknown word (prefer)          -- report it**. We would prefer to have a few extra
CODE_OF_CONDUCT.md:45:235    - Unknown word (decide)          -- extra reports where we decide to take no action, than
CODE_OF_CONDUCT.md:45:261    - Unknown word (than)            -- decide to take no action, than to leave an incident
CODE_OF_CONDUCT.md:45:290    - Unknown word (unnoticed)       -- leave an incident go unnoticed and unresolved that
CODE_OF_CONDUCT.md:45:304    - Unknown word (unresolved)      -- incident go unnoticed and unresolved that may result in an
CODE_OF_CONDUCT.md:45:360    - Unknown word (feel)            -- individual or group to feel like they can no longer
CODE_OF_CONDUCT.md:45:365    - Unknown word (like)            -- individual or group to feel like they can no longer participat
CODE_OF_CONDUCT.md:45:382    - Unknown word (longer)          -- feel like they can no longer participate in the community
CODE_OF_CONDUCT.md:45:389    - Unknown word (participate)     -- like they can no longer participate in the community. Reports
CODE_OF_CONDUCT.md:45:458    - Unknown word (also)            -- not a violation will also allow us to improve
CODE_OF_CONDUCT.md:45:475    - Unknown word (improve)         -- will also allow us to improve our Code of Conduct
CODE_OF_CONDUCT.md:45:517    - Unknown word (surrounding)     -- Conduct and processes surrounding it. If you witness a
CODE_OF_CONDUCT.md:45:540    - Unknown word (witness)         -- surrounding it. If you witness a dangerous situation
CODE_OF_CONDUCT.md:45:550    - Unknown word (dangerous)       -- it. If you witness a dangerous situation or someone
CODE_OF_CONDUCT.md:45:560    - Unknown word (situation)       -- witness a dangerous situation or someone in distress
CODE_OF_CONDUCT.md:45:573    - Unknown word (someone)         -- dangerous situation or someone in distress, we encourage
CODE_OF_CONDUCT.md:45:584    - Unknown word (distress)        -- situation or someone in distress, we encourage you to
CODE_OF_CONDUCT.md:45:621    - Unknown word (even)            -- encourage you to report even if you are only an observer
CODE_OF_CONDUCT.md:45:645    - Unknown word (observer)        -- even if you are only an observer.
CODE_OF_CONDUCT.md:45:76     - Unknown word (where)           -- or whether the space where the incident took place
CODE_OF_CONDUCT.md:45:95     - Unknown word (took)            -- space where the incident took place is covered by
CODE_OF_CONDUCT.md:47:4      - Unknown word (Attribution)     -- ## Attribution
CODE_OF_CONDUCT.md:49:25     - Unknown word (adapted)         -- This Code of Conduct is adapted from the [Contributor
CODE_OF_CONDUCT.md:49:55     - Unknown word (Covenant)        -- from the [Contributor Covenant][homepage], version
CODE_OF_CONDUCT.md:5:100     - Unknown word (pledge)       -- contributors and maintainers pledge to making participation
CODE_OF_CONDUCT.md:5:110     - Unknown word (making)       -- maintainers pledge to making participation in our
CODE_OF_CONDUCT.md:5:117     - Unknown word (participation) -- maintainers pledge to making participation in our project and our
CODE_OF_CONDUCT.md:5:166     - Unknown word (harassment)    -- and our community a harassment-free experience for
CODE_OF_CONDUCT.md:5:182     - Unknown word (experience)    -- community a harassment-free experience for everyone, regardless
CODE_OF_CONDUCT.md:5:197     - Unknown word (everyone)      -- free experience for everyone, regardless of age,
CODE_OF_CONDUCT.md:5:20      - Unknown word (fostering)   -- In the interest of fostering an open and welcoming
CODE_OF_CONDUCT.md:5:207     - Unknown word (regardless)    -- experience for everyone, regardless of age, body size, disability
CODE_OF_CONDUCT.md:5:237     - Unknown word (disability)    -- regardless of age, body size, disability, ethnicity, sex characteristi
CODE_OF_CONDUCT.md:5:249     - Unknown word (ethnicity)     -- body size, disability, ethnicity, sex characteristics
CODE_OF_CONDUCT.md:5:264     - Unknown word (characteristics) -- disability, ethnicity, sex characteristics, gender identity and
CODE_OF_CONDUCT.md:5:281     - Unknown word (gender)          -- sex characteristics, gender identity and expression
CODE_OF_CONDUCT.md:5:334     - Unknown word (education)       -- level of experience, education, socio-economic status
CODE_OF_CONDUCT.md:5:345     - Unknown word (socio)           -- experience, education, socio-economic status, nationality
CODE_OF_CONDUCT.md:5:351     - Unknown word (economic)        -- experience, education, socio-economic status, nationality
CODE_OF_CONDUCT.md:5:368     - Unknown word (nationality)     -- socio-economic status, nationality, personal appearance
CODE_OF_CONDUCT.md:5:390     - Unknown word (appearance)      -- nationality, personal appearance, race, religion, or
CODE_OF_CONDUCT.md:5:408     - Unknown word (religion)        -- personal appearance, race, religion, or sexual identity
CODE_OF_CONDUCT.md:5:42      - Unknown word (welcoming)   -- fostering an open and welcoming environment, we as contributo
CODE_OF_CONDUCT.md:5:421     - Unknown word (sexual)          -- race, religion, or sexual identity and orientation
CODE_OF_CONDUCT.md:5:71      - Unknown word (contributors) -- welcoming environment, we as contributors and maintainers pledge
CODE_OF_CONDUCT.md:5:8       - Unknown word (interest)    -- In the interest of fostering an open
CODE_OF_CONDUCT.md:5:88      - Unknown word (maintainers)  -- as contributors and maintainers pledge to making participatio
CODE_OF_CONDUCT.md:9:13      - Unknown word (behavior)        -- Examples of behavior that contributes to
CODE_OF_CONDUCT.md:9:22      - Unknown word (that)            -- Examples of behavior that contributes to creating
CODE_OF_CONDUCT.md:9:27      - Unknown word (contributes)     -- Examples of behavior that contributes to creating a positive
CODE_OF_CONDUCT.md:9:42      - Unknown word (creating)        -- that contributes to creating a positive environment
CODE_OF_CONDUCT.md:9:53      - Unknown word (positive)        -- contributes to creating a positive environment include
CONTRIBUTING.md:102:13    - Unknown word (those)         -- 3. Now link those packages in your local
CONTRIBUTING.md:109:4     - Unknown word (Your)          -- 4. Your test application should
CONTRIBUTING.md:10:168    - Unknown word (passwords)      -- project (e. g. `@adminjs/passwords`).
CONTRIBUTING.md:10:93     - Unknown word (premade)        -- system`) and a set of premade `features` which you
CONTRIBUTING.md:111:1     - Unknown word (Having)        -- Having lots of registered packages
CONTRIBUTING.md:111:16    - Unknown word (registered)    -- Having lots of registered packages can bring confusion
CONTRIBUTING.md:111:40    - Unknown word (bring)         -- registered packages can bring confusion, you can use
CONTRIBUTING.md:111:46    - Unknown word (confusion)     -- registered packages can bring confusion, you can use the command
CONTRIBUTING.md:111:81    - Unknown word (below)         -- can use the command below to find out which packages
CONTRIBUTING.md:118:5     - Unknown word (Alternative)   -- ### Alternative to yarn link
CONTRIBUTING.md:119:164   - Unknown word (added)         -- all AdminJS packages added as submodules in one
CONTRIBUTING.md:119:306   - Unknown word (enough)        -- README should be detailed enough to get you started.
CONTRIBUTING.md:119:324   - Unknown word (started)       -- detailed enough to get you started.
CONTRIBUTING.md:119:5     - Unknown word (alternative)   -- The alternative to `yarn link` is to
CONTRIBUTING.md:121:1     - Unknown word (Please)        -- Please note that using `yarn
CONTRIBUTING.md:121:231   - Unknown word (updating)      -- ) and installing or updating any new dependency in
CONTRIBUTING.md:121:83    - Unknown word (resolved)      -- that we haven't yet resolved. One of them is that
CONTRIBUTING.md:122:148   - Unknown word (same)          -- other submodules in the same workspace immediately
CONTRIBUTING.md:122:163   - Unknown word (immediately)   -- in the same workspace immediately.
CONTRIBUTING.md:122:38    - Unknown word (deal)          -- that you don't have to deal with `yarn link` dependency
CONTRIBUTING.md:122:5     - Unknown word (upside)        -- The upside is that you don't have
CONTRIBUTING.md:12:4      - Unknown word (Contributing)   -- ## Contributing
CONTRIBUTING.md:15:101    - Unknown word (done)           -- on and after you're done with your changes, open
CONTRIBUTING.md:15:16     - Unknown word (contribute)     -- If you want to contribute to the project, fork
CONTRIBUTING.md:15:8      - Unknown word (want)           -- If you want to contribute to the
CONTRIBUTING.md:17:103    - Unknown word (automatically)  -- release) library to automatically create `releases` when
CONTRIBUTING.md:17:125    - Unknown word (releases)       -- automatically create `releases` when a pull request
CONTRIBUTING.md:17:14     - Unknown word (uses)           -- AdminJS team uses [semantic-release](https
CONTRIBUTING.md:17:158    - Unknown word (merged)         -- when a pull request is merged to `master` branch or
CONTRIBUTING.md:17:250    - Unknown word (Additionally)   -- merged to `beta` branch. Additionally, based on your commit
CONTRIBUTING.md:17:321    - Unknown word (generates)      -- library automatically generates a changelog.
CONTRIBUTING.md:19:18     - Unknown word (there)          -- Because of this, there is a strict requirement
CONTRIBUTING.md:19:29     - Unknown word (strict)         -- of this, there is a strict requirement on how you
CONTRIBUTING.md:19:36     - Unknown word (requirement)    -- this, there is a strict requirement on how you should name
CONTRIBUTING.md:21:24     - Unknown word (prefixed)       -- Branch names should be prefixed with `fix/`, `chore
CONTRIBUTING.md:21:47     - Unknown word (chore)          -- prefixed with `fix/`, `chore/`, `feat/` or `test
CONTRIBUTING.md:21:57     - Unknown word (feat)           -- with `fix/`, `chore/`, `feat/` or `test/`.
CONTRIBUTING.md:23:79     - Unknown word (following)      -- `, `test:` with the following rules:
CONTRIBUTING.md:24:18     - Unknown word (starting)       -- 1. When a commit starting with `chore:` or `test
CONTRIBUTING.md:25:82     - Unknown word (upgrades)       -- will be created which upgrades the patch version of
CONTRIBUTING.md:27:124    - Unknown word (major)          -- created which upgrades the major version of the library
CONTRIBUTING.md:27:23     - Unknown word (BREAKING)       -- When a commit has `BREAKING CHANGE: xxxxx` inside
CONTRIBUTING.md:27:47     - Unknown word (inside)         -- BREAKING CHANGE: xxxxx` inside of it's **description
CONTRIBUTING.md:28:19     - Unknown word (additional)     -- 5. There are also additional rules defined in `.releaserc
CONTRIBUTING.md:28:49     - Unknown word (releaserc)      -- additional rules defined in `.releaserc`:
CONTRIBUTING.md:29:104    - Unknown word (being)          -- patch version despite being `feat` (feature) commits
CONTRIBUTING.md:29:209    - Unknown word (translation)    -- want to create a new translation (`feat(locale)`) or
CONTRIBUTING.md:29:275    - Unknown word (doesn't)        -- a small feature that doesn't affect the library much
CONTRIBUTING.md:29:283    - Unknown word (affect)         -- feature that doesn't affect the library much (`feat
CONTRIBUTING.md:29:302    - Unknown word (much)           -- t affect the library much (`feat(small)`).
CONTRIBUTING.md:29:96     - Unknown word (despite)        -- upgrade the patch version despite being `feat` (feature
CONTRIBUTING.md:30:102    - Unknown word (These)          -- being `chore` commits. These are commits automatically
CONTRIBUTING.md:30:271    - Unknown word (manually)       -- only upgrade a package manually.
CONTRIBUTING.md:31:108    - Unknown word (precedence)     -- version upgrades take precedence, for example a pull
CONTRIBUTING.md:31:276    - Unknown word (appear)         -- commit messages will appear in the changelog.
CONTRIBUTING.md:31:40     - Unknown word (contains)       -- request is merged which contains multiple commit messages
CONTRIBUTING.md:31:49     - Unknown word (multiple)       -- merged which contains multiple commit messages, the
CONTRIBUTING.md:31:79     - Unknown word (higher)         -- commit messages, the higher version upgrades take
CONTRIBUTING.md:33:112    - Unknown word (Ideally)        -- of your pull request. Ideally you would be using
CONTRIBUTING.md:33:153    - Unknown word (amend)          -- using `git commit --amend` so that there's only
CONTRIBUTING.md:33:168    - Unknown word (there's)        -- commit --amend` so that there's only one commit in your
CONTRIBUTING.md:33:27     - Unknown word (fixes)          -- you work on your bug fixes or new features, make
CONTRIBUTING.md:33:55     - Unknown word (sure)           -- or new features, make sure they only concern the
CONTRIBUTING.md:33:70     - Unknown word (concern)        -- make sure they only concern the subject of your
CONTRIBUTING.md:33:82     - Unknown word (subject)        -- they only concern the subject of your pull request
CONTRIBUTING.md:34:155    - Unknown word (contain)        -- message should only contain changes it refers to
CONTRIBUTING.md:34:174    - Unknown word (refers)         -- only contain changes it refers to.
CONTRIBUTING.md:34:37     - Unknown word (more)           -- reason you want to make more than one change and
CONTRIBUTING.md:34:66     - Unknown word (need)           -- than one change and you need to have multiple commit
CONTRIBUTING.md:34:8      - Unknown word (some)           -- If for some reason you want to make
CONTRIBUTING.md:36:102    - Unknown word (merging)        -- usually `squash` them when merging which can result in
CONTRIBUTING.md:36:132    - Unknown word (poor)           -- which can result in a poor release changelog.
CONTRIBUTING.md:36:55     - Unknown word (proper)         -- lot of commits without proper messages, we usually
CONTRIBUTING.md:36:75     - Unknown word (usually)        -- proper messages, we usually `squash` them when merging
CONTRIBUTING.md:36:92     - Unknown word (them)           -- we usually `squash` them when merging which can
CONTRIBUTING.md:38:5      - Unknown word (Issues)         -- ### Issues
CONTRIBUTING.md:39:113    - Unknown word (complex)        -- If your issue is a complex one and would require
CONTRIBUTING.md:39:135    - Unknown word (require)        -- complex one and would require us to reproduce this
CONTRIBUTING.md:39:149    - Unknown word (reproduce)      -- would require us to reproduce this to respond, a test
CONTRIBUTING.md:39:24     - Unknown word (please)         -- When creating an issue please try to describe your
CONTRIBUTING.md:39:267    - Unknown word (ideal)          -- your problem would be ideal.
CONTRIBUTING.md:39:68     - Unknown word (many)           -- your problem with as many details as possible
CONTRIBUTING.md:39:84     - Unknown word (possible)       -- with as many details as possible. If your issue is a
CONTRIBUTING.md:3:27      - Unknown word (libraries)   -- Explanation of AdminJS libraries
CONTRIBUTING.md:3:4       - Unknown word (Explanation) -- ## Explanation of AdminJS libraries
CONTRIBUTING.md:42:5      - Unknown word (Translations)   -- ### Translations
CONTRIBUTING.md:44:20     - Unknown word (translations)   -- You can contribute translations via the [fink localization
CONTRIBUTING.md:44:42     - Unknown word (fink)           -- translations via the [fink localization editor
CONTRIBUTING.md:44:47     - Unknown word (localization)   -- translations via the [fink localization editor](https://fink
CONTRIBUTING.md:46:18     - Unknown word (badge)          -- [![inlang status badge](https://badge.inlang
CONTRIBUTING.md:46:4      - Unknown word (inlang)         -- [![inlang status badge](https
CONTRIBUTING.md:48:15     - Unknown word (locally)        -- ## Developing locally
CONTRIBUTING.md:48:4      - Unknown word (Developing)     -- ## Developing locally
CONTRIBUTING.md:4:1       - Unknown word (There)       -- There are three main terms
CONTRIBUTING.md:54:4      - Unknown word (bash)          -- ```bash
CONTRIBUTING.md:68:106    - Unknown word (might)         -- application. However, you might have to restart your
CONTRIBUTING.md:68:15     - Unknown word (able)          -- You should be able to see your local changes
CONTRIBUTING.md:68:93     - Unknown word (However)       -- your test application. However, you might have to restart
CONTRIBUTING.md:6:19      - Unknown word (library)     -- * Core - the main library, containing basically
CONTRIBUTING.md:6:28      - Unknown word (containing)  -- - the main library, containing basically all the logic
CONTRIBUTING.md:6:39      - Unknown word (basically)   -- library, containing basically all the logic which
CONTRIBUTING.md:6:57      - Unknown word (logic)       -- containing basically all the logic which you can find in
CONTRIBUTING.md:6:77      - Unknown word (find)        -- logic which you can find in `adminjs` repository
CONTRIBUTING.md:6:86      - Unknown word (adminjs)     -- which you can find in `adminjs` repository
CONTRIBUTING.md:72:10     - Unknown word (described)     -- The case described above is the easiest
CONTRIBUTING.md:72:150    - Unknown word (chain)         -- will require you to chain `yarn link` commands
CONTRIBUTING.md:72:33     - Unknown word (easiest)       -- described above is the easiest one. Now let's assume
CONTRIBUTING.md:77:4      - Unknown word (Since)         -- 4. Since `@adminjs/design-system
CONTRIBUTING.md:77:40     - Unknown word (dependency)    -- design-system` is a dependency of `adminjs`, open
CONTRIBUTING.md:7:156     - Unknown word (example)     -- specific routes. For example `@adminjs/express`.
CONTRIBUTING.md:7:24      - Unknown word (wrappers)    -- Plugin - plugins are wrappers around popular frameworks
CONTRIBUTING.md:7:33      - Unknown word (around)      -- plugins are wrappers around popular frameworks which
CONTRIBUTING.md:7:40      - Unknown word (popular)     -- are wrappers around popular frameworks which allow
CONTRIBUTING.md:7:48      - Unknown word (frameworks)  -- wrappers around popular frameworks which allow you to connect
CONTRIBUTING.md:7:97      - Unknown word (your)        -- to connect AdminJS to your Node.js server and build
CONTRIBUTING.md:82:79     - Unknown word (haven't)       -- linked packages (if you haven't done it before).
CONTRIBUTING.md:88:147    - Unknown word (concerning)    -- panel in your browser concerning multiple React instances
CONTRIBUTING.md:88:62     - Unknown word (fine)          -- now, it should build fine, but you might see some
CONTRIBUTING.md:89:108    - Unknown word (meaning)       -- install all of them, meaning you will have `react
CONTRIBUTING.md:89:12     - Unknown word (occurs)        -- This error occurs because when you install
CONTRIBUTING.md:89:138    - Unknown word (installed)     -- you will have `react` installed in your `adminjs-design
CONTRIBUTING.md:89:273    - Unknown word (solve)         -- The easiest way to solve this would be to use
CONTRIBUTING.md:8:13      - Unknown word (adapters)    -- * Adapter - adapters are wrappers around
CONTRIBUTING.md:8:162     - Unknown word (Their)       -- BaseProperty` components. Their task is to translate
CONTRIBUTING.md:8:225     - Unknown word (something)   -- specific filters/queries to something understandable by your
CONTRIBUTING.md:8:235     - Unknown word (understandable) -- queries to something understandable by your ORM/ODM of choice
CONTRIBUTING.md:8:269     - Unknown word (choice)         -- rstandable by your ORM/ODM of choice in order to communicate
CONTRIBUTING.md:8:288     - Unknown word (communicate)    -- of choice in order to communicate with the database. For
CONTRIBUTING.md:8:3       - Unknown word (Adapter)     -- * Adapter - adapters are wrappers
CONTRIBUTING.md:8:67      - Unknown word (They)        -- supported ORMs and ODMs. They export classes which
CONTRIBUTING.md:8:79      - Unknown word (classes)     -- and ODMs. They export classes which extend `BaseDatabase
CONTRIBUTING.md:94:12     - Unknown word (installing)    -- We're also installing `react-dom` and `styled
CONTRIBUTING.md:94:67     - Unknown word (these)         -- components` because these two libraries also cause
CONTRIBUTING.md:94:92     - Unknown word (cause)         -- these two libraries also cause similar issues to `react
CONTRIBUTING.md:94:98     - Unknown word (similar)       -- libraries also cause similar issues to `react`.
CONTRIBUTING.md:95:4      - Unknown word (Navigate)      -- 2. Navigate to installed `react
CONTRIBUTING.md:97:11     - Unknown word (modules)       -- $ cd node_modules/react && yarn link
CodeTypo: Files checked: 441, Issues found: 6203 in 354 files with 4 errors.
Dictionary Error with (en_us) Error: ENOENT: no such file or directory, open './dictionaries/en_US/en_US.trie.gz'
Dictionary Error with (filetypes) Error: ENOENT: no such file or directory, open './dictionaries/filetypes/filetypes.txt.gz'
Dictionary Error with (filetypes) Error: ENOENT: no such file or directory, open './dictionaries/filetypes/filetypes.txt.gz'
Dictionary Error with (html-symbol-entities) Error: ENOENT: no such file or directory, open './dictionaries/html-symbol-entities/entities.txt.gz'
Dictionary Error with (html-symbol-entities) Error: ENOENT: no such file or directory, open './dictionaries/html-symbol-entities/entities.txt.gz'
Dictionary Error with (public-licenses) Error: ENOENT: no such file or directory, open './dictionaries/public-licenses/public-licenses.txt.gz'
Dictionary Error with (public-licenses) Error: ENOENT: no such file or directory, open './dictionaries/public-licenses/public-licenses.txt.gz'
Errors:
LICENSE.md:1:1       - Unknown word (Copyright)  -- Copyright 2018 SoftwareBrothers
LICENSE.md:1:24      - Unknown word (Brothers)   -- Copyright 2018 SoftwareBrothers.co
LICENSE.md:3:15      - Unknown word (hereby)     -- Permission is hereby granted, free of charge
LICENSE.md:3:180     - Unknown word (restriction) -- the Software without restriction, including without limitation
LICENSE.md:3:193     - Unknown word (including)   -- without restriction, including without limitation the
LICENSE.md:3:211     - Unknown word (limitation)  -- estriction, including without limitation the rights to use, copy
LICENSE.md:3:22      - Unknown word (granted)    -- Permission is hereby granted, free of charge, to
LICENSE.md:3:226     - Unknown word (rights)      -- without limitation the rights to use, copy, modify
LICENSE.md:3:271     - Unknown word (distribute)  -- modify, merge, publish, distribute, sublicense, and/or
LICENSE.md:3:283     - Unknown word (sublicense)  -- publish, distribute, sublicense, and/or sell copies
LICENSE.md:3:302     - Unknown word (sell)        -- sublicense, and/or sell copies of the Software
LICENSE.md:3:307     - Unknown word (copies)      -- sublicense, and/or sell copies of the Software, and
LICENSE.md:3:338     - Unknown word (permit)      -- the Software, and to permit persons to whom the
LICENSE.md:3:345     - Unknown word (persons)     -- Software, and to permit persons to whom the Software
LICENSE.md:3:356     - Unknown word (whom)        -- to permit persons to whom the Software is furnished
LICENSE.md:3:377     - Unknown word (furnished)   -- whom the Software is furnished to do so, subject to
LICENSE.md:3:39      - Unknown word (charge)     -- hereby granted, free of charge, to any person obtaining
LICENSE.md:3:61      - Unknown word (obtaining)  -- charge, to any person obtaining a copy of this software
LICENSE.md:5:102     - Unknown word (portions)    -- copies or substantial portions of the Software.
LICENSE.md:5:11      - Unknown word (copyright)   -- The above copyright notice and this permission
LICENSE.md:5:21      - Unknown word (notice)      -- The above copyright notice and this permission
LICENSE.md:5:55      - Unknown word (shall)       -- this permission notice shall be included in all copies
LICENSE.md:5:64      - Unknown word (included)    -- permission notice shall be included in all copies or substantial
LICENSE.md:5:90      - Unknown word (substantial) -- included in all copies or substantial portions of the Software
LICENSE.md:7:118     - Unknown word (WARRANTIES)  -- BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
LICENSE.md:7:149     - Unknown word (FITNESS)     -- OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE
LICENSE.md:7:163     - Unknown word (PARTICULAR)  -- ERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
LICENSE.md:7:17      - Unknown word (PROVIDED)    -- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY
LICENSE.md:7:174     - Unknown word (PURPOSE)     -- FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
LICENSE.md:7:186     - Unknown word (NONINFRINGEMENT) -- PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
LICENSE.md:7:215     - Unknown word (SHALL)           -- NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
LICENSE.md:7:225     - Unknown word (AUTHORS)         -- IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
LICENSE.md:7:236     - Unknown word (COPYRIGHT)       -- SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR
LICENSE.md:7:246     - Unknown word (HOLDERS)         -- AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM
LICENSE.md:7:257     - Unknown word (LIABLE)          -- COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES
LICENSE.md:7:279     - Unknown word (DAMAGES)         -- LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
LICENSE.md:7:296     - Unknown word (LIABILITY)       -- CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
LICENSE.md:7:307     - Unknown word (WHETHER)         -- OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT
LICENSE.md:7:331     - Unknown word (CONTRACT)        -- WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
LICENSE.md:7:341     - Unknown word (TORT)            -- ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
LICENSE.md:7:349     - Unknown word (OTHERWISE)       -- OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
LICENSE.md:7:360     - Unknown word (ARISING)         -- TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
LICENSE.md:7:43      - Unknown word (WARRANTY)    -- PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
LICENSE.md:7:436     - Unknown word (DEALINGS)        -- OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
LICENSE.md:7:59      - Unknown word (KIND)        -- WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED
LICENSE.md:7:76      - Unknown word (IMPLIED)     -- ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED
LICENSE.md:7:85      - Unknown word (INCLUDING)   -- EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
README.md:16:21     - Unknown word (look)       -- You can also have a look at our customized AdminJS
README.md:16:33     - Unknown word (customized) -- also have a look at our customized AdminJS dashboard which
README.md:16:74     - Unknown word (various)    -- dashboard which shows various library statistics:
README.md:20:4      - Unknown word (Getting)    -- ## Getting started
README.md:23:51     - Unknown word (mentioned)  -- demo.adminjs.co) as mentioned above
README.md:27:66     - Unknown word (help)       -- link/discord) to get help and be inspired.
README.md:27:78     - Unknown word (inspired)   -- to get help and be inspired.
README.md:29:28     - Unknown word (solves)     -- kind of problems it solves
README.md:29:8      - Unknown word (kind)       -- # What kind of problems it solves
README.md:31:118    - Unknown word (couple)     -- com/) for rendering a couple of REST routes and
README.md:33:1      - Unknown word (Everything) -- Everything works fine, but now
README.md:35:3      - Unknown word (perform)    -- * perform custom _business_ actions
README.md:36:34     - Unknown word (initial)    -- the tables with the _initial_ data,
README.md:37:23     - Unknown word (pages)      -- build custom report pages,
README.md:38:43     - Unknown word (programmers) -- members (not necessary programmers) to see what is going
README.md:38:71     - Unknown word (going)       -- programmers) to see what is going on in the application
README.md:3:128     - Unknown word (provide)    -- You, as a developer, provide database models (like
README.md:3:158     - Unknown word (posts)      -- database models (like posts, comments, stores, products
README.md:3:195     - Unknown word (whatever)   -- stores, products or whatever else your application
README.md:3:264     - Unknown word (allows)     -- AdminJS generates UI which allows you (or other trusted
README.md:3:76      - Unknown word (plugged)    -- interface that can be plugged into your application
README.md:40:15     - Unknown word (cases)       -- And all these cases can be solved by AdminJS
README.md:40:28     - Unknown word (solved)      -- all these cases can be solved by AdminJS. By adding
README.md:40:50     - Unknown word (adding)      -- solved by AdminJS. By adding couple of lines of code
README.md:47:3      - Unknown word (Full)        -- * Full featured dashboard with
README.md:47:8      - Unknown word (featured)    -- * Full featured dashboard with widgets
README.md:48:19     - Unknown word (decorators)  -- * Custom resource decorators
README.md:50:4      - Unknown word (Contribute)  -- ## Contribute
README.md:52:42     - Unknown word (develop)     -- work on an AdminJS and develop new features please
README.md:52:85     - Unknown word (Contribution) -- please check out our [Contribution Guide](https://github
README.md:52:98     - Unknown word (Guide)        -- out our [Contribution Guide](https://github.com
README.md:54:20     - Unknown word (instructions) -- There you can find instructions on how to run AdminJS
README.md:56:11     - Unknown word (searching)    -- If you're searching for tasks you can contribute
README.md:56:113    - Unknown word (Board)        -- issues in our [Kanban Board](https://github.com
README.md:58:14     - Unknown word (large)        -- Any small or large contribution or any
README.md:58:20     - Unknown word (contribution) -- Any small or large contribution or any input into discussion
README.md:58:51     - Unknown word (discussion)   -- ontribution or any input into discussion is welcome!
README.md:58:65     - Unknown word (welcome)      -- input into discussion is welcome!
README.md:5:1       - Unknown word (Inspired)   -- Inspired by: [django admin](https
README.md:5:63      - Unknown word (rails)      -- djangoproject.com), [rails admin](https://github
README.md:62:109    - Unknown word (specified)     -- redistributed under the terms specified in the [LICENSE](LICENSE
README.md:62:12     - Unknown word (copyrighted)  -- AdminJS is copyrighted © 2023 rst.software
README.md:62:79     - Unknown word (redistributed) -- software, and may be redistributed under the terms specified
README.md:64:4      - Unknown word (About)         -- ## About rst.software
README.md:68:114    - Unknown word (astonishing)   -- businesses and create astonishing products.
README.md:68:16     - Unknown word (friendly)      -- We’re an open, friendly team that helps clients
README.md:68:35     - Unknown word (helps)         -- friendly team that helps clients from all over
README.md:68:86     - Unknown word (their)         -- the world to transform their businesses and create
README.md:68:92     - Unknown word (businesses)    -- world to transform their businesses and create astonishing
README.md:70:25     - Unknown word (hire)          -- We are available for [hire](https://www.rst.software
README.md:71:47     - Unknown word (career)        -- us - check out the [career page](https://www.rst
README.md:7:4       - Unknown word (Example)    -- ## Example application
README.md:9:15      - Unknown word (demo)       -- Check out our demo application:
UPGRADE-6.0.md:11:93     - Unknown word (newest)     -- system``` packages to newest beta versions.
UPGRADE-6.0.md:13:83     - Unknown word (accordingly) -- you should update it accordingly.
UPGRADE-6.0.md:1:13      - Unknown word (guide)      -- # Migration guide to version v6
UPGRADE-6.0.md:21:113    - Unknown word (outside)     -- if you're using react outside of AdminJS, please upgrade
UPGRADE-6.0.md:21:158    - Unknown word (matching)    -- please upgrade it to the matching version.
UPGRADE-6.0.md:21:85     - Unknown word (Hence)       -- `` as a dependency. Hence if you're using react
UPGRADE-6.0.md:22:1      - Unknown word (Instructions) -- Instructions on how to do it are
UPGRADE-6.0.md:24:18     - Unknown word (upgraded)     -- Additionally, we upgraded the ```styled-components
UPGRADE-6.0.md:26:15     - Unknown word (Rebranding)   -- ### :warning: Rebranding
UPGRADE-6.0.md:33:46     - Unknown word (implementation) -- support issues, richText implementation has changed from Quill
UPGRADE-6.0.md:35:34     - Unknown word (currency)       -- check_mark: Phone and currency inputs
UPGRADE-6.0.md:37:9      - Unknown word (gained)         -- AdminJS gained two new input types
UPGRADE-6.0.md:3:4       - Unknown word (Updating)   -- ## Updating AdminJS to v6
UPGRADE-6.0.md:5:34      - Unknown word (sixth)      -- AdminJS package to the sixth wersion please use following
UPGRADE-6.0.md:5:40      - Unknown word (wersion)    -- package to the sixth wersion please use following
UPGRADE-6.0.md:63:26     - Unknown word (extracted)      -- select component was extracted from the core package
cy/cypress.doc.md:1:13      - Unknown word (helpers)    -- ### Cypress helpers
cy/cypress.doc.md:27:10     - Unknown word (Keep)       -- cy.abKeepLoggedIn({ cookie: Cypress
cy/cypress.doc.md:27:14     - Unknown word (Logged)     -- cy.abKeepLoggedIn({ cookie: Cypress
cy/cypress.doc.md:28:8      - Unknown word (visit)      -- cy.visit('resources/Company/actions
cy/cypress.doc.md:35:5      - Unknown word (What)       -- ### What we have
cy/cypress.doc.md:37:28     - Unknown word (currently)  -- Cypress helpers project is currently in the WIP/POC phase
cy/cypress.doc.md:37:53     - Unknown word (phase)      -- currently in the WIP/POC phase, that is why there are
cy/cypress.doc.md:38:1      - Unknown word (here)       -- here. But you can expect
cy/cypress.doc.md:38:31     - Unknown word (gradually)  -- you can expect that gradually we will add more.
cy/cypress.doc.md:3:13      - Unknown word (gathers)    -- This module gathers helpers which can be
cy/cypress.doc.md:3:6       - Unknown word (module)     -- This module gathers helpers which
cy/readme.md:116:21    - Unknown word (hamburger)     -- <td>Click on the hamburger menu if the navigation
cy/readme.md:116:67    - Unknown word (visible)       -- navigation panel is not visible
cy/readme.md:11:3      - Unknown word (Severity)   -- **Severity:** Critical
cy/readme.md:130:23    - Unknown word (redirected)    -- <td>User should be redirected to the “<em>.../admin
cy/readme.md:136:8     - Unknown word (Hide)          -- <td>Hide the navigation panel
cy/readme.md:13:15     - Unknown word (Positive)   -- **Behavior:** Positive
cy/readme.md:13:3      - Unknown word (Behavior)   -- **Behavior:** Positive
cy/readme.md:140:41    - Unknown word (Hamburger)     -- panel is not visible. Hamburger menu is visible
cy/readme.md:156:8     - Unknown word (Fill)          -- <td>Fill the “Name” input element
cy/readme.md:170:37    - Unknown word (icon)          -- input element and bin icon are shown
cy/readme.md:170:46    - Unknown word (shown)         -- element and bin icon are shown
cy/readme.md:180:35    - Unknown word (removed)       -- text input element was removed
cy/readme.md:186:43    - Unknown word (again)         -- Add New Item” button again in the “String Array
cy/readme.md:19:6      - Unknown word (Preconditions) -- #### Preconditions
cy/readme.md:206:51    - Unknown word (Authors)       -- Item” button in the “Authors” section
cy/readme.md:216:8     - Unknown word (Choose)        -- <td>Choose one of the elements
cy/readme.md:226:18    - Unknown word (Nested)        -- <td>Fill the “Nested Details Age” input element
cy/readme.md:22:17     - Unknown word (already)       -- * User is not already logged and has got an
cy/readme.md:22:25     - Unknown word (logged)        -- User is not already logged and has got an active
cy/readme.md:246:33    - Unknown word (Place)         -- the “Nested Details Place Of Birth” input element
cy/readme.md:246:42    - Unknown word (Birth)         -- Nested Details Place Of Birth” input element with
cy/readme.md:258:17    - Unknown word (Extremely)     -- <td><em>e.g. Extremely Nested Text</em>
cy/readme.md:270:58    - Unknown word (Surname)       -- Parents Name”, “Parents Surname”) and the bin icon are
cy/readme.md:278:17    - Unknown word (Harry)         -- <td><em>e.g. Harry</em>
cy/readme.md:27:30     - Unknown word (underline)     -- style="text-decoration:underline;">No.</span>
cy/readme.md:288:17    - Unknown word (Potter)        -- <td><em>e.g. Potter</em>
cy/readme.md:300:24    - Unknown word (Variants)      -- <td>The “Item Image Variants” section with a new
cy/readme.md:326:51    - Unknown word (Approved)      -- Item Image Variants Is Approved”
cy/readme.md:336:46    - Unknown word (picker)        -- date and time from the picker in “Item Image Variants
cy/readme.md:33:49     - Unknown word (Expected)      -- decoration:underline;">Expected results</span>
cy/readme.md:350:103   - Unknown word (Successfully)  -- The toast message: “Successfully created a new record
cy/readme.md:350:87    - Unknown word (toast)         -- Complicated</em>” page. The toast message: “Successfully
cy/readme.md:356:8     - Unknown word (Look)          -- <td>Look at the number of the
cy/readme.md:360:22    - Unknown word (increased)     -- <td>The number is increased by 1
cy/readme.md:376:31    - Unknown word (column)        -- Look at values in each column in your element
cy/readme.md:380:136   - Unknown word (about)         -- Item” show information about quantity. In this case
cy/readme.md:380:142   - Unknown word (quantity)      -- show information about quantity. In this case “length
cy/readme.md:380:166   - Unknown word (length)        -- quantity. In this case “length: 1”. Column “Id” has
cy/readme.md:380:178   - Unknown word (Column)        -- this case “length: 1”. Column “Id” has a random string
cy/readme.md:380:219   - Unknown word (Updated)       -- random string. Column “Updated At” shows time and date
cy/readme.md:380:231   - Unknown word (shows)         -- Column “Updated At” shows time and date of creating
cy/readme.md:380:25    - Unknown word (provided)      -- td>Users should see provided data in each related
cy/readme.md:380:63    - Unknown word (Columns)       -- each related column. Columns “String Array”, “Authors
cy/readme.md:388:36    - Unknown word (Favorite)      -- Filter elements on the “Favorite Places” list
cy/readme.md:388:45    - Unknown word (Places)        -- elements on the “Favorite Places” list
cy/readme.md:402:32    - Unknown word (favorite)      -- sequelize_resources, favorite_places_category, favorite
cy/readme.md:402:41    - Unknown word (places)        -- resources, favorite_places_category, favorite_places
cy/readme.md:433:45    - Unknown word (Favourite)     -- Sequelize Resources” → Favourite Places link inside the
cy/readme.md:43:22     - Unknown word (been)          -- <td>The field has been completed
cy/readme.md:453:59    - Unknown word (least)         -- the list, create at least two elements with random
cy/readme.md:487:66    - Unknown word (inserted)      -- elements with the name inserted in the filter input
cy/readme.md:497:8     - Unknown word (Inside)        -- <td>Inside the list all elements
cy/readme.md:53:46     - Unknown word (signs)         -- been completed with “*” signs
cy/readme.md:63:24     - Unknown word (successful)    -- <td>Login should be successful
cy/readme.md:7:11      - Unknown word (Functional) -- **Type:** Functional
cy/readme.md:81:50     - Unknown word (Complicated)   -- element via form on the “Complicated” list
cy/readme.md:87:15     - Unknown word (Medium)        -- **Priority:** Medium
cy/readme.md:95:31     - Unknown word (complicated)   -- mongoose_resources, complicated_category, complicated
cy/readme.md:97:6      - Unknown word (Precondition)  -- #### Precondition:
src/adminjs-options.interface.ts:115:66    - Unknown word (opens)      -- be rendered when user opens the dashboard
src/adminjs-options.interface.ts:115:8     - Unknown word (Bundled)    -- * Bundled component name which
src/adminjs-options.interface.ts:120:17    - Unknown word (indicates)  -- * Flag which indicates if version number should
src/adminjs-options.interface.ts:126:14    - Unknown word (Branding)   -- branding?: BrandingOptions | BrandingOptionsFunct
src/adminjs-options.interface.ts:12:19     - Unknown word (Loader)     -- import { ComponentLoader } from './backend/utils
src/adminjs-options.interface.ts:12:60     - Unknown word (loader)     -- backend/utils/component-loader.js'
src/adminjs-options.interface.ts:132:19    - Unknown word (bundled)    -- * Indicates is bundled by AdminJS files like
src/adminjs-options.interface.ts:132:6     - Unknown word (Indicates)  -- * Indicates is bundled by AdminJS
src/adminjs-options.interface.ts:137:16    - Unknown word (taken)      -- * should be taken from the same server
src/adminjs-options.interface.ts:144:51    - Unknown word (because)    -- files with the same app because your function will be
src/adminjs-options.interface.ts:145:34    - Unknown word (asks)       -- every time frontend asks for static assets.
src/adminjs-options.interface.ts:150:50    - Unknown word (production) -- env.NODE_ENV set to 'production').
src/adminjs-options.interface.ts:163:20    - Unknown word (hosting)    -- * with firebase hosting)
src/adminjs-options.interface.ts:168:6     - Unknown word (Environmental) -- * Environmental variables passed to
src/adminjs-options.interface.ts:17:16     - Unknown word (heart)      -- * This is the heart of entire AdminJS -
src/adminjs-options.interface.ts:17:25     - Unknown word (entire)     -- This is the heart of entire AdminJS - all options
src/adminjs-options.interface.ts:17:54     - Unknown word (resides)    -- AdminJS - all options resides here.
src/adminjs-options.interface.ts:191:8     - Unknown word (localize)      -- * - localize admin panel
src/adminjs-options.interface.ts:194:30    - Unknown word (changing)      -- This is the example for changing name of a couple of
src/adminjs-options.interface.ts:194:69    - Unknown word (along)         -- couple of resources along with some
src/adminjs-options.interface.ts:195:20    - Unknown word (Polish)        -- * properties to Polish. You can also use this
src/adminjs-options.interface.ts:195:50    - Unknown word (technic)       -- You can also use this technic to change any text even
src/adminjs-options.interface.ts:195:85    - Unknown word (english)       -- change any text even in english.
src/adminjs-options.interface.ts:1:10      - Unknown word (Theme)      -- import { ThemeOverride } from '@adminjs
src/adminjs-options.interface.ts:205:26    - Unknown word (Komentarze)    -- Comments: "Komentarze",
src/adminjs-options.interface.ts:210:26    - Unknown word (Nazwa)         -- name: "Nazwa Komentarza",
src/adminjs-options.interface.ts:210:32    - Unknown word (Komentarza)    -- name: "Nazwa Komentarza",
src/adminjs-options.interface.ts:211:29    - Unknown word (Zawartość)     -- content: "Zawartość",
src/adminjs-options.interface.ts:240:24    - Unknown word (themes)        -- * List of available themes, for example exports
src/adminjs-options.interface.ts:242:12    - Unknown word (Themes)        -- availableThemes?: ThemeConfig[];
src/adminjs-options.interface.ts:245:24    - Unknown word (theme)         -- * ID of the default theme. If not provided, the
src/adminjs-options.interface.ts:263:4     - Unknown word (cspell)        -- /* cspell: enable */
src/adminjs-options.interface.ts:270:4     - Unknown word (appended)      -- * appended to the HEAD of the page
src/adminjs-options.interface.ts:272:45    - Unknown word (instead)       -- link AssetsFunction} instead.
src/adminjs-options.interface.ts:280:54    - Unknown word (particular)    -- scripts. If you use some particular js
src/adminjs-options.interface.ts:296:13    - Unknown word (returning)     -- * Function returning {@link Assets}
src/adminjs-options.interface.ts:30:6      - Unknown word (branding)   -- * branding: {
src/adminjs-options.interface.ts:311:6     - Unknown word (Here)          -- * Here you can pass any arbitrary
src/adminjs-options.interface.ts:326:12    - Unknown word (dark)          -- * colors (dark theme) run:
src/adminjs-options.interface.ts:331:22    - Unknown word (John)          -- * companyName: 'John Doe Family Business
src/adminjs-options.interface.ts:342:15    - Unknown word (logo)          -- * URL to a logo, or `false` if you want
src/adminjs-options.interface.ts:354:25    - Unknown word (made)          -- Flag indicates if "made with love" tiny heart
src/adminjs-options.interface.ts:354:35    - Unknown word (love)          -- indicates if "made with love" tiny heart icon
src/adminjs-options.interface.ts:354:41    - Unknown word (tiny)          -- if "made with love" tiny heart icon
src/adminjs-options.interface.ts:358:15    - Unknown word (Love)          -- withMadeWithLove?: boolean;
src/adminjs-options.interface.ts:358:7     - Unknown word (Made)          -- withMadeWithLove?: boolean;
src/adminjs-options.interface.ts:380:11    - Unknown word (describing)    -- * Object describing regular page in AdminJS
src/adminjs-options.interface.ts:410:19    - Unknown word (passing)       -- * Default way of passing Options with a Resource
src/adminjs-options.interface.ts:421:13    - Unknown word (taking)        -- * Function taking {@link ResourceOptions
src/adminjs-options.interface.ts:434:14    - Unknown word (returned)      -- * Options returned by the feature added
src/adminjs-options.interface.ts:440:40    - Unknown word (enters)        -- is invoked when user enters given AdminPage
src/adminjs-options.interface.ts:456:30    - Unknown word (babelrc)       -- babelConfig: './.adminJS.babelrc'
src/adminjs-options.interface.ts:84:26     - Unknown word (fetched)    -- text: 'I am fetched from the backend',
src/adminjs-options.interface.ts:89:8      - Unknown word (another)    -- * anotherPage: {
src/adminjs-options.interface.ts:95:16     - Unknown word (Pages)      -- pages?: AdminPages;
src/adminjs-options.interface.ts:98:19     - Unknown word (either)     -- * You can pass either resource or resource
src/adminjs-options.interface.ts:98:67     - Unknown word (thus)       -- with an options and thus modify it.
src/adminjs.spec.ts:104:19    - Unknown word (uniqe)      -- it('returns uniqe id', function () {
src/adminjs.spec.ts:109:11    - Unknown word (converts)   -- it('converts relative path to absolute
src/adminjs.spec.ts:123:40    - Unknown word (doesn\'t)   -- error when component doesn\'t exist', function ()
src/adminjs.spec.ts:123:49    - Unknown word (exist)      -- when component doesn\'t exist', function () {
src/adminjs.spec.ts:14:12     - Unknown word (Registered) -- global.RegisteredAdapters = []
src/adminjs.spec.ts:14:22     - Unknown word (Adapters)   -- global.RegisteredAdapters = []
src/adminjs.spec.ts:30:20     - Unknown word (adapter)    -- it('adds given adapter to list off all available
src/adminjs.spec.ts:30:9      - Unknown word (adds)       -- it('adds given adapter to list
src/adminjs.spec.ts:43:61     - Unknown word (subclassed) -- has elements not being subclassed from base adapter',
src/adminjs.spec.ts:49:50     - Unknown word (subclass)   -- elements have to be a subclass of AdminJS.BaseResource
src/adminjs.spec.ts:59:31     - Unknown word (directly)   -- load with json object directly', function () {
src/adminjs.spec.ts:68:13     - Unknown word (loose)      -- loose: true,
src/adminjs.spec.ts:73:25     - Unknown word (spec)       -- only: ['src/', 'spec/'],
src/adminjs.spec.ts:97:63     - Unknown word (fixtures)   -- ExampleComponent', '../spec/fixtures/example-component')
src/adminjs.ts:125:6     - Unknown word (Registers)  -- * Registers various database adapters
src/adminjs.ts:147:31    - Unknown word (actually)   -- TODO: check if this is actually valid because "isAdapterFor
src/adminjs.ts:161:6     - Unknown word (Initializes) -- * Initializes AdminJS instance in
src/adminjs.ts:161:74    - Unknown word (called)      -- This function should be called by
src/adminjs.ts:176:6     - Unknown word (Watches)     -- * Watches for local changes in
src/adminjs.ts:192:6     - Unknown word (Renders)     -- * Renders an entire login page
src/adminjs.ts:218:65    - Unknown word (cannot)      -- resource with given id cannot be found
src/adminjs.ts:221:52    - Unknown word (decorated)   -- resources.find((m) => m._decorated?.id() === resourceId
src/adminjs.ts:270:60    - Unknown word (detected)    -- filePath}: No config detected`)
src/adminjs.ts:59:41     - Unknown word (takes)      -- AdminJS extension. It takes {@link AdminJSOptions
src/adminjs.ts:63:28     - Unknown word (currier)    -- user. Its instance is a currier - injected in all other
src/adminjs.ts:63:38     - Unknown word (injected)   -- instance is a currier - injected in all other classes
src/adminjs.ts:84:24     - Unknown word (Modifying)  -- * @example <caption>Modifying accessibility rules
src/adminjs.ts:86:21     - Unknown word (Accessible) -- * ACTIONS.show.isAccessible = () => {...}
src/backend/actions/action.interface.ts:105:56    - Unknown word (divided)    -- case of bulk action) divided by commas
src/backend/actions/action.interface.ts:105:67    - Unknown word (commas)     -- bulk action) divided by commas
src/backend/actions/action.interface.ts:11:15     - Unknown word (Notice)     -- import { type NoticeMessage } from '../.
src/backend/actions/action.interface.ts:140:37    - Unknown word (presented)  -- message which should be presented to the end user after
src/backend/actions/action.interface.ts:155:4     - Unknown word (Defines)    -- * Defines the type of {@link Action
src/backend/actions/action.interface.ts:203:49    - Unknown word (performed)  -- it is given - it is performed before the {@link ActionHandl
src/backend/actions/action.interface.ts:275:31    - Unknown word (predefined) -- there are 7 actions predefined in AdminJS
src/backend/actions/action.interface.ts:294:26    - Unknown word (overriding) -- // example of overriding existing 'new' action
src/backend/actions/action.interface.ts:327:10    - Unknown word (most)       -- * The most common example of usage
src/backend/actions/action.interface.ts:328:52    - Unknown word (Cars)       -- resources __User__ and __Cars__:
src/backend/actions/action.interface.ts:342:15    - Unknown word (cars)       -- * creating cars. We can do this like
src/backend/actions/action.interface.ts:350:75    - Unknown word (wont)       -- isAccessible} instead - user wont be able to
src/backend/actions/action.interface.ts:350:9     - Unknown word (contrast)   -- * In contrast - when we use {@link
src/backend/actions/action.interface.ts:364:78    - Unknown word (belongs)    -- user to edit cars which belongs only
src/backend/actions/action.interface.ts:404:53    - Unknown word (displayed)  -- resource actions buttons displayed above action header
src/backend/actions/action.interface.ts:432:6     - Unknown word (guard)      -- * guard message - user will
src/backend/actions/action.interface.ts:439:25    - Unknown word (Really)     -- guard: 'doYouReallyWantToDoThis',
src/backend/actions/action.interface.ts:439:31    - Unknown word (Want)       -- guard: 'doYouReallyWantToDoThis',
src/backend/actions/action.interface.ts:445:27    - Unknown word (goes)       -- What you enter there goes to a translate function
src/backend/actions/action.interface.ts:446:64    - Unknown word (specify)    -- message you will have to specify its
src/backend/actions/action.interface.ts:458:20    - Unknown word (clicking)   -- * Instead after clicking button it is immediately
src/backend/actions/action.interface.ts:458:6     - Unknown word (Instead)    -- * Instead after clicking button
src/backend/actions/action.interface.ts:467:16    - Unknown word (visits)     -- * when user visits clicks action link.
src/backend/actions/action.interface.ts:467:23    - Unknown word (clicks)     -- * when user visits clicks action link.
src/backend/actions/action.interface.ts:469:17    - Unknown word (defining)   -- * If you are defining this action for a record
src/backend/actions/action.interface.ts:486:36    - Unknown word (modifying)  -- for new actions. For modifying already defined actions
src/backend/actions/action.interface.ts:494:17    - Unknown word (hashing)    -- * Example of hashing password before creating
src/backend/actions/action.interface.ts:518:25    - Unknown word (just)       -- You can use it to (just an idea)
src/backend/actions/action.interface.ts:518:33    - Unknown word (idea)       -- can use it to (just an idea)
src/backend/actions/action.interface.ts:533:22    - Unknown word (involved)   -- * // was record involved (resource and recordId
src/backend/actions/action.interface.ts:533:65    - Unknown word (polymorphic) -- recordId creates to polymorphic relation)
src/backend/actions/action.interface.ts:535:11    - Unknown word (timestamps)  -- * }, { timestamps: true }))
src/backend/actions/action.interface.ts:546:15    - Unknown word (assuming)    -- * // assuming in the session we store
src/backend/actions/action.interface.ts:555:13    - Unknown word (attaching)   -- * // and attaching this function to actions
src/backend/actions/action.interface.ts:567:52    - Unknown word (drawer)      -- should be seen in a drawer or in a full screen
src/backend/actions/action.interface.ts:569:9     - Unknown word (Drawer)      -- showInDrawer?: boolean;
src/backend/actions/action.interface.ts:56:6      - Unknown word (Currently)  -- * Currently logged in admin
src/backend/actions/action.interface.ts:573:20    - Unknown word (consist)     -- * Action header consist of:
src/backend/actions/action.interface.ts:574:8     - Unknown word (breadcrumbs) -- * - breadcrumbs
src/backend/actions/action.interface.ts:582:59    - Unknown word (widths)      -- in px or an array of widths, where different values
src/backend/actions/action.interface.ts:582:73    - Unknown word (different)   -- array of widths, where different values
src/backend/actions/action.interface.ts:583:40    - Unknown word (breakpoints) -- responsible for different breakpoints.
src/backend/actions/action.interface.ts:604:31    - Unknown word (knowing)     -- layout you like, without knowing React.
src/backend/actions/action.interface.ts:624:6     - Unknown word (Alternatively) -- * Alternatively you can pass a {@link
src/backend/actions/action.interface.ts:642:35    - Unknown word (give)          -- can be nested. If you give here another action
src/backend/actions/bulk-delete/bulk-delete-action.spec.ts:2:14      - Unknown word (Promised)   -- import chaiAsPromised from 'chai-as-promised
src/backend/actions/bulk-delete/bulk-delete-action.spec.ts:30:29     - Unknown word (Stub)       -- _admin: sinon.createStubInstance(AdminJS),
src/backend/actions/bulk-delete/bulk-delete-action.spec.ts:31:33     - Unknown word (stub)       -- translateMessage: sinon.stub<any, string>().returns
src/backend/actions/bulk-delete/bulk-delete-action.spec.ts:44:24     - Unknown word (were)       -- context('2 records were selected', function
src/backend/actions/bulk-delete/bulk-delete-action.spec.ts:62:14     - Unknown word (eventually) -- ).to.eventually.deep.equal({
src/backend/actions/bulk-delete/bulk-delete-action.spec.ts:67:11     - Unknown word (deletes)    -- it('deletes all records for post
src/backend/actions/bulk-delete/bulk-delete-action.ts:18:13     - Unknown word (danger)     -- variant: 'danger',
src/backend/actions/bulk-delete/bulk-delete-action.ts:20:22     - Unknown word (deleting)    -- * Responsible for deleting existing records.
src/backend/actions/bulk-delete/bulk-delete-action.ts:20:6      - Unknown word (Responsible) -- * Responsible for deleting existing
src/backend/actions/bulk-delete/bulk-delete-action.ts:46:42     - Unknown word (successfully) -- records.length > 1 ? 'successfullyBulkDeleted_plural'
src/backend/actions/bulk-delete/bulk-delete-action.ts:9:4       - Unknown word (Removes)    -- * Removes given records from the
src/backend/actions/delete/delete-action.spec.ts:101:28    - Unknown word (Were)       -- message: 'thereWereValidationErrors',
src/backend/actions/delete/delete-action.spec.ts:71:35     - Unknown word (thrown)     -- 'ValidationError is thrown by Resource.delete'
src/backend/actions/delete/delete-action.ts:11:35     - Unknown word (away)       -- it redirects right away after clicking its
src/backend/actions/edit/edit-action.ts:11:4      - Unknown word (Shows)      -- * Shows form for updating existing
src/backend/actions/edit/edit-action.ts:28:39     - Unknown word (populated)  -- RecordActionResponse} populated record
src/backend/actions/edit/edit-action.ts:3:8       - Unknown word (populator)  -- import populator from '../../utils/populator
src/backend/actions/edit/edit-action.ts:47:42     - Unknown word (reassign)   -- disable-next-line no-param-reassign
src/backend/actions/edit/edit-action.ts:4:15      - Unknown word (Converter)  -- import { paramConverter } from '../../../utils
src/backend/actions/edit/edit-action.ts:4:54      - Unknown word (converter)  -- ./../../utils/param-converter/index.js'
src/backend/actions/list/list-action.ts:35:54     - Unknown word (unflatten)  -- filters = {} } = flat.unflatten(query || {}) as ActionQueryPa
src/backend/actions/list/list-action.ts:46:37     - Unknown word (decorate)   -- listProperties = resource.decorate().getListProperties
src/backend/actions/list/list-action.ts:47:58     - Unknown word (Sortable)   -- istProperties.find((p) => p.isSortable())
src/backend/actions/list/list-action.ts:57:56     - Unknown word (populate)   -- Filter(filters, resource).populate(context)
src/backend/actions/list/list-action.ts:93:6      - Unknown word (Paginated)  -- * Paginated collection of records
src/backend/actions/list/list-action.ts:97:6      - Unknown word (Pagination) -- * Pagination metadata
src/backend/adapters/database/base-database.ts:13:5      - Unknown word (mermaid)    -- * @mermaid
src/backend/adapters/database/base-database.ts:1:22      - Unknown word (useless)    -- * eslint-disable no-useless-constructor */
src/backend/adapters/database/base-database.ts:2:48      - Unknown word (vars)       -- typescript-eslint/no-unused-vars */
src/backend/adapters/property/base-property.ts:16:35     - Unknown word (wysiwig)    -- string} richtext    wysiwig editor
src/backend/adapters/property/base-property.ts:1:44      - Unknown word (curly)      -- methods-use-this: 0 object-curly-newline: 0 */
src/backend/adapters/property/base-property.ts:21:4      - Unknown word (Spacer)     -- // Spacer
src/backend/adapters/property/base-property.ts:39:4      - Unknown word (Represents) -- * Represents Resource Property
src/backend/adapters/property/base-property.ts:57:76     - Unknown word (dots)       -- divided to parts by dots: i.e.
src/backend/adapters/property/base-property.ts:60:82     - Unknown word (treated)    -- when field should be treated as an ID
src/backend/adapters/property/base-property.ts:61:78     - Unknown word (sortable)   -- if property should be sortable
src/backend/adapters/record/base-record.spec.ts:102:43    - Unknown word (happen)     -- validation error when they happen', async function ()
src/backend/adapters/record/base-record.spec.ts:161:11    - Unknown word (resets)     -- it('resets the baseError when there
src/backend/adapters/record/base-record.spec.ts:205:19    - Unknown word (itself)     -- it('returns itself', function () {
src/backend/adapters/record/base-record.spec.ts:21:49     - Unknown word (john)       -- params'] = { param1: 'john' }
src/backend/adapters/record/base-record.spec.ts:252:9     - Unknown word (clears)     -- it('clears populated field when
src/backend/adapters/record/base-record.spec.ts:258:13    - Unknown word (alter)      -- }).to.alter(() => record.populated
src/backend/adapters/record/base-record.spec.ts:38:19     - Unknown word (deepest)    -- it('returns deepest field when all up-level
src/backend/adapters/record/base-record.spec.ts:42:59     - Unknown word (except)     -- level keys are given except one', function () {
src/backend/adapters/record/base-record.spec.ts:79:12     - Unknown word (resolves)   -- .resolves(newParams),
src/backend/adapters/record/base-record.ts:129:46    - Unknown word (Practically) -- Record in the data store. Practically it invokes
src/backend/adapters/record/base-record.ts:129:61    - Unknown word (invokes)     -- store. Practically it invokes
src/backend/adapters/record/base-record.ts:157:6     - Unknown word (Saves)       -- * Saves the record in the database
src/backend/adapters/record/base-record.ts:22:25     - Unknown word (stored)     -- Actual record data stored as a flatten object
src/backend/adapters/record/base-record.ts:22:57     - Unknown word (shouldn't)  -- flatten object. You shouldn't access them directly
src/backend/adapters/record/base-record.ts:231:35    - Unknown word (Usually)     -- title of the record. Usually title is an value for
src/backend/adapters/record/base-record.ts:261:6     - Unknown word (Populate)    -- * Populate record relations
src/backend/adapters/record/base-record.ts:264:73    - Unknown word (relates)     -- record to which property relates. If record is null
src/backend/adapters/record/base-record.ts:278:19    - Unknown word (representation) -- * Returns JSON representation of an record
src/backend/adapters/record/base-record.ts:284:10    - Unknown word (sometimes)      -- // sometimes user can add some arbitrary
src/backend/adapters/record/base-record.ts:28:33     - Unknown word (overall)    -- containing any base/overall validation error messages
src/backend/adapters/record/base-record.ts:39:38     - Unknown word (relations)  -- containing all populated relations.
src/backend/adapters/record/base-record.ts:61:21     - Unknown word (favour)     -- * @deprecated in favour of {@link BaseRecord
src/backend/adapters/record/base-record.ts:72:18     - Unknown word (male)       -- * genre.0: 'male',
src/backend/adapters/record/base-record.ts:72:8      - Unknown word (genre)      -- * genre.0: 'male',
src/backend/adapters/record/base-record.ts:73:18     - Unknown word (female)     -- * genre.1: 'female',
src/backend/adapters/record/base-record.ts:91:15     - Unknown word (replaced)   -- * path are replaced. When value is `undefined
src/backend/adapters/resource/base-resource.ts:108:61    - Unknown word (learn)      -- link BaseProperty} to learn more about
src/backend/adapters/resource/base-resource.ts:119:37    - Unknown word (represents) -- Filter} filter        represents what data should be
src/backend/adapters/resource/base-resource.ts:13:49     - Unknown word (Visually)   -- Resource in AdminJS. Visually resource is a list item
src/backend/adapters/resource/base-resource.ts:160:6     - Unknown word (Finds)      -- * Finds one Record in the Resource
src/backend/adapters/resource/base-resource.ts:16:4      - Unknown word (Analogy)    -- * Analogy is REST resource.
src/backend/adapters/resource/base-resource.ts:204:55    - Unknown word (converted)  -- created record converted to raw Object which
src/backend/adapters/resource/base-resource.ts:242:6     - Unknown word (Assigns)    -- * Assigns given decorator to the
src/backend/adapters/resource/base-resource.ts:255:6     - Unknown word (Gets)       -- * Gets decorator object for
src/backend/adapters/resource/supported-databases.type.ts:2:6       - Unknown word (Maria)      -- | 'MariaDB'
src/backend/adapters/resource/supported-databases.type.ts:4:6       - Unknown word (Cockroach)  -- | 'CockroachDB'
src/backend/adapters/resource/supported-databases.type.ts:8:9       - Unknown word (Hana)       -- | 'SAPHana'
src/backend/bundler/app.bundler.ts:18:34     - Unknown word (EXTERNALS)  -- AssetBundler.DEFAULT_EXTERNALS,
src/backend/bundler/app.bundler.ts:22:50     - Unknown word (jsnext)     -- 'main', 'module', 'jsnext:main'],
src/backend/bundler/generate-user-component-entry.spec.js:14:7      - Unknown word (defines)    -- it('defines AdminJS.UserComponents
src/backend/bundler/generate-user-component-entry.ts:10:19     - Unknown word (environmental) -- * 2. List of all environmental variables passed to
src/backend/bundler/generate-user-component-entry.ts:14:71     - Unknown word (located)       -- where entry file is located
src/backend/bundler/generate-user-component-entry.ts:7:4       - Unknown word (Generates)  -- * Generates entry file for all UsersCompo
src/backend/bundler/generate-user-component-entry.ts:8:10      - Unknown word (consists)   -- * Entry consists of 3 parts:
src/backend/bundler/utils/asset-bundler.ts:116:43    - Unknown word (must)       -- 'InputOptions#input must be defined')
src/backend/bundler/utils/asset-bundler.ts:15:12     - Unknown word (feather)    -- 'react-feather': 'FeatherIcons',
src/backend/bundler/utils/asset-bundler.ts:15:23     - Unknown word (Feather)    -- 'react-feather': 'FeatherIcons',
src/backend/bundler/utils/asset-bundler.ts:1:29      - Unknown word (extraneous) -- eslint-disable import/no-extraneous-dependencies */
src/backend/bundler/utils/asset-bundler.ts:58:11     - Unknown word (spinner)    -- const spinner = ora(`Bundling files
src/backend/bundler/utils/asset-bundler.ts:58:44     - Unknown word (watchmode)  -- ora(`Bundling files in watchmode: ${JSON.stringify(this
src/backend/bundler/utils/asset-bundler.ts:76:17     - Unknown word (succeed)    -- spinner.succeed(`Finish bundling: $
src/backend/controllers/api-controller.spec.js:61:30     - Unknown word (correct)    -- calls the handler of correct action', async function
src/backend/controllers/api-controller.ts:106:6     - Unknown word (Performs)       -- * Performs a customized {@link
src/backend/controllers/api-controller.ts:10:45     - Unknown word (forbidden)  -- from '../utils/errors/forbidden-error.js'
src/backend/controllers/api-controller.ts:10:8      - Unknown word (Forbidden)  -- import ForbiddenError from '../utils
src/backend/controllers/api-controller.ts:112:78    - Unknown word (expressjs)      -- plugin (i.e. adminjs-expressjs)
src/backend/controllers/api-controller.ts:15:10     - Unknown word (Decorated)  -- import { DecoratedProperties } from '.
src/backend/controllers/api-controller.ts:178:21    - Unknown word (Handled)        -- const anErrorWasHandled = jsonWithRecord &&
src/backend/controllers/api-controller.ts:21:20     - Unknown word (utilise)    -- * The best way to utilise it is to use {@link
src/backend/controllers/api-controller.ts:29:95     - Unknown word (Perform)    -- iController#resourceAction} | Perform customized resource
src/backend/controllers/api-controller.ts:37:8      - Unknown word (Responsibility) -- * ### Responsibility
src/backend/decorators/action/action-decorator.spec.ts:153:21    - Unknown word (Good)       -- type: 'notGood',
src/backend/decorators/action/action-decorator.spec.ts:93:13     - Unknown word (mocked)     -- const mockedRequest = { response
src/backend/decorators/action/action-decorator.ts:100:6     - Unknown word (Invokes)    -- * Invokes before action hooks
src/backend/decorators/action/action-decorator.ts:1:18      - Unknown word (DRAWER)     -- import { DEFAULT_DRAWER_WIDTH, VariantType
src/backend/decorators/action/action-decorator.ts:220:83    - Unknown word (gave)       -- or "isVisible". You gave ${what}`)
src/backend/decorators/action/action-decorator.ts:252:16    - Unknown word (accessible) -- * Is action accessible
src/backend/decorators/action/action-decorator.ts:31:4      - Unknown word (Decorates)  -- * Decorates an action
src/backend/decorators/property/property-decorator.spec.ts:12:7      - Unknown word (stubbed)    -- let stubbedAdmin: SinonStubbedInstance
src/backend/decorators/property/property-decorator.spec.ts:28:9      - Unknown word (passes)     -- it('passes the execution to the
src/backend/decorators/property/property-decorator.spec.ts:2:22      - Unknown word (Stubbed)    -- import sinon, { SinonStubbedInstance } from 'sinon
src/backend/decorators/property/property-decorator.ts:23:16     - Unknown word (serves)     -- * This path serves as a key in {@link PropertyOp
src/backend/decorators/property/property-decorator.ts:23:62     - Unknown word (identify)   -- PropertyOptions} to identify which
src/backend/decorators/property/property-decorator.ts:29:66     - Unknown word (hasn't)     -- created in AdminJS and hasn't been returned by the
src/backend/decorators/property/property-decorator.ts:304:68    - Unknown word (Furthermore) -- user for a subProperty. Furthermore
src/backend/decorators/property/property-decorator.ts:41:86     - Unknown word (rather)     -- ResourceOption} interface rather than
src/backend/decorators/property/property-options.interface.ts:117:28    - Unknown word (Shown)      -- Description of field. Shown as hoverable hint after
src/backend/decorators/property/property-options.interface.ts:117:37    - Unknown word (hoverable)  -- escription of field. Shown as hoverable hint after label.
src/backend/decorators/property/property-options.interface.ts:128:18    - Unknown word (Awesome)    -- * myAwesomeProperty: {
src/backend/decorators/property/property-options.interface.ts:129:55    - Unknown word (awesome)    -- Plane description" || "awesomeHint", // <- message
src/backend/decorators/property/property-options.interface.ts:18:23     - Unknown word (overridden) -- * List of possible overridden components for given
src/backend/decorators/property/property-options.interface.ts:36:89     - Unknown word (clickable)  -- Title property is "clickable"
src/backend/decorators/property/property-options.interface.ts:37:16     - Unknown word (sees)       -- * when user sees the record in a list
src/backend/decorators/property/property-options.interface.ts:50:59     - Unknown word (editing)    -- should be draggable when editing.
src/backend/decorators/property/property-options.interface.ts:58:28     - Unknown word (gets)       -- title field (isTitle) gets position -1 by default
src/backend/decorators/property/property-options.interface.ts:90:6      - Unknown word (Whether)    -- * Whether given property should
src/backend/decorators/resource/resource-decorator.spec.ts:135:29    - Unknown word (giving)     -- returns property by giving its key', function
src/backend/decorators/resource/resource-decorator.spec.ts:222:9     - Unknown word (hides)      -- it('hides the given action if
src/backend/decorators/resource/resource-decorator.ts:27:31     - Unknown word (decorates)  -- decorator class which decorates the Resource.
src/backend/decorators/resource/resource-options.interface.ts:52:15     - Unknown word (suppose)    -- * So let's suppose that you connected
src/backend/decorators/resource/resource-options.interface.ts:53:73     - Unknown word (distinguish) -- AdminJS wont be able to distinguish them.
src/backend/decorators/resource/resource-options.interface.ts:82:24     - Unknown word (saying)      -- * Navigation option saying under which menu this
src/backend/decorators/resource/resource-options.interface.ts:89:36     - Unknown word (come)        -- menu and the icon will come from the database type
src/backend/decorators/resource/utils/decorate-actions.ts:11:15     - Unknown word (Customizer) -- function mergeCustomizer<T>(destValue: T | Array
src/backend/decorators/resource/utils/decorate-properties.spec.ts:203:9     - Unknown word (nests)      -- it('nests 3 nested properties
src/backend/decorators/resource/utils/decorate-properties.spec.ts:54:9      - Unknown word (leaves)     -- it('leaves all other fields like
src/backend/decorators/resource/utils/decorate-properties.ts:61:18     - Unknown word (moves)      -- * This function moves nested properties to
src/backend/decorators/resource/utils/decorate-properties.ts:62:26     - Unknown word (printed)    -- So that they could be printed as Section in the UI
src/backend/decorators/resource/utils/decorate-properties.ts:62:60     - Unknown word (handled)    -- Section in the UI, and handled together as an Array
src/backend/decorators/resource/utils/decorate-properties.ts:62:68     - Unknown word (together)   -- the UI, and handled together as an Array if there
src/backend/decorators/resource/utils/decorate-properties.ts:77:39     - Unknown word (finding)    -- because we start by by finding from the longest path
src/backend/decorators/resource/utils/decorate-properties.ts:77:56     - Unknown word (longest)    -- by finding from the longest path
src/backend/decorators/resource/utils/decorate-properties.ts:78:12     - Unknown word (removes)    -- // and removes itself. (skips arrays
src/backend/decorators/resource/utils/decorate-properties.ts:78:29     - Unknown word (skips)      -- and removes itself. (skips arrays)
src/backend/decorators/resource/utils/find-sub-property.ts:23:53     - Unknown word (checkout)    -- the last (full) path - checkout recursively all subProperties
src/backend/decorators/resource/utils/find-sub-property.ts:8:74      - Unknown word (recursively) -- where function should recursively search for
src/backend/decorators/resource/utils/flat-sub-properties.ts:4:82      - Unknown word (easy)       -- root Property. This is easy for
src/backend/services/action-error-handler/action-error-handler.ts:12:19     - Unknown word (catches)    -- * Function which catches all the errors thrown
src/backend/utils/auth/base-auth-provider.ts:28:107    - Unknown word (ones)       -- providers or modify existing ones.
src/backend/utils/auth/base-auth-provider.ts:28:44     - Unknown word (allowing)   -- which includes methods allowing you to build custom
src/backend/utils/auth/base-auth-provider.ts:55:78     - Unknown word (besides)    -- from external services besides destroying AdminJS session
src/backend/utils/auth/base-auth-provider.ts:55:86     - Unknown word (destroying) -- external services besides destroying AdminJS session.
src/backend/utils/auth/base-auth-provider.ts:59:35     - Unknown word (anything)   -- Returns anything, but the default plugin
src/backend/utils/auth/base-auth-provider.ts:59:68     - Unknown word (implementations) -- but the default plugin implementations don't do anything with
src/backend/utils/auth/base-auth-provider.ts:70:88     - Unknown word (lived)           -- IdP which issues short-lived access tokens.
src/backend/utils/auth/base-auth-provider.ts:72:41     - Unknown word (ideally)         -- uthentication metadata should ideally be stored under "_auth
src/backend/utils/build-feature/build-feature.spec.ts:7:7       - Unknown word (chaines)    -- it('chaines before hooks', function
src/backend/utils/build-feature/build-feature.spec.ts:86:14     - Unknown word (falsey)     -- it('merges falsey options', function
src/backend/utils/build-feature/build-feature.spec.ts:86:7      - Unknown word (merges)     -- it('merges falsey options', function
src/backend/utils/build-feature/build-feature.ts:1:29      - Unknown word (ternary)    -- eslint-disable no-nested-ternary */
src/backend/utils/build-feature/build-feature.ts:44:84     - Unknown word (copied)     -- properties) which are copied
src/backend/utils/build-feature/build-feature.ts:45:4      - Unknown word (separately) -- // separately. If type MissingKeys
src/backend/utils/build-feature/build-feature.ts:54:4      - Unknown word (Merges)     -- * Merges 2 ResourceOptions together
src/backend/utils/build-feature/build-feature.ts:58:10     - Unknown word (joined)     -- * are joined and made unique
src/backend/utils/build-feature/build-feature.ts:61:43     - Unknown word (chained)    -- handler - which are chained.
src/backend/utils/component-loader.ts:102:6     - Unknown word (Breadcrumbs) -- 'Breadcrumbs',
src/backend/utils/component-loader.ts:121:11    - Unknown word (Wrapper)     -- 'RouteWrapper',
src/backend/utils/component-loader.ts:91:35     - Unknown word (Trying)     -- ConfigurationError(`Trying to bundle file '${src
src/backend/utils/errors/configuration-error.ts:22:5      - Unknown word (More)       -- More information can be found
src/backend/utils/errors/configuration-error.ts:9:36      - Unknown word (messed)     -- is thrown when user messed up something in the
src/backend/utils/errors/validation-error.ts:24:54     - Unknown word (wants)      -- e. thrown when user wants to perform
src/backend/utils/errors/validation-error.ts:25:22     - Unknown word (violates)   -- * an action which violates foreign key constraint
src/backend/utils/filter/filter.ts:58:79     - Unknown word (filtered)   -- resource which is filtered
src/backend/utils/filter/filter.ts:85:6      - Unknown word (Populates)  -- * Populates all filtered properties
src/backend/utils/layout-element-parser/layout-element-parser.spec.ts:10:7      - Unknown word (parses)     -- it('parses regular string', function
src/backend/utils/layout-element-parser/layout-element-parser.spec.ts:51:27     - Unknown word (Photo)      -- ['address', 'profilePhotoLocation'],
src/backend/utils/layout-element-parser/layout-element-parser.spec.ts:76:38     - Unknown word (Welcome)    -- headerProps = { children: 'Welcome my boy' }
src/backend/utils/layout-element-parser/layout-element-parser.spec.ts:7:22      - Unknown word (surname)    -- const property2 = 'surname'
src/backend/utils/layout-element-parser/layout-element-parser.spec.ts:8:39      - Unknown word (xxxl)       -- mt: 'default', ml: 'xxxl' }
src/backend/utils/layout-element-parser/layout-element-parser.ts:109:52    - Unknown word (follows)    -- layoutElement] (whatever follows props)
src/backend/utils/layout-element-parser/layout-element-parser.ts:54:45     - Unknown word (wraps)      -- React component which wraps elements */
src/backend/utils/layout-element-parser/layout-element-parser.ts:58:43     - Unknown word (wrapper)    -- should be used as a wrapper */
src/backend/utils/layout-element-parser/layout-element.doc.md:100:36    - Unknown word (true)       -- flexDirection: 'row', flex: true }, [
src/backend/utils/layout-element-parser/layout-element.doc.md:101:38    - Unknown word (Grow)       -- pr: 'default', flexGrow: 1 }],
src/backend/utils/layout-element-parser/layout-element.doc.md:10:77     - Unknown word (Where)      -- Array<LayoutElement>}. Where each
src/backend/utils/layout-element-parser/layout-element.doc.md:112:9     - Unknown word (Lastly)     -- #### 5. Lastly, take a look at the
src/backend/utils/layout-element-parser/layout-element.doc.md:11:77     - Unknown word (purpose)    -- defining its position and purpose.
src/backend/utils/layout-element-parser/layout-element.doc.md:15:1      - Unknown word (Those)      -- Those are available types
src/backend/utils/layout-element-parser/layout-element.doc.md:17:13     - Unknown word (Purpose)    -- | Type    | Purpose | Example |
src/backend/utils/layout-element-parser/layout-element.doc.md:19:30     - Unknown word (changed)    -- | It will be changed to the property in vertical
src/backend/utils/layout-element-parser/layout-element.doc.md:1:53      - Unknown word (layout)     -- to change the default layout of `edit`, `show` and
src/backend/utils/layout-element-parser/layout-element.doc.md:1:8       - Unknown word (Layout)     -- {@link LayoutElement} is used to change
src/backend/utils/layout-element-parser/layout-element.doc.md:21:41     - Unknown word (wrapped)    -- BoxProps}] | property wrapped by {@link Box} component
src/backend/utils/layout-element-parser/layout-element.doc.md:22:54     - Unknown word (Creates)    -- Array<LayoutElement>}] | Creates a Box and nest all the
src/backend/utils/layout-element-parser/layout-element.doc.md:23:38     - Unknown word (grouping)   -- LayoutElement>} | For grouping LayoutElements inside
src/backend/utils/layout-element-parser/layout-element.doc.md:24:64     - Unknown word (precede)    -- ComponentProps>] | if you precede first item with "@"
src/backend/utils/layout-element-parser/layout-element.doc.md:2:70      - Unknown word (renders)    -- LayoutElement>} and AdminJS renders it with React components
src/backend/utils/layout-element-parser/layout-element.doc.md:30:13     - Unknown word (simplest)   -- #### 1. The simplest horizontal layout:
src/backend/utils/layout-element-parser/layout-element.doc.md:43:40     - Unknown word (margin)     -- layout1.png' style="margin-bottom: 20px">
src/backend/utils/layout-element-parser/layout-element.doc.md:45:13     - Unknown word (Wrap)       -- #### 2. Now Wrap everything with a {
src/backend/utils/layout-element-parser/layout-element.doc.md:45:18     - Unknown word (everything) -- #### 2. Now Wrap everything with a {@link Box} of
src/backend/utils/layout-element-parser/layout-element.doc.md:4:19      - Unknown word (know)       -- You don't have to know React, to create a usable
src/backend/utils/layout-element-parser/layout-element.doc.md:4:43      - Unknown word (usable)     -- know React, to create a usable Layout for your actions
src/backend/utils/layout-element-parser/layout-element.doc.md:5:34      - Unknown word (Props)      -- look at the possible **Props** which can be used
src/backend/utils/layout-element-parser/layout-element.doc.md:62:3      - Unknown word (Hint)       -- > Hint: you can also pass an
src/backend/utils/layout-element-parser/layout-element.doc.md:62:69     - Unknown word (behave)     -- to define how it will behave in a different responsive
src/backend/utils/layout-element-parser/layout-element.doc.md:62:91     - Unknown word (responsive) -- behave in a different responsive breakpoints.
src/backend/utils/layout-element-parser/layout-element.doc.md:6:10      - Unknown word (often)      -- The most often used props are {@link
src/backend/utils/layout-element-parser/layout-element.doc.md:6:21      - Unknown word (props)      -- The most often used props are {@link BoxProps
src/backend/utils/layout-element-parser/layout-element.doc.md:83:32     - Unknown word (given)      -- inject content inside the given Component pass children
src/backend/utils/layout-element-parser/layout-element.doc.md:83:6      - Unknown word (inject)     -- > To inject content inside the given
src/backend/utils/layout-element-parser/layout-element.doc.md:87:69     - Unknown word (flex)       -- component) which is a flex.
src/backend/utils/layout-element-parser/layout-element.doc.md:87:9      - Unknown word (wrap)       -- We will wrap them with a {@link Box
src/backend/utils/layout-element-parser/layout-element.doc.md:88:70     - Unknown word (paddings)   -- extra box to define paddings.
src/backend/utils/layout-element-parser/layout-element.doc.md:90:47     - Unknown word (removing)   -- top section that by removing `{ mx: auto }` and changing
src/backend/utils/options-parser/options-parser.ts:104:24    - Unknown word (shortcut)   -- return `<link rel="shortcut icon" type="${type}
src/backend/utils/options-parser/options-parser.ts:35:16     - Unknown word (Logo)       -- const defaultLogo = h.assetPath('logo
src/backend/utils/options-parser/options-parser.ts:60:6      - Unknown word (Merging)    -- // Merging translations defined
src/backend/utils/options-parser/options-parser.ts:67:10     - Unknown word (Assure)     -- // Assure that translations object
src/backend/utils/populator/populate-property.spec.ts:75:14     - Unknown word (filled)     -- context('filled array ', () => {
src/backend/utils/populator/populate-property.spec.ts:80:11     - Unknown word (properly)   -- it('properly finds references in
src/backend/utils/populator/populate-property.spec.ts:80:20     - Unknown word (finds)      -- it('properly finds references in arrays
src/backend/utils/populator/populate-property.spec.ts:91:11     - Unknown word (dees)       -- it('dees not look for any record
src/backend/utils/populator/populate-property.ts:11:7      - Unknown word (populates)  -- * It populates one property in given
src/backend/utils/populator/populate-property.ts:45:6      - Unknown word (nulls)      -- // nulls to each of them
src/backend/utils/populator/populate-property.ts:52:39     - Unknown word (consideration) -- to take it all into consideration
src/backend/utils/populator/populate-property.ts:5:14      - Unknown word (Searchable) -- const isValueSearchable = (value: any): value
src/backend/utils/populator/populate-property.ts:80:11     - Unknown word (happens)       -- // this happens quite often in mongodb
src/backend/utils/populator/populate-property.ts:80:19     - Unknown word (quite)         -- // this happens quite often in mongodb where
src/backend/utils/populator/populate-property.ts:80:61     - Unknown word (constrains)    -- mongodb where there are no constrains on the database
src/backend/utils/populator/populate-property.ts:86:6      - Unknown word (assigning)     -- // assigning them to record#populated
src/backend/utils/populator/populate-property.ts:95:14     - Unknown word (lets)          -- // first lets extract all the existing
src/backend/utils/populator/populate-property.ts:99:12     - Unknown word (professions)   -- // 'professions.0': '5f7462621eb349
src/backend/utils/populator/populator.doc.md:13:23     - Unknown word (showing)    -- action handler for showing product with categories
src/backend/utils/populator/populator.doc.md:14:19     - Unknown word (Handler)    -- const showProductsHandler = async (request, response
src/backend/utils/populator/populator.doc.md:15:11     - Unknown word (payload)    -- const { payload } = request
src/backend/utils/populator/populator.doc.md:19:19     - Unknown word (await)      -- const product = await ProductResource.findOne
src/backend/utils/populator/populator.doc.md:26:44     - Unknown word (returns)    -- toJSON(currentAdmin) // returns RecordJSON with populated
src/backend/utils/populator/populator.doc.md:33:1      - Unknown word (Populator)  -- Populator is used in all built
src/backend/utils/populator/populator.doc.md:33:69     - Unknown word (care)       -- you don't need to take care of populating fields
src/backend/utils/populator/populator.doc.md:33:77     - Unknown word (populating) -- need to take care of populating fields on
src/backend/utils/populator/populator.doc.md:34:11     - Unknown word (Situation)  -- your own. Situation changes when you want
src/backend/utils/populator/populator.doc.md:5:1       - Unknown word (Take)       -- Take a look at an example
src/backend/utils/populator/populator.doc.md:5:34      - Unknown word (handler)    -- at an example action handler getting the Product
src/backend/utils/populator/populator.doc.md:5:42      - Unknown word (getting)    -- example action handler getting the Product record and
src/backend/utils/request-parser/request-parser.spec.ts:25:47     - Unknown word (Hired)      -- buildResourceWithProperty('isHired', {
src/backend/utils/request-parser/request-parser.ts:10:4      - Unknown word (Takes)      -- * Takes the original ActionRequest
src/backend/utils/resources-factory/resources-factory.spec.js:104:9     - Unknown word (assigns)    -- it('assigns ResourceDecorator when
src/backend/utils/resources-factory/resources-factory.spec.js:38:54     - Unknown word (supporting) -- there are no adapters supporting given database', function
src/backend/utils/resources-factory/resources-factory.ts:102:45    - Unknown word (initializes) -- to each resource and initializes it with `options` and
src/backend/utils/resources-factory/resources-factory.ts:41:55     - Unknown word (weren't)    -- from database which weren't previously given as
src/backend/utils/resources-factory/resources-factory.ts:41:63     - Unknown word (previously) -- database which weren't previously given as a resource
src/backend/utils/resources-factory/resources-factory.ts:72:57     - Unknown word (optionally) -- resources[].resource optionally user can give resource
src/backend/utils/router/router.doc.md:1:1       - Unknown word (Contains)   -- Contains a list of all the routes
src/backend/utils/router/router.doc.md:1:61      - Unknown word (grouped)    -- in AdminJS. They are grouped within 2 arrays:
src/backend/utils/router/router.doc.md:22:5      - Unknown word (Controller) -- Controller: ResourcesController
src/backend/utils/router/router.doc.md:28:24     - Unknown word (authentication) -- Create router with authentication logic
src/backend/utils/router/router.doc.md:33:41     - Unknown word (handle)         -- assets` and `routes` and handle them.
src/backend/utils/router/router.doc.md:36:23     - Unknown word (almost)         -- The following code is almost an identical copy from
src/backend/utils/router/router.doc.md:36:33     - Unknown word (identical)      -- following code is almost an identical copy from @adminjs/express
src/backend/utils/router/router.doc.md:53:28     - Unknown word (null)           -- const currentAdmin = null // you can fetch admin
src/backend/utils/router/router.doc.md:55:13     - Unknown word (controller)     -- const controller = new route.Controller
src/backend/utils/router/router.doc.md:57:35     - Unknown word (Lower)          -- method = req.method.toLowerCase()
src/backend/utils/router/router.doc.md:75:7      - Unknown word (catch)          -- } catch (e) {
src/backend/utils/router/router.ts:55:34     - Unknown word (fonts)      -- path.join(ASSETS_ROOT, 'fonts/icomoon.eot'),
src/backend/utils/router/router.ts:78:34     - Unknown word (mini)       -- frontend/assets/logo-mini.svg',
src/backend/utils/uploaded-file.type.ts:10:20     - Unknown word (says)       -- * this property says how many bytes of the
src/backend/utils/uploaded-file.type.ts:19:34     - Unknown word (according)  -- mime type of this file, according to the uploading client
src/backend/utils/uploaded-file.type.ts:19:51     - Unknown word (uploading)  -- file, according to the uploading client.
src/backend/utils/view-helpers/view-helpers.spec.ts:12:39     - Unknown word (gives)      -- correct url when user gives admin root path not
src/backend/utils/view-helpers/view-helpers.ts:209:41    - Unknown word (separated)  -- string>} recordIds   separated by comma records
src/backend/utils/view-helpers/view-helpers.ts:281:39    - Unknown word (invalidates) -- timestamp to the href invalidates the CDN cache
src/core-scripts.interface.ts:11:63     - Unknown word (caching)    -- to version assets for caching. This
src/current-admin.interface.ts:23:26     - Unknown word (avatar)     -- Optional url for an avatar photo
src/current-admin.interface.ts:23:33     - Unknown word (photo)      -- Optional url for an avatar photo
src/current-admin.interface.ts:39:6      - Unknown word (Also)       -- * Also you can put as many
src/frontend/bundle-entry.jsx:28:22     - Unknown word (THEME)      -- const theme = window.THEME
src/frontend/bundle-entry.jsx:2:17      - Unknown word (Suspense)   -- import React, { Suspense } from 'react'
src/frontend/bundle-entry.jsx:62:8      - Unknown word (regenerator) -- window.regeneratorRuntime = regeneratorRuntime
src/frontend/components/actions/bulk-delete.tsx:107:7     - Unknown word (Formatted)  -- const FormattedBulkDelete = withNotice
src/frontend/components/actions/bulk-delete.tsx:18:17     - Unknown word (Deletes)    -- * @description Deletes selected records.
src/frontend/components/actions/bulk-delete.tsx:53:68     - Unknown word (stripped)   -- URL so it has to be stripped before redirect
src/frontend/components/actions/bulk-delete.tsx:99:43     - Unknown word (spin)       -- <Icon icon="Loader" spin />) : null}
src/frontend/components/actions/list.tsx:56:21     - Unknown word (Performed)  -- const handleActionPerformed = (): any => fetchData
src/frontend/components/actions/utils/append-force-refresh.ts:5:4       - Unknown word (Adds)       -- * Adds refresh=true to the
src/frontend/components/app/action-button/action-button.tsx:40:5      - Unknown word (subcategory) -- * @subcategory Application
src/frontend/components/app/action-header/action-header-props.tsx:19:17     - Unknown word (objet)      -- /** An action objet */
src/frontend/components/app/action-header/action-header.tsx:100:19    - Unknown word (differs)    -- // styled which differs if action header is
src/frontend/components/app/action-header/action-header.tsx:113:36    - Unknown word (rounded)    -- ButtonGroup size="sm" rounded buttons={customResourceButton
src/frontend/components/app/action-header/actions-to-button-group.spec.ts:130:15    - Unknown word (remaining)  -- it('nests remaining action under parent
src/frontend/components/app/action-header/actions-to-button-group.spec.ts:30:29     - Unknown word (nesting)    -- context('flat actions (no nesting)', () => {
src/frontend/components/app/action-header/actions-to-button-group.spec.ts:4:34      - Unknown word (girl)       -- factory } from 'factory-girl'
src/frontend/components/app/action-header/actions-to-button-group.ts:30:15     - Unknown word (prevents)   -- // This prevents from "cursor: pointer
src/frontend/components/app/action-header/actions-to-button-group.ts:4:10      - Unknown word (Different)  -- import { DifferentActionParams } from
src/frontend/components/app/base-action-component.tsx:29:24     - Unknown word (amazing)    -- label: 'amazing action',
src/frontend/components/app/base-action-component.tsx:2:10      - Unknown word (Trans)      -- import { Trans } from 'react-i18next
src/frontend/components/app/breadcrumbs.tsx:12:14     - Unknown word (Breadcrumb) -- export const BreadcrumbLink: any = styled(Link
src/frontend/components/app/breadcrumbs.tsx:15:51     - Unknown word (Heights)    -- string => theme.lineHeights.default};
src/frontend/components/app/default-dashboard.tsx:2:31      - Unknown word (Illustration) -- Box, Button, H2, H5, Illustration, IllustrationProps,
src/frontend/components/app/default-dashboard.tsx:30:65     - Unknown word (subtitle)     -- nslateMessage('welcomeOnBoard_subtitle')}</Text>
src/frontend/components/app/default-dashboard.tsx:44:7      - Unknown word (boxes)        -- const boxes = ({ translateMessage
src/frontend/components/app/default-dashboard.tsx:53:30     - Unknown word (customize)    -- title: translateMessage('customizeResources_title'),
src/frontend/components/app/default-dashboard.tsx:58:15     - Unknown word (Plug)         -- variant: 'Plug',
src/frontend/components/app/default-dashboard.tsx:6:32      - Unknown word (rocket)       -- RocketSVG from './utils/rocket-svg.js'
src/frontend/components/app/default-dashboard.tsx:6:8       - Unknown word (Rocket)       -- import RocketSVG from './utils/rocket
src/frontend/components/app/default-dashboard.tsx:70:15     - Unknown word (Photos)       -- variant: 'Photos',
src/frontend/components/app/default-dashboard.tsx:76:23     - Unknown word (Card)         -- variant: 'IdentityCard',
src/frontend/components/app/default-dashboard.tsx:94:48     - Unknown word (card)         -- }) => theme.shadows.cardHover};
src/frontend/components/app/drawer-portal.tsx:10:67     - Unknown word (preroute)   -- store/actions/set-drawer-preroute.js'
src/frontend/components/app/drawer-portal.tsx:34:21     - Unknown word (WRAPPER)    -- const DRAWER_PORTAL_WRAPPER_ID = 'drawerPortalWrapper
src/frontend/components/app/drawer-portal.tsx:63:62     - Unknown word (reuses)     -- Drawer} component it reuses
src/frontend/components/app/error-message.tsx:18:4      - Unknown word (Prints)     -- * Prints error message
src/frontend/components/app/error-message.tsx:46:7      - Unknown word (illustration) -- illustration="NotFound"
src/frontend/components/app/language-select/language-select.tsx:17:27     - Unknown word (Lngs)       -- options: { supportedLngs },
src/frontend/components/app/language-select/language-select.tsx:24:69     - Unknown word (cimode)     -- (lang) => lang !== 'cimode') : []),
src/frontend/components/app/notice.tsx:11:15     - Unknown word (DISAPPEAR)  -- const TIME_TO_DISAPPEAR = 3
src/frontend/components/app/notice.tsx:71:3      - Unknown word (notices)    -- notices: Array<NoticeMessageInState
src/frontend/components/app/records-table/no-records.tsx:36:35     - Unknown word (throwing)   -- prevents rollup from throwing an error
src/frontend/components/app/records-table/property-header.spec.tsx:48:36     - Unknown word (searchable) -- render not selected but searchable field', function ()
src/frontend/components/app/records-table/property-header.spec.tsx:57:40     - Unknown word (opposite)   -- within a link with an opposite direction', function
src/frontend/components/app/records-table/property-header.tsx:16:36     - Unknown word (Either)     -- selected direction. Either 'asc' or 'desc'.
src/frontend/components/app/records-table/records-table-header.tsx:32:48     - Unknown word (clicked)    -- invoked when checkbox is clicked. If given extra column
src/frontend/components/app/records-table/records-table-header.tsx:77:22     - Unknown word (Kodaly)     -- * <TableCell>Kodaly</TableCell>
src/frontend/components/app/records-table/records-table.spec.tsx:17:6      - Unknown word (Stubs)      -- type StubsType = {
src/frontend/components/app/records-table/records-table.spec.tsx:88:38     - Unknown word (selecting)  -- render checkbox for selecting particular record',
src/frontend/components/app/records-table/records-table.tsx:27:44     - Unknown word (performs)   -- invoked when someone performs action without component
src/frontend/components/app/sidebar/sidebar-branding.tsx:43:7      - Unknown word (Sidebar)    -- const SidebarBranding: React.FC<Props
src/frontend/components/app/sidebar/sidebar-branding.tsx:50:17     - Unknown word (sidebar)    -- data-css="sidebar-logo"
src/frontend/components/app/sidebar/sidebar-resource-section.tsx:45:4      - Unknown word (exporting)  -- // exporting default and named SidebarReso
src/frontend/components/app/sidebar/sidebar.tsx:13:14     - Unknown word (SIDEBAR)    -- export const SIDEBAR_Z_INDEX = 50
src/frontend/components/app/sidebar/sidebar.tsx:24:40     - Unknown word (borders)    -- { theme }) => theme.borders.default};
src/frontend/components/app/top-bar.tsx:37:23     - Unknown word (topbar)     -- <NavBar data-css="topbar">
src/frontend/components/app/top-bar.tsx:54:18     - Unknown word (Topbar)     -- const OverridableTopbar = allowOverride<Props
src/frontend/components/app/utils/discord-logo-svg.tsx:14:19     - Unknown word (SVGID)      -- <rect id="SVGID_1_" x="78" y="31" width
src/frontend/components/login/index.tsx:36:7      - Unknown word (Illustrations) -- const IllustrationsWrapper = styled(Box
src/frontend/components/login/index.tsx:81:38     - Unknown word (Astronaut)     -- Illustration variant="Astronaut" width={82} height=
src/frontend/components/property-type/array/add-new-item-translation.tsx:24:36     - Unknown word (outlined)   -- type="button" variant="outlined" {...btnProps}>
src/frontend/components/property-type/array/convert-to-sub-property.tsx:11:4      - Unknown word (Converts)    -- * Converts property: PropertyJSON
src/frontend/components/property-type/array/convert-to-sub-property.tsx:12:66     - Unknown word (Futhermore)  -- along with the label. Futhermore flat isArray is removed
src/frontend/components/property-type/array/convert-to-sub-property.tsx:16:82     - Unknown word (placed)      -- sub-property should be placed
src/frontend/components/property-type/array/convert-to-sub-property.tsx:4:17      - Unknown word (Subproperty) -- export const getSubpropertyPath = (path: string
src/frontend/components/property-type/array/convert-to-sub-property.tsx:5:45      - Unknown word (subproperty) -- etIndexFromSubpropertyPath = (subpropertyPath: string) => {
src/frontend/components/property-type/array/edit.spec.tsx:92:34     - Unknown word (filed)      -- input> tags already filed with values', async
src/frontend/components/property-type/array/edit.tsx:3:75      - Unknown word (pangea)     -- DropResult } from '@hello-pangea/dnd'
src/frontend/components/property-type/array/remove-sub-property.spec.ts:24:13     - Unknown word (Populated)  -- 'notPopulated.0': 'val1',
src/frontend/components/property-type/array/remove-sub-property.spec.ts:42:63     - Unknown word (adjusts)    -- property from params and adjusts the keys', () => {
src/frontend/components/property-type/array/remove-sub-property.ts:12:89     - Unknown word (flattened)  -- removed. It has to be flattened
src/frontend/components/property-type/array/remove-sub-property.ts:21:28     - Unknown word (refill)     -- then remove keys, and refill back some.nested.1.key
src/frontend/components/property-type/array/remove-sub-property.ts:7:7       - Unknown word (reorders)   -- * 2. reorders keys in new array item
src/frontend/components/property-type/base-property-component.doc.md:10:1      - Unknown word (picks)      -- picks Component to use. That
src/frontend/components/property-type/base-property-component.doc.md:10:25     - Unknown word (That)       -- picks Component to use. That is how **date** fields
src/frontend/components/property-type/base-property-component.doc.md:10:71     - Unknown word (datepicker) -- fields are rendered as **datepicker**
src/frontend/components/property-type/base-property-component.doc.md:125:25    - Unknown word (contained)     -- <Button variant="contained" onClick={submit}>Submit
src/frontend/components/property-type/base-property-component.doc.md:127:20    - Unknown word (throw)         -- This will throw an error because there
src/frontend/components/property-type/base-property-component.doc.md:13:5      - Unknown word (Overriding) -- ### Overriding default render logic
src/frontend/components/property-type/base-property-component.doc.md:15:50     - Unknown word (corresponding) -- ertyComponent will render the corresponding
src/frontend/components/property-type/base-property-component.doc.md:16:34     - Unknown word (Picker)        -- input for string, DatePicker for dates, etc.
src/frontend/components/property-type/base-property-component.doc.md:2:10      - Unknown word (mean)       -- places I mean:
src/frontend/components/property-type/base-property-component.doc.md:40:29     - Unknown word (altering)      -- example above we are altering how **name** property
src/frontend/components/property-type/base-property-component.doc.md:53:16     - Unknown word (meters)        -- {value} [meters]
src/frontend/components/property-type/base-property-component.doc.md:5:78      - Unknown word (Edit)       -- record like: {@link EditAction}, and {@link NewAction
src/frontend/components/property-type/base-property-component.doc.md:63:12     - Unknown word (false)         -- isTitle: false,
src/frontend/components/property-type/base-property-component.doc.md:7:19      - Unknown word (finally)    -- - **filter**: and finally on the sidebar filter
src/frontend/components/property-type/base-property-component.doc.md:9:63      - Unknown word (rendered)   -- where the property is rendered **BasePropertyComponent
src/frontend/components/property-type/base-property-component.tsx:64:82     - Unknown word (Renderers)  -- the actual Component Renderers are
src/frontend/components/property-type/base-property-props.ts:168:14    - Unknown word (mostly)     -- * This is mostly for an internal use
src/frontend/components/property-type/base-property-props.ts:65:37     - Unknown word (indicate)   -- function which should indicate change of the field
src/frontend/components/property-type/boolean/filter.tsx:37:11     - Unknown word (Clearable)  -- isClearable
src/frontend/components/property-type/clean-property-component.tsx:10:12     - Unknown word (useful)     -- * This is useful if you want your custom
src/frontend/components/property-type/currency/format-value.ts:15:9      - Unknown word (picked)     -- const pickedProps = Object.keys(props
src/frontend/components/property-type/currency/format-value.ts:7:16      - Unknown word (Separators) -- 'disableGroupSeparators',
src/frontend/components/property-type/docs/on-property-change.doc.md:11:43     - Unknown word (updated)    -- case, we are passing an updated record, so that we can
src/frontend/components/property-type/docs/on-property-change.doc.md:1:11      - Unknown word (callback)   -- On change callback - It can take:
src/frontend/components/property-type/docs/on-property-change.doc.md:21:29     - Unknown word (void)       -- const handleClick = (): void => {
src/frontend/components/property-type/docs/on-property-change.doc.md:3:7       - Unknown word (argument)   -- * one argument which is an entire
src/frontend/components/property-type/docs/on-property-change.doc.md:4:47      - Unknown word (second)     -- property.path__ and the second one: __value__.
src/frontend/components/property-type/docs/on-property-change.doc.md:4:5       - Unknown word (arguments)  -- * 2 arguments - one __property.path
src/frontend/components/property-type/reference/edit.tsx:22:22     - Unknown word (Cannot)     -- throw new Error(`Cannot reference resource in
src/frontend/components/property-type/richtext/show.tsx:18:15     - Unknown word (Markup)     -- const createMarkup = (html: string): InnerHtmlPr
src/frontend/components/property-type/richtext/show.tsx:23:15     - Unknown word (dangerously) -- <Text dangerouslySetInnerHTML={createMarkup
src/frontend/components/routes/bulk-action.tsx:60:26     - Unknown word (Fetching)   -- message: 'errorFetchingRecords',
src/frontend/components/routes/page.tsx:43:68     - Unknown word (Beware)     -- title')} illustration="Beware">
src/frontend/components/routes/record-action.tsx:95:64     - Unknown word (remains)    -- resource. The old record remains until useEffect fetches
src/frontend/components/routes/record-action.tsx:95:88     - Unknown word (fetches)    -- remains until useEffect fetches data
src/frontend/components/routes/record-action.tsx:97:18     - Unknown word (approach)   -- // Alternative approach would be to setRecord
src/frontend/components/spec/record-json.factory.ts:25:14     - Unknown word (MALE)       -- gender: 'MALE',
src/frontend/components/spec/resource-json.factory.ts:39:36     - Unknown word (FEMALE)     -- label: 'female', value: 'FEMALE',
src/frontend/global-entry.js:15:19     - Unknown word (Creatable)  -- import ReactSelectCreatable from 'react-select/creatable
src/frontend/global-entry.js:15:48     - Unknown word (creatable)  -- tCreatable from 'react-select/creatable'
src/frontend/hoc/allow-override.tsx:12:43     - Unknown word (receives)   -- overridden, component receives additional prop: `OriginalCom
src/frontend/hoc/with-notice.ts:13:15     - Unknown word (triggering) -- // Function triggering notice messages
src/frontend/hooks/use-action/use-action.doc.md:1:64      - Unknown word (actual)     -- ActionJSON} to perform actual actions on the backend
src/frontend/hooks/use-action/use-action.doc.md:2:75      - Unknown word (behaves)    -- ActionJSON.guard}) it behaves differently.
src/frontend/hooks/use-action/use-action.doc.md:2:83      - Unknown word (differently) -- ActionJSON.guard}) it behaves differently.
src/frontend/hooks/use-action/use-action.types.ts:18:13     - Unknown word (Merged)     -- export type MergedActionParams = RecordActionPar
src/frontend/hooks/use-action/use-action.types.ts:31:38     - Unknown word (means)      -- action. When null it means that action doesn't
src/frontend/hooks/use-action/use-action.types.ts:31:69     - Unknown word (neither)    -- action doesn't have neither component nor action
src/frontend/hooks/use-history-listen.ts:11:25     - Unknown word (Stored)     -- const [storedPath, setStoredPath] = useLocalStorage
src/frontend/hooks/use-local-storage/use-local-storage.doc.md:28:1      - Unknown word (Returns)    -- Returns {@link UseRecordResult
src/frontend/hooks/use-local-storage/use-local-storage.doc.md:3:10      - Unknown word (very)       -- It works very similar to `useState
src/frontend/hooks/use-local-storage/use-local-storage.doc.md:3:46      - Unknown word (exception)  -- `useState` with the exception that it requires the
src/frontend/hooks/use-local-storage/use-local-storage.doc.md:3:64      - Unknown word (requires)   -- the exception that it requires the key under which
src/frontend/hooks/use-local-storage/use-local-storage.ts:20:63     - Unknown word (executed)   -- useState so logic is only executed once
src/frontend/hooks/use-local-storage/use-local-storage.ts:35:10     - Unknown word (persists)   -- // ... persists the new value to localStorage
src/frontend/hooks/use-modal.doc.md:12:14     - Unknown word (simple)     -- Let's create simple React component with
src/frontend/hooks/use-modal.doc.md:12:52     - Unknown word (fire)       -- component with button to fire modal example.
src/frontend/hooks/use-modal.doc.md:13:37     - Unknown word (demonstrate) -- openModal` props to demonstrate modal usage
src/frontend/hooks/use-modal.doc.md:1:28      - Unknown word (utilize)    -- useModal` hook is used to utilize @adminjs-design-system
src/frontend/hooks/use-modal.doc.md:1:67      - Unknown word (molecule)   -- design-system `Modal` molecule embedded in AdminJS
src/frontend/hooks/use-modal.doc.md:37:5      - Unknown word (Alert)       -- ### Alert
src/frontend/hooks/use-modal.doc.md:43:34     - Unknown word (Happened)    -- { title: 'somethingHappened', variant: 'info' }
src/frontend/hooks/use-modal.doc.md:50:62     - Unknown word (fired)       -- confirmAction` which will be fired after confirm, so example
src/frontend/hooks/use-modal.doc.md:54:30     - Unknown word (Sure)        -- modalProps: { title: 'areYouSureToDoThis', variant:
src/frontend/hooks/use-modal.doc.md:57:17     - Unknown word (Confirmed)   -- console.log('Confirmed !!!')
src/frontend/hooks/use-modal.doc.md:5:14      - Unknown word (designed)   -- The hook was designed to be used in three
src/frontend/hooks/use-modal.doc.md:63:51     - Unknown word (purposes)    -- our modal. For demo purposes we create simple form
src/frontend/hooks/use-modal.doc.md:6:11      - Unknown word (alert)      -- * display alert information (non blocking
src/frontend/hooks/use-modal.doc.md:6:34      - Unknown word (blocking)   -- alert information (non blocking)
src/frontend/hooks/use-modal.doc.md:71:24     - Unknown word (simply)      -- Lorem Ipsum is simply dummy text of the printing
src/frontend/hooks/use-modal.doc.md:71:31     - Unknown word (dummy)       -- Lorem Ipsum is simply dummy text of the printing
src/frontend/hooks/use-modal.doc.md:71:49     - Unknown word (printing)    -- simply dummy text of the printing and typesetting industry
src/frontend/hooks/use-modal.doc.md:71:62     - Unknown word (typesetting) -- of the printing and typesetting industry. Lorem Ipsum
src/frontend/hooks/use-modal.doc.md:72:101    - Unknown word (scrambled)   -- a galley of type and scrambled it to make
src/frontend/hooks/use-modal.doc.md:72:34     - Unknown word (since)       -- standard dummy text ever since the 1500s, when an unknown
src/frontend/hooks/use-modal.doc.md:72:59     - Unknown word (unknown)     -- since the 1500s, when an unknown printer took a galley
src/frontend/hooks/use-modal.doc.md:72:67     - Unknown word (printer)     -- 0s, when an unknown printer took a galley of type
src/frontend/hooks/use-modal.doc.md:72:82     - Unknown word (galley)      -- unknown printer took a galley of type and scrambled
src/frontend/hooks/use-modal.doc.md:73:16     - Unknown word (specimen)    -- a type specimen book. It has survived
src/frontend/hooks/use-modal.doc.md:73:38     - Unknown word (survived)    -- specimen book. It has survived not only five centuries
src/frontend/hooks/use-modal.doc.md:73:56     - Unknown word (five)        -- has survived not only five centuries, but also
src/frontend/hooks/use-modal.doc.md:73:61     - Unknown word (centuries)   -- survived not only five centuries, but also the leap into
src/frontend/hooks/use-modal.doc.md:73:85     - Unknown word (leap)        -- centuries, but also the leap into electronic typesetting
src/frontend/hooks/use-modal.doc.md:74:103    - Unknown word (sheets)      -- release of Letraset sheets containing
src/frontend/hooks/use-modal.doc.md:74:19     - Unknown word (essentially) -- remaining essentially unchanged. It was popularised
src/frontend/hooks/use-modal.doc.md:74:31     - Unknown word (unchanged)   -- remaining essentially unchanged. It was popularised
src/frontend/hooks/use-modal.doc.md:74:49     - Unknown word (popularised) -- essentially unchanged. It was popularised in the 1960s with the
src/frontend/hooks/use-modal.doc.md:74:94     - Unknown word (Letraset)    -- with the release of Letraset sheets containing
src/frontend/hooks/use-modal.doc.md:75:21     - Unknown word (passages)    -- Lorem Ipsum passages, and more recently with
src/frontend/hooks/use-modal.doc.md:75:40     - Unknown word (recently)    -- Ipsum passages, and more recently with desktop publishing
src/frontend/hooks/use-modal.doc.md:75:62     - Unknown word (publishing)  -- recently with desktop publishing software like Aldus
src/frontend/hooks/use-modal.doc.md:75:87     - Unknown word (Aldus)       -- publishing software like Aldus PageMaker including
src/frontend/hooks/use-modal.doc.md:75:97     - Unknown word (Maker)       -- software like Aldus PageMaker including versions
src/frontend/hooks/use-modal.doc.md:98:25     - Unknown word (sent)        -- console.log('Feedback sent ...')
src/frontend/hooks/use-navigation-resources.ts:27:9      - Unknown word (enrich)     -- const enrichResource = useMemo((
src/frontend/hooks/use-query-params.ts:42:12     - Unknown word (Dots)       -- allowDots: true,
src/frontend/hooks/use-record/filter-record.spec.ts:10:7      - Unknown word (permits)    -- it('permits property which included
src/frontend/hooks/use-record/filter-record.spec.ts:3:20      - Unknown word (Permitted)  -- import { isPropertyPermitted } from './filter-record
src/frontend/hooks/use-record/is-entire-record-given.ts:3:9       - Unknown word (Entire)     -- const isEntireRecordGiven = (
src/frontend/hooks/use-record/is-entire-record-given.ts:7:52      - Unknown word (makes)      -- and omit value. This makes sense when
src/frontend/hooks/use-record/is-entire-record-given.ts:7:58      - Unknown word (sense)      -- omit value. This makes sense when
src/frontend/hooks/use-record/merge-record-response.ts:18:35     - Unknown word (relevant)   -- errors which are not relevant anymore
src/frontend/hooks/use-record/merge-record-response.ts:18:44     - Unknown word (anymore)    -- which are not relevant anymore
src/frontend/hooks/use-record/merge-record-response.ts:6:4       - Unknown word (Depending)  -- * Depending on a place and response
src/frontend/hooks/use-record/params-to-form-data.ts:14:62     - Unknown word (wire)       -- sending files via the wire. But it has limitations
src/frontend/hooks/use-record/params-to-form-data.ts:14:79     - Unknown word (limitations) -- the wire. But it has limitations.
src/frontend/hooks/use-record/params-to-form-data.ts:15:4      - Unknown word (Namely)      -- * Namely it can only transport
src/frontend/hooks/use-record/params-to-form-data.ts:26:29     - Unknown word (flatted)     -- Assume that params are flatted
src/frontend/hooks/use-record/params-to-form-data.ts:28:89     - Unknown word (having)      -- in order to prevent having
src/frontend/hooks/use-record/update-record.spec.ts:14:13     - Unknown word (Africa)     -- title: 'Africa',
src/frontend/hooks/use-record/update-record.spec.ts:50:15     - Unknown word (Adolf)      -- title: 'Adolf',
src/frontend/hooks/use-record/update-record.spec.ts:68:7      - Unknown word (flattens)   -- it('flattens value when object is
src/frontend/hooks/use-record/update-record.ts:10:39     - Unknown word (followed)   -- name) and the value (followed by an optional selectedRecord
src/frontend/hooks/use-record/update-record.ts:16:72     - Unknown word (resulted)   -- and then sets all the resulted values
src/frontend/hooks/use-record/update-record.ts:18:9      - Unknown word (fills)      -- * - it fills value in RecordJSON
src/frontend/hooks/use-record/use-record.doc.md:1:3       - Unknown word (powerful)   -- A powerful, hook which allows you
src/frontend/hooks/use-record/use-record.doc.md:25:41     - Unknown word (previous)   -- CommentComponent` from the previous example could look like
src/frontend/hooks/use-record/use-record.doc.md:28:52     - Unknown word (Translation) -- useRecord, Box, useTranslation } from '@adminjs/design
src/frontend/hooks/use-record/use-record.doc.md:39:37     - Unknown word (redirect)    -- can do something like redirect user, or update state
src/frontend/hooks/use-record/use-record.doc.md:3:9       - Unknown word (does)       -- ## What does it mean?
src/frontend/hooks/use-record/use-record.doc.md:40:34     - Unknown word (holds)       -- response.data.record` holds the updated record
src/frontend/hooks/use-record/use-record.doc.md:73:22     - Unknown word (initialized) -- useRecord` has been initialized with the initial state
src/frontend/hooks/use-record/use-record.doc.md:75:47     - Unknown word (tells)       -- `resource.id` which tells useRecord where it should
src/frontend/hooks/use-record/use-record.doc.md:77:9      - Unknown word (always)      -- You can always put a `null` there,
src/frontend/hooks/use-record/use-record.doc.md:78:57     - Unknown word (call)        -- in the first `submit` call.
src/frontend/hooks/use-record/use-record.doc.md:88:53     - Unknown word (invoking)    -- the possible way of invoking `handleChange` callback
src/frontend/hooks/use-record/use-record.doc.md:91:1      - Unknown word (Finally)     -- Finally, this initial state
src/frontend/hooks/use-record/use-record.doc.md:99:22     - Unknown word (relationships) -- handle one to many relationships
src/frontend/hooks/use-record/use-record.tsx:37:12     - Unknown word (Synced)     -- const [isSynced, setIsSynced] = useState
src/frontend/hooks/use-record/use-record.tsx:50:9      - Unknown word (keeps)      -- // it keeps the same format as useState
src/frontend/hooks/use-record/use-record.tsx:51:12     - Unknown word (Filtered)   -- const setFilteredRecord: Dispatch<SetStateActio
src/frontend/hooks/use-record/use-record.tsx:70:18     - Unknown word (trying)     -- `You are trying to set property: "$
src/frontend/hooks/use-record/use-record.tsx:71:17     - Unknown word (permitted)  -- 'is not permitted. Take a look at `useRecord
src/frontend/hooks/use-record/use-record.type.ts:10:15     - Unknown word (restricting) -- * Example of restricting useRecord to operate
src/frontend/hooks/use-record/use-record.type.ts:10:40     - Unknown word (operate)     -- restricting useRecord to operate only on a finite set
src/frontend/hooks/use-record/use-record.type.ts:75:15     - Unknown word (submission)  -- * Triggers submission of the record. Returns
src/frontend/hooks/use-record/use-record.type.ts:90:6      - Unknown word (simultaneously) -- * simultaneously in an another place
src/frontend/hooks/use-record/use-record.type.ts:95:33     - Unknown word (synced)         -- Indicates if record is in "synced" state. It is when it
src/frontend/hooks/use-record/use-record.type.ts:96:16     - Unknown word (submitted)      -- * record or submitted. After at least one
src/frontend/hooks/use-records/use-records-result.type.ts:19:24     - Unknown word (pagination) -- ** current page (in pagination) */
src/frontend/hooks/use-records/use-records-result.type.ts:29:31     - Unknown word (fetching)   -- function which triggers fetching the data */
src/frontend/hooks/use-records/use-records.doc.md:14:1      - Unknown word (Basically)  -- Basically wherever you need a
src/frontend/hooks/use-records/use-records.doc.md:14:11     - Unknown word (wherever)   -- Basically wherever you need a list of records
src/frontend/hooks/use-records/use-records.doc.md:14:64     - Unknown word (reacts)     -- records of some type. It reacts to `location.search
src/frontend/hooks/use-records/use-records.doc.md:15:72     - Unknown word (regular)    -- (the same as with a regular filter).
src/frontend/hooks/use-records/use-records.doc.md:19:38     - Unknown word (modified)   -- TypeScript - this is a modified snippet from the source
src/frontend/hooks/use-records/use-records.doc.md:19:47     - Unknown word (snippet)    -- this is a modified snippet from the source code
src/frontend/hooks/use-records/use-records.doc.md:25:5      - Unknown word (loading)    -- loading,
src/frontend/hooks/use-records/use-records.doc.md:2:21      - Unknown word (handles)    -- a `list` action. It handles:
src/frontend/hooks/use-records/use-records.doc.md:35:9      - Unknown word (navigate)   -- const navigate = useNavigate()
src/frontend/hooks/use-records/use-records.doc.md:41:65     - Unknown word (optional)   -- SelectedRecords hook, but are optional.
src/frontend/hooks/use-records/use-records.doc.md:5:3       - Unknown word (filtering)  -- * filtering,
src/frontend/hooks/use-records/use-records.doc.md:63:11     - Unknown word (Loading)    -- isLoading={loading}
src/frontend/hooks/use-records/use-records.doc.md:6:3       - Unknown word (sorting)    -- * sorting,
src/frontend/hooks/use-selected-records/use-selected-records.doc.md:16:76     - Unknown word (nothing)    -- useRecords hook. But nothing stays in a way
src/frontend/hooks/use-selected-records/use-selected-records.doc.md:16:84     - Unknown word (stays)      -- useRecords hook. But nothing stays in a way
src/frontend/hooks/use-selected-records/use-selected-records.doc.md:17:21     - Unknown word (yourself)   -- // to handle that yourself with let say: useState
src/frontend/hooks/use-selected-records/use-selected-records.doc.md:2:76      - Unknown word (exactly)    -- select box allowing exactly that.
src/frontend/hooks/use-translation.ts:9:40      - Unknown word (Apart)      -- TranslateFunctions}. Apart from that it also returns
src/frontend/interfaces/action/action-json.interface.ts:28:6      - Unknown word (Guarding)   -- * Guarding message which should
src/frontend/interfaces/action/build-action-click-handler.ts:45:53     - Unknown word (explicitly) -- option set to "false" explicitly in it's configuration
src/frontend/interfaces/action/build-action-click-handler.ts:70:16     - Unknown word (behaviour)  -- // Default behaviour - you're navigated to
src/frontend/interfaces/action/build-action-click-handler.ts:70:35     - Unknown word (navigated)  -- Default behaviour - you're navigated to action URL and logic
src/frontend/interfaces/action/call-action-api.ts:18:16     - Unknown word (workaround) -- /* Temporary workaround to avoid breaking changes
src/frontend/interfaces/action/call-action-api.ts:18:30     - Unknown word (avoid)      -- Temporary workaround to avoid breaking changes.
src/frontend/interfaces/action/call-action-api.ts:18:36     - Unknown word (breaking)   -- workaround to avoid breaking changes.
src/frontend/interfaces/action/call-action-api.ts:19:27     - Unknown word (rewrite)    -- TODO: For v8 release, rewrite actions to support PUT
src/frontend/interfaces/noticeMessage.interface.ts:6:47      - Unknown word (Toast)      -- can be presented as a "Toast" message.
src/frontend/interfaces/page-json.interface.ts:4:4       - Unknown word (Representing) -- * Representing the page in the sidebar
src/frontend/interfaces/property-json/property-json.interface.ts:130:46    - Unknown word (edition)    -- should be disabled in edition
src/frontend/interfaces/record-json.interface.ts:10:7      - Unknown word (Human)      -- /** Human readable message */
src/frontend/interfaces/resource-json.interface.ts:5:38      - Unknown word (fronted)    -- object accessible on the fronted
src/frontend/interfaces/resource-json.interface.ts:70:21     - Unknown word (easies)     -- * So this is the easies way of getting any property
src/frontend/layout-template.tsx:80:39     - Unknown word (older)      -- display-role reset for older browsers */
src/frontend/layout-template.tsx:80:45     - Unknown word (browsers)   -- role reset for older browsers */
src/frontend/layout-template.tsx:85:41     - Unknown word (newer)      -- hidden-attribute fix for newer browsers */
src/frontend/login-template.spec.ts:11:37     - Unknown word (went)       -- errorMessage = 'Something went wrong'
src/frontend/store/actions/add-notice.ts:2:47      - Unknown word (reducers)   -- ticeMessageInState } from '../reducers/noticesReducer.js'
src/frontend/store/actions/add-notice.ts:2:63      - Unknown word (Reducer)    -- '../reducers/noticesReducer.js'
src/frontend/store/actions/add-notice.ts:4:18      - Unknown word (NOTICE)     -- export const ADD_NOTICE = 'ADD_NOTICE'
src/frontend/store/actions/initialize-branding.ts:3:14      - Unknown word (BRANDING)   -- export const BRANDING_INITIALIZE = 'BRANDING
src/frontend/store/actions/initialize-pages.ts:3:14      - Unknown word (PAGES)      -- export const PAGES_INITIALIZE = 'PAGES
src/frontend/store/actions/set-drawer-preroute.ts:3:21      - Unknown word (PREROUTE)   -- export const DRAWER_PREROUTE_SET = 'DRAWER_PREROUTE
src/frontend/store/reducers/localesReducer.ts:4:13      - Unknown word (Lolcale)    -- export type LolcaleInState = Locale
src/frontend/store/reducers/noticesReducer.ts:11:13     - Unknown word (Notices)    -- export type NoticesInState = Array<NoticeMessageI
src/frontend/store/store.ts:3:17      - Unknown word (Reducers)   -- import { combineReducers, legacy_createStore
src/frontend/store/store.ts:54:7      - Unknown word (reducer)    -- const reducer = combineReducers<ReduxState
src/frontend/utils/adminjs.i18n.ts:35:19     - Unknown word (Initialized)      -- if (!instance.isInitialized) {
src/frontend/utils/adminjs.i18n.ts:4:47      - Unknown word (languagedetector) -- from 'i18next-browser-languagedetector'
src/utils/file-resolver.ts:24:16     - Unknown word (Никита)     -- * After: \D:\Никита\project\dist\components
src/utils/file-resolver.ts:29:27     - Unknown word (backslash)  -- If the separator is a backslash, remove the first one
src/utils/flat/filter-out-params.doc.md:1:43      - Unknown word (passed)     -- params` it removes this passed in an argument.
src/utils/flat/filter-out-params.spec.ts:10:31     - Unknown word (ugly)       -- description': 'very ugly',
src/utils/flat/filter-out-params.spec.ts:12:27     - Unknown word (stinks)     -- meta.otherInfo': 'he stinks',
src/utils/flat/filter-out-params.spec.ts:13:35     - Unknown word (steroid)           -- metadetaksamosone: 'this is a steroid',
src/utils/flat/filter-out-params.spec.ts:13:5      - Unknown word (metadetaksamosone) -- metadetaksamosone: 'this is a steroid
src/utils/flat/flat.doc.md:27:18     - Unknown word (nested)     -- * databases have nested JSONB properties or
src/utils/flat/flat.doc.md:27:45     - Unknown word (Mixed)      -- JSONB properties or Mixed Schemas
src/utils/flat/flat.doc.md:28:3      - Unknown word (developers) -- * developers would like to send more
src/utils/flat/flat.doc.md:28:64     - Unknown word (Fronted)    -- complicated data from the Fronted to the backend as arrays
src/utils/flat/flat.doc.md:30:4      - Unknown word (achieve)    -- To achieve that we "flatten" all
src/utils/flat/flat.doc.md:30:50     - Unknown word (saving)     -- all the data before saving them to `params` property
src/utils/flat/flat.doc.md:3:1       - Unknown word (Before)     -- Before you dive into the details
src/utils/flat/flat.doc.md:3:12      - Unknown word (dive)       -- Before you dive into the details of
src/utils/flat/flat.doc.md:3:62      - Unknown word (briefly)    -- flat helpers, let me briefly introduce the way how
src/utils/flat/flat.doc.md:3:70      - Unknown word (introduce)  -- helpers, let me briefly introduce the way how the
src/utils/flat/flat.doc.md:43:4      - Unknown word (interests)  -- 'interests.0': 'running',
src/utils/flat/flat.doc.md:44:19     - Unknown word (jogging)    -- 'interests.1': 'jogging',
src/utils/flat/flat.doc.md:47:44     - Unknown word (deeper)     -- be even nested on the deeper levels.
src/utils/flat/flat.doc.md:52:1      - Unknown word (reasons)    -- reasons why we picked this one
src/utils/flat/flat.doc.md:54:6      - Unknown word (storing)    -- **1. storing selected data in the
src/utils/flat/flat.doc.md:62:80     - Unknown word (lose)       -- example above, we will lose `auth.twitter`.
src/utils/flat/flat.doc.md:6:9       - Unknown word (Simple)     -- ### The Simple Case
src/utils/flat/flat.doc.md:70:12     - Unknown word (keep)       -- ORM should keep the value of the `auth
src/utils/flat/flat.doc.md:72:69     - Unknown word (regarding)  -- is the most advanced regarding handing mixed values
src/utils/flat/flat.doc.md:72:79     - Unknown word (handing)    -- most advanced regarding handing mixed values
src/utils/flat/flat.doc.md:72:87     - Unknown word (mixed)      -- advanced regarding handing mixed values
src/utils/flat/flat.doc.md:76:79     - Unknown word (optimal)    -- the Backend. The most optimal way of
src/utils/flat/flat.doc.md:77:1      - Unknown word (doing)      -- doing that is by using {@link
src/utils/flat/flat.doc.md:79:24     - Unknown word (guess)      -- And this, as you might guess, fits perfectly to our
src/utils/flat/flat.doc.md:79:31     - Unknown word (fits)       -- as you might guess, fits perfectly to our flatten
src/utils/flat/flat.doc.md:79:36     - Unknown word (perfectly)  -- you might guess, fits perfectly to our flatten `params
src/utils/flat/flat.doc.md:81:5      - Unknown word (Consequences) -- ### Consequences
src/utils/flat/flat.doc.md:83:1      - Unknown word (Flattening)   -- Flattening in AdminJS has its consequenc
src/utils/flat/flat.doc.md:83:31     - Unknown word (consequences) -- Flattening in AdminJS has its consequences everywhere where you
src/utils/flat/flat.doc.md:83:44     - Unknown word (everywhere)   -- has its consequences everywhere where you use
src/utils/flat/flat.doc.md:90:48     - Unknown word (backed)       -- payload` send to the backed is also flattened.
src/utils/flat/flat.doc.md:92:30     - Unknown word (gathered)     -- you should use helpers gathered in {@link flat}
src/utils/flat/get.doc.md:22:13     - Unknown word (undefined)  -- // value is undefined
src/utils/flat/get.spec.ts:11:14     - Unknown word (Wojtek)     -- name: 'Wojtek',
src/utils/flat/get.spec.ts:12:17     - Unknown word (Krysiak)    -- surname: 'Krysiak',
src/utils/flat/get.spec.ts:16:32     - Unknown word (Tumor)      -- interest.OfMe.2': 'brainTumor',
src/utils/flat/get.spec.ts:17:19     - Unknown word (Generally)  -- interests: 'Generally everything',
src/utils/flat/get.spec.ts:20:13     - Unknown word (duties)     -- 'meta.duties': 'everything',
src/utils/flat/get.spec.ts:22:7      - Unknown word (nulled)     -- nulled: null,
src/utils/flat/get.spec.ts:94:21     - Unknown word (Shills)     -- 'Skills.softShills': [],
src/utils/flat/get.spec.ts:97:39     - Unknown word (junior)     -- hardSkills.0.level': 'junior',
src/utils/flat/get.spec.ts:98:30     - Unknown word (Profession) -- Skills.hardSkills.0.Profession': referenceId,
src/utils/flat/get.ts:26:16     - Unknown word (rely)       -- // we cannot rely on typeof params[propertyPath
src/utils/flat/merge.spec.ts:21:17     - Unknown word (yesterday)  -- updated: 'yesterday',
src/utils/flat/merge.spec.ts:26:44     - Unknown word (Draft)      -- 'status.type': 'newDraft' }
src/utils/flat/merge.spec.ts:38:19     - Unknown word (today)      -- updated: 'today',
src/utils/flat/merge.spec.ts:7:32      - Unknown word (draft)      -- object1 = { status: 'draft', postImage: null, blogImageS
src/utils/flat/path-to-parts.doc.md:11:16     - Unknown word (Indexes)    -- When `skipArrayIndexes` is set to true it also
src/utils/flat/path-to-parts.doc.md:11:7      - Unknown word (skip)       -- When `skipArrayIndexes` is set
src/utils/flat/path-to-parts.doc.md:12:23     - Unknown word (indexes)    -- separated by numbers (indexes). Then it:
src/utils/flat/path-to-parts.doc.md:1:10      - Unknown word (story)      -- the Long story short this method:
src/utils/flat/path-to-parts.doc.md:3:34      - Unknown word (Inner)      -- nested.nested2.normalInner`
src/utils/flat/path-to-parts.doc.md:8:1       - Unknown word (Formally)   -- Formally it changes path in
src/utils/flat/path-to-parts.doc.md:8:39      - Unknown word (notation)   -- changes path in "flatten" notation, to an Array of all
src/utils/flat/path-to-parts.doc.md:9:24      - Unknown word (searched)   -- keys, which could have searched property.
src/utils/flat/path-to-parts.ts:9:60      - Unknown word (outcome)    -- be skipped from the outcome.
src/utils/flat/property-key-regex.ts:8:44      - Unknown word (produce)    -- property.0` it will produce `nested(\.|\.\d+\.)
src/utils/flat/property-key-regex.ts:9:18      - Unknown word (intentional) -- // and this is intentional because user can give
src/utils/flat/property-key-regex.ts:9:91      - Unknown word (deeply)      -- property path for with deeply
src/utils/flat/remove-path.doc.md:3:1       - Unknown word (Most)       -- Most of the time removing
src/utils/flat/remove-path.doc.md:3:41      - Unknown word (trivial)    -- removing one path is a trivial thing but when it comes
src/utils/flat/remove-path.doc.md:3:67      - Unknown word (comes)      -- trivial thing but when it comes to arrays it is more
src/utils/flat/remove-path.ts:19:45     - Unknown word (closes)     -- we iterate from the closes parent
src/utils/flat/remove-path.ts:32:34     - Unknown word (firstly)    -- this works just for the firstly found array item, because
src/utils/flat/select-params.doc.md:1:30      - Unknown word (selects)    -- keys in `params` it selects only those passed in
src/utils/flat/set.doc.md:19:42     - Unknown word (shool)      -- set(params, 'education.shool', {
src/utils/flat/set.doc.md:4:17      - Unknown word (mutated)    -- `params` is not mutated here.
src/utils/flat/set.spec.ts:115:23    - Unknown word (JSCEO)      -- position: 'adminJSCEO',
src/utils/flat/set.spec.ts:23:7      - Unknown word (initially)  -- initiallyNull: null,
src/utils/param-converter/prepare-params.ts:11:9      - Unknown word (prepared)   -- const preparedParams: Record<string
src/utils/theme-bundler.ts:5:10      - Unknown word (Adminjs)    -- const getAdminjsThemesDir = () => path
src/utils/translate-functions.factory.ts:208:62    - Unknown word (stubs)      -- Sinon cannot create stubs for e.g. createFunctions
src/utils/translate-functions.factory.ts:211:35    - Unknown word (appearing)  -- prevents Sinon error from appearing:
src/utils/translate-functions.factory.ts:42:6      - Unknown word (Shortcut)   -- * Shortcut for {@link TranslateFunctions
src/utils/translate-functions.factory.ts:46:6      - Unknown word (Translates) -- * Translates all [actions]{@link
src/utils/translate-functions.factory.ts:49:26     - Unknown word (moved)      -- that, the lookup is moved to `actions.{actionName
src/utils/translate-functions.factory.ts:50:30     - Unknown word (fails)      -- Finally, when that also fails, it returns startCase
src/utils/translate-functions.factory.ts:71:67     - Unknown word (recognized) -- interface which cannot be recognized
src/utils/translate-functions.factory.ts:90:14     - Unknown word (important)  -- * What is important here is that you can
