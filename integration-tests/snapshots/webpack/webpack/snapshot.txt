
Repository: webpack/webpack
Url: "https://github.com/webpack/webpack.git"
Args: ["{.github,benchmark,bin,examples,hot,lib,schemas,setup,tooling}/**/*.{md,yml,yaml,js,json}","*.md"]
Lines:
 Dictionary Error with (en_us) Error: ENOENT: no such file or directory, open './dictionaries/en_US/en_US.trie.gz'
 exit code: 1
-------------------------------------------
-------------------------------------------
.github/FUNDING.yml:1:6       - Unknown word (collective) -- open_collective: webpack
.github/ISSUE_TEMPLATE.md:10:19     - Unknown word (contain)     -- <!-- Issues which contain questions or support
.github/ISSUE_TEMPLATE.md:10:6      - Unknown word (Issues)      -- <!-- Issues which contain questions
.github/ISSUE_TEMPLATE.md:12:23     - Unknown word (behavior)    -- What is the current behavior?**
.github/ISSUE_TEMPLATE.md:12:3      - Unknown word (What)        -- **What is the current behavior
.github/ISSUE_TEMPLATE.md:14:44     - Unknown word (provide)     -- behavior is a bug, please provide the steps to reproduce
.github/ISSUE_TEMPLATE.md:14:65     - Unknown word (reproduce)   -- provide the steps to reproduce.**
.github/ISSUE_TEMPLATE.md:16:75     - Unknown word (gist)        -- configuration via a GitHub gist. -->
.github/ISSUE_TEMPLATE.md:16:8      - Unknown word (great)       -- <!-- A great way to do this is to
.github/ISSUE_TEMPLATE.md:17:21     - Unknown word (minimal)     -- <!-- Best provide a minimal reproducible repo -
.github/ISSUE_TEMPLATE.md:17:29     - Unknown word (reproducible) -- Best provide a minimal reproducible repo -->
.github/ISSUE_TEMPLATE.md:18:23     - Unknown word (caused)       -- -- If your issue is caused by a plugin or loader
.github/ISSUE_TEMPLATE.md:18:45     - Unknown word (loader)       -- caused by a plugin or loader file the issue on the
.github/ISSUE_TEMPLATE.md:1:6       - Unknown word (Please)     -- <!-- Please don't delete this template
.github/ISSUE_TEMPLATE.md:20:15     - Unknown word (expected)     -- **What is the expected behavior?**
.github/ISSUE_TEMPLATE.md:22:33     - Unknown word (what)         -- is a feature request, what is motivation or use
.github/ISSUE_TEMPLATE.md:22:41     - Unknown word (motivation)   -- feature request, what is motivation or use case for changing
.github/ISSUE_TEMPLATE.md:22:68     - Unknown word (changing)     -- motivation or use case for changing the behavior?**
.github/ISSUE_TEMPLATE.md:24:10     - Unknown word (mention)      -- **Please mention other relevant information
.github/ISSUE_TEMPLATE.md:24:112    - Unknown word (Operating)    -- webpack version, and Operating System.**
.github/ISSUE_TEMPLATE.md:24:45     - Unknown word (such)         -- relevant information such as the browser version
.github/ISSUE_TEMPLATE.md:2:13      - Unknown word (creating)   -- <!-- Before creating an issue please make
.github/ISSUE_TEMPLATE.md:2:31      - Unknown word (please)     -- Before creating an issue please make sure you are using
.github/ISSUE_TEMPLATE.md:2:43      - Unknown word (sure)       -- an issue please make sure you are using the latest
.github/ISSUE_TEMPLATE.md:2:56      - Unknown word (using)      -- please make sure you are using the latest version of
.github/ISSUE_TEMPLATE.md:2:6       - Unknown word (Before)     -- <!-- Before creating an issue please
.github/ISSUE_TEMPLATE.md:2:66      - Unknown word (latest)     -- sure you are using the latest version of webpack.
.github/ISSUE_TEMPLATE.md:3:11      - Unknown word (consider)   -- <!-- Also consider trying the webpack@beta
.github/ISSUE_TEMPLATE.md:3:20      - Unknown word (trying)     -- <!-- Also consider trying the webpack@beta version
.github/ISSUE_TEMPLATE.md:3:53      - Unknown word (maybe)      -- webpack@beta version, maybe it's already fixed.
.github/ISSUE_TEMPLATE.md:3:6       - Unknown word (Also)       -- <!-- Also consider trying the
.github/ISSUE_TEMPLATE.md:5:10      - Unknown word (want)       -- **Do you want to request a _feature
.github/ISSUE_TEMPLATE.md:7:17      - Unknown word (questions)  -- <!-- Please ask questions on StackOverflow or
.github/ISSUE_TEMPLATE.md:7:58      - Unknown word (Discussions) -- StackOverflow or the GitHub Discussions. -->
.github/ISSUE_TEMPLATE/Bug_report.md:21:10     - Unknown word (most)       -- <!-- The most helpful is a minimal
.github/ISSUE_TEMPLATE/Bug_report.md:21:15     - Unknown word (helpful)    -- <!-- The most helpful is a minimal reproduction
.github/ISSUE_TEMPLATE/Bug_report.md:21:36     - Unknown word (reproduction) -- helpful is a minimal reproduction with instructions on
.github/ISSUE_TEMPLATE/Bug_report.md:21:54     - Unknown word (instructions) -- minimal reproduction with instructions on how to reproduce
.github/ISSUE_TEMPLATE/Bug_report.md:22:28     - Unknown word (many)         -- Repositories with too many files or large `webpack
.github/ISSUE_TEMPLATE/Bug_report.md:22:42     - Unknown word (large)        -- with too many files or large `webpack.config.js`
.github/ISSUE_TEMPLATE/Bug_report.md:22:82     - Unknown word (suitable)     -- config.js` files are not suitable -->
.github/ISSUE_TEMPLATE/Bug_report.md:23:33     - Unknown word (snippets)     -- only add small code snippets directly into this issue
.github/ISSUE_TEMPLATE/Bug_report.md:23:42     - Unknown word (directly)     -- small code snippets directly into this issue -->
.github/ISSUE_TEMPLATE/Bug_report.md:24:35     - Unknown word (good)         -- gist.github.com is a good place for longer code
.github/ISSUE_TEMPLATE/Bug_report.md:24:40     - Unknown word (place)        -- github.com is a good place for longer code snippets
.github/ISSUE_TEMPLATE/Bug_report.md:24:50     - Unknown word (longer)       -- is a good place for longer code snippets -->
.github/ISSUE_TEMPLATE/Bug_report.md:25:108    - Unknown word (instead)      -- loader/plugin repository instead -->
.github/ISSUE_TEMPLATE/Bug_report.md:29:40     - Unknown word (explanation)  -- work" is not a helpful explanation -->
.github/ISSUE_TEMPLATE/Bug_report.md:30:14     - Unknown word (exactly)      -- <!-- Explain exactly how it should behave
.github/ISSUE_TEMPLATE/Bug_report.md:30:36     - Unknown word (behave)       -- exactly how it should behave -->
.github/ISSUE_TEMPLATE/Bug_report.md:30:6      - Unknown word (Explain)      -- <!-- Explain exactly how it should
.github/ISSUE_TEMPLATE/Bug_report.md:36:1      - Unknown word (Additional)   -- Additional tools:
.github/ISSUE_TEMPLATE/Bug_report.md:3:1       - Unknown word (about)      -- about: Create a report to
.github/ISSUE_TEMPLATE/Bug_report.md:3:27      - Unknown word (help)       -- Create a report to help us improve
.github/ISSUE_TEMPLATE/Bug_report.md:3:35      - Unknown word (improve)    -- a report to help us improve
.github/ISSUE_TEMPLATE/Feature_request.md:10:13     - Unknown word (that)       -- <!-- Issues that contain questions or
.github/ISSUE_TEMPLATE/Feature_request.md:12:28     - Unknown word (needs)      -- Check if this feature needs to be implemented in
.github/ISSUE_TEMPLATE/Feature_request.md:14:59     - Unknown word (filed)      -- development server should be filed on this repo instead
.github/ISSUE_TEMPLATE/Feature_request.md:18:38     - Unknown word (adding)     -- motivation or use case for adding/changing the behavior
.github/ISSUE_TEMPLATE/Feature_request.md:20:42     - Unknown word (opinion)    -- implemented in your opinion?**
.github/ISSUE_TEMPLATE/Feature_request.md:22:11     - Unknown word (willing)    -- **Are you willing to work on this yourself
.github/ISSUE_TEMPLATE/Feature_request.md:22:35     - Unknown word (yourself)   -- willing to work on this yourself?**
.github/ISSUE_TEMPLATE/Feature_request.md:3:19      - Unknown word (idea)       -- about: Suggest an idea for this project
.github/ISSUE_TEMPLATE/Other.md:3:8       - Unknown word (Something)  -- about: Something else
.github/ISSUE_TEMPLATE/Other.md:6:39      - Unknown word (must)       -- and Feature requests must use other templates
.github/PULL_REQUEST_TEMPLATE.md:15:28     - Unknown word (breaking)   -- this PR introduce a breaking change?**
.github/PULL_REQUEST_TEMPLATE.md:15:3      - Unknown word (Does)       -- **Does this PR introduce a
.github/PULL_REQUEST_TEMPLATE.md:17:17     - Unknown word (introduces) -- <!-- If this PR introduces a breaking change, please
.github/PULL_REQUEST_TEMPLATE.md:17:67     - Unknown word (impact)     -- please describe the impact and a migration path
.github/PULL_REQUEST_TEMPLATE.md:19:20     - Unknown word (documented) -- **What needs to be documented once your changes are
.github/PULL_REQUEST_TEMPLATE.md:19:53     - Unknown word (merged)     -- once your changes are merged?**
.github/PULL_REQUEST_TEMPLATE.md:1:17      - Unknown word (submitting) -- <!-- Thanks for submitting a pull request! Please
.github/PULL_REQUEST_TEMPLATE.md:1:59      - Unknown word (enough)     -- request! Please provide enough information so that
.github/PULL_REQUEST_TEMPLATE.md:1:6       - Unknown word (Thanks)     -- <!-- Thanks for submitting a pull
.github/PULL_REQUEST_TEMPLATE.md:1:86      - Unknown word (others)     -- information so that others can review your pull
.github/PULL_REQUEST_TEMPLATE.md:21:48     - Unknown word (added)      -- information that needs to be added to the documentation
.github/PULL_REQUEST_TEMPLATE.md:22:47     - Unknown word (asked)      -- are merged you will be asked to contribute this to
.github/PULL_REQUEST_TEMPLATE.md:22:56     - Unknown word (contribute) -- you will be asked to contribute this to the documentation
.github/PULL_REQUEST_TEMPLATE.md:2:101     - Unknown word (solve)      -- does the pull request solve? -->
.github/PULL_REQUEST_TEMPLATE.md:2:37      - Unknown word (making)     -- the **motivation** for making this change. What existing
.github/PULL_REQUEST_TEMPLATE.md:2:62      - Unknown word (existing)   -- making this change. What existing problem does the pull
.github/PULL_REQUEST_TEMPLATE.md:2:79      - Unknown word (does)       -- What existing problem does the pull request solve
.github/PULL_REQUEST_TEMPLATE.md:3:39      - Unknown word (more)       -- to an open issue for more information. -->
.github/PULL_REQUEST_TEMPLATE.md:5:40      - Unknown word (these)      -- to that please answer these questions: -->
.github/PULL_REQUEST_TEMPLATE.md:5:9       - Unknown word (addition)   -- <!-- In addition to that please answer
.github/PULL_REQUEST_TEMPLATE.md:7:36      - Unknown word (introduce)  -- change does this PR introduce?**
.github/PULL_REQUEST_TEMPLATE.md:7:8       - Unknown word (kind)       -- **What kind of change does this
.github/dependabot.yml:12:26     - Unknown word (widen)      -- versioning-strategy: widen
.github/dependabot.yml:15:9      - Unknown word (patterns)   -- patterns:
.github/dependabot.yml:19:19     - Unknown word (parse)      -- - "json-parse-even-better-errors"
.github/dependabot.yml:19:25     - Unknown word (even)       -- - "json-parse-even-better-errors"
.github/dependabot.yml:19:30     - Unknown word (better)     -- - "json-parse-even-better-errors"
.github/dependabot.yml:21:14     - Unknown word (strip)      -- - "strip-ansi"
.github/dependabot.yml:21:20     - Unknown word (ansi)       -- - "strip-ansi"
.github/dependabot.yml:22:14     - Unknown word (rimraf)     -- - "rimraf"
.github/dependabot.yml:3:13      - Unknown word (ecosystem)  -- - package-ecosystem: npm
.github/dependabot.yml:6:17      - Unknown word (daily)      -- interval: daily
.github/dependabot.yml:6:7       - Unknown word (interval)   -- interval: daily
.github/dependabot.yml:8:17      - Unknown word (Europe)     -- timezone: Europe/Berlin
.github/workflows/dependency-review.yml:12:16     - Unknown word (Checkout)   -- - name: "Checkout Repository"
.github/workflows/dependency-review.yml:13:23     - Unknown word (checkout)   -- uses: actions/checkout@v4
.github/workflows/dependency-review.yml:13:9      - Unknown word (uses)       -- uses: actions/checkout@v
.github/workflows/dependency-review.yml:17:11     - Unknown word (allow)      -- allow-licenses: |
.github/workflows/dependency-review.yml:1:8       - Unknown word (Dependency) -- name: "Dependency Review"
.github/workflows/dependency-review.yml:24:13     - Unknown word (AGPL)       -- AGPL-3.0-only,
.github/workflows/dependency-review.yml:25:25     - Unknown word (later)      -- AGPL-3.0-or-later,
.github/workflows/dependency-review.yml:28:13     - Unknown word (APSL)       -- APSL-2.0,
.github/workflows/dependency-review.yml:29:13     - Unknown word (Artistic)   -- Artistic-2.0,
.github/workflows/dependency-review.yml:30:13     - Unknown word (Blue)       -- BlueOak-1.0.0,
.github/workflows/dependency-review.yml:31:19     - Unknown word (Clause)     -- BSD-2-Clause,
.github/workflows/dependency-review.yml:39:13     - Unknown word (CDDL)       -- CDDL-1.0,
.github/workflows/dependency-review.yml:59:13     - Unknown word (Unicode)    -- Unicode-DFS-2016,
.github/workflows/dependency-review.yml:9:3       - Unknown word (dependency) -- dependency-review:
.github/workflows/test.yml:104:18    - Unknown word (false)           -- fail-fast: false
.github/workflows/test.yml:105:7     - Unknown word (matrix)          -- matrix:
.github/workflows/test.yml:147:13    - Unknown word (calculate)       -- id: calculate_architecture
.github/workflows/test.yml:149:18    - Unknown word (encoding)        -- result-encoding: string
.github/workflows/test.yml:149:28    - Unknown word (string)          -- result-encoding: string
.github/workflows/test.yml:164:201   - Unknown word (staged)          -- 2 husky@^8.0.3 lint-staged@^13.2.1 cspell@^6.3
.github/workflows/test.yml:164:247   - Unknown word (coffee)          -- 1.1 open-cli@^7.2.0 coffee-loader@^1.0.0 babel
.github/workflows/test.yml:164:268   - Unknown word (babel)           -- coffee-loader@^1.0.0 babel-loader@^8.1.0 style
.github/workflows/test.yml:164:288   - Unknown word (style)           -- babel-loader@^8.1.0 style-loader@^2.0.0 css-loader
.github/workflows/test.yml:164:345   - Unknown word (mini)            -- less-loader@^8.1.1 mini-css-extract-plugin@
.github/workflows/test.yml:164:354   - Unknown word (extract)         -- loader@^8.1.1 mini-css-extract-plugin@^1.6.1 nyc@^
.github/workflows/test.yml:164:42    - Unknown word (circus)          -- upgrade jest@^27.5.0 jest-circus@^27.5.0 jest-cli@^2
.github/workflows/test.yml:172:160   - Unknown word (watchpack)       -- webpack-sources#main watchpack@webpack/watchpack#main
.github/workflows/test.yml:172:193   - Unknown word (tapable)         -- webpack/watchpack#main tapable@webpack/tapable#master
.github/workflows/test.yml:26:21     - Unknown word (frozen)     -- - run: yarn --frozen-lockfile
.github/workflows/test.yml:30:24     - Unknown word (modules)    -- path: ./node_modules/.cache/prettier/.prettier
.github/workflows/test.yml:31:87     - Unknown word (prettierrc) -- **/yarn.lock', '**/.prettierrc.js') }}
.github/workflows/test.yml:36:18     - Unknown word (eslintcache) -- path: .eslintcache
.github/workflows/test.yml:39:21     - Unknown word (cspell)      -- - name: Cache cspell result
.github/workflows/test.yml:42:18     - Unknown word (cspellcache) -- path: .cspellcache
.github/workflows/test.yml:56:45     - Unknown word (true)        -- -frozen-lockfile || true
.github/workflows/test.yml:61:11     - Unknown word (flags)       -- flags: basic
.github/workflows/test.yml:62:11     - Unknown word (functionalities) -- functionalities: gcov
.github/workflows/test.yml:62:28     - Unknown word (gcov)            -- functionalities: gcov
.github/workflows/test.yml:65:12     - Unknown word (legacy)          -- validate-legacy-node:
.github/workflows/test.yml:6:9       - Unknown word (main)       -- - main
.github/workflows/test.yml:74:57     - Unknown word (avoid)           -- from `package.json` to avoid `yarn install` compatibility
.github/workflows/test.yml:75:164    - Unknown word (null)            -- JSON.stringify(content, null, 2));"
.github/workflows/test.yml:75:39     - Unknown word (require)         -- -e "const content = require('./package.json');delete
.github/workflows/test.yml:76:29     - Unknown word (production)      -- run: yarn install --production --frozen-lockfile
.github/workflows/test.yml:91:18     - Unknown word (jest)            -- path: .jest-cache
.github/workflows/test.yml:94:19     - Unknown word (cover)           -- - run: yarn cover:unit --ci --cacheDirectory
CODE_OF_CONDUCT.md:1:10      - Unknown word (Conduct)    -- [Code of Conduct](https://github.com
CONTRIBUTING.md:10:1      - Unknown word (Most)         -- Most of the time, if webpack
CONTRIBUTING.md:10:72     - Unknown word (simple)       -- correctly for you, it is a simple configuration issue
CONTRIBUTING.md:12:12     - Unknown word (still)        -- If you are still having difficulty after
CONTRIBUTING.md:12:18     - Unknown word (having)       -- If you are still having difficulty after looking
CONTRIBUTING.md:12:25     - Unknown word (difficulty)   -- you are still having difficulty after looking over your
CONTRIBUTING.md:12:42     - Unknown word (looking)      -- having difficulty after looking over your configuration
CONTRIBUTING.md:12:74     - Unknown word (carefully)    -- over your configuration carefully, please post
CONTRIBUTING.md:13:3      - Unknown word (question)     -- a question to [StackOverflow with
CONTRIBUTING.md:13:93     - Unknown word (Questions)    -- ckoverflow.com/tags/webpack). Questions
CONTRIBUTING.md:14:108    - Unknown word (responses)    -- more likely to receive responses.
CONTRIBUTING.md:14:62     - Unknown word (full)         -- relevant files, and the full error message are more
CONTRIBUTING.md:14:90     - Unknown word (likely)       -- error message are more likely to receive responses
CONTRIBUTING.md:18:224    - Unknown word (tagged)       -- Each issue should be tagged with a difficulty tag
CONTRIBUTING.md:18:30     - Unknown word (Look)         -- want to fix an issue? Look at the issues with a
CONTRIBUTING.md:18:42     - Unknown word (issues)       -- an issue? Look at the issues with a tag of [X5: work
CONTRIBUTING.md:18:88     - Unknown word (Help)         -- work required (PR / Help Wanted)](https://github
CONTRIBUTING.md:18:93     - Unknown word (Wanted)       -- required (PR / Help Wanted)](https://github.com
CONTRIBUTING.md:1:3       - Unknown word (Contributing) -- # Contributing
CONTRIBUTING.md:20:24     - Unknown word (Contribution) -- D0: My First Commit (Contribution Difficulty)
CONTRIBUTING.md:20:37     - Unknown word (Difficulty)   -- Commit (Contribution Difficulty)
CONTRIBUTING.md:21:7      - Unknown word (Easy)         -- - D1: Easy (Contribution Difficulty
CONTRIBUTING.md:22:7      - Unknown word (Medium)       -- - D2: Medium (Contribution Difficulty
CONTRIBUTING.md:23:7      - Unknown word (Hard)         -- - D3: Hard (Contribution Difficulty
CONTRIBUTING.md:27:92     - Unknown word (pages)        -- relevant documentation pages:
CONTRIBUTING.md:29:12     - Unknown word (loaders)      -- - [List of loaders](https://webpack.js
CONTRIBUTING.md:29:58     - Unknown word (awesome)      -- js.org/loaders/) or [awesome-webpack](https://github
CONTRIBUTING.md:36:4      - Unknown word (Submitting)   -- ## Submitting Changes
CONTRIBUTING.md:38:15     - Unknown word (some)         -- After getting some feedback, push to your
CONTRIBUTING.md:38:7      - Unknown word (getting)      -- After getting some feedback, push
CONTRIBUTING.md:39:29     - Unknown word (improvements) -- suggest some changes or improvements or alternatives, but
CONTRIBUTING.md:39:45     - Unknown word (alternatives) -- changes or improvements or alternatives, but for small changes
CONTRIBUTING.md:3:55      - Unknown word (every)        -- creating a pull request: every contribution is
CONTRIBUTING.md:3:6       - Unknown word (opening)      -- From opening a bug report to creating
CONTRIBUTING.md:3:61      - Unknown word (contribution) -- pull request: every contribution is
CONTRIBUTING.md:40:38     - Unknown word (quickly)      -- request should be accepted quickly.
CONTRIBUTING.md:45:3      - Unknown word (Follow)       -- - Follow the existing coding
CONTRIBUTING.md:47:101    - Unknown word (would)        -- please create one. This would help discussion with
CONTRIBUTING.md:47:112    - Unknown word (discussion)   -- one. This would help discussion with the community,
CONTRIBUTING.md:47:147    - Unknown word (polishing)    -- with the community, and polishing ideas in case of a new
CONTRIBUTING.md:47:157    - Unknown word (ideas)        -- community, and polishing ideas in case of a new feature
CONTRIBUTING.md:47:68     - Unknown word (doesn't)      -- has an issue and if it doesn't, please create one.
CONTRIBUTING.md:47:9      - Unknown word (major)        -- - For a major fix/feature make sure
CONTRIBUTING.md:48:148    - Unknown word (More)          -- the PR is merged. ([More info](https://github
CONTRIBUTING.md:48:35     - Unknown word (contains)     -- your PR's description contains GitHub's special keyword
CONTRIBUTING.md:48:61     - Unknown word (keyword)      -- contains GitHub's special keyword references that automatically
CONTRIBUTING.md:48:85     - Unknown word (automatically) -- keyword references that automatically close the related issue
CONTRIBUTING.md:49:116    - Unknown word (Learn)         -- one single commit. ([Learn how to squash here]
CONTRIBUTING.md:49:56     - Unknown word (practice)      -- in your PR, it's good practice to squash all your commits
CONTRIBUTING.md:4:1       - Unknown word (appreciated)  -- appreciated and welcome. If you
CONTRIBUTING.md:4:17      - Unknown word (welcome)      -- appreciated and welcome. If you're planning
CONTRIBUTING.md:4:36      - Unknown word (planning)     -- and welcome. If you're planning to implement a new feature
CONTRIBUTING.md:53:12     - Unknown word (insanely)      -- webpack is insanely feature rich and documentatio
CONTRIBUTING.md:53:29     - Unknown word (rich)          -- is insanely feature rich and documentation is
CONTRIBUTING.md:53:57     - Unknown word (huge)          -- and documentation is a huge time sink. We
CONTRIBUTING.md:54:1      - Unknown word (greatly)       -- greatly appreciate any time
CONTRIBUTING.md:54:29     - Unknown word (spent)         -- appreciate any time spent fixing typos or clarifying
CONTRIBUTING.md:54:35     - Unknown word (fixing)        -- appreciate any time spent fixing typos or clarifying
CONTRIBUTING.md:54:42     - Unknown word (typos)         -- any time spent fixing typos or clarifying sections
CONTRIBUTING.md:54:51     - Unknown word (clarifying)    -- spent fixing typos or clarifying sections in the
CONTRIBUTING.md:54:9      - Unknown word (appreciate)    -- greatly appreciate any time spent fixing
CONTRIBUTING.md:5:72      - Unknown word (precious)     -- can ensure that your precious
CONTRIBUTING.md:60:12     - Unknown word (statically)    -- webpack is statically typed using JSDoc annotation
CONTRIBUTING.md:60:121    - Unknown word (belong)        -- new type which doesn't belong to a public API, then
CONTRIBUTING.md:60:167    - Unknown word (declaring)     -- then you can do so by declaring it in `webpack/lib/index
CONTRIBUTING.md:60:81     - Unknown word (like)          -- TypeScript. If you would like to export a new type
CONTRIBUTING.md:65:31     - Unknown word (Module)        -- typedef {import("./NormalModuleFactory").ResolveData
CONTRIBUTING.md:65:37     - Unknown word (Factory)       -- import("./NormalModuleFactory").ResolveData} ResolveData
CONTRIBUTING.md:68:108    - Unknown word (made)          -- the changes you have made will be reflected in
CONTRIBUTING.md:68:121    - Unknown word (reflected)     -- you have made will be reflected in `types.d.ts`.
CONTRIBUTING.md:68:39     - Unknown word (declarations)  -- tomatically generate the type declarations by running `yarn fix
CONTRIBUTING.md:68:74     - Unknown word (locally)       -- by running `yarn fix` locally, and the changes you
CONTRIBUTING.md:6:16      - Unknown word (vain)         -- work is not in vain.
CONTRIBUTING.md:72:1      - Unknown word (Gitter)        -- Gitter is only for small questions
CONTRIBUTING.md:72:124    - Unknown word (chat)          -- or blog in the Gitter chat.
CONTRIBUTING.md:72:40     - Unknown word (discuss)       -- small questions. To discuss a subject in detail
CONTRIBUTING.md:72:50     - Unknown word (subject)       -- questions. To discuss a subject in detail, please send
CONTRIBUTING.md:72:96     - Unknown word (forum)         -- send a link to your forum or blog in the Gitter
CONTRIBUTING.md:76:134    - Unknown word (completely)    -- through the application completely. Use any command you
CONTRIBUTING.md:76:170    - Unknown word (find)          -- any command you can find and see what it does
CONTRIBUTING.md:76:197    - Unknown word (Explore)       -- and see what it does. Explore.
CONTRIBUTING.md:78:11     - Unknown word (worry)         -- > Don't worry ... Nothing will happen
CONTRIBUTING.md:78:135    - Unknown word (familiar)      -- happen is, you'll be more familiar with what is where and
CONTRIBUTING.md:78:157    - Unknown word (where)         -- familiar with what is where and might even get some
CONTRIBUTING.md:78:167    - Unknown word (might)         -- with what is where and might even get some cool ideas
CONTRIBUTING.md:78:187    - Unknown word (cool)          -- might even get some cool ideas on how to improve
CONTRIBUTING.md:78:21     - Unknown word (Nothing)       -- > Don't worry ... Nothing will happen to the project
CONTRIBUTING.md:78:216    - Unknown word (various)       -- ideas on how to improve various aspects of the project
CONTRIBUTING.md:78:224    - Unknown word (aspects)       -- how to improve various aspects of the project.
CONTRIBUTING.md:78:34     - Unknown word (happen)        -- worry ... Nothing will happen to the project or to
CONTRIBUTING.md:78:77     - Unknown word (exploring)     -- or to you due to the exploring. Only thing that will
CONTRIBUTING.md:80:103    - Unknown word (someone)       -- already assigned to someone, but there is no sign
CONTRIBUTING.md:80:116    - Unknown word (there)         -- assigned to someone, but there is no sign of any work
CONTRIBUTING.md:80:145    - Unknown word (being)         -- no sign of any work being done, please feel free
CONTRIBUTING.md:80:151    - Unknown word (done)          -- sign of any work being done, please feel free to
CONTRIBUTING.md:80:164    - Unknown word (feel)          -- work being done, please feel free to drop in a comment
CONTRIBUTING.md:80:243    - Unknown word (previous)      -- assigned to you if the previous assignee has dropped
CONTRIBUTING.md:80:252    - Unknown word (assignee)      -- you if the previous assignee has dropped it entirely
CONTRIBUTING.md:80:265    - Unknown word (dropped)       -- previous assignee has dropped it entirely.
CONTRIBUTING.md:80:276    - Unknown word (entirely)      -- assignee has dropped it entirely.
CONTRIBUTING.md:80:91     - Unknown word (assigned)      -- issue. If it is already assigned to someone, but there
CodeTypo: Files checked: 1229, Issues found: 29602 in 928 files with 4 errors.
Dictionary Error with (en_us) Error: ENOENT: no such file or directory, open './dictionaries/en_US/en_US.trie.gz'
Dictionary Error with (filetypes) Error: ENOENT: no such file or directory, open './dictionaries/filetypes/filetypes.txt.gz'
Dictionary Error with (filetypes) Error: ENOENT: no such file or directory, open './dictionaries/filetypes/filetypes.txt.gz'
Dictionary Error with (html-symbol-entities) Error: ENOENT: no such file or directory, open './dictionaries/html-symbol-entities/entities.txt.gz'
Dictionary Error with (html-symbol-entities) Error: ENOENT: no such file or directory, open './dictionaries/html-symbol-entities/entities.txt.gz'
Dictionary Error with (public-licenses) Error: ENOENT: no such file or directory, open './dictionaries/public-licenses/public-licenses.txt.gz'
Dictionary Error with (public-licenses) Error: ENOENT: no such file or directory, open './dictionaries/public-licenses/public-licenses.txt.gz'
Errors:
README.md:102:45    - Unknown word (compliant)    -- browsers that are [ES5-compliant](https://kangax.github
README.md:103:92    - Unknown word (older)        -- you want to support older browsers, you will need
README.md:112:3     - Unknown word (flexible)     -- **flexible**.
README.md:116:90    - Unknown word (Extracts)     -- [mini-css-size] | Extracts CSS into separate files
README.md:117:156   - Unknown word (Encoding)     -- serve them with Content-Encoding |
README.md:117:90    - Unknown word (Prepares)     -- compression-size] | Prepares compressed versions
README.md:117:99    - Unknown word (compressed)   -- compression-size] | Prepares compressed versions of assets to
README.md:118:90    - Unknown word (Simplifies)   -- html-plugin-size] | Simplifies creation of HTML files
README.md:119:117   - Unknown word (extracts)     -- Renders Pug files to HTML, extracts JS and CSS from sources
README.md:119:90    - Unknown word (Renders)      -- pug-plugin-size] | Renders Pug files to HTML, extracts
README.md:140:9     - Unknown word (enables)      -- Webpack enables the use of loaders to
README.md:141:56    - Unknown word (easily)       -- JavaScript. You can easily [write your own
README.md:144:33    - Unknown word (loadername)   -- activated by using `loadername!` prefixes in `require
README.md:151:51    - Unknown word (Executes)     -- npm] | ![val-size]  | Executes code as module and considers
README.md:151:79    - Unknown word (considers)    -- Executes code as module and considers exports as JS code
README.md:161:145   - Unknown word (cson)         -- coffeescript.svg"></a> | ![cson-npm] | ![cson-size]
README.md:161:172   - Unknown word (Loads)        -- npm] | ![cson-size] | Loads and transpiles a CSON
README.md:161:182   - Unknown word (transpiles)   -- cson-size] | Loads and transpiles a CSON file |
README.md:161:195   - Unknown word (CSON)         -- Loads and transpiles a CSON file |
README.md:166:6     - Unknown word (Transpiling)  -- #### Transpiling
README.md:187:212   - Unknown word (Compiles)     -- ![pug3-size] | Compiles Pug to a function or
README.md:189:222   - Unknown word (transforms)   -- posthtml-size] | Loads and transforms a HTML file using [PostHTML
README.md:207:6     - Unknown word (Styling)      -- #### Styling
README.md:213:192   - Unknown word (compiles)     -- size] | Loads and compiles a LESS file
README.md:231:6     - Unknown word (Frameworks)   -- #### Frameworks
README.md:236:237   - Unknown word (choice)       -- with preprocessor of choice and `require()` Web
README.md:238:202   - Unknown word (official)     -- riot-size] | Riot official webpack loader
README.md:239:197   - Unknown word (Official)     -- | ![svelte-size]  | Official Svelte loader
README.md:252:5     - Unknown word (Performance)  -- ### Performance
README.md:255:5     - Unknown word (incredibly)   -- and incredibly **fast** on incremental
README.md:257:12    - Unknown word (Formats)      -- ### Module Formats
README.md:268:6     - Unknown word (Optimizations) -- ### [Optimizations](https://webpack.js
README.md:271:56    - Unknown word (minifying)     -- frequently used modules, minifying, and giving
README.md:271:71    - Unknown word (giving)        -- modules, minifying, and giving
README.md:274:1     - Unknown word (friendly)      -- friendly** by using hashes.
README.md:278:11    - Unknown word (contributing)  -- **We want contributing to webpack to be fun
README.md:278:112   - Unknown word (vibrant)       -- everyone.** We have a [vibrant ecosystem](https://medium
README.md:278:188   - Unknown word (spans)         -- contributors-guide/home) that spans beyond this single repo
README.md:278:333   - Unknown word (contrib)       -- webpack) or [webpack-contrib organization](https
README.md:278:397   - Unknown word (houses)        -- webpack-contrib) which houses all of our loaders and
README.md:278:46    - Unknown word (enjoyable)     -- to webpack to be fun, enjoyable, and educational for
README.md:278:61    - Unknown word (educational)   -- fun, enjoyable, and educational for anyone, and everyone
README.md:278:77    - Unknown word (anyone)        -- and educational for anyone, and everyone.** We
README.md:278:89    - Unknown word (everyone)      -- educational for anyone, and everyone.** We have a [vibrant
README.md:280:1     - Unknown word (Contributions) -- Contributions go far beyond pull requests
README.md:280:112   - Unknown word (stamp)         -- opportunity to put your stamp on webpack, we also
README.md:280:142   - Unknown word (thrilled)      -- webpack, we also are thrilled to receive a variety
README.md:280:164   - Unknown word (variety)       -- thrilled to receive a variety of other contributions
README.md:280:181   - Unknown word (contributions) -- receive a variety of other contributions including:
README.md:280:56    - Unknown word (Although)      -- requests and commits. Although we love giving you the
README.md:280:68    - Unknown word (love)          -- commits. Although we love giving you the opportunity
README.md:280:88    - Unknown word (opportunity)   -- love giving you the opportunity to put your stamp on
README.md:282:71    - Unknown word (enhancements)  -- webpack.js.org) updates, enhancements, designs, or bugfixes
README.md:282:85    - Unknown word (designs)       -- updates, enhancements, designs, or bugfixes
README.md:283:15    - Unknown word (grammar)       -- - Spelling or grammar fixes
README.md:283:23    - Unknown word (fixes)         -- Spelling or grammar fixes
README.md:283:3     - Unknown word (Spelling)      -- - Spelling or grammar fixes
README.md:284:13    - Unknown word (corrections)   -- - README.md corrections or redesigns
README.md:284:28    - Unknown word (redesigns)     -- README.md corrections or redesigns
README.md:285:19    - Unknown word (functional)    -- - Adding unit, or functional tests
README.md:285:3     - Unknown word (Adding)        -- - Adding unit, or functional
README.md:286:3     - Unknown word (Triaging)      -- - Triaging GitHub issues -- especially
README.md:286:75    - Unknown word (persists)      -- whether an issue still persists or is reproducible.
README.md:287:4     - Unknown word (Searching)     -- - [Searching #webpack on twitter
README.md:287:77    - Unknown word (helping)       -- search?q=webpack) and helping someone else who needs
README.md:288:3     - Unknown word (Teaching)      -- - Teaching others how to contribute
README.md:289:14    - Unknown word (speaking)      -- - [Blogging, speaking about, or creating tutorials
README.md:289:4     - Unknown word (Blogging)      -- - [Blogging, speaking about, or
README.md:289:42    - Unknown word (tutorials)     -- speaking about, or creating tutorials](https://github.com
README.md:290:3     - Unknown word (Helping)       -- - Helping others in our webpack
README.md:290:34    - Unknown word (gitter)        -- others in our webpack [gitter channel](https://gitter
README.md:292:23    - Unknown word (look)          -- To get started have a look at our [documentation
README.md:292:8     - Unknown word (started)       -- To get started have a look at our
README.md:294:12    - Unknown word (worried)       -- If you are worried or don't know where
README.md:294:156   - Unknown word (simply)        -- twitter.com/thelarkinn) or simply submit an issue and
README.md:294:185   - Unknown word (maintainer)    -- submit an issue and a maintainer can help give you guidance
README.md:294:214   - Unknown word (guidance)      -- maintainer can help give you guidance!
README.md:296:113   - Unknown word (Guide)         -- called [The Contributor's Guide to webpack](https:/
README.md:296:46    - Unknown word (Publication)   -- series on our [Medium Publication](https://medium.com
README.md:296:99    - Unknown word (Contributor's) -- webpack) called [The Contributor's Guide to webpack](https
README.md:298:116   - Unknown word (opencollective) -- email it to webpack [at] opencollective [dot] com and we can
README.md:298:13    - Unknown word (speak)         -- _Looking to speak about webpack?_ We'd
README.md:298:169   - Unknown word (tips)           -- can give pointers or tips!!!
README.md:298:2     - Unknown word (Looking)       -- _Looking to speak about webpack
README.md:298:64    - Unknown word (talk)          -- love** to review your talk abstract/CFP! You can
README.md:298:69    - Unknown word (abstract)      -- to review your talk abstract/CFP! You can email it
README.md:300:20    - Unknown word (Creating)       -- <h3 align="center">Creating your own plugins and
README.md:302:138   - Unknown word (naming)         -- `x-webpack-plugin` naming convention.
README.md:302:96    - Unknown word (follow)         -- and put it on npm. We follow the `x-loader`, `x-webpack
README.md:306:132   - Unknown word (flexibility)    -- tools. Because of its flexibility, webpack isn't always
README.md:306:216   - Unknown word (believe)        -- solution, however we do believe it is the most powerful
README.md:306:239   - Unknown word (powerful)       -- believe it is the most powerful. That said, we're always
README.md:306:249   - Unknown word (That)           -- is the most powerful. That said, we're always looking
README.md:306:305   - Unknown word (simplify)       -- ways to improve and simplify the tool without compromising
README.md:306:331   - Unknown word (compromising)   -- simplify the tool without compromising functionality. If you
README.md:306:392   - Unknown word (accomplish)     -- any ideas on ways to accomplish this, we're all ears
README.md:306:419   - Unknown word (ears)           -- accomplish this, we're all ears!
README.md:306:58    - Unknown word (individually)   -- level tool used not only individually but also layered beneath
README.md:306:80    - Unknown word (layered)        -- individually but also layered beneath other awesome
README.md:306:88    - Unknown word (beneath)        -- individually but also layered beneath other awesome tools
README.md:308:138   - Unknown word (overview)       -- This has a high level overview that is great for beginners
README.md:308:165   - Unknown word (beginners)      -- overview that is great for beginners!!
README.md:308:33    - Unknown word (take)           -- just getting started, take a look at [our new docs
README.md:310:128   - Unknown word (deprecated)     -- but note that this deprecated version is no longer
README.md:312:137   - Unknown word (individuals)    -- where there are always individuals looking to help out
README.md:315:223   - Unknown word (extremely)      -- provide them, we'd be extremely grateful (and more likely
README.md:315:233   - Unknown word (grateful)       -- them, we'd be extremely grateful (and more likely to
README.md:317:20    - Unknown word (savvy)          -- If you are twitter savvy you can tweet #webpack
README.md:317:34    - Unknown word (tweet)          -- twitter savvy you can tweet #webpack with your question
README.md:323:4     - Unknown word (FOSSA)          -- [![FOSSA Status](https://app
README.md:336:12    - Unknown word (Founder)        -- <p>Founder of webpack</p>
README.md:341:44    - Unknown word (Johannes)       -- //github.com/jhnns">Johannes Ewald</a>
README.md:341:53    - Unknown word (Ewald)          -- com/jhnns">Johannes Ewald</a>
README.md:344:12    - Unknown word (Early)          -- <p>Early adopter of webpack<
README.md:344:18    - Unknown word (adopter)        -- <p>Early adopter of webpack</p>
README.md:357:48    - Unknown word (Kees)           -- github.com/spacek33z">Kees Kluskens</a>
README.md:357:53    - Unknown word (Kluskens)       -- com/spacek33z">Kees Kluskens</a>
README.md:360:12    - Unknown word (Sponsor)        -- <p>Sponsor</p>
README.md:372:157   - Unknown word (serious)        -- you use webpack for a serious task, and you'd like
README.md:372:192   - Unknown word (invest)         -- and you'd like us to invest more time on it, please
README.md:372:223   - Unknown word (donate)         -- more time on it, please donate. This project increases
README.md:372:244   - Unknown word (increases)      -- donate. This project increases your income/productivity
README.md:372:266   - Unknown word (productivity)   -- increases your income/productivity too. It makes development
README.md:372:40    - Unknown word (contributors)   -- team members, webpack contributors and contributors in
README.md:374:24    - Unknown word (donations)      -- This is how we use the donations:
README.md:377:3     - Unknown word (Thank)          -- - Thank contributors if they
README.md:377:30    - Unknown word (invested)       -- contributors if they invested a large amount of time
README.md:379:29    - Unknown word (voted)          -- Support projects that are voted most (work in progress
README.md:381:12    - Unknown word (money)          -- - Fees for money handling
README.md:381:3     - Unknown word (Fees)           -- - Fees for money handling
README.md:394:143   - Unknown word (sponsors)       -- to acknowledge these sponsors (and the ones who continue
README.md:394:221   - Unknown word (missed)         -- OpenCollective). If we've missed someone, please send
README.md:394:61    - Unknown word (anonymously)    -- donations were made anonymously. Now that we have made
README.md:401:69    - Unknown word (Moon)           -- svg" height="30" alt="MoonMail"></a>
README.md:402:73    - Unknown word (rates)          -- Best payment gateway rates"><img
README.md:403:64    - Unknown word (MONEI)          -- svg" height="30" alt="MONEI"></a>
README.md:409:131   - Unknown word (site)           -- with a link to your site.
README.md:409:16    - Unknown word (sponsor)        -- [Become a gold sponsor](https://opencollective
README.md:409:2     - Unknown word (Become)         -- [Become a gold sponsor](https
README.md:409:82    - Unknown word (logo)           -- sponsor) and get your logo on our README on GitHub
README.md:47:120    - Unknown word (capable)    -- browser, yet it is also capable of transforming, bundling
README.md:47:131    - Unknown word (transforming) -- it is also capable of transforming, bundling, or packaging
README.md:487:11    - Unknown word (bronze)         -- [Become a bronze sponsor](https://opencollecti
README.md:54:5      - Unknown word (Introduction) -- 2. [Introduction](#introduction)
README.md:597:11    - Unknown word (backer)         -- [Become a backer](https://opencollective
README.md:59:5      - Unknown word (Sponsoring)   -- 7. [Sponsoring](#sponsoring)
README.md:60:5      - Unknown word (Premium)      -- 8. [Premium Partners](#premium-partners
README.md:61:11     - Unknown word (Backers)      -- 9. [Other Backers and Sponsors](#other
README.md:61:23     - Unknown word (Sponsors)     -- [Other Backers and Sponsors](#other-backers-and
README.md:64:6      - Unknown word (Bronze)       -- 12. [Bronze Sponsors](#bronze-sponsors
README.md:66:6      - Unknown word (Special)      -- 14. [Special Thanks](#special-thanks
README.md:702:23    - Unknown word (chronological)  -- p align="center">(In chronological order)</p>
README.md:704:106   - Unknown word (aims)           -- gwtproject.org/), which aims to compile Java to JavaScript
README.md:705:149   - Unknown word (born)           -- project. webpack was born because I wanted Code
README.md:705:164   - Unknown word (wanted)         -- webpack was born because I wanted Code Splitting for modules
README.md:705:207   - Unknown word (Interestingly)  -- for modules-webmake. Interestingly the [Code Splitting
README.md:705:332   - Unknown word (Phoscur)        -- 7) (thanks also to @Phoscur for the discussion)
README.md:705:5     - Unknown word (medikoo)        -- - [@medikoo](https://github.com
README.md:705:55    - Unknown word (webmake)        -- medikoo) for [modules-webmake](https://github.com
README.md:706:5     - Unknown word (substack)       -- - [@substack](https://github.com
README.md:707:5     - Unknown word (jrburke)        -- - [@jrburke](https://github.com
README.md:708:5     - Unknown word (defunctzombie)  -- - [@defunctzombie](https://github.com
README.md:709:3     - Unknown word (Every)          -- - Every early webpack user,
README.md:709:35    - Unknown word (contributed)    -- webpack user, which contributed to webpack by writing
README.md:709:88    - Unknown word (influenced)     -- writing issues or PRs. You influenced the direction...
README.md:710:117   - Unknown word (maintaining)    -- github.com/sokra) for maintaining this project
README.md:710:41    - Unknown word (jhnns)          -- github.com/shama), [@jhnns](https://github.com
README.md:710:5     - Unknown word (shama)          -- - [@shama](https://github.com
README.md:711:3     - Unknown word (Everyone)      -- - Everyone who has written a loader
README.md:92:49     - Unknown word (reducing)     -- during compilation, reducing the runtime size.
README.md:94:10     - Unknown word (modular)      -- - Highly modular plugin system to do
README.md:94:3      - Unknown word (Highly)       -- - Highly modular plugin system
README.md:94:38     - Unknown word (whatever)     -- plugin system to do whatever else your application
README.md:96:9      - Unknown word (Started)      -- ### Get Started
README.md:98:113    - Unknown word (guides)       -- guide and the [other guides](https://webpack.js
SECURITY.md:1:3       - Unknown word (Reporting)  -- # Reporting Security Issues
SECURITY.md:6:23      - Unknown word (assess)     -- This will allow us to assess the risk, and make a
_SETUP.md:11:10     - Unknown word (manually)   -- ## Setup manually
_SETUP.md:13:11     - Unknown word (your)       -- ### Setup your local webpack repository
_SETUP.md:15:4      - Unknown word (bash)       -- ```bash
_SETUP.md:1:3       - Unknown word (Setup)      -- # Setup
_SETUP.md:24:16     - Unknown word (entire)     -- ### To run the entire test suite use
_SETUP.md:36:13     - Unknown word (mode)       -- or in watch mode
_SETUP.md:5:16      - Unknown word (have)       -- If you already have `yarn` installed, do
_SETUP.md:5:28      - Unknown word (installed)  -- already have `yarn` installed, do: `yarn setup`. This
_SETUP.md:5:49      - Unknown word (setup)      -- installed, do: `yarn setup`. This will complete
_SETUP.md:5:62      - Unknown word (will)       -- `yarn setup`. This will complete all required
_SETUP.md:5:8       - Unknown word (already)    -- If you already have `yarn` installed
_SETUP.md:60:17     - Unknown word (formatter)  -- ### To run code formatter (prettier) run
_SETUP.md:63:6      - Unknown word (pretty)     -- yarn pretty-lint-fix
_SETUP.md:66:16     - Unknown word (linters)    -- ### To run all linters use
_SETUP.md:68:15     - Unknown word (linting)    -- This performs linting on:
_SETUP.md:68:6      - Unknown word (performs)   -- This performs linting on:
_SETUP.md:73:12     - Unknown word (generated)  -- - format + generated files (special-lint
_SETUP.md:73:29     - Unknown word (special)    -- format + generated files (special-lint script)
_SETUP.md:7:45      - Unknown word (also)       -- setup`, the setup will also install `yarn` for you
_SETUP.md:85:4      - Unknown word (incremental) -- or incremental (in watch mode)
_SETUP.md:97:26     - Unknown word (example)     -- To update a specific example use
_SETUP.md:9:1       - Unknown word (That's)     -- That's all.
benchmark/benchmark.js:5:7       - Unknown word (fixtures)   -- const fixtures = path.join(__dirname
benchmark/benchmark.js:89:3      - Unknown word (cheap)      -- "cheap sourcemap build": [
benchmark/createBenchmark.js:16:3      - Unknown word (optimization) -- optimization: {
benchmark/createBenchmark.js:22:14     - Unknown word (Loader)       -- /^.\/loadLoader$/,
benchmark/createBenchmark/loadLoader.js:2:22      - Unknown word (Loaders)    -- callback(new Error("Loaders are not supported")
benchmark/createFixtures.js:13:8      - Unknown word (prefixed)   -- const prefixedSuffix = suffix ? `.
benchmark/createFixtures2.js:12:47     - Unknown word (multiplex)  -- depth, asyncDepth, multiplex, r, circular) {
benchmark/createFixtures2.js:67:29     - Unknown word (broad)      -- = genModule("module-broad-async", 3, 3, 20, 1
benchmark/createTestCases.js:50:6      - Unknown word (remaining)  -- let remaining = count - 1;
benchmark/md4-cache.js:19:13     - Unknown word (different)  -- `${count} different 200 char strings: `
benchmark/micro-compare.js:14:23     - Unknown word (slow)       -- const format = (fast, slow, fastName, slowName
benchmark/micro-compare.js:17:5      - Unknown word (faster)     -- }% faster than ${slowName} ($
bin/webpack.js:11:9      - Unknown word (executed)   -- const executedCommand = cp.spawn(command
bin/webpack.js:146:16    - Unknown word (scenarios)  -- // In certain scenarios (e.g. when STDIN is
bin/webpack.js:146:8     - Unknown word (certain)    -- // In certain scenarios (e.g. when
bin/webpack.js:147:37    - Unknown word (here)       -- Setting the exit code here to ensure the script
bin/webpack.js:147:63    - Unknown word (exits)      -- to ensure the script exits correctly in those cases
bin/webpack.js:147:69    - Unknown word (correctly)  -- ensure the script exits correctly in those cases. The
bin/webpack.js:147:82    - Unknown word (those)      -- script exits correctly in those cases. The callback
bin/webpack.js:148:17    - Unknown word (responsible) -- // function is responsible for clearing the exit
bin/webpack.js:148:33    - Unknown word (clearing)    -- function is responsible for clearing the exit code if the
bin/webpack.js:148:68    - Unknown word (wishes)      -- exit code if the user wishes to install webpack-cli
bin/webpack.js:97:43     - Unknown word (executable) -- binName name of the executable file
bin/webpack.js:98:34     - Unknown word (currently)  -- {boolean} installed currently installed?
examples/README.md:103:2     - Unknown word (mixed)         -- [mixed](mixed) example demonstrating
examples/README.md:103:38    - Unknown word (mixing)        -- example demonstrating mixing CommonJs and AMD
examples/README.md:106:2     - Unknown word (multi)         -- [multi-compiler](multi-compiler
examples/README.md:12:5      - Unknown word (Externals)  -- 8. [Externals](#externals)
examples/README.md:134:111   - Unknown word (wast)          -- WebAssembly text format with wast-loader
examples/README.md:141:8     - Unknown word (think)         -- If you think an example is missing
examples/README.md:15:6      - Unknown word (Hybrid)     -- 11. [Hybrid Routing](#hybrid-routing
examples/README.md:17:6      - Unknown word (Mixed)      -- 13. [Mixed](#mixed)
examples/README.md:18:6      - Unknown word (Multi)      -- 14. [Multi Compiler](#multi-compiler
examples/README.md:20:6      - Unknown word (Multiple)   -- 16. [Multiple Entry Points](#multiple
examples/README.md:21:6      - Unknown word (Require)    -- 17. [Require Context](#require-context
examples/README.md:23:12     - Unknown word (Hoisting)   -- 19. [Scope Hoisting](#scope-hoisting)
examples/README.md:24:11     - Unknown word (Effects)    -- 20. [Side Effects](#side-effects)
examples/README.md:48:38     - Unknown word (demonstrating) -- named-chunks) example demonstrating merging of chunks with
examples/README.md:53:94     - Unknown word (contexts)      -- example demonstrating contexts in a code-split environment
examples/README.md:64:17     - Unknown word (native)        -- [code-splitting-native-import-context](code
examples/README.md:69:59     - Unknown word (written)       -- example demonstrating code written in coffee-script.
examples/README.md:72:58     - Unknown word (program)       -- demonstrating a very simple program
examples/README.md:7:10      - Unknown word (Splitted)   -- 3. [Code Splitted](#code-splitted)
examples/README.md:97:2      - Unknown word (hybrid)        -- [hybrid-routing](hybrid-routing
examples/README.md:9:5       - Unknown word (Coffee)     -- 5. [Coffee Script](#coffee-script
examples/aggressive-merging/README.md:116:16    - Unknown word (compiled)      -- webpack 5.78.0 compiled successfully
examples/aggressive-merging/README.md:116:25    - Unknown word (successfully)  -- webpack 5.78.0 compiled successfully
examples/aggressive-merging/README.md:119:4     - Unknown word (Production)    -- ## Production mode
examples/aggressive-merging/README.md:122:43    - Unknown word (minimized)     -- 1.74 KiB [emitted] [minimized] (name: pageC)
examples/aggressive-merging/README.md:33:17     - Unknown word (Merging)    -- var { AggressiveMergingPlugin } = require("
examples/aggressive-merging/README.md:33:53     - Unknown word (optimize)   -- = require("../../").optimize;
examples/aggressive-merging/README.md:33:7      - Unknown word (Aggressive) -- var { AggressiveMergingPlugin } = require
examples/aggressive-merging/README.md:35:1      - Unknown word (module)     -- module.exports = {
examples/aggressive-merging/README.md:45:3      - Unknown word (chunk)      -- chunkFilename: "[id].chunk
examples/aggressive-merging/README.md:53:14     - Unknown word (deterministic) -- chunkIds: "deterministic" // To keep filename
examples/aggressive-merging/README.md:53:35     - Unknown word (keep)          -- deterministic" // To keep filename consistent
examples/aggressive-merging/README.md:53:49     - Unknown word (consistent)    -- // To keep filename consistent between different modes
examples/aggressive-merging/README.md:53:78     - Unknown word (modes)         -- consistent between different modes (for example building
examples/aggressive-merging/README.md:63:32     - Unknown word (emitted)       -- pageA.bundle.js 8.9 KiB [emitted] (name: pageA)
examples/aggressive-merging/README.md:68:98     - Unknown word (rendered)      -- KiB (runtime) [entry] [rendered]
examples/aggressive-merging/README.md:72:19     - Unknown word (unknown)       -- [used exports unknown]
examples/aggressive-merging/README.md:84:9      - Unknown word (self)          -- cjs self exports reference .
examples/aggressive-merging/common.js:4:5       - Unknown word (just)       -- var justToBeABigFile = [
examples/asset-advanced/README.md:103:16    - Unknown word (cached)       -- /******/ var cachedModule = __webpack_module
examples/asset-advanced/README.md:104:33    - Unknown word (undefined)    -- if (cachedModule !== undefined) {
examples/asset-advanced/README.md:109:29    - Unknown word (needed)       -- // no module.id needed
examples/asset-advanced/README.md:110:26    - Unknown word (loaded)       -- **/ // no module.loaded needed
examples/asset-advanced/README.md:126:23    - Unknown word (Symbol)       -- *****/ if(typeof Symbol !== 'undefined' && Symbol
examples/asset-advanced/README.md:12:12     - Unknown word (flex)       -- display: "flex",
examples/asset-advanced/README.md:13:2      - Unknown word (justify)    -- justifyContent: "center"
examples/asset-advanced/README.md:140:27    - Unknown word (wrapped)      -- This entry needs to be wrapped in an IIFE because it
examples/asset-advanced/README.md:140:69    - Unknown word (isolated)     -- because it needs to be isolated against other modules
examples/asset-advanced/README.md:140:78    - Unknown word (against)      -- needs to be isolated against other modules in the
examples/asset-advanced/README.md:149:4     - Unknown word (harmony)      -- /* harmony import */ var _images
examples/asset-advanced/README.md:149:61    - Unknown word (MODULE)       -- svg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require
examples/asset-advanced/README.md:193:3     - Unknown word (dependent)    -- dependent modules 915 bytes [dependent
examples/asset-advanced/README.md:1:14      - Unknown word (shows)      -- This example shows the usage of the asset
examples/asset-advanced/README.md:3:23      - Unknown word (similar)    -- Files can be imported similar to other modules without
examples/asset-advanced/README.md:41:12     - Unknown word (Mini)       -- const svgToMiniDataURI = require("mini
examples/asset-advanced/README.md:75:16     - Unknown word (strict)     -- /******/ "use strict";
examples/asset-advanced/README.md:83:18     - Unknown word (provided)   -- /*! exports [not provided] [no usage info] */
examples/asset-advanced/README.md:84:13     - Unknown word (requirements) -- /*! runtime requirements: module */
examples/asset-advanced/README.md:87:40     - Unknown word (csvg)         -- data:image/svg+xml,%3csvg xmlns='http://www.w
examples/asset-simple/README.md:1:11      - Unknown word (very)       -- This is a very simple example that
examples/asset-simple/README.md:210:95    - Unknown word (auxiliary)  -- from: images/file.png] (auxiliary name: main)
examples/asset-simple/README.md:72:19     - Unknown word (unused)     -- /***/ ((module, __unused_webpack_exports, __webpack
examples/build-common.js:16:14     - Unknown word (Reasons)    -- const displayReasons = global.NO_REASONS
examples/build-common.js:16:34     - Unknown word (REASONS)    -- displayReasons = global.NO_REASONS ? "" : "--stats-reasons
examples/build-common.js:16:58     - Unknown word (reasons)    -- REASONS ? "" : "--stats-reasons --stats-used-exports
examples/build-common.js:3:16      - Unknown word (Koppers)    -- Author Tobias Koppers @sokra
examples/build-common.js:3:25      - Unknown word (sokra)      -- Author Tobias Koppers @sokra
examples/build-common.js:3:9       - Unknown word (Tobias)     -- Author Tobias Koppers @sokra
examples/build-common.js:96:67     - Unknown word (pathinfo)   -- --env none --output-pathinfo verbose", "", callback
examples/build-http/README.md:19:5      - Unknown word (stats)      -- // stats: {
examples/build-http/README.md:22:2      - Unknown word (experiments) -- experiments: {
examples/build-http/README.md:44:30     - Unknown word (Skip)        -- exports: default, pMapSkip]
examples/build-http/README.md:47:22     - Unknown word (specifier)   -- harmony import specifier https://cdn.esm.sh/p
examples/build-http/README.md:65:100    - Unknown word (optimized)   -- es2020,mode=imports/optimized/p-map.js https://cdn
examples/build-http/README.md:86:1      - Unknown word (orphan)      -- orphan modules 30 KiB [orphan
examples/build-http/webpack.lock.data/https_cdn.esm.sh/v53_aggregate-error_4.0.0_es2015_aggregate-error_ff6bcc1ba33bf3b1810a.js:2:211     - Unknown word (Cannot)     -- n))throw TypeError("Cannot "+e)};var c=(n,t,e)
examples/build-http/webpack.lock.data/https_cdn.esm.sh/v53_clean-stack_4.1.0_es2015_clean-stack_87b32b37ae264a8e8a1c.js:2:259     - Unknown word (pirates)    -- modules\/(?:babel-polyfill|pirates)\/.*)?\w+)(?:\.js)?
examples/build-http/webpack.lock.data/https_cdn.esm.sh/v53_clean-stack_4.1.0_es2015_clean-stack_87b32b37ae264a8e8a1c.js:3:123     - Unknown word (asar)       -- Contents/Resources/electron.asar")||t.includes(".app
examples/build-http/webpack.lock.data/https_cdn.esm.sh/v53_indent-string_5.0.0_es2015_indent-string_171b2b5ba89965a085b6.js:2:332     - Unknown word (least)      -- Expected \`count\` to be at least 0, got \`${e}\``);if
examples/build-http/webpack.lock.data/https_cdn.esm.sh/v53_p-map_5.1.0_es2015_p-map_cd0c09542673ea9d78f0.js:2:462     - Unknown word (Mapper)     -- throw new TypeError("Mapper function is required
examples/build-http/webpack.lock.data/https_cdn.skypack.dev/aggregate-error_v4.0.0-rCH8s5R9g4kQQ807o58j_dist_es2020_mode_imports_optimized_aggregate-error_12f7879e59421c0b09bf.js:24:49     - Unknown word (WUKXH)      -- clean-stack@v4.1.0-DgWUKXHVzThBBZtsHXhC/dist=es
examples/build-http/webpack.lock.data/https_cdn.skypack.dev/clean-stack_v4.1.0-DgWUKXHVzThBBZtsHXhC_dist_es2020_mode_imports_optimized_clean-stack_25e0e8c6773c790b5bc1.js:1:77      - Unknown word (Yndx)       -- v5.0.0-SUDdAhYOdAgXIYndxZss/dist=es2020,mode
examples/build-http/webpack.lock.data/https_cdn.skypack.dev/p-map_v5.1.0-7ixXvZxXPKKt9unR9LT0_dist_es2020_mode_imports_optimized_p-map_ddf2a76b117954d701e6.js:2:31      - Unknown word (mapper)     -- function pMap(iterable, mapper, {
examples/buildAll.js:8:59      - Unknown word (caching)    -- includes("persistent-caching"))
examples/chunkhash/README.md:104:20    - Unknown word (Fulfilled)      -- /******/ var notFulfilled = Infinity;
examples/chunkhash/README.md:104:32    - Unknown word (Infinity)       -- var notFulfilled = Infinity;
examples/chunkhash/README.md:107:18    - Unknown word (fulfilled)      -- /******/ var fulfilled = true;
examples/chunkhash/README.md:126:37    - Unknown word (fake)           -- webpack/runtime/create fake namespace object */
examples/chunkhash/README.md:129:16    - Unknown word (leaf)           -- /******/ var leafPrototypes;
examples/chunkhash/README.md:129:20    - Unknown word (Prototypes)     -- /******/ var leafPrototypes;
examples/chunkhash/README.md:156:46    - Unknown word (getters)        -- runtime/define property getters */
examples/chunkhash/README.md:172:25    - Unknown word (loading)        -- ***/ // The chunk loading function for additional
examples/chunkhash/README.md:172:57    - Unknown word (chunks)         -- function for additional chunks
examples/chunkhash/README.md:174:75    - Unknown word (promises)       -- require__.f).reduce((promises, key) => {
examples/chunkhash/README.md:190:45    - Unknown word (shorthand)      -- runtime/hasOwnProperty shorthand */
examples/chunkhash/README.md:1:162     - Unknown word (means)      -- chunkhash mappings. This means it's always updated
examples/chunkhash/README.md:1:173     - Unknown word (always)     -- mappings. This means it's always updated and the `[chunkhash
examples/chunkhash/README.md:1:180     - Unknown word (updated)    -- This means it's always updated and the `[chunkhash
examples/chunkhash/README.md:1:220     - Unknown word (useless)    -- chunkhash]` is pretty useless because this chunk won
examples/chunkhash/README.md:1:25      - Unknown word (combining)  -- common challenge with combining `[chunkhash]` and Code
examples/chunkhash/README.md:1:37      - Unknown word (chunkhash)  -- challenge with combining `[chunkhash]` and Code Splitting
examples/chunkhash/README.md:1:58      - Unknown word (Splitting)  -- chunkhash]` and Code Splitting is that the entry chunk
examples/chunkhash/README.md:1:92      - Unknown word (includes)   -- that the entry chunk includes the webpack runtime
examples/chunkhash/README.md:202:25    - Unknown word (need)           -- ***/ var script, needAttach;
examples/chunkhash/README.md:224:27    - Unknown word (leaks)          -- */ // avoid mem leaks in IE.
examples/chunkhash/README.md:263:25    - Unknown word (Chunks)         -- ***/ var installedChunks = {
examples/chunkhash/README.md:283:33    - Unknown word (before)         -- // create error before stack unwound to get
examples/chunkhash/README.md:283:46    - Unknown word (unwound)        -- create error before stack unwound to get useful stacktrace
examples/chunkhash/README.md:283:61    - Unknown word (useful)         -- stack unwound to get useful stacktrace later
examples/chunkhash/README.md:285:28    - Unknown word (Ended)          -- / var loadingEnded = (event) => {
examples/chunkhash/README.md:316:31    - Unknown word (callback)       -- // install a JSONP callback for chunk loading
examples/chunkhash/README.md:317:28    - Unknown word (Callback)       -- / var webpackJsonpCallback = (parentChunkLoadingFunction
examples/chunkhash/README.md:318:32    - Unknown word (Modules)        -- var [chunkIds, moreModules, runtime] = data;
examples/chunkhash/README.md:320:21    - Unknown word (flag)           -- /******/ // then flag all "chunkIds" as loaded
examples/chunkhash/README.md:320:55    - Unknown word (fire)           -- chunkIds" as loaded and fire callback
examples/chunkhash/README.md:378:24    - Unknown word (exec)           -- ****/ var __webpack_exec__ = (moduleId) => (
examples/chunkhash/README.md:394:68    - Unknown word (initial)        -- js (main) 55 bytes [initial] [rendered]
examples/chunkhash/README.md:3:107     - Unknown word (including)  -- the webpack runtime (including chunkhash map). This
examples/chunkhash/README.md:3:145     - Unknown word (achieved)   -- chunkhash map). This can be achieved with `optimization.runtimeChu
examples/chunkhash/README.md:3:180     - Unknown word (Chunk)      -- optimization.runtimeChunk` options. To avoid the
examples/chunkhash/README.md:3:209     - Unknown word (additional) -- options. To avoid the additional request for another
examples/chunkhash/README.md:3:53      - Unknown word (another)    -- problem is to create another chunk that contains
examples/chunkhash/README.md:46:1013   - Unknown word (enumerable)     -- defineProperty(e,t,{enumerable:!0,get:r[t]})},i.f=
examples/chunkhash/README.md:46:1189   - Unknown word (call)           -- prototype.hasOwnProperty.call(e,r),o={},i.l=(e,r,t
examples/chunkhash/README.md:46:1382   - Unknown word (break)          -- getAttribute("src")==e){a=s;break}}a||(l=!0,(a=document
examples/chunkhash/README.md:46:1453   - Unknown word (timeout)        -- ).charset="utf-8",a.timeout=120,i.nc&&a.setAttribute
examples/chunkhash/README.md:46:1561   - Unknown word (Timeout)        -- onerror=a.onload=null,clearTimeout(d);var n=o[e];if(delete
examples/chunkhash/README.md:46:1694   - Unknown word (bind)           -- r(t)},d=setTimeout(c.bind(null,void 0,{type:"timeout
examples/chunkhash/README.md:46:218    - Unknown word (length)         -- var a=1/0;for(s=0;s<e.length;s++){for(var[t,o,n]
examples/chunkhash/README.md:46:2350   - Unknown word (Loading)        -- target.src;l.message="Loading chunk "+r+" failed.
examples/chunkhash/README.md:46:332    - Unknown word (splice)         -- e=>i.O[e](t[u])))?t.splice(u--,1):(l=!1,n<a&&(a
examples/chunkhash/README.md:46:73     - Unknown word (void)           -- function i(e){var r=a[e];if(void 0!==r)return r.exports
examples/chunkhash/README.md:7:115     - Unknown word (infrastructure) -- the example generator infrastructure, but you should)
examples/chunkhash/README.md:90:14     - Unknown word (expose)         -- /******/ // expose the modules object
examples/chunkhash/README.md:96:16     - Unknown word (deferred)       -- /******/ var deferred = [];
examples/cjs-tree-shaking/README.md:178:20    - Unknown word (same)       -- # dist/without.js (same without tree shaking
examples/cjs-tree-shaking/README.md:178:38    - Unknown word (shaking)    -- js (same without tree shaking)
examples/cjs-tree-shaking/README.md:19:9      - Unknown word (decrement)  -- exports.decrement = function decrement
examples/cjs-tree-shaking/README.md:30:10     - Unknown word (arguments)  -- args = arguments,
examples/cjs-tree-shaking/README.md:32:2      - Unknown word (while)      -- while (i < l) {
examples/cjs-tree-shaking/README.md:38:9      - Unknown word (multiply)   -- exports.multiply = function multiply
examples/cjs-tree-shaking/README.md:4:24      - Unknown word (increment)  -- const inc = require("./increment").increment;
examples/cjs-tree-shaking/README.md:61:43     - Unknown word (renamed)    -- provided] [unused] [renamed to Mj] */
examples/cjs-tree-shaking/webpack.config.js:11:4      - Unknown word (mangle)     -- mangleExports: true
examples/code-splitted-require.context-amd/README.md:236:84    - Unknown word (REQUIRE)    -- { var __WEBPACK_AMD_REQUIRE_ARRAY__ = [__webpack
examples/code-splitted-require.context-amd/README.md:238:52    - Unknown word (catch)      -- REQUIRE_ARRAY__);})['catch'](__webpack_require
examples/code-splitted-require.context-amd/README.md:281:24    - Unknown word (FOUND)      -- e.code = 'MODULE_NOT_FOUND';
examples/code-splitted-require.context-amd/README.md:282:3     - Unknown word (throw)      -- throw e;
examples/code-splitted-require.context-amd/README.md:300:14    - Unknown word (bailout)    -- /*! CommonJS bailout: module.exports is used
examples/code-splitted-require.context-amd/example.js:2:67      - Unknown word (tmpl)       -- templateName], function(tmpl) {
examples/code-splitting-bundle-loader/README.md:1:131     - Unknown word (alone)      -- that show the feature alone.
examples/code-splitting-bundle-loader/README.md:1:14      - Unknown word (combines)   -- This example combines Code Splitting and Loaders
examples/code-splitting-bundle-loader/README.md:3:121     - Unknown word (returns)    -- The wrapper module returns a function that can
examples/code-splitting-bundle-loader/README.md:3:152     - Unknown word (called)     -- function that can be called to asynchronously receive
examples/code-splitting-bundle-loader/README.md:3:189     - Unknown word (inner)      -- asynchronously receive the inner module.
examples/code-splitting-bundle-loader/README.md:3:39      - Unknown word (wrapper)    -- is used to create a wrapper module for `file.js
examples/code-splitting-bundle-loader/README.md:3:73      - Unknown word (loads)      -- module for `file.js` that loads this module on demand
examples/code-splitting-bundle-loader/README.md:42:6      - Unknown word (callbacks)  -- var callbacks = cbs;
examples/code-splitting-depend-on-advanced/README.md:19:8      - Unknown word (Relations)  -- chunkRelations: true
examples/code-splitting-depend-on-advanced/README.md:1:62      - Unknown word (depend)     -- Splitting with entrypoint dependOn
examples/code-splitting-depend-on-advanced/README.md:367:87    - Unknown word (PURE)       -- MODULE_0___default = /*#__PURE__*/__webpack_require
examples/code-splitting-depend-on-advanced/other-vendors.js:4:15      - Unknown word (initializations) -- // Additional initializations
examples/code-splitting-depend-on-simple/README.md:281:14    - Unknown word (startup)    -- /******/ // startup
examples/code-splitting-depend-on-simple/README.md:283:35    - Unknown word (referenced) -- This entry module is referenced by other modules so
examples/code-splitting-harmony/README.md:408:35    - Unknown word (optional)   -- modules/c/2.js 13 bytes [optional] [built] [code generated
examples/code-splitting-harmony/README.md:5:119     - Unknown word (creates)    -- point for webpack and creates a chunk.
examples/code-splitting-harmony/README.md:5:81      - Unknown word (acts)       -- modules on demand. This acts as a split point for
examples/code-splitting-harmony/README.md:7:1       - Unknown word (Providing)  -- Providing dynamic expressions
examples/code-splitting-harmony/README.md:7:113     - Unknown word (calls)      -- expressions in `require` calls apply here. Each possible
examples/code-splitting-harmony/README.md:7:46      - Unknown word (possible)   -- expressions to `import` is possible. The same limits as
examples/code-splitting-native-import-context-filter/README.md:3:14      - Unknown word (illustrates) -- This example illustrates how to filter the ContextModu
examples/code-splitting-native-import-context-filter/README.md:3:80      - Unknown word (statements)  -- results of `import()` statements. Only `.js` files that
examples/code-splitting-native-import-context-filter/README.md:4:23      - Unknown word (within)      -- end in `.noimport.js` within the `templates` folder
examples/code-splitting-native-import-context-filter/README.md:4:61      - Unknown word (bundled)     -- templates` folder will be bundled.
examples/code-splitting-native-import-context-filter/README.md:9:18      - Unknown word (await)       -- let template = await import(
examples/code-splitting-native-import-context-filter/example.js:5:26      - Unknown word (noimport)   -- webpackExclude: /\.noimport\.js$/ */
examples/code-splitting-native-import-context/README.md:3:114     - Unknown word (separate)   -- which are separated into separate chunks for each module
examples/code-splitting-native-import-context/README.md:3:33      - Unknown word (leverage)   -- example illustrates how to leverage the `import()` syntax
examples/code-splitting-native-import-context/README.md:3:99      - Unknown word (separated)  -- ContextModules which are separated into separate chunks
examples/code-splitting-specify-chunk-name/README.md:3:33      - Unknown word (specify)    -- example illustrates how to specify the chunk name in `require
examples/code-splitting/README.md:16:19     - Unknown word (logic)      -- - chunk loading logic
examples/code-splitting/README.md:24:90     - Unknown word (minimize)   -- are pretty small and minimize well.
examples/code-splitting/README.md:325:1     - Unknown word (Minimized)  -- Minimized
examples/code-splitting/README.md:3:28      - Unknown word (normally)   -- and `b` are required normally via CommonJS
examples/code-splitting/README.md:7:13      - Unknown word (detects)    -- - webpack detects that these are in the
examples/code-splitting/README.md:8:15      - Unknown word (them)       -- - will load them on demand
examples/code-splitting/README.md:9:15      - Unknown word (optimizer)  -- - webpack's optimizer can optimize `b` away
examples/code-splitting/README.md:9:42      - Unknown word (away)       -- optimizer can optimize `b` away
examples/coffee-script/README.md:14:2      - Unknown word (again)      -- again: require "./cup2"
examples/coffee-script/README.md:20:14     - Unknown word (yeah)       -- console.log "yeah coffee-script"
examples/common-chunk-and-vendor-chunk/README.md:15:1      - Unknown word (Given)      -- Given this configuration,
examples/common-chunk-and-vendor-chunk/README.md:15:40     - Unknown word (produce)    -- configuration, webpack will produce the following bundles
examples/common-chunk-and-vendor-chunk/README.md:15:52     - Unknown word (following)  -- webpack will produce the following bundles:
examples/common-chunk-and-vendor-chunk/README.md:1:101     - Unknown word (among)      -- chunk for code shared among entry points. In this
examples/common-chunk-and-vendor-chunk/README.md:1:193     - Unknown word (Those)      -- pageB`, and `pageC`. Those entry points share some
examples/common-chunk-and-vendor-chunk/README.md:1:37      - Unknown word (explicit)   -- shows how to create an explicit vendor chunk as well
examples/common-chunk-and-vendor-chunk/README.md:1:397     - Unknown word (keeping)    -- bundle instead, all while keeping the specified vendor
examples/common-chunk-and-vendor-chunk/README.md:1:409     - Unknown word (specified)  -- all while keeping the specified vendor libraries in
examples/common-chunk-and-vendor-chunk/README.md:1:426     - Unknown word (libraries)  -- the specified vendor libraries in their own bundle
examples/common-chunk-and-vendor-chunk/README.md:1:439     - Unknown word (their)      -- vendor libraries in their own bundle by themselves
examples/common-chunk-and-vendor-chunk/README.md:1:459     - Unknown word (themselves) -- their own bundle by themselves.
examples/common-chunk-and-vendor-chunk/README.md:1:46      - Unknown word (vendor)     -- to create an explicit vendor chunk as well as a common
examples/common-chunk-and-vendor-chunk/README.md:318:32    - Unknown word (depends)    -- / This entry module depends on other loaded chunks
examples/common-chunk-and-vendor-chunk/README.md:318:88    - Unknown word (delayed)    -- execution need to be delayed
examples/common-chunk-and-vendor-chunk/README.md:3:11      - Unknown word (understand) -- To better understand, here are the entry
examples/common-chunk-and-vendor-chunk/README.md:3:75      - Unknown word (they)       -- which utility modules they depend on:
examples/common-chunk-and-vendor-chunk/README.md:50:5      - Unknown word (commons)    -- commons: {
examples/common-chunk-and-vendor-chunk/README.md:53:66     - Unknown word (showcase)   -- limit is too small to showcase the effect
examples/common-chunk-and-vendor-chunk/README.md:53:9      - Unknown word (Initial)    -- maxInitialRequests: 5, // The default
examples/common-chunk-and-vendor-chunk/README.md:61:6      - Unknown word (enforce)    -- enforce: true
examples/common-chunk-and-vendor-chunk/README.md:661:31    - Unknown word (hint)       -- chunk 768 bytes (id hint: commons)
examples/common-chunk-and-vendor-chunk/pageA.js:2:5       - Unknown word (utility)    -- var utility1 = require('./utility
examples/common-chunk-grandchildren/README.md:1:50      - Unknown word (deep)       -- common modules from deep ancestors of an entry
examples/common-chunk-grandchildren/README.md:1:55      - Unknown word (ancestors)  -- common modules from deep ancestors of an entry point can
examples/common-chunk-grandchildren/README.md:3:27      - Unknown word (dynamically) -- pageA` and `pageB` are dynamically required
examples/common-chunk-grandchildren/README.md:4:23      - Unknown word (both)        -- `pageC` and `pageA` both require the `reusableComponen
examples/common-chunk-grandchildren/README.md:5:23      - Unknown word (requires)    -- `pageB` dynamically requires `PageC`
examples/common-chunk-grandchildren/README.md:7:34      - Unknown word (five)        -- that webpack outputs five files/chunks:
examples/commonjs/README.md:3:119     - Unknown word (declare)    -- require(dependency)` to declare dependencies.
examples/commonjs/README.md:3:78      - Unknown word (chain)      -- js` form a dependency chain. They use `require(dependency
examples/commonjs/README.md:3:85      - Unknown word (They)       -- a dependency chain. They use `require(dependency
examples/commonjs/README.md:49:69     - Unknown word (prevents)   -- [missing usage info prevents renaming] */
examples/commonjs/README.md:49:78     - Unknown word (renaming)   -- usage info prevents renaming] */
examples/commonjs/README.md:5:154     - Unknown word (easier)     -- make reading this file easier. These comments are
examples/commonjs/README.md:5:162     - Unknown word (These)      -- reading this file easier. These comments are removed
examples/commonjs/README.md:5:181     - Unknown word (removed)    -- These comments are removed when minimizing the
examples/commonjs/README.md:5:194     - Unknown word (minimizing) -- comments are removed when minimizing the file.
examples/commonjs/README.md:5:67      - Unknown word (together)   -- creates by bundling them together in one file. Keep in
examples/commonjs/README.md:5:89      - Unknown word (Keep)       -- together in one file. Keep in mind that webpack
examples/commonjs/README.md:5:97      - Unknown word (mind)       -- in one file. Keep in mind that webpack add comments
examples/commonjs/README.md:7:49      - Unknown word (prints)     -- messages that webpack prints to console (for both
examples/css/README.md:185:88    - Unknown word (Dashes)     -- xportsWithId = [], exportsWithDashes = [], i = 0, cc = 1
examples/css/README.md:186:148   - Unknown word (Computed)   -- catch(e) { data = getComputedStyle(document.head)
examples/css/README.md:186:73    - Unknown word (sheet)      -- chunkId); data = link.sheet.cssRules; data = data
examples/css/README.md:190:24    - Unknown word (char)       -- ****/ cc = data.charCodeAt(i);
examples/css/README.md:20:21     - Unknown word (Sans)       -- font-family: "Open Sans";
examples/css/README.md:373:50    - Unknown word (Chunkapp)   -- kLoadingGlobal = self["webpackChunkapp"] = self["webpackChunkapp
examples/css/README.md:445:2     - Unknown word (supports)   -- @supports (display: grid) {
examples/custom-json-modules/README.md:8:15      - Unknown word (Example)    -- title = "TOML Example"
examples/custom-json-modules/data.yaml:3:13      - Unknown word (Preston)    -- name: Tom Preston-Werner
examples/custom-json-modules/data.yaml:3:21      - Unknown word (Werner)     -- name: Tom Preston-Werner
examples/custom-json-modules/data.yaml:6:12      - Unknown word (Cofounder)  -- GitHub Cofounder & CEO
examples/custom-json-modules/data.yaml:7:11      - Unknown word (tater)      -- Likes tater tots and beer.
examples/custom-json-modules/data.yaml:7:17      - Unknown word (tots)       -- Likes tater tots and beer.
examples/custom-json-modules/data.yaml:7:26      - Unknown word (beer)       -- Likes tater tots and beer.
examples/custom-json-modules/data.yaml:7:5       - Unknown word (Likes)      -- Likes tater tots and beer
examples/dll-app-and-vendor/0-vendor/README.md:148:40    - Unknown word (tell)        -- entry module doesn't tell about it's top-level
examples/dll-app-and-vendor/0-vendor/README.md:20:39     - Unknown word (fullhash)    -- vendor.js", // best use [fullhash] here too
examples/dll-app-and-vendor/0-vendor/README.md:3:102     - Unknown word (changed)    -- array of vendors has changed and not during the normal
examples/dll-app-and-vendor/0-vendor/README.md:3:118     - Unknown word (during)     -- has changed and not during the normal development
examples/dll-app-and-vendor/0-vendor/README.md:3:12      - Unknown word (separately) -- It's built separately from the app part. The
examples/dll-app-and-vendor/0-vendor/README.md:5:18      - Unknown word (combination) -- The DllPlugin in combination with the `output.library
examples/dll-app-and-vendor/0-vendor/README.md:5:47      - Unknown word (library)     -- combination with the `output.library` option exposes the
examples/dll-app-and-vendor/0-vendor/README.md:5:63      - Unknown word (exposes)     -- output.library` option exposes the internal require
examples/dll-app-and-vendor/0-vendor/README.md:5:75      - Unknown word (internal)    -- option exposes the internal require function as
examples/dll-app-and-vendor/0-vendor/README.md:71:44     - Unknown word (binding)     -- "square": () => (/* binding */ square)
examples/dll-app-and-vendor/1-app/README.md:185:22    - Unknown word (multiple)   -- - [ ] examples/dll-multiple
examples/dll-app-and-vendor/1-app/README.md:3:121     - Unknown word (excludes)   -- the manifest file and excludes all vendor modules from
examples/dll-app-and-vendor/1-app/README.md:3:171     - Unknown word (Instead)    -- from the compilation. Instead references to these
examples/dll-app-and-vendor/1-app/README.md:3:5       - Unknown word (previously) -- The previously built vendor dll is
examples/dll-app-and-vendor/1-app/README.md:3:65      - Unknown word (reads)      -- The DllReferencePlugin reads the content of the dll
examples/dll-app-and-vendor/1-app/README.md:56:8      - Unknown word (delegated)  -- !*** delegated ../node_modules/example
examples/dll-app-and-vendor/README.md:3:10      - Unknown word (boost)      -- This can boost the speed of the app
examples/dll-app-and-vendor/README.md:3:20      - Unknown word (speed)      -- This can boost the speed of the app build because
examples/dll-app-and-vendor/README.md:3:73      - Unknown word (included)   -- vendors are no longer included, but built separately
examples/dll-app-and-vendor/README.md:9:90      - Unknown word (Eoksni)     -- d0e89c33a6d763049 by Eoksni
examples/dll-entry-only/README.md:100:18    - Unknown word (reexport)      -- "a": () => (/* reexport */ a),
examples/dll-entry-only/README.md:105:5     - Unknown word (CONCATENATED)  -- ;// CONCATENATED MODULE: ./b.js
examples/dll-entry-only/README.md:11:22     - Unknown word (tells)         -- The `entryOnly` flag tells `DllPlugin` to only
examples/dll-entry-only/README.md:11:77     - Unknown word (configured)    -- the modules which are configured as entry points;
examples/dll-entry-only/README.md:12:40     - Unknown word (resulting)     -- the manifest and the resulting bundle.
examples/dll-entry-only/README.md:12:6      - Unknown word (affects)       -- this affects both the manifest and
examples/dll-entry-only/README.md:13:65     - Unknown word (contract)      -- included in the "public contract" of the Dll,
examples/dll-entry-only/README.md:14:26     - Unknown word (merging)       -- can be optimized by merging (concatenating) multiple
examples/dll-entry-only/README.md:14:35     - Unknown word (concatenating) -- optimized by merging (concatenating) multiple modules together
examples/dll-entry-only/README.md:14:79     - Unknown word (removing)      -- modules together or removing unused code.
examples/dll-entry-only/README.md:15:13     - Unknown word (taking)        -- This allows taking advantage of tree shaking
examples/dll-entry-only/README.md:15:20     - Unknown word (advantage)     -- This allows taking advantage of tree shaking (scope
examples/dll-entry-only/README.md:15:6      - Unknown word (allows)        -- This allows taking advantage of
examples/dll-entry-only/README.md:15:76     - Unknown word (removal)       -- hoisting and dead code removal) optimizations.
examples/dll-entry-only/README.md:17:46     - Unknown word (exposed)       -- example.js` module is exposed, since it's the entry
examples/dll-entry-only/README.md:17:55     - Unknown word (since)         -- module is exposed, since it's the entry point
examples/dll-entry-only/README.md:18:31     - Unknown word (concatenated)  -- a.js` and `b.js` are concatenated into `example.js`.
examples/dll-entry-only/README.md:1:13      - Unknown word (hoisting)   -- # Dll scope hoisting
examples/dll-entry-only/README.md:22:10     - Unknown word (corresponding) -- from the corresponding modules `a.js`, `b.js
examples/dll-entry-only/README.md:51:3      - Unknown word (concatenate)   -- concatenateModules: true // this
examples/dll-entry-only/README.md:5:14      - Unknown word (demonstrates) -- This example demonstrates the usage of `entryOnly
examples/dll-entry-only/README.md:5:86      - Unknown word (concatenation) -- combination with module concatenation / scope hoisting.
examples/dll-entry-only/README.md:75:11     - Unknown word (Concatenation) -- /*! ModuleConcatenation bailout: Module Concatenation
examples/dll-entry-only/README.md:8:27      - Unknown word (individual)    -- manifest includes the individual modules available for
examples/dll-entry-only/README.md:95:15     - Unknown word (FLAG)          -- // ESM COMPAT FLAG
examples/dll-entry-only/README.md:9:1       - Unknown word (Since)         -- Since all the modules are
examples/dll-entry-only/README.md:9:33      - Unknown word (accounted)     -- the modules are being accounted for, this prevents advanced
examples/dll-entry-only/README.md:9:71      - Unknown word (optimizations) -- this prevents advanced optimizations such as tree shaking
examples/dll/README.md:5:42      - Unknown word (manifests)  -- reference_ bundle (with the manifests) for [dll user example
examples/explicit-vendor-chunk/README.md:72:19     - Unknown word (Vendor)     -- module.exports = "Vendor";
examples/externals/README.md:13:37     - Unknown word (subtract)   -- strict) | `["./math", "subtract"]` | `require("./math
examples/externals/README.md:3:178     - Unknown word (exported)   -- option so the library is exported to the root namespace
examples/externals/README.md:3:72      - Unknown word (consumable) -- a UMD module that is consumable in CommonJS, AMD and
examples/externals/README.md:52:50     - Unknown word (factory)    -- iversalModuleDefinition(root, factory) {
examples/externals/README.md:5:13      - Unknown word (externals)  -- We use the `externals` option to define dependencie
examples/externals/README.md:5:69      - Unknown word (resolved)   -- dependencies that should be resolved in the target environment
examples/externals/README.md:9:8       - Unknown word (complex)    -- In the complex case we specify different
examples/extra-async-chunk/README.md:19:24     - Unknown word (compares)   -- Note: The optimization compares the size of chunk Z
examples/extra-async-chunk/README.md:19:61     - Unknown word (minimum)    -- size of chunk Z to some minimum value, but this is disabled
examples/extra-async-chunk/README.md:32:1      - Unknown word (Pretty)     -- Pretty useful for a router
examples/harmony-interop/README.md:105:55    - Unknown word (safe)        -- () => (/* reexport safe */ _fs__WEBPACK_IMPORTED
examples/harmony-interop/README.md:26:15     - Unknown word (omitted)    -- // content is omitted for brevity
examples/harmony-interop/README.md:29:20     - Unknown word (care)       -- // webpack doesn't care which syntax is used
examples/harmony-interop/README.md:40:38     - Unknown word (applies)    -- interop-specific, it applies for every export *)
examples/harmony-interop/README.md:42:10     - Unknown word (reexporting) -- // Note: reexporting a CommonJs module is
examples/harmony-interop/example.js:15:38     - Unknown word (effects)    -- CommonJs module for side effects
examples/harmony-interop/fs.js:2:27      - Unknown word (brevity)    -- content is omitted for brevity
examples/harmony-interop/fs.js:4:34      - Unknown word (equivalent) -- module.exports would be equivalent,
examples/harmony-interop/reexport-commonjs.js:7:4       - Unknown word (because)    -- // because in this module we have
examples/harmony-library/README.md:10:16     - Unknown word (Library)    -- filename: "MyLibrary.umd.js",
examples/harmony-unused/README.md:16:19     - Unknown word (Multiply)   -- library.reexportedMultiply(1, 2);
examples/harmony-unused/README.md:1:164     - Unknown word (removes)    -- minimizing step then removes the declarations because
examples/harmony-unused/README.md:3:1       - Unknown word (Excluding)  -- Excluding unused exports from
examples/harmony-unused/README.md:7:140     - Unknown word (Often)      -- identifiers from submodules. Often big parts of that are
examples/harmony-unused/README.md:7:35      - Unknown word (simulates)  -- to that, `library.js` simulates an entry point to a
examples/harmony-unused/example.js:5:9       - Unknown word (reexported) -- library.reexportedMultiply(1, 2);
examples/harmony/README.md:9:45      - Unknown word (Loaded)     -- .then(function(asyncLoaded) {
examples/http2-aggressive-splitting/README.md:11:1      - Unknown word (There)        -- There is a tradeoff here:
examples/http2-aggressive-splitting/README.md:11:12     - Unknown word (tradeoff)     -- There is a tradeoff here:
examples/http2-aggressive-splitting/README.md:13:13     - Unknown word (improves)     -- The caching improves with smaller `maxSize
examples/http2-aggressive-splitting/README.md:13:68     - Unknown word (often)        -- as chunks change less often and can be reused more
examples/http2-aggressive-splitting/README.md:13:85     - Unknown word (reused)       -- less often and can be reused more often after an
examples/http2-aggressive-splitting/README.md:15:113    - Unknown word (duplicate)    -- more likely to find duplicate strings, etc.
examples/http2-aggressive-splitting/README.md:15:123    - Unknown word (strings)      -- likely to find duplicate strings, etc.
examples/http2-aggressive-splitting/README.md:17:105    - Unknown word (decreases)    -- the number of requests decreases.
examples/http2-aggressive-splitting/README.md:17:5      - Unknown word (backward)     -- The backward compatibility (non-HTTP
examples/http2-aggressive-splitting/README.md:1:173     - Unknown word (otherwise)  -- an HTTP2 web server, otherwise, there is an overhead
examples/http2-aggressive-splitting/README.md:1:196     - Unknown word (overhead)   -- otherwise, there is an overhead for the increased number
examples/http2-aggressive-splitting/README.md:1:213     - Unknown word (increased)  -- an overhead for the increased number of requests.
examples/http2-aggressive-splitting/README.md:1:61      - Unknown word (splitting)  -- AggressiveSplittingPlugin for splitting the bundle into multiple
examples/http2-aggressive-splitting/README.md:1:96      - Unknown word (smaller)    -- bundle into multiple smaller chunks to improve caching
examples/http2-aggressive-splitting/README.md:24:25     - Unknown word (performance)  -- cache: true, // better performance for the AggressiveSplittingPl
examples/http2-aggressive-splitting/README.md:3:158     - Unknown word (typically)  -- 0kB raw code, which typically minimizes to ~10kB.
examples/http2-aggressive-splitting/README.md:3:168     - Unknown word (minimizes)  -- code, which typically minimizes to ~10kB. It groups
examples/http2-aggressive-splitting/README.md:3:27      - Unknown word (splits)     -- AggressiveSplittingPlugin splits every chunk until it
examples/http2-aggressive-splitting/README.md:3:289     - Unknown word (repetitive) -- likely to have similar repetitive text, making them gzip
examples/http2-aggressive-splitting/README.md:3:323     - Unknown word (efficiently) -- text, making them gzip efficiently together. They are also
examples/http2-aggressive-splitting/README.md:3:46      - Unknown word (until)      -- tingPlugin splits every chunk until it reaches the specified
examples/http2-aggressive-splitting/README.md:3:55      - Unknown word (reaches)    -- every chunk until it reaches the specified `maxSize
examples/http2-aggressive-splitting/README.md:5:119     - Unknown word (recorded)    -- tries to use the last recorded splitting. Since changes
examples/http2-aggressive-splitting/README.md:5:206     - Unknown word (usually)     -- run and the next are usually in only a few modules
examples/http2-aggressive-splitting/README.md:5:268     - Unknown word (splittings)  -- one), re-using the old splittings (and chunks, which are
examples/http2-aggressive-splitting/README.md:5:302     - Unknown word (probably)    -- and chunks, which are probably still in the client
examples/http2-aggressive-splitting/README.md:5:344     - Unknown word (highly)      -- client's cache), is highly advantageous.
examples/http2-aggressive-splitting/README.md:5:351     - Unknown word (advantageous) -- s cache), is highly advantageous.
examples/http2-aggressive-splitting/README.md:62:107    - Unknown word (splitted)     -- recorded] aggressive splitted, reused as split chunk
examples/http2-aggressive-splitting/README.md:62:96     - Unknown word (aggressive)   -- rendered] [recorded] aggressive splitted, reused as
examples/http2-aggressive-splitting/README.md:7:118     - Unknown word (fill)         -- ensures that these chunks fill up as your application
examples/http2-aggressive-splitting/README.md:7:146     - Unknown word (grows)        -- as your application grows, instead of creating
examples/http2-aggressive-splitting/README.md:7:22      - Unknown word (bigger)       -- Only chunks that are bigger than the specified
examples/http2-aggressive-splitting/README.md:7:29      - Unknown word (than)         -- chunks that are bigger than the specified `minSize
examples/http2-aggressive-splitting/README.md:7:62      - Unknown word (stored)       -- specified `minSize` are stored into the records. This
examples/http2-aggressive-splitting/README.md:7:92      - Unknown word (ensures)      -- into the records. This ensures that these chunks fill
examples/http2-aggressive-splitting/README.md:94:14     - Unknown word (Splits)       -- "aggressiveSplits": [
examples/http2-aggressive-splitting/README.md:9:37      - Unknown word (declared)     -- changes, its chunks are declared to be invalid and are
examples/http2-aggressive-splitting/README.md:9:72      - Unknown word (back)         -- invalid and are put back into the module pool
examples/hybrid-routing/README.md:20:6      - Unknown word (Extract)    -- // Extract common modules from
examples/hybrid-routing/README.md:56:38     - Unknown word (opened)     -- another page should be opened
examples/hybrid-routing/README.md:57:31     - Unknown word (hashchange) -- hook click on links, hashchange or popstate
examples/hybrid-routing/README.md:57:4      - Unknown word (Maybe)      -- // Maybe hook click on links
examples/hybrid-routing/README.md:57:45     - Unknown word (popstate)   -- links, hashchange or popstate
examples/hybrid-routing/README.md:61:10     - Unknown word (important)  -- // It's important that this require only
examples/hybrid-routing/README.md:62:25     - Unknown word (blood)      -- otherwise there is blood in the bundle. Here
examples/hybrid-routing/README.md:62:46     - Unknown word (Here)       -- blood in the bundle. Here this is done with a
examples/hybrid-routing/README.md:64:45     - Unknown word (Replacement) -- RegExp with the ContextReplacementPlugin, or
examples/hybrid-routing/README.md:64:6      - Unknown word (overwriting) -- // overwriting the RegExp with the
examples/hybrid-routing/README.md:67:27     - Unknown word (exception)   -- This line may throw a exception on runtime if the page
examples/hybrid-routing/README.md:67:60     - Unknown word (wasn't)      -- runtime if the page wasn't found.
examples/hybrid-routing/README.md:67:67     - Unknown word (found)       -- runtime if the page wasn't found.
examples/hybrid-routing/aEntry.js:1:4       - Unknown word (Just)       -- // Just show the page "a"
examples/lazy-compilation/README.md:54:3      - Unknown word (idle)       -- idleTimeout: 5000
examples/lazy-compilation/all.js:8:16      - Unknown word (xxhashjs)   -- export * from "xxhashjs";
examples/loader/README.md:119:44    - Unknown word (reassign)   -- disable-next-line no-param-reassign
examples/loader/README.md:127:37    - Unknown word (prefer)     -- eslint-disable-next-line prefer-destructuring
examples/loader/README.md:261:1     - Unknown word (Prints)     -- Prints in node.js (`enhanced
examples/loader/README.md:265:3     - Unknown word (foobar)     -- { foobar: 1234 }
examples/loader/README.md:74:12     - Unknown word (LOADER)     -- var ___CSS_LOADER_EXPORT___ = _node_modules
examples/loader/README.md:98:19     - Unknown word (injected)   -- // css base code, injected by the css-loader
examples/loader/README.md:9:52      - Unknown word (manual)     -- loader!./test.css")); // manual
examples/loader/example.js:4:8       - Unknown word (built)      -- // use built-in css loader
examples/many-pages/README.md:10:115    - Unknown word (increasing) -- optimized splitting mode by increasing the allowed amount of
examples/many-pages/README.md:10:138    - Unknown word (amount)     -- increasing the allowed amount of requests. The browser
examples/many-pages/README.md:12:3      - Unknown word (Interpreting) -- # Interpreting the result
examples/many-pages/README.md:15:117    - Unknown word (larger)       -- separate output file when larger than the threshold in
examples/many-pages/README.md:15:133    - Unknown word (threshold)    -- when larger than the threshold in size
examples/many-pages/README.md:15:74     - Unknown word (extracted)    -- shared by these pages extracted into a separate output
examples/many-pages/README.md:21:1      - Unknown word (Some)         -- Some modules are intentionally
examples/many-pages/README.md:21:18     - Unknown word (intentionally) -- Some modules are intentionally duplicated, i. e. `
examples/many-pages/README.md:21:244    - Unknown word (comes)         -- separate request (which comes with an overhead and
examples/many-pages/README.md:21:271    - Unknown word (worsen)        -- with an overhead and worsen gzipping) is not worth
examples/many-pages/README.md:21:278    - Unknown word (gzipping)      -- overhead and worsen gzipping) is not worth the extra
examples/many-pages/README.md:21:295    - Unknown word (worth)         -- worsen gzipping) is not worth the extra bytes.
examples/many-pages/README.md:21:32     - Unknown word (duplicated)    -- modules are intentionally duplicated, i. e. `./stuff/s4.js
examples/many-pages/README.md:23:112    - Unknown word (Duplication)   -- number of requests. Duplication doesn't affect the initial
examples/many-pages/README.md:23:132    - Unknown word (affect)        -- Duplication doesn't affect the initial page load
examples/many-pages/README.md:23:195    - Unknown word (navigations)   -- affects download size of navigations to other pages of the
examples/many-pages/README.md:23:58     - Unknown word (duplication)   -- AsyncRequest` will increase duplication further to reduce the
examples/many-pages/README.md:23:7      - Unknown word (decreasing)    -- Note: decreasing `maxInitial/AsyncRequest
examples/many-pages/README.md:23:70     - Unknown word (further)       -- increase duplication further to reduce the number
examples/many-pages/README.md:44:37     - Unknown word (chosen)        -- / for example only: chosen to match 2 modules
examples/many-pages/README.md:5:110     - Unknown word (libs)       -- modules` folder (vendor libs) and 0-3 modules from
examples/many-pages/README.md:5:182     - Unknown word (reality)    -- application modules). In reality, an application is probably
examples/many-pages/README.md:5:245     - Unknown word (mechanisms) -- complex, but the same mechanisms apply.
examples/many-pages/README.md:5:49      - Unknown word (importing)  -- contains 7 pages, each importing 1-3 modules from the
examples/many-pages/pages/a.js:5:12      - Unknown word (stuff)      -- import "../stuff/s2";
examples/mixed/README.md:19:9      - Unknown word (something)  -- // Do something with it...
examples/mixed/README.md:1:95      - Unknown word (Harmony)    -- Here CommonJS, AMD and Harmony Modules (ES6 Modules
examples/mixed/README.md:3:14      - Unknown word (everything) -- You see that everything is working nicely together
examples/mixed/README.md:3:36      - Unknown word (nicely)     -- everything is working nicely together.
examples/mixed/amd.js:3:16      - Unknown word (anonym)     -- "app/amd", // anonym is also supported
examples/module-code-splitting/README.md:4:15      - Unknown word (Counter)    -- import { resetCounter, print } from "./methods
examples/module-code-splitting/README.md:4:24      - Unknown word (print)      -- import { resetCounter, print } from "./methods";
examples/module-code-splitting/README.md:7:8       - Unknown word (counter)    -- const counter = await import("./counter
examples/module-federation/README.md:101:63    - Unknown word (know)        -- remote, app doesn't know about that
examples/module-federation/README.md:1045:109  - Unknown word (been)           -- failed as it has already been initialized with a different
examples/module-federation/README.md:1045:69   - Unknown word (initialization) -- new Error("Container initialization failed as it has already
examples/module-federation/README.md:1050:28   - Unknown word (disallow)       -- This exports getters to disallow modifications
examples/module-federation/README.md:143:18    - Unknown word (opts)        -- // but it opts-out of possible fallbacks
examples/module-federation/README.md:143:39    - Unknown word (fallbacks)   -- opts-out of possible fallbacks and runtime version
examples/module-federation/README.md:159:50    - Unknown word (initialized) -- that all remotes are initialized
examples/module-federation/README.md:163:4     - Unknown word (Using)       -- // Using modules from remotes
examples/module-federation/README.md:178:71    - Unknown word (usual)       -- module, but used as usual
examples/module-federation/README.md:186:11    - Unknown word (spinner)     -- // remove spinner
examples/module-federation/README.md:19:47     - Unknown word (readable)   -- for this example only: readable filenames in production
examples/module-federation/README.md:210:10    - Unknown word (Suspense)    -- <React.Suspense fallback={<p>Lazy loading
examples/module-federation/README.md:210:19    - Unknown word (fallback)    -- <React.Suspense fallback={<p>Lazy loading component
examples/module-federation/README.md:229:5     - Unknown word (margin)      -- margin: 50px auto;
examples/module-federation/README.md:230:10    - Unknown word (indent)      -- text-indent: -9999em;
examples/module-federation/README.md:233:5     - Unknown word (border)      -- border-radius: 50%;
examples/module-federation/README.md:238:6     - Unknown word (rgba)        -- rgba(89, 89, 89, 0) 42%
examples/module-federation/README.md:240:15    - Unknown word (relative)    -- position: relative;
examples/module-federation/README.md:241:16    - Unknown word (spin)        -- animation: spin 1.4s infinite linear
examples/module-federation/README.md:241:26    - Unknown word (infinite)    -- animation: spin 1.4s infinite linear;
examples/module-federation/README.md:249:15    - Unknown word (absolute)    -- position: absolute;
examples/module-federation/README.md:26:7      - Unknown word (Origins)    -- chunkOrigins: true
examples/module-federation/README.md:293:34    - Unknown word (bootstrapping) -- script only contains bootstrapping logic -->
examples/module-federation/README.md:294:42    - Unknown word (necessary)     -- all other scripts if necessary -->
examples/module-federation/README.md:299:45    - Unknown word (round)         -- will add an additional round trip -->
examples/module-federation/README.md:299:51    - Unknown word (trip)          -- an additional round trip -->
examples/module-federation/README.md:299:8     - Unknown word (Omitting)      -- <!-- Omitting them will add an additional
examples/module-federation/README.md:304:12    - Unknown word (optimal)       -- <!-- For optimal performance they can
examples/module-federation/README.md:313:16    - Unknown word (Relative)      -- import { formatRelative, subDays } from "date
examples/module-federation/README.md:313:29    - Unknown word (Days)          -- formatRelative, subDays } from "date-fns";
examples/module-federation/README.md:315:4     - Unknown word (exposing)      -- // exposing modules act as async
examples/module-federation/README.md:317:48    - Unknown word (placed)        -- shared module, it will be placed in a separate file
examples/module-federation/README.md:47:24     - Unknown word (collisions) -- // to avoid runtime collisions
examples/module-federation/README.md:55:16     - Unknown word (remotes)    -- // List of remotes with URLs
examples/module-federation/README.md:631:36    - Unknown word (nwhile)        -- error.message += '\nwhile loading "' + data[1
examples/module-federation/README.md:637:19    - Unknown word (handle)        -- /******/ var handleFunction = (fn, arg1
examples/module-federation/README.md:63:9      - Unknown word (specifying) -- // specifying a module request as
examples/module-federation/README.md:64:39     - Unknown word (matching)   -- provide all used modules matching this name (version from
examples/module-federation/README.md:650:130   - Unknown word (Initialized)   -- data[0], 0, external, onInitialized, first) : onError()
examples/module-federation/README.md:65:13     - Unknown word (consume)    -- // and consume shared modules in the
examples/module-federation/README.md:667:20    - Unknown word (Promises)      -- /******/ var initPromises = {};
examples/module-federation/README.md:671:16    - Unknown word (handling)      -- /******/ // handling circular init calls
examples/module-federation/README.md:671:25    - Unknown word (circular)      -- ***/ // handling circular init calls
examples/module-federation/README.md:67:23     - Unknown word (highest)    -- // So it use the highest available version of
examples/module-federation/README.md:67:86     - Unknown word (requirement) -- matching the version requirement
examples/module-federation/README.md:680:56    - Unknown word (reachable)     -- snippets from all modules reachable
examples/module-federation/README.md:682:17    - Unknown word (warn)          -- /******/ var warn = (msg) => {
examples/module-federation/README.md:688:53    - Unknown word (eager)         -- name, version, factory, eager) => {
examples/module-federation/README.md:68:34     - Unknown word (providing)   -- package.json, while providing it's own version to
examples/module-federation/README.md:694:48    - Unknown word (Initialization) -- handleError = (err) => (warn("Initialization of sharing external
examples/module-federation/README.md:70:7      - Unknown word (singleton)   -- singleton: true // make sure only
examples/module-federation/README.md:723:30    - Unknown word (consumes)       -- /* webpack/runtime/consumes */
examples/module-federation/README.md:726:51    - Unknown word (original)       -- lib/util/semver.js for original code
examples/module-federation/README.md:737:16    - Unknown word (satisfy)        -- /******/ var satisfy = (range, version)
examples/module-federation/README.md:741:22    - Unknown word (Existence)      -- ******/ var ensureExistence = (scopeName, key)
examples/module-federation/README.md:753:20    - Unknown word (Singleton)      -- /******/ var findSingletonVersionKey = (scope,
examples/module-federation/README.md:760:21    - Unknown word (Unsatisfied)    -- /******/ return "Unsatisfied version " + version
examples/module-federation/README.md:771:19    - Unknown word (Strict)         -- /******/ var getStrictSingletonVersion = (scope
examples/module-federation/README.md:786:24    - Unknown word (satisfying)     -- ****/ return "No satisfying version (" + rangeToString
examples/module-federation/README.md:818:20    - Unknown word (Fallback)       -- /******/ var loadFallback = /*#__PURE__*/ init
examples/module-federation/README.md:862:24    - Unknown word (Handler)        -- ****/ var moduleToHandlerMapping = {
examples/module-federation/README.md:985:50    - Unknown word (Chunkmodule)    -- kLoadingGlobal = self["webpackChunkmodule_federation_aaa"] = self
examples/module-federation/src-b/Component.js:10:29     - Unknown word (solid)      -- style={{ border: "5px solid darkblue" }}>
examples/module-federation/src-c/Component.js:5:35      - Unknown word (darkred)    -- border: "5px solid darkred" }}>
examples/module-federation/src-c/LazyComponent.js:5:35      - Unknown word (darkgreen)  -- border: "5px solid darkgreen" }}>
examples/module-federation/src-c/LazyComponent.js:7:65      - Unknown word (myself)     -- load another component myself.</p>
examples/module-worker/README.md:152:35    - Unknown word (shift)      -- length > 10) history.shift();
examples/module-worker/README.md:45:27     - Unknown word (floor)      -- from = `User ${Math.floor(Math.random() * 100
examples/module-worker/README.md:54:10     - Unknown word (focus)      -- message.focus();
examples/module-worker/README.md:55:4      - Unknown word (prevent)    -- e.preventDefault();
examples/module-worker/example.js:23:5      - Unknown word (CHAT)       -- /// CHAT with shared worker
examples/module-worker/example.js:65:5      - Unknown word (FIBONACCI)  -- /// FIBONACCI without worker ///
examples/module-worker/example.js:7:15      - Unknown word (fibonacci)  -- <p>Computing fibonacci without worker:</p>
examples/module-worker/example.js:7:5       - Unknown word (Computing)  -- <p>Computing fibonacci without worker
examples/module/README.md:80:43     - Unknown word (could)      -- provided] [used in main] [could be renamed] -> ./counter
examples/multi-part-library/README.md:1:120     - Unknown word (usable)     -- multiple parts that are usable on its own and together
examples/multi-part-library/README.md:1:84      - Unknown word (consists)   -- webpack. The library consists of multiple parts that
examples/multi-part-library/README.md:3:182     - Unknown word (consuming)  -- MyLibrary.beta`). When consuming the library with CommonsJS
examples/multi-part-library/README.md:3:209     - Unknown word (Commons)    -- consuming the library with CommonsJS or AMD it just exports
examples/multi-part-library/README.md:3:53      - Unknown word (itself)     -- script tags it exports itself to the namespace `MyLibrary
examples/multi-part-library/README.md:5:165     - Unknown word (give)       -- contains `[name]` to give each output file a different
examples/multi-part-library/README.md:7:208     - Unknown word (defines)    -- The `library` option defines the namespace. We are
examples/multi-part-library/README.md:9:40      - Unknown word (wraps)      -- webpack automatically wraps your module so that
examples/multiple-entry-points/README.md:21:35     - Unknown word (printed)    -- see the info that is printed to console. It shows
examples/multiple-entry-points/README.md:25:15     - Unknown word (starting)   -- - see lines starting with `chunk`
examples/multiple-entry-points/README.md:3:224     - Unknown word (assuming)   -- used in both pages (assuming there are many/big modules
examples/persistent-caching/README.md:24:27     - Unknown word (verbose)    -- Optional: print more verbose logging about caching
examples/persistent-caching/README.md:24:6      - Unknown word (Optional)   -- // Optional: print more verbose
examples/persistent-caching/README.md:36:7      - Unknown word (recommended) -- // recommended to invalidate cache
examples/persistent-caching/README.md:37:17     - Unknown word (makes)       -- // This also makes all dependencies of
examples/persistent-caching/README.md:73:53     - Unknown word (exceed)      -- The following asset(s) exceed the recommended size
examples/persistent-caching/README.md:78:63     - Unknown word (combined)    -- following entrypoint(s) combined asset size exceeds the
examples/persistent-caching/README.md:78:83     - Unknown word (exceeds)     -- combined asset size exceeds the recommended limit
examples/persistent-caching/README.md:85:15     - Unknown word (visit)       -- For more info visit https://webpack.js.org
examples/persistent-caching/README.md:87:32     - Unknown word (warnings)    -- 8.0 compiled with 3 warnings
examples/reexport-components/README.md:162:44    - Unknown word (dialog)     -- React.createElement("dialog", null, children);
examples/reexport-components/README.md:27:18     - Unknown word (Dialog)     -- import { Button, Dialog } from "../components
examples/reexport-components/components/Checkbox.js:1:7       - Unknown word (Checkbox)   -- const Checkbox = () => {
examples/reexport-components/components/Checkbox.js:2:22      - Unknown word (checkbox)   -- return <input type="checkbox" />;
examples/reexport-components/webpack.config.js:22:52     - Unknown word (showcasing) -- in dev mode too for showcasing
examples/require.resolve/README.md:93:15     - Unknown word (Flag)       -- /******/ // Flag the module as loaded
examples/require.resolve/example.js:9:39      - Unknown word (reexecuted) -- again, it should be reexecuted
examples/scope-hoisting/README.md:12:56     - Unknown word (scopes)      -- two chunks (different scopes)
examples/scope-hoisting/README.md:17:107    - Unknown word (chooses)     -- concatenation", which chooses the largest possible
examples/scope-hoisting/README.md:17:119    - Unknown word (largest)     -- , which chooses the largest possible subsets of
examples/scope-hoisting/README.md:17:136    - Unknown word (subsets)     -- the largest possible subsets of ES modules which
examples/scope-hoisting/README.md:17:177    - Unknown word (hoisted)     -- modules which can be scope hoisted and combines them with
examples/scope-hoisting/README.md:17:29     - Unknown word (approach)    -- therefore, uses an approach called **"Partial Scope
examples/scope-hoisting/README.md:17:48     - Unknown word (Partial)     -- an approach called **"Partial Scope Hoisting"** or
examples/scope-hoisting/README.md:21:1      - Unknown word (While)       -- While module concatenation
examples/scope-hoisting/README.md:21:107    - Unknown word (simplified)  -- internal imports are simplified. External imports and
examples/scope-hoisting/README.md:21:190    - Unknown word (constructs)  -- use the existing ESM constructs.
examples/scope-hoisting/README.md:3:82      - Unknown word (dashed)     -- express sync imports, dashed lines async imports
examples/scope-hoisting/README.md:435:161   - Unknown word (unnamed)     -- expected in chunk(s) unnamed chunk(s), module is
examples/scope-hoisting/README.md:65:27     - Unknown word (Char)        -- export var c = String.fromCharCode(e.charCodeAt(0)
examples/scope-hoisting/README.md:7:13      - Unknown word (except)     -- All modules except `cjs` are EcmaScript
examples/scope-hoisting/README.md:9:36      - Unknown word (putting)     -- nteresting thing here is that putting all modules in a single
examples/scope-hoisting/README.md:9:5       - Unknown word (interesting) -- The interesting thing here is that putting
examples/side-effects/README.md:11:1      - Unknown word (Advantages) -- Advantages:
examples/side-effects/README.md:13:3      - Unknown word (Smaller)    -- - Smaller bundles
examples/side-effects/README.md:14:10     - Unknown word (boot)       -- - Faster boot up
examples/side-effects/README.md:14:3      - Unknown word (Faster)     -- - Faster boot up
examples/side-effects/README.md:1:65      - Unknown word (authors)    -- flag works for library authors.
examples/side-effects/README.md:3:331     - Unknown word (According)  -- from "big-module"`. According to the EcmaScript spec
examples/side-effects/README.md:3:359     - Unknown word (spec)       -- According to the EcmaScript spec, all child modules
examples/side-effects/README.md:3:393     - Unknown word (evaluated)  -- child modules _must_ be evaluated because they could contain
examples/side-effects/README.md:5:281     - Unknown word (rewritten)  -- module-with-flag"` is rewritten to `import { a } from
examples/side-effects/README.md:5:66      - Unknown word (indicates)  -- module`'s `package.json` indicates that the package's modules
examples/side-effects/README.md:7:26      - Unknown word (variants)   -- example contains two variants of `big-module`. `big
examples/source-map/README.md:14:3      - Unknown word (Splats)     -- # Splats:
examples/source-map/README.md:15:17     - Unknown word (runners)    -- race = (winner, runners...) ->
examples/source-map/README.md:15:9      - Unknown word (winner)     -- race = (winner, runners...) ->
examples/source-map/README.md:195:4     - Unknown word (ATTENTION)  -- * ATTENTION: An "eval-source-map
examples/source-map/README.md:196:20    - Unknown word (neither)    -- * This devtool is neither made for production
examples/source-map/README.md:1:51      - Unknown word (maps)       -- various types of source-maps.
examples/source-map/README.md:200:38    - Unknown word (ready)      -- looking for production-ready output files, see mode
examples/source-map/README.md:318:123   - Unknown word (AAFA)       -- AACA;AACA;AAAA;AAAA;AAFA;;;AAKA;AACA;AADA","sources
examples/source-map/README.md:318:130   - Unknown word (AAKA)       -- AACA;AAAA;AAAA;AAFA;;;AAKA;AACA;AADA","sources
examples/source-map/README.md:318:140   - Unknown word (AADA)       -- AAAA;AAFA;;;AAKA;AACA;AADA","sources":["webpack
examples/source-map/README.md:318:80    - Unknown word (AAEA)       -- mappings":";;;;;;;;;AAEA;;;AAAA;;AACA;AACA;AACA
examples/source-map/README.md:318:93    - Unknown word (AACA)       -- ;;;;;;;AAEA;;;AAAA;;AACA;AACA;AACA;AACA;AAAA
examples/source-map/README.md:36:3      - Unknown word (nosources)  -- "nosources-source-map"
examples/source-map/README.md:53:3      - Unknown word (Generated)  -- # Generated source-maps
examples/source-map/README.md:6:3       - Unknown word (Taken)      -- # Taken from http://coffeescript
examples/source-map/README.md:97:100    - Unknown word (IAAI)       -- AACV,OACE;EAAA,MAAQ,IAAI,CAAC,IAAb;EACA,QAAQ
examples/source-map/README.md:97:105    - Unknown word (CAAC)       -- OACE;EAAA,MAAQ,IAAI,CAAC,IAAb;EACA,QAAQ,MADR
examples/source-map/README.md:97:115    - Unknown word (EACA)       -- MAAQ,IAAI,CAAC,IAAb;EACA,QAAQ,MADR;EAEA,MAAQ
examples/source-map/README.md:97:120    - Unknown word (QAAQ)       -- IAAI,CAAC,IAAb;EACA,QAAQ,MADR;EAEA,MAAQ,SAAC
examples/source-map/README.md:97:130    - Unknown word (EAEA)       -- IAAb;EACA,QAAQ,MADR;EAEA,MAAQ,SAAC,CAAD;WAAO
examples/source-map/README.md:97:140    - Unknown word (SAAC)       -- QAAQ,MADR;EAEA,MAAQ,SAAC,CAAD;WAAO,IAAI,OAAO
examples/source-map/README.md:97:145    - Unknown word (CAAD)       -- MADR;EAEA,MAAQ,SAAC,CAAD;WAAO,IAAI,OAAO,CAAP
examples/source-map/README.md:97:150    - Unknown word (WAAO)       -- EAEA,MAAQ,SAAC,CAAD;WAAO,IAAI,OAAO,CAAP;EAAX
examples/source-map/README.md:97:160    - Unknown word (OAAO)       -- SAAC,CAAD;WAAO,IAAI,OAAO,CAAP;EAAX;AAFR,EAFQ
examples/source-map/README.md:97:165    - Unknown word (CAAP)       -- CAAD;WAAO,IAAI,OAAO,CAAP;EAAX;AAFR,EAFQ;;;AAOV
examples/source-map/README.md:97:170    - Unknown word (EAAX)       -- WAAO,IAAI,OAAO,CAAP;EAAX;AAFR,EAFQ;;;AAOV,OAAO
examples/source-map/README.md:97:175    - Unknown word (AAFR)       -- IAAI,OAAO,CAAP;EAAX;AAFR,EAFQ;;;AAOV,OAAO,SAAC
examples/source-map/README.md:97:180    - Unknown word (EAFQ)       -- OAAO,CAAP;EAAX;AAFR,EAFQ;;;AAOV,OAAO,SAAC,MAAD
examples/source-map/README.md:97:187    - Unknown word (AAOV)       -- CAAP;EAAX;AAFR,EAFQ;;;AAOV,OAAO,SAAC,MAAD,KAAS
examples/source-map/README.md:97:202    - Unknown word (MAAD)       -- EAFQ;;;AAOV,OAAO,SAAC,MAAD,KAAS,OAAT;SACL,MAAM
examples/source-map/README.md:97:207    - Unknown word (KAAS)       -- AAOV,OAAO,SAAC,MAAD,KAAS,OAAT;SACL,MAAM,MAAN
examples/source-map/README.md:97:212    - Unknown word (OAAT)       -- OAAO,SAAC,MAAD,KAAS,OAAT;SACL,MAAM,MAAN,EAAc
examples/source-map/README.md:97:217    - Unknown word (SACL)       -- SAAC,MAAD,KAAS,OAAT;SACL,MAAM,MAAN,EAAc,OAAd
examples/source-map/README.md:97:222    - Unknown word (MAAM)       -- MAAD,KAAS,OAAT;SACL,MAAM,MAAN,EAAc,OAAd;AADK
examples/source-map/README.md:97:227    - Unknown word (MAAN)       -- KAAS,OAAT;SACL,MAAM,MAAN,EAAc,OAAd;AADK","sources
examples/source-map/README.md:97:242    - Unknown word (AADK)       -- MAAM,MAAN,EAAc,OAAd;AADK","sources":["webpack
examples/source-map/README.md:97:67     - Unknown word (AAEU)       -- mappings":";;;;;;;;;AAEU;;;AAAA;;AACV,OACE;EAAA
examples/source-map/README.md:97:80     - Unknown word (AACV)       -- ;;;;;;;AAEU;;;AAAA;;AACV,OACE;EAAA,MAAQ,IAAI
examples/source-map/README.md:97:85     - Unknown word (OACE)       -- ;;AAEU;;;AAAA;;AACV,OACE;EAAA,MAAQ,IAAI,CAAC
examples/source-map/README.md:97:90     - Unknown word (EAAA)       -- AAEU;;;AAAA;;AACV,OACE;EAAA,MAAQ,IAAI,CAAC,IAAb
examples/source-map/README.md:97:95     - Unknown word (MAAQ)       -- AAAA;;AACV,OACE;EAAA,MAAQ,IAAI,CAAC,IAAb;EACA
examples/stats-detailed/README.md:51:36     - Unknown word (depth)      -- 44] 29 bytes {179} [depth 0] [built] [code generated
examples/stats-detailed/README.md:57:15     - Unknown word (hashed)     -- 1 modules hashed, 0 from cache (1 variants
examples/stats-detailed/README.md:57:62     - Unknown word (average)    -- variants per module in average)
examples/stats-detailed/README.md:62:157    - Unknown word (calculations) -- cache, 0 additional calculations due to dependencies
examples/stats-detailed/README.md:62:40     - Unknown word (determined) -- of modules have been determined (1 no declared exports
examples/stats-detailed/README.md:62:91     - Unknown word (flagged)    -- exports, 0 not cached, 0 flagged uncacheable, 0 from
examples/stats-detailed/README.md:62:99     - Unknown word (uncacheable) -- not cached, 0 flagged uncacheable, 0 from cache, 0 from
examples/stats-detailed/README.md:66:32     - Unknown word (blocks)       -- queue items processed (1 blocks)
examples/stats-detailed/README.md:68:60     - Unknown word (forked)       -- merging (0 module sets, 0 forked, 0 + 0 modules forked
examples/stats-detailed/README.md:69:66     - Unknown word (reconnected)  -- connected chunk groups reconnected)
examples/stats-detailed/README.md:77:27     - Unknown word (timestamps)   -- File info in cache: 1 timestamps 1 hashes 1 timestamp
examples/stats-detailed/README.md:77:40     - Unknown word (hashes)       -- cache: 1 timestamps 1 hashes 1 timestamp hash combinations
examples/stats-detailed/README.md:77:64     - Unknown word (combinations) -- hashes 1 timestamp hash combinations
examples/top-level-await/Actions.js:11:4      - Unknown word (Placing)    -- // Placing it at top-level will
examples/top-level-await/Actions.js:13:27     - Unknown word (above)      -- see CreateUserAction above
examples/top-level-await/Actions.js:17:12     - Unknown word (basically)  -- // which basically makes it lazy-loaded
examples/top-level-await/Actions.js:18:38     - Unknown word (below)      -- AlternativeCreateUserAction below
examples/top-level-await/Actions.js:1:32      - Unknown word (whether)    -- doesn't care about whether a module is an async
examples/top-level-await/Actions.js:26:57     - Unknown word (much)       -- top-level doesn't make much sense
examples/top-level-await/Actions.js:26:62     - Unknown word (sense)      -- level doesn't make much sense
examples/top-level-await/Actions.js:27:55     - Unknown word (sequentially) -- will import modules sequentially.
examples/top-level-await/Actions.js:5:22      - Unknown word (awaits)     -- // These are normal awaits, because they are in
examples/top-level-await/README.md:110:6     - Unknown word (guideline)   -- As a guideline, you should prevent
examples/top-level-await/README.md:110:68    - Unknown word (become)      -- application entry point to become an async module when
examples/top-level-await/README.md:110:96    - Unknown word (compiling)   -- an async module when compiling for web targets.
examples/top-level-await/README.md:111:1     - Unknown word (Doing)       -- Doing async actions at application
examples/top-level-await/README.md:111:93    - Unknown word (negative)    -- pplication startup and may be negative for UX.
examples/top-level-await/README.md:112:106   - Unknown word (inform)      -- other indicators to inform the user about background
examples/top-level-await/README.md:112:74    - Unknown word (spinners)    -- the background and use spinners or other indicators
examples/top-level-await/README.md:112:92    - Unknown word (indicators)  -- use spinners or other indicators to inform the user about
examples/top-level-await/README.md:114:109   - Unknown word (becomes)     -- that your entry point becomes an async module.
examples/top-level-await/README.md:114:82    - Unknown word (fine)        -- WebWorkers, it may be fine that your entry point
examples/top-level-await/README.md:14:16     - Unknown word (Call)        -- export const dbCall = async data => {
examples/top-level-await/README.md:216:16    - Unknown word (wrap)        -- /******/ var wrapDeps = (deps) => (deps
examples/top-level-await/README.md:239:54    - Unknown word (Await)       -- = (module, body, hasAwait) => {
examples/top-level-await/README.md:245:17    - Unknown word (outer)       -- /******/ var outerResolve;
examples/top-level-await/README.md:2:61      - Unknown word (established) -- to the DB needs to be established before the module is
examples/top-level-await/README.md:36:30     - Unknown word (never)       -- `close` function is never used and will be removed
examples/top-level-await/README.md:50:60     - Unknown word (infect)      -- will continue and will infect all using modules as
examples/top-level-await/README.md:57:1      - Unknown word (Luckily)     -- Luckily there is a nice way
examples/top-level-await/README.md:57:20     - Unknown word (nice)        -- Luckily there is a nice way to break the chain
examples/top-level-await/README.md:60:115    - Unknown word (failures)    -- level-awaits) and handle failures.
examples/top-level-await/README.md:60:37     - Unknown word (awaited)     -- a Promise it can be awaited to wait for module evaluation
examples/top-level-await/README.md:60:48     - Unknown word (wait)        -- it can be awaited to wait for module evaluation
examples/top-level-await/README.md:62:1      - Unknown word (Handling)    -- Handling failures is an important
examples/top-level-await/README.md:63:43     - Unknown word (ways)        -- await there are more ways that a module evaluation
examples/top-level-await/README.md:64:17     - Unknown word (connecting)  -- In this example connecting to the DB may fail.
examples/top-level-await/README.md:79:51     - Unknown word (evaluating)  -- will start loading and evaluating on
examples/top-level-await/README.md:82:12     - Unknown word (Connecting)  -- // Here: Connecting to the DB starts when
examples/top-level-await/README.md:82:33     - Unknown word (starts)      -- Connecting to the DB starts when the application
examples/top-level-await/README.md:83:15     - Unknown word (inside)      -- // Placing it inside of an (async) function
examples/top-level-await/README.md:86:10     - Unknown word (Alternative) -- // see AlternativeCreateUserAction below
examples/top-level-await/README.md:95:25     - Unknown word (cases)       -- except in rare cases. It will import modules
examples/top-level-await/db-connection.js:15:15     - Unknown word (closes)     -- console.log("closes the DB connection")
examples/top-level-await/example.js:4:26      - Unknown word (John)       -- await CreateUserAction("John");
examples/typescript/README.md:10:25     - Unknown word (Junya)      -- const myName: string = "Junya";
examples/typescript/README.md:61:73     - Unknown word (pack)       -- function (to, from, pack) {
examples/typescript/test.filter.js:1:21      - Unknown word (Chaining)   -- var supportsOptionalChaining = require("../../test
examples/wasm-bindgen-esm/README.md:105:9     - Unknown word (offset)       -- let offset = 0;
examples/wasm-bindgen-esm/README.md:136:12    - Unknown word (Decoder)      -- const lTextDecoder = typeof TextDecoder
examples/wasm-bindgen-esm/README.md:138:70    - Unknown word (fatal)        -- { ignoreBOM: true, fatal: true });
examples/wasm-bindgen-esm/README.md:158:7     - Unknown word (finally)      -- } finally {
examples/wasm-bindgen-esm/README.md:1:73      - Unknown word (around)     -- ES module packaging around a Rust module, built
examples/wasm-bindgen-esm/README.md:322:44    - Unknown word (instantiate)  -- bytes) => (WebAssembly.instantiate(bytes, importsObj))
examples/wasm-bindgen-esm/README.md:331:150   - Unknown word (Falling)      -- application/wasm` MIME type. Falling back to `WebAssembly
examples/wasm-bindgen-esm/README.md:331:201   - Unknown word (slower)       -- instantiate` which is slower. Original error:\n"
examples/wasm-bindgen-esm/README.md:331:209   - Unknown word (Original)     -- instantiate` which is slower. Original error:\n", e);
examples/wasm-bindgen-esm/README.md:371:72    - Unknown word (webassembly)  -- javascript) 14.8 KiB (webassembly) 3.68 KiB (runtime)
examples/wasm-bindgen-esm/README.md:4:21      - Unknown word (underlying) -- When importing, the underlying WebAssembly module is
examples/wasm-bindgen-esm/README.md:4:69      - Unknown word (instantiated) -- module is downloaded and instantiated in a streaming way.
examples/wasm-bindgen-esm/README.md:65:18     - Unknown word (Memory)       -- let cachegetUint8Memory0 = null;
examples/wasm-bindgen-esm/README.md:67:120    - Unknown word (memory)       -- IMPORTED_MODULE_0__.memory.buffer) {
examples/wasm-bindgen-esm/README.md:73:12     - Unknown word (Encoder)      -- const lTextEncoder = typeof TextEncoder
examples/wasm-bindgen-esm/README.md:77:7      - Unknown word (encode)       -- const encodeString = (typeof cachedTextEnc
examples/wasm-bindgen-esm/README.md:90:33     - Unknown word (malloc)       -- passStringToWasm0(arg, malloc, realloc) {
examples/wasm-bindgen-esm/README.md:95:27     - Unknown word (subarray)     -- getUint8Memory0().subarray(ptr, ptr + buf.length
examples/wasm-bindgen-esm/example.js:1:10      - Unknown word (greeting)   -- import { greeting } from "./pkg";
examples/wasm-bindgen-esm/pkg/hi_wasm_bg.js:5:5       - Unknown word (cacheget)   -- let cachegetUint8Memory0 = null;
examples/wasm-bindgen-esm/pkg/hi_wasm_bg.js:91:15     - Unknown word (retptr)     -- const retptr = wasm.__wbindgen_add
examples/wasm-bindgen-esm/pkg/hi_wasm_bg.js:91:31     - Unknown word (wbindgen)   -- const retptr = wasm.__wbindgen_add_to_stack_pointer
examples/wasm-complex/example.js:3:4       - Unknown word (accessing)  -- // accessing memory
examples/wasm-simple/README.md:24:1      - Unknown word (timed)      -- timed("wasm factorial", (
examples/wasm-simple/example.js:4:2       - Unknown word (factorial)  -- factorial,
hot/dev-server.js:27:35     - Unknown word (restarting) -- Probably because of restarting the webpack-dev-server
hot/lazy-compilation-node.js:42:13     - Unknown word (communicating) -- "Problem communicating active modules to the
hot/log-apply-result.js:11:6      - Unknown word (unaccepted) -- var unacceptedModules = updatedModules
hot/log-apply-result.js:19:33     - Unknown word (couldn't)   -- The following modules couldn't be hot updated: (They
hot/log-apply-result.js:46:12     - Unknown word (Consider)   -- '[HMR] Consider using the optimization
hot/log-apply-result.js:8:40      - Unknown word (renewed)    -- | number)[] | null} renewedModules renewed modules
hot/log.js:22:92     - Unknown word (sufficient) -- logs when log level is sufficient
hot/log.js:67:22     - Unknown word (formatted)  -- * @returns {string} formatted error
hot/log.js:6:10      - Unknown word (dummy)      -- function dummy() {}
hot/only-dev-server.js:28:13     - Unknown word (Unaccepted) -- ignoreUnaccepted: true,
hot/only-dev-server.js:29:13     - Unknown word (Declined)   -- ignoreDeclined: true,
hot/only-dev-server.js:41:31     - Unknown word (declined)   -- Ignored an update to declined module " +
lib/APIPlugin.js:107:25    - Unknown word (uncaught)     -- expr: RuntimeGlobals.uncaughtErrorHandler,
lib/APIPlugin.js:160:11    - Unknown word (REPLACEMENTS) -- const REPLACEMENTS = getReplacements(
lib/APIPlugin.js:200:29    - Unknown word (HARMONY)      -- InitFragment.STAGE_HARMONY_IMPORTS,
lib/APIPlugin.js:251:31    - Unknown word (Presentational) -- parser.state.module.addPresentationalDependency(dep);
lib/APIPlugin.js:278:59    - Unknown word (Bailout)        -- .moduleConcatenationBailout =
lib/APIPlugin.js:35:100    - Unknown word (replacements) -- assign: boolean}>} replacements
lib/APIPlugin.js:37:13     - Unknown word (Replacements) -- function getReplacements(module, importMetaName
lib/APIPlugin.js:58:31     - Unknown word (Factories)    -- RuntimeGlobals.moduleFactories,
lib/APIPlugin.js:89:13     - Unknown word (chunkname)    -- __webpack_chunkname__: {
lib/AbstractMethodError.js:16:56     - Unknown word (Must)       -- ` ${method}` : ""}. Must be overridden.`;
lib/AbstractMethodError.js:16:64     - Unknown word (overridden) -- method}` : ""}. Must be overridden.`;
lib/AbstractMethodError.js:3:14      - Unknown word (Kopeykin)   -- Author Ivan Kopeykin @vankop
lib/AbstractMethodError.js:3:24      - Unknown word (vankop)     -- Author Ivan Kopeykin @vankop
lib/AbstractMethodError.js:3:9       - Unknown word (Ivan)       -- Author Ivan Kopeykin @vankop
lib/AsyncDependencyToInitialChunkError.js:17:35     - Unknown word (tied)       -- Module} module module tied to dependency
lib/AsyncDependencyToInitialChunkError.js:3:14      - Unknown word (Larkin)     -- Author Sean Larkin @thelarkinn
lib/AsyncDependencyToInitialChunkError.js:3:22      - Unknown word (thelarkinn) -- Author Sean Larkin @thelarkinn
lib/AsyncDependencyToInitialChunkError.js:3:9       - Unknown word (Sean)       -- Author Sean Larkin @thelarkinn
lib/BannerPlugin.js:92:59     - Unknown word (ADDITIONS)  -- PROCESS_ASSETS_STAGE_ADDITIONS;
lib/Cache.js:120:59    - Unknown word (restored)   -- the cache can only be restored when build dependencies
lib/Cache.js:140:65    - Unknown word (finishes)   -- signals when the call finishes
lib/Cache.js:73:66     - Unknown word (retrieved)  -- signals when the value is retrieved
lib/Cache.js:8:39      - Unknown word (Bail)       -- AsyncParallelHook, AsyncSeriesBailHook, SyncHook } = require
lib/CacheFacade.js:243:34    - Unknown word (represents) -- {Etag} an etag that represents both
lib/CaseSensitiveModulesWarning.js:55:57     - Unknown word (detected)   -- modules modules that were detected
lib/CaseSensitiveModulesWarning.js:61:58     - Unknown word (differ)     -- with names that only differ in casing.
lib/CaseSensitiveModulesWarning.js:62:10     - Unknown word (lead)       -- This can lead to unexpected behavior
lib/CaseSensitiveModulesWarning.js:63:40     - Unknown word (identifiers) -- Compare these module identifiers:
lib/Chunk.js:10:9      - Unknown word (intersect)  -- const { intersect } = require("./util
lib/Chunk.js:11:7      - Unknown word (Sortable)   -- const SortableSet = require("./util
lib/Chunk.js:18:25     - Unknown word (Deprecation) -- const { createArrayToSetDeprecationSet } = require("./util
lib/Chunk.js:18:60     - Unknown word (deprecation) -- } = require("./util/deprecation");
lib/Chunk.js:200:27    - Unknown word (comparison)    -- returns {-1|0|1} the comparison result
lib/Chunk.js:266:2     - Unknown word (integrate)     -- integrate(otherChunk) {
lib/Chunk.js:270:23    - Unknown word (INTEGRATE)     -- "DEP_WEBPACK_CHUNK_INTEGRATE"
lib/Chunk.js:513:53    - Unknown word (said)          -- amount of groups that the said chunk is in
lib/Chunk.js:64:25     - Unknown word (encapsulation) -- A Chunk is a unit of encapsulation for Modules.
lib/Chunk.js:65:71     - Unknown word (completes)     -- emitted when the build completes.
lib/Chunk.js:69:68     - Unknown word (subclasses)    -- created, is optional (for subclasses)
lib/ChunkGraph.js:1014:87   - Unknown word (modifies)      -- disconnectChunkAndModule modifies
lib/ChunkGraph.js:115:40    - Unknown word (especially)    -- from the shared cache (especially for sorting)
lib/ChunkGraph.js:115:9     - Unknown word (benefit)       -- // to benefit from the shared cache
lib/ChunkGraph.js:1456:38   - Unknown word (shortened)     -- string} renderedHash the shortened hash for rendering
lib/ChunkGraph.js:1470:124  - Unknown word (Ownership)     -- ChunkGraph when transferOwnership not false)
lib/ChunkGraph.js:1470:66   - Unknown word (ownership)     -- requirements to be added (ownership of this Set is given
lib/ChunkGraph.js:1484:18   - Unknown word (cloning)       -- // TODO avoid cloning item and track ownership
lib/ChunkGraph.js:162:42    - Unknown word (sortable)      -- Module>} modules the sortable Set to get the size
lib/ChunkGraph.js:17:8      - Unknown word (Comparators) -- concatComparators,
lib/ChunkGraph.js:211:13    - Unknown word (Hashes)        -- this.graphHashes = undefined;
lib/ChunkGraph.js:320:49    - Unknown word (TRANSITIVE)    -- ModuleGraphConnection.TRANSITIVE_ONLY) {
lib/ChunkGraph.js:354:85    - Unknown word (anyway)        -- modified cgc.modules anyway
lib/ChunkGraph.js:426:35    - Unknown word (replaced)      -- Module} oldModule the replaced module
lib/ChunkGraph.js:427:35    - Unknown word (replacing)     -- Module} newModule the replacing module
lib/ChunkGraph.js:57:29     - Unknown word (Overhead)    -- property {number=} chunkOverhead constant overhead for
lib/ChunkGraph.js:58:34     - Unknown word (Multiplicator) -- {number=} entryChunkMultiplicator multiplicator for initial
lib/ChunkGraph.js:58:48     - Unknown word (multiplicator) -- entryChunkMultiplicator multiplicator for initial chunks
lib/ChunkGraph.js:648:13    - Unknown word (Overwritten)   -- this._getOverwrittenModuleSourceTypes(module
lib/ChunkGraph.js:984:6     - Unknown word (Decide)        -- // Decide for one name (deterministic
lib/ChunkGraph.js:991:8     - Unknown word (shortest)      -- // shortest name
lib/ChunkGroup.js:112:67    - Unknown word (occur)       -- addingOptions will occur.
lib/ChunkGroup.js:173:5     - Unknown word (Performs)    -- * Performs an unshift of a specific
lib/ChunkGroup.js:174:38    - Unknown word (unshifted)   -- Chunk} chunk chunk being unshifted
lib/ChunkGroup.js:175:40    - Unknown word (attempted)   -- boolean} returns true if attempted chunk shift is accepted
lib/ChunkGroup.js:190:5     - Unknown word (inserts)     -- * inserts a chunk before another
lib/ChunkGroup.js:192:52    - Unknown word (marking)     -- Placeholder/target chunk marking new chunk insertion
lib/ChunkGroup.js:193:53    - Unknown word (successful)  -- true if insertion was successful
lib/ChunkGroup.js:212:37    - Unknown word (pushed)      -- into ChunkGroup. Is pushed on or prepended
lib/ChunkGroup.js:447:30    - Unknown word (intermediary) -- remove this chunk as "intermediary" and connect
lib/ChunkGroup.js:461:19    - Unknown word (guaranteed)   -- * as it is not guaranteed that `this._parents
lib/ChunkGroup.js:461:60    - Unknown word (anything)     -- this._parents` contains anything.
lib/ChunkGroup.js:46:6      - Unknown word (convenience) -- * A convenience method used to sort
lib/ChunkGroup.js:49:41     - Unknown word (determine)   -- a sorting index to determine order
lib/ChunkGroup.js:545:5     - Unknown word (Gets)         -- * Gets the top-down index of
lib/CleanPlugin.js:152:48    - Unknown word (Kept)       -- : boolean | void} isKept check if the entry is
lib/CleanPlugin.js:28:107    - Unknown word (kept)       -- file/directory will be kept during cleaning, returning
lib/CleanPlugin.js:28:119    - Unknown word (cleaning)   -- will be kept during cleaning, returning false will
lib/CleanPlugin.js:28:65     - Unknown word (returning)  -- boolean | void>} keep when returning true the file/directory
lib/CleanPlugin.js:344:46    - Unknown word (happens)    -- external modification happens while the compiler is
lib/CleanPlugin.js:54:4      - Unknown word (marge)      -- * marge assets map 2 into map
lib/CleanPlugin.js:70:109    - Unknown word (shouldn't)  -- filenames of the assets that shouldn't be there
lib/CompatibilityPlugin.js:56:49     - Unknown word (delegator)  -- browserify style require delegator: "require(o, !0)"
lib/Compilation.js:1003:18   - Unknown word (blocking)    -- * Means value blocking key from finishing.
lib/Compilation.js:1003:36   - Unknown word (finishing)   -- value blocking key from finishing.
lib/Compilation.js:1003:6    - Unknown word (Means)       -- * Means value blocking key from
lib/Compilation.js:1007:22   - Unknown word (During)      -- this.creatingModuleDuringBuild = new WeakMap(
lib/Compilation.js:1066:16   - Unknown word (Counters)    -- this.childrenCounters = {};
lib/Compilation.js:1082:17   - Unknown word (Executed)    -- this.buildTimeExecutedModules = new WeakSet
lib/Compilation.js:1136:29   - Unknown word (shallow)     -- We use this method of shallow cloning this object
lib/Compilation.js:1140:32   - Unknown word (guard)       -- eslint-disable-next-line guard-for-in
lib/Compilation.js:1178:38   - Unknown word (facade)      -- CacheFacade} the cache facade instance
lib/Compilation.js:1361:5    - Unknown word (Fetches)     -- * Fetches a module from a compilation
lib/Compilation.js:1371:5    - Unknown word (Attempts)    -- * Attempts to search for a module
lib/Compilation.js:1373:33   - Unknown word (attempt)     -- returns {Module|undefined} attempt to search for module
lib/Compilation.js:13:6      - Unknown word (Waterfall)  -- SyncWaterfallHook,
lib/Compilation.js:1519:17   - Unknown word (Transitive)  -- let inProgressTransitive = 1;
lib/Compilation.js:1534:42   - Unknown word (Parallelism) -- cessDependenciesQueue.increaseParallelism();
lib/Compilation.js:1541:35   - Unknown word (closures)    -- errors are created inside closures that keep a reference
lib/Compilation.js:1542:9    - Unknown word (leaking)     -- // leaking the Compilation object
lib/Compilation.js:1709:10   - Unknown word (Slow)        -- // Slow path
lib/Compilation.js:1728:30   - Unknown word (heuristic)   -- Here webpack is using heuristic that assumes
lib/Compilation.js:1728:45   - Unknown word (assumes)     -- using heuristic that assumes
lib/Compilation.js:1729:8    - Unknown word (mostly)      -- // mostly esm dependencies would
lib/Compilation.js:2010:47   - Unknown word (throwing)    -- cancel the cycle by throwing
lib/Compilation.js:2208:63   - Unknown word (followed)    -- dependency that should be followed
lib/Compilation.js:2312:41   - Unknown word (rebuilt)     -- module module to be rebuilt
lib/Compilation.js:2313:68   - Unknown word (rebuilding)  -- when module finishes rebuilding
lib/Compilation.js:2345:21   - Unknown word (unfreeze)    -- this.moduleGraph.unfreeze();
lib/Compilation.js:2378:9    - Unknown word (infected)    -- const infectedModules = new Set();
lib/Compilation.js:2491:19   - Unknown word (Infected)    -- const directOnlyInfectedModules = new Set();
lib/Compilation.js:2663:27   - Unknown word (Calculator)  -- const ParallelismFactorCalculator = require("./util/Parallelism
lib/Compilation.js:266:66    - Unknown word (term)       -- the asset can be long term cached forever (contains
lib/Compilation.js:2693:14   - Unknown word (restoring)   -- profile.restoringStartTime,
lib/Compilation.js:2699:13   - Unknown word (influence)   -- const influence = (end - start) / profile
lib/Compilation.js:272:82    - Unknown word (potentially) -- from a source file (potentially transformed), the original
lib/Compilation.js:274:101   - Unknown word (towards)     -- development and doesn't count towards user-facing assets
lib/Compilation.js:275:63    - Unknown word (ships)       -- eReplacement true, when asset ships data for updating an
lib/Compilation.js:277:69    - Unknown word (pointers)    -- } related object of pointers to other assets, keyed
lib/Compilation.js:277:95    - Unknown word (keyed)       -- pointers to other assets, keyed by type of relation
lib/Compilation.js:2999:15   - Unknown word (Depths)      -- this.assignDepths(entryModules);
lib/Compilation.js:3080:66   - Unknown word (independently) -- name}' and '${runtime}' independently on the same page with
lib/Compilation.js:3167:31   - Unknown word (hashing)       -- logger.time("module hashing");
lib/Compilation.js:3228:90   - Unknown word (sealing)       -- Compilation.assets after sealing the Compilation.
lib/Compilation.js:3229:23   - Unknown word (earlier)       -- Do changes to assets earlier, e. g. in Compilation
lib/Compilation.js:3230:25   - Unknown word (appropriate)   -- Make sure to select an appropriate stage from Compilation
lib/Compilation.js:3235:15   - Unknown word (summarize)     -- this.summarizeDependencies();
lib/Compilation.js:3717:12   - Unknown word (internals)     -- // Setup internals
lib/Compilation.js:3834:56   - Unknown word (exist)         -- named chunks already exist and reuse that chunk
lib/Compilation.js:386:44    - Unknown word (moved)       -- normalModuleLoader was moved to NormalModule.getCompilatio
lib/Compilation.js:3941:35   - Unknown word (relationship)  -- Module} module module relationship for removal
lib/Compilation.js:4011:7    - Unknown word (Grab)          -- // Grab all chunks from the
lib/Compilation.js:4191:42   - Unknown word (compilations)  -- hashing: hash child compilations");
lib/Compilation.js:4219:31   - Unknown word (according)     -- order runtime chunks according to referenced between
lib/Compilation.js:4270:32   - Unknown word (chains)        -- sure to follow these chains
lib/Compilation.js:4289:36   - Unknown word (ordering)      -- ensures deterministic ordering, since referencedBy
lib/Compilation.js:4310:56   - Unknown word (avoided)       -- other and should be avoided.`);
lib/Compilation.js:4553:97   - Unknown word (converting)    -- asset source or function converting old to new
lib/Compilation.js:4563:6    - Unknown word (Called)        -- `Called Compilation.updateAsset
lib/Compilation.js:46:13     - Unknown word (Hashing)    -- const ModuleHashingError = require("./ModuleHashi
lib/Compilation.js:4873:87   - Unknown word (repeated)      -- additional cost because of repeated access
lib/Compilation.js:4923:23   - Unknown word (interpolated)  -- * @returns {string} interpolated path
lib/Compilation.js:4988:83   - Unknown word (however)       -- webpack inside of webpack however as
lib/Compilation.js:4989:81   - Unknown word (copies)        -- desired) applied. It copies all hooks, plugins
lib/Compilation.js:5415:4    - Unknown word (Workaround)    -- // Workaround for typescript as it
lib/Compilation.js:5415:61   - Unknown word (overloading)   -- doesn't support function overloading in jsdoc within a class
lib/Compilation.js:5438:43   - Unknown word (favor)         -- modifyHash was removed in favor of Compilation.hooks
lib/Compilation.js:5480:34   - Unknown word (treated)       -- assets should not be treated as complete.
lib/Compilation.js:5502:81   - Unknown word (prefixes)      -- polyfills or vendor-prefixes.
lib/Compilation.js:5507:65   - Unknown word (omitting)      -- g. by minimizing or omitting whitespace.
lib/Compilation.js:5512:20   - Unknown word (tooling)       -- * Add development tooling to assets, e. g. by
lib/Compilation.js:5512:48   - Unknown word (extracting)    -- to assets, e. g. by extracting a SourceMap.
lib/Compilation.js:5514:38   - Unknown word (TOOLING)       -- PROCESS_ASSETS_STAGE_DEV_TOOLING = 500;
lib/Compilation.js:5527:34   - Unknown word (SUMMARIZE)     -- PROCESS_ASSETS_STAGE_SUMMARIZE = 1000;
lib/Compilation.js:5530:48   - Unknown word (generating)    -- the assets, e. g. by generating real hashes of the asset
lib/Compilation.js:5535:55   - Unknown word (preparing)     -- existing assets, e. g. by preparing a compressed (gzip)
lib/Compilation.js:5540:4    - Unknown word (Analyse)       -- * Analyse existing assets.
lib/Compilation.js:5542:34   - Unknown word (ANALYSE)       -- PROCESS_ASSETS_STAGE_ANALYSE = 4000;
lib/Compilation.js:5545:24   - Unknown word (reporting)     -- Creating assets for reporting purposes.
lib/Compilation.js:5545:34   - Unknown word (purposes)      -- assets for reporting purposes.
lib/Compilation.js:592:1     - Unknown word (BREAKING)    -- BREAKING CHANGE: Asset processing
lib/Compilation.js:604:16    - Unknown word (interceptor) -- intercept(interceptor) {
lib/Compilation.js:638:4     - Unknown word (succeed)     -- succeedModule: new SyncHook
lib/Compilation.js:664:10    - Unknown word (Rebuilding)  -- finishRebuildingModule: new AsyncSeriesHook
lib/Compilation.js:666:4     - Unknown word (unseal)      -- unseal: new SyncHook([]),
lib/Compilation.js:67:15     - Unknown word (Clever)     -- const { cachedCleverMerge } = require(".
lib/Compilation.js:744:4     - Unknown word (revive)      -- reviveModules: new SyncHook
lib/Compilation.js:79:2      - Unknown word (soon)       -- soonFrozenObjectDeprecation
lib/Compilation.js:80:8      - Unknown word (Fake)       -- createFakeHook
lib/Compilation.js:921:20    - Unknown word (Timestamps)  -- if (compiler.fileTimestamps) {
lib/Compilation.js:941:8     - Unknown word (bail)        -- this.bail = (options && options
lib/Compilation.js:972:4     - Unknown word (parallelism) -- parallelism: options.parallelism
lib/Compilation.js:982:25    - Unknown word (Factorize)   -- * @type {AsyncQueue<FactorizeModuleOptions, string
lib/Compilation.js:983:8     - Unknown word (factorize)   -- this.factorizeQueue = new AsyncQueue
lib/Compiler.js:1237:7    - Unknown word (taps)        -- ].taps =
lib/Compiler.js:209:36    - Unknown word (weirdly)    -- following hooks are weirdly located here
lib/Compiler.js:209:44    - Unknown word (located)    -- following hooks are weirdly located here
lib/Compiler.js:281:4     - Unknown word (nwjs)       -- nwjs: null,
lib/Compiler.js:513:11    - Unknown word (Compiled)   -- const onCompiled = (err, _compilation
lib/Compiler.js:693:14    - Unknown word (Insensitive) -- const caseInsensitiveMap = new Map();
lib/Compiler.js:706:16    - Unknown word (recheck)     -- // So we recheck if the file is immutable
lib/Compiler.js:731:23    - Unknown word (Generation)  -- const targetFileGeneration =
lib/Compiler.js:764:63    - Unknown word (differs)     -- writing to file that only differs in casing or query string
lib/Compiler.js:765:64    - Unknown word (insensitive) -- corrupted files on case-insensitive file systems.
lib/Compiler.js:882:40    - Unknown word (allocated)   -- allows to GC all memory allocated by the Source
lib/Compiler.js:953:65    - Unknown word (intact)      -- last compilation say intact on disk (they are not
lib/Compiler.js:960:72    - Unknown word (comparing)   -- file content without comparing when file exist
lib/Compiler.js:964:15    - Unknown word (wrote)       -- // We wrote to this file before
lib/Compiler.js:99:135    - Unknown word (Similar)    -- }[] | undefined) }} SimilarEntry */
lib/ConcatenationScope.js:106:16    - Unknown word (appended)     -- // a "._" is appended to allow "delete ..
lib/ConcatenationScope.js:14:34     - Unknown word (Concatenated) -- {import("./optimize/ConcatenatedModule").ConcatenatedModuleInf
lib/ConcurrentCompilationError.js:16:21     - Unknown word (twice)       -- "You ran Webpack twice. Each instance only
lib/ConcurrentCompilationError.js:3:16      - Unknown word (Nazarjev)   -- Author Maksim Nazarjev @acupofspirt
lib/ConcurrentCompilationError.js:3:26      - Unknown word (acupofspirt) -- Author Maksim Nazarjev @acupofspirt
lib/ConcurrentCompilationError.js:3:9       - Unknown word (Maksim)     -- Author Maksim Nazarjev @acupofspirt
lib/ConstPlugin.js:201:40    - Unknown word (loose)      -- var f, x, y, z;   (in loose mode)
lib/ConstPlugin.js:336:16    - Unknown word (returnfalse) -- // returnfalse&&'foo'
lib/ConstPlugin.js:69:10     - Unknown word (Hoisted)    -- const getHoistedDeclarations = (branch
lib/ConstPlugin.js:86:21     - Unknown word (consequent) -- stack.push(node.consequent);
lib/ContextModule.js:1219:11   - Unknown word (penalty)      -- // base penalty
lib/ContextModule.js:166:5     - Unknown word (Assuming)   -- * Assuming this module is in the
lib/ContextModule.js:167:40    - Unknown word (Usually)    -- module from the factory. Usually updates internal references
lib/ContextModule.js:179:79    - Unknown word (freeing)    -- references to allow freeing some memory.
lib/ContextModule.js:189:56    - Unknown word (slsh)       -- do we need to strip a slsh
lib/ContextModule.js:216:20    - Unknown word (nonrecursive) -- identifier += "|nonrecursive";
lib/ContextModule.js:406:15    - Unknown word (enforced)     -- // build if enforced
lib/ContextModule.js:456:7     - Unknown word (enhance)      -- // enhance dependencies with meta
lib/ContextModule.js:582:64    - Unknown word (explicitly)   -- clone of dependencies explicitly
lib/ContextModule.js:612:6     - Unknown word (bitfield)     -- // bitfield
lib/ContextModule.js:74:97     - Unknown word (mangled)    -- from modules (won't be mangled)
lib/ContextModule.js:818:24    - Unknown word (popping)      -- uncaught exception popping up in devtools
lib/ContextModuleFactory.js:319:9     - Unknown word (recursion)    -- let recursionStack;
lib/ContextModuleFactory.js:423:13    - Unknown word (flattened)    -- const flattenedResult = [];
lib/ContextModuleFactory.js:61:9      - Unknown word (Intercepting) -- "Intercepting fake hook ContextModuleFactor
lib/ContextReplacementPlugin.js:127:13    - Unknown word (orig)       -- const origResource = result.resource
lib/ContextReplacementPlugin.js:16:62     - Unknown word (determines) -- regular expression that determines which files will be
lib/ContextReplacementPlugin.js:18:72     - Unknown word (searched)   -- all subdirectories are searched for matches
lib/CssModule.js:3:19      - Unknown word (Akait)      -- Author Alexander Akait @alexander-akait
lib/CssModule.js:3:26      - Unknown word (alexander)  -- Author Alexander Akait @alexander-akait
lib/CssModule.js:3:36      - Unknown word (akait)      -- Alexander Akait @alexander-akait
lib/CssModule.js:3:9       - Unknown word (Alexander)  -- Author Alexander Akait @alexander-akait
lib/DefinePlugin.js:146:66    - Unknown word (unneeded)   -- undefined: unknown, null: unneeded)
lib/DefinePlugin.js:148:52    - Unknown word (evaluates)  -- converted to string that evaluates
lib/DefinePlugin.js:282:16    - Unknown word (Replaced)   -- logger.debug(`Replaced "${key}" with "${strCode
lib/DefinePlugin.js:495:27    - Unknown word (endless)    -- * to prevent an endless recursion
lib/DelegatedModule.js:13:7      - Unknown word (Delegated)  -- const DelegatedSourceDependency = require
lib/DependenciesBlock.js:22:55     - Unknown word (classes)    -- class for all Module classes in webpack. It describes
lib/DependenciesBlock.js:25:71     - Unknown word (inherited)  -- DependenciesBlock is inherited by two types of classes
lib/DependenciesBlock.js:47:5      - Unknown word (Adds)       -- * Adds a DependencyBlock to
lib/DependenciesBlock.js:59:23     - Unknown word (pointing)   -- * This is an "edge" pointing to another "node" on
lib/DependenciesBlock.js:78:5      - Unknown word (Removes)    -- * Removes all dependencies and
lib/Dependency.js:123:46    - Unknown word (typical)    -- dependency category, typical categories are "commonjs
lib/Dependency.js:360:66    - Unknown word (carries)    -- Dependency no longer carries graph specific information
lib/Dependency.js:63:78     - Unknown word (blends)     -- because another export blends over it
lib/Dependency.js:69:73     - Unknown word (unaffected) -- exports = true, list of unaffected exports
lib/Dependency.js:70:64     - Unknown word (prior)      -- hideExports list of maybe prior exposed, but now hidden
lib/Dependency.js:86:28     - Unknown word (transitive) -- TRANSITIVE = Symbol("transitive");
lib/DependencyTemplates.js:46:42     - Unknown word (contributor) -- part additional hash contributor
lib/DllReferencePlugin.js:77:14     - Unknown word (malformed)  -- // or malformed manifest files don't
lib/DynamicEntryPlugin.js:3:17      - Unknown word (Kanezawa)   -- Author Naoyuki Kanezawa @nkzawa
lib/DynamicEntryPlugin.js:3:27      - Unknown word (nkzawa)     -- Author Naoyuki Kanezawa @nkzawa
lib/DynamicEntryPlugin.js:3:9       - Unknown word (Naoyuki)    -- Author Naoyuki Kanezawa @nkzawa
lib/EntryOptionPlugin.js:15:61     - Unknown word (tapping)    -- compiler instance one is tapping into
lib/EntryPlugin.js:18:60     - Unknown word (passing)    -- options entry options (passing a string is deprecated
lib/Entrypoint.js:16:15     - Unknown word (serves)     -- * Entrypoint serves as an encapsulation
lib/Entrypoint.js:17:40     - Unknown word (represent)  -- single ChunkGroup. They represent all bundles that need
lib/Entrypoint.js:18:54     - Unknown word (architectures) -- Multi-page application architectures will typically yield
lib/Entrypoint.js:19:31     - Unknown word (whereas)       -- of the compilation, whereas a Single Page App may
lib/EnvironmentNotSupportAsyncWarning.js:26:43     - Unknown word (appear)     -- environment does not appear to support 'async/await
lib/EnvironmentNotSupportAsyncWarning.js:3:21      - Unknown word (ahabhgk)    -- Author Gengkun He @ahabhgk
lib/EnvironmentNotSupportAsyncWarning.js:3:9       - Unknown word (Gengkun)    -- Author Gengkun He @ahabhgk
lib/EnvironmentPlugin.js:3:10      - Unknown word (Simen)      -- Authors Simen Brekken @simenbrekken
lib/EnvironmentPlugin.js:3:16      - Unknown word (Brekken)    -- Authors Simen Brekken @simenbrekken, Einar
lib/EnvironmentPlugin.js:3:2       - Unknown word (Authors)    -- Authors Simen Brekken @simenbrekken
lib/EnvironmentPlugin.js:3:25      - Unknown word (simenbrekken) -- Authors Simen Brekken @simenbrekken, Einar Löve @einarlove
lib/EnvironmentPlugin.js:3:39      - Unknown word (Einar)        -- Brekken @simenbrekken, Einar Löve @einarlove
lib/EnvironmentPlugin.js:3:45      - Unknown word (Löve)         -- simenbrekken, Einar Löve @einarlove
lib/EnvironmentPlugin.js:3:51      - Unknown word (einarlove)    -- simenbrekken, Einar Löve @einarlove
lib/EvalSourceMapDevToolPlugin.js:159:54    - Unknown word (Duplicates) -- ModuleFilenameHelpers.replaceDuplicates(
lib/EvalSourceMapDevToolPlugin.js:187:64    - Unknown word (workaround) -- /${moduleId}\n`; // workaround for chrome bug
lib/ExportsInfo.js:134:16    - Unknown word (presorted)  -- // a lot of presorted items
lib/ExportsInfo.js:142:46    - Unknown word (unlisted)   -- the export info of unlisted exports
lib/ExportsInfo.js:382:35    - Unknown word (Conditionally) -- otherExportsInfo.setUsedConditionally(
lib/ExportsInfo.js:577:5     - Unknown word (Relevant)      -- getRelevantExports(runtime) {
lib/ExportsInfo.js:617:27    - Unknown word (representing)  -- returns {string} key representing the usage
lib/ExportsInfo.js:636:35    - Unknown word (equally)       -- boolean} true, when equally used
lib/ExportsInfo.js:638:4     - Unknown word (Equally)       -- isEquallyUsed(runtimeA, runtimeB
lib/ExportsInfo.js:852:29    - Unknown word (knows)         -- null: only the runtime knows if it is provided
lib/ExportsInfo.js:89:41     - Unknown word (owned)      -- Iterable<ExportInfo>} all owned exports in any order
lib/ExternalModule.js:232:28    - Unknown word (recomputed) -- param {string=} ident recomputed ident
lib/ExternalModule.js:294:45    - Unknown word (remapping)  -- undefined} the module remapping
lib/ExternalModule.js:296:21    - Unknown word (Remapping)  -- const generateModuleRemapping = (
lib/ExternalModuleFactoryPlugin.js:40:15     - Unknown word (EXTERNALS)  -- "DEP_WEBPACK_EXTERNALS_FUNCTION_PARAMETERS
lib/FalseIIFEUmdWarning.js:15:327    - Unknown word (choosing)     -- output.iife' to 'true' or choosing a different 'library
lib/FalseIIFEUmdWarning.js:15:57     - Unknown word (incompatible) -- iife' to 'false' is incompatible with 'output.library
lib/FalseIIFEUmdWarning.js:3:14      - Unknown word (Pratim)     -- Author Arka Pratim Chaudhuri @arkapratimc
lib/FalseIIFEUmdWarning.js:3:21      - Unknown word (Chaudhuri)  -- Author Arka Pratim Chaudhuri @arkapratimc
lib/FalseIIFEUmdWarning.js:3:32      - Unknown word (arkapratimc) -- Arka Pratim Chaudhuri @arkapratimc
lib/FalseIIFEUmdWarning.js:3:9       - Unknown word (Arka)       -- Author Arka Pratim Chaudhuri @arkapratimc
lib/FileSystemInfo.js:1032:28   - Unknown word (Logged)     -- typedef {Set<string>} LoggedPaths */
lib/FileSystemInfo.js:1061:9    - Unknown word (logged)     -- this._loggedPaths = logger ? new
lib/FileSystemInfo.js:1213:13   - Unknown word (About)      -- this._warnAboutExperimentalEsmTracking
lib/FileSystemInfo.js:13:7      - Unknown word (Stacked)    -- const StackedCacheMap = require("
lib/FileSystemInfo.js:1901:49   - Unknown word (introspect) -- offer a (nice) way to introspect the ESM dependency graph
lib/FileSystemInfo.js:1903:100  - Unknown word (expensive)  -- But this can lead to expensive and incorrect tracking
lib/FileSystemInfo.js:1903:20   - Unknown word (effort)     -- "As best effort webpack parses the ESM
lib/FileSystemInfo.js:1903:35   - Unknown word (parses)     -- best effort webpack parses the ESM files to guess
lib/FileSystemInfo.js:1903:59   - Unknown word (guess)      -- parses the ESM files to guess dependencies. But this
lib/FileSystemInfo.js:1968:58   - Unknown word (unable)     -- dependencies as we were unable to assign it to any
lib/FileSystemInfo.js:219:19    - Unknown word (allocation) -- // avoids allocation of queue
lib/FileSystemInfo.js:2230:79   - Unknown word (stay)       -- else to keep jobs to stay a SMI (v8)
lib/FileSystemInfo.js:2750:28   - Unknown word (occurred)   -- this._log(path, "error occurred: %s", err);
lib/FileSystemInfo.js:2783:21   - Unknown word (didn't)     -- current ? "it didn't exist before" : "it
lib/FileSystemInfo.js:2803:21   - Unknown word (happened)   -- // If a change happened after starting reading
lib/FileSystemInfo.js:3280:26   - Unknown word (Ignoring)   -- (this.logger).warn(`Ignoring ${path} for hashing
lib/FileSystemInfo.js:3393:41   - Unknown word (timestamping) -- any immutable path for timestamping
lib/FileSystemInfo.js:3967:20   - Unknown word (interested)   -- // we are only interested in existence of this
lib/FileSystemInfo.js:49:7      - Unknown word (RBDT)       -- const RBDT_RESOLVE_CJS = 0;
lib/FileSystemInfo.js:619:18    - Unknown word (Unshared)   -- this._statItemsUnshared = 0;
lib/FileSystemInfo.js:794:15    - Unknown word (unshared)   -- // It's a unshared snapshot
lib/FileSystemInfo.js:887:37    - Unknown word (joining)    -- T, K> | undefined} b joining map
lib/FileSystemInfo.js:888:25    - Unknown word (joined)     -- returns {Map<T, K>} joined map
lib/FileSystemInfo.js:919:4     - Unknown word (Finding)    -- * Finding file or directory to
lib/FileSystemInfo.js:920:45    - Unknown word (managing)   -- managedPath path that is managing by {@link FileSystemInfo
lib/FileSystemInfo.js:935:35    - Unknown word (disallowed) -- // hidden files are disallowed as managed items
lib/FileSystemInfo.js:948:16    - Unknown word (backslash)  -- case 92: // backslash
lib/FlagDependencyExportsPlugin.js:122:21    - Unknown word (Specs)      -- const exportsSpecsFromDependencies = new
lib/FlagDependencyExportsPlugin.js:263:15    - Unknown word (Recalculate) -- // Recalculate target exportsInfo
lib/HotModuleReplacementPlugin.js:249:19    - Unknown word (Stuff)      -- before: "NodeStuffPlugin"
lib/HotModuleReplacementPlugin.js:26:17     - Unknown word (Subset)     -- const { find, isSubset } = require("./util
lib/HotModuleReplacementPlugin.js:311:48    - Unknown word (targeted)   -- HMR plugin only to the targeted compiler
lib/HotModuleReplacementPlugin.js:653:58    - Unknown word (overlapping) -- that it's not in an overlapping runtime combination
lib/IgnoreErrorModuleFactory.js:15:4      - Unknown word (Ignores)    -- * Ignores error when module is
lib/InvalidDependenciesModuleWarning.js:23:34     - Unknown word (broken)     -- dependencies may lead to broken watching and caching
lib/InvalidDependenciesModuleWarning.js:24:86     - Unknown word (globs)      -- paths and converting globs into context dependencies
lib/InvalidDependenciesModuleWarning.js:27:1      - Unknown word (Globs)      -- Globs: They are not supported
lib/LoaderOptionsPlugin.js:34:15     - Unknown word (mocking)    -- // This is mocking a RegExp object which
lib/LoaderOptionsPlugin.js:38:21     - Unknown word (Mock)       -- const defaultTrueMockRegExp = {
lib/MainTemplate.js:278:9     - Unknown word (Vars)       -- localVars: new SyncWaterfallHook
lib/Module.js:391:37    - Unknown word (BAILOUT)    -- MODULE_OPTIMIZATION_BAILOUT"
lib/Module.js:577:74    - Unknown word (presentation) -- graph. It's only for presentation.
lib/Module.js:700:76    - Unknown word (ignoring)     -- accessible from "chunk" when ignoring "ignoreChunk"
lib/Module.js:702:4     - Unknown word (Accessible)   -- isAccessibleInChunk(chunkGraph, chunk
lib/Module.js:877:6     - Unknown word (Better)       -- // Better override this method
lib/Module.js:89:89     - Unknown word (calculated) -- will be automatically calculated from sources and runtimeRequi
lib/ModuleFilenameHelpers.js:105:73    - Unknown word (interpreted) -- prevent them from being interpreted as special characters
lib/ModuleFilenameHelpers.js:115:56    - Unknown word (obtained)    -- accessed. This is only obtained by setting a function
lib/ModuleFilenameHelpers.js:23:27     - Unknown word (LOADERS)    -- ModuleFilenameHelpers.ALL_LOADERS_RESOURCE = "[all-loaders
lib/ModuleFilenameHelpers.js:260:39    - Unknown word (weird)       -- : consider removing weird double placeholders
lib/ModuleFilenameHelpers.js:260:52    - Unknown word (placeholders) -- removing weird double placeholders
lib/ModuleFilenameHelpers.js:285:38    - Unknown word (duplicates)   -- array the array with duplicates to be replaced
lib/ModuleGraph.js:118:9     - Unknown word (unassigned) -- this._unassignedConnections = undefined
lib/ModuleGraph.js:568:70    - Unknown word (bailouts)   -- loutFunction)[]} optimization bailouts
lib/ModuleGraph.js:634:20    - Unknown word (worst)      -- * null: unknown, worst case should be assumed
lib/ModuleGraph.js:634:41    - Unknown word (assumed)    -- worst case should be assumed.
lib/ModuleGraphConnection.js:14:73     - Unknown word (transitively) -- modules are connected transitively.
lib/ModuleGraphConnection.js:42:31     - Unknown word (intersected)  -- returns {ConnectionState} intersected
lib/ModuleGraphConnection.js:81:8      - Unknown word (explanations) -- this.explanations = undefined;
lib/ModuleInfoHeaderPlugin.js:120:53    - Unknown word (listed)     -- lreadyPrintedExports} already listed exports)`
lib/ModuleInfoHeaderPlugin.js:51:36     - Unknown word (Printed)    -- ExportInfo>} alreadyPrinted deduplication set
lib/ModuleParseError.js:33:19     - Unknown word (seem)       -- "\nThe module seem to be a WebAssembly
lib/ModuleSourceTypesConstants.js:89:7      - Unknown word (CONSUME)    -- const CONSUME_SHARED_TYPES = new Set
lib/ModuleTypeConstants.js:100:57    - Unknown word (abstractions) -- the webpack runtime abstractions.
lib/ModuleTypeConstants.js:3:25      - Unknown word (Lark)       -- Author Sean Larkin @TheLarkInn
lib/ModuleTypeConstants.js:82:53     - Unknown word (copied)     -- for assets that are copied to the output directory
lib/MultiCompiler.js:248:9     - Unknown word (edges)      -- const edges = new Set();
lib/MultiCompiler.js:268:13    - Unknown word (Edges)      -- const sortEdges = (e1, e2) =>
lib/MultiCompiler.js:388:12    - Unknown word (transitions) -- // State transitions for nodes:
lib/MultiCompiler.js:44:45     - Unknown word (Compilers)  -- parallelism how many Compilers are allows to run at
lib/MultiCompiler.js:49:52     - Unknown word (compilers)  -- Record<string, Compiler>} compilers child compilers
lib/MultiCompiler.js:586:10    - Unknown word (watchings)   -- const watchings = this._runGraph(
lib/MultiStats.js:20:27     - Unknown word (pref)       -- param {string} prefix pref
lib/NormalModule.js:388:13    - Unknown word (Successful) -- this._lastSuccessfulBuildMeta = {};
lib/NormalModule.js:45:2      - Unknown word (absolutify) -- absolutify,
lib/NormalModule.js:524:30    - Unknown word (behaves)    -- assume the generator behaves identically and keep
lib/NormalModule.js:524:38    - Unknown word (identically) -- the generator behaves identically and keep cached sourceTypes
lib/NormalModule.js:600:12    - Unknown word (Absolutify)  -- const getAbsolutify = memoize(() =>
lib/NormalModuleFactory.js:1060:33   - Unknown word (mandatory)  -- extension in the request is mandatory for it to be fully specified
lib/NormalModuleFactory.js:197:21    - Unknown word (tapped)     -- * @param {TODO} tapped tapped
lib/NormalModuleFactory.js:205:58    - Unknown word (waterfall)  -- names}) is no longer a waterfall hook, but a bailing
lib/NormalModuleFactory.js:205:80    - Unknown word (bailing)    -- waterfall hook, but a bailing hook instead. ` +
lib/NormalModuleFactory.js:207:4     - Unknown word (Returning)  -- "Returning false will ignore the
lib/NormalModuleFactory.js:522:26    - Unknown word (idents)     -- // translate option idents
lib/NormalModuleFactory.js:603:66    - Unknown word (modifying)  -- stAutoLoaders, should disable modifying Rule.type
lib/PlatformPlugin.js:13:21     - Unknown word (overwrite)  -- * when you want to overwrite platform target properties
lib/ProgressPlugin.js:131:21    - Unknown word (CONTEXTS)   -- const SKIPPED_QUEUE_CONTEXTS = ["import-module",
lib/ProgressPlugin.js:141:15    - Unknown word (Reporters)  -- const progressReporters = new WeakMap();
lib/ProgressPlugin.js:196:52    - Unknown word (executes)   -- handler function that executes for every progress step
lib/ProgressPlugin.js:239:15    - Unknown word (Throttled)  -- const updateThrottled = () => {
lib/ProgressPlugin.js:49:22     - Unknown word (median)     -- * @returns {number} median
lib/ProgressPlugin.js:524:28    - Unknown word (reviving)   -- reviveModules: "module reviving",
lib/ProgressPlugin.js:546:14    - Unknown word (recording)  -- record: "recording",
lib/ProgressPlugin.js:570:46    - Unknown word (hierarchical) -- number of messages in a hierarchical matter
lib/ProgressPlugin.js:570:59    - Unknown word (matter)       -- messages in a hierarchical matter
lib/ProgressPlugin.js:91:29     - Unknown word (lone)       -- * eslint-disable no-lone-blocks */
lib/RuntimeGlobals.js:270:4     - Unknown word (Returned)   -- * Returned value will be returned
lib/RuntimeGlobals.js:277:46    - Unknown word (somehow)    -- chunk that was loaded somehow
lib/RuntimeGlobals.js:377:29    - Unknown word (decorated)  -- module.exports" will be decorated with an AsyncModulePromise
lib/RuntimeTemplate.js:198:22    - Unknown word (surroundings) -- // both need equal surroundings: `xxx` vs "xxx"
lib/RuntimeTemplate.js:316:58    - Unknown word (originally)   -- request string used originally
lib/RuntimeTemplate.js:644:7     - Unknown word (appending)    -- let appending;
lib/RuntimeTemplate.js:696:7     - Unknown word (fall)         -- /* fall through */
lib/RuntimeTemplate.js:864:86    - Unknown word (preserved)    -- context will not be preserved
lib/SizeFormatHelpers.js:21:8      - Unknown word (abbreviations) -- const abbreviations = ["bytes", "KiB",
lib/SourceMapDevToolPlugin.js:259:35    - Unknown word (reassigns)  -- presented in cache, reassigns assets. Cache assets
lib/SourceMapDevToolPlugin.js:412:34    - Unknown word (stars)      -- otherwise just append stars until we have a valid
lib/SourceMapDevToolPlugin.js:455:85    - Unknown word (hiding)     -- circular dependency by hiding hash in `file`
lib/SourceMapDevToolPlugin.js:469:28    - Unknown word (Detected)   -- const cssExtensionDetected =
lib/Template.js:116:51    - Unknown word (commented)  -- string to be converted to commented in bundle code
lib/Template.js:151:20    - Unknown word (letters)    -- // use multiple letters
lib/Template.js:154:32    - Unknown word (Continuation) -- Template.numberToIdentifierContinuation(
lib/Template.js:279:16    - Unknown word (commas)       -- // number of commas, or when starting non
lib/Template.js:304:16    - Unknown word (spare)        -- // Render a spare array
lib/Template.js:30:13     - Unknown word (LOWERCASE)  -- const START_LOWERCASE_ALPHABET_CODE = "a"
lib/Template.js:31:13     - Unknown word (UPPERCASE)  -- const START_UPPERCASE_ALPHABET_CODE = "A"
lib/Template.js:43:13     - Unknown word (PADDED)     -- const MATCH_PADDED_HYPHENS_REPLACE_REGEX
lib/TemplatedPathPlugin.js:149:5     - Unknown word (Placeholders) -- // Placeholders
lib/TemplatedPathPlugin.js:181:6     - Unknown word (filebase)     -- "filebase",
lib/TemplatedPathPlugin.js:296:6     - Unknown word (moduleid)     -- // [moduleid] - module.id (2.png
lib/TemplatedPathPlugin.js:3:15      - Unknown word (Anderson)   -- Author Jason Anderson @diurnalist
lib/TemplatedPathPlugin.js:3:25      - Unknown word (diurnalist) -- Author Jason Anderson @diurnalist
lib/TemplatedPathPlugin.js:3:9       - Unknown word (Jason)      -- Author Jason Anderson @diurnalist
lib/WebpackError.js:3:15      - Unknown word (Margolin)   -- Author Jarid Margolin @jaridmargolin
lib/WebpackError.js:3:25      - Unknown word (jaridmargolin) -- Author Jarid Margolin @jaridmargolin
lib/WebpackError.js:3:9       - Unknown word (Jarid)      -- Author Jarid Margolin @jaridmargolin
lib/WebpackOptionsApply.js:267:48    - Unknown word (debugids)   -- options.devtool.includes("debugids");
lib/asset/AssetGenerator.js:266:9     - Unknown word (Either)       -- 'Either pass a mimetype via
lib/asset/AssetGenerator.js:38:40     - Unknown word (Interpolated) -- import("../Compilation").InterpolatedPathAndAssetInfo} Interpolated
lib/asset/AssetGenerator.js:394:56    - Unknown word (Requirements) -- chunkGraph, type, runtimeRequirements },
lib/asset/AssetGenerator.js:3:16      - Unknown word (Melyukov)   -- Author Sergey Melyukov @smelukov
lib/asset/AssetGenerator.js:3:26      - Unknown word (smelukov)   -- Author Sergey Melyukov @smelukov
lib/asset/AssetGenerator.js:3:9       - Unknown word (Sergey)     -- Author Sergey Melyukov @smelukov
lib/asset/AssetGenerator.js:552:19    - Unknown word (generation)   -- // Due to code generation caching module.buildInfo
lib/asset/AssetGenerator.js:589:52    - Unknown word (mutate)       -- available types (do not mutate)
lib/asset/AssetGenerator.js:654:9     - Unknown word (roughly)      -- // roughly for data url
lib/asset/AssetGenerator.js:657:43    - Unknown word (rounding)     -- url header + footer + rounding
lib/asset/AssetGenerator.js:660:18    - Unknown word (estimated)    -- // it's only estimated so this number is probably
lib/asset/AssetGenerator.js:677:49    - Unknown word (pure)         -- as function should be pure and only depend on input
lib/asset/AssetGenerator.js:678:7     - Unknown word (therefore)    -- // therefore it doesn't need to be
lib/asset/AssetGenerator.js:85:11     - Unknown word (modulehash)   -- case "modulehash":
lib/asset/AssetGenerator.js:99:36     - Unknown word (conflicting)  -- Error(`Can't handle conflicting asset info for ${key
lib/asset/AssetModulesPlugin.js:14:9      - Unknown word (clever)     -- const { cleverMerge } = require(".
lib/asset/AssetModulesPlugin.js:15:57     - Unknown word (comparators) -- = require("../util/comparators");
lib/asset/AssetModulesPlugin.js:221:12    - Unknown word (nduring)     -- `\nduring rendering of asset
lib/asset/AssetModulesPlugin.js:3:14      - Unknown word (Hiroto)     -- Author Yuta Hiroto @hiroppy
lib/asset/AssetModulesPlugin.js:3:22      - Unknown word (hiroppy)    -- Author Yuta Hiroto @hiroppy
lib/asset/AssetModulesPlugin.js:3:9       - Unknown word (Yuta)       -- Author Yuta Hiroto @hiroppy
lib/asset/AssetParser.js:15:35     - Unknown word (Preparsed)  -- import("../Parser").PreparsedAst} PreparsedAst */
lib/asset/AssetParser.js:33:48     - Unknown word (preparsed)  -- AssetParser doesn't accept preparsed AST");
lib/asset/AssetParser.js:58:21     - Unknown word (Unexpected) -- throw new Error("Unexpected dataUrlCondition type
lib/asset/RawDataUrlModule.js:22:33     - Unknown word (Shortener)  -- typedef {import("../RequestShortener")} RequestShortener
lib/asset/RawDataUrlModule.js:69:60     - Unknown word (shortener)  -- requestShortener the request shortener
lib/asset/RawDataUrlModule.js:74:21     - Unknown word (shorten)    -- requestShortener.shorten(this.readableIdentifierStr
lib/buildChunkGraph.js:1015:15   - Unknown word (Outdated)    -- const processOutdatedChunkGroupInfo = ()
lib/buildChunkGraph.js:1017:6    - Unknown word (Revisit)     -- // Revisit skipped elements
lib/buildChunkGraph.js:1019:10   - Unknown word (Reconsider)  -- // 1. Reconsider skipped items
lib/buildChunkGraph.js:1096:5    - Unknown word (Iterative)   -- // Iterative traversal of the Module
lib/buildChunkGraph.js:1097:24   - Unknown word (simpler)     -- Recursive would be simpler to write but could result
lib/buildChunkGraph.js:1097:67   - Unknown word (Overflows)   -- could result in Stack Overflows
lib/buildChunkGraph.js:1099:30   - Unknown word (visiting)    -- time("visitModules: visiting");
lib/buildChunkGraph.js:1111:31   - Unknown word (calculating) -- time("visitModules: calculating available modules")
lib/buildChunkGraph.js:1123:49   - Unknown word (revisit)     -- sitModules: check modules for revisit");
lib/buildChunkGraph.js:1152:39   - Unknown word (visited)     -- BlocksWithNestedBlocks} visited visited dependencies
lib/buildChunkGraph.js:1212:42   - Unknown word (comparator)  -- availableModules the comparator set
lib/buildChunkGraph.js:1228:65   - Unknown word (inconsistent) -- so it doesn't create inconsistent
lib/buildChunkGraph.js:1230:17   - Unknown word (decide)       -- // TODO maybe decide this per runtime
lib/buildChunkGraph.js:1261:15   - Unknown word (unconnected)  -- * Remove all unconnected chunk groups
lib/buildChunkGraph.js:1265:14   - Unknown word (Unconnected)  -- const cleanupUnconnectedGroups = (compilation
lib/buildChunkGraph.js:199:18    - Unknown word (worse)      -- // To avoid worse case performance, we
lib/buildChunkGraph.js:200:59    - Unknown word (complexity) -- allows to maintain O(n) complexity
lib/buildChunkGraph.js:201:23    - Unknown word (allocations) -- // while keeping allocations down to a minimum
lib/buildChunkGraph.js:244:57    - Unknown word (filled)      -- allCreatedChunkGroups filled with all chunk groups
lib/buildChunkGraph.js:25:47     - Unknown word (Spec)       -- util/runtime").RuntimeSpec} RuntimeSpec */
lib/buildChunkGraph.js:269:52    - Unknown word (masks)       -- ordinal of the module in masks
lib/buildChunkGraph.js:291:69    - Unknown word (tuples)      -- block modules in flatten tuples
lib/buildChunkGraph.js:333:12    - Unknown word (Forked)      -- const statForkedAvailableModules = 0
lib/buildChunkGraph.js:340:26    - Unknown word (Reconnected) -- statChildChunkGroupsReconnected = 0;
lib/buildChunkGraph.js:359:8     - Unknown word (outdated)    -- const outdatedOrderIndexChunkGroups
lib/buildChunkGraph.js:374:22    - Unknown word (Combining)   -- const chunkGroupsForCombining = new Set();
lib/buildChunkGraph.js:43:45     - Unknown word (Merged)     -- availableModulesToBeMerged enqueued updates to
lib/buildChunkGraph.js:44:130    - Unknown word (reconsider) -- parent chunks (need to reconsider when minAvailableModules
lib/buildChunkGraph.js:44:169    - Unknown word (shrinking)  -- minAvailableModules is shrinking)
lib/buildChunkGraph.js:44:55     - Unknown word (were)       -- skippedItems modules that were skipped because module
lib/buildChunkGraph.js:452:5     - Unknown word (correct)     -- // correct order
lib/buildChunkGraph.js:460:11    - Unknown word (Delayed)     -- let queueDelayed = [];
lib/buildChunkGraph.js:47:100    - Unknown word (revisited)  -- groups, that will be revisited when availableModules
lib/buildChunkGraph.js:547:48    - Unknown word (traversal)   -- DependenciesBlock for traversal
lib/buildChunkGraph.js:62:83     - Unknown word (Tuples)     -- hConnection)[]} BlockModulesInTuples */
lib/buildChunkGraph.js:664:10    - Unknown word (prepared)    -- // get prepared block info
lib/buildChunkGraph.js:675:19    - Unknown word (comparisons) -- // For single comparisons this might be cheaper
lib/buildChunkGraph.js:675:45    - Unknown word (cheaper)     -- comparisons this might be cheaper
lib/buildChunkGraph.js:679:14    - Unknown word (early)       -- // skip early if already connected
lib/buildChunkGraph.js:700:16    - Unknown word (relevant)    -- // this is relevant with circular dependencies
lib/buildChunkGraph.js:911:10    - Unknown word (Calculate)   -- // 2. Calculate resulting available
lib/buildChunkGraph.js:968:8     - Unknown word (Whether)     -- // Whether to walk block depends
lib/buildChunkGraph.js:969:15    - Unknown word (treat)       -- // We can treat creating chunk group
lib/cache/IdleFileCachePlugin.js:119:62    - Unknown word (Stored)     -- => strategy.afterAllStored());
lib/cache/IdleFileCachePlugin.js:168:34    - Unknown word (Infrastructure) -- logger = compiler.getInfrastructureLogger(
lib/cache/IdleFileCachePlugin.js:200:46    - Unknown word (considered)     -- cache store. This is considered as large change and
lib/cache/IdleFileCachePlugin.js:50:11     - Unknown word (Spend)      -- let timeSpendInBuild = 0;
lib/cache/MemoryWithGcCachePlugin.js:18:32     - Unknown word (Generations) -- {number} options.maxGenerations max generations
lib/cache/MemoryWithGcCachePlugin.js:18:48     - Unknown word (generations) -- options.maxGenerations max generations
lib/cache/MemoryWithGcCachePlugin.js:40:8      - Unknown word (cleared)     -- let clearedEntries = 0;
lib/cache/MemoryWithGcCachePlugin.js:41:12     - Unknown word (Cleared)     -- let lastClearedIdentifier;
lib/cache/MemoryWithGcCachePlugin.js:42:7      - Unknown word (Avoid)       -- // Avoid coverage problems due
lib/cache/MemoryWithGcCachePlugin.js:58:8      - Unknown word (recently)    -- } recently unused cached entries
lib/cache/MemoryWithGcCachePlugin.js:75:14     - Unknown word (reserves)    -- // This reserves the location in the
lib/cache/MemoryWithGcCachePlugin.js:75:58     - Unknown word (avoids)      -- in the data table and avoids rehashing
lib/cache/MemoryWithGcCachePlugin.js:75:65     - Unknown word (rehashing)   -- data table and avoids rehashing
lib/cache/MemoryWithGcCachePlugin.js:76:14     - Unknown word (constantly)  -- // when constantly adding and removing
lib/cache/PackFileCacheStrategy.js:1056:12   - Unknown word (Collecting) -- const allowCollectingMemory = buf => {
lib/cache/PackFileCacheStrategy.js:1057:8    - Unknown word (wasted)     -- const wasted = buf.buffer.byteLength
lib/cache/PackFileCacheStrategy.js:1073:55   - Unknown word (regarding)  -- options.snapshot options regarding snapshotting
lib/cache/PackFileCacheStrategy.js:1078:59   - Unknown word (storing)    -- options.readonly disable storing cache into filesystem
lib/cache/PackFileCacheStrategy.js:1168:5    - Unknown word (retained)   -- retainedBuffer: this.allowCollectingMe
lib/cache/PackFileCacheStrategy.js:1175:8    - Unknown word (Restoring)  -- `Restoring pack failed from ${cacheLocat
lib/cache/PackFileCacheStrategy.js:1190:8    - Unknown word (Restored)   -- `Restored pack from ${cacheLocation
lib/cache/PackFileCacheStrategy.js:1190:88   - Unknown word (unexpected) -- contained content is unexpected.`,
lib/cache/PackFileCacheStrategy.js:1360:22   - Unknown word (Storing)    -- this.logger.log("Storing pack...");
lib/cache/PackFileCacheStrategy.js:1420:24   - Unknown word (Unable)     -- new Error("Unable to snapshot resolve
lib/cache/PackFileCacheStrategy.js:1453:32   - Unknown word (Captured)   -- this.logger.debug("Captured build dependencies"
lib/cache/PackFileCacheStrategy.js:1517:26   - Unknown word (Caching)    -- this.logger.warn(`Caching failed for pack: ${err
lib/cache/PackFileCacheStrategy.js:261:14    - Unknown word (Collected)  -- "Garbage Collected %d old items at pack
lib/cache/PackFileCacheStrategy.js:261:6     - Unknown word (Garbage)    -- "Garbage Collected %d old items
lib/cache/PackFileCacheStrategy.js:277:10    - Unknown word (packs)      -- const packs = [];
lib/cache/PackFileCacheStrategy.js:339:5     - Unknown word (Merges)     -- * Merges small content files
lib/cache/PackFileCacheStrategy.js:343:6     - Unknown word (Treat)      -- // Treat unused content files
lib/cache/PackFileCacheStrategy.js:368:36    - Unknown word (reached)    -- if minimum number is reached
lib/cache/PackFileCacheStrategy.js:391:9     - Unknown word (Determine)  -- // 4. Determine merged items
lib/cache/PackFileCacheStrategy.js:407:30    - Unknown word (accessible) -- after that values are accessible in .content
lib/cache/PackFileCacheStrategy.js:40:92     - Unknown word (captured)   -- unresolved build dependencies captured
lib/cache/PackFileCacheStrategy.js:423:37    - Unknown word (somewhere)  -- empty, store content somewhere
lib/cache/PackFileCacheStrategy.js:528:8     - Unknown word (optimizing) -- // optimizing only one of them is
lib/cache/PackFileCacheStrategy.js:529:8     - Unknown word (reduces)    -- // reduces the amount of serialization
lib/cache/PackFileCacheStrategy.js:536:31    - Unknown word (oldest)     -- the content with the oldest item and run GC on that
lib/cache/PackFileCacheStrategy.js:539:5     - Unknown word (Oldest)     -- _gcOldestContent() {
lib/cache/PackFileCacheStrategy.js:562:47    - Unknown word (garbage)    -- items that should be garbage collected"
lib/cache/PackFileCacheStrategy.js:562:55    - Unknown word (collected)  -- that should be garbage collected"
lib/cache/PackFileCacheStrategy.js:807:18    - Unknown word (subset)     -- this.used is a subset of this.items.
lib/cache/PackFileCacheStrategy.js:810:61    - Unknown word (recreated)  -- items should be used to recreated this.lazy/this.content
lib/cache/ResolverCachePlugin.js:105:11    - Unknown word (Resolves)   -- let realResolves = 0;
lib/cache/ResolverCachePlugin.js:118:11    - Unknown word (really)     -- )}% really resolved (${realResolves
lib/cache/ResolverCachePlugin.js:118:49    - Unknown word (resolves)   -- {realResolves} real resolves with ${cacheInvalidResolves
lib/cache/ResolverCachePlugin.js:129:61    - Unknown word (Miss)       -- ResolverCachePluginCacheMiss: true }} ResolveRequestWithCa
lib/cache/ResolverCachePlugin.js:15:31     - Unknown word (Facade)     -- typedef {import("../CacheFacade").ItemCacheFacade} ItemCacheF
lib/cache/ResolverCachePlugin.js:177:10    - Unknown word (propagate)  -- const propagate = key => {
lib/cache/ResolverCachePlugin.js:189:12    - Unknown word (miss)       -- "Cache miss",
lib/cache/mergeEtags.js:25:7      - Unknown word (dual)       -- const dualObjectMap = new WeakMap
lib/cli.js:126:11    - Unknown word (Negated)    -- const getNegatedDescription = path =
lib/cli.js:259:7     - Unknown word (Conflicting) -- `Conflicting schema for ${path[0
lib/cli.js:284:9     - Unknown word (repetitions) -- const repetitions = path.filter(({ schema
lib/cli.js:374:5     - Unknown word (Summarize)   -- // Summarize flags
lib/cli.js:42:24     - Unknown word (negated)    -- @property {string} [negatedDescription]
lib/cli.js:80:10     - Unknown word (Uppercase)  -- /(\p{Uppercase_Letter}+|\p{Lowercase
lib/cli.js:80:32     - Unknown word (Lowercase)  -- Uppercase_Letter}+|\p{Lowercase_Letter}|\d)(\p{Uppercase
lib/config/browserslistTargetHandler.js:107:14    - Unknown word (Explorer)   -- // Internet Explorer Mobile, Blackberry browser
lib/config/browserslistTargetHandler.js:107:31    - Unknown word (Blackberry) -- Internet Explorer Mobile, Blackberry browser and Opera Mini
lib/config/browserslistTargetHandler.js:107:54    - Unknown word (Opera)      -- Blackberry browser and Opera Mini are very old browsers
lib/config/browserslistTargetHandler.js:113:3     - Unknown word (firefox)    -- firefox: 67,
lib/config/browserslistTargetHandler.js:116:3     - Unknown word (opera)      -- opera: 50,
lib/config/browserslistTargetHandler.js:125:3     - Unknown word (kaios)      -- kaios: [3, 0],
lib/config/browserslistTargetHandler.js:136:16    - Unknown word (Firefox)    -- // Prior to Firefox 13, <code>const</code
lib/config/browserslistTargetHandler.js:136:7     - Unknown word (Prior)      -- // Prior to Firefox 13, <code
lib/config/browserslistTargetHandler.js:136:88    - Unknown word (failing)    -- re-assignment is not failing.
lib/config/browserslistTargetHandler.js:137:57    - Unknown word (thrown)     -- TypeError</code> was thrown on redeclaration instead
lib/config/browserslistTargetHandler.js:140:42    - Unknown word (loops)      -- in for-in and for-of loops
lib/config/browserslistTargetHandler.js:161:144   - Unknown word (conform)     -- This has been fixed to conform to the ES2015 specification
lib/config/browserslistTargetHandler.js:161:35    - Unknown word (terminator) -- to Firefox 39, a line terminator (<code>\\n</code>) was
lib/config/browserslistTargetHandler.js:161:69    - Unknown word (incorrectly) -- code>\\n</code>) was incorrectly allowed after arrow
lib/config/browserslistTargetHandler.js:181:85    - Unknown word (threw)       -- with the const keyword threw a SyntaxError ("missing
lib/config/browserslistTargetHandler.js:235:50    - Unknown word (limitations) -- and `export` and no limitations and bugs on Node.js
lib/config/browserslistTargetHandler.js:52:45     - Unknown word (browsers)   -- undefined} selected browsers
lib/config/browserslistTargetHandler.js:90:8      - Unknown word (safari)     -- // safari TP supports all features
lib/config/defaults.js:1059:25   - Unknown word (depending)     -- / Anything changing depending on chunk is fine
lib/config/defaults.js:1059:7    - Unknown word (Anything)      -- // Anything changing depending on
lib/config/defaults.js:1061:7    - Unknown word (Otherwise)     -- // Otherwise prefix "[id]." in front
lib/config/defaults.js:1103:138  - Unknown word (selecting)     -- appropriate 'target' to allow selecting a chunk format by default
lib/config/defaults.js:1103:175  - Unknown word (Alternatively) -- chunk format by default. Alternatively specify the 'output
lib/config/defaults.js:1417:33   - Unknown word (mock)          -- futureDefaults ? "warn-mock" : "mock";
lib/config/defaults.js:1453:23   - Unknown word (Included)      -- D(optimization, "flagIncludedChunks", production)
lib/config/defaults.js:1475:19   - Unknown word (portable)      -- D(optimization, "portableRecords", records);
lib/config/defaults.js:1478:19   - Unknown word (minimizer)     -- A(optimization, "minimizer", () => [
lib/config/defaults.js:1486:8    - Unknown word (passes)        -- passes: 2
lib/config/defaults.js:1508:22   - Unknown word (Remaining)     -- F(splitChunks, "minRemainingSize", () => (development
lib/config/defaults.js:1664:15   - Unknown word (TERM)          -- process.env.TERM !== "dumb";
lib/config/defaults.js:1664:25   - Unknown word (dumb)          -- process.env.TERM !== "dumb";
lib/config/defaults.js:222:8     - Unknown word (Unaffected)   -- cacheUnaffected: options.experiments
lib/config/defaults.js:402:88    - Unknown word (experiment)   -- the cacheUnaffected experiment is enabled
lib/config/defaults.js:42:59     - Unknown word (Experiments) -- declarations/WebpackOptions").Experiments} Experiments */
lib/config/defaults.js:488:32    - Unknown word (unplugged)    -- ?(?:[\\/]\.yarn[\\/]unplugged[\\/][^\\/]+)?[\\/]node
lib/config/defaults.js:581:47    - Unknown word (Presence)     -- parserOptions, "exportsPresence", "error");
lib/config/defaults.js:58:59     - Unknown word (Optimization) -- declarations/WebpackOptions").Optimization} Optimization */
lib/config/defaults.js:705:53    - Unknown word (Convention)   -- TYPE_AUTO], "exportsConvention", "as-is");
lib/config/defaults.js:940:15    - Unknown word (determining)  -- `\nwhile determining default 'output.uniqueName
lib/config/defaults.js:960:8     - Unknown word (conditionally) -- const conditionallyOptimistic = (v, c)
lib/config/normalization.js:26:7      - Unknown word (handled)    -- const handledDeprecatedNoEmitOnErrors
lib/config/normalization.js:41:29     - Unknown word (OPTIMIZATION) -- WEBPACK_CONFIGURATION_OPTIMIZATION_NO_EMIT_ON_ERRORS"
lib/config/normalization.js:75:29     - Unknown word (cloned)       -- returns {R[]|undefined} cloned value
lib/config/normalization.js:98:23     - Unknown word (sequences)    -- * eslint-disable no-sequences */
lib/config/target.js:102:184   - Unknown word (modern)     -- Examples: 'browserslist:modern' to use 'modern' environment
lib/config/target.js:63:57     - Unknown word (chaining)   -- optionalChaining optional chaining is available
lib/container/ContainerEntryDependency.js:11:48     - Unknown word (Expose)     -- ContainerEntryModule").ExposeOptions} ExposeOptions
lib/container/ContainerEntryDependency.js:12:48     - Unknown word (Exposes)    -- ContainerEntryModule").ExposesList} ExposesList */
lib/container/ContainerEntryDependency.js:3:32      - Unknown word (Zackary)    -- Tobias Koppers @sokra, Zackary Jackson @ScriptedAlchemy
lib/container/ContainerEntryDependency.js:3:40      - Unknown word (Jackson)    -- Koppers @sokra, Zackary Jackson @ScriptedAlchemy, Marais
lib/container/ContainerEntryDependency.js:3:49      - Unknown word (Scripted)   -- sokra, Zackary Jackson @ScriptedAlchemy, Marais Rossouw
lib/container/ContainerEntryDependency.js:3:57      - Unknown word (Alchemy)    -- Zackary Jackson @ScriptedAlchemy, Marais Rossouw @maraisr
lib/container/ContainerEntryDependency.js:3:66      - Unknown word (Marais)     -- Jackson @ScriptedAlchemy, Marais Rossouw @maraisr
lib/container/ContainerEntryDependency.js:3:73      - Unknown word (Rossouw)    -- ScriptedAlchemy, Marais Rossouw @maraisr
lib/container/ContainerEntryDependency.js:3:82      - Unknown word (maraisr)    -- iptedAlchemy, Marais Rossouw @maraisr
lib/container/ContainerEntryModule.js:17:16     - Unknown word (Exposed)    -- const ContainerExposedDependency = require
lib/container/ContainerEntryModule.js:212:8     - Unknown word (reusing)    -- // reusing the getScope variable
lib/container/ContainerEntryModule.js:84:56     - Unknown word (inclusion)  -- identifier for library inclusion
lib/container/ContainerReferencePlugin.js:20:87     - Unknown word (Remotes)    -- ContainerReferencePlugin").RemotesConfig} RemotesConfig
lib/container/FallbackModule.js:35:15     - Unknown word (REQUIREMENTS) -- const RUNTIME_REQUIREMENTS = new Set([RuntimeGlobals
lib/container/FallbackModule.js:39:52     - Unknown word (choose)       -- list of requests to choose one
lib/container/HoistContainerReferencesPlugin.js:10:52     - Unknown word (Stages)     -- require("../OptimizationStages");
lib/container/HoistContainerReferencesPlugin.js:115:29    - Unknown word (specifically) -- handle container entry specifically
lib/container/HoistContainerReferencesPlugin.js:164:24    - Unknown word (disconnecting) -- Clean up chunks by disconnecting unused modules.
lib/container/HoistContainerReferencesPlugin.js:192:52    - Unknown word (recursively)   -- all referenced modules recursively.
lib/container/HoistContainerReferencesPlugin.js:194:47    - Unknown word (collecting)    -- The module to start collecting from.
lib/container/HoistContainerReferencesPlugin.js:219:31    - Unknown word (skipping)      -- Handle 'initial' type (skipping async blocks)
lib/css/CssGenerator.js:140:16    - Unknown word (Identifiers) -- const usedIdentifiers = new Set();
lib/css/CssGenerator.js:196:16    - Unknown word (presentational) -- if (module.presentationalDependencies !== undefined
lib/css/CssGenerator.js:40:8      - Unknown word (convention) -- this.convention = options.exportsConvention
lib/css/CssLoadingRuntimeModule.js:115:11    - Unknown word (Neutral)    -- const isNeutralPlatform = runtimeTemplate
lib/css/CssLoadingRuntimeModule.js:153:28    - Unknown word (fetchpriority) -- 'link.setAttribute("fetchpriority", fetchPriority);'
lib/css/CssModulesPlugin.js:191:50    - Unknown word (inheritance) -- { undoPath: string, inheritance: Inheritance, source
lib/css/CssModulesPlugin.js:30:10     - Unknown word (Icss)       -- const CssIcssExportDependency = require
lib/css/CssModulesPlugin.js:42:12     - Unknown word (Undo)       -- const { getUndoPath } = require("..
lib/css/CssModulesPlugin.js:55:38     - Unknown word (Inheritance) -- import("../CssModule").Inheritance} Inheritance */
lib/css/CssModulesPlugin.js:648:31    - Unknown word (able)        -- There is a not resolve-able conflict with the selectedMod
lib/css/CssModulesPlugin.js:70:23     - Unknown word (undo)        -- @property {string} undoPath undo path to css
lib/css/CssParser.js:104:12    - Unknown word (Excessive)  -- const regexExcessiveSpaces =
lib/css/CssParser.js:1178:10   - Unknown word (falls)       -- // falls through
lib/css/CssParser.js:1391:46   - Unknown word (whose)       -- property is any property whose name starts with two
lib/css/CssParser.js:1391:73   - Unknown word (dashes)      -- name starts with two dashes (U+002D HYPHEN-MINUS
lib/css/CssParser.js:1391:88   - Unknown word (HYPHEN)      -- with two dashes (U+002D HYPHEN-MINUS), like --foo.
lib/css/CssParser.js:1392:50   - Unknown word (corresponds) -- property-name> production corresponds to this:
lib/css/CssParser.js:141:32    - Unknown word (escapes)    -- spaces after `\HEX` escapes that are not followed
lib/css/CssParser.js:141:71    - Unknown word (digit)      -- not followed by a hex digit,
lib/css/CssParser.js:142:11    - Unknown word (they’re)    -- // since they’re redundant. Note that
lib/css/CssParser.js:143:20    - Unknown word (preceded)   -- // sequence isn’t preceded by an odd number of
lib/css/CssParser.js:143:49    - Unknown word (backslashes) -- by an odd number of backslashes.
lib/css/CssParser.js:1478:11   - Unknown word (popped)      -- const popped = balanced.pop();
lib/css/CssParser.js:163:7     - Unknown word (gobble)      -- const gobbleHex = str => {
lib/css/CssParser.js:166:11    - Unknown word (Terminated)  -- let spaceTerminated = false;
lib/css/CssParser.js:170:29    - Unknown word (dealing)     -- check to see if we are dealing with a valid hex char
lib/css/CssParser.js:181:10    - Unknown word (Surrogate)   -- const isSurrogate = codePoint >= 0xd8
lib/css/CssParser.js:184:42    - Unknown word (surrogate)   -- is zero, or is for a surrogate, or is greater than
lib/css/CssParser.js:206:10    - Unknown word (gobbled)     -- const gobbled = gobbleHex(str.slice
lib/css/CssParser.js:212:7     - Unknown word (Retain)      -- // Retain a pair of \\ if double
lib/css/CssParser.js:219:41    - Unknown word (retain)      -- the end of the string retain it
lib/css/CssParser.js:232:10    - Unknown word (Converter)   -- class LocConverter {
lib/css/CssParser.js:245:38    - Unknown word (converter)   -- LocConverter} location converter
lib/css/CssParser.js:282:15    - Unknown word (Semi)        -- const eatUntilSemi = walkCssTokens.eatUntil
lib/css/CssParser.js:283:19    - Unknown word (Curly)       -- const eatUntilLeftCurly = walkCssTokens.eatUntil
lib/css/CssParser.js:371:17    - Unknown word (Prelude)     -- let isNextRulePrelude = isModules;
lib/css/CssParser.js:373:12    - Unknown word (Nesting)     -- let blockNestingLevel = 0;
lib/css/CssParser.js:383:9     - Unknown word (icss)        -- const icssDefinitions = new Map
lib/css/CssParser.js:413:54    - Unknown word (eater)       -- number) => number} eater eater
lib/css/CssParser.js:56:25     - Unknown word (PREFIXED)   -- const OPTIONALLY_VENDOR_PREFIXED_KEYFRAMES_AT_RULE =
lib/css/CssParser.js:56:7      - Unknown word (OPTIONALLY) -- const OPTIONALLY_VENDOR_PREFIXED_KEYFRAMES
lib/css/CssParser.js:68:29     - Unknown word (newlines)   -- Remove extra spaces and newlines:
lib/css/CssParser.js:812:35    - Unknown word (precede)     -- @import' rules must precede all other rules",
lib/css/CssParser.js:824:13    - Unknown word (semi)        -- const semi = tokens[3][1];
lib/css/CssParser.js:959:13    - Unknown word (Broken)      -- `Broken '@value' at-rule: $
lib/css/walkCssTokens.js:1063:21   - Unknown word (Solidus)      -- const consumeReverseSolidus = (input, pos, callbacks
lib/css/walkCssTokens.js:120:64    - Unknown word (TABULATION) -- space (U+0009 CHARACTER TABULATION or U+0020 SPACE)
lib/css/walkCssTokens.js:1291:44   - Unknown word (positions)    -- number] | undefined} positions of ident sequence
lib/css/walkCssTokens.js:150:18    - Unknown word (describes)  -- // This section describes how to consume comments
lib/css/walkCssTokens.js:192:13    - Unknown word (Digit)      -- const _isHexDigit = cc =>
lib/css/walkCssTokens.js:204:69    - Unknown word (consumed)   -- \) has already been consumed and that the next input
lib/css/walkCssTokens.js:221:35    - Unknown word (hexadecimal) -- the hex digits as a hexadecimal number.
lib/css/walkCssTokens.js:249:16    - Unknown word (either)      -- // It returns either a <string-token> or
lib/css/walkCssTokens.js:251:67    - Unknown word (denotes)     -- ending code point, which denotes the code point that
lib/css/walkCssTokens.js:256:5     - Unknown word (Initially)   -- // Initially create a <string-token
lib/css/walkCssTokens.js:258:5     - Unknown word (Repeatedly)  -- // Repeatedly consume the next input
lib/css/walkCssTokens.js:284:6     - Unknown word (Reconsume)   -- // Reconsume the current input code
lib/css/walkCssTokens.js:302:103   - Unknown word (returned)    -- point and append the returned code point to the <string
lib/css/walkCssTokens.js:321:5     - Unknown word (Simplify)    -- // Simplify
lib/css/walkCssTokens.js:361:19    - Unknown word (described)   -- // The algorithm described here can be called explicitly
lib/css/walkCssTokens.js:362:12    - Unknown word (latter)      -- // In the latter case, the two code points
lib/css/walkCssTokens.js:384:25    - Unknown word (Would)       -- const _ifThreeCodePointsWouldStartAnIdentSequence
lib/css/walkCssTokens.js:39:10     - Unknown word (SOLIDUS)    -- const CC_SOLIDUS = "/".charCodeAt(0)
lib/css/walkCssTokens.js:45:15     - Unknown word (CURLY)      -- const CC_LEFT_CURLY = "{".charCodeAt(0)
lib/css/walkCssTokens.js:50:10     - Unknown word (QUOTATION)  -- const CC_QUOTATION_MARK = '"'.charCodeAt
lib/css/walkCssTokens.js:51:10     - Unknown word (APOSTROPHE) -- const CC_APOSTROPHE = "'".charCodeAt(0)
lib/css/walkCssTokens.js:528:14    - Unknown word (Hyphen)      -- const consumeHyphenMinus = (input, pos,
lib/css/walkCssTokens.js:529:47    - Unknown word (reconsume)   -- starts with a number, reconsume the current input code
lib/css/walkCssTokens.js:587:42    - Unknown word (repr)        -- type to "integer". Let repr be the empty string
lib/css/walkCssTokens.js:617:116   - Unknown word (optionally)  -- SMALL LETTER E (e), optionally followed by U+002D HYPHEN
lib/css/walkCssTokens.js:644:32    - Unknown word (interpreting) -- value be the result of interpreting number part as a base
lib/css/walkCssTokens.js:646:76    - Unknown word (raise)        -- base-10 integer, then raise 10 to the power of the
lib/css/walkCssTokens.js:662:94    - Unknown word (initially)    -- number, and a unit set initially to the empty string
lib/css/walkCssTokens.js:767:65    - Unknown word (formed)       -- largest name that can be formed from adjacent code points
lib/css/walkCssTokens.js:769:144   - Unknown word (constitute)   -- returned code points would constitute an <ident-token>.
lib/css/walkCssTokens.js:770:20    - Unknown word (intended)     -- // If that is the intended use, ensure that the
lib/css/walkCssTokens.js:799:48    - Unknown word (printable)    -- when cc is the non-printable code point, otherwise
lib/css/walkCssTokens.js:801:13    - Unknown word (Printable)    -- const _isNonPrintableCodePoint = cc =>
lib/css/walkCssTokens.js:812:17    - Unknown word (Remnants)     -- const consumeTheRemnantsOfABadUrl = (input, pos
lib/css/walkCssTokens.js:813:47    - Unknown word (remnants)     -- describes how to consume the remnants of a bad url from a
lib/css/walkCssTokens.js:814:39    - Unknown word (realizes)     -- after the tokenizer realizes that it’s in the middle
lib/css/walkCssTokens.js:814:93    - Unknown word (rather)       -- of a <bad-url-token> rather than a <url-token>.
lib/css/walkCssTokens.js:815:29    - Unknown word (sole)         -- returns nothing; its sole use is to consume enough
lib/css/walkCssTokens.js:815:82    - Unknown word (reach)        -- the input stream to reach a recovery point where
lib/css/walkCssTokens.js:835:60    - Unknown word (encountered)  -- parenthesis ("\)") to be encountered without ending the
lib/css/walkCssTokens.js:836:24    - Unknown word (identical)    -- / This is otherwise identical to the "anything else
lib/css/walkCssTokens.js:83:5      - Unknown word (Consume)    -- // Consume as much whitespace as
lib/css/walkCssTokens.js:860:71    - Unknown word (unquoted)     -- called to consume an "unquoted" value, like url(foo
lib/css/walkCssTokens.js:861:7     - Unknown word (quoted)       -- // A quoted value, like url("foo
lib/css/walkCssTokens.js:862:47    - Unknown word (handles)      -- token automatically handles this distinction; this
lib/css/walkCssTokens.js:862:60    - Unknown word (distinction)  -- automatically handles this distinction; this algorithm shouldn
lib/css/walkCssTokens.js:862:88    - Unknown word (shouldn’t)    -- distinction; this algorithm shouldn’t be called directly otherwise
lib/css/walkCssTokens.js:93:16     - Unknown word (converted)  -- // as they are converted to U+000A LINE FEED
lib/debug/ProfilingPlugin.js:124:52    - Unknown word (guarantee)  -- time. But they do not guarantee that this is the
lib/debug/ProfilingPlugin.js:165:8     - Unknown word (instant)    -- trace.instantEvent({
lib/debug/ProfilingPlugin.js:19:56     - Unknown word (Profiling)  -- declarations/plugins/debug/ProfilingPlugin").ProfilingPluginOption
lib/debug/ProfilingPlugin.js:205:7     - Unknown word (Tear)       -- // Tear down the readable trace
lib/debug/ProfilingPlugin.js:240:24    - Unknown word (Interceptor) -- hook.intercept(makeInterceptorFor("Compiler", tracer
lib/debug/ProfilingPlugin.js:295:33    - Unknown word (moji)        -- file: "../../ipc/ipc_moji_bootstrap.cc",
lib/debug/ProfilingPlugin.js:402:58    - Unknown word (cleanly)     -- ensure stream can close cleanly
lib/debug/ProfilingPlugin.js:405:14    - Unknown word (Profiled)    -- : makeNewProfiledTapFn(hookName, tracer
lib/debug/ProfilingPlugin.js:420:44    - Unknown word (profiled)    -- options Options for the profiled fn.
lib/debug/ProfilingPlugin.js:424:40    - Unknown word (hooked)      -- PluginFunction} Chainable hooked function.
lib/debug/ProfilingPlugin.js:469:15    - Unknown word (instrument)  -- // Do not instrument ourself due to the CPU
lib/debug/ProfilingPlugin.js:469:26    - Unknown word (ourself)     -- / Do not instrument ourself due to the CPU
lib/debug/ProfilingPlugin.js:470:16    - Unknown word (needing)     -- // profile needing to be the last event
lib/dependencies/AMDDefineDependency.js:72:27     - Unknown word (Xmodule)    -- definition: "var XXX, XXXmodule;",
lib/dependencies/AMDDefineDependency.js:82:27     - Unknown word (Xfactory)   -- definition: "var XXX, XXXfactory, XXXmodule;",
lib/dependencies/AMDDefineDependency.js:87:57     - Unknown word (Xexports)   -- DEFINE_ARRAY__, XXX, XXXexports;",
lib/dependencies/AMDDefineDependency.js:97:2      - Unknown word (laof)       -- laof: {
lib/dependencies/AMDDefineDependency.js:98:22     - Unknown word (Xarray)     -- definition: "var XXXarray, XXXfactory, XXXexports
lib/dependencies/AMDDefineDependencyParserPlugin.js:350:11    - Unknown word (Renames)    -- const fnRenames = new Map();
lib/dependencies/AMDDefineDependencyParserPlugin.js:49:61     - Unknown word (Unbound)    -- ArrowFunctionExpression} UnboundFunctionExpression *
lib/dependencies/AMDDefineDependencyParserPlugin.js:53:78     - Unknown word (unbound)    -- FunctionExpression} true when unbound function expression
lib/dependencies/AMDRequireDependenciesBlockParserPlugin.js:332:28    - Unknown word (analyse)    -- `Cannot statically analyse 'require(…, …)' in line
lib/dependencies/AMDRuntimeModules.js:22:45     - Unknown word (cannot)     -- throw new Error('define cannot be used indirect');
lib/dependencies/CachedConstDependency.js:3:17      - Unknown word (Cailhol)    -- Author Florent Cailhol @ooflorent
lib/dependencies/CachedConstDependency.js:3:26      - Unknown word (ooflorent)  -- Author Florent Cailhol @ooflorent
lib/dependencies/CachedConstDependency.js:3:9       - Unknown word (Florent)    -- Author Florent Cailhol @ooflorent
lib/dependencies/CommonJsExportRequireDependency.js:103:9     - Unknown word (Mangle)     -- canMangle: false
lib/dependencies/CommonJsExportRequireDependency.js:184:36    - Unknown word (Reexports)  -- reexportInfo = this.getStarReexports(
lib/dependencies/CommonJsExportRequireDependency.js:201:25    - Unknown word (reexports)  -- // TODO handle deep reexports
lib/dependencies/CommonJsExportRequireDependency.js:91:70     - Unknown word (analysed)   -- which the module is analysed
lib/dependencies/CommonJsExportsParserPlugin.js:155:24    - Unknown word (Flagged)    -- DynamicExports.setFlagged(parser.state);
lib/dependencies/CommonJsExportsParserPlugin.js:185:6     - Unknown word (exporting)  -- // exporting //
lib/dependencies/CommonJsExportsParserPlugin.js:33:18     - Unknown word (takes)      -- * This function takes a generic expression
lib/dependencies/CommonJsExportsParserPlugin.js:395:6     - Unknown word (Bailouts)   -- // Bailouts //
lib/dependencies/CommonJsExportsParserPlugin.js:61:8      - Unknown word (purpose)    -- * The purpose of this function is
lib/dependencies/CommonJsExportsParserPlugin.js:63:36     - Unknown word (However)    -- `null` and `false`. However, exports should only
lib/dependencies/CommonJsFullRequireDependency.js:10:12     - Unknown word (Trimmed)    -- const { getTrimmedIdsAndRange } = require
lib/dependencies/CommonJsFullRequireDependency.js:10:52     - Unknown word (chained)    -- = require("../util/chainedImports");
lib/dependencies/CommonJsFullRequireDependency.js:132:4     - Unknown word (trimmed)    -- trimmedRange: [trimmedRangeStart
lib/dependencies/CommonJsFullRequireDependency.js:30:84     - Unknown word (aligned)    -- two arrays are right-aligned
lib/dependencies/CommonJsFullRequireDependency.js:36:79     - Unknown word (properly)   -- must always be set to properly trim ids. */
lib/dependencies/CommonJsImportsParserPlugin.js:107:6     - Unknown word (Weird)      -- // Weird stuff //
lib/dependencies/CommonJsImportsParserPlugin.js:111:15    - Unknown word (leak)       -- // to not leak to global "require"
lib/dependencies/CommonJsImportsParserPlugin.js:157:14    - Unknown word (Renaming)   -- // #region Renaming
lib/dependencies/CommonJsImportsParserPlugin.js:180:14    - Unknown word (Inspection) -- // #region Inspection
lib/dependencies/CommonJsImportsParserPlugin.js:661:16    - Unknown word (specifiers) -- statement.specifiers.length !== 1 ||
lib/dependencies/ConstDependency.js:61:52     - Unknown word (connects)   -- how this dependency connects the module to referencing
lib/dependencies/ContextDependency.js:122:7     - Unknown word (Contexts)   -- "Contexts can't use RegExps with
lib/dependencies/ContextDependencyHelpers.js:128:25    - Unknown word (quasi)      -- // Quasis or merged quasi
lib/dependencies/ContextDependencyHelpers.js:131:39    - Unknown word (cooked)     -- templateStringKind === "cooked") {
lib/dependencies/ContextDependencyHelpers.js:158:9     - Unknown word (Shortcut)   -- // Shortcut when it's a single quasi
lib/dependencies/ContextDependencyHelpers.js:21:4      - Unknown word (Escapes)    -- * Escapes regular expression metacharac
lib/dependencies/ContextDependencyHelpers.js:69:9      - Unknown word (quasis)     -- const quasis = /** @type {BasicEvaluatedEx
lib/dependencies/ContextDependencyHelpers.js:83:76     - Unknown word (precise)    -- generated RegExp can be more precise
lib/dependencies/ContextDependencyHelpers.js:85:14     - Unknown word (Quasis)     -- const innerQuasis = quasis.slice(1, -
lib/dependencies/CssIcssExportDependency.js:8:50      - Unknown word (conventions) -- = require("../util/conventions");
lib/dependencies/CssUrlDependency.js:87:11     - Unknown word (Quotation)  -- let countQuotation = 0;
lib/dependencies/CssUrlDependency.js:88:11     - Unknown word (Apostrophe) -- let countApostrophe = 0;
lib/dependencies/ExportsInfoDependency.js:83:54     - Unknown word (Provided)   -- etExportsInfo(module).isExportProvided(exportName);
lib/dependencies/ExternalModuleDependency.js:25:54     - Unknown word (Specifiers) -- value: string }[]} importSpecifiers import specifiers
lib/dependencies/HarmonyAcceptDependency.js:119:17    - Unknown word (OUTDATED)   -- `__WEBPACK_OUTDATED_DEPENDENCIES__ => {
lib/dependencies/HarmonyEvaluatedImportSpecifierDependency.js:27:48     - Unknown word (analyzable) -- if x value statically analyzable
lib/dependencies/HarmonyExportDependencyParserPlugin.js:15:23     - Unknown word (Modes)      -- const { ExportPresenceModes } = require("./HarmonyImportD
lib/dependencies/HarmonyExportExpressionDependency.js:63:44     - Unknown word (covered)    -- declaration is already covered by SideEffectsFlagPlugin
lib/dependencies/HarmonyExportImportedSpecifierDependency.js:1189:54   - Unknown word (REEXPORT)   -- unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n" +
lib/dependencies/HarmonyExportImportedSpecifierDependency.js:62:13     - Unknown word (Reexport)   -- class NormalReexportItem {
lib/dependencies/HarmonyExportImportedSpecifierDependency.js:68:51     - Unknown word (behind)     -- true, if it is hidden behind another active export
lib/dependencies/HarmonyExportImportedSpecifierDependency.js:848:10    - Unknown word (potential)  -- const potentialConflicts =
lib/dependencies/HarmonyExportInitFragment.js:65:16     - Unknown word (Owned)      -- let exportMapOwned = false;
lib/dependencies/HarmonyImportDependency.js:55:37     - Unknown word (presence)   -- Error(`Invalid export presence value ${str}`);
lib/dependencies/HarmonyImportDependencyParserPlugin.js:304:30    - Unknown word (strictly)   -- only in case when we strictly follow the spec we need
lib/dependencies/HarmonyImportDependencyParserPlugin.js:77:32     - Unknown word (Optionals)  -- param {boolean[]} membersOptionals members Optionals
lib/dependencies/HarmonyImportDependencyParserPlugin.js:96:18     - Unknown word (Pure)       -- parser.hooks.isPure
lib/dependencies/HarmonyImportSpecifierDependency.js:263:40    - Unknown word (occurrence) -- method to allow the occurrence order plugin to count
lib/dependencies/HarmonyImportSpecifierDependency.js:379:11    - Unknown word (concated)   -- const concatedIds = prefixedIds.concat
lib/dependencies/ImportMetaPlugin.js:111:13    - Unknown word (Accessing)  -- "Accessing import.meta directly
lib/dependencies/LoaderPlugin.js:275:20    - Unknown word (Overloading) -- // @ts-ignore Overloading doesn't work
lib/dependencies/LocalModulesHelpers.js:59:46     - Unknown word (defining)   -- name relative to the defining named module
lib/dependencies/ModuleDecoratorDependency.js:129:24    - Unknown word (PROVIDES)   -- InitFragment.STAGE_PROVIDES,
lib/dependencies/StaticExportsDependency.js:23:41     - Unknown word (mangling)   -- canMangle true, if mangling exports names is allowed
lib/dependencies/SystemRuntimeModule.js:26:53     - Unknown word (indirectly) -- import cannot be used indirectly');"
lib/dependencies/WebAssemblyImportDependency.js:12:24     - Unknown word (webassemblyjs) -- @typedef {import("@webassemblyjs/ast").ModuleImportDescription
lib/dependencies/processExportInfo.js:21:36     - Unknown word (Visited)    -- ExportInfo>} alreadyVisited already visited export
lib/electron/ElectronTargetPlugin.js:28:5      - Unknown word (crash)      -- "crash-reporter",
lib/electron/ElectronTargetPlugin.js:40:12     - Unknown word (updater)    -- "auto-updater",
lib/electron/ElectronTargetPlugin.js:44:14     - Unknown word (shortcut)   -- "global-shortcut",
lib/electron/ElectronTargetPlugin.js:49:18     - Unknown word (blocker)    -- "power-save-blocker",
lib/electron/ElectronTargetPlugin.js:52:7      - Unknown word (tray)       -- "tray",
lib/electron/ElectronTargetPlugin.js:59:15     - Unknown word (capturer)   -- "desktop-capturer",
lib/errors/BuildCycleError.js:19:58     - Unknown word (impossible) -- dependency, which makes it impossible to create this module
lib/hmr/HotModuleReplacement.runtime.js:100:16    - Unknown word (Blocking)   -- return trackBlockingPromise(require.e(chunkId
lib/hmr/HotModuleReplacement.runtime.js:11:39     - Unknown word (vars)       -- next-line no-unused-vars
lib/hmr/HotModuleReplacement.runtime.js:28:6      - Unknown word (registered) -- var registeredStatusHandlers = [];
lib/hmr/HotModuleReplacement.runtime.js:75:15     - Unknown word (disposed)   -- ") from disposed module " +
lib/hmr/JavascriptHotModuleReplacement.runtime.js:168:21    - Unknown word (Disposed)   -- if (options.onDisposed) options.onDisposed
lib/hmr/JavascriptHotModuleReplacement.runtime.js:172:24    - Unknown word (Unexception) -- throw new Error("Unexception type " + result.type
lib/hmr/JavascriptHotModuleReplacement.runtime.js:211:36    - Unknown word (accepting)   -- called invalidate self-accepting is not possible
lib/hmr/JavascriptHotModuleReplacement.runtime.js:247:30    - Unknown word (disables)    -- disable module (this disables requires from this module
lib/hmr/JavascriptHotModuleReplacement.runtime.js:253:14    - Unknown word (disposing)   -- // when disposing there is no need to
lib/hmr/LazyCompilationPlugin.js:395:78    - Unknown word (refers)     -- the HMR accept/decline refers to
lib/hmr/LazyCompilationPlugin.js:401:16    - Unknown word (Referring)  -- const isReferringToDynamicImport = originModule
lib/hmr/lazyCompilationBackend.js:137:9     - Unknown word (Removing)   -- // Removing the listener is a workaround
lib/ids/DeterministicChunkIdsPlugin.js:12:8      - Unknown word (Deterministic) -- assignDeterministicIds
lib/ids/DeterministicModuleIdsPlugin.js:87:9      - Unknown word (Assigning)  -- `Assigning deterministic module
lib/ids/IdHelpers.js:363:25    - Unknown word (salting)        -- param {number} salt salting number to initialize
lib/ids/IdHelpers.js:414:13    - Unknown word (Ascending)      -- const assignAscendingModuleIds = (usedIds
lib/ids/IdHelpers.js:54:25     - Unknown word (representation) -- returns {string} id representation
lib/ids/OccurrenceChunkIdsPlugin.js:12:54     - Unknown word (Occurrence) -- declarations/plugins/ids/OccurrenceChunkIdsPlugin").OccurrenceChu
lib/ids/OccurrenceChunkIdsPlugin.js:41:9      - Unknown word (prioritise) -- const prioritiseInitial = this.options
lib/ids/OccurrenceChunkIdsPlugin.js:47:11     - Unknown word (occurs)     -- const occursInInitialChunksMap =
lib/ids/OccurrenceChunkIdsPlugin.js:63:19     - Unknown word (Occurs)     -- const aEntryOccurs =
lib/ids/SyncModuleIdsPlugin.js:32:9      - Unknown word (prune)      -- this._prune = mode === "update"
lib/index.js:342:20    - Unknown word (Defaulter)  -- get WebpackOptionsDefaulter() {
lib/index.js:346:25    - Unknown word (DEFAULTER)  -- DEP_WEBPACK_OPTIONS_DEFAULTER"
lib/index.js:437:29    - Unknown word (SPLITTING)  -- DEP_WEBPACK_AGGRESSIVE_SPLITTING_PLUGIN"
lib/javascript/BasicEvaluatedExpression.js:388:45    - Unknown word (particular) -- this expression to a particular identifier and its members
lib/javascript/BasicEvaluatedExpression.js:393:55    - Unknown word (progressively) -- getMemberRanges ranges of progressively increasing sub-expressions
lib/javascript/BasicEvaluatedExpression.js:414:5     - Unknown word (Wraps)         -- * Wraps an array of expressions
lib/javascript/BasicEvaluatedExpression.js:483:55    - Unknown word (unprocessed)   -- expression to a processed/unprocessed template string. Used
lib/javascript/JavascriptGenerator.js:29:17     - Unknown word (newer)      -- // replace with newer constructs
lib/javascript/JavascriptGenerator.js:86:62     - Unknown word (bails)      -- results. The plugin bails out
lib/javascript/JavascriptGenerator.js:87:28     - Unknown word (upfront)    -- if some were detected upfront.
lib/javascript/JavascriptModulesPlugin.js:1120:16   - Unknown word (factories)      -- "// module factories are used so entry inlining
lib/javascript/JavascriptModulesPlugin.js:1130:29   - Unknown word (intercepted)    -- module execution is intercepted so entry inlining is
lib/javascript/JavascriptModulesPlugin.js:1498:42   - Unknown word (calculation)    -- before the IIFE reason calculation. Ideally, it should
lib/javascript/JavascriptModulesPlugin.js:1498:55   - Unknown word (Ideally)        -- reason calculation. Ideally, it should only be executed
lib/javascript/JavascriptModulesPlugin.js:1499:73   - Unknown word (four)           -- return false. There are four reasons now, we have
lib/javascript/JavascriptModulesPlugin.js:371:11    - Unknown word (hotupdatechunk) -- ? `hotupdatechunk${chunk.id}`
lib/javascript/JavascriptModulesPlugin.js:555:36    - Unknown word (renders)        -- boolean} factory true: renders as factory method, false
lib/javascript/JavascriptModulesPlugin.js:556:34    - Unknown word (newly)          -- {Source | null} the newly generated source from
lib/javascript/JavascriptParser.js:102:16    - Unknown word (cast)       -- // TODO remove cast when @types/estree has
lib/javascript/JavascriptParser.js:120:34    - Unknown word (extender)   -- typeof AcornParser} extender acorn parser
lib/javascript/JavascriptParser.js:1330:46   - Unknown word (coercion)   -- next-line no-implicit-coercion
lib/javascript/JavascriptParser.js:1867:49   - Unknown word (classy)     -- | ClassDeclaration} classy a class node
lib/javascript/JavascriptParser.js:1915:9    - Unknown word (walking)    -- * Pre walking iterates the scope for
lib/javascript/JavascriptParser.js:1937:5    - Unknown word (Walking)    -- * Walking iterates the statements
lib/javascript/JavascriptParser.js:2122:5    - Unknown word (Walks)      -- * Walks a statements that is
lib/javascript/JavascriptParser.js:2124:10   - Unknown word (enforces)   -- * This enforces the nested statement
lib/javascript/JavascriptParser.js:2233:33   - Unknown word (discriminant) -- walkExpression(statement.discriminant);
lib/javascript/JavascriptParser.js:2240:6    - Unknown word (Terminating)  -- walkTerminatingStatement(statement)
lib/javascript/JavascriptParser.js:3257:20   - Unknown word (benefits)     -- // This has some benefits for optimizations that
lib/javascript/JavascriptParser.js:345:4     - Unknown word (Grabs)      -- * Grabs the name of a given
lib/javascript/JavascriptParser.js:4003:8    - Unknown word (undefine)     -- this.undefineVariable("this");
lib/javascript/JavascriptParser.js:4279:7    - Unknown word (Calculated)   -- parseCalculatedString(expression) {
lib/javascript/JavascriptParser.js:4618:14   - Unknown word (asking)       -- // Either asking directly for the end
lib/javascript/JavascriptParser.js:4719:12   - Unknown word (redefine)     -- // Don't redefine variable in same scope
lib/javascript/JavascriptParser.js:4883:66   - Unknown word (presented)    -- should be returned, presented in bit mask
lib/javascript/JavascriptParser.js:733:63    - Unknown word (assist)     -- valueAsExpression to assist us in evaluating the
lib/javascript/JavascriptParser.js:806:8     - Unknown word (Evaluates)  -- * Evaluates a binary expression
lib/javascript/JavascriptParser.js:830:112   - Unknown word (Comparison) -- handleStrictEqualityComparison`
lib/javascript/JavascriptParser.js:836:19    - Unknown word (Different)  -- const isAlwaysDifferent = (a, b) =>
lib/javascript/JavascriptParser.js:948:31    - Unknown word (boolish)    -- Different nullish or boolish status also means not
lib/javascript/JavascriptParserHelpers.js:126:20    - Unknown word (Traversal)  -- module.exports.skipTraversal = () => true;
lib/json/JsonModulesPlugin.js:29:53     - Unknown word (registers)  -- to the compiler and registers the json parser and
lib/json/JsonModulesPlugin.js:29:7      - Unknown word (adds)       -- * It adds the json module type
lib/library/AbstractLibraryPlugin.js:202:50    - Unknown word (overriding) -- preprocess as needed by overriding
lib/library/AmdLibraryPlugin.js:26:34     - Unknown word (Wrapper)    -- {boolean=} requireAsWrapper
lib/library/AssignLibraryPlugin.js:254:15    - Unknown word (declares)   -- return `it declares '${base}' on top-level
lib/library/AssignLibraryPlugin.js:35:4      - Unknown word (Validates)  -- * Validates the library name by
lib/library/AssignLibraryPlugin.js:36:36     - Unknown word (validated)  -- string} name name to be validated
lib/library/AssignLibraryPlugin.js:49:10     - Unknown word (generates)  -- // This generates for [a, b, c, d]:
lib/library/AssignLibraryPlugin.js:61:36     - Unknown word (excluding)  -- properties printed so far (excluding base)
lib/library/EnableLibraryPlugin.js:262:12    - Unknown word (Modern)     -- const ModernModuleLibraryPlugin
lib/library/SystemLibraryPlugin.js:104:6     - Unknown word (Declaring)   -- // Declaring variables for the internal
lib/library/SystemLibraryPlugin.js:114:9     - Unknown word (setters)     -- const setters =
lib/library/SystemLibraryPlugin.js:3:14      - Unknown word (Denning)    -- Author Joel Denning @joeldenning
lib/library/SystemLibraryPlugin.js:3:23      - Unknown word (joeldenning) -- Author Joel Denning @joeldenning
lib/library/SystemLibraryPlugin.js:3:9       - Unknown word (Joel)       -- Author Joel Denning @joeldenning
lib/library/UmdLibraryPlugin.js:43:8      - Unknown word (accessors)  -- const accessors = Array.isArray(accessor
lib/logging/truncateArgs.js:19:45     - Unknown word (truncated)  -- ]} args items to be truncated
lib/logging/truncateArgs.js:24:8      - Unknown word (lengths)    -- const lengths = args.map(a => `${a
lib/logging/truncateArgs.js:45:18     - Unknown word (fits)       -- // Check if all fits into maxLength
lib/logging/truncateArgs.js:48:34     - Unknown word (longest)    -- remove chars from the longest items until it fits
lib/logging/truncateArgs.js:51:9      - Unknown word (shorter)    -- const shorterItems = lengths.filter
lib/logging/truncateArgs.js:56:7      - Unknown word (overrun)    -- let overrun = currentLength - availableLe
lib/node/NodeWatchFileSystem.js:126:17    - Unknown word (Removals)   -- getAggregatedRemovals: util.deprecate(
lib/node/NodeWatchFileSystem.js:138:41    - Unknown word (REMOVALS)   -- WATCHER_GET_AGGREGATED_REMOVALS"
lib/node/NodeWatchFileSystem.js:37:11     - Unknown word (Undelayed)  -- callbackUndelayed
lib/node/NodeWatchFileSystem.js:82:28     - Unknown word (removals)   -- param {Set<string>} removals removals
lib/node/NodeWatchFileSystem.js:9:7       - Unknown word (Watchpack)  -- const Watchpack = require("watchpack
lib/node/nodeConsole.js:61:9      - Unknown word (colored)    -- const coloredStr = `\u001B[1m${str
lib/node/nodeConsole.js:72:13     - Unknown word (Colored)    -- const writeColored =
lib/optimize/AggressiveMergingPlugin.js:53:39     - Unknown word (improvement) -- a: Chunk, b: Chunk, improvement: number}[]} */
lib/optimize/AggressiveSplittingPlugin.js:149:41    - Unknown word (taken)      -- split if id is already taken
lib/optimize/AggressiveSplittingPlugin.js:219:25    - Unknown word (biggest)    -- // start with the biggest chunk
lib/optimize/AggressiveSplittingPlugin.js:318:31    - Unknown word (historical) -- Also add all unused historical splits (after the used
lib/optimize/AggressiveSplittingPlugin.js:318:65    - Unknown word (ones)       -- splits (after the used ones)
lib/optimize/AggressiveSplittingPlugin.js:81:17     - Unknown word (Recorded)   -- static wasChunkRecorded(chunk) {
lib/optimize/ConcatenatedModule.js:1757:6    - Unknown word (implied)     -- impliedStrict: true
lib/optimize/ConcatenatedModule.js:1774:15   - Unknown word (analyzing)   -- `\nwhile analyzing module ${m.identifier
lib/optimize/ConcatenatedModule.js:602:22    - Unknown word (Concatenate) -- * @typedef {object} ConcatenateModuleHooks
lib/optimize/ConcatenatedModule.js:772:7     - Unknown word (populate)    -- // populate cacheable
lib/optimize/ConcatenatedModule.js:854:6     - Unknown word (Guess)       -- // Guess size from embedded modules
lib/optimize/ConcatenatedModule.js:96:44     - Unknown word (Comparator) -- /util/comparators").Comparator<T>} Comparator
lib/optimize/EnsureChunkConditionsPlugin.js:59:18     - Unknown word (fulfil)     -- `Cannot fulfil chunk condition of
lib/optimize/EnsureChunkConditionsPlugin.js:62:15     - Unknown word (placing)    -- // Try placing in all parents
lib/optimize/FlagIncludedChunksPlugin.js:101:22    - Unknown word (swapping)     -- // instead of swapping A and B just bail
lib/optimize/FlagIncludedChunksPlugin.js:29:32     - Unknown word (represented) -- 1 is the max number represented as SMI in v8
lib/optimize/FlagIncludedChunksPlugin.js:30:26     - Unknown word (distributed) -- // we want the bits distributed this way:
lib/optimize/FlagIncludedChunksPlugin.js:32:21     - Unknown word (probability) -- // so it has a probability of 1 / modulesCount
lib/optimize/FlagIncludedChunksPlugin.js:33:36     - Unknown word (easiest)     -- first bit (2^0) is the easiest and every module could
lib/optimize/FlagIncludedChunksPlugin.js:43:9      - Unknown word (precalculate) -- // precalculate the modulo values for
lib/optimize/FlagIncludedChunksPlugin.js:45:12     - Unknown word (modulos)      -- const modulos = Array.from(
lib/optimize/FlagIncludedChunksPlugin.js:61:40     - Unknown word (bitmaps)      -- all chunks to generate bitmaps
lib/optimize/FlagIncludedChunksPlugin.js:92:27     - Unknown word (ourselves)    -- // skip if we find ourselves
lib/optimize/InnerGraphPlugin.js:238:53    - Unknown word (sometimes)      -- TopLevelSymbols, we sometimes need to
lib/optimize/InnerGraphPlugin.js:241:66    - Unknown word (anymore)        -- there might not exist anymore
lib/optimize/InnerGraphPlugin.js:92:16     - Unknown word (prewalking) -- // During prewalking the following datastructures
lib/optimize/InnerGraphPlugin.js:92:41     - Unknown word (datastructures) -- prewalking the following datastructures are filled with
lib/optimize/LimitChunkCountPlugin.js:176:51    - Unknown word (recalculation) -- potential pair which needs recalculation
lib/optimize/LimitChunkCountPlugin.js:96:30     - Unknown word (smallest)   -- Layer 2: ordered by smallest combined size
lib/optimize/MangleExportsPlugin.js:12:23     - Unknown word (CONTINUATION) -- NUMBER_OF_IDENTIFIER_CONTINUATION_CHARS
lib/optimize/MangleExportsPlugin.js:49:8      - Unknown word (mangleable)   -- const mangleableExports = [];
lib/optimize/MangleExportsPlugin.js:54:45     - Unknown word (determinism)  -- exports would break the determinism
lib/optimize/MergeDuplicateChunksPlugin.js:50:10     - Unknown word (remember)   -- // remember already tested chunks
lib/optimize/MergeDuplicateChunksPlugin.js:71:21     - Unknown word (allocating) -- // delay allocating the new Set until here
lib/optimize/MinChunkSizePlugin.js:79:22     - Unknown word (Filtered)   -- const sortedSizeFilteredExtendedPairCombinations
lib/optimize/MinChunkSizePlugin.js:79:42     - Unknown word (Combinations) -- sortedSizeFilteredExtendedPairCombinations = combinations
lib/optimize/MinChunkSizePlugin.js:94:11     - Unknown word (sadly)        -- // sadly javascript does an in
lib/optimize/ModuleConcatenationPlugin.js:144:20    - Unknown word (Inners)     -- const possibleInners = new Set();
lib/optimize/ModuleConcatenationPlugin.js:231:50    - Unknown word (suited)     -- depth are more likely suited as roots
lib/optimize/ModuleConcatenationPlugin.js:272:13    - Unknown word (filtered)   -- const filteredRuntime = filterRuntime
lib/optimize/ModuleConcatenationPlugin.js:355:39    - Unknown word (bailed)     -- statsEmptyConfigurations} bailed out completely`
lib/optimize/ModuleConcatenationPlugin.js:360:9     - Unknown word (HACK)       -- // HACK: Sort configurations
lib/optimize/ModuleConcatenationPlugin.js:38:40     - Unknown word (Importer)   -- number} incorrectChunksOfImporter
lib/optimize/ModuleConcatenationPlugin.js:40:23     - Unknown word (importer)   -- @property {number} importerFailed
lib/optimize/ModuleConcatenationPlugin.js:546:94    - Unknown word (problematic) -- failureCache cache for problematic modules to be more performant
lib/optimize/ModuleConcatenationPlugin.js:548:27    - Unknown word (Mutate)      -- param {boolean} avoidMutateOnFailure avoid mutating
lib/optimize/ModuleConcatenationPlugin.js:548:49    - Unknown word (mutating)    -- avoidMutateOnFailure avoid mutating the config when adding
lib/optimize/ModuleConcatenationPlugin.js:548:81    - Unknown word (fails)       -- the config when adding fails
lib/optimize/ModuleConcatenationPlugin.js:635:21    - Unknown word (Explanations) -- const importingExplanations = new Set(
lib/optimize/ModuleConcatenationPlugin.js:755:22    - Unknown word (consistently) -- // Module must be consistently referenced in the same
lib/optimize/RealContentHashPlugin.js:45:57     - Unknown word (efficient)  -- first so this should be efficient enough
lib/optimize/RealContentHashPlugin.js:47:16     - Unknown word (looping)    -- // instead of looping over all assets.
lib/optimize/RemoveParentModulesPlugin.js:20:19     - Unknown word (Masks)      -- function intersectMasks(masks) {
lib/optimize/RemoveParentModulesPlugin.js:30:7      - Unknown word (THIRTY)     -- const THIRTY_TWO_BIGINT = BigInt
lib/optimize/RemoveParentModulesPlugin.js:33:4      - Unknown word (Parses)     -- * Parses the module mask and
lib/optimize/RemoveParentModulesPlugin.js:45:30     - Unknown word (zeros)      -- The number of trailing zeros is the number trimmed
lib/optimize/RemoveParentModulesPlugin.js:46:17     - Unknown word (baked)      -- // The 32 is baked into the initial value
lib/optimize/RemoveParentModulesPlugin.js:86:45     - Unknown word (uniquely)   -- the module mask to uniquely identify the module
lib/optimize/RemoveParentModulesPlugin.js:86:54     - Unknown word (identify)   -- module mask to uniquely identify the module
lib/optimize/RemoveParentModulesPlugin.js:99:57     - Unknown word (quicker)    -- and by chunk group for quicker comparisons
lib/optimize/SplitChunksPlugin.js:1039:29   - Unknown word (applying)   -- get list and key by applying the filter function
lib/optimize/SplitChunksPlugin.js:1074:19   - Unknown word (Validated)  -- const alreadyValidatedParents = new Map();
lib/optimize/SplitChunksPlugin.js:1152:29   - Unknown word (guide)      -- "See migration guide of more info."
lib/optimize/SplitChunksPlugin.js:1163:29   - Unknown word (merges)     -- This automatically merges equal names
lib/optimize/SplitChunksPlugin.js:1223:16   - Unknown word (Combs)      -- const getCombs = memoize(() => {
lib/optimize/SplitChunksPlugin.js:1240:20   - Unknown word (comb)       -- for (const comb of getExportsCombinations
lib/optimize/SplitChunksPlugin.js:1250:14   - Unknown word (combs)      -- const combs = cacheGroup.usedExports
lib/optimize/SplitChunksPlugin.js:1304:13   - Unknown word (violating)  -- const violatingSizes = getViolatingMinSizes
lib/optimize/SplitChunksPlugin.js:1430:12   - Unknown word (respect)    -- // respect max requests
lib/optimize/SplitChunksPlugin.js:1459:10   - Unknown word (Were)       -- // Were some (invalid) chunks
lib/optimize/SplitChunksPlugin.js:1460:13   - Unknown word (readd)      -- // => readd all modules to the queue
lib/optimize/SplitChunksPlugin.js:35:55     - Unknown word (Grouped)    -- deterministicGrouping").GroupedItems<Module>} DeterministicGr
lib/optimize/SplitChunksPlugin.js:381:10    - Unknown word (Violating)  -- const getViolatingMinSizes = (sizes, minSize
lib/optimize/SplitChunksPlugin.js:815:15    - Unknown word (Optimized)  -- let alreadyOptimized = false;
lib/optimize/SplitChunksPlugin.js:830:9     - Unknown word (Give)       -- // Give each selected chunk
lib/optimize/SplitChunksPlugin.js:897:13    - Unknown word (grouped)    -- const groupedByUsedExports = new Map
lib/optimize/SplitChunksPlugin.js:99:36     - Unknown word (Enforce)    -- boolean} _conditionalEnforce
lib/performance/SizeLimitsPlugin.js:139:11    - Unknown word (Individual) -- // 1. Individual Chunk: Size < 250kb
lib/performance/SizeLimitsPlugin.js:140:11    - Unknown word (Collective) -- // 2. Collective Initial Chunks [entrypoint
lib/rules/BasicMatcherRulePlugin.js:16:39     - Unknown word (inverts)    -- boolean=} invert if true, inverts the condition
lib/rules/RuleSetCompiler.js:390:37    - Unknown word (explaining) -- string} message message explaining the problem
lib/rules/RuleSetCompiler.js:395:5     - Unknown word (Compiling)  -- `Compiling RuleSet failed: ${message
lib/runtime/AutoPublicPathRuntimeModule.js:53:11     - Unknown word (Technically) -- // Technically we could use `document
lib/runtime/AutoPublicPathRuntimeModule.js:54:18     - Unknown word (attacker)    -- // but an attacker could try to inject
lib/runtime/AutoPublicPathRuntimeModule.js:54:40     - Unknown word (inject)      -- attacker could try to inject `<script>HTMLScriptElement
lib/runtime/AutoPublicPathRuntimeModule.js:72:13     - Unknown word (supporting)  -- "// When supporting browsers where an automatic
lib/runtime/CompatRuntimeModule.js:78:15     - Unknown word (isolating)  -- // We avoid isolating this to have better
lib/runtime/GetChunkFilenameRuntimeModule.js:23:72     - Unknown word (functor)    -- getFilenameForChunk functor to get the filename
lib/schemes/HttpUriPlugin.js:1044:20   - Unknown word (explainer)   -- const explainer = `Incorrect end of
lib/schemes/HttpUriPlugin.js:1046:40   - Unknown word (gitattributes) -- make sure to configure .gitattributes correctly for the lockfile
lib/schemes/HttpUriPlugin.js:1089:45   - Unknown word (unexpectedly)  -- of line sequence was unexpectedly changed"
lib/schemes/HttpUriPlugin.js:150:77    - Unknown word (Logic)      -- validUntil: number}} Logic for storing in cache
lib/schemes/HttpUriPlugin.js:157:22    - Unknown word (revalidated) -- // Resource is only revalidated, after that timestamp
lib/schemes/HttpUriPlugin.js:165:20    - Unknown word (revalidate)  -- if (parsed["must-revalidate"]) validUntil = 0;
lib/schemes/HttpUriPlugin.js:262:8     - Unknown word (Flight)      -- let inFlight = false;
lib/schemes/HttpUriPlugin.js:452:9     - Unknown word (warned)      -- let warnedAboutEol = false;
lib/schemes/HttpUriPlugin.js:793:55    - Unknown word (terminated)  -- ${res.statusCode}] (terminated)`);
lib/schemes/HttpUriPlugin.js:821:32    - Unknown word (fetching)    -- message += `\nwhile fetching ${url}`;
lib/schemes/HttpUriPlugin.js:926:74    - Unknown word (upgraded)    -- lockfile entry must be upgraded, but upgrading is not
lib/schemes/HttpUriPlugin.js:926:88    - Unknown word (upgrading)   -- must be upgraded, but upgrading is not enabled.
lib/serialization/BinaryMiddleware.js:100:5     - Unknown word (Uplift)     -- /** Uplift high-order bits */
lib/serialization/BinaryMiddleware.js:18:12     - Unknown word (Nulls)      -- Section -> NullsSection |
lib/serialization/BinaryMiddleware.js:710:6     - Unknown word (Reads)      -- * Reads n bytes
lib/serialization/BinaryMiddleware.js:767:35    - Unknown word (guarantees) -- link checkOverflow} guarantees at least one byte remaining
lib/serialization/BinaryMiddleware.js:84:7      - Unknown word (NULLS)      -- const NULLS8_HEADER = 0x13;
lib/serialization/FileMiddleware.js:59:7      - Unknown word (DECOMPRESSION) -- const DECOMPRESSION_CHUNK_SIZE = 100 *
lib/serialization/FileMiddleware.js:620:10    - Unknown word (decompression) -- let decompression;
lib/serialization/FileMiddleware.js:93:81     - Unknown word (writes)        -- Promise<void>} writeFile writes a file
lib/serialization/ObjectMiddleware.js:115:17    - Unknown word (Inversed)   -- const serializerInversed = new Map();
lib/serialization/ObjectMiddleware.js:138:65    - Unknown word (wild)       -- types may occur in the wild too, e. g. when
lib/serialization/ObjectMiddleware.js:13:7      - Unknown word (Plain)      -- const PlainObjectSerializer = require
lib/serialization/ObjectMiddleware.js:19:33     - Unknown word (Complex)    -- typedef {import("./types").ComplexSerializableType} ComplexSeria
lib/serialization/ObjectMiddleware.js:528:71    - Unknown word (saves)      -- emitting a reference (this saves 1 byte per empty string
lib/serialization/PlainObjectSerializer.js:10:42     - Unknown word (Assoc)      -- any) => void} CacheAssoc */
lib/serialization/PlainObjectSerializer.js:53:41     - Unknown word (assoc)      -- CacheAssoc} cacheAssoc cache assoc fn
lib/serialization/PlainObjectSerializer.js:72:20     - Unknown word (plain)      -- * @param {T} obj plain object
lib/serialization/PlainObjectSerializer.js:78:37     - Unknown word (unlikely)   -- with so many keys are unlikely to share structure
lib/serialization/SerializerMiddleware.js:142:33    - Unknown word (unmemorized) -- value that has been unmemorized can't be called again
lib/sharing/ConsumeSharedModule.js:17:33     - Unknown word (Holey)      -- rangeToString, stringifyHoley } = require("../util
lib/sharing/ConsumeSharedPlugin.js:220:17    - Unknown word (wished)     -- // If wished one can specify one
lib/sharing/ConsumeSharedPlugin.js:27:80     - Unknown word (Consumes)   -- ConsumeSharedPlugin").ConsumesConfig} ConsumesConfig
lib/sharing/ConsumeSharedPlugin.js:325:16    - Unknown word (remainder)  -- const remainder = request.slice(prefix
lib/sharing/ConsumeSharedRuntimeModule.js:129:13    - Unknown word (Satisfying) -- `var findSatisfyingVersion = ${runtimeTemplate
lib/sharing/ConsumeSharedRuntimeModule.js:163:102   - Unknown word (consumption) -- eager ? " for eager consumption" : "") + " of shared
lib/sharing/ConsumeSharedRuntimeModule.js:173:18    - Unknown word (Exist)       -- `var failAsNotExist = ${runtimeTemplate
lib/sharing/ConsumeSharedRuntimeModule.js:174:45    - Unknown word (doesn\'t)    -- Shared module " + key + " doesn\'t exist in shared scope
lib/sharing/ProvideSharedPlugin.js:46:9      - Unknown word (provides)   -- this._provides = /** @type {[string
lib/sharing/ProvideSharedPlugin.js:91:16     - Unknown word (Provides)   -- const matchProvides = new Map();
lib/sharing/ShareRuntimeModule.js:56:10     - Unknown word (stages)     -- let stages = initCodePerScope.get
lib/sharing/resolveMatchedConfigs.js:29:51     - Unknown word (matchers)   -- MatchedConfigs<T>>} resolved matchers
lib/sharing/utils.js:14:4      - Unknown word (Extreme)    -- // Extreme shorthand only for github
lib/sharing/utils.js:15:21     - Unknown word (EXTREME)    -- const RE_URL_GITHUB_EXTREME_SHORT = /^[^/@:.\s]
lib/sharing/utils.js:20:4      - Unknown word (Currently)  -- // Currently supported protocols
lib/sharing/utils.js:250:12    - Unknown word (extreme)    -- // github extreme shorthand
lib/sharing/utils.js:55:4      - Unknown word (thanks)     -- // thanks to https://github.com
lib/stats/DefaultStatsFactoryPlugin.js:1050:14   - Unknown word (Reducer)     -- const sizeReducer = (total, { size })
lib/stats/DefaultStatsFactoryPlugin.js:1608:15   - Unknown word (SORTER)      -- const MODULES_SORTER = {
lib/stats/DefaultStatsFactoryPlugin.js:1640:7    - Unknown word (SORTERS)     -- const SORTERS = {
lib/stats/DefaultStatsFactoryPlugin.js:1830:8    - Unknown word (oversize)    -- let oversize;
lib/stats/DefaultStatsFactoryPlugin.js:1857:41   - Unknown word (feet)        -- should use ceil to always feet in max
lib/stats/DefaultStatsFactoryPlugin.js:2009:162  - Unknown word (Groupers)    -- StatsOptions) => void>} AssetsGroupers */
lib/stats/DefaultStatsFactoryPlugin.js:2012:14   - Unknown word (GROUPERS)    -- const ASSETS_GROUPERS = {
lib/stats/DefaultStatsFactoryPlugin.js:305:146   - Unknown word (Extractors) -- StatsFactory) => void>} ExtractorsByOption
lib/stats/DefaultStatsFactoryPlugin.js:439:58    - Unknown word (technically) -- break; // circular (technically impossible, but how
lib/stats/DefaultStatsFactoryPlugin.js:475:14    - Unknown word (EXTRACTORS)  -- const SIMPLE_EXTRACTORS = {
lib/stats/DefaultStatsFactoryPlugin.js:835:10    - Unknown word (factorized)  -- const factorizedErrors = factory.create
lib/stats/DefaultStatsPresetPlugin.js:299:7     - Unknown word (NORMALIZER) -- const NORMALIZER = {
lib/stats/DefaultStatsPrinterPlugin.js:1088:20   - Unknown word (indenter)   -- * @param {string} indenter indenter
lib/stats/DefaultStatsPrinterPlugin.js:1114:35   - Unknown word (joiner)     -- SimpleElementJoiner} joiner
lib/stats/DefaultStatsPrinterPlugin.js:1133:22   - Unknown word (JOINERS)    -- const SIMPLE_ELEMENT_JOINERS = {
lib/stats/DefaultStatsPrinterPlugin.js:115:26    - Unknown word (PRINTERS)   -- const COMPILATION_SIMPLE_PRINTERS = {
lib/stats/DefaultStatsPrinterPlugin.js:12:57     - Unknown word (Formaters)  -- atsPrinter").KnownStatsPrinterFormaters} KnownStatsPrinterFormaters
lib/stats/DefaultStatsPrinterPlugin.js:1333:7    - Unknown word (Quantity)   -- boldQuantity
lib/stats/DefaultStatsPrinterPlugin.js:196:41    - Unknown word (shown)      -- information that is not shown.\nUse 'stats.errorDetails
lib/stats/DefaultStatsPrinterPlugin.js:20:20     - Unknown word (singular)   -- * @param {string} singular singular
lib/stats/DefaultStatsPrinterPlugin.js:958:67    - Unknown word (Joiner)     -- undefined} SimpleItemsJoiner */
lib/stats/DefaultStatsPrinterPlugin.js:979:20    - Unknown word (JOINER)     -- const SIMPLE_ITEMS_JOINER = {
lib/stats/StatsFactory.js:70:58     - Unknown word (unfiltered) -- context", "index", "unfilteredIndex"])
lib/util/ArrayHelpers.js:27:48     - Unknown word (partitioned) -- Array of values to be partitioned
lib/util/ArrayHelpers.js:28:83     - Unknown word (truthiness)  -- partitions based on truthiness of result.
lib/util/ArrayHelpers.js:39:46     - Unknown word (accumulator) -- Array<T>]} groups An accumulator storing already partitioned
lib/util/ArrayHelpers.js:9:37      - Unknown word (performing) -- arrays or strings by performing strict equality check
lib/util/ArrayQueue.js:37:5      - Unknown word (Empties)    -- * Empties the queue.
lib/util/ArrayQueue.js:45:5      - Unknown word (Appends)    -- * Appends the specified element
lib/util/ArrayQueue.js:54:5      - Unknown word (Retrieves)  -- * Retrieves and removes the head
lib/util/ArrayQueue.js:71:5      - Unknown word (Finds)      -- * Finds and removes an item
lib/util/AsyncQueue.js:202:5     - Unknown word (Waits)      -- * Waits for an already started
lib/util/LazyBucketSortedSet.js:23:56     - Unknown word (TWICE)      -- items (DO NOT ADD ITEM TWICE),
lib/util/LazyBucketSortedSet.js:24:22     - Unknown word (exiting)    -- * Supports removing exiting items (DO NOT REMOVE
lib/util/LazySet.js:158:31    - Unknown word (unicorn)    -- eslint-disable-next-line unicorn/no-array-for-each
lib/util/LazySet.js:43:42     - Unknown word (eventually) -- an addAll method to eventually add items from another
lib/util/LazySet.js:45:22     - Unknown word (deopts)     -- * Iteration methods deopts to normal Set performance
lib/util/LazySet.js:60:9      - Unknown word (deopt)      -- this._deopt = false;
lib/util/Semaphore.js:17:8      - Unknown word (waiters)    -- this.waiters = [];
lib/util/SortableSet.js:11:25     - Unknown word (offers)     -- A subset of Set that offers sorting functionality
lib/util/SortableSet.js:11:40     - Unknown word (functionality) -- that offers sorting functionality
lib/util/SortableSet.js:61:38     - Unknown word (existed)       -- boolean} true if value existed in set, false otherwise
lib/util/SortableSet.js:79:17     - Unknown word (comparer)      -- * Sort with a comparer function
lib/util/StackedCacheMap.js:10:57     - Unknown word (additions)  -- handle multiple item additions and
lib/util/StackedCacheMap.js:10:7      - Unknown word (situations) -- * in situations where you need to handle
lib/util/StackedCacheMap.js:11:4      - Unknown word (frequently) -- * frequently access the largest map
lib/util/StackedCacheMap.js:13:10     - Unknown word (particularly) -- * It is particularly optimized for efficiently
lib/util/StackedCacheMap.js:43:31     - Unknown word (afterwards)   -- should not be changed afterwards. If the map is mutable
lib/util/StackedCacheMap.js:89:52     - Unknown word (inefficient)  -- has before reading is inefficient, use StackedCacheMap
lib/util/StackedCacheMap.js:9:44      - Unknown word (designed)   -- is a data structure designed as an alternative to
lib/util/StackedMap.js:8:27      - Unknown word (tombstone)  -- TOMBSTONE = Symbol("tombstone");
lib/util/StackedMap.js:8:7       - Unknown word (TOMBSTONE)  -- const TOMBSTONE = Symbol("tombstone
lib/util/StringXor.js:13:7      - Unknown word (operating)  -- * we operating on the character codes
lib/util/StringXor.js:54:10     - Unknown word (allocates)  -- * it allocates a new buffer of the
lib/util/StringXor.js:80:84     - Unknown word (chose)      -- StringXor object. We chose to use "latin1" encoding
lib/util/WeakTupleMap.js:71:17     - Unknown word (peek)       -- node = node._peek(args[i]);
lib/util/binarySearchBounds.js:109:32    - Unknown word (perform)       -- functions are used to perform binary searches on arrays
lib/util/binarySearchBounds.js:109:47    - Unknown word (searches)      -- used to perform binary searches on arrays.
lib/util/binarySearchBounds.js:17:44     - Unknown word (repeatedly)    -- uses a while loop to repeatedly divide the search interval
lib/util/binarySearchBounds.js:3:16      - Unknown word (Lysenko)    -- Author Mikola Lysenko @mikolalysenko
lib/util/binarySearchBounds.js:3:25      - Unknown word (mikolalysenko) -- Author Mikola Lysenko @mikolalysenko
lib/util/binarySearchBounds.js:3:9       - Unknown word (Mikola)     -- Author Mikola Lysenko @mikolalysenko
lib/util/chainedImports.js:15:37     - Unknown word (actually)   -- in the chain that are actually referring to namespaces
lib/util/chainedImports.js:15:46     - Unknown word (referring)  -- chain that are actually referring to namespaces or imports
lib/util/chainedImports.js:16:4      - Unknown word (Deeper)     -- * Deeper member accessors on
lib/util/chainedImports.js:16:82     - Unknown word (deeper)     -- be re-rendered.  If deeper member accessors are
lib/util/chainedImports.js:17:102    - Unknown word (vice)       -- unquoted accessor, or vice versa,
lib/util/chainedImports.js:17:107    - Unknown word (versa)      -- unquoted accessor, or vice versa,
lib/util/chainedImports.js:18:45     - Unknown word (differently) -- treat quoted accessors differently. e.g. import { a }
lib/util/chainedImports.js:19:22     - Unknown word (untrimmed)   -- * @param {string[]} untrimmedIds chained ids
lib/util/chainedImports.js:20:40     - Unknown word (encompassing) -- untrimmedRange range encompassing allIds
lib/util/chainedImports.js:21:40     - Unknown word (cumulative)   -- | undefined} ranges cumulative range of ids for each
lib/util/chainedImports.js:51:58     - Unknown word (trimming)     -- Instead, we just disable trimming for now.  This may break
lib/util/chainedImports.js:89:35     - Unknown word (traversed)    -- all nested exports are traversed, the next item is the
lib/util/cleverMerge.js:16:60     - Unknown word (computation) -- the result to avoid computation if same objects passed
lib/util/cleverMerge.js:23:36     - Unknown word (gets)        -- same arguments passed, gets the result from WeakMap
lib/util/cleverMerge.js:262:36    - Unknown word (deeply)      -- objects. Objects are deeply clever merged.
lib/util/comparators.js:437:25    - Unknown word (ship)       -- since these versions ship with a stable sort function
lib/util/compileBooleanMatcher.js:207:8     - Unknown word (suffixed)        -- const suffixed = popCommonItems(
lib/util/compileBooleanMatcher.js:27:67     - Unknown word (unconditionally) -- string)} true/false, when unconditionally true/false, or a template
lib/util/concatenate.js:112:12    - Unknown word (uncool)     -- // Remove uncool stuff
lib/util/concatenate.js:172:46    - Unknown word (volatile)   -- try,typeof,var,void,volatile,while,with,yield",
lib/util/concatenate.js:189:60    - Unknown word (taint)      -- setTimeout,status,submit,taint,text,textarea,top,unescape
lib/util/concatenate.js:190:4     - Unknown word (untaint)    -- "untaint,window",
lib/util/create-schema-validation.js:34:102    - Unknown word (drawbacks)  -- This has performance drawbacks.",
lib/util/create-schema-validation.js:34:74     - Unknown word (happy)      -- while real schema is happy. This has performance
lib/util/create-schema-validation.js:35:22     - Unknown word (COMPILED)   -- "DEP_WEBPACK_PRE_COMPILED_SCHEMA_INVALID"
lib/util/createHash.js:157:19    - Unknown word (cryptographic) -- // TODO add non-cryptographic algorithm here
lib/util/createHash.js:69:5      - Unknown word (Calculates) -- * Calculates the digest {@link https
lib/util/deprecation.js:105:9     - Unknown word (Indexer)     -- const dIndexer = createDeprecation
lib/util/deprecation.js:107:17    - Unknown word (INDEXER)     -- "ARRAY_TO_SET_INDEXER"
lib/util/deprecation.js:163:6     - Unknown word (indexer)     -- let indexerDefined = 1;
lib/util/deprecation.js:34:16     - Unknown word (DEPRECATION) -- `DEP_WEBPACK_DEPRECATION_${code}`
lib/util/deterministicGrouping.js:14:37     - Unknown word (lexically)     -- for removing/adding 10 lexically adjacent files
lib/util/deterministicGrouping.js:171:22    - Unknown word (selective)     -- * @returns {number} selective size sum
lib/util/deterministicGrouping.js:203:30    - Unknown word (similarities)  -- param {number[] | null} similarities similarities between
lib/util/deterministicGrouping.js:220:12    - Unknown word (Similarities)  -- const newSimilarities = [];
lib/util/deterministicGrouping.js:30:26     - Unknown word (similarity)    -- returns {number} the similarity as number
lib/util/deterministicGrouping.js:326:15    - Unknown word (Problematic)   -- const removeProblematicNodes = (group, consideredSize
lib/util/deterministicGrouping.js:382:37    - Unknown word (unproblematic) -- to work only with the unproblematic nodes
lib/util/deterministicGrouping.js:389:13    - Unknown word (unsplittable)  -- // find unsplittable area from left and right
lib/util/deterministicGrouping.js:390:8     - Unknown word (going)         -- // going minSize from left and
lib/util/deterministicGrouping.js:391:63    - Unknown word (stuck)         -- included otherwise we get stuck
lib/util/deterministicGrouping.js:414:8     - Unknown word (Perfect)       -- // Perfect split: [ O O O ] [ O
lib/util/deterministicGrouping.js:446:14    - Unknown word (Similarity)    -- let bestSimilarity = Infinity;
lib/util/deterministicGrouping.js:473:22    - Unknown word (assumption)    -- // but if that assumption is wrong
lib/util/deterministicGrouping.js:8:27      - Unknown word (probabilities) -- Simulations show these probabilities for a single change
lib/util/deterministicGrouping.js:8:4       - Unknown word (Simulations) -- // Simulations show these probabilities
lib/util/extractUrlAndGlobal.js:3:13      - Unknown word (Chen)       -- Author Sam Chen @chenxsan
lib/util/extractUrlAndGlobal.js:3:19      - Unknown word (chenxsan)   -- Author Sam Chen @chenxsan
lib/util/findGraphRoots.js:66:5      - Unknown word (grab)       -- // grab all the dependencies
lib/util/findGraphRoots.js:93:16     - Unknown word (entering)   -- // start by entering the selected node
lib/util/fs.js:100:63    - Unknown word (keeps)      -- closes the watcher, but keeps underlying file watchers
lib/util/fs.js:100:94    - Unknown word (alive)      -- underlying file watchers alive until the next watch
lib/util/identifier.js:304:43    - Unknown word (avoiding)   -- a new request string avoiding absolute paths when
lib/util/identifier.js:354:20    - Unknown word (skips)      -- * Parse resource, skips fragment part
lib/util/identifier.js:373:58    - Unknown word (undone)     -- filename which should be undone
lib/util/memoize.js:11:37     - Unknown word (memorized)  -- FunctionReturning<T>} fn memorized function
lib/util/numberHash.js:42:4      - Unknown word (Computes)   -- * Computes a 32-bit FNV-1a hash
lib/util/numberHash.js:51:41     - Unknown word (multiplication) -- to do c-style 32-bit multiplication and keep only the 3
lib/util/numberHash.js:9:18      - Unknown word (switching)  -- * Threshold for switching from 32-bit to 64-bit
lib/util/processAsyncTree.js:13:93     - Unknown word (pushes)     -- processor worker which pushes more items
lib/util/propertyAccess.js:13:40     - Unknown word (accesses)   -- string} chain of property accesses
lib/util/propertyName.js:56:53     - Unknown word (till)       -- keywords defined under ES1 till ES3
lib/util/propertyName.js:65:4      - Unknown word (Certain)    -- * Certain strings like "default
lib/util/registerExternalSerializer.js:111:21    - Unknown word (Optimizing) -- source.addAllSkipOptimizing(read());
lib/util/registerExternalSerializer.js:325:9     - Unknown word (Formatter)  -- postFormatter: error.postFormatter
lib/util/semver.js:169:8     - Unknown word (negate)     -- const negate = range => {
lib/util/semver.js:213:36    - Unknown word (sparse)     -- disable-next-line no-sparse-arrays
lib/util/semver.js:257:21    - Unknown word (hyphen)     -- // range      ::= hyphen | simple ( ' ' ( '
lib/util/semver.js:380:29    - Unknown word (swill)      -- when negated is set it swill set for < instead of
lib/util/semver.js:418:13    - Unknown word (continues)  -- // next: continues to the next items
lib/util/semver.js:462:15    - Unknown word (diagonal)   -- // Handle diagonal
lib/util/semver.js:497:36    - Unknown word (lonely)     -- disable-next-line no-lonely-if
lib/util/semver.js:72:6      - Unknown word (Handles)    -- // Handles first row in table
lib/util/serialization.js:40:16     - Unknown word (Serializables) -- const internalSerializables = require("./internalSerializ
lib/wasm-async/AsyncWebAssemblyParser.js:74:11     - Unknown word (descr)      -- node.descr,
lib/wasm-sync/WasmChunkLoadingRuntimeModule.js:105:34    - Unknown word (valtype)    -- k) => `p${k}${param.valtype}`
lib/wasm-sync/WasmChunkLoadingRuntimeModule.js:272:44    - Unknown word (MANGLED)    -- stringify(WebAssemblyUtils.MANGLED_MODULE)}: ${content
lib/wasm-sync/WasmFinalizeExportsPlugin.js:30:16     - Unknown word (Incompatible) -- const jsIncompatibleExports =
lib/wasm-sync/WebAssemblyGenerator.js:162:4     - Unknown word (Rewrite)    -- * Rewrite the import globals:
lib/wasm-sync/WebAssemblyGenerator.js:164:6     - Unknown word (injects)    -- * - injects at the same offset a
lib/wasm-sync/WebAssemblyGenerator.js:175:7     - Unknown word (rewrite)    -- const rewriteImportedGlobals = state
lib/wasm-sync/WebAssemblyGenerator.js:301:22    - Unknown word (fills)      -- * The init function fills the globals given input
lib/wasm-sync/WebAssemblyGenerator.js:353:14    - Unknown word (instr)      -- for (const instr of additionalInitCode
lib/wasm-sync/WebAssemblyGenerator.js:367:9     - Unknown word (functype)   -- const functype = t.typeInstruction
lib/wasm-sync/WebAssemblyGenerator.js:370:9     - Unknown word (funcindex)  -- const funcindex = t.indexInFuncSection
lib/wasm-sync/WebAssemblyGenerator.js:96:22     - Unknown word (Descr)      -- if (t.isFuncImportDescr(node.descr)) {
lib/wasm-sync/WebAssemblyInInitialChunkError.js:21:23     - Unknown word (Chains)     -- const getInitialModuleChains = (
lib/wasm-sync/WebAssemblyParser.js:22:63     - Unknown word (externref)  -- i64", "f32", "f64", "externref"]);
schemas/WebpackOptions.check.js:6:29616   - Unknown word (Pathinfo)   -- $ref:"#/definitions/Pathinfo"},publicPath:{$ref:
schemas/WebpackOptions.check.js:6:37072   - Unknown word (restrictions) -- boolean"},resolver:{},restrictions:{type:"array",items
schemas/WebpackOptions.check.js:6:8507    - Unknown word (Unnamed)    -- "#/definitions/EntryUnnamed"}]},EntryStaticNormalized
schemas/WebpackOptions.json:114:107   - Unknown word (emitting)    -- set to 'false' to omit emitting e. g. for SSR.",
schemas/WebpackOptions.json:1189:45   - Unknown word (argument)      -- Data object passed as argument when a function is set
schemas/WebpackOptions.json:1198:27   - Unknown word (Contextual)    -- "description": "Contextual information.",
schemas/WebpackOptions.json:1203:47   - Unknown word (referencing)   -- The category of the referencing dependencies.",
schemas/WebpackOptions.json:1269:105  - Unknown word (renderer)      -- like 'web-frame', 'ipc-renderer' or 'shell' as external
schemas/WebpackOptions.json:1269:92   - Unknown word (frame)         -- preload context like 'web-frame', 'ipc-renderer' or
schemas/WebpackOptions.json:1272:18   - Unknown word (Renderer)      -- "electronRenderer": {
schemas/WebpackOptions.json:1322:115  - Unknown word (readability)   -- or '||' to improve readability of configurations."
schemas/WebpackOptions.json:1336:107  - Unknown word (copying)       -- eserialization. This requires copying data into smaller buffers
schemas/WebpackOptions.json:1336:27   - Unknown word (Allows)        -- "description": "Allows to collect unused memory
schemas/WebpackOptions.json:1336:37   - Unknown word (collect)       -- description": "Allows to collect unused memory allocated
schemas/WebpackOptions.json:1375:26   - Unknown word (Large)         -- "idleTimeoutAfterLargeChanges": {
schemas/WebpackOptions.json:1392:132  - Unknown word (tailing)       -- directory, including the tailing slash)",
schemas/WebpackOptions.json:1406:108  - Unknown word (modified)      -- be trusted to not be modified otherwise.",
schemas/WebpackOptions.json:1436:27   - Unknown word (Additionally)  -- "description": "Additionally cache computation of
schemas/WebpackOptions.json:1440:86   - Unknown word (coexisting)    -- will lead to different coexisting caches.",
schemas/WebpackOptions.json:1440:97   - Unknown word (caches)        -- different coexisting caches.",
schemas/WebpackOptions.json:1444:27   - Unknown word (Track)         -- "description": "Track and log detailed timing
schemas/WebpackOptions.json:1444:50   - Unknown word (timing)        -- Track and log detailed timing information for individual
schemas/WebpackOptions.json:1460:88   - Unknown word (reuse)         -- versions won't allow to reuse the cache and override
schemas/WebpackOptions.json:156:174   - Unknown word (structure)   -- to match the folder structure there.",
schemas/WebpackOptions.json:1587:33   - Unknown word (chars)         -- description": "Number of chars which are used for the
schemas/WebpackOptions.json:1698:12   - Unknown word (Warnings)      -- "IgnoreWarnings": {
schemas/WebpackOptions.json:169:75    - Unknown word (whenever)    -- module and should return whenever asset should be inlined
schemas/WebpackOptions.json:1752:72   - Unknown word (exchanged)     -- import() function (can be exchanged for a polyfill).",
schemas/WebpackOptions.json:1765:32   - Unknown word (appends)       -- description": "Only appends lines to the output
schemas/WebpackOptions.json:1765:61   - Unknown word (Avoids)        -- lines to the output. Avoids updating existing output
schemas/WebpackOptions.json:1765:68   - Unknown word (updating)      -- to the output. Avoids updating existing output e. g
schemas/WebpackOptions.json:1769:44   - Unknown word (colorful)      -- : "Enables/Disables colorful output. This option
schemas/WebpackOptions.json:1777:61   - Unknown word (loggers)       -- logging for specific loggers.",
schemas/WebpackOptions.json:179:27    - Unknown word (Maximum)     -- "description": "Maximum size of asset that should
schemas/WebpackOptions.json:1811:42   - Unknown word (parsing)       -- description": "Enable/disable parsing of CommonJs syntax.
schemas/WebpackOptions.json:1835:30   - Unknown word (weak)          -- "enum": ["eager", "weak", "lazy", "lazy-once
schemas/WebpackOptions.json:1860:53   - Unknown word (invalid)       -- Specifies the behavior of invalid export names in \"import
schemas/WebpackOptions.json:1872:44   - Unknown word (regular)       -- : "Sets the default regular expression for full
schemas/WebpackOptions.json:1911:138  - Unknown word (between)       -- some behaviors differ between strict and non-strict
schemas/WebpackOptions.json:1922:17   - Unknown word (Ensure)        -- "requireEnsure": {
schemas/WebpackOptions.json:1923:61   - Unknown word (ensure)        -- disable parsing of require.ensure syntax.",
schemas/WebpackOptions.json:1935:27   - Unknown word (Deprecated)    -- "description": "Deprecated in favor of \"exportsPresence
schemas/WebpackOptions.json:1982:97   - Unknown word (navigator)     -- like new Worker() or navigator.serviceWorker.register
schemas/WebpackOptions.json:1987:65   - Unknown word (parsed)        -- syntax that should be parsed as WebWorker reference
schemas/WebpackOptions.json:1998:47   - Unknown word (partial)       -- Enable warnings for partial dynamic dependencies
schemas/WebpackOptions.json:2113:85   - Unknown word (lazily)        -- ed modules should be lazily compiled. This is matched
schemas/WebpackOptions.json:2337:154  - Unknown word (nested)        -- 'root-of-chunk' | 'nested') => boolean)"
schemas/WebpackOptions.json:2367:31   - Unknown word (affecting)     -- description": "Options affecting the normal modules
schemas/WebpackOptions.json:239:51    - Unknown word (hard)        -- the first error as a hard error instead of tolerating
schemas/WebpackOptions.json:239:73    - Unknown word (tolerating)  -- hard error instead of tolerating it.",
schemas/WebpackOptions.json:2455:10   - Unknown word (unsafe)        -- "unsafeCache": {
schemas/WebpackOptions.json:24:10     - Unknown word (helper)     -- "helper": true
schemas/WebpackOptions.json:250:46    - Unknown word (Normalized)  -- definitions/CacheOptionsNormalized"
schemas/WebpackOptions.json:2577:31   - Unknown word (polyfills)     -- description": "Include polyfills or mocks for various
schemas/WebpackOptions.json:2577:44   - Unknown word (mocks)         -- Include polyfills or mocks for various node stuff
schemas/WebpackOptions.json:2612:33   - Unknown word (wrapping)      -- description": "Avoid wrapping the entry module in
schemas/WebpackOptions.json:2620:126  - Unknown word (numeric)       -- debugging, deterministic: numeric hash ids for better
schemas/WebpackOptions.json:2620:191  - Unknown word (focused)       -- caching, size: numeric ids focused on minimal initial download
schemas/WebpackOptions.json:2635:124  - Unknown word (cause)         -- generated code and will cause errors at runtime."
schemas/WebpackOptions.json:2643:27   - Unknown word (Creates)       -- "description": "Creates a module-internal dependency
schemas/WebpackOptions.json:2643:84   - Unknown word (symbols)       -- graph for top level symbols, exports and imports
schemas/WebpackOptions.json:2666:57   - Unknown word (Uses)          -- minimizing the output. Uses optimization.minimizer
schemas/WebpackOptions.json:2670:27   - Unknown word (Minimizer)     -- "description": "Minimizer(s) to use for minimizing
schemas/WebpackOptions.json:2720:27   - Unknown word (Figure)        -- "description": "Figure out which exports are
schemas/WebpackOptions.json:2732:51   - Unknown word (empty)         -- Remove chunks which are empty.",
schemas/WebpackOptions.json:2750:27   - Unknown word (Optimize)      -- "description": "Optimize duplication and caching
schemas/WebpackOptions.json:2822:42   - Unknown word (describing)    -- "Options object for describing behavior of a cache
schemas/WebpackOptions.json:282:45    - Unknown word (formats)     -- The format of chunks (formats included by default
schemas/WebpackOptions.json:2851:21   - Unknown word (Threshold)     -- "enforceSizeThreshold": {
schemas/WebpackOptions.json:2855:61   - Unknown word (Sizes)         -- OptimizationSplitChunksSizes"
schemas/WebpackOptions.json:2899:27   - Unknown word (Maximal)       -- "description": "Maximal size hint for the on
schemas/WebpackOptions.json:2933:27   - Unknown word (Minimal)       -- "description": "Minimal size for the chunks
schemas/WebpackOptions.json:293:33    - Unknown word (milliseconds) -- description": "Number of milliseconds before chunk request
schemas/WebpackOptions.json:2948:17   - Unknown word (Reduction)     -- "minSizeReduction": {
schemas/WebpackOptions.json:2949:40   - Unknown word (reduction)     -- description": "Minimum size reduction due to the created chunk
schemas/WebpackOptions.json:2975:15   - Unknown word (Existing)      -- "reuseExistingChunk": {
schemas/WebpackOptions.json:3012:53   - Unknown word (checking)      -- Compare used exports when checking common modules. Modules
schemas/WebpackOptions.json:3033:100  - Unknown word (tried)         -- different cache groups are tried to keep in separate
schemas/WebpackOptions.json:3099:88   - Unknown word (sizes)         -- a number is used for sizes.",
schemas/WebpackOptions.json:3116:51   - Unknown word (selected)      -- Options for modules not selected by any other cache group
schemas/WebpackOptions.json:3197:10   - Unknown word (hide)          -- "hidePathInfo": {
schemas/WebpackOptions.json:3198:27   - Unknown word (Prevents)     -- "description": "Prevents exposing path info when
schemas/WebpackOptions.json:322:6     - Unknown word (Clean)        -- "Clean": {
schemas/WebpackOptions.json:3353:10   - Unknown word (clean)        -- "clean": {
schemas/WebpackOptions.json:339:76    - Unknown word (deleting)     -- be removed instead of deleting them.",
schemas/WebpackOptions.json:3480:132  - Unknown word (Passing)      -- default policy name. Passing a string sets a custom
schemas/WebpackOptions.json:362:99    - Unknown word (writing)      -- same content before writing to output filesystem
schemas/WebpackOptions.json:366:63    - Unknown word (resolving)    -- absolute path!) for resolving the `entry` option.
schemas/WebpackOptions.json:3695:37   - Unknown word (parallel)     -- description": "The number of parallel processed modules in
schemas/WebpackOptions.json:3784:77   - Unknown word (nothing)      -- warnings, errors or nothing at all.",
schemas/WebpackOptions.json:3788:59   - Unknown word (exceeded)     -- limit (in bytes) when exceeded, that webpack will provide
schemas/WebpackOptions.json:3820:40   - Unknown word (specifies)    -- : "The 'publicPath' specifies the public URL address
schemas/WebpackOptions.json:3887:23   - Unknown word (Redirect)     -- "description": "Redirect module requests.",
schemas/WebpackOptions.json:3900:46   - Unknown word (alternative)  -- description": "Multiple alternative requests.",
schemas/WebpackOptions.json:3920:47   - Unknown word (redirected)   -- description": "Request to be redirected.",
schemas/WebpackOptions.json:3976:99   - Unknown word (redirect)     -- json) which are used to redirect requests inside the
schemas/WebpackOptions.json:3997:74   - Unknown word (Typical)      -- dependency category. Typical categories are \"commonjs
schemas/WebpackOptions.json:4060:35   - Unknown word (Aliased)      -- "description": "Aliased extension.",
schemas/WebpackOptions.json:4093:10   - Unknown word (fully)        -- "fullySpecified": {
schemas/WebpackOptions.json:4093:15   - Unknown word (Specified)    -- "fullySpecified": {
schemas/WebpackOptions.json:4094:27   - Unknown word (Treats)       -- "description": "Treats the request specified
schemas/WebpackOptions.json:4094:88   - Unknown word (meaning)      -- as fully specified, meaning no extensions are added
schemas/WebpackOptions.json:4166:111  - Unknown word (falling)      -- absolute paths before falling back to resolve in
schemas/WebpackOptions.json:4166:27   - Unknown word (Prefer)       -- "description": "Prefer to resolve server-relative
schemas/WebpackOptions.json:4178:139  - Unknown word (Other)        -- resolve successfully. Other resolve paths are taken
schemas/WebpackOptions.json:4178:80   - Unknown word (fulfill)      -- Resolve results must fulfill all of these restrictions
schemas/WebpackOptions.json:4181:37   - Unknown word (restriction)  -- description": "Resolve restriction. Resolve result must
schemas/WebpackOptions.json:4247:35   - Unknown word (matcher)      -- description": "A condition matcher.",
schemas/WebpackOptions.json:435:14    - Unknown word (camel)        -- "camel-case",
schemas/WebpackOptions.json:4366:29   - Unknown word (operators)    -- description": "Logic operators used in a condition
schemas/WebpackOptions.json:4433:43   - Unknown word (assertions)   -- escription": "Match on import assertions of the dependency."
schemas/WebpackOptions.json:448:54    - Unknown word (stylesheet)   -- generating and loading a stylesheet and only embed exports
schemas/WebpackOptions.json:4634:27   - Unknown word (Modifiers)    -- "description": "Modifiers applied to the module
schemas/WebpackOptions.json:4745:114  - Unknown word (invalidated)  -- whole cache need to be invalidated.",
schemas/WebpackOptions.json:4872:23   - Unknown word (Prefixes)     -- "description": "Prefixes every line of the source
schemas/WebpackOptions.json:4881:95   - Unknown word (precedence)   -- is not defined (has precedence over local webpack defaults
schemas/WebpackOptions.json:4893:67   - Unknown word (collapsed)    -- assets (groups will be collapsed to fit this space).
schemas/WebpackOptions.json:4925:43   - Unknown word (displayed)    -- escription": "Limit of assets displayed in chunk groups.",
schemas/WebpackOptions.json:4945:70   - Unknown word (sibling)      -- parent, children and sibling chunks to chunk information
schemas/WebpackOptions.json:4996:57   - Unknown word (shortening)   -- directory for request shortening.",
schemas/WebpackOptions.json:5065:27   - Unknown word (Suppress)     -- "description": "Suppress assets that match the
schemas/WebpackOptions.json:5255:10   - Unknown word (timings)      -- "timings": {
schemas/WebpackOptions.json:5276:106  - Unknown word (counted)      -- (they will still be counted). Filters can be Strings
schemas/WebpackOptions.json:5317:31   - Unknown word (exceptions)   -- description": "Handles exceptions in module loading correctly
schemas/WebpackOptions.json:5347:113  - Unknown word (missing)      -- due to the policy name missing from the CSP `trusted
schemas/WebpackOptions.json:5347:243  - Unknown word (hope)         -- with loading in the hope that `require-trusted
schemas/WebpackOptions.json:5347:310  - Unknown word (versus)       -- isn't enforced yet, versus fail immediately. Default
schemas/WebpackOptions.json:5347:322  - Unknown word (immediately)  -- enforced yet, versus fail immediately. Default behavior is
schemas/WebpackOptions.json:5434:47   - Unknown word (rebuilds)     -- Enter watch mode, which rebuilds on file change.",
schemas/WebpackOptions.json:5451:50   - Unknown word (watching)     -- Ignore some files from watching (glob pattern or regexp
schemas/WebpackOptions.json:5473:34   - Unknown word (polling)      -- description": "Enable polling mode for watching."
schemas/WebpackOptions.json:5486:63   - Unknown word (ended)        -- when stdin stream has ended.",
schemas/WebpackOptions.json:5624:32   - Unknown word (acting)       -- description": "Function acting as plugin.",
schemas/WebpackOptions.json:5642:214  - Unknown word (unless)       -- Don't set this option unless your worker scripts
schemas/WebpackOptions.json:5642:43   - Unknown word (Much)         -- Worker public path. Much like the public path
schemas/WebpackOptions.json:567:37    - Unknown word (other)        -- description": "References to other configurations to depend
schemas/WebpackOptions.json:624:52    - Unknown word (interpolating) -- namespace to use when interpolating filename template string
schemas/WebpackOptions.json:627:6     - Unknown word (Empty)         -- "EmptyGeneratorOptions": {
schemas/WebpackOptions.json:78:141    - Unknown word (contributes) -- ident' property which contributes to the module hash.
schemas/WebpackOptions.json:794:69    - Unknown word (normalized)    -- Promise resolving to a normalized entry.",
schemas/WebpackOptions.json:897:27    - Unknown word (abilities)     -- "description": "The abilities of the environment where
schemas/WebpackOptions.json:909:16    - Unknown word (Literal)       -- "bigIntLiteral": {
schemas/WebpackOptions.json:910:62    - Unknown word (literal)       -- nvironment supports BigInt as literal (123n).",
schemas/WebpackOptions.json:934:61    - Unknown word (iteration)     -- environment supports 'for of' iteration ('for (const x of array
schemas/WebpackOptions.json:954:61    - Unknown word (literals)      -- environment supports template literals.",
schemas/WebpackOptions.json:960:23    - Unknown word (Enables)       -- "description": "Enables/Disables experiments
schemas/WebpackOptions.json:960:31    - Unknown word (Disables)      -- description": "Enables/Disables experiments (experimental
schemas/WebpackOptions.json:960:53    - Unknown word (experimental)  -- Disables experiments (experimental features with relax
schemas/WebpackOptions.json:960:80    - Unknown word (relax)         -- experimental features with relax SemVer compatibility
schemas/WebpackOptions.json:985:83    - Unknown word (unchanged)     -- of modules that are unchanged and reference only unchanged
schemas/_container.json:46:8      - Unknown word (required)   -- "required": ["import"]
schemas/_container.json:4:165     - Unknown word (inferred)   -- name is automatically inferred from request.",
schemas/_sharing.json:103:197   - Unknown word (matched)    -- module requests are matched unresolved, absolute
schemas/_sharing.json:103:205   - Unknown word (unresolved) -- requests are matched unresolved, absolute paths will
schemas/_sharing.json:103:264   - Unknown word (trailing)   -- resolved requests. A trailing slash will match all
schemas/_sharing.json:59:94     - Unknown word (matches)    -- or '~' for minimum matches. Each part of the version
schemas/_sharing.json:65:37     - Unknown word (looked)     -- description": "Module is looked up under this key from
schemas/_sharing.json:75:27     - Unknown word (Allow)      -- "description": "Allow only a single version
schemas/_sharing.json:75:40     - Unknown word (single)     -- description": "Allow only a single version of the shared
schemas/_sharing.json:75:92     - Unknown word (disabled)   -- module in share scope (disabled by default).",
schemas/_sharing.json:79:194    - Unknown word (effect)     -- otherwise no, has no effect if there is no required
schemas/_sharing.json:83:105    - Unknown word (higher)     -- matching versions, but not higher.",
schemas/_sharing.json:83:59     - Unknown word (Will)       -- the provided module. Will replace lower matching
schemas/_sharing.json:83:72     - Unknown word (lower)      -- module. Will replace lower matching versions, but
schemas/plugins/BannerPlugin.json:3:6       - Unknown word (Banner)     -- "BannerFunction": {
schemas/plugins/BannerPlugin.json:41:25     - Unknown word (Argument)   -- title": "BannerPluginArgument",
schemas/plugins/BannerPlugin.json:4:27      - Unknown word (banner)     -- "description": "The banner as function, it will
schemas/plugins/BannerPlugin.json:54:27     - Unknown word (Specifies)  -- "description": "Specifies the banner.",
schemas/plugins/BannerPlugin.json:76:10     - Unknown word (footer)     -- "footer": {
schemas/plugins/BannerPlugin.json:9:23      - Unknown word (Filtering)  -- "description": "Filtering rule as regex or string
schemas/plugins/DllReferencePlugin.json:119:132   - Unknown word (upon)       -- manifest to be loaded upon compilation.",
schemas/plugins/DllReferencePlugin.json:51:33     - Unknown word (containing) -- description": "An object containing content, name and type
schemas/plugins/HashedModuleIdsPlugin.json:17:13     - Unknown word (Hashed)     -- "title": "HashedModuleIdsPluginOptions
schemas/plugins/HashedModuleIdsPlugin.json:27:95     - Unknown word (encodings)  -- defaults to 'base64'. All encodings from Node.JS' hash.digest
schemas/plugins/LoaderOptionsPlugin.json:11:23     - Unknown word (Where)      -- "description": "Where loaders can be switched
schemas/plugins/LoaderOptionsPlugin.json:11:44     - Unknown word (switched)   -- Where loaders can be switched to minimize mode.",
schemas/plugins/ProgressPlugin.json:45:10     - Unknown word (percent)    -- "percentBy": {
schemas/plugins/ProgressPlugin.json:46:27     - Unknown word (Collect)    -- "description": "Collect percent algorithm. By
schemas/plugins/ProgressPlugin.json:46:68     - Unknown word (calculates) -- algorithm. By default it calculates by a median from modules
schemas/plugins/ProgressPlugin.json:6:20      - Unknown word (percentage) -- "tsType": "((percentage: number, msg: string
schemas/plugins/SourceMapDevToolPlugin.json:58:23     - Unknown word (Indicates)  -- "description": "Indicates whether column mappings
schemas/plugins/SourceMapDevToolPlugin.json:74:182    - Unknown word (conflict)   -- meTemplate' would result in a conflict.",
schemas/plugins/SourceMapDevToolPlugin.json:88:55     - Unknown word (placeholder) -- to which the [file] placeholder is relative to.",
schemas/plugins/SourceMapDevToolPlugin.json:92:23     - Unknown word (Defines)     -- "description": "Defines the output filename
schemas/plugins/WatchIgnorePlugin.json:7:98      - Unknown word (ignored)    -- files that should be ignored.",
schemas/plugins/container/ContainerPlugin.json:146:56    - Unknown word (globally)   -- the property exposed globally by a UMD library.",
schemas/plugins/container/ContainerPlugin.json:165:23    - Unknown word (Specify)    -- "description": "Specify which export should
schemas/plugins/container/ContainerPlugin.json:8:6       - Unknown word (Auxiliary)  -- "AuxiliaryComment": {
schemas/plugins/debug/ProfilingPlugin.json:7:78      - Unknown word (profiling)  -- resolve(__dirname, 'profiling/events.json')`. Defaults
schemas/plugins/ids/OccurrenceChunkIdsPlugin.json:7:23      - Unknown word (Prioritise) -- "description": "Prioritise initial size over total
schemas/plugins/optimize/LimitChunkCountPlugin.json:15:33     - Unknown word (maximum)    -- description": "Limit the maximum number of chunks using
schemas/plugins/optimize/LimitChunkCountPlugin.json:15:72     - Unknown word (greater)    -- chunks using a value greater greater than or equal
schemas/plugins/optimize/LimitChunkCountPlugin.json:7:23      - Unknown word (Constant)   -- "description": "Constant overhead for a chunk
schemas/plugins/optimize/MergeDuplicateChunksPlugin.json:2:18      - Unknown word (Duplicate)  -- "title": "MergeDuplicateChunksPluginOptions"
schemas/plugins/optimize/MinChunkSizePlugin.json:15:23     - Unknown word (Minimum)    -- "description": "Minimum number of characters
schemas/plugins/optimize/MinChunkSizePlugin.json:15:41     - Unknown word (characters) -- "Minimum number of characters.",
schemas/plugins/schemes/HttpUriPlugin.json:24:67     - Unknown word (modification) -- that would lead to a modification of the lockfile or any
schemas/plugins/schemes/HttpUriPlugin.json:37:84     - Unknown word (fetched)      -- lockfile entries will be fetched and entries will be
schemas/plugins/schemes/HttpUriPlugin.json:44:55     - Unknown word (beginning)    -- allowed URIs (resp. the beginning of them).",
schemas/plugins/sharing/ProvideSharedPlugin.json:80:13     - Unknown word (Provide)    -- "title": "ProvideSharedPluginOptions"
tooling/generate-runtime-code.js:42:7      - Unknown word (bare)       -- bare_returns: true
tooling/generate-wasm-code.js:15:29     - Unknown word (assemblyscript) -- asc = (await import("assemblyscript/asc")).default;
tooling/generate-wasm-code.js:42:9      - Unknown word (converge)       -- "--converge",
