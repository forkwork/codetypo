
Repository: mdx-js/mdx
Url: "https://github.com/mdx-js/mdx"
Args: ["--config=../../../../config/repositories/mdx-js/mdx/codetypo.json","**/*.*"]
Lines:
 Dictionary Error with (en_us) Error: ENOENT: no such file or directory, open './dictionaries/en_US/en_US.trie.gz'
 exit code: 1
-------------------------------------------
-------------------------------------------
CodeTypo: Files checked: 142, Issues found: 5710 in 117 files with 4 errors.
Dictionary Error with (en_us) Error: ENOENT: no such file or directory, open './dictionaries/en_US/en_US.trie.gz'
Dictionary Error with (filetypes) Error: ENOENT: no such file or directory, open './dictionaries/filetypes/filetypes.txt.gz'
Dictionary Error with (filetypes) Error: ENOENT: no such file or directory, open './dictionaries/filetypes/filetypes.txt.gz'
Dictionary Error with (html-symbol-entities) Error: ENOENT: no such file or directory, open './dictionaries/html-symbol-entities/entities.txt.gz'
Dictionary Error with (html-symbol-entities) Error: ENOENT: no such file or directory, open './dictionaries/html-symbol-entities/entities.txt.gz'
Dictionary Error with (public-licenses) Error: ENOENT: no such file or directory, open './dictionaries/public-licenses/public-licenses.txt.gz'
Dictionary Error with (public-licenses) Error: ENOENT: no such file or directory, open './dictionaries/public-licenses/public-licenses.txt.gz'
Errors:
changelog.md:3:13      - Unknown word (Releases)   -- See [GitHub Releases][releases] for the changelog
docs/404.mdx:10:1      - Unknown word (Perhaps)       -- Perhaps you can find what you
docs/404.mdx:10:34     - Unknown word (looking)       -- can find what you’re looking for [on GitHub][search
docs/404.mdx:13:21     - Unknown word (come)          -- **Note**: Did you come here from a website
docs/404.mdx:14:10     - Unknown word (sure)          -- Pretty sure this page used to exist
docs/404.mdx:15:3      - Unknown word (Please)        -- Please [open an issue](https
docs/404.mdx:16:3      - Unknown word (know)          -- know so we can fix it!
docs/404.mdx:9:1       - Unknown word (Unfortunately) -- Unfortunately this page doesn’t exist
docs/404.mdx:9:25      - Unknown word (doesn’t)       -- Unfortunately this page doesn’t exist.
docs/_asset/editor.jsx:10:22     - Unknown word (Mdast)      -- * @import {Nodes as MdastNodes, Root as MdastRoot
docs/_asset/editor.jsx:10:42     - Unknown word (Mdast)      -- MdastNodes, Root as MdastRoot} from 'mdast'
docs/_asset/editor.jsx:10:59     - Unknown word (mdast)      -- as MdastRoot} from 'mdast'
docs/_asset/editor.jsx:113:15    - Unknown word (Night)      -- createStarryNight(grammars).then(
docs/_asset/editor.jsx:113:9     - Unknown word (Starry)     -- createStarryNight(grammars).then
docs/_asset/editor.jsx:119:13    - Unknown word (Night)      -- starryNight = x
docs/_asset/editor.jsx:123:26    - Unknown word (Unexpected) -- throw new Error('Unexpected missing required scopes
docs/_asset/editor.jsx:126:20    - Unknown word (Playground) -- root.render(<Playground />)
docs/_asset/editor.jsx:131:10    - Unknown word (Playground) -- function Playground() {
docs/_asset/editor.jsx:134:16    - Unknown word (more)       -- // Cast to more easily use actual value
docs/_asset/editor.jsx:134:21    - Unknown word (easily)     -- // Cast to more easily use actual value.
docs/_asset/editor.jsx:134:8     - Unknown word (Cast)       -- // Cast to more easily use actual
docs/_asset/editor.jsx:145:10    - Unknown word (positions)  -- const [positions, setPositions] = useState
docs/_asset/editor.jsx:145:24    - Unknown word (Positions)  -- const [positions, setPositions] = useState(false)
docs/_asset/editor.jsx:15:12     - Unknown word (mdast)      -- * } from 'mdast-util-mdx-jsx'
docs/_asset/editor.jsx:169:15    - Unknown word (recma)      -- const recmaPlugins = []
docs/_asset/editor.jsx:186:23    - Unknown word (esast)      -- if (show === 'esast') recmaPlugins.push
docs/_asset/editor.jsx:186:31    - Unknown word (recma)      -- if (show === 'esast') recmaPlugins.push([captureEsast
docs/_asset/editor.jsx:186:57    - Unknown word (Esast)      -- recmaPlugins.push([captureEsast])
docs/_asset/editor.jsx:187:23    - Unknown word (hast)       -- if (show === 'hast') rehypePlugins.push
docs/_asset/editor.jsx:187:57    - Unknown word (Hast)       -- rehypePlugins.push([captureHast])
docs/_asset/editor.jsx:188:23    - Unknown word (mdast)      -- if (show === 'mdast') remarkPlugins.push
docs/_asset/editor.jsx:188:58    - Unknown word (Mdast)      -- remarkPlugins.push([captureMdast])
docs/_asset/editor.jsx:18:21     - Unknown word (Props)      -- * @import {FallbackProps} from 'react-error-boundary
docs/_asset/editor.jsx:194:45    - Unknown word (esast)      -- 'code' || show === 'esast' ? generateJsx : false
docs/_asset/editor.jsx:199:11    - Unknown word (recma)      -- recmaPlugins,
docs/_asset/editor.jsx:209:13    - Unknown word (jsxs)       -- jsxs,
docs/_asset/editor.jsx:218:31    - Unknown word (playground) -- <div className="playground-result">{result.default
docs/_asset/editor.jsx:232:35    - Unknown word (jsxs)       -- {Fragment, jsx, jsxs}
docs/_asset/editor.jsx:246:17    - Unknown word (jsxs)       -- jsxs
docs/_asset/editor.jsx:252:25    - Unknown word (Mdast)      -- function captureMdast() {
docs/_asset/editor.jsx:254:22    - Unknown word (Mdast)      -- * @param {MdastRoot} tree
docs/_asset/editor.jsx:261:18    - Unknown word (positions)  -- if (!positions) cleanUnistTree(clone
docs/_asset/editor.jsx:266:25    - Unknown word (Hast)       -- function captureHast() {
docs/_asset/editor.jsx:268:22    - Unknown word (Hast)       -- * @param {HastRoot} tree
docs/_asset/editor.jsx:275:18    - Unknown word (positions)  -- if (!positions) cleanUnistTree(clone
docs/_asset/editor.jsx:280:25    - Unknown word (Esast)      -- function captureEsast() {
docs/_asset/editor.jsx:289:18    - Unknown word (positions)  -- if (!positions) visitEstree(clone,
docs/_asset/editor.jsx:304:7     - Unknown word (positions)  -- positions,
docs/_asset/editor.jsx:312:6     - Unknown word (Cast)       -- // Cast to actual value.
docs/_asset/editor.jsx:313:9     - Unknown word (compiled)   -- const compiledResult = /** @type {EvalResult
docs/_asset/editor.jsx:317:7     - Unknown word (compiled)   -- if (compiledResult) {
docs/_asset/editor.jsx:318:9     - Unknown word (compiled)   -- if (compiledResult.ok) {
docs/_asset/editor.jsx:319:17    - Unknown word (compiled)   -- display = compiledResult.value
docs/_asset/editor.jsx:324:32    - Unknown word (compiled)   -- DisplayError error={compiledResult.value} />
docs/_asset/editor.jsx:32:6      - Unknown word (Whether)    -- * Whether OK.
docs/_asset/editor.jsx:333:25    - Unknown word (playground) -- <div className="playground-area">
docs/_asset/editor.jsx:334:27    - Unknown word (playground) -- <div className="playground-inner">
docs/_asset/editor.jsx:339:17    - Unknown word (jsxs)       -- jsxs
docs/_asset/editor.jsx:341:58    - Unknown word (shown)      -- whitespace in a `textarea` is shown, but not in a `div`
docs/_asset/editor.jsx:369:32    - Unknown word (mdast)      -- <option value="mdast">mdast (markdown)</option
docs/_asset/editor.jsx:369:39    - Unknown word (mdast)      -- option value="mdast">mdast (markdown)</option>
docs/_asset/editor.jsx:370:32    - Unknown word (hast)       -- <option value="hast">hast (html)</option
docs/_asset/editor.jsx:370:38    - Unknown word (hast)       -- option value="hast">hast (html)</option>
docs/_asset/editor.jsx:371:32    - Unknown word (esast)      -- <option value="esast">esast (javascript)
docs/_asset/editor.jsx:371:39    - Unknown word (esast)      -- option value="esast">esast (javascript)</option
docs/_asset/editor.jsx:39:6      - Unknown word (Whether)    -- * Whether OK.
docs/_asset/editor.jsx:48:15     - Unknown word (Starry)     -- import {createStarryNight} from '@wooorm
docs/_asset/editor.jsx:48:21     - Unknown word (Night)      -- import {createStarryNight} from '@wooorm/starry
docs/_asset/editor.jsx:48:35     - Unknown word (wooorm)     -- createStarryNight} from '@wooorm/starry-night'
docs/_asset/editor.jsx:48:42     - Unknown word (starry)     -- ateStarryNight} from '@wooorm/starry-night'
docs/_asset/editor.jsx:48:49     - Unknown word (night)      -- from '@wooorm/starry-night'
docs/_asset/editor.jsx:49:25     - Unknown word (wooorm)     -- import sourceCss from '@wooorm/starry-night/source
docs/_asset/editor.jsx:49:32     - Unknown word (starry)     -- sourceCss from '@wooorm/starry-night/source.css'
docs/_asset/editor.jsx:49:39     - Unknown word (night)      -- from '@wooorm/starry-night/source.css'
docs/_asset/editor.jsx:4:19      - Unknown word (unicorn)    -- /* eslint-disable unicorn/prefer-global-this
docs/_asset/editor.jsx:50:24     - Unknown word (wooorm)     -- import sourceJs from '@wooorm/starry-night/source
docs/_asset/editor.jsx:50:31     - Unknown word (starry)     -- sourceJs from '@wooorm/starry-night/source.js'
docs/_asset/editor.jsx:50:38     - Unknown word (night)      -- from '@wooorm/starry-night/source.js'
docs/_asset/editor.jsx:51:26     - Unknown word (wooorm)     -- import sourceJson from '@wooorm/starry-night/source
docs/_asset/editor.jsx:51:33     - Unknown word (starry)     -- sourceJson from '@wooorm/starry-night/source.json'
docs/_asset/editor.jsx:51:40     - Unknown word (night)      -- from '@wooorm/starry-night/source.json'
docs/_asset/editor.jsx:523:28    - Unknown word (production) -- generate for production (<code>development:
docs/_asset/editor.jsx:549:27    - Unknown word (away)       -- compile JSX away (<code>jsx: false</code
docs/_asset/editor.jsx:561:22    - Unknown word (Positions)  -- setPositions(!positions)
docs/_asset/editor.jsx:576:29    - Unknown word (Props)      -- param {Readonly<FallbackProps>} properties
docs/_asset/editor.jsx:586:20    - Unknown word (went)       -- <p>Something went wrong:</p>
docs/_asset/editor.jsx:60:24     - Unknown word (jsxs)       -- import {Fragment, jsx, jsxs} from 'react/jsx-runtime
docs/_asset/editor.jsx:617:15    - Unknown word (hast)       -- * mdast or hast root.
docs/_asset/editor.jsx:7:29      - Unknown word (wooorm)     -- import {Grammar} from '@wooorm/starry-night'
docs/_asset/editor.jsx:7:36      - Unknown word (starry)     -- Grammar} from '@wooorm/starry-night'
docs/_asset/editor.jsx:7:43      - Unknown word (night)      -- from '@wooorm/starry-night'
docs/_asset/editor.jsx:92:12     - Unknown word (Awaited)    -- /** @type {Awaited<ReturnType<typeof createStarr
docs/_asset/editor.jsx:92:44     - Unknown word (Starry)     -- ReturnType<typeof createStarryNight>>} */
docs/_asset/editor.jsx:92:50     - Unknown word (Night)      -- ReturnType<typeof createStarryNight>>} */
docs/_asset/editor.jsx:93:11     - Unknown word (Night)      -- let starryNight
docs/_asset/editor.jsx:97:36     - Unknown word (playground) -- location.pathname === '/playground/' && editor) {
docs/_asset/editor.jsx:99:23     - Unknown word (playground) -- root.classList.add('playground')
docs/_asset/editor.jsx:9:22      - Unknown word (Hast)       -- * @import {Nodes as HastNodes, Root as HastRoot
docs/_asset/editor.jsx:9:41      - Unknown word (Hast)       -- as HastNodes, Root as HastRoot} from 'hast'
docs/_asset/editor.jsx:9:57      - Unknown word (hast)       -- Root as HastRoot} from 'hast'
docs/_asset/index.css:1000:2    - Unknown word (rehype)            -- .rehype-twoslash-error-target
docs/_asset/index.css:1000:9    - Unknown word (twoslash)          -- .rehype-twoslash-error-target {
docs/_asset/index.css:1006:16   - Unknown word (that)              -- /* The content that will be shown in the
docs/_asset/index.css:1006:29   - Unknown word (shown)             -- content that will be shown in the tooltip. */
docs/_asset/index.css:1007:18   - Unknown word (popover)           -- .rehype-twoslash-popover {
docs/_asset/index.css:1007:2    - Unknown word (rehype)            -- .rehype-twoslash-popover {
docs/_asset/index.css:1007:9    - Unknown word (twoslash)          -- .rehype-twoslash-popover {
docs/_asset/index.css:1017:21   - Unknown word (have)              -- /* No padding if we have a padded code block
docs/_asset/index.css:1017:28   - Unknown word (padded)           -- padding if we have a padded code block (and perhaps
docs/_asset/index.css:1017:51   - Unknown word (perhaps)          -- padded code block (and perhaps more blocks) */
docs/_asset/index.css:1017:59   - Unknown word (more)             -- code block (and perhaps more blocks) */
docs/_asset/index.css:1017:64   - Unknown word (blocks)           -- block (and perhaps more blocks) */
docs/_asset/index.css:1018:18   - Unknown word (popover)          -- .rehype-twoslash-popover:has(.rehype-twoslash
docs/_asset/index.css:1018:47   - Unknown word (popover)          -- has(.rehype-twoslash-popover-code) {
docs/_asset/index.css:1036:9    - Unknown word (prefers)          -- @media (prefers-color-scheme: dark)
docs/_asset/index.css:1078:23   - Unknown word (radial)           -- background-image: radial-gradient(
docs/_asset/index.css:1079:7    - Unknown word (ellipse)          -- ellipse at 50% 0%,
docs/_asset/index.css:1085:11   - Unknown word (that)             -- /* Note that the `backdrop-filter
docs/_asset/index.css:1085:38   - Unknown word (itself)           -- the `backdrop-filter` itself is applied in light
docs/_asset/index.css:1086:4    - Unknown word (supports)         -- @supports (backdrop-filter: blur
docs/_asset/index.css:1096:4    - Unknown word (card)             -- .card {
docs/_asset/index.css:1113:9    - Unknown word (site)             -- .foot-site {
docs/_asset/index.css:1130:32   - Unknown word (within)           -- highlight:is(:hover, :focus-within) .rehype-twoslash-popover
docs/_asset/index.css:1130:4    - Unknown word (highlight)        -- .highlight:is(:hover, :focus-within
docs/_asset/index.css:1163:19   - Unknown word (selected)         -- .frame-tab-item-selected,
docs/_asset/index.css:1164:39   - Unknown word (selected)         -- dark.frame-tab-item-selected {
docs/_asset/index.css:1235:17   - Unknown word (thecomponent)     -- #markdown-for-thecomponent-era {
docs/_asset/index.css:1251:17   - Unknown word (thecomponent)     -- #markdown-for-thecomponent-era {
docs/_asset/index.css:1275:8    - Unknown word (card)             -- .big.card {
docs/_asset/index.css:1281:17   - Unknown word (thecomponent)     -- #markdown-for-thecomponent-era {
docs/_asset/index.css:1288:4    - Unknown word (playground)       -- .playground {
docs/_asset/index.css:1307:13   - Unknown word (they)             -- /* Assume they don’t scroll anymore
docs/_asset/index.css:1307:31   - Unknown word (anymore)          -- Assume they don’t scroll anymore. */
docs/_asset/index.css:1334:2    - Unknown word (playground)       -- .playground {
docs/_asset/index.css:1339:2    - Unknown word (playground)       -- .playground-area,
docs/_asset/index.css:1365:13   - Unknown word (draw)             -- .playground-draw {
docs/_asset/index.css:1418:10   - Unknown word (have)             -- /* Can’t have bold things; they mess
docs/_asset/index.css:1418:28   - Unknown word (they)             -- t have bold things; they mess with the textarea
docs/_asset/index.css:1418:33   - Unknown word (mess)             -- have bold things; they mess with the textarea *
docs/_asset/index.css:155:2     - Unknown word (frame)              -- .frame {
docs/_asset/index.css:191:7     - Unknown word (site)               -- .foot-site {
docs/_asset/index.css:195:7     - Unknown word (site)               -- .foot-site {
docs/_asset/index.css:200:7     - Unknown word (site)               -- .foot-site {
docs/_asset/index.css:209:2     - Unknown word (navigation)         -- .navigation,
docs/_asset/index.css:232:7     - Unknown word (site)               -- .foot-site {
docs/_asset/index.css:2:37      - Unknown word (blinkmacsystemfont) -- system-ui, -apple-system, blinkmacsystemfont, 'Segoe UI', helvetica
docs/_asset/index.css:312:21    - Unknown word (squircle)           -- mask-image: paint(squircle);
docs/_asset/index.css:313:5     - Unknown word (squircle)           -- --squircle-radius: 10px;
docs/_asset/index.css:317:2     - Unknown word (frame)              -- .frame-tab-item {
docs/_asset/index.css:324:2     - Unknown word (frame)              -- .frame-body,
docs/_asset/index.css:325:17    - Unknown word (selected)           -- .frame-tab-item-selected {
docs/_asset/index.css:325:2     - Unknown word (frame)              -- .frame-tab-item-selected {
docs/_asset/index.css:329:2     - Unknown word (frame)              -- .frame-body-box {
docs/_asset/index.css:333:37    - Unknown word (selected)           -- dark.frame-tab-item-selected {
docs/_asset/index.css:359:25    - Unknown word (lining)             -- font-variant-numeric: lining-nums;
docs/_asset/index.css:359:32    - Unknown word (nums)               -- variant-numeric: lining-nums;
docs/_asset/index.css:470:2     - Unknown word (navigation)         -- .navigation a {
docs/_asset/index.css:476:3     - Unknown word (aria)               -- a[aria-current],
docs/_asset/index.css:47:78     - Unknown word (needed)             -- container, so no background needed. */
docs/_asset/index.css:47:9      - Unknown word (manually)           -- /* We manually add a blur on `::before
docs/_asset/index.css:483:7     - Unknown word (aria)               -- nav a[aria-current],
docs/_asset/index.css:4:34      - Unknown word (Monaco)             -- San Francisco Mono', 'Monaco', 'Consolas', 'Lucida
docs/_asset/index.css:51:15     - Unknown word (highlight)          -- --docsearch-highlight-color: var(--hl) !important
docs/_asset/index.css:544:2     - Unknown word (navigation)         -- .navigation {
docs/_asset/index.css:54:14     - Unknown word (actually)           -- /* This is actually used in a `background
docs/_asset/index.css:54:55     - Unknown word (does)               -- background` field so does not have to be a gradient
docs/_asset/index.css:54:6      - Unknown word (This)               -- /* This is actually used in
docs/_asset/index.css:54:64     - Unknown word (have)               -- background` field so does not have to be a gradient. *
docs/_asset/index.css:54:77     - Unknown word (gradient)           -- does not have to be a gradient. */
docs/_asset/index.css:553:2     - Unknown word (navigation)         -- .navigation::before,
docs/_asset/index.css:559:21    - Unknown word (radial)             -- background-image: radial-gradient(
docs/_asset/index.css:559:28    - Unknown word (gradient)           -- background-image: radial-gradient(
docs/_asset/index.css:55:19     - Unknown word (gradient)           -- --docsearch-key-gradient: var(--gray-0) !important
docs/_asset/index.css:560:5     - Unknown word (ellipse)            -- ellipse at 50% 0%,
docs/_asset/index.css:56:19     - Unknown word (pressed)            -- --docsearch-key-pressed-shadow: none !important
docs/_asset/index.css:584:7     - Unknown word (bleed)              -- .full-bleed {
docs/_asset/index.css:58:15     - Unknown word (modal)              -- --docsearch-modal-background: var(--white
docs/_asset/index.css:594:36    - Unknown word (itself)             -- the `backdrop-filter` itself is applied in light
docs/_asset/index.css:594:9     - Unknown word (that)               -- /* Note that the `backdrop-filter
docs/_asset/index.css:595:2     - Unknown word (supports)           -- @supports (backdrop-filter: blur
docs/_asset/index.css:596:4     - Unknown word (navigation)         -- .navigation::before,
docs/_asset/index.css:599:23    - Unknown word (radial)             -- background-image: radial-gradient(
docs/_asset/index.css:599:30    - Unknown word (gradient)           -- background-image: radial-gradient(
docs/_asset/index.css:59:6      - Unknown word (Card)               -- /* Card shadow: <https://github
docs/_asset/index.css:5:26      - Unknown word (Bitstream)          -- DejaVu Sans Mono', 'Bitstream Vera Sans Mono', monospace
docs/_asset/index.css:5:36      - Unknown word (Vera)               -- Sans Mono', 'Bitstream Vera Sans Mono', monospace
docs/_asset/index.css:600:7     - Unknown word (ellipse)            -- ellipse at 50% 0%,
docs/_asset/index.css:607:12    - Unknown word (Modal)              -- .DocSearch-Modal,
docs/_asset/index.css:609:13    - Unknown word (secondary)          -- .navigation-secondary,
docs/_asset/index.css:60:15     - Unknown word (modal)              -- --docsearch-modal-shadow: 0 0 0 0.2em
docs/_asset/index.css:611:13    - Unknown word (tertiary)           -- .navigation-tertiary {
docs/_asset/index.css:622:13    - Unknown word (secondary)          -- .navigation-secondary,
docs/_asset/index.css:623:13    - Unknown word (tertiary)          -- .navigation-tertiary,
docs/_asset/index.css:625:13    - Unknown word (secondary)         -- .navigation-secondary li,
docs/_asset/index.css:626:13    - Unknown word (tertiary)          -- .navigation-tertiary li {
docs/_asset/index.css:631:13    - Unknown word (secondary)         -- .navigation-secondary,
docs/_asset/index.css:633:13    - Unknown word (tertiary)          -- .navigation-tertiary {
docs/_asset/index.css:649:13    - Unknown word (secondary)         -- .navigation-secondary li,
docs/_asset/index.css:64:15     - Unknown word (muted)              -- --docsearch-muted-color: var(--black)
docs/_asset/index.css:650:13    - Unknown word (tertiary)          -- .navigation-tertiary li {
docs/_asset/index.css:671:15    - Unknown word (linear)            -- mask-image: linear-gradient(
docs/_asset/index.css:671:22    - Unknown word (gradient)          -- mask-image: linear-gradient(
docs/_asset/index.css:688:23    - Unknown word (because)           -- Some extra spacing because otherwise the blur is
docs/_asset/index.css:688:31    - Unknown word (otherwise)         -- extra spacing because otherwise the blur is shown over
docs/_asset/index.css:688:4     - Unknown word (Some)              -- /* Some extra spacing because
docs/_asset/index.css:688:53    - Unknown word (shown)             -- otherwise the blur is shown over it. */
docs/_asset/index.css:737:21    - Unknown word (squircle)          -- mask-image: paint(squircle);
docs/_asset/index.css:738:5     - Unknown word (squircle)          -- --squircle-radius: 10px;
docs/_asset/index.css:742:6     - Unknown word (Actually)          -- /* Actually the border color: *
docs/_asset/index.css:749:21    - Unknown word (squircle)          -- mask-image: paint(squircle);
docs/_asset/index.css:775:2     - Unknown word (card)              -- .card {
docs/_asset/index.css:782:5     - Unknown word (radial)            -- radial-gradient(
docs/_asset/index.css:783:7     - Unknown word (ellipse)           -- ellipse at 0% 0%,
docs/_asset/index.css:788:7     - Unknown word (radial)            -- radial-gradient(
docs/_asset/index.css:789:9     - Unknown word (ellipse)           -- ellipse at 0% 100%,
docs/_asset/index.css:78:3      - Unknown word (accent)             -- accent-color: var(--hl);
docs/_asset/index.css:815:36    - Unknown word (tabs)              -- used for unselected tabs, but gray-2 is really
docs/_asset/index.css:815:56    - Unknown word (really)            -- tabs, but gray-2 is really too much
docs/_asset/index.css:815:67    - Unknown word (much)              -- gray-2 is really too much
docs/_asset/index.css:816:16    - Unknown word (perfect)           -- * This is a perfect mix between the two
docs/_asset/index.css:816:6     - Unknown word (This)              -- * This is a perfect mix between
docs/_asset/index.css:825:8     - Unknown word (resizeable)        -- .frame-resizeable {
docs/_asset/index.css:850:15    - Unknown word (linear)            -- mask-image: linear-gradient(
docs/_asset/index.css:877:19    - Unknown word (highlight)         -- .frame-tab-bar + .highlight > pre {
docs/_asset/index.css:882:19    - Unknown word (highlight)         -- .frame-tab-bar + .highlight > pre code {
docs/_asset/index.css:910:19    - Unknown word (nicely)            -- /* Lines it out nicely if there’s just one
docs/_asset/index.css:910:29    - Unknown word (there’s)           -- Lines it out nicely if there’s just one line of code
docs/_asset/index.css:915:15    - Unknown word (thecomponent)      -- #markdown-for-thecomponent-era {
docs/_asset/index.css:919:15    - Unknown word (thecomponent)      -- #markdown-for-thecomponent-era strong {
docs/_asset/index.css:950:21    - Unknown word (card)              -- :is(.home-preview, .card, .frame-body, .nav-descriptio
docs/_asset/index.css:955:21    - Unknown word (card)              -- :is(.home-preview, .card, .frame-body, .nav-descriptio
docs/_asset/index.css:964:2     - Unknown word (snowfall)          -- .snowfall {
docs/_asset/index.css:970:2     - Unknown word (snowfall)          -- .snowfall-bar {
docs/_asset/index.css:97:2      - Unknown word (playground)         -- .playground-write,
docs/_asset/index.css:987:18    - Unknown word (completion)        -- .rehype-twoslash-completion-deprecated {
docs/_asset/index.css:987:2     - Unknown word (rehype)            -- .rehype-twoslash-completion
docs/_asset/index.css:987:29    - Unknown word (deprecated)        -- twoslash-completion-deprecated {
docs/_asset/index.css:987:9     - Unknown word (twoslash)          -- .rehype-twoslash-completion-deprecated
docs/_asset/index.css:98:13     - Unknown word (draw)               -- .playground-draw {
docs/_asset/index.css:98:2      - Unknown word (playground)         -- .playground-draw {
docs/_asset/index.css:991:18    - Unknown word (popover)           -- .rehype-twoslash-popover-target {
docs/_asset/index.css:991:2     - Unknown word (rehype)            -- .rehype-twoslash-popover-target
docs/_asset/index.css:991:9     - Unknown word (twoslash)          -- .rehype-twoslash-popover-target {
docs/_asset/index.css:995:2     - Unknown word (highlight)         -- .highlight:is(:hover, :focus-within
docs/_asset/index.css:995:30    - Unknown word (within)            -- highlight:is(:hover, :focus-within) .rehype-twoslash-popover
docs/_asset/index.css:995:39    - Unknown word (rehype)            -- hover, :focus-within) .rehype-twoslash-popover-target
docs/_asset/index.css:995:46    - Unknown word (twoslash)          -- focus-within) .rehype-twoslash-popover-target {
docs/_asset/index.css:995:55    - Unknown word (popover)           -- within) .rehype-twoslash-popover-target {
docs/_asset/index.css:999:4     - Unknown word (Wavy)              -- /* Wavy underline for errors
docs/_asset/index.js:102:10    - Unknown word (oncopyonclick) -- function oncopyonclick() {
docs/_asset/index.js:11:27     - Unknown word (doesn’t)    -- ts-expect-error: TS doesn’t understand Houdini.
docs/_asset/index.js:11:35     - Unknown word (understand) -- expect-error: TS doesn’t understand Houdini.
docs/_asset/index.js:11:46     - Unknown word (Houdini)    -- TS doesn’t understand Houdini.
docs/_asset/index.js:123:6     - Unknown word (Popover)       -- * Popover target.
docs/_asset/index.js:133:15    - Unknown word (Popover)       -- popover.showPopover()
docs/_asset/index.js:159:15    - Unknown word (mdxjs)         -- indexName: 'mdxjs'
docs/_asset/index.js:18:7      - Unknown word (copies)     -- const copies = Array.from(document
docs/_asset/index.js:1:19      - Unknown word (unicorn)    -- /* eslint-disable unicorn/prefer-query-selector
docs/_asset/index.js:20:7      - Unknown word (copied)     -- const copiedTemplate = document.createElem
docs/_asset/index.js:31:11     - Unknown word (currentcolor) -- fill="currentcolor"
docs/_asset/index.js:36:11     - Unknown word (currentcolor) -- fill="currentcolor"
docs/_asset/index.js:41:1      - Unknown word (copied)       -- copiedTemplate.innerHTML =
docs/_asset/index.js:43:15     - Unknown word (Copied)       -- aria-label="Copied!"
docs/_asset/index.js:49:10     - Unknown word (Copied)       -- <title>Copied!</title>
docs/_asset/index.js:51:11     - Unknown word (currentcolor) -- fill="currentcolor"
docs/_asset/index.js:57:20     - Unknown word (copied)       -- const copiedIcon = copiedTemplate.content.querySelector
docs/_asset/index.js:57:7      - Unknown word (copied)       -- const copiedIcon = copiedTemplate
docs/_asset/index.js:59:8      - Unknown word (copied)       -- assert(copiedIcon)
docs/_asset/index.js:61:20     - Unknown word (copies)       -- for (const copy of copies) {
docs/_asset/index.js:65:34     - Unknown word (oncopyonclick) -- addEventListener('click', oncopyonclick)
docs/_asset/index.js:68:7      - Unknown word (popover)       -- const popoverTargets = /** @type
docs/_asset/index.js:69:49     - Unknown word (twoslash)      -- querySelectorAll('.rehype-twoslash-popover-target'))
docs/_asset/index.js:69:58     - Unknown word (popover)       -- SelectorAll('.rehype-twoslash-popover-target'))
docs/_asset/index.js:72:12     - Unknown word (popover)       -- for (const popoverTarget of popoverTargets
docs/_asset/index.js:72:29     - Unknown word (popover)       -- const popoverTarget of popoverTargets) {
docs/_asset/index.js:76:3      - Unknown word (popover)       -- popoverTarget.addEventListener
docs/_asset/index.js:7:29      - Unknown word (devlop)     -- ok as assert} from 'devlop'
docs/_asset/index.js:91:48     - Unknown word (twoslash)      -- classList.contains('rehype-twoslash-autoshow')) {
docs/_asset/index.js:91:57     - Unknown word (autoshow)      -- contains('rehype-twoslash-autoshow')) {
docs/_asset/index.js:9:4       - Unknown word (Squircles)  -- // Squircles.
docs/_component/blog.jsx:25:24     - Unknown word (jsxs)       -- import {Fragment, jsx, jsxs} from 'react/jsx-runtime
docs/_component/blog.jsx:39:10     - Unknown word (matter)     -- const {matter = {}, meta = {}} = data
docs/_component/blog.jsx:40:17     - Unknown word (matter)     -- const title = matter.title || meta.title
docs/_component/blog.jsx:44:23     - Unknown word (matter)     -- const description = matter.description || meta
docs/_component/blog.jsx:64:21     - Unknown word (card)       -- <div className="card">
docs/_component/blog.jsx:69:26     - Unknown word (Hast)       -- {meta.descriptionHast ? (
docs/_component/blog.jsx:70:40     - Unknown word (Hast)       -- toJsxRuntime(meta.descriptionHast, {Fragment, jsx, jsxs
docs/_component/blog.jsx:70:62     - Unknown word (jsxs)       -- criptionHast, {Fragment, jsx, jsxs})
docs/_component/foot-site.jsx:14:22     - Unknown word (made)       -- MDX is made with ❤️ in Amsterdam
docs/_component/foot-site.jsx:14:49     - Unknown word (Boise)      -- with ❤️ in Amsterdam, Boise, and around the 🌏
docs/_component/foot-site.jsx:39:15     - Unknown word (Sponsor)    -- Sponsor on <a href={config.oc
docs/_component/foot-site.jsx:39:55     - Unknown word (Collective) -- config.oc.href}>OpenCollective</a>
docs/_component/icon/open-collective.jsx:13:18     - Unknown word (Collective)     -- <title>OpenCollective</title>
docs/_component/icon/open-collective.jsx:3:21      - Unknown word (Collective) -- export function OpenCollective() {
docs/_component/icon/open-collective.jsx:7:23      - Unknown word (Collective) -- aria-label="OpenCollective"
docs/_component/icon/open-collective.jsx:8:28      - Unknown word (opencollective) -- className="icon icon-opencollective"
docs/_component/layout.jsx:107:15    - Unknown word (typo)       -- Found a typo? Other suggestions?
docs/_component/layout.jsx:144:27    - Unknown word (Authors)    -- const creditsList = metaAuthors.map(function (d, i)
docs/_component/layout.jsx:144:9     - Unknown word (credits)    -- const creditsList = metaAuthors.map
docs/_component/layout.jsx:158:19    - Unknown word (credits)    -- const credits = creditsList.length > 0 ? <>By
docs/_component/layout.jsx:158:50    - Unknown word (credits)    -- reditsList.length > 0 ? <>By {creditsList}</> : undefined
docs/_component/layout.jsx:158:9     - Unknown word (credits)    -- const credits = creditsList.length
docs/_component/layout.jsx:161:20    - Unknown word (credits)    -- readingTime || credits ? (
docs/_component/layout.jsx:247:17    - Unknown word (matter)     -- return d.data.matter?.title || d.data.meta
docs/_component/layout.jsx:53:13     - Unknown word (Authors)    -- const metaAuthors = meta.authors || [
docs/_component/layout.jsx:53:28     - Unknown word (authors)    -- const metaAuthors = meta.authors || []
docs/_component/nav-site.jsx:19:13     - Unknown word (Collective) -- import {OpenCollective} from './icon/open-collective
docs/_component/nav-site.jsx:19:43     - Unknown word (collective) -- Collective} from './icon/open-collective.jsx'
docs/_component/nav-site.jsx:46:24     - Unknown word (Ceasefire)  -- <div id="banner">Ceasefire now! 🕊️</div>
docs/_component/nav-site.jsx:69:33     - Unknown word (tertiary)   -- className="navigation-tertiary">
docs/_component/nav-site.jsx:82:18     - Unknown word (Collective) -- <OpenCollective />
docs/_component/nav.jsx:107:25    - Unknown word (jsxs)       -- {Fragment, jsx, jsxs}
docs/_component/nav.jsx:110:21    - Unknown word (matter)     -- description = matter.description || meta
docs/_component/nav.jsx:120:15    - Unknown word (matter)     -- const pub = matter.published || meta.published
docs/_component/nav.jsx:14:6      - Unknown word (Whether)    -- * Whether to include the description
docs/_component/nav.jsx:16:6      - Unknown word (Whether)    -- * Whether to include the published
docs/_component/nav.jsx:1:4       - Unknown word (Augment)    -- // Augment vfile data:
docs/_component/nav.jsx:41:24     - Unknown word (jsxs)       -- import {Fragment, jsx, jsxs} from 'react/jsx-runtime
docs/_component/nav.jsx:5:35      - Unknown word (hast)       -- ElementContent} from 'hast'
docs/_component/nav.jsx:83:10     - Unknown word (matter)     -- const {matter = {}, meta = {}, navExcludeGr
docs/_component/nav.jsx:84:17     - Unknown word (matter)     -- const title = matter.title || meta.title
docs/_component/nav.jsx:94:25     - Unknown word (Hast)       -- if (meta.descriptionHast) {
docs/_component/nav.jsx:95:10     - Unknown word (Cast)       -- // Cast because we don’t expect
docs/_component/nav.jsx:95:39     - Unknown word (doctypes)   -- because we don’t expect doctypes.
docs/_component/nav.jsx:97:25     - Unknown word (Hast)       -- meta.descriptionHast.children
docs/_component/snowfall.jsx:26:21     - Unknown word (snowfall)   -- <div className="snowfall">
docs/_component/snowfall.jsx:31:24     - Unknown word (snowfall)   -- className="snowfall-bar"
docs/_component/sort.js:34:24     - Unknown word (Cannot)     -- throw new Error('Cannot order as `' + order
docs/_config.js:23:36     - Unknown word (about)        -- index.html': '/community/about/',
docs/_config.js:23:5      - Unknown word (about)        -- '/about/index.html': '/community
docs/_config.js:24:29     - Unknown word (guides)       -- advanced/index.html': '/guides/',
docs/_config.js:27:45     - Unknown word (using)        -- index.html': '/docs/using-mdx/',
docs/_config.js:28:52     - Unknown word (contribute)   -- index.html': '/community/contribute/',
docs/_config.js:29:21     - Unknown word (loader)       -- '/advanced/custom-loader/index.html': '/guides
docs/_config.js:29:43     - Unknown word (guides)       -- loader/index.html': '/guides/frontmatter/',
docs/_config.js:30:49     - Unknown word (extending)    -- index.html': '/docs/extending-mdx/#using-plugins'
docs/_config.js:30:64     - Unknown word (using)        -- docs/extending-mdx/#using-plugins',
docs/_config.js:31:42     - Unknown word (extending)    -- index.html': '/docs/extending-mdx/',
docs/_config.js:32:51     - Unknown word (evaluatefile) -- html': '/packages/mdx/#evaluatefile-options',
docs/_config.js:37:46     - Unknown word (guides)       -- plugin/index.html': '/guides/frontmatter/',
docs/_config.js:38:43     - Unknown word (contribute)   -- index.html': '/community/contribute/',
docs/_config.js:42:21     - Unknown word (gatsby)       -- '/getting-started/gatsby/index.html': '/docs
docs/_config.js:42:65     - Unknown word (gatsby)       -- docs/getting-started/#gatsby',
docs/_config.js:50:19     - Unknown word (loader)       -- '/guides/custom-loader/index.html': '/guides
docs/_config.js:50:41     - Unknown word (guides)       -- loader/index.html': '/guides/frontmatter/',
docs/_config.js:50:5      - Unknown word (guides)       -- '/guides/custom-loader/index
docs/_config.js:52:21     - Unknown word (highlighting) -- '/guides/syntax-highlighting/#syntax-highlighting
docs/_config.js:52:42     - Unknown word (highlighting) -- highlighting/#syntax-highlighting-with-the-meta-field
docs/_config.js:56:50     - Unknown word (extending)    -- index.html': '/docs/extending-mdx/',
docs/_config.js:59:12     - Unknown word (wrapper)      -- '/guides/wrapper-customization/index
docs/_config.js:59:54     - Unknown word (using)        -- index.html': '/docs/using-mdx/#layout',
docs/_config.js:61:12     - Unknown word (extending)    -- '/docs/extending-mdx/#creating-plugins
docs/_config.js:63:33     - Unknown word (extending)    -- index.html': '/docs/extending-mdx/#using-plugins'
docs/_config.js:63:48     - Unknown word (using)        -- docs/extending-mdx/#using-plugins',
docs/_config.js:6:16      - Unknown word (contributors) -- author: 'MDX contributors',
docs/_static/icon.svg:10:5      - Unknown word (style)      -- </style>
docs/_static/icon.svg:11:4      - Unknown word (rect)       -- <rect
docs/_static/icon.svg:12:5      - Unknown word (width)      -- width="136.5"
docs/_static/icon.svg:13:5      - Unknown word (height)     -- height="55.5"
docs/_static/icon.svg:18:12     - Unknown word (none)       -- <g fill="none" stroke-width="6">
docs/_static/icon.svg:18:18     - Unknown word (stroke)     -- <g fill="none" stroke-width="6">
docs/_static/icon.svg:18:25     - Unknown word (width)      -- g fill="none" stroke-width="6">
docs/_static/icon.svg:18:6      - Unknown word (fill)       -- <g fill="none" stroke-width
docs/_static/icon.svg:3:4       - Unknown word (style)      -- <style>
docs/_static/icon.svg:4:12      - Unknown word (fill)       -- rect { fill: #1b1f24 }
docs/_static/icon.svg:4:5       - Unknown word (rect)       -- rect { fill: #1b1f24 }
docs/_static/icon.svg:5:9       - Unknown word (stroke)     -- g { stroke: #fff }
docs/_static/icon.svg:6:13      - Unknown word (prefers)    -- @media (prefers-color-scheme: dark)
docs/_static/icon.svg:6:21      - Unknown word (color)      -- @media (prefers-color-scheme: dark) {
docs/_static/icon.svg:6:35      - Unknown word (dark)       -- prefers-color-scheme: dark) {
docs/_static/icon.svg:7:14      - Unknown word (fill)       -- rect { fill: #fcb32c }
docs/_static/icon.svg:7:7       - Unknown word (rect)       -- rect { fill: #fcb32c }
docs/_static/icon.svg:8:11      - Unknown word (stroke)     -- g { stroke: #1b1f24 }
docs/blog/conf.mdx:101:32    - Unknown word (August)          -- if I can’t make it on August 24th?
docs/blog/conf.mdx:104:19    - Unknown word (recorded)        -- All talks will be recorded and released the day
docs/blog/conf.mdx:104:5     - Unknown word (talks)           -- All talks will be recorded and
docs/blog/conf.mdx:105:27    - Unknown word (talks)           -- can catch up with the talks, or rewatch them, whenever
docs/blog/conf.mdx:105:37    - Unknown word (rewatch)         -- up with the talks, or rewatch them, whenever convenient
docs/blog/conf.mdx:105:45    - Unknown word (them)            -- the talks, or rewatch them, whenever convenient
docs/blog/conf.mdx:105:51    - Unknown word (whenever)        -- talks, or rewatch them, whenever convenient.
docs/blog/conf.mdx:105:60    - Unknown word (convenient)      -- rewatch them, whenever convenient.
docs/blog/conf.mdx:107:14    - Unknown word (talks)           -- ### Will the talks be transcribed?
docs/blog/conf.mdx:107:23    - Unknown word (transcribed)     -- # Will the talks be transcribed?
docs/blog/conf.mdx:111:24    - Unknown word (conduct)         -- Is there a code of conduct?
docs/blog/conf.mdx:111:8     - Unknown word (there)           -- ### Is there a code of conduct?
docs/blog/conf.mdx:113:1     - Unknown word (Absolutely)      -- Absolutely.
docs/blog/conf.mdx:114:20    - Unknown word (providing)       -- We’re dedicated to providing a harassment-free experience
docs/blog/conf.mdx:114:32    - Unknown word (harassment)      -- dedicated to providing a harassment-free experience for
docs/blog/conf.mdx:114:48    - Unknown word (experience)      -- providing a harassment-free experience for everyone.
docs/blog/conf.mdx:114:63    - Unknown word (everyone)        -- free experience for everyone.
docs/blog/conf.mdx:115:13    - Unknown word (tolerate)        -- We will not tolerate harassment of participants
docs/blog/conf.mdx:115:22    - Unknown word (harassment)      -- We will not tolerate harassment of participants in any
docs/blog/conf.mdx:115:36    - Unknown word (participants)    -- tolerate harassment of participants in any form.
docs/blog/conf.mdx:116:26    - Unknown word (Corgi)           -- ve adopted the [Party Corgi Network’s Code of Conduct
docs/blog/conf.mdx:116:50    - Unknown word (Conduct)         -- Corgi Network’s Code of Conduct][coc].
docs/blog/conf.mdx:116:7     - Unknown word (adopted)         -- We’ve adopted the [Party Corgi Network
docs/blog/conf.mdx:117:14    - Unknown word (moderators)      -- We will have moderators to ensure that the code
docs/blog/conf.mdx:117:52    - Unknown word (conduct)         -- ensure that the code of conduct is followed.
docs/blog/conf.mdx:117:63    - Unknown word (followed)        -- the code of conduct is followed.
docs/blog/conf.mdx:119:19    - Unknown word (different)       -- ### Do you have a different question?
docs/blog/conf.mdx:121:1     - Unknown word (Reach)           -- Reach out to us on [Twitter
docs/blog/conf.mdx:13:16     - Unknown word (kept)       -- The below is kept as is for historical
docs/blog/conf.mdx:13:31     - Unknown word (historical) -- below is kept as is for historical purposes.
docs/blog/conf.mdx:13:42     - Unknown word (purposes)   -- as is for historical purposes.
docs/blog/conf.mdx:16:6      - Unknown word (Conf)       -- # MDXConf
docs/blog/conf.mdx:18:4      - Unknown word (Conf)       -- MDXConf is a free and online
docs/blog/conf.mdx:19:1      - Unknown word (Whether)    -- Whether you’re just learning
docs/blog/conf.mdx:19:21     - Unknown word (learning)   -- Whether you’re just learning about MDX or an expert
docs/blog/conf.mdx:19:30     - Unknown word (about)      -- you’re just learning about MDX or an expert, there
docs/blog/conf.mdx:19:46     - Unknown word (expert)     -- learning about MDX or an expert, there’ll be something
docs/blog/conf.mdx:19:54     - Unknown word (there’ll)   -- about MDX or an expert, there’ll be something for
docs/blog/conf.mdx:20:10     - Unknown word (more)       -- you! {/* more */}
docs/blog/conf.mdx:22:1      - Unknown word (August)     -- August 24th, 2020 at 8am PDT
docs/blog/conf.mdx:26:41     - Unknown word (still)      -- now over, but you can still watch the recordings
docs/blog/conf.mdx:26:57     - Unknown word (recordings) -- can still watch the recordings!
docs/blog/conf.mdx:28:12     - Unknown word (talks)      -- [Watch the talks →](https://egghead.io
docs/blog/conf.mdx:30:4      - Unknown word (About)      -- ## About
docs/blog/conf.mdx:33:17     - Unknown word (directly)   -- We’ll stream it directly to you, for free.
docs/blog/conf.mdx:35:15     - Unknown word (rapidly)    -- MDX has grown rapidly since the [first commit
docs/blog/conf.mdx:35:9      - Unknown word (grown)      -- MDX has grown rapidly since the [first
docs/blog/conf.mdx:36:14     - Unknown word (celebrate)  -- We’d like to celebrate our accomplishments
docs/blog/conf.mdx:36:28     - Unknown word (accomplishments) -- like to celebrate our accomplishments so far, and talk about
docs/blog/conf.mdx:36:56     - Unknown word (talk)            -- accomplishments so far, and talk about what lies
docs/blog/conf.mdx:36:61     - Unknown word (about)           -- omplishments so far, and talk about what lies
docs/blog/conf.mdx:36:72     - Unknown word (lies)            -- and talk about what lies
docs/blog/conf.mdx:40:1      - Unknown word (Learn)           -- Learn how MDX increases developer
docs/blog/conf.mdx:40:15     - Unknown word (increases)       -- Learn how MDX increases developer productivity
docs/blog/conf.mdx:40:35     - Unknown word (productivity)    -- increases developer productivity, improves educational
docs/blog/conf.mdx:40:49     - Unknown word (improves)        -- developer productivity, improves educational
docs/blog/conf.mdx:40:58     - Unknown word (educational)     -- productivity, improves educational
docs/blog/conf.mdx:41:29     - Unknown word (peek)            -- authoring, and even peek behind the curtains
docs/blog/conf.mdx:41:34     - Unknown word (behind)          -- authoring, and even peek behind the curtains to see
docs/blog/conf.mdx:41:45     - Unknown word (curtains)        -- even peek behind the curtains to see how MDX works
docs/blog/conf.mdx:41:9      - Unknown word (authoring)       -- content authoring, and even peek behind
docs/blog/conf.mdx:45:12     - Unknown word (Biscardi)        -- ### [Chris Biscardi](https://twitter.com
docs/blog/conf.mdx:45:6      - Unknown word (Chris)           -- ### [Chris Biscardi](https://twitter
docs/blog/conf.mdx:49:1      - Unknown word (Keynote)         -- Keynote: The past, present,
docs/blog/conf.mdx:49:14     - Unknown word (past)            -- Keynote: The past, present, and future
docs/blog/conf.mdx:51:13     - Unknown word (Powell)          -- ### [Monica Powell](https://twitter.com
docs/blog/conf.mdx:51:6      - Unknown word (Monica)          -- ### [Monica Powell](https://twitter
docs/blog/conf.mdx:55:1      - Unknown word (Migrating)       -- Migrating to MDX
docs/blog/conf.mdx:57:13     - Unknown word (Barth)           -- ### [Laurie Barth](https://twitter.com
docs/blog/conf.mdx:57:6      - Unknown word (Laurie)          -- ### [Laurie Barth](https://twitter
docs/blog/conf.mdx:5:15      - Unknown word (johno)      -- {github: 'johno', name: 'John Otander
docs/blog/conf.mdx:5:30      - Unknown word (John)       -- github: 'johno', name: 'John Otander', twitter:
docs/blog/conf.mdx:5:35      - Unknown word (Otander)    -- johno', name: 'John Otander', twitter: '4lpine'
docs/blog/conf.mdx:5:56      - Unknown word (lpine)      -- Otander', twitter: '4lpine'}
docs/blog/conf.mdx:63:6      - Unknown word (Cole)            -- ### [Cole Bemis](https://twitter
docs/blog/conf.mdx:67:1      - Unknown word (Demystifying)    -- Demystifying MDX
docs/blog/conf.mdx:69:13     - Unknown word (Wilson)          -- ### [Prince Wilson](https://twitter.com
docs/blog/conf.mdx:69:6      - Unknown word (Prince)          -- ### [Prince Wilson](https://twitter
docs/blog/conf.mdx:73:15     - Unknown word (playgrounds)     -- Personal site playgrounds
docs/blog/conf.mdx:75:17     - Unknown word (Mahon)           -- ### [Kathleen McMahon](https://twitter.com
docs/blog/conf.mdx:75:6      - Unknown word (Kathleen)        -- ### [Kathleen McMahon](https://twitter
docs/blog/conf.mdx:79:9      - Unknown word (gardening)       -- Digital gardening with MDX magic
docs/blog/conf.mdx:81:14     - Unknown word (Pombo)           -- ### [Rodrigo Pombo](https://twitter.com
docs/blog/conf.mdx:81:6      - Unknown word (Rodrigo)         -- ### [Rodrigo Pombo](https://twitter
docs/blog/conf.mdx:87:15     - Unknown word (Bakebwa)         -- ### [Jonathan Bakebwa](https://twitter.com
docs/blog/conf.mdx:87:6      - Unknown word (Jonathan)        -- ### [Jonathan Bakebwa](https://twitter
docs/blog/conf.mdx:91:13     - Unknown word (Nuxt)            -- MDX and Vue/Nuxt
docs/blog/custom-pragma.mdx:110:25    - Unknown word (hast)                -- MDXTag` is used in the hast to estree conversion
docs/blog/custom-pragma.mdx:112:66    - Unknown word (handles)             -- MDXTag`, and `MDXTag` handles
docs/blog/custom-pragma.mdx:112:7     - Unknown word (renderable)          -- Every renderable element is wrapped in
docs/blog/custom-pragma.mdx:113:23    - Unknown word (later)               -- rendering the element later.
docs/blog/custom-pragma.mdx:121:6     - Unknown word (concrete)            -- ## A concrete example
docs/blog/custom-pragma.mdx:133:1     - Unknown word (turns)               -- turns into the following React
docs/blog/custom-pragma.mdx:137:17    - Unknown word (wrapper)             -- <MDXTag name="wrapper" components={components
docs/blog/custom-pragma.mdx:13:13     - Unknown word (described)           -- The steps described in it are no longer
docs/blog/custom-pragma.mdx:13:36     - Unknown word (longer)              -- described in it are no longer performed by MDX.
docs/blog/custom-pragma.mdx:13:43     - Unknown word (performed)           -- in it are no longer performed by MDX.
docs/blog/custom-pragma.mdx:14:39     - Unknown word (rather)              -- JavaScript AST first rather than generating a string
docs/blog/custom-pragma.mdx:14:51     - Unknown word (generating)          -- AST first rather than generating a string of JSX.
docs/blog/custom-pragma.mdx:15:17     - Unknown word (longer)              -- It is also no longer required for extra glue
docs/blog/custom-pragma.mdx:15:59     - Unknown word (combines)            -- extra glue code, that combines MDX with a
docs/blog/custom-pragma.mdx:15:9      - Unknown word (also)                -- It is also no longer required for
docs/blog/custom-pragma.mdx:166:14    - Unknown word (approach)            -- With the new approach, the above MDX transforms
docs/blog/custom-pragma.mdx:166:28    - Unknown word (above)               -- the new approach, the above MDX transforms into
docs/blog/custom-pragma.mdx:18:10     - Unknown word (Architecture)        -- and [¶ Architecture](/packages/mdx/#architecture
docs/blog/custom-pragma.mdx:18:57     - Unknown word (more)                -- mdx/#architecture) for more info.
docs/blog/custom-pragma.mdx:191:1     - Unknown word (Notice)              -- Notice how now the React elements
docs/blog/custom-pragma.mdx:191:39    - Unknown word (plainly)             -- the React elements are plainly readable without
docs/blog/custom-pragma.mdx:194:16    - Unknown word (cleaned)             -- Now that we’ve cleaned up the intermediary
docs/blog/custom-pragma.mdx:194:31    - Unknown word (intermediary)       -- we’ve cleaned up the intermediary representation, we need
docs/blog/custom-pragma.mdx:194:44    - Unknown word (representation)     -- up the intermediary representation, we need to
docs/blog/custom-pragma.mdx:195:33    - Unknown word (functionality)      -- that we have the same functionality as the old `MDXTag`
docs/blog/custom-pragma.mdx:195:6     - Unknown word (sure)               -- make sure that we have the same
docs/blog/custom-pragma.mdx:197:1     - Unknown word (Typically)          -- Typically when using React, we
docs/blog/custom-pragma.mdx:197:16    - Unknown word (using)              -- Typically when using React, we use `React
docs/blog/custom-pragma.mdx:199:29    - Unknown word (using)              -- even true if you’re using JSX because JSX tags
docs/blog/custom-pragma.mdx:19:16     - Unknown word (kept)                -- The below is kept as is for historical
docs/blog/custom-pragma.mdx:19:31     - Unknown word (historical)          -- below is kept as is for historical purposes.
docs/blog/custom-pragma.mdx:19:42     - Unknown word (purposes)            -- as is for historical purposes.
docs/blog/custom-pragma.mdx:201:14    - Unknown word (instead)            -- So this time instead of using `React.createElement
docs/blog/custom-pragma.mdx:201:25    - Unknown word (using)              -- this time instead of using `React.createElement
docs/blog/custom-pragma.mdx:201:62    - Unknown word (using)              -- createElement` we’ll be using our own.
docs/blog/custom-pragma.mdx:203:1     - Unknown word (Reproduced)         -- Reproduced here is our `createElement
docs/blog/custom-pragma.mdx:204:11    - Unknown word (whether)            -- we decide whether or not MDX should take
docs/blog/custom-pragma.mdx:204:4     - Unknown word (decide)             -- we decide whether or not MDX should
docs/blog/custom-pragma.mdx:242:12    - Unknown word (cool)               -- One really cool application of the new
docs/blog/custom-pragma.mdx:242:5     - Unknown word (really)             -- One really cool application of
docs/blog/custom-pragma.mdx:242:54    - Unknown word (using)              -- the new output format using a custom
docs/blog/custom-pragma.mdx:244:1     - Unknown word (frameworks)         -- frameworks.
docs/blog/custom-pragma.mdx:245:35    - Unknown word (responsibility)     -- pragma insertion is the responsibility of the webpack (or other
docs/blog/custom-pragma.mdx:246:11    - Unknown word (loader)             -- bundlers) loader, swapping the pragma
docs/blog/custom-pragma.mdx:246:19    - Unknown word (swapping)           -- bundlers) loader, swapping the pragma can be an
docs/blog/custom-pragma.mdx:246:63    - Unknown word (loader)             -- be an option in mdx-loader as long as
docs/blog/custom-pragma.mdx:24:15     - Unknown word (those)               -- `MDXTag`, for those that aren’t aware, is
docs/blog/custom-pragma.mdx:24:26     - Unknown word (aren’t)              -- MDXTag`, for those that aren’t aware, is a critical
docs/blog/custom-pragma.mdx:24:33     - Unknown word (aware)               -- for those that aren’t aware, is a critical piece
docs/blog/custom-pragma.mdx:24:54     - Unknown word (piece)               -- aware, is a critical piece in the way
docs/blog/custom-pragma.mdx:27:7      - Unknown word (previously)          -- [I’ve previously
docs/blog/custom-pragma.mdx:29:1      - Unknown word (about)               -- about the way `MDXTag` works
docs/blog/custom-pragma.mdx:29:35     - Unknown word (trying)              -- `MDXTag` works when trying to replace the `<pre
docs/blog/custom-pragma.mdx:32:14     - Unknown word (methodology)         -- contains the methodology for pulling the props
docs/blog/custom-pragma.mdx:32:30     - Unknown word (pulling)             -- the methodology for pulling the props around appropriatel
docs/blog/custom-pragma.mdx:32:42     - Unknown word (props)               -- methodology for pulling the props around appropriately
docs/blog/custom-pragma.mdx:32:55     - Unknown word (appropriately)       -- pulling the props around appropriately
docs/blog/custom-pragma.mdx:33:40     - Unknown word (inbetween)           -- MDXTag` elements that are inbetween `pre` and `code`.
docs/blog/custom-pragma.mdx:35:5      - Unknown word (more)                -- {/* more */}
docs/blog/custom-pragma.mdx:38:29     - Unknown word (Props)               -- preToCodeBlock = preProps => {
docs/blog/custom-pragma.mdx:41:8      - Unknown word (Props)               -- preProps.children &&
docs/blog/custom-pragma.mdx:42:15     - Unknown word (props)               -- // MDXTag props
docs/blog/custom-pragma.mdx:43:23     - Unknown word (props)               -- preProps.children.props &&
docs/blog/custom-pragma.mdx:43:8      - Unknown word (Props)               -- preProps.children.props &&
docs/blog/custom-pragma.mdx:44:21     - Unknown word (going)               -- // if MDXTag is going to render a <code>
docs/blog/custom-pragma.mdx:45:23     - Unknown word (props)               -- preProps.children.props.name === 'code'
docs/blog/custom-pragma.mdx:45:8      - Unknown word (Props)               -- preProps.children.props.name
docs/blog/custom-pragma.mdx:47:30     - Unknown word (situation)           -- we have a <pre><code> situation
docs/blog/custom-pragma.mdx:50:7      - Unknown word (props)               -- props: {className, ...props
docs/blog/custom-pragma.mdx:51:12     - Unknown word (Props)               -- } = preProps.children.props
docs/blog/custom-pragma.mdx:5:15      - Unknown word (christopherbiscardi) -- {github: 'christopherbiscardi', name: 'Chris Biscardi
docs/blog/custom-pragma.mdx:5:44      - Unknown word (Chris)               -- christopherbiscardi', name: 'Chris Biscardi', twitter:
docs/blog/custom-pragma.mdx:5:50      - Unknown word (Biscardi)            -- topherbiscardi', name: 'Chris Biscardi', twitter: 'chrisbiscardi
docs/blog/custom-pragma.mdx:5:71      - Unknown word (chrisbiscardi)       -- Biscardi', twitter: 'chrisbiscardi'}
docs/blog/custom-pragma.mdx:65:20     - Unknown word (included)            -- All of the code is included here for reference.
docs/blog/custom-pragma.mdx:74:3      - Unknown word (wrapper)             -- wrapper: 'div'
docs/blog/index.mdx:16:24     - Unknown word (Contributors) -- author: [{name: 'MDX Contributors'}],
docs/blog/index.mdx:26:17     - Unknown word (about)        -- The latest news about MDX.
docs/blog/index.mdx:30:28     - Unknown word (props)        -- const navigationTree = props.navigationTree
docs/blog/index.mdx:7:15      - Unknown word (Props)      -- * @typedef Props
docs/blog/shortcodes.mdx:13:16     - Unknown word (described)  -- The features described in it are currently
docs/blog/shortcodes.mdx:13:36     - Unknown word (currently)  -- described in it are currently documented at
docs/blog/shortcodes.mdx:13:46     - Unknown word (documented) -- in it are currently documented at
docs/blog/shortcodes.mdx:15:16     - Unknown word (kept)       -- The below is kept as is for historical
docs/blog/shortcodes.mdx:15:31     - Unknown word (historical) -- below is kept as is for historical purposes.
docs/blog/shortcodes.mdx:15:42     - Unknown word (purposes)   -- as is for historical purposes.
docs/blog/shortcodes.mdx:20:4      - Unknown word (exciting)   -- An exciting new feature in MDX v
docs/blog/shortcodes.mdx:21:20     - Unknown word (expose)     -- This allows you to expose components to all of
docs/blog/shortcodes.mdx:21:6      - Unknown word (allows)     -- This allows you to expose components
docs/blog/shortcodes.mdx:23:11     - Unknown word (useful)     -- This is a useful feature for common components
docs/blog/shortcodes.mdx:24:1      - Unknown word (cards)      -- cards, or anything else frequently
docs/blog/shortcodes.mdx:24:11     - Unknown word (anything)   -- cards, or anything else frequently used
docs/blog/shortcodes.mdx:24:25     - Unknown word (frequently) -- cards, or anything else frequently used in your documents
docs/blog/shortcodes.mdx:26:5      - Unknown word (more)       -- {/* more */}
docs/blog/shortcodes.mdx:28:28     - Unknown word (wrapper)    -- have an application wrapper for your MDX documents
docs/blog/shortcodes.mdx:45:24     - Unknown word (more)       -- Shortcodes are nothing more than components, so
docs/blog/shortcodes.mdx:45:67     - Unknown word (them)       -- so you can reference them anywhere
docs/blog/shortcodes.mdx:45:72     - Unknown word (anywhere)   -- you can reference them anywhere
docs/blog/shortcodes.mdx:53:10     - Unknown word (tweet)      -- <YouTube tweetId="1234" />
docs/blog/shortcodes.mdx:5:15      - Unknown word (johno)      -- {github: 'johno', name: 'John Otander
docs/blog/shortcodes.mdx:5:30      - Unknown word (John)       -- github: 'johno', name: 'John Otander', twitter:
docs/blog/shortcodes.mdx:5:35      - Unknown word (Otander)    -- johno', name: 'John Otander', twitter: '4lpine'
docs/blog/shortcodes.mdx:5:56      - Unknown word (lpine)      -- Otander', twitter: '4lpine'}
docs/blog/shortcodes.mdx:65:1      - Unknown word (Huge)       -- Huge thanks to [Chris Biscardi
docs/blog/shortcodes.mdx:65:17     - Unknown word (Chris)      -- Huge thanks to [Chris Biscardi](https://christopher
docs/blog/shortcodes.mdx:65:23     - Unknown word (Biscardi)   -- Huge thanks to [Chris Biscardi](https://christopherbiscardi
docs/blog/shortcodes.mdx:65:6      - Unknown word (thanks)     -- Huge thanks to [Chris Biscardi]
docs/blog/shortcodes.mdx:66:18     - Unknown word (most)       -- for building out most of this functionality
docs/blog/shortcodes.mdx:66:31     - Unknown word (functionality) -- building out most of this functionality.
docs/blog/v1.mdx:100:22    - Unknown word (replaced)            -- 🚨`@mdx-js/tag` is replaced by `@mdx-js/react` and
docs/blog/v1.mdx:101:16    - Unknown word (guide)               -- — [migration guide](/migrating/v1#pragma
docs/blog/v1.mdx:102:19    - Unknown word (merges)              -- * MDXProvider now merges component contexts when
docs/blog/v1.mdx:102:36    - Unknown word (contexts)            -- now merges component contexts when nested
docs/blog/v1.mdx:103:16    - Unknown word (guide)               -- — [migration guide](/migrating/v1#mdxprovider
docs/blog/v1.mdx:105:16    - Unknown word (guide)               -- — [migration guide](/migrating/v1#react
docs/blog/v1.mdx:107:29    - Unknown word (guide)               -- the full v1 migration guide](/migrating/v1)
docs/blog/v1.mdx:111:19    - Unknown word (introduce)           -- We only needed to introduce one deprecation.
docs/blog/v1.mdx:111:33    - Unknown word (deprecation)         -- needed to introduce one deprecation.
docs/blog/v1.mdx:112:22    - Unknown word (hast)                -- The `mdPlugins` and `hastPlugins` options have
docs/blog/v1.mdx:112:48    - Unknown word (been)                -- hastPlugins` options have been renamed `remarkPlugins
docs/blog/v1.mdx:113:17    - Unknown word (respectively)        -- `rehypePlugins` respectively.
docs/blog/v1.mdx:114:14    - Unknown word (being)               -- For the time being we will issue a warning
docs/blog/v1.mdx:117:7     - Unknown word (Growth)              -- ## 📈 Growth
docs/blog/v1.mdx:119:29    - Unknown word (good)                -- release is always a good time to take a step
docs/blog/v1.mdx:120:28    - Unknown word (growth)              -- happening in terms of growth and the greater community
docs/blog/v1.mdx:120:6     - Unknown word (happening)           -- been happening in terms of growth and
docs/blog/v1.mdx:121:15    - Unknown word (surrounding)        -- The ecosystem surrounding MDX has already grown
docs/blog/v1.mdx:121:43    - Unknown word (grown)              -- surrounding MDX has already grown larger than we ever
docs/blog/v1.mdx:121:5     - Unknown word (ecosystem)          -- The ecosystem surrounding MDX has
docs/blog/v1.mdx:121:69    - Unknown word (dreamed)            -- larger than we ever dreamed.
docs/blog/v1.mdx:122:61    - Unknown word (imagined)           -- application we never even imagined.
docs/blog/v1.mdx:122:7     - Unknown word (also)               -- We’ve also seen projects/products
docs/blog/v1.mdx:126:5     - Unknown word (Downloads)          -- * **Downloads**: 125,000/week, 2.
docs/blog/v1.mdx:127:5     - Unknown word (Stars)              -- * **Stars**: 6,200
docs/blog/v1.mdx:128:5     - Unknown word (Contributors)       -- * **Contributors**: 50
docs/blog/v1.mdx:132:17    - Unknown word (growth)             -- The contributor growth is one of the most important
docs/blog/v1.mdx:132:38    - Unknown word (most)               -- growth is one of the most important aspects here
docs/blog/v1.mdx:132:5     - Unknown word (contributor)        -- The contributor growth is one of the
docs/blog/v1.mdx:132:53    - Unknown word (aspects)            -- of the most important aspects here as we have
docs/blog/v1.mdx:133:1     - Unknown word (numerous)           -- numerous community members that
docs/blog/v1.mdx:133:37    - Unknown word (familiar)           -- community members that are familiar with MDX internals.
docs/blog/v1.mdx:133:55    - Unknown word (internals)          -- are familiar with MDX internals.
docs/blog/v1.mdx:134:19    - Unknown word (continually)        -- This allows us to continually improve the project
docs/blog/v1.mdx:134:31    - Unknown word (improve)            -- allows us to continually improve the project and spread
docs/blog/v1.mdx:134:6     - Unknown word (allows)             -- This allows us to continually improve
docs/blog/v1.mdx:135:1     - Unknown word (against)            -- against an ever growing team
docs/blog/v1.mdx:135:17    - Unknown word (growing)            -- against an ever growing team of contributors
docs/blog/v1.mdx:135:33    - Unknown word (contributors)       -- ever growing team of contributors.
docs/blog/v1.mdx:137:10    - Unknown word (contributor)        -- [See the contributor graph](https://github
docs/blog/v1.mdx:139:5     - Unknown word (Ecosystem)          -- ### Ecosystem
docs/blog/v1.mdx:142:4     - Unknown word (Docz)               -- * [Docz](https://docz.site)
docs/blog/v1.mdx:143:8     - Unknown word (Deck)               -- * [MDX Deck](https://github.com
docs/blog/v1.mdx:145:4     - Unknown word (Gatsby)             -- * [Gatsby](https://gatsbyjs.org
docs/blog/v1.mdx:146:8     - Unknown word (Explorer)           -- * [AST Explorer](https://astexplorer
docs/blog/v1.mdx:148:4     - Unknown word (Demoboard)          -- * [Demoboard](https://frontarm.com
docs/blog/v1.mdx:14:28     - Unknown word (longer)     -- @mdx` pragma” is no longer needed.
docs/blog/v1.mdx:153:73    - Unknown word (towards)            -- ll continue working towards
docs/blog/v1.mdx:154:67    - Unknown word (issues)             -- bug fixes and parsing issues we
docs/blog/v1.mdx:155:1     - Unknown word (might)              -- might encounter.
docs/blog/v1.mdx:155:7     - Unknown word (encounter)          -- might encounter.
docs/blog/v1.mdx:158:3     - Unknown word (Interleaving)       -- * Interleaving: [#195](https://github
docs/blog/v1.mdx:15:16     - Unknown word (kept)       -- The below is kept as is for historical
docs/blog/v1.mdx:15:31     - Unknown word (historical) -- below is kept as is for historical purposes.
docs/blog/v1.mdx:15:42     - Unknown word (purposes)   -- as is for historical purposes.
docs/blog/v1.mdx:162:18    - Unknown word (inspired)           -- * MDX playground inspired by AST Explorer: [#
docs/blog/v1.mdx:162:34    - Unknown word (Explorer)           -- playground inspired by AST Explorer: [#220](https://github
docs/blog/v1.mdx:162:7     - Unknown word (playground)         -- * MDX playground inspired by AST Explorer
docs/blog/v1.mdx:163:7     - Unknown word (splash)             -- * New splash page: [#444](https:
docs/blog/v1.mdx:164:3     - Unknown word (Showcase)           -- * Showcase page: [#414](https:
docs/blog/v1.mdx:168:1     - Unknown word (Supporting)         -- Supporting Vue is an important
docs/blog/v1.mdx:168:32    - Unknown word (goal)               -- Vue is an important goal for MDX and is one of
docs/blog/v1.mdx:168:71    - Unknown word (reasons)            -- is one of the primary reasons
docs/blog/v1.mdx:169:7     - Unknown word (rearchitected)      -- we’ve rearchitected MDX to use custom pragma
docs/blog/v1.mdx:170:7     - Unknown word (delighted)          -- We’re delighted that **we now have an
docs/blog/v1.mdx:171:17    - Unknown word (anyone)             -- We’d love it if anyone from the Vue community
docs/blog/v1.mdx:171:47    - Unknown word (wants)              -- from the Vue community wants to give it a try and
docs/blog/v1.mdx:178:24    - Unknown word (aspects)            -- One of the key missing aspects of authoring MDX documents
docs/blog/v1.mdx:178:35    - Unknown word (authoring)          -- key missing aspects of authoring MDX documents is the
docs/blog/v1.mdx:178:66    - Unknown word (editing)            -- MDX documents is the editing
docs/blog/v1.mdx:179:1     - Unknown word (experience)         -- experience.
docs/blog/v1.mdx:180:1     - Unknown word (Currently)          -- Currently, there isn’t an approachable
docs/blog/v1.mdx:180:12    - Unknown word (there)              -- Currently, there isn’t an approachable
docs/blog/v1.mdx:180:27    - Unknown word (approachable)       -- Currently, there isn’t an approachable way to write MDX unless
docs/blog/v1.mdx:180:57    - Unknown word (unless)             -- approachable way to write MDX unless you enjoy working
docs/blog/v1.mdx:180:68    - Unknown word (enjoy)              -- write MDX unless you enjoy working
docs/blog/v1.mdx:182:14    - Unknown word (solve)              -- We’d like to solve that and have begun
docs/blog/v1.mdx:182:34    - Unknown word (begun)              -- solve that and have begun work on an MDX “blocks
docs/blog/v1.mdx:184:26    - Unknown word (doing)             -- to mention, we’ll be doing all that we can to make
docs/blog/v1.mdx:184:56    - Unknown word (sure)              -- that we can to make sure the editor is as
docs/blog/v1.mdx:184:8     - Unknown word (mention)           -- Not to mention, we’ll be doing all
docs/blog/v1.mdx:185:1     - Unknown word (accessible)        -- accessible as it can be from the
docs/blog/v1.mdx:187:43    - Unknown word (sourcing)          -- ready we will be open sourcing it and announcing, so
docs/blog/v1.mdx:187:59    - Unknown word (announcing)        -- open sourcing it and announcing, so stay
docs/blog/v1.mdx:187:74    - Unknown word (stay)              -- it and announcing, so stay
docs/blog/v1.mdx:188:1     - Unknown word (tuned)             -- tuned.
docs/blog/v1.mdx:18:7      - Unknown word (goes)       -- # MDX goes stable
docs/blog/v1.mdx:192:12    - Unknown word (collective)        -- ## unified collective
docs/blog/v1.mdx:194:28    - Unknown word (collective)        -- part of the unified collective, which is an open source
docs/blog/v1.mdx:194:64    - Unknown word (ecosystem)         -- which is an open source ecosystem for
docs/blog/v1.mdx:195:1     - Unknown word (dealing)           -- dealing with many sources of
docs/blog/v1.mdx:196:52    - Unknown word (would)             -- over the web, and it would never be possible
docs/blog/v1.mdx:196:67    - Unknown word (possible)          -- and it would never be possible
docs/blog/v1.mdx:197:41    - Unknown word (sponsors)          -- support from our fine sponsors.
docs/blog/v1.mdx:200:4     - Unknown word (Gatsby)            -- * [Gatsby](https://gatsbyjs.org
docs/blog/v1.mdx:201:4     - Unknown word (Holloway)          -- * [Holloway](https://www.holloway
docs/blog/v1.mdx:202:4     - Unknown word (Backers)           -- * [Backers](https://opencollective
docs/blog/v1.mdx:205:7     - Unknown word (Thanks)            -- ## 🙏 Thanks
docs/blog/v1.mdx:207:18    - Unknown word (thanks)            -- We’d like to say thanks to all our contributors
docs/blog/v1.mdx:207:36    - Unknown word (contributors)      -- say thanks to all our contributors and our happy users
docs/blog/v1.mdx:208:9     - Unknown word (thanks)            -- Special thanks to
docs/blog/v1.mdx:209:3     - Unknown word (wooorm)            -- [@wooorm](https://github.com
docs/blog/v1.mdx:20:6      - Unknown word (been)       -- It’s been a year and a half since
docs/blog/v1.mdx:210:3     - Unknown word (silvenon)          -- [@silvenon](https://github.com
docs/blog/v1.mdx:211:3     - Unknown word (timneutkens)       -- [@timneutkens](https://github.com
docs/blog/v1.mdx:212:14    - Unknown word (Biscardi)          -- [@ChristopherBiscardi](https://github.com
docs/blog/v1.mdx:212:3     - Unknown word (Christopher)       -- [@ChristopherBiscardi](https://github
docs/blog/v1.mdx:213:3     - Unknown word (jxnblk)            -- [@jxnblk](https://github.com
docs/blog/v1.mdx:214:3     - Unknown word (alexandernanberg)  -- [@alexandernanberg](https://github.com
docs/blog/v1.mdx:215:3     - Unknown word (jescalan)          -- [@jescalan](https://github.com
docs/blog/v1.mdx:216:10    - Unknown word (Sumner)            -- [@Jarred-Sumner](https://github.com
docs/blog/v1.mdx:216:3     - Unknown word (Jarred)            -- [@Jarred-Sumner](https://github
docs/blog/v1.mdx:217:3     - Unknown word (leimonio)          -- [@leimonio](https://github.com
docs/blog/v1.mdx:218:3     - Unknown word (ticky)             -- [@ticky](https://github.com
docs/blog/v1.mdx:219:3     - Unknown word (jamesknelson)      -- [@jamesknelson](https://github.com
docs/blog/v1.mdx:21:7      - Unknown word (announced)  -- first announced at ZEIT Day.
docs/blog/v1.mdx:220:3     - Unknown word (pshrmn)            -- [@pshrmn](https://github.com
docs/blog/v1.mdx:221:3     - Unknown word (rauchg)            -- [@rauchg](https://github.com
docs/blog/v1.mdx:222:3     - Unknown word (joelhooks)         -- [@joelhooks](https://github.com
docs/blog/v1.mdx:223:3     - Unknown word (jlengstorf)        -- [@jlengstorf](https://github.com
docs/blog/v1.mdx:224:3     - Unknown word (johnlindquist)     -- [@johnlindquist](https://github.com
docs/blog/v1.mdx:225:3     - Unknown word (kyleamathews)      -- [@kyleamathews](https://github.com
docs/blog/v1.mdx:226:3     - Unknown word (kentcdodds)        -- [@kentcdodds](https://github.com
docs/blog/v1.mdx:227:3     - Unknown word (wesbos)            -- [@wesbos](https://github.com
docs/blog/v1.mdx:228:3     - Unknown word (rosew)             -- [@rosew](https://github.com
docs/blog/v1.mdx:229:3     - Unknown word (pedronauck)        -- [@pedronauck](https://github.com
docs/blog/v1.mdx:22:10     - Unknown word (radical)    -- MDX is a radical paradigm shift in how
docs/blog/v1.mdx:22:18     - Unknown word (paradigm)   -- MDX is a radical paradigm shift in how to write
docs/blog/v1.mdx:22:49     - Unknown word (immersive)  -- shift in how to write immersive content using
docs/blog/v1.mdx:22:67     - Unknown word (using)      -- write immersive content using
docs/blog/v1.mdx:230:3     - Unknown word (tayiorbeii)        -- [@tayiorbeii](https://github.com
docs/blog/v1.mdx:231:3     - Unknown word (nickbender)        -- [@nickbender](https://github.com
docs/blog/v1.mdx:232:3     - Unknown word (ntaylor)           -- [@ntaylor89](https://github.com
docs/blog/v1.mdx:233:3     - Unknown word (mxstbr)            -- [@mxstbr](https://github.com
docs/blog/v1.mdx:234:3     - Unknown word (manovotny)         -- [@manovotny](https://github.com
docs/blog/v1.mdx:236:3     - Unknown word (filoxo)            -- [@filoxo](https://github.com
docs/blog/v1.mdx:237:3     - Unknown word (millette)          -- [@millette](https://github.com
docs/blog/v1.mdx:238:3     - Unknown word (hugmanrique)       -- [@hugmanrique](https://github.com
docs/blog/v1.mdx:239:3     - Unknown word (johnsherrard)      -- [@johnsherrard](https://github.com
docs/blog/v1.mdx:241:24    - Unknown word (forgotten)         -- and anyone we may have forgotten.
docs/blog/v1.mdx:241:5     - Unknown word (anyone)            -- and anyone we may have forgotten
docs/blog/v1.mdx:24:16     - Unknown word (authorable) -- It’s an open, [authorable format](https://johno
docs/blog/v1.mdx:25:1      - Unknown word (makes)      -- makes it *fun* to write again
docs/blog/v1.mdx:27:5      - Unknown word (more)       -- {/* more */}
docs/blog/v1.mdx:29:28     - Unknown word (been)       -- announcing MDX we’ve been working on numerous
docs/blog/v1.mdx:29:44     - Unknown word (numerous)   -- we’ve been working on numerous bug fixes, new features
docs/blog/v1.mdx:29:7      - Unknown word (announcing) -- Since announcing MDX we’ve been working
docs/blog/v1.mdx:30:1      - Unknown word (better)     -- better parsing, and integration
docs/blog/v1.mdx:31:9      - Unknown word (think)      -- Now, we think it’s ready.
docs/blog/v1.mdx:36:10     - Unknown word (rough)      -- Here’s a rough breakdown on what we
docs/blog/v1.mdx:36:16     - Unknown word (breakdown)  -- Here’s a rough breakdown on what we’ve been working
docs/blog/v1.mdx:36:40     - Unknown word (been)       -- breakdown on what we’ve been working on:
docs/blog/v1.mdx:40:25     - Unknown word (significantly) -- document parsing is significantly improved.
docs/blog/v1.mdx:40:39     - Unknown word (improved)      -- parsing is significantly improved.
docs/blog/v1.mdx:41:23     - Unknown word (nitty)         -- We won’t get into the nitty gritty here, but we
docs/blog/v1.mdx:41:29     - Unknown word (gritty)        -- t get into the nitty gritty here, but we’ve seen
docs/blog/v1.mdx:42:51     - Unknown word (came)          -- integrated the edge cases we came across into our test
docs/blog/v1.mdx:43:49     - Unknown word (much)          -- imports, and exports much more intuitively.
docs/blog/v1.mdx:43:54     - Unknown word (more)          -- imports, and exports much more intuitively.
docs/blog/v1.mdx:43:59     - Unknown word (intuitively)   -- and exports much more intuitively.
docs/blog/v1.mdx:44:1      - Unknown word (Please)        -- Please open an issue if you
docs/blog/v1.mdx:44:44     - Unknown word (haven’t)       -- if you find a case we haven’t covered!😸
docs/blog/v1.mdx:49:25     - Unknown word (functionality) -- provides the parsing functionality for MDX as a
docs/blog/v1.mdx:49:4      - Unknown word (provides)      -- It provides the parsing functionality
docs/blog/v1.mdx:51:6      - Unknown word (sounds)        -- That sounds a bit meta.
docs/blog/v1.mdx:52:9      - Unknown word (means)         -- What it means is that before we had
docs/blog/v1.mdx:53:2      - Unknown word (unusable)      -- (unusable from the outside), and
docs/blog/v1.mdx:53:43     - Unknown word (externalized)  -- outside), and now it’s externalized (usable from the
docs/blog/v1.mdx:55:23     - Unknown word (want)          -- This is useful if you want to inspect or transform
docs/blog/v1.mdx:55:9      - Unknown word (useful)        -- This is useful if you want to inspect
docs/blog/v1.mdx:56:17     - Unknown word (allows)        -- For example, it allows tools like prettier
docs/blog/v1.mdx:5:15      - Unknown word (johno)      -- {github: 'johno', name: 'John Otander
docs/blog/v1.mdx:5:30      - Unknown word (John)       -- github: 'johno', name: 'John Otander', twitter:
docs/blog/v1.mdx:5:35      - Unknown word (Otander)    -- johno', name: 'John Otander', twitter: '4lpine'
docs/blog/v1.mdx:5:56      - Unknown word (lpine)      -- Otander', twitter: '4lpine'}
docs/blog/v1.mdx:63:15     - Unknown word (moved)         -- With v1 we’ve moved away from using `MDXTag
docs/blog/v1.mdx:63:21     - Unknown word (away)          -- With v1 we’ve moved away from using `MDXTag`
docs/blog/v1.mdx:63:31     - Unknown word (using)         -- we’ve moved away from using `MDXTag` and are using
docs/blog/v1.mdx:63:54     - Unknown word (using)         -- using `MDXTag` and are using a custom pragma which
docs/blog/v1.mdx:64:1      - Unknown word (wraps)         -- wraps `React.createElement
docs/blog/v1.mdx:65:27     - Unknown word (approach)      -- decided to update this approach so the JSX output is
docs/blog/v1.mdx:65:4      - Unknown word (decided)       -- We decided to update this approach
docs/blog/v1.mdx:65:57     - Unknown word (more)          -- so the JSX output is more legible,
docs/blog/v1.mdx:65:62     - Unknown word (legible)       -- the JSX output is more legible,
docs/blog/v1.mdx:66:1      - Unknown word (lighterweight) -- lighterweight, and more customizable
docs/blog/v1.mdx:66:20     - Unknown word (more)          -- lighterweight, and more customizable.
docs/blog/v1.mdx:67:8      - Unknown word (means)         -- **This means MDX can be used with
docs/blog/v1.mdx:70:21     - Unknown word (christopherbiscardi) -- Special thanks to [@christopherbiscardi](https://github.com
docs/blog/v1.mdx:70:9      - Unknown word (thanks)        -- Special thanks to [@christopherbiscardi
docs/blog/v1.mdx:77:3      - Unknown word (Good)                -- **Good libraries need great
docs/blog/v1.mdx:77:46     - Unknown word (been)                -- great docs**, so we’ve been working on adding content
docs/blog/v1.mdx:77:62     - Unknown word (adding)              -- we’ve been working on adding content and
docs/blog/v1.mdx:78:1      - Unknown word (improving)           -- improving the overall documentation
docs/blog/v1.mdx:78:15     - Unknown word (overall)             -- improving the overall documentation website
docs/blog/v1.mdx:78:45     - Unknown word (experience)          -- documentation website experience.
docs/blog/v1.mdx:80:12     - Unknown word (thanks)              -- * [Search (thanks Algolia)](https://mobile
docs/blog/v1.mdx:81:4      - Unknown word (Guides)              -- * [Guides](/guides/)
docs/blog/v1.mdx:83:11     - Unknown word (Gatsby)              -- * [Custom Gatsby theme](https://gatsbyjs
docs/blog/v1.mdx:83:18     - Unknown word (theme)               -- * [Custom Gatsby theme](https://gatsbyjs.org
docs/blog/v1.mdx:84:3      - Unknown word (Reorganization)      -- * Reorganization of docs for intuitiveness
docs/blog/v1.mdx:84:30     - Unknown word (intuitiveness)       -- Reorganization of docs for intuitiveness
docs/blog/v1.mdx:85:13     - Unknown word (rewrites)            -- * Full page rewrites to improve clarity
docs/blog/v1.mdx:85:25     - Unknown word (improve)             -- Full page rewrites to improve clarity
docs/blog/v1.mdx:85:33     - Unknown word (clarity)             -- rewrites to improve clarity
docs/blog/v1.mdx:87:21     - Unknown word (jxnblk)              -- Special thanks to [@jxnblk](https://github.com
docs/blog/v1.mdx:87:9      - Unknown word (thanks)              -- Special thanks to [@jxnblk](https:
docs/blog/v1.mdx:88:3      - Unknown word (wooorm)              -- [@wooorm](https://github.com
docs/blog/v1.mdx:88:42     - Unknown word (their)               -- github.com/wooorm) for their help improving the docs
docs/blog/v1.mdx:88:53     - Unknown word (improving)           -- wooorm) for their help improving the docs and
docs/blog/v1.mdx:89:20     - Unknown word (tooling)             -- updating the build tooling.
docs/blog/v1.mdx:91:4      - Unknown word (Breaking)            -- ## Breaking changes
docs/blog/v1.mdx:93:23     - Unknown word (improvements)        -- In order to make some improvements we were forced to introduce
docs/blog/v1.mdx:93:39     - Unknown word (were)                -- some improvements we were forced to introduce
docs/blog/v1.mdx:93:54     - Unknown word (introduce)           -- mprovements we were forced to introduce a few breaking
docs/blog/v1.mdx:93:70     - Unknown word (breaking)            -- forced to introduce a few breaking
docs/blog/v1.mdx:95:3      - Unknown word (These)               -- **These were the result of real
docs/blog/v1.mdx:95:39     - Unknown word (production)          -- result of real-world production testing and feedback
docs/blog/v1.mdx:95:9      - Unknown word (were)                -- **These were the result of real-world
docs/blog/v1.mdx:96:19     - Unknown word (evolved)             -- The community has evolved and we’ve come up with
docs/blog/v1.mdx:96:37     - Unknown word (come)                -- has evolved and we’ve come up with newer, better
docs/blog/v1.mdx:96:50     - Unknown word (newer)               -- and we’ve come up with newer, better ideas over the
docs/blog/v1.mdx:96:57     - Unknown word (better)              -- come up with newer, better ideas over the
docs/blog/v1.mdx:96:64     - Unknown word (ideas)               -- up with newer, better ideas over the
docs/blog/v1.mdx:98:14     - Unknown word (sure)                -- We have made sure the impact is small
docs/blog/v1.mdx:98:73     - Unknown word (guide)               -- written a full migration guide.
docs/blog/v1.mdx:98:9      - Unknown word (made)                -- We have made sure the impact is small
docs/blog/v2.mdx:104:24    - Unknown word (equivalent)    -- In version 2, it’s equivalent to the following JSX
docs/blog/v2.mdx:122:17    - Unknown word (more)          -- We believe it’s more intuitive that markdown
docs/blog/v2.mdx:122:4     - Unknown word (believe)       -- We believe it’s more intuitive
docs/blog/v2.mdx:122:47    - Unknown word (inlines)       -- intuitive that markdown “inlines” such as emphasis can
docs/blog/v2.mdx:123:65    - Unknown word (headings)      -- ), “blocks” such as headings can
docs/blog/v2.mdx:124:20    - Unknown word (their)         -- form if they’re on their own line (second `<div
docs/blog/v2.mdx:124:9     - Unknown word (they’re)       -- form if they’re on their own line (second
docs/blog/v2.mdx:125:1     - Unknown word (rather)        -- rather than forming code (third
docs/blog/v2.mdx:125:13    - Unknown word (forming)       -- rather than forming code (third `<div>`
docs/blog/v2.mdx:127:4     - Unknown word (also)          -- We also added support for JavaScript
docs/blog/v2.mdx:12:16     - Unknown word (kept)       -- The below is kept as is for historical
docs/blog/v2.mdx:12:31     - Unknown word (historical) -- below is kept as is for historical purposes.
docs/blog/v2.mdx:12:42     - Unknown word (purposes)   -- as is for historical purposes.
docs/blog/v2.mdx:132:18    - Unknown word (authors)       -- export const authors = [
docs/blog/v2.mdx:133:15    - Unknown word (Jane)          -- {name: 'Jane', email: 'hi@jane.com
docs/blog/v2.mdx:134:15    - Unknown word (John)          -- {name: 'John', twitter: '@john20
docs/blog/v2.mdx:134:33    - Unknown word (john)          -- 'John', twitter: '@john2002'}
docs/blog/v2.mdx:138:51    - Unknown word (authors)       -- ListFormat('en').format(authors.map(d => d.name))}.
docs/blog/v2.mdx:145:18    - Unknown word (equivalent)    -- ```tsx path="equivalent.jsx"
docs/blog/v2.mdx:147:22    - Unknown word (Jane)          -- <p>Written by: Jane and John.</p>
docs/blog/v2.mdx:147:31    - Unknown word (John)          -- Written by: Jane and John.</p>
docs/blog/v2.mdx:148:24    - Unknown word (February)      -- <p>Published on: February 1, 2022.</p>
docs/blog/v2.mdx:154:15    - Unknown word (moves)         -- As the format moves a little further from
docs/blog/v2.mdx:154:30    - Unknown word (further)       -- format moves a little further from markdown towards
docs/blog/v2.mdx:154:52    - Unknown word (towards)       -- further from markdown towards JSX, we’ve added
docs/blog/v2.mdx:156:11    - Unknown word (using)         -- If you’re using our bundler integration
docs/blog/v2.mdx:156:50    - Unknown word (loader)        -- integration `@mdx-js/loader` (or `@mdx-js/rollup
docs/blog/v2.mdx:157:37    - Unknown word (loader)        -- esbuild`, or `@mdx-js/node-loader`, see next section)
docs/blog/v2.mdx:159:49    - Unknown word (their)         -- as markdown, based on their extensions.
docs/blog/v2.mdx:161:19    - Unknown word (described)     -- The MDX format is described in [§ What is MDX?]
docs/blog/v2.mdx:163:31    - Unknown word (integrations)  -- esbuild, and other integrations
docs/blog/v2.mdx:165:48    - Unknown word (were)          -- webpack, and React were ubiquitous in the JavaScript
docs/blog/v2.mdx:165:53    - Unknown word (ubiquitous)    -- webpack, and React were ubiquitous in the JavaScript
docs/blog/v2.mdx:165:9     - Unknown word (started)       -- When we started out, Babel, webpack
docs/blog/v2.mdx:166:1     - Unknown word (ecosystem)     -- ecosystem and we built MDX on
docs/blog/v2.mdx:166:31    - Unknown word (them)          -- and we built MDX on them.
docs/blog/v2.mdx:167:19    - Unknown word (worked)        -- For version 2, we worked hard to make them optional
docs/blog/v2.mdx:167:39    - Unknown word (them)          -- worked hard to make them optional.
docs/blog/v2.mdx:168:1     - Unknown word (They’re)       -- They’re no longer required and
docs/blog/v2.mdx:168:12    - Unknown word (longer)        -- They’re no longer required and MDX can
docs/blog/v2.mdx:168:45    - Unknown word (easily)        -- required and MDX can more easily be used with other tools
docs/blog/v2.mdx:16:28     - Unknown word (migrate)    -- Note**: Info on how to migrate is available in our
docs/blog/v2.mdx:170:38    - Unknown word (integrations)  -- side, we’ve added new integrations: `@mdx-js/esbuild` for
docs/blog/v2.mdx:171:13    - Unknown word (extremely)     -- esbuild (an extremely fast bundler) and `
docs/blog/v2.mdx:172:8     - Unknown word (also)          -- that’s also used in Vite and WMR
docs/blog/v2.mdx:173:31    - Unknown word (directly)      -- even import MDX files directly in Node.js with our
docs/blog/v2.mdx:174:15    - Unknown word (loader)        -- `@mdx-js/node-loader`.
docs/blog/v2.mdx:176:45    - Unknown word (away)          -- can now compile JSX away to normal JavaScript
docs/blog/v2.mdx:177:4     - Unknown word (longer)        -- no longer need framework-specific
docs/blog/v2.mdx:177:48    - Unknown word (them)          -- specific code to glue them together with MDX.
docs/blog/v2.mdx:177:53    - Unknown word (together)      -- specific code to glue them together with MDX.
docs/blog/v2.mdx:178:22    - Unknown word (whether)       -- Now any JSX runtime, whether [classic or automatic
docs/blog/v2.mdx:179:6     - Unknown word (means)         -- This means MDX can be used with
docs/blog/v2.mdx:179:62    - Unknown word (Theme)         -- Preact, Vue, Emotion, Theme UI, Ink, you
docs/blog/v2.mdx:17:24     - Unknown word (guide)      -- Version 2 migration guide][migrating].
docs/blog/v2.mdx:180:15    - Unknown word (anything)      -- name it, plus anything that’s yet to be invented
docs/blog/v2.mdx:180:41    - Unknown word (invented)      -- anything that’s yet to be invented!
docs/blog/v2.mdx:182:16    - Unknown word (started)       -- See [§ Getting started][getting-started] for
docs/blog/v2.mdx:182:64    - Unknown word (also)          -- for a quick start but also in-depth
docs/blog/v2.mdx:182:8     - Unknown word (Getting)       -- See [§ Getting started][getting-started
docs/blog/v2.mdx:183:16    - Unknown word (integrate)     -- info on how to integrate MDX with many different
docs/blog/v2.mdx:183:40    - Unknown word (different)     -- integrate MDX with many different tools.
docs/blog/v2.mdx:185:18    - Unknown word (improvements)  -- ## Architectural improvements
docs/blog/v2.mdx:185:4     - Unknown word (Architectural) -- ## Architectural improvements
docs/blog/v2.mdx:187:38    - Unknown word (better)        -- syntax of the MDX format better and to allow new integrations
docs/blog/v2.mdx:187:62    - Unknown word (integrations)  -- better and to allow new integrations and
docs/blog/v2.mdx:188:31    - Unknown word (rewritten)     -- JSX runtimes, we’ve rewritten almost everything.
docs/blog/v2.mdx:188:41    - Unknown word (almost)        -- runtimes, we’ve rewritten almost everything.
docs/blog/v2.mdx:188:48    - Unknown word (everything)    -- ve rewritten almost everything.
docs/blog/v2.mdx:189:14    - Unknown word (effort)        -- Part of that effort was [micromark][], which
docs/blog/v2.mdx:189:57    - Unknown word (story)         -- ], which is another story, but it means
docs/blog/v2.mdx:189:71    - Unknown word (means)         -- another story, but it means
docs/blog/v2.mdx:190:29    - Unknown word (optionally)    -- fully CommonMark (and optionally GFM) compliant, while
docs/blog/v2.mdx:190:45    - Unknown word (compliant)     -- and optionally GFM) compliant, while also understanding
docs/blog/v2.mdx:190:62    - Unknown word (also)          -- GFM) compliant, while also understanding
docs/blog/v2.mdx:190:67    - Unknown word (understanding) -- compliant, while also understanding
docs/blog/v2.mdx:191:6     - Unknown word (about)         -- more about MDX files.
docs/blog/v2.mdx:193:21    - Unknown word (early)         -- Now we can throw an early error when there’s a
docs/blog/v2.mdx:193:38    - Unknown word (there’s)       -- an early error when there’s a typo and point to
docs/blog/v2.mdx:193:48    - Unknown word (typo)          -- error when there’s a typo and point to exactly
docs/blog/v2.mdx:193:66    - Unknown word (exactly)       -- a typo and point to exactly where
docs/blog/v2.mdx:194:14    - Unknown word (instead)       -- it happened, instead of a later bundler like
docs/blog/v2.mdx:194:27    - Unknown word (later)         -- happened, instead of a later bundler like webpack
docs/blog/v2.mdx:194:4     - Unknown word (happened)      -- it happened, instead of a later
docs/blog/v2.mdx:194:54    - Unknown word (complaining)   -- bundler like webpack complaining about an error
docs/blog/v2.mdx:194:66    - Unknown word (about)         -- webpack complaining about an error
docs/blog/v2.mdx:195:21    - Unknown word (unrecognizable) -- in an intermediate, unrecognizable, and broken string of
docs/blog/v2.mdx:195:41    - Unknown word (broken)         -- unrecognizable, and broken string of JavaScript
docs/blog/v2.mdx:196:4     - Unknown word (also)           -- It also means that we have a
docs/blog/v2.mdx:196:44    - Unknown word (describes)      -- have a new AST which describes the MDX syntax in more
docs/blog/v2.mdx:196:9     - Unknown word (means)          -- It also means that we have a new AST
docs/blog/v2.mdx:197:18    - Unknown word (expose)         -- detail — we even expose the embedded JavaScript
docs/blog/v2.mdx:198:19    - Unknown word (allows)         -- This detailed AST allows plugins to enhance MDX
docs/blog/v2.mdx:198:37    - Unknown word (enhance)        -- AST allows plugins to enhance MDX in powerful new
docs/blog/v2.mdx:198:52    - Unknown word (powerful)       -- plugins to enhance MDX in powerful new ways.
docs/blog/v2.mdx:198:65    - Unknown word (ways)           -- MDX in powerful new ways.
docs/blog/v2.mdx:199:16    - Unknown word (solve)          -- It also helped solve edge cases where MDX
docs/blog/v2.mdx:199:43    - Unknown word (would)          -- edge cases where MDX would previously crash.
docs/blog/v2.mdx:199:49    - Unknown word (previously)     -- cases where MDX would previously crash.
docs/blog/v2.mdx:199:60    - Unknown word (crash)          -- MDX would previously crash.
docs/blog/v2.mdx:199:9     - Unknown word (helped)         -- It also helped solve edge cases where
docs/blog/v2.mdx:202:10    - Unknown word (architecture)   -- This new architecture results in **25% faster
docs/blog/v2.mdx:203:11    - Unknown word (twice)          -- that runs twice as fast (**100% faster
docs/blog/v2.mdx:206:8     - Unknown word (Architecture)   -- See [¶ Architecture in `@mdx-js/mdx`][architectur
docs/blog/v2.mdx:208:38    - Unknown word (several)        -- MDX][extending] for several plugins that use the
docs/blog/v2.mdx:208:8     - Unknown word (Extending)      -- See [§ Extending MDX][extending] for
docs/blog/v2.mdx:209:1     - Unknown word (enhance)        -- enhance MDX, how to use them
docs/blog/v2.mdx:209:25    - Unknown word (them)           -- enhance MDX, how to use them and other plugins, and
docs/blog/v2.mdx:215:25    - Unknown word (exposed)        -- That means our APIs are exposed as TypeScript types
docs/blog/v2.mdx:215:6     - Unknown word (means)          -- That means our APIs are exposed
docs/blog/v2.mdx:216:15    - Unknown word (internally)     -- are type safe internally.
docs/blog/v2.mdx:220:27    - Unknown word (importing)      -- can use it, if you’re importing MDX files, to type those
docs/blog/v2.mdx:220:56    - Unknown word (those)          -- importing MDX files, to type those imported
docs/blog/v2.mdx:223:24    - Unknown word (Getting)        -- See [¶ TypeScript in § Getting started][ts] for more
docs/blog/v2.mdx:223:32    - Unknown word (started)        -- TypeScript in § Getting started][ts] for more on how
docs/blog/v2.mdx:228:17    - Unknown word (liked)          -- MDX is used and liked a lot.
docs/blog/v2.mdx:229:25    - Unknown word (amassed)        -- Before version 1 we had amassed a total of **2.5m downloads
docs/blog/v2.mdx:229:51    - Unknown word (downloads)      -- amassed a total of **2.5m downloads**.
docs/blog/v2.mdx:232:29    - Unknown word (stars)          -- GitHub repo has **11.6k stars**.
docs/blog/v2.mdx:234:19    - Unknown word (often)          -- Many people help, often with docs.
docs/blog/v2.mdx:235:17    - Unknown word (committed)      -- 85 contributors committed to our repo since version
docs/blog/v2.mdx:235:4     - Unknown word (contributors)   -- 85 contributors committed to our repo
docs/blog/v2.mdx:236:20    - Unknown word (these)          -- We’re grateful for these contributions and all
docs/blog/v2.mdx:236:26    - Unknown word (contributions)  -- re grateful for these contributions and all those individual
docs/blog/v2.mdx:236:48    - Unknown word (those)          -- contributions and all those individual insights
docs/blog/v2.mdx:236:54    - Unknown word (individual)     -- contributions and all those individual insights,
docs/blog/v2.mdx:236:7     - Unknown word (grateful)       -- We’re grateful for these contributions
docs/blog/v2.mdx:237:42    - Unknown word (inconsistencies) -- it did result in some inconsistencies and duplicated content
docs/blog/v2.mdx:237:62    - Unknown word (duplicated)      -- inconsistencies and duplicated content.
docs/blog/v2.mdx:239:19    - Unknown word (rewrote)         -- For version 2, we rewrote our docs from beginning
docs/blog/v2.mdx:239:61    - Unknown word (tell)            -- beginning to end to tell a consistent
docs/blog/v2.mdx:23:1      - Unknown word (improvements) -- improvements.
docs/blog/v2.mdx:240:1     - Unknown word (story)           -- story for new users, folks
docs/blog/v2.mdx:240:22    - Unknown word (folks)           -- story for new users, folks that do complex AST
docs/blog/v2.mdx:240:36    - Unknown word (complex)         -- users, folks that do complex AST and compiler stuff
docs/blog/v2.mdx:241:1     - Unknown word (anyone)          -- anyone in between.
docs/blog/v2.mdx:243:9     - Unknown word (made)            -- We also made a new website.
docs/blog/v2.mdx:244:22    - Unknown word (course)          -- It’s built on MDX of course, [unified][] itself
docs/blog/v2.mdx:244:42    - Unknown word (itself)          -- course, [unified][] itself, and [React Server Components
docs/blog/v2.mdx:246:10    - Unknown word (dogfood)         -- While we dogfood the former two as they
docs/blog/v2.mdx:246:22    - Unknown word (former)          -- While we dogfood the former two as they’re projects
docs/blog/v2.mdx:246:36    - Unknown word (they’re)         -- dogfood the former two as they’re projects we maintain
docs/blog/v2.mdx:247:1     - Unknown word (latter)          -- latter is extremely experimental
docs/blog/v2.mdx:247:11    - Unknown word (extremely)       -- latter is extremely experimental, we think
docs/blog/v2.mdx:247:38    - Unknown word (think)           -- extremely experimental, we think compiling things ahead
docs/blog/v2.mdx:247:44    - Unknown word (compiling)       -- experimental, we think compiling things ahead of time
docs/blog/v2.mdx:248:1     - Unknown word (betting)         -- betting on hybrid models, compared
docs/blog/v2.mdx:248:39    - Unknown word (completely)      -- models, compared to completely server-side sites or
docs/blog/v2.mdx:248:62    - Unknown word (sites)           -- completely server-side sites or completely
docs/blog/v2.mdx:248:71    - Unknown word (completely)      -- server-side sites or completely
docs/blog/v2.mdx:249:32    - Unknown word (choice)          -- side apps, is the smart choice for us and the web’s
docs/blog/v2.mdx:251:17    - Unknown word (heavily)         -- Our new site is heavily optimized and fast,
docs/blog/v2.mdx:251:25    - Unknown word (optimized)       -- new site is heavily optimized and fast, gorgeous
docs/blog/v2.mdx:251:45    - Unknown word (gorgeous)        -- optimized and fast, gorgeous (subjective but hey
docs/blog/v2.mdx:251:55    - Unknown word (subjective)      -- and fast, gorgeous (subjective but hey), has
docs/blog/v2.mdx:252:20    - Unknown word (scores)          -- rich metadata, and scores very well in performance
docs/blog/v2.mdx:253:15    - Unknown word (Lighthouse)      -- tools such as Lighthouse and axe.
docs/blog/v2.mdx:255:8     - Unknown word (Contribute)      -- See [§ Contribute][contribute] for more
docs/blog/v2.mdx:257:4     - Unknown word (Breaking)        -- ## Breaking changes
docs/blog/v2.mdx:259:22    - Unknown word (migrate)         -- When you’re ready to migrate, please see the
docs/blog/v2.mdx:259:31    - Unknown word (please)          -- re ready to migrate, please see the
docs/blog/v2.mdx:260:22    - Unknown word (guide)           -- Version 2 migration guide][migrating].
docs/blog/v2.mdx:262:4     - Unknown word (Thanks)          -- ## Thanks
docs/blog/v2.mdx:264:18    - Unknown word (thanks)          -- We’d like to say thanks to all our contributors
docs/blog/v2.mdx:264:36    - Unknown word (contributors)    -- say thanks to all our contributors and our happy users
docs/blog/v2.mdx:265:9     - Unknown word (thanks)          -- Special thanks to
docs/blog/v2.mdx:266:1     - Unknown word (John)            -- John Otander ([**@johno*
docs/blog/v2.mdx:266:19    - Unknown word (johno)           -- John Otander ([**@johno**](https://github.com
docs/blog/v2.mdx:266:6     - Unknown word (Otander)         -- John Otander ([**@johno**](https
docs/blog/v2.mdx:268:1     - Unknown word (Joun)            -- JounQin ([**@JounQin**](https
docs/blog/v2.mdx:268:14    - Unknown word (Joun)            -- JounQin ([**@JounQin**](https://github
docs/blog/v2.mdx:269:17    - Unknown word (jablko)          -- Jack Bates ([**@jablko**](https://github.com
docs/blog/v2.mdx:269:6     - Unknown word (Bates)           -- Jack Bates ([**@jablko**](https
docs/blog/v2.mdx:26:5      - Unknown word (more)         -- {/* more */}
docs/blog/v2.mdx:270:15    - Unknown word (chenxsan)        -- Sam Chen ([**@chenxsan**](https://github.com
docs/blog/v2.mdx:270:5     - Unknown word (Chen)            -- Sam Chen ([**@chenxsan**](https
docs/blog/v2.mdx:271:18    - Unknown word (samrobbins)      -- Sam Robbins ([**@samrobbins85**](https://github
docs/blog/v2.mdx:271:5     - Unknown word (Robbins)         -- Sam Robbins ([**@samrobbins85**
docs/blog/v2.mdx:272:1     - Unknown word (Remco)           -- Remco Haszing ([**@remcohaszing
docs/blog/v2.mdx:272:20    - Unknown word (remcohaszing)    -- Remco Haszing ([**@remcohaszing**](https://github.com
docs/blog/v2.mdx:272:7     - Unknown word (Haszing)         -- Remco Haszing ([**@remcohaszing**
docs/blog/v2.mdx:273:9     - Unknown word (laurieontech)    -- LB ([**@laurieontech**](https://github.com
docs/blog/v2.mdx:274:1     - Unknown word (Gabriel)         -- Gabriel Kirkley ([**@gdgkirkley
docs/blog/v2.mdx:274:22    - Unknown word (gdgkirkley)      -- Gabriel Kirkley ([**@gdgkirkley**](https://github.com
docs/blog/v2.mdx:274:9     - Unknown word (Kirkley)         -- Gabriel Kirkley ([**@gdgkirkley**](https
docs/blog/v2.mdx:275:1     - Unknown word (Hung)            -- Hung-I Wang ([**@Gowee**
docs/blog/v2.mdx:275:18    - Unknown word (Gowee)           -- Hung-I Wang ([**@Gowee**](https://github.com
docs/blog/v2.mdx:275:8     - Unknown word (Wang)            -- Hung-I Wang ([**@Gowee**](https
docs/blog/v2.mdx:276:1     - Unknown word (Ilham)           -- Ilham Wahabi ([**@iwgx**]
docs/blog/v2.mdx:276:19    - Unknown word (iwgx)            -- Ilham Wahabi ([**@iwgx**](https://github.com
docs/blog/v2.mdx:276:7     - Unknown word (Wahabi)          -- Ilham Wahabi ([**@iwgx**](https:
docs/blog/v2.mdx:277:1     - Unknown word (Kaito)           -- Kaito Sugimoto ([**@HelloRusk
docs/blog/v2.mdx:277:26    - Unknown word (Rusk)            -- Kaito Sugimoto ([**@HelloRusk**](https://github.com
docs/blog/v2.mdx:277:7     - Unknown word (Sugimoto)        -- Kaito Sugimoto ([**@HelloRusk**](https
docs/blog/v2.mdx:278:1     - Unknown word (Karl)            -- Karl Horky ([**@karlhorky
docs/blog/v2.mdx:278:17    - Unknown word (karlhorky)       -- Karl Horky ([**@karlhorky**](https://github.com
docs/blog/v2.mdx:278:6     - Unknown word (Horky)           -- Karl Horky ([**@karlhorky**](https
docs/blog/v2.mdx:279:1     - Unknown word (Katie)           -- Katie Hughes ([**@glitteringkatie
docs/blog/v2.mdx:279:19    - Unknown word (glitteringkatie) -- Katie Hughes ([**@glitteringkatie**](https://github.com
docs/blog/v2.mdx:280:1     - Unknown word (Lachlan)         -- Lachlan Campbell ([**@lachlanjc
docs/blog/v2.mdx:280:23    - Unknown word (lachlanjc)       -- Lachlan Campbell ([**@lachlanjc**](https://github.com
docs/blog/v2.mdx:281:1     - Unknown word (Marcy)           -- Marcy Sutton ([**@marcysutton
docs/blog/v2.mdx:281:19    - Unknown word (marcysutton)     -- Marcy Sutton ([**@marcysutton**](https://github.com
docs/blog/v2.mdx:281:7     - Unknown word (Sutton)          -- Marcy Sutton ([**@marcysutton**]
docs/blog/v2.mdx:282:1     - Unknown word (Marius)          -- Marius Gundersen ([**@mariusGunderse
docs/blog/v2.mdx:282:23    - Unknown word (marius)          -- Marius Gundersen ([**@mariusGundersen**](https:/
docs/blog/v2.mdx:282:29    - Unknown word (Gundersen)       -- Gundersen ([**@mariusGundersen**](https://github.com
docs/blog/v2.mdx:282:8     - Unknown word (Gundersen)       -- Marius Gundersen ([**@mariusGundersen
docs/blog/v2.mdx:283:1     - Unknown word (Marius)          -- Marius-Remus Mate,
docs/blog/v2.mdx:283:8     - Unknown word (Remus)           -- Marius-Remus Mate,
docs/blog/v2.mdx:284:19    - Unknown word (mskelton)        -- Mark Skelton ([**@mskelton**](https://github.com
docs/blog/v2.mdx:284:6     - Unknown word (Skelton)         -- Mark Skelton ([**@mskelton**](https
docs/blog/v2.mdx:285:15    - Unknown word (ndresx)          -- Martin V ([**@ndresx**](https://github.com
docs/blog/v2.mdx:286:1     - Unknown word (Matija)          -- Matija Marohnić ([**@silvenon
docs/blog/v2.mdx:286:22    - Unknown word (silvenon)        -- Matija Marohnić ([**@silvenon**](https://github.com
docs/blog/v2.mdx:286:8     - Unknown word (Marohnić)        -- Matija Marohnić ([**@silvenon**](https
docs/blog/v2.mdx:287:1     - Unknown word (Michael)         -- Michael Oliver ([**@michaeloliverx
docs/blog/v2.mdx:287:21    - Unknown word (michaeloliverx)  -- Michael Oliver ([**@michaeloliverx**](https://github.com
docs/blog/v2.mdx:287:9     - Unknown word (Oliver)          -- Michael Oliver ([**@michaeloliverx
docs/blog/v2.mdx:288:1     - Unknown word (Michaël)         -- Michaël De Boey ([**@MichaelDeBoey
docs/blog/v2.mdx:288:12    - Unknown word (Boey)            -- Michaël De Boey ([**@MichaelDeBoey*
docs/blog/v2.mdx:288:22    - Unknown word (Michael)         -- Michaël De Boey ([**@MichaelDeBoey**](https://github
docs/blog/v2.mdx:288:31    - Unknown word (Boey)            -- De Boey ([**@MichaelDeBoey**](https://github.com
docs/blog/v2.mdx:289:1     - Unknown word (Muescha)         -- Muescha ([**@muescha**](https
docs/blog/v2.mdx:289:14    - Unknown word (muescha)         -- Muescha ([**@muescha**](https://github.com
docs/blog/v2.mdx:290:1     - Unknown word (Norviah)         -- Norviah ([**@Norviah**](https
docs/blog/v2.mdx:290:14    - Unknown word (Norviah)         -- Norviah ([**@Norviah**](https://github.com
docs/blog/v2.mdx:291:1     - Unknown word (Paul)            -- Paul Scanlon ([**@PaulieScanlon
docs/blog/v2.mdx:291:19    - Unknown word (Paulie)          -- Paul Scanlon ([**@PaulieScanlon**](https://github
docs/blog/v2.mdx:291:25    - Unknown word (Scanlon)         -- Paul Scanlon ([**@PaulieScanlon**](https://github.com
docs/blog/v2.mdx:291:6     - Unknown word (Scanlon)         -- Paul Scanlon ([**@PaulieScanlon*
docs/blog/v2.mdx:292:26    - Unknown word (mouland)         -- Peter Mouland ([**@peter-mouland**](https://github.com
docs/blog/v2.mdx:292:7     - Unknown word (Mouland)         -- Peter Mouland ([**@peter-mouland*
docs/blog/v2.mdx:293:1     - Unknown word (Prince)          -- Prince Wilson ([**@maxcell
docs/blog/v2.mdx:293:20    - Unknown word (maxcell)         -- Prince Wilson ([**@maxcell**](https://github.com
docs/blog/v2.mdx:293:8     - Unknown word (Wilson)          -- Prince Wilson ([**@maxcell**](https
docs/blog/v2.mdx:294:1     - Unknown word (Rafael)          -- Rafael Almeida ([**@rafaelalmeidatk
docs/blog/v2.mdx:294:21    - Unknown word (rafaelalmeidatk) -- Rafael Almeida ([**@rafaelalmeidatk**](https://github.com
docs/blog/v2.mdx:294:8     - Unknown word (Almeida)         -- Rafael Almeida ([**@rafaelalmeidatk
docs/blog/v2.mdx:295:1     - Unknown word (Rodrez)          -- Rodrez ([**@rodrez**](https
docs/blog/v2.mdx:295:13    - Unknown word (rodrez)          -- Rodrez ([**@rodrez**](https://github.com
docs/blog/v2.mdx:296:1     - Unknown word (Rongjian)        -- Rongjian Zhang ([**@pd4d10**
docs/blog/v2.mdx:296:10    - Unknown word (Zhang)           -- Rongjian Zhang ([**@pd4d10**](https
docs/blog/v2.mdx:297:1     - Unknown word (Taeheon)         -- Taeheon Kim ([**@lonyele**]
docs/blog/v2.mdx:297:18    - Unknown word (lonyele)         -- Taeheon Kim ([**@lonyele**](https://github.com
docs/blog/v2.mdx:298:12    - Unknown word (Shemilt)         -- Tom Parker-Shemilt ([**@palfrey**](https
docs/blog/v2.mdx:298:25    - Unknown word (palfrey)         -- Parker-Shemilt ([**@palfrey**](https://github.com
docs/blog/v2.mdx:298:5     - Unknown word (Parker)          -- Tom Parker-Shemilt ([**@palfrey
docs/blog/v2.mdx:299:19    - Unknown word (imballinst)      -- Try Ajitiono ([**@imballinst**](https://github.com
docs/blog/v2.mdx:299:5     - Unknown word (Ajitiono)        -- Try Ajitiono ([**@imballinst**](https
docs/blog/v2.mdx:29:10     - Unknown word (Improved)     -- * 📝 **Improved syntax** makes it easier
docs/blog/v2.mdx:29:28     - Unknown word (makes)        -- **Improved syntax** makes it easier to use markdown
docs/blog/v2.mdx:29:37     - Unknown word (easier)       -- Improved syntax** makes it easier to use markdown in JSX
docs/blog/v2.mdx:300:1     - Unknown word (Yamagishi)       -- Yamagishi Kazutoshi ([**@ykzts
docs/blog/v2.mdx:300:11    - Unknown word (Kazutoshi)       -- Yamagishi Kazutoshi ([**@ykzts**](https
docs/blog/v2.mdx:300:26    - Unknown word (ykzts)           -- Yamagishi Kazutoshi ([**@ykzts**](https://github.com
docs/blog/v2.mdx:301:1     - Unknown word (Yoav)            -- Yoav Kadosh ([**@ykadosh
docs/blog/v2.mdx:301:18    - Unknown word (ykadosh)         -- Yoav Kadosh ([**@ykadosh**](https://github.com
docs/blog/v2.mdx:301:6     - Unknown word (Kadosh)          -- Yoav Kadosh ([**@ykadosh**](https
docs/blog/v2.mdx:302:1     - Unknown word (Yordis)          -- Yordis Prieto ([**@Yordis*
docs/blog/v2.mdx:302:20    - Unknown word (Yordis)          -- Yordis Prieto ([**@Yordis**](https://github.com
docs/blog/v2.mdx:302:8     - Unknown word (Prieto)          -- Yordis Prieto ([**@Yordis**](https
docs/blog/v2.mdx:303:1     - Unknown word (Adrian)          -- Adrian Foong ([**@adrfoong
docs/blog/v2.mdx:303:19    - Unknown word (adrfoong)        -- Adrian Foong ([**@adrfoong**](https://github.com
docs/blog/v2.mdx:303:8     - Unknown word (Foong)           -- Adrian Foong ([**@adrfoong**](https
docs/blog/v2.mdx:304:18    - Unknown word (gaearon)         -- Dan Abramov ([**@gaearon**](https://github.com
docs/blog/v2.mdx:304:5     - Unknown word (Abramov)         -- Dan Abramov ([**@gaearon**](https
docs/blog/v2.mdx:305:5     - Unknown word (ihupoo)          -- [**@ihupoo**](https://github.com
docs/blog/v2.mdx:306:5     - Unknown word (nikhog)          -- [**@nikhog**](https://github.com
docs/blog/v2.mdx:307:5     - Unknown word (redallen)        -- [**@redallen**](https://github.com
docs/blog/v2.mdx:308:1     - Unknown word (Akshay)          -- Akshay Kadam ([**@deadcoder
docs/blog/v2.mdx:308:19    - Unknown word (deadcoder)       -- Akshay Kadam ([**@deadcoder0904**](https://github
docs/blog/v2.mdx:308:8     - Unknown word (Kadam)           -- Akshay Kadam ([**@deadcoder0904*
docs/blog/v2.mdx:309:22    - Unknown word (mvasilkov)       -- котик пур-пур ([**@mvasilkov**](https://github.com
docs/blog/v2.mdx:309:3     - Unknown word (котик)           -- я котик пур-пур ([**@mvasilkov
docs/blog/v2.mdx:310:1     - Unknown word (Anders)          -- Anders D. Johnson ([**@AndersDJohnso
docs/blog/v2.mdx:310:24    - Unknown word (Anders)          -- Anders D. Johnson ([**@AndersDJohnson**](https://github
docs/blog/v2.mdx:311:1     - Unknown word (Andrew)          -- Andrew Aylett ([**@andrewaylett
docs/blog/v2.mdx:311:20    - Unknown word (andrewaylett)    -- Andrew Aylett ([**@andrewaylett**](https://github.com
docs/blog/v2.mdx:311:8     - Unknown word (Aylett)          -- Andrew Aylett ([**@andrewaylett**
docs/blog/v2.mdx:312:1     - Unknown word (Ankeet)          -- Ankeet Maini ([**@ankeetmaini
docs/blog/v2.mdx:312:19    - Unknown word (ankeetmaini)     -- Ankeet Maini ([**@ankeetmaini**](https://github.com
docs/blog/v2.mdx:312:8     - Unknown word (Maini)           -- Ankeet Maini ([**@ankeetmaini**]
docs/blog/v2.mdx:313:1     - Unknown word (Biswas)          -- Biswas Nandamuri ([**@Biswas
docs/blog/v2.mdx:313:23    - Unknown word (Biswas)          -- Biswas Nandamuri ([**@Biswas-N**](https://github
docs/blog/v2.mdx:313:8     - Unknown word (Nandamuri)       -- Biswas Nandamuri ([**@Biswas-N**](https
docs/blog/v2.mdx:314:1     - Unknown word (Bret)            -- Bret ([**@bcomnes**](https
docs/blog/v2.mdx:314:11    - Unknown word (bcomnes)         -- Bret ([**@bcomnes**](https://github.com
docs/blog/v2.mdx:315:1     - Unknown word (Chris)           -- Chris Chinchilla ([**@ChrisChinchil
docs/blog/v2.mdx:315:23    - Unknown word (Chris)           -- Chris Chinchilla ([**@ChrisChinchilla**](https:
docs/blog/v2.mdx:315:28    - Unknown word (Chinchilla)      -- Chinchilla ([**@ChrisChinchilla**](https://github.com
docs/blog/v2.mdx:315:7     - Unknown word (Chinchilla)      -- Chris Chinchilla ([**@ChrisChinchilla
docs/blog/v2.mdx:316:1     - Unknown word (Christopher)     -- Christopher Biscardi ([**@ChristopherBisc
docs/blog/v2.mdx:316:13    - Unknown word (Biscardi)        -- Christopher Biscardi ([**@ChristopherBiscardi
docs/blog/v2.mdx:316:27    - Unknown word (Christopher)     -- Christopher Biscardi ([**@ChristopherBiscardi**](https://github
docs/blog/v2.mdx:316:38    - Unknown word (Biscardi)        -- Biscardi ([**@ChristopherBiscardi**](https://github.com
docs/blog/v2.mdx:317:22    - Unknown word (overton)         -- Dan Overton ([**@dan-overton**](https://github.com
docs/blog/v2.mdx:317:5     - Unknown word (Overton)         -- Dan Overton ([**@dan-overton**]
docs/blog/v2.mdx:318:1     - Unknown word (Domitrius)       -- Domitrius ([**@domitriusclark
docs/blog/v2.mdx:318:16    - Unknown word (domitriusclark)  -- Domitrius ([**@domitriusclark**](https://github.com
docs/blog/v2.mdx:319:1     - Unknown word (Dovi)            -- Dovi Winberger ([**@dowi
docs/blog/v2.mdx:319:21    - Unknown word (dowi)            -- Dovi Winberger ([**@dowi**](https://github.com
docs/blog/v2.mdx:319:6     - Unknown word (Winberger)       -- Dovi Winberger ([**@dowi**](https:
docs/blog/v2.mdx:31:53     - Unknown word (integrations) -- Rollup**, and **Node.js** integrations
docs/blog/v2.mdx:320:1     - Unknown word (Emmie)           -- Emmie Päivärinta ([**@emmiep
docs/blog/v2.mdx:320:23    - Unknown word (emmiep)          -- Emmie Päivärinta ([**@emmiep**](https://github.com
docs/blog/v2.mdx:320:7     - Unknown word (Päivärinta)      -- Emmie Päivärinta ([**@emmiep**](https
docs/blog/v2.mdx:321:1     - Unknown word (Eugene)          -- Eugene Ghanizadeh ([**@loreanvictor
docs/blog/v2.mdx:321:24    - Unknown word (loreanvictor)    -- Eugene Ghanizadeh ([**@loreanvictor**](https://github.com
docs/blog/v2.mdx:321:8     - Unknown word (Ghanizadeh)      -- Eugene Ghanizadeh ([**@loreanvictor**
docs/blog/v2.mdx:322:24    - Unknown word (forgotten)      -- and anyone we may have forgotten.
docs/blog/v2.mdx:322:5     - Unknown word (anyone)          -- and anyone we may have forgotten
docs/blog/v2.mdx:32:71     - Unknown word (they’re)      -- Emotion, you name it, they’re
docs/blog/v2.mdx:34:10     - Unknown word (Improved)     -- * 🌳 **Improved AST** exposes more info
docs/blog/v2.mdx:34:25     - Unknown word (exposes)      -- 🌳 **Improved AST** exposes more info in greater
docs/blog/v2.mdx:34:33     - Unknown word (more)         -- Improved AST** exposes more info in greater detail
docs/blog/v2.mdx:35:11     - Unknown word (Compiles)     -- * 🏃‍♀️ Compiles at least **25% faster
docs/blog/v2.mdx:35:23     - Unknown word (least)        -- * 🏃‍♀️ Compiles at least **25% faster**
docs/blog/v2.mdx:36:28     - Unknown word (twice)        -- Generated code runs twice as fast (**100% faster
docs/blog/v2.mdx:37:40     - Unknown word (more)         -- of `@mdx-js/mdx` is more than three times as
docs/blog/v2.mdx:39:13     - Unknown word (much)         -- * 🧵 …and much, so much more
docs/blog/v2.mdx:39:22     - Unknown word (much)         -- * 🧵 …and much, so much more
docs/blog/v2.mdx:39:27     - Unknown word (more)         -- …and much, so much more
docs/blog/v2.mdx:42:42     - Unknown word (announced)    -- since this project was announced.
docs/blog/v2.mdx:42:6      - Unknown word (been)         -- It’s been 4 years since this project
docs/blog/v2.mdx:44:9      - Unknown word (proud)        -- **We’re proud to finally release v
docs/blog/v2.mdx:45:7      - Unknown word (dive)         -- Let’s dive in!
docs/blog/v2.mdx:49:4      - Unknown word (Improvements) -- * [Improvements to the MDX format](
docs/blog/v2.mdx:4:15      - Unknown word (wooorm)     -- {github: 'wooorm', name: 'Titus Wormer
docs/blog/v2.mdx:4:31      - Unknown word (Titus)      -- github: 'wooorm', name: 'Titus Wormer', twitter: 'wooorm
docs/blog/v2.mdx:4:37      - Unknown word (Wormer)     -- wooorm', name: 'Titus Wormer', twitter: 'wooorm'
docs/blog/v2.mdx:4:56      - Unknown word (wooorm)     -- Titus Wormer', twitter: 'wooorm'}
docs/blog/v2.mdx:50:31     - Unknown word (integrations) -- esbuild, and other integrations](#rollup-esbuild-and
docs/blog/v2.mdx:51:18     - Unknown word (improvements)  -- * [Architectural improvements](#architectural-improvements
docs/blog/v2.mdx:51:4      - Unknown word (Architectural) -- * [Architectural improvements](#architectural
docs/blog/v2.mdx:54:4      - Unknown word (Breaking)      -- * [Breaking changes](#breaking-changes
docs/blog/v2.mdx:55:4      - Unknown word (Thanks)        -- * [Thanks](#thanks)
docs/blog/v2.mdx:57:4      - Unknown word (Improvements)  -- ## Improvements to the MDX format
docs/blog/v2.mdx:59:27     - Unknown word (thinking)      -- spent a lot of time thinking and trying out different
docs/blog/v2.mdx:59:40     - Unknown word (trying)        -- of time thinking and trying out different ways to
docs/blog/v2.mdx:59:51     - Unknown word (different)     -- thinking and trying out different ways to improve the
docs/blog/v2.mdx:59:61     - Unknown word (ways)          -- trying out different ways to improve the
docs/blog/v2.mdx:59:69     - Unknown word (improve)       -- out different ways to improve the
docs/blog/v2.mdx:59:7      - Unknown word (spent)         -- We’ve spent a lot of time thinking
docs/blog/v2.mdx:61:1      - Unknown word (Originally)    -- Originally, the format was very
docs/blog/v2.mdx:63:32     - Unknown word (often)         -- that the old behavior often yielded unexpected results
docs/blog/v2.mdx:63:38     - Unknown word (yielded)       -- the old behavior often yielded unexpected results.
docs/blog/v2.mdx:63:46     - Unknown word (unexpected)    -- behavior often yielded unexpected results.
docs/blog/v2.mdx:64:48     - Unknown word (closer)        -- format a little bit closer to how JS(X) works.
docs/blog/v2.mdx:86:28     - Unknown word (equivalent)    -- version 1, that was equivalent to the following JSX
docs/blog/v3.mdx:101:1     - Unknown word (There’s)       -- There’s a nice improved playground
docs/blog/v3.mdx:101:16    - Unknown word (improved)      -- There’s a nice improved playground too: [try
docs/blog/v3.mdx:101:25    - Unknown word (playground)    -- There’s a nice improved playground too: [try it out! »
docs/blog/v3.mdx:102:14    - Unknown word (proper)        -- We also have proper syntax highlighting
docs/blog/v3.mdx:102:28    - Unknown word (highlighting)  -- also have proper syntax highlighting here, thanks to
docs/blog/v3.mdx:102:4     - Unknown word (also)          -- We also have proper syntax highlighti
docs/blog/v3.mdx:102:47    - Unknown word (thanks)        -- syntax highlighting here, thanks to
docs/blog/v3.mdx:103:3     - Unknown word (wooorm)        -- [`wooorm/markdown-tm-language
docs/blog/v3.mdx:104:14    - Unknown word (starry)        -- and [`wooorm/starry-night`][starry-night
docs/blog/v3.mdx:104:21    - Unknown word (night)         -- and [`wooorm/starry-night`][starry-night].
docs/blog/v3.mdx:104:7     - Unknown word (wooorm)        -- and [`wooorm/starry-night`][starry
docs/blog/v3.mdx:106:35    - Unknown word (cleaner)       -- JS code is a little cleaner (the JSX pragma comment
docs/blog/v3.mdx:107:42    - Unknown word (also)          -- sorted where needed), it also uses spreads instead
docs/blog/v3.mdx:107:52    - Unknown word (spreads)       -- needed), it also uses spreads instead of
docs/blog/v3.mdx:107:60    - Unknown word (instead)       -- it also uses spreads instead of
docs/blog/v3.mdx:108:18    - Unknown word (there’s)       -- `Object.assign`, there’s a `'use strict'` added
docs/blog/v3.mdx:111:4     - Unknown word (Thanks)        -- ## Thanks
docs/blog/v3.mdx:113:18    - Unknown word (thanks)        -- We’d like to say thanks to all our contributors
docs/blog/v3.mdx:113:36    - Unknown word (contributors)  -- say thanks to all our contributors and our happy users
docs/blog/v3.mdx:114:9     - Unknown word (thanks)        -- Special thanks to
docs/blog/v3.mdx:115:11    - Unknown word (Beiyan)        -- 北雁云依 ([**@BeiyanYunyi**](https://github
docs/blog/v3.mdx:115:17    - Unknown word (Yunyi)         -- 北雁云依 ([**@BeiyanYunyi**](https://github.com
docs/blog/v3.mdx:117:1     - Unknown word (Jokcy)         -- JokcyLou ([**@Jokcy**](https
docs/blog/v3.mdx:117:15    - Unknown word (Jokcy)         -- JokcyLou ([**@Jokcy**](https://github.com
docs/blog/v3.mdx:118:1     - Unknown word (Maël)          -- Maël Nison ([**@arcanis*
docs/blog/v3.mdx:118:17    - Unknown word (arcanis)       -- Maël Nison ([**@arcanis**](https://github.com
docs/blog/v3.mdx:118:6     - Unknown word (Nison)         -- Maël Nison ([**@arcanis**](https
docs/blog/v3.mdx:119:1     - Unknown word (Andreas)       -- Andreas Deininger ([**@deining
docs/blog/v3.mdx:119:24    - Unknown word (deining)       -- Andreas Deininger ([**@deining**](https://github.com
docs/blog/v3.mdx:119:9     - Unknown word (Deininger)     -- Andreas Deininger ([**@deining**](https
docs/blog/v3.mdx:11:28     - Unknown word (migrate)    -- Note**: Info on how to migrate is available in our
docs/blog/v3.mdx:120:1     - Unknown word (Remco)         -- Remco Haszing ([**@remcohaszing
docs/blog/v3.mdx:120:20    - Unknown word (remcohaszing)  -- Remco Haszing ([**@remcohaszing**](https://github.com
docs/blog/v3.mdx:120:7     - Unknown word (Haszing)       -- Remco Haszing ([**@remcohaszing**
docs/blog/v3.mdx:121:1     - Unknown word (Sébastien)     -- Sébastien Lorber ([**@slorber
docs/blog/v3.mdx:121:11    - Unknown word (Lorber)        -- Sébastien Lorber ([**@slorber**](https
docs/blog/v3.mdx:121:23    - Unknown word (slorber)       -- bastien Lorber ([**@slorber**](https://github.com
docs/blog/v3.mdx:122:1     - Unknown word (Víctor)        -- Víctor Fernández ([**@victor
docs/blog/v3.mdx:122:8     - Unknown word (Fernández)     -- Víctor Fernández ([**@victor23k**](https
docs/blog/v3.mdx:123:1     - Unknown word (Titus)         -- Titus Wormer ([**@wooorm*
docs/blog/v3.mdx:123:19    - Unknown word (wooorm)        -- Titus Wormer ([**@wooorm**](https://github.com
docs/blog/v3.mdx:123:7     - Unknown word (Wormer)        -- Titus Wormer ([**@wooorm**](https
docs/blog/v3.mdx:124:24    - Unknown word (forgotten)     -- and anyone we may have forgotten.
docs/blog/v3.mdx:124:5     - Unknown word (anyone)        -- and anyone we may have forgotten
docs/blog/v3.mdx:12:24     - Unknown word (guide)      -- Version 3 migration guide][migrating].
docs/blog/v3.mdx:18:31     - Unknown word (couple)     -- major version contains a couple small changes.
docs/blog/v3.mdx:19:10     - Unknown word (folks)      -- For most folks, updating Node.js and
docs/blog/v3.mdx:19:5      - Unknown word (most)       -- For most folks, updating Node
docs/blog/v3.mdx:21:5      - Unknown word (more)       -- {/* more */}
docs/blog/v3.mdx:25:4      - Unknown word (Breaking)   -- * [Breaking changes](#breaking-changes
docs/blog/v3.mdx:26:4      - Unknown word (Improvements) -- * [Improvements to the MDX format](
docs/blog/v3.mdx:30:4      - Unknown word (Miscellaneous) -- * [Miscellaneous](#miscellaneous)
docs/blog/v3.mdx:31:4      - Unknown word (Thanks)        -- * [Thanks](#thanks)
docs/blog/v3.mdx:33:4      - Unknown word (Breaking)      -- ## Breaking changes
docs/blog/v3.mdx:35:10     - Unknown word (breaking)      -- The main breaking change is that Node
docs/blog/v3.mdx:38:12     - Unknown word (ecosystem)     -- Across the ecosystem there were several small
docs/blog/v3.mdx:38:22     - Unknown word (there)         -- Across the ecosystem there were several small internal
docs/blog/v3.mdx:38:28     - Unknown word (were)          -- the ecosystem there were several small internal
docs/blog/v3.mdx:38:33     - Unknown word (several)       -- ecosystem there were several small internal breaking
docs/blog/v3.mdx:38:56     - Unknown word (breaking)      -- several small internal breaking changes.
docs/blog/v3.mdx:39:1      - Unknown word (Everything’s)  -- Everything’s released already.
docs/blog/v3.mdx:43:22     - Unknown word (infrequently)  -- We also removed some infrequently used deprecated APIs
docs/blog/v3.mdx:43:4      - Unknown word (also)          -- We also removed some infrequently
docs/blog/v3.mdx:44:24     - Unknown word (gloss)         -- You’re likely fine but gloss over the [v3 migration
docs/blog/v3.mdx:44:53     - Unknown word (guide)         -- over the [v3 migration guide][migrating] if you
docs/blog/v3.mdx:44:8      - Unknown word (likely)        -- You’re likely fine but gloss over
docs/blog/v3.mdx:47:37     - Unknown word (lesser)        -- note when you use your lesser-known but powerful
docs/blog/v3.mdx:47:54     - Unknown word (powerful)      -- your lesser-known but powerful `evaluate`, `run`,
docs/blog/v3.mdx:48:42     - Unknown word (please)        -- function-body'` APIs, please pass the `baseUrl` option
docs/blog/v3.mdx:49:12     - Unknown word (sure)          -- That makes sure `import.meta.url`,
docs/blog/v3.mdx:49:6      - Unknown word (makes)         -- That makes sure `import.meta.url
docs/blog/v3.mdx:4:15      - Unknown word (wooorm)     -- {github: 'wooorm', name: 'Titus Wormer
docs/blog/v3.mdx:4:31      - Unknown word (Titus)      -- github: 'wooorm', name: 'Titus Wormer', twitter: 'wooorm
docs/blog/v3.mdx:4:37      - Unknown word (Wormer)     -- wooorm', name: 'Titus Wormer', twitter: 'wooorm'
docs/blog/v3.mdx:4:56      - Unknown word (wooorm)     -- Titus Wormer', twitter: 'wooorm'}
docs/blog/v3.mdx:50:33     - Unknown word (those)         -- a runtime error when those features are used otherwise
docs/blog/v3.mdx:50:57     - Unknown word (otherwise)     -- those features are used otherwise.
docs/blog/v3.mdx:52:4      - Unknown word (Improvements)  -- ## Improvements to the MDX format
docs/blog/v3.mdx:54:1      - Unknown word (There’s)       -- There’s also a few small improvements
docs/blog/v3.mdx:54:26     - Unknown word (improvements)  -- There’s also a few small improvements to the MDX format, some
docs/blog/v3.mdx:54:9      - Unknown word (also)          -- There’s also a few small improvements
docs/blog/v3.mdx:55:1      - Unknown word (technically)   -- technically breaking.
docs/blog/v3.mdx:55:13     - Unknown word (breaking)      -- technically breaking.
docs/blog/v3.mdx:71:1      - Unknown word (Previously)    -- Previously, there was a syntax
docs/blog/v3.mdx:71:13     - Unknown word (there)         -- Previously, there was a syntax error,
docs/blog/v3.mdx:82:1      - Unknown word (Most)          -- Most frameworks don’t support
docs/blog/v3.mdx:82:6      - Unknown word (frameworks)    -- Most frameworks don’t support promises
docs/blog/v3.mdx:83:1      - Unknown word (Whether)       -- Whether this works depends on
docs/blog/v3.mdx:83:20     - Unknown word (depends)       -- Whether this works depends on that.
docs/blog/v3.mdx:85:1      - Unknown word (Previously)    -- Previously, there was a runtime
docs/blog/v3.mdx:85:13     - Unknown word (there)         -- Previously, there was a runtime error
docs/blog/v3.mdx:86:4      - Unknown word (wasn’t)        -- it wasn’t allowed.
docs/blog/v3.mdx:91:13     - Unknown word (internally)    -- Acorn, used internally, is now instructed to
docs/blog/v3.mdx:91:32     - Unknown word (instructed)    -- used internally, is now instructed to use ES2024.
docs/blog/v3.mdx:93:4      - Unknown word (Miscellaneous) -- ## Miscellaneous
docs/blog/v3.mdx:97:16     - Unknown word (guide)         -- I also wrote a guide on how to inject components
docs/blog/v3.mdx:97:3      - Unknown word (also)          -- I also wrote a guide on how
docs/blog/v3.mdx:97:32     - Unknown word (inject)        -- wrote a guide on how to inject components from anywhere
docs/blog/v3.mdx:97:55     - Unknown word (anywhere)      -- inject components from anywhere:
docs/blog/v3.mdx:97:8      - Unknown word (wrote)         -- I also wrote a guide on how to inject
docs/blog/v3.mdx:98:4      - Unknown word (Injecting)     -- [§ Injecting components][injecting
docs/community/about.mdx:100:11    - Unknown word (please)        -- {/* Note: please keep the original project
docs/community/about.mdx:100:50    - Unknown word (intact)        -- original project names intact: */}
docs/community/about.mdx:102:18    - Unknown word (mdxc)          -- * [`jamesknelson/mdxc`](https://github.com
docs/community/about.mdx:102:5     - Unknown word (jamesknelson)  -- * [`jamesknelson/mdxc`](https://github
docs/community/about.mdx:103:30    - Unknown word (loader)        -- ticky/markdown-component-loader`](https://github.com
docs/community/about.mdx:103:5     - Unknown word (ticky)         -- * [`ticky/markdown-component-loader
docs/community/about.mdx:104:5     - Unknown word (threepointone) -- * [`threepointone/markdown-in-js`](https
docs/community/about.mdx:105:14    - Unknown word (marouane)      -- * [`fazouane-marouane/remark-jsx`](https:
docs/community/about.mdx:105:5     - Unknown word (fazouane)      -- * [`fazouane-marouane/remark-jsx
docs/community/about.mdx:106:5     - Unknown word (mapbox)        -- * [`mapbox/remark-react`](https
docs/community/about.mdx:109:15    - Unknown word (articles)      -- The following articles inspired `@mdx-js/*
docs/community/about.mdx:109:24    - Unknown word (inspired)      -- The following articles inspired `@mdx-js/*` originally
docs/community/about.mdx:109:45    - Unknown word (originally)    -- inspired `@mdx-js/*` originally:
docs/community/about.mdx:112:11    - Unknown word (Markup)        -- * [Idyll: Markup language for interactive
docs/community/about.mdx:112:4     - Unknown word (Idyll)         -- * [Idyll: Markup language for
docs/community/about.mdx:12:3      - Unknown word (About)      -- # About
docs/community/about.mdx:14:14     - Unknown word (explains)   -- This article explains in short how MDX came
docs/community/about.mdx:14:40     - Unknown word (came)       -- explains in short how MDX came to be and why it exists
docs/community/about.mdx:15:15     - Unknown word (thanks)     -- It also gives thanks to the people who’ve
docs/community/about.mdx:15:4      - Unknown word (also)       -- It also gives thanks to the
docs/community/about.mdx:15:43     - Unknown word (helped)     -- to the people who’ve helped make it and inspired
docs/community/about.mdx:15:62     - Unknown word (inspired)   -- ve helped make it and inspired it.
docs/community/about.mdx:15:9      - Unknown word (gives)      -- It also gives thanks to the people
docs/community/about.mdx:17:5      - Unknown word (more)       -- {/* more */}
docs/community/about.mdx:22:32     - Unknown word (more)       -- What is MDX?][what] for more info.
docs/community/about.mdx:27:5      - Unknown word (solves)     -- MDX solves this.
docs/community/about.mdx:29:1      - Unknown word (There)      -- There are many languages objectivel
docs/community/about.mdx:29:26     - Unknown word (objectively) -- There are many languages objectively better than markdown
docs/community/about.mdx:29:38     - Unknown word (better)      -- languages objectively better than markdown, however
docs/community/about.mdx:29:60     - Unknown word (however)     -- better than markdown, however, markdown is
docs/community/about.mdx:32:25     - Unknown word (means)       -- It looks like what it means and is relatively easy
docs/community/about.mdx:32:38     - Unknown word (relatively)  -- what it means and is relatively easy to read
docs/community/about.mdx:32:49     - Unknown word (easy)        -- means and is relatively easy to read
docs/community/about.mdx:33:24     - Unknown word (confusing)   -- Although images are [confusing][], most stuff is relatively
docs/community/about.mdx:33:3      - Unknown word (Although)    -- * Although images are [confusing
docs/community/about.mdx:33:38     - Unknown word (most)        -- images are [confusing][], most stuff is relatively
docs/community/about.mdx:33:52     - Unknown word (relatively)  -- confusing][], most stuff is relatively simple to write
docs/community/about.mdx:34:18     - Unknown word (ambiguous)   -- * It’s loose and ambiguous: it may not work but
docs/community/about.mdx:35:15     - Unknown word (posting)     -- for someone posting a comment to a forum
docs/community/about.mdx:35:47     - Unknown word (they)        -- comment to a forum if they forgot an asterisk)
docs/community/about.mdx:35:7      - Unknown word (someone)     -- for someone posting a comment to
docs/community/about.mdx:37:61     - Unknown word (drawbacks)   -- HTML, but that has drawbacks:
docs/community/about.mdx:39:23     - Unknown word (naïve)       -- HTML in markdown is naïve, how it’s parsed sometimes
docs/community/about.mdx:39:46     - Unknown word (sometimes)   -- ve, how it’s parsed sometimes doesn’t make sense
docs/community/about.mdx:39:56     - Unknown word (doesn’t)     -- it’s parsed sometimes doesn’t make sense
docs/community/about.mdx:39:69     - Unknown word (sense)       -- sometimes doesn’t make sense
docs/community/about.mdx:40:38     - Unknown word (sometimes)   -- by default, so it’s sometimes (partially) unsupported
docs/community/about.mdx:41:50     - Unknown word (confusing)   -- mix well, resulting in confusing rules such as
docs/community/about.mdx:43:11     - Unknown word (coupled)     -- * HTML is coupled with browsers, markdown
docs/community/about.mdx:43:24     - Unknown word (browsers)    -- HTML is coupled with browsers, markdown is useful
docs/community/about.mdx:43:46     - Unknown word (useful)      -- browsers, markdown is useful for other things too
docs/community/about.mdx:46:15     - Unknown word (amongst)     -- JSX is great, amongst other things, because
docs/community/about.mdx:48:12     - Unknown word (relatively)  -- * It has a relatively familiar syntax (like
docs/community/about.mdx:48:23     - Unknown word (familiar)    -- It has a relatively familiar syntax (like XML)
docs/community/about.mdx:49:34     - Unknown word (intended)    -- agnostic to semantics and intended for compilers (can have
docs/community/about.mdx:49:47     - Unknown word (compilers)   -- semantics and intended for compilers (can have any
docs/community/about.mdx:49:8      - Unknown word (agnostic)    -- * It’s agnostic to semantics and intended
docs/community/about.mdx:51:19     - Unknown word (unambiguous) -- * It’s strict and unambiguous (great if an author
docs/community/about.mdx:51:66     - Unknown word (somewhere)   -- author forgot a slash somewhere, as
docs/community/about.mdx:52:24     - Unknown word (early)       -- they’ll get an error early, instead of a book going
docs/community/about.mdx:52:3      - Unknown word (they’ll)     -- they’ll get an error early,
docs/community/about.mdx:52:31     - Unknown word (instead)     -- get an error early, instead of a book going to print
docs/community/about.mdx:52:49     - Unknown word (going)       -- early, instead of a book going to print with broken
docs/community/about.mdx:52:69     - Unknown word (broken)      -- going to print with broken
docs/community/about.mdx:55:8      - Unknown word (governs)     -- ## Who governs MDX?
docs/community/about.mdx:57:16     - Unknown word (governed)    -- The project is governed by the
docs/community/about.mdx:58:10     - Unknown word (collective)  -- [unified collective][governance].
docs/community/about.mdx:5:15      - Unknown word (wooorm)     -- {github: 'wooorm', name: 'Titus Wormer
docs/community/about.mdx:5:31      - Unknown word (Titus)      -- github: 'wooorm', name: 'Titus Wormer', twitter: 'wooorm
docs/community/about.mdx:5:37      - Unknown word (Wormer)     -- wooorm', name: 'Titus Wormer', twitter: 'wooorm'
docs/community/about.mdx:5:56      - Unknown word (wooorm)     -- Titus Wormer', twitter: 'wooorm'}
docs/community/about.mdx:62:13     - Unknown word (combining)   -- The idea of combining [markdown][commonmark
docs/community/about.mdx:62:5      - Unknown word (idea)        -- The idea of combining [markdown
docs/community/about.mdx:63:1      - Unknown word (collaborative) -- collaborative effort by
docs/community/about.mdx:63:15     - Unknown word (effort)        -- collaborative effort by
docs/community/about.mdx:64:12     - Unknown word (Rauch)         -- [Guillermo Rauch][mdx-rauchg] (**[@rauchg
docs/community/about.mdx:64:2      - Unknown word (Guillermo)     -- [Guillermo Rauch][mdx-rauchg]
docs/community/about.mdx:64:36     - Unknown word (rauchg)        -- Rauch][mdx-rauchg] (**[@rauchg][rauchg]**),
docs/community/about.mdx:65:11     - Unknown word (Nelson)        -- [James K. Nelson][mdx-jamesknelson]
docs/community/about.mdx:65:42     - Unknown word (jamesknelson)  -- mdx-jamesknelson] (**[@jamesknelson][jamesknelson]**),
docs/community/about.mdx:66:2      - Unknown word (John)          -- [John Otander][mdx-johno]
docs/community/about.mdx:66:32     - Unknown word (johno)         -- Otander][mdx-johno] (**[@johno][johno]**),
docs/community/about.mdx:66:7      - Unknown word (Otander)       -- [John Otander][mdx-johno] (**[@johno
docs/community/about.mdx:67:19     - Unknown word (timneutkens)   -- Tim Neutkens (**[@timneutkens][timneutkens]**),
docs/community/about.mdx:67:5      - Unknown word (Neutkens)      -- Tim Neutkens (**[@timneutkens][timneutkens
docs/community/about.mdx:68:1      - Unknown word (Brent)         -- Brent Jackson (**[@jxnblk
docs/community/about.mdx:68:20     - Unknown word (jxnblk)        -- Brent Jackson (**[@jxnblk][jxnblk]**),
docs/community/about.mdx:68:7      - Unknown word (Jackson)       -- Brent Jackson (**[@jxnblk][jxnblk
docs/community/about.mdx:69:1      - Unknown word (Jessica)       -- Jessica Stokes (**[@ticky][ticky
docs/community/about.mdx:69:21     - Unknown word (ticky)         -- Jessica Stokes (**[@ticky][ticky]**), and more
docs/community/about.mdx:69:43     - Unknown word (more)          -- ticky][ticky]**), and more.
docs/community/about.mdx:69:9      - Unknown word (Stokes)        -- Jessica Stokes (**[@ticky][ticky]*
docs/community/about.mdx:71:16     - Unknown word (above)         -- While everyone above was key to MDX, we want
docs/community/about.mdx:71:41     - Unknown word (want)          -- above was key to MDX, we want to stress the involvement
docs/community/about.mdx:71:60     - Unknown word (involvement)   -- we want to stress the involvement of
docs/community/about.mdx:71:7      - Unknown word (everyone)      -- While everyone above was key to MDX
docs/community/about.mdx:72:2      - Unknown word (John)          -- [John Otander][mdx-johno]
docs/community/about.mdx:72:32     - Unknown word (johno)         -- Otander][mdx-johno] (**[@johno][johno]**).
docs/community/about.mdx:72:7      - Unknown word (Otander)       -- [John Otander][mdx-johno] (**[@johno
docs/community/about.mdx:73:1      - Unknown word (John)          -- John wrote most of the code
docs/community/about.mdx:73:12     - Unknown word (most)          -- John wrote most of the code for the
docs/community/about.mdx:73:53     - Unknown word (later)         -- the first alpha and later stable version 1 of
docs/community/about.mdx:73:6      - Unknown word (wrote)         -- John wrote most of the code for
docs/community/about.mdx:76:21     - Unknown word (logo)          -- ## Who designed the logo?
docs/community/about.mdx:76:8      - Unknown word (designed)      -- ## Who designed the logo?
docs/community/about.mdx:78:2      - Unknown word (Logo)          -- [Logo designs][design] were
docs/community/about.mdx:78:24     - Unknown word (were)          -- Logo designs][design] were created by [Evil Rabbit
docs/community/about.mdx:78:41     - Unknown word (Evil)          -- design] were created by [Evil Rabbit][] of [Vercel
docs/community/about.mdx:78:46     - Unknown word (Rabbit)        -- were created by [Evil Rabbit][] of [Vercel][].
docs/community/about.mdx:78:7      - Unknown word (designs)       -- [Logo designs][design] were created
docs/community/about.mdx:80:18     - Unknown word (inspired)      -- ## What projects inspired MDX?
docs/community/about.mdx:82:40     - Unknown word (articles)      -- projects, languages, and articles helped shape MDX either
docs/community/about.mdx:82:49     - Unknown word (helped)        -- languages, and articles helped shape MDX either in
docs/community/about.mdx:82:66     - Unknown word (either)        -- articles helped shape MDX either in
docs/community/about.mdx:83:19     - Unknown word (inspiration)   -- implementation or inspiration.
docs/community/about.mdx:85:40     - Unknown word (inspired)      -- and [JSX][] languages inspired MDX.
docs/community/about.mdx:86:26     - Unknown word (John)          -- Markdown was [created by John Gruber][markdown] (
docs/community/about.mdx:86:31     - Unknown word (Gruber)        -- was [created by John Gruber][markdown] (**[@gruber
docs/community/about.mdx:86:54     - Unknown word (gruber)        -- Gruber][markdown] (**[@gruber][gruber]**).
docs/community/about.mdx:87:21     - Unknown word (most)          -- [CommonMark][], the most popular markdown variant
docs/community/about.mdx:87:26     - Unknown word (popular)       -- CommonMark][], the most popular markdown variant, by
docs/community/about.mdx:87:55     - Unknown word (John)          -- markdown variant, by John McFarlane
docs/community/about.mdx:87:62     - Unknown word (Farlane)       -- markdown variant, by John McFarlane
docs/community/about.mdx:89:20     - Unknown word (Sebastian)     -- JSX was created by Sebastian Markbåge (**[@sebmarkbage
docs/community/about.mdx:89:30     - Unknown word (Markbåge)      -- created by Sebastian Markbåge (**[@sebmarkbage][sebmarkbage
docs/community/about.mdx:89:44     - Unknown word (sebmarkbage)   -- Sebastian Markbåge (**[@sebmarkbage][sebmarkbage]**) et
docs/community/about.mdx:92:26     - Unknown word (currently)     -- @mdx-js/*` projects currently make heavy use of [unified
docs/community/about.mdx:92:67     - Unknown word (specifically)  -- use of [unified][] (specifically
docs/community/about.mdx:94:44     - Unknown word (were)          -- rehype, and related tools were created by Titus Wormer
docs/community/about.mdx:94:60     - Unknown word (Titus)         -- tools were created by Titus Wormer
docs/community/about.mdx:94:66     - Unknown word (Wormer)        -- were created by Titus Wormer
docs/community/about.mdx:95:6      - Unknown word (wooorm)        -- (**[@wooorm][wooorm]**) et al.
docs/community/about.mdx:96:10     - Unknown word (Marijn)        -- Acorn by Marijn Haverbeke (**[@marijnh
docs/community/about.mdx:96:17     - Unknown word (Haverbeke)     -- Acorn by Marijn Haverbeke (**[@marijnh][marijnh
docs/community/about.mdx:96:32     - Unknown word (marijnh)       -- Marijn Haverbeke (**[@marijnh][marijnh]**) et al.
docs/community/about.mdx:98:24     - Unknown word (inspired)      -- The following projects inspired `@mdx-js/*` originally
docs/community/about.mdx:98:45     - Unknown word (originally)    -- inspired `@mdx-js/*` originally:
docs/community/contribute.mdx:101:70    - Unknown word (sure)          -- minor, or major (make sure to
docs/community/contribute.mdx:106:19    - Unknown word (using)         -- 2. commit and tag using the version (without
docs/community/contribute.mdx:121:4     - Unknown word (Good)          -- * [Good first issues in the
docs/community/contribute.mdx:122:11    - Unknown word (contribute)    -- * [How to contribute to open source](https
docs/community/contribute.mdx:123:22    - Unknown word (contribution)  -- [Making your first contribution](https://medium.com
docs/community/contribute.mdx:123:4     - Unknown word (Making)        -- * [Making your first contribution
docs/community/contribute.mdx:124:4     - Unknown word (Using)         -- * [Using pull requests](https
docs/community/contribute.mdx:12:3      - Unknown word (Contribute) -- # Contribute
docs/community/contribute.mdx:14:14     - Unknown word (explains)   -- This article explains how to contribute to
docs/community/contribute.mdx:14:30     - Unknown word (contribute) -- article explains how to contribute to MDX.
docs/community/contribute.mdx:15:1      - Unknown word (Please)     -- Please read through the following
docs/community/contribute.mdx:15:35     - Unknown word (guidelines) -- through the following guidelines.
docs/community/contribute.mdx:17:5      - Unknown word (more)       -- {/* more */}
docs/community/contribute.mdx:20:25     - Unknown word (participating) -- Important**: before participating in our community, please
docs/community/contribute.mdx:20:57     - Unknown word (please)        -- rticipating in our community, please read our
docs/community/contribute.mdx:21:12     - Unknown word (conduct)       -- [code of conduct][coc].
docs/community/contribute.mdx:22:6      - Unknown word (interacting)   -- By interacting with this repository
docs/community/contribute.mdx:22:71     - Unknown word (agree)         -- rganization, or community you agree to
docs/community/contribute.mdx:23:3      - Unknown word (abide)         -- abide by its terms.
docs/community/contribute.mdx:26:4      - Unknown word (Contributions) -- ## Contributions
docs/community/contribute.mdx:28:1      - Unknown word (There’s)       -- There’s several ways to contribute
docs/community/contribute.mdx:28:17     - Unknown word (ways)          -- There’s several ways to contribute, not just
docs/community/contribute.mdx:28:25     - Unknown word (contribute)    -- There’s several ways to contribute, not just by writing
docs/community/contribute.mdx:28:9      - Unknown word (several)       -- There’s several ways to contribute,
docs/community/contribute.mdx:29:13     - Unknown word (questions)     -- If you have questions, see [§ Support][support
docs/community/contribute.mdx:30:46     - Unknown word (Sponsor)       -- financial support, see [§ Sponsor][sponsor].
docs/community/contribute.mdx:32:5      - Unknown word (Improve)       -- ### Improve docs
docs/community/contribute.mdx:34:18     - Unknown word (perfect)       -- As a user you’re perfect for helping us improve
docs/community/contribute.mdx:34:30     - Unknown word (helping)       -- user you’re perfect for helping us improve our docs
docs/community/contribute.mdx:34:41     - Unknown word (improve)       -- perfect for helping us improve our docs.
docs/community/contribute.mdx:35:1      - Unknown word (Typo)          -- Typo corrections, error fixes
docs/community/contribute.mdx:35:32     - Unknown word (better)        -- corrections, error fixes, better explanations, new examples
docs/community/contribute.mdx:35:39     - Unknown word (explanations)  -- error fixes, better explanations, new examples, etcetera
docs/community/contribute.mdx:35:6      - Unknown word (corrections)   -- Typo corrections, error fixes, better
docs/community/contribute.mdx:35:67     - Unknown word (etcetera)      -- explanations, new examples, etcetera.
docs/community/contribute.mdx:38:22     - Unknown word (locally)       -- You can run the docs locally, see [¶ Site][site]
docs/community/contribute.mdx:40:13     - Unknown word (issues)        -- ### Improve issues
docs/community/contribute.mdx:40:5      - Unknown word (Improve)       -- ### Improve issues
docs/community/contribute.mdx:42:13     - Unknown word (lack)          -- Some issues lack information, aren’t
docs/community/contribute.mdx:42:31     - Unknown word (aren’t)        -- issues lack information, aren’t reproducible, or are
docs/community/contribute.mdx:42:38     - Unknown word (reproducible)  -- information, aren’t reproducible, or are just incorrect
docs/community/contribute.mdx:42:6      - Unknown word (issues)        -- Some issues lack information, aren
docs/community/contribute.mdx:42:64     - Unknown word (incorrect)     -- reproducible, or are just incorrect.
docs/community/contribute.mdx:43:17     - Unknown word (trying)        -- You can help by trying to make them easier
docs/community/contribute.mdx:43:32     - Unknown word (them)          -- help by trying to make them easier to resolve.
docs/community/contribute.mdx:43:37     - Unknown word (easier)        -- trying to make them easier to resolve.
docs/community/contribute.mdx:44:10     - Unknown word (issues)        -- Existing issues might benefit from your
docs/community/contribute.mdx:44:17     - Unknown word (might)         -- Existing issues might benefit from your unique
docs/community/contribute.mdx:44:23     - Unknown word (benefit)       -- Existing issues might benefit from your unique experience
docs/community/contribute.mdx:44:48     - Unknown word (experience)    -- benefit from your unique experience or opinions.
docs/community/contribute.mdx:44:62     - Unknown word (opinions)      -- unique experience or opinions.
docs/community/contribute.mdx:48:29     - Unknown word (welcome)       -- contributions are very welcome.
docs/community/contribute.mdx:48:6      - Unknown word (contributions) -- Code contributions are very welcome.
docs/community/contribute.mdx:49:17     - Unknown word (good)          -- It’s probably a good idea to first post a
docs/community/contribute.mdx:49:22     - Unknown word (idea)          -- It’s probably a good idea to first post a question
docs/community/contribute.mdx:50:37     - Unknown word (creating)      -- a new feature before creating a pull request.
docs/community/contribute.mdx:52:4      - Unknown word (Submitting)    -- ## Submitting an issue
docs/community/contribute.mdx:54:28     - Unknown word (issues)        -- issue tracker is for issues.
docs/community/contribute.mdx:55:7      - Unknown word (discussions)   -- Use discussions for support
docs/community/contribute.mdx:56:46     - Unknown word (issues)        -- tracker (including closed issues) before opening a new
docs/community/contribute.mdx:58:17     - Unknown word (using)         -- * Ensure you’re using the latest version of
docs/community/contribute.mdx:59:19     - Unknown word (descriptive)   -- * Use a clear and descriptive title
docs/community/contribute.mdx:5:15      - Unknown word (wooorm)     -- {github: 'wooorm', name: 'Titus Wormer
docs/community/contribute.mdx:5:31      - Unknown word (Titus)      -- github: 'wooorm', name: 'Titus Wormer', twitter: 'wooorm
docs/community/contribute.mdx:5:37      - Unknown word (Wormer)     -- wooorm', name: 'Titus Wormer', twitter: 'wooorm'
docs/community/contribute.mdx:5:56      - Unknown word (wooorm)     -- Titus Wormer', twitter: 'wooorm'}
docs/community/contribute.mdx:60:14     - Unknown word (much)          -- * Include as much information as possible
docs/community/contribute.mdx:60:34     - Unknown word (possible)      -- much information as possible: steps to reproduce
docs/community/contribute.mdx:60:53     - Unknown word (reproduce)     -- as possible: steps to reproduce the issue,
docs/community/contribute.mdx:61:27     - Unknown word (operating)     -- error message, version, operating system, etcetera
docs/community/contribute.mdx:61:45     - Unknown word (etcetera)      -- version, operating system, etcetera
docs/community/contribute.mdx:62:44     - Unknown word (better)        -- put into an issue, the better we will be able to help
docs/community/contribute.mdx:62:62     - Unknown word (able)          -- the better we will be able to help you
docs/community/contribute.mdx:62:7      - Unknown word (more)          -- * The more time you put into an
docs/community/contribute.mdx:63:31     - Unknown word (failing)       -- best issue report is a [failing test][unit-test] proving
docs/community/contribute.mdx:63:56     - Unknown word (proving)       -- failing test][unit-test] proving it
docs/community/contribute.mdx:65:4      - Unknown word (Submitting)    -- ## Submitting a pull request
docs/community/contribute.mdx:69:27     - Unknown word (often)         -- trivial changes are often best discussed in an
docs/community/contribute.mdx:69:38     - Unknown word (discussed)     -- changes are often best discussed in an issue first, to
docs/community/contribute.mdx:69:7      - Unknown word (trivial)       -- * Non-trivial changes are often best
docs/community/contribute.mdx:70:12     - Unknown word (doing)         -- you from doing unnecessary work
docs/community/contribute.mdx:71:7      - Unknown word (ambitious)     -- * For ambitious tasks, you should try
docs/community/contribute.mdx:72:37     - Unknown word (possible)      -- feedback as soon as possible
docs/community/contribute.mdx:73:26     - Unknown word (accompanied)   -- New features should be accompanied by tests and documentation
docs/community/contribute.mdx:74:17     - Unknown word (unrelated)     -- * Don’t include unrelated changes
docs/community/contribute.mdx:75:15     - Unknown word (submitting)    -- * Test before submitting code by running `npm
docs/community/contribute.mdx:76:11     - Unknown word (convincing)    -- * Write a convincing description of why we
docs/community/contribute.mdx:77:20     - Unknown word (convince)      -- it’s your job to convince us
docs/community/contribute.mdx:90:14     - Unknown word (everything)    -- This ensures everything is okay, from code style
docs/community/contribute.mdx:90:28     - Unknown word (okay)          -- ensures everything is okay, from code style to
docs/community/contribute.mdx:90:6      - Unknown word (ensures)       -- This ensures everything is okay,
docs/community/contribute.mdx:95:6      - Unknown word (produces)      -- This produces the website in `public
docs/community/index.mdx:16:24     - Unknown word (Contributors) -- author: [{name: 'MDX Contributors'}],
docs/community/index.mdx:24:1      - Unknown word (These)        -- These pages explain how to
docs/community/index.mdx:24:13     - Unknown word (explain)      -- These pages explain how to contribute, get
docs/community/index.mdx:24:28     - Unknown word (contribute)   -- pages explain how to contribute, get help, sponsor us
docs/community/index.mdx:24:50     - Unknown word (sponsor)      -- contribute, get help, sponsor us, share your work
docs/community/index.mdx:24:7      - Unknown word (pages)        -- These pages explain how to contribute
docs/community/index.mdx:29:28     - Unknown word (props)        -- const navigationTree = props.navigationTree
docs/community/index.mdx:7:15      - Unknown word (Props)      -- * @typedef Props
docs/community/projects.mdx:16:3      - Unknown word (Please)     -- Please send a PR to add it
docs/community/projects.mdx:19:36     - Unknown word (using)      -- lists community projects using MDX.
docs/community/projects.mdx:21:5      - Unknown word (more)       -- {/* more */}
docs/community/projects.mdx:25:22     - Unknown word (simplest)   -- [demoboard][]: The simplest editor alive
docs/community/projects.mdx:25:38     - Unknown word (alive)      -- The simplest editor alive
docs/community/projects.mdx:25:4      - Unknown word (demoboard)  -- * [demoboard][]: The simplest editor
docs/community/projects.mdx:30:4      - Unknown word (docz)       -- * [docz][]: Documentation framework
docs/community/projects.mdx:31:40     - Unknown word (decks)      -- MDX-based presentation decks
docs/community/projects.mdx:31:8      - Unknown word (deck)       -- * [mdx-deck][]: MDX-based presentation
docs/community/projects.mdx:33:37     - Unknown word (articles)   -- MDX-based research articles
docs/community/projects.mdx:34:4      - Unknown word (spectacle)  -- * [spectacle-boilerplate-mdx][]:
docs/community/projects.mdx:34:51     - Unknown word (facilitates) -- ]: Boilerplate that facilitates using MDX with
docs/community/projects.mdx:34:63     - Unknown word (using)       -- Boilerplate that facilitates using MDX with
docs/community/projects.mdx:35:3      - Unknown word (Spectacle)   -- Spectacle
docs/community/projects.mdx:36:18     - Unknown word (opinionated) -- * [Charge][]: An opinionated, zero-config static
docs/community/projects.mdx:36:4      - Unknown word (Charge)      -- * [Charge][]: An opinionated,
docs/community/projects.mdx:37:18     - Unknown word (ecosystem)   -- * [MDNEXT][]: An ecosystem of tools to get your
docs/community/projects.mdx:37:4      - Unknown word (MDNEXT)      -- * [MDNEXT][]: An ecosystem of
docs/community/projects.mdx:37:71     - Unknown word (blasting)    -- NextJS + MDX projects blasting
docs/community/projects.mdx:40:4      - Unknown word (Sites)       -- ## Sites
docs/community/projects.mdx:44:8      - Unknown word (Stoiber’s)   -- * [Max Stoiber’s Blog][mxstbr]
docs/community/projects.mdx:48:4      - Unknown word (awesome)     -- * [awesome-mdx][]
docs/community/projects.mdx:49:21     - Unknown word (kings)       -- * [MDX: content for kings and princesses][mdx
docs/community/projects.mdx:49:31     - Unknown word (princesses)  -- content for kings and princesses][mdx-fairy-tale]
docs/community/projects.mdx:5:15      - Unknown word (johno)      -- {github: 'johno', name: 'John Otander
docs/community/projects.mdx:5:30      - Unknown word (John)       -- github: 'johno', name: 'John Otander', twitter:
docs/community/projects.mdx:5:35      - Unknown word (Otander)    -- johno', name: 'John Otander', twitter: '4lpine'
docs/community/projects.mdx:5:56      - Unknown word (lpine)      -- Otander', twitter: '4lpine'}
docs/community/sponsor.mdx:10:3      - Unknown word (Sponsor)    -- # Sponsor
docs/community/sponsor.mdx:12:14     - Unknown word (explains)   -- This article explains how to contribute financially
docs/community/sponsor.mdx:12:30     - Unknown word (contribute) -- article explains how to contribute financially to MDX.
docs/community/sponsor.mdx:12:41     - Unknown word (financially) -- explains how to contribute financially to MDX.
docs/community/sponsor.mdx:14:5      - Unknown word (more)        -- {/* more */}
docs/community/sponsor.mdx:16:29     - Unknown word (financially) -- possible to support us financially by becoming a backer
docs/community/sponsor.mdx:16:44     - Unknown word (becoming)    -- support us financially by becoming a backer or sponsor
docs/community/sponsor.mdx:16:55     - Unknown word (backer)      -- financially by becoming a backer or sponsor of
docs/community/sponsor.mdx:16:6      - Unknown word (possible)    -- It’s possible to support us financially
docs/community/sponsor.mdx:16:65     - Unknown word (sponsor)     -- becoming a backer or sponsor of
docs/community/sponsor.mdx:17:17     - Unknown word (either)      -- unified through either [Open Collective][oc
docs/community/sponsor.mdx:17:30     - Unknown word (Collective)  -- through either [Open Collective][oc] or [GitHub Sponsors
docs/community/sponsor.mdx:17:57     - Unknown word (Sponsors)    -- Collective][oc] or [GitHub Sponsors][gh].
docs/community/sponsor.mdx:18:43     - Unknown word (leadership)  -- can pay for project leadership, finance non-coding
docs/community/sponsor.mdx:19:42     - Unknown word (getting)     -- for the community like getting stickers for contributors
docs/community/sponsor.mdx:19:50     - Unknown word (stickers)    -- community like getting stickers for contributors.
docs/community/sponsor.mdx:19:63     - Unknown word (contributors) -- getting stickers for contributors.
docs/community/sponsor.mdx:20:11     - Unknown word (helping)      -- You’ll be helping unified’s maintainers
docs/community/sponsor.mdx:20:29     - Unknown word (maintainers)  -- be helping unified’s maintainers manage and improve existing
docs/community/sponsor.mdx:20:52     - Unknown word (improve)      -- maintainers manage and improve existing projects,
docs/community/sponsor.mdx:21:38     - Unknown word (develop)      -- support our work to develop new and exciting projects
docs/community/sponsor.mdx:21:5      - Unknown word (additionally) -- and additionally support our work to
docs/community/sponsor.mdx:21:54     - Unknown word (exciting)     -- work to develop new and exciting projects, such
docs/community/sponsor.mdx:28:43     - Unknown word (sponsored)    -- https://vercel.com" rel="sponsored nofollow">Vercel</a
docs/community/sponsor.mdx:29:43     - Unknown word (sponsored)    -- https://vercel.com" rel="sponsored nofollow"><img src=
docs/community/sponsor.mdx:32:43     - Unknown word (sponsored)    -- https://motif.land" rel="sponsored nofollow">Motif</a>
docs/community/sponsor.mdx:32:63     - Unknown word (Motif)        -- sponsored nofollow">Motif</a><br /><br />
docs/community/sponsor.mdx:33:43     - Unknown word (sponsored)    -- https://motif.land" rel="sponsored nofollow"><img src=
docs/community/sponsor.mdx:36:50     - Unknown word (sponsored)    -- hashicorp.com" rel="sponsored nofollow">HashiCorp
docs/community/sponsor.mdx:3:15      - Unknown word (wooorm)     -- {github: 'wooorm', name: 'Titus Wormer
docs/community/sponsor.mdx:3:31      - Unknown word (Titus)      -- github: 'wooorm', name: 'Titus Wormer', twitter: 'wooorm
docs/community/sponsor.mdx:3:37      - Unknown word (Wormer)     -- wooorm', name: 'Titus Wormer', twitter: 'wooorm'
docs/community/sponsor.mdx:3:56      - Unknown word (wooorm)     -- Titus Wormer', twitter: 'wooorm'}
docs/community/sponsor.mdx:44:69     - Unknown word (Gatsby)       -- sponsored nofollow">Gatsby</a><br /><br />
docs/community/sponsor.mdx:52:22     - Unknown word (sharper)      -- {/* OC has a sharper image */}
docs/community/sponsor.mdx:60:66     - Unknown word (Theme)        -- sponsored nofollow">ThemeIsle</a><br /><br />
docs/community/sponsor.mdx:60:71     - Unknown word (Isle)         -- sponsored nofollow">ThemeIsle</a><br /><br />
docs/community/sponsor.mdx:64:60     - Unknown word (Expo)         -- sponsored nofollow">Expo</a><br /><br />
docs/community/sponsor.mdx:68:65     - Unknown word (Boost)        -- sponsored nofollow">Boost Note</a><br /><br /
docs/community/sponsor.mdx:76:69     - Unknown word (Holloway)     -- sponsored nofollow">Holloway</a><br /><br />
docs/community/support.mdx:14:14     - Unknown word (explains)   -- This article explains where to get help with
docs/community/support.mdx:15:1      - Unknown word (Please)     -- Please read through the following
docs/community/support.mdx:15:35     - Unknown word (guidelines) -- through the following guidelines.
docs/community/support.mdx:17:5      - Unknown word (more)       -- {/* more */}
docs/community/support.mdx:20:25     - Unknown word (participating) -- Important**: before participating in our community, please
docs/community/support.mdx:20:57     - Unknown word (please)        -- rticipating in our community, please read our
docs/community/support.mdx:21:12     - Unknown word (conduct)       -- [code of conduct][coc].
docs/community/support.mdx:22:6      - Unknown word (interacting)   -- By interacting with this repository
docs/community/support.mdx:22:71     - Unknown word (agree)         -- rganization, or community you agree to
docs/community/support.mdx:23:3      - Unknown word (abide)         -- abide by its terms.
docs/community/support.mdx:26:19     - Unknown word (questions)     -- ## Asking quality questions
docs/community/support.mdx:26:4      - Unknown word (Asking)        -- ## Asking quality questions
docs/community/support.mdx:28:1      - Unknown word (Questions)     -- Questions can go to [GitHub Discussions
docs/community/support.mdx:28:29     - Unknown word (Discussions)   -- Questions can go to [GitHub Discussions][chat].
docs/community/support.mdx:31:1      - Unknown word (Spend)         -- Spend time framing questions
docs/community/support.mdx:31:12     - Unknown word (framing)       -- Spend time framing questions and add links
docs/community/support.mdx:31:20     - Unknown word (questions)     -- Spend time framing questions and add links and resources
docs/community/support.mdx:32:1      - Unknown word (Spending)      -- Spending the extra time up front
docs/community/support.mdx:32:48     - Unknown word (everyone)      -- front can help save everyone time in the long run
docs/community/support.mdx:33:15     - Unknown word (tips)          -- Here are some tips:
docs/community/support.mdx:35:19     - Unknown word (Getting)       -- * Read through [§ Getting started][getting-started
docs/community/support.mdx:35:27     - Unknown word (started)       -- Read through [§ Getting started][getting-started]
docs/community/support.mdx:36:14     - Unknown word (duck)          -- * [Talk to a duck!][rubberduck]
docs/community/support.mdx:36:4      - Unknown word (Talk)          -- * [Talk to a duck!][rubberduck
docs/community/support.mdx:37:9      - Unknown word (fall)          -- * Don’t fall for the [XY problem
docs/community/support.mdx:38:27     - Unknown word (similar)       -- Search to find out if a similar question has been asked
docs/community/support.mdx:38:48     - Unknown word (been)          -- similar question has been asked
docs/community/support.mdx:38:53     - Unknown word (asked)         -- similar question has been asked
docs/community/support.mdx:40:27     - Unknown word (particular)    -- Is there something in particular you want?
docs/community/support.mdx:40:42     - Unknown word (want)          -- something in particular you want?
docs/community/support.mdx:40:8      - Unknown word (there)         -- * Is there something in particular
docs/community/support.mdx:41:26     - Unknown word (encountering)  -- What problem are you encountering and what steps have
docs/community/support.mdx:41:63     - Unknown word (taken)         -- what steps have you taken to try
docs/community/support.mdx:43:16     - Unknown word (concept)       -- * Is there a concept you don’t understand
docs/community/support.mdx:43:34     - Unknown word (understand)    -- a concept you don’t understand?
docs/community/support.mdx:43:8      - Unknown word (there)         -- * Is there a concept you don’t
docs/community/support.mdx:44:65     - Unknown word (possible)      -- CodeSandbox][cs] or video, if possible
docs/community/support.mdx:45:3      - Unknown word (Screenshots)   -- * Screenshots can help, but if there
docs/community/support.mdx:45:32     - Unknown word (there’s)       -- Screenshots can help, but if there’s important text such
docs/community/support.mdx:46:15     - Unknown word (them)          -- messages in them, please also provide
docs/community/support.mdx:46:21     - Unknown word (please)        -- messages in them, please also provide those as
docs/community/support.mdx:46:28     - Unknown word (also)          -- messages in them, please also provide those as text
docs/community/support.mdx:46:41     - Unknown word (those)         -- please also provide those as text
docs/community/support.mdx:47:30     - Unknown word (asking)        -- more time you put into asking your question, the better
docs/community/support.mdx:47:56     - Unknown word (better)        -- asking your question, the better we can help you
docs/community/support.mdx:47:7      - Unknown word (more)          -- * The more time you put into asking
docs/community/support.mdx:5:15      - Unknown word (wooorm)     -- {github: 'wooorm', name: 'Titus Wormer
docs/community/support.mdx:5:31      - Unknown word (Titus)      -- github: 'wooorm', name: 'Titus Wormer', twitter: 'wooorm
docs/community/support.mdx:5:37      - Unknown word (Wormer)     -- wooorm', name: 'Titus Wormer', twitter: 'wooorm'
docs/community/support.mdx:5:56      - Unknown word (wooorm)     -- Titus Wormer', twitter: 'wooorm'}
docs/docs/extending-mdx.mdx:100:5     - Unknown word (goodproblems) -- * [`goodproblems/remark-mdx-math-enhanced
docs/docs/extending-mdx.mdx:101:5     - Unknown word (enhance)      -- — enhance math with JavaScript
docs/docs/extending-mdx.mdx:104:5     - Unknown word (Please)       -- * Please use alpha sorting on
docs/docs/extending-mdx.mdx:109:9     - Unknown word (somewhat)     -- * — somewhat short description of
docs/docs/extending-mdx.mdx:114:47    - Unknown word (specifically) -- unified plugin that *specifically* works with MDX?
docs/docs/extending-mdx.mdx:115:3     - Unknown word (Please)       -- Please send a PR to add it
docs/docs/extending-mdx.mdx:118:4     - Unknown word (Using)        -- ## Using plugins
docs/docs/extending-mdx.mdx:120:37    - Unknown word (their)        -- plugins is encoded in their name:
docs/docs/extending-mdx.mdx:125:1     - Unknown word (Those)        -- Those fields expect lists
docs/docs/extending-mdx.mdx:127:8     - Unknown word (twoslash)     -- ```tsx twoslash
docs/docs/extending-mdx.mdx:129:14    - Unknown word (Katex)        -- import rehypeKatex from 'rehype-katex'
docs/docs/extending-mdx.mdx:12:3      - Unknown word (Extending)  -- # Extending MDX
docs/docs/extending-mdx.mdx:131:47    - Unknown word (footnotes)    -- remark-gfm' // Tables, footnotes, strikethrough, task
docs/docs/extending-mdx.mdx:149:44    - Unknown word (Katex)        -- rehypePlugins: [rehypeKatex], remarkPlugins: [remarkMath
docs/docs/extending-mdx.mdx:14:14     - Unknown word (explains)   -- This article explains how to extend MDX content
docs/docs/extending-mdx.mdx:14:49     - Unknown word (specifically) -- to extend MDX content—specifically, how to *transform*
docs/docs/extending-mdx.mdx:154:26    - Unknown word (Katex)        -- rehypePlugins: [[rehypeKatex, {strict: true, throwOnError
docs/docs/extending-mdx.mdx:159:4     - Unknown word (Creating)     -- ## Creating plugins
docs/docs/extending-mdx.mdx:15:27     - Unknown word (more)         -- content with plugins. {/* more */}
docs/docs/extending-mdx.mdx:161:1     - Unknown word (Creating)     -- Creating a plugin for MDX is
docs/docs/extending-mdx.mdx:161:30    - Unknown word (mostly)       -- a plugin for MDX is mostly the same as creating
docs/docs/extending-mdx.mdx:161:49    - Unknown word (creating)     -- is mostly the same as creating a plugin for remark
docs/docs/extending-mdx.mdx:163:1     - Unknown word (There)        -- There are several guides and
docs/docs/extending-mdx.mdx:163:11    - Unknown word (several)      -- There are several guides and recipes on
docs/docs/extending-mdx.mdx:163:19    - Unknown word (guides)       -- There are several guides and recipes on that
docs/docs/extending-mdx.mdx:163:52    - Unknown word (Learn)        -- recipes on that in [§ Learn on
docs/docs/extending-mdx.mdx:164:2     - Unknown word (unifiedjs)    -- `unifiedjs.com`][learn].
docs/docs/extending-mdx.mdx:167:35    - Unknown word (learn)        -- rchitecture][architecture] to learn how `@mdx-js/mdx` works
docs/docs/extending-mdx.mdx:167:4     - Unknown word (Architecture) -- [¶ Architecture][architecture] to learn
docs/docs/extending-mdx.mdx:168:33    - Unknown word (represent)    -- the node types that represent MDX specific features
docs/docs/extending-mdx.mdx:16:52     - Unknown word (props)        -- to pass components, props, and the layout.
docs/docs/extending-mdx.mdx:16:8      - Unknown word (Using)        -- See [§ Using MDX][use] for how to
docs/docs/extending-mdx.mdx:170:4     - Unknown word (Playground)   -- [§ Playground][playground].
docs/docs/extending-mdx.mdx:17:16     - Unknown word (started)      -- See [§ Getting started][start] for how to integrate
docs/docs/extending-mdx.mdx:17:43     - Unknown word (integrate)    -- started][start] for how to integrate MDX into your project
docs/docs/extending-mdx.mdx:17:8      - Unknown word (Getting)      -- See [§ Getting started][start] for
docs/docs/extending-mdx.mdx:24:4      - Unknown word (Using)        -- * [Using plugins](#using-plugins
docs/docs/extending-mdx.mdx:25:4      - Unknown word (Creating)     -- * [Creating plugins](#creating-plugins
docs/docs/extending-mdx.mdx:29:1      - Unknown word (There)        -- There are three extension
docs/docs/extending-mdx.mdx:29:39     - Unknown word (using)        -- extension points when using `@mdx-js/mdx` or one
docs/docs/extending-mdx.mdx:30:1      - Unknown word (integrations) -- integrations:
docs/docs/extending-mdx.mdx:33:26     - Unknown word (several)      -- Plugins that hook into several stages of compilation
docs/docs/extending-mdx.mdx:33:34     - Unknown word (stages)       -- that hook into several stages of compilation (see
docs/docs/extending-mdx.mdx:35:4      - Unknown word (recma)        -- [recma plugins][recma-plugins
docs/docs/extending-mdx.mdx:36:62     - Unknown word (Using)        -- imported at runtime (see [§ Using MDX][use])
docs/docs/extending-mdx.mdx:38:1      - Unknown word (Most)         -- Most of the time, these components
docs/docs/extending-mdx.mdx:38:19     - Unknown word (these)        -- Most of the time, these components and plugins
docs/docs/extending-mdx.mdx:38:56     - Unknown word (coupled)      -- and plugins are not coupled to MDX.
docs/docs/extending-mdx.mdx:39:24     - Unknown word (using)        -- For example, if you’re using React, then you can
docs/docs/extending-mdx.mdx:40:9      - Unknown word (Confetti)     -- [`<ReactConfetti />`][react-confetti
docs/docs/extending-mdx.mdx:43:1      - Unknown word (Sometimes)    -- Sometimes, we need specific components
docs/docs/extending-mdx.mdx:44:17     - Unknown word (those)        -- We’re compiling those here on this page.
docs/docs/extending-mdx.mdx:44:7      - Unknown word (compiling)    -- We’re compiling those here on this page
docs/docs/extending-mdx.mdx:48:11     - Unknown word (Scanlon)      -- * [`PaulieScanlon/mdx-embed`](https:/
docs/docs/extending-mdx.mdx:48:5      - Unknown word (Paulie)       -- * [`PaulieScanlon/mdx-embed`](https
docs/docs/extending-mdx.mdx:49:55     - Unknown word (integrates)   -- embedding 3rd party content, integrates w/
docs/docs/extending-mdx.mdx:51:15     - Unknown word (theme)        -- * [`system-ui/theme-ui`](https://github
docs/docs/extending-mdx.mdx:52:52     - Unknown word (integrates)   -- building consistent apps, integrates w/ MDX provider
docs/docs/extending-mdx.mdx:55:5      - Unknown word (Please)       -- * Please use alpha sorting on
docs/docs/extending-mdx.mdx:5:15      - Unknown word (wooorm)     -- {github: 'wooorm', name: 'Titus Wormer
docs/docs/extending-mdx.mdx:5:31      - Unknown word (Titus)      -- github: 'wooorm', name: 'Titus Wormer', twitter: 'wooorm
docs/docs/extending-mdx.mdx:5:37      - Unknown word (Wormer)     -- wooorm', name: 'Titus Wormer', twitter: 'wooorm'
docs/docs/extending-mdx.mdx:5:56      - Unknown word (wooorm)     -- Titus Wormer', twitter: 'wooorm'}
docs/docs/extending-mdx.mdx:60:9      - Unknown word (somewhat)     -- * — somewhat short description of
docs/docs/extending-mdx.mdx:65:42     - Unknown word (specifically) -- another component that *specifically* works with MDX?
docs/docs/extending-mdx.mdx:66:3      - Unknown word (Please)       -- Please send a PR to add it
docs/docs/extending-mdx.mdx:71:5      - Unknown word (also)         -- See also the [list of remark
docs/docs/extending-mdx.mdx:73:10     - Unknown word (recma)        -- [list of recma plugins][recma-plugins
docs/docs/extending-mdx.mdx:75:18     - Unknown word (recma)        -- * [`remcohaszing/recma-export-filepath`](https
docs/docs/extending-mdx.mdx:75:5      - Unknown word (remcohaszing) -- * [`remcohaszing/recma-export-filepath
docs/docs/extending-mdx.mdx:77:13     - Unknown word (recma)        -- * [`ipikuka/recma-mdx-change-props`](https
docs/docs/extending-mdx.mdx:77:30     - Unknown word (props)        -- ipikuka/recma-mdx-change-props`](https://github.com
docs/docs/extending-mdx.mdx:77:5      - Unknown word (ipikuka)      -- * [`ipikuka/recma-mdx-change-props
docs/docs/extending-mdx.mdx:78:28     - Unknown word (props)        -- changes the param as `_props` in the `_createMdxContent
docs/docs/extending-mdx.mdx:79:15     - Unknown word (recma)        -- * [`domdomegg/recma-mdx-displayname`](https
docs/docs/extending-mdx.mdx:79:5      - Unknown word (domdomegg)    -- * [`domdomegg/recma-mdx-displayname
docs/docs/extending-mdx.mdx:80:63     - Unknown word (switching)    -- components, to enable switching
docs/docs/extending-mdx.mdx:81:14     - Unknown word (production)   -- on them in production
docs/docs/extending-mdx.mdx:81:6      - Unknown word (them)         -- on them in production
docs/docs/extending-mdx.mdx:82:5      - Unknown word (ipikuka)      -- * [`ipikuka/recma-mdx-escape-missing
docs/docs/extending-mdx.mdx:83:64     - Unknown word (instead)      -- for missing components instead of
docs/docs/extending-mdx.mdx:84:3      - Unknown word (throwing)     -- throwing an error
docs/docs/extending-mdx.mdx:85:5      - Unknown word (remcohaszing) -- * [`remcohaszing/recma-mdx-is-mdx-component
docs/docs/extending-mdx.mdx:87:38     - Unknown word (props)        -- recma-nextjs-static-props`](https://github.com
docs/docs/extending-mdx.mdx:87:5      - Unknown word (remcohaszing) -- * [`remcohaszing/recma-nextjs-static
docs/docs/extending-mdx.mdx:88:25     - Unknown word (Props)        -- generate [`getStaticProps`](https://nextjs.org
docs/docs/extending-mdx.mdx:89:3      - Unknown word (exposing)     -- exposing top level identifiers
docs/docs/extending-mdx.mdx:90:5      - Unknown word (remcohaszing) -- * [`remcohaszing/rehype-mdx-code-props
docs/docs/extending-mdx.mdx:91:44     - Unknown word (props)        -- `meta` field as JSX props
docs/docs/extending-mdx.mdx:92:5      - Unknown word (remcohaszing) -- * [`remcohaszing/rehype-mdx-import-media
docs/docs/extending-mdx.mdx:95:5      - Unknown word (expose)       -- — expose the page title as a
docs/docs/extending-mdx.mdx:96:26     - Unknown word (chartjs)      -- pangelani/remark-mdx-chartjs`](https://github.com
docs/docs/extending-mdx.mdx:96:5      - Unknown word (pangelani)    -- * [`pangelani/remark-mdx-chartjs`
docs/docs/extending-mdx.mdx:97:13     - Unknown word (fenced)       -- — replace fenced code blocks with charts
docs/docs/extending-mdx.mdx:97:37     - Unknown word (charts)       -- fenced code blocks with charts using [`react-chartjs
docs/docs/extending-mdx.mdx:97:44     - Unknown word (using)        -- code blocks with charts using [`react-chartjs-2`]
docs/docs/extending-mdx.mdx:97:58     - Unknown word (chartjs)      -- charts using [`react-chartjs-2`](https://react-chartjs
docs/docs/getting-started.mdx:107:3     - Unknown word (optionally)    -- optionally install and configure
docs/docs/getting-started.mdx:114:16    - Unknown word (Theme)         -- * if you use **Theme UI**,
docs/docs/getting-started.mdx:116:37    - Unknown word (Theme)         -- your MDX content in a `<ThemeProvider />`
docs/docs/getting-started.mdx:121:18    - Unknown word (these)         -- For more info on these tools,
docs/docs/getting-started.mdx:121:5     - Unknown word (more)          -- For more info on these tools
docs/docs/getting-started.mdx:122:5     - Unknown word (their)         -- see their dedicated sections:
docs/docs/getting-started.mdx:128:4     - Unknown word (Theme)         -- [¶ Theme UI][jsx-runtime-theme
docs/docs/getting-started.mdx:12:11     - Unknown word (started)    -- # Getting started
docs/docs/getting-started.mdx:12:3      - Unknown word (Getting)    -- # Getting started
docs/docs/getting-started.mdx:133:21    - Unknown word (experience)    -- You can enhance the experience of using MDX by adding
docs/docs/getting-started.mdx:133:35    - Unknown word (using)         -- enhance the experience of using MDX by adding support
docs/docs/getting-started.mdx:133:48    - Unknown word (adding)        -- experience of using MDX by adding support of it to your
docs/docs/getting-started.mdx:133:9     - Unknown word (enhance)       -- You can enhance the experience of using
docs/docs/getting-started.mdx:137:20    - Unknown word (analyzer)      -- try [`mdx-js/mdx-analyzer`][mdx-analyzer]
docs/docs/getting-started.mdx:139:9     - Unknown word (jxnblk)        -- try [`jxnblk/vim-mdx-js`][vim-mdx
docs/docs/getting-started.mdx:140:16    - Unknown word (Sublime)       -- * if you use **Sublime Text**,
docs/docs/getting-started.mdx:141:20    - Unknown word (sublime)       -- try [`jonsuh/mdx-sublime`][mdx-sublime]
docs/docs/getting-started.mdx:141:9     - Unknown word (jonsuh)        -- try [`jonsuh/mdx-sublime`][mdx-sublime
docs/docs/getting-started.mdx:142:38    - Unknown word (Storm)         -- JetBrains IntelliJ/WebStorm**,
docs/docs/getting-started.mdx:145:12    - Unknown word (highlighting)  -- The syntax highlighting that powers our VS Code
docs/docs/getting-started.mdx:145:30    - Unknown word (powers)        -- syntax highlighting that powers our VS Code extension
docs/docs/getting-started.mdx:146:39    - Unknown word (maintained)    -- blocks on GitHub is maintained at
docs/docs/getting-started.mdx:147:3     - Unknown word (wooorm)        -- [`wooorm/markdown-tm-language
docs/docs/getting-started.mdx:14:14     - Unknown word (explains)   -- This article explains how to integrate MDX
docs/docs/getting-started.mdx:14:30     - Unknown word (integrate)  -- article explains how to integrate MDX into your project
docs/docs/getting-started.mdx:15:4      - Unknown word (shows)      -- It shows how to use MDX with
docs/docs/getting-started.mdx:15:62     - Unknown word (choice)     -- bundler and JSX runtime of choice. {/* more */}
docs/docs/getting-started.mdx:15:74     - Unknown word (more)       -- runtime of choice. {/* more */}
docs/docs/getting-started.mdx:160:22    - Unknown word (automatically) -- …TypeScript should automatically pick it up:
docs/docs/getting-started.mdx:162:9     - Unknown word (twoslash)      -- ```js twoslash path="example.js"
docs/docs/getting-started.mdx:16:4      - Unknown word (understand) -- To understand how the MDX format works
docs/docs/getting-started.mdx:173:21    - Unknown word (must)          -- the `JSX` namespace must be typed.
docs/docs/getting-started.mdx:174:32    - Unknown word (using)         -- done by installing and using the types of your framework
docs/docs/getting-started.mdx:179:14    - Unknown word (also)          -- This package also exports several useful
docs/docs/getting-started.mdx:179:27    - Unknown word (several)       -- package also exports several useful types,
docs/docs/getting-started.mdx:179:35    - Unknown word (useful)        -- also exports several useful types,
docs/docs/getting-started.mdx:17:4      - Unknown word (recommend)  -- we recommend that you start with
docs/docs/getting-started.mdx:180:31    - Unknown word (represents)    -- MDXComponents` which represents the `components` prop
docs/docs/getting-started.mdx:181:16    - Unknown word (them)          -- You can import them like so:
docs/docs/getting-started.mdx:183:7     - Unknown word (twoslash)      -- ```ts twoslash path="example.ts"
docs/docs/getting-started.mdx:189:10    - Unknown word (programming)   -- MDX is a programming language.
docs/docs/getting-started.mdx:18:8      - Unknown word (Using)      -- See [§ Using MDX][use] when you’re
docs/docs/getting-started.mdx:190:19    - Unknown word (authors)       -- If you trust your authors,
docs/docs/getting-started.mdx:197:11    - Unknown word (want)          -- you might want to look into using
docs/docs/getting-started.mdx:197:29    - Unknown word (using)         -- might want to look into using `<iframe>`s with `sandbox
docs/docs/getting-started.mdx:197:5     - Unknown word (might)         -- you might want to look into using
docs/docs/getting-started.mdx:199:10    - Unknown word (doesn’t)       -- and that doesn’t seem to be 100%.
docs/docs/getting-started.mdx:199:18    - Unknown word (seem)          -- and that doesn’t seem to be 100%.
docs/docs/getting-started.mdx:201:16    - Unknown word (interesting)   -- [vm2][] sounds interesting.
docs/docs/getting-started.mdx:201:9     - Unknown word (sounds)        -- [vm2][] sounds interesting.
docs/docs/getting-started.mdx:202:25    - Unknown word (also)          -- you should probably also sandbox the whole OS
docs/docs/getting-started.mdx:202:51    - Unknown word (using)         -- sandbox the whole OS using Docker or similar,
docs/docs/getting-started.mdx:202:67    - Unknown word (similar)       -- whole OS using Docker or similar,
docs/docs/getting-started.mdx:203:1     - Unknown word (perform)       -- perform rate limiting,
docs/docs/getting-started.mdx:204:10    - Unknown word (sure)          -- and make sure processes can be killed
docs/docs/getting-started.mdx:204:44    - Unknown word (taking)        -- processes can be killed when taking too long.
docs/docs/getting-started.mdx:206:4     - Unknown word (Integrations)  -- ## Integrations
docs/docs/getting-started.mdx:215:9     - Unknown word (twoslash)      -- ```js twoslash path="example.js"
docs/docs/getting-started.mdx:22:4      - Unknown word (Prerequisites) -- * [Prerequisites](#prerequisites)
docs/docs/getting-started.mdx:230:35    - Unknown word (depending)     -- your JSX runtime][jsx] depending on which one (React
docs/docs/getting-started.mdx:233:8     - Unknown word (more)          -- To use more modern JavaScript features
docs/docs/getting-started.mdx:237:11    - Unknown word (might)         -- which you might be using,
docs/docs/getting-started.mdx:237:20    - Unknown word (using)         -- which you might be using,
docs/docs/getting-started.mdx:238:5     - Unknown word (more)          -- for more info.
docs/docs/getting-started.mdx:245:9     - Unknown word (twoslash)      -- ```js twoslash path="rollup.config
docs/docs/getting-started.mdx:261:12    - Unknown word (Also)          -- // Also run on what used to
docs/docs/getting-started.mdx:274:35    - Unknown word (depending)     -- your JSX runtime][jsx] depending on which one (React
docs/docs/getting-started.mdx:289:9     - Unknown word (twoslash)      -- ```js twoslash path="webpack.config
docs/docs/getting-started.mdx:291:38    - Unknown word (loader)        -- Options} from '@mdx-js/loader'
docs/docs/getting-started.mdx:29:4      - Unknown word (Integrations)  -- * [Integrations](#integrations)
docs/docs/getting-started.mdx:305:14    - Unknown word (loader)        -- {loader: 'babel-loader', options
docs/docs/getting-started.mdx:307:15    - Unknown word (loader)        -- loader: '@mdx-js/loader',
docs/docs/getting-started.mdx:323:35    - Unknown word (depending)     -- your JSX runtime][jsx] depending on which one (React
docs/docs/getting-started.mdx:32:6      - Unknown word (Compilers)     -- * [Compilers](#compilers)
docs/docs/getting-started.mdx:33:11     - Unknown word (generators)    -- * [Site generators](#site-generators)
docs/docs/getting-started.mdx:356:35    - Unknown word (depending)     -- your JSX runtime][jsx] depending on which one (React
docs/docs/getting-started.mdx:364:7     - Unknown word (must)          -- you must force `@mdx-js/rollup
docs/docs/getting-started.mdx:36:4      - Unknown word (Further)       -- * [Further reading](#further-reading
docs/docs/getting-started.mdx:374:8     - Unknown word (enforce)       -- {enforce: 'pre', ...mdx({/* jsxImportS
docs/docs/getting-started.mdx:386:5     - Unknown word (Compilers)     -- ### Compilers
docs/docs/getting-started.mdx:38:4      - Unknown word (Prerequisites) -- ## Prerequisites
docs/docs/getting-started.mdx:408:18    - Unknown word (tells)         -- * Plugin that tells Babel to use a different
docs/docs/getting-started.mdx:408:39    - Unknown word (different)     -- tells Babel to use a different parser.
docs/docs/getting-started.mdx:40:5      - Unknown word (relies)        -- MDX relies on JSX,
docs/docs/getting-started.mdx:415:18    - Unknown word (handles)       -- * Parser that handles MDX with `@mdx-js/mdx
docs/docs/getting-started.mdx:415:53    - Unknown word (passes)        -- with `@mdx-js/mdx` and passes other things through
docs/docs/getting-started.mdx:428:39    - Unknown word (parsers)       -- does not support async parsers, unfortunately.
docs/docs/getting-started.mdx:428:48    - Unknown word (unfortunately) -- support async parsers, unfortunately.
docs/docs/getting-started.mdx:431:10    - Unknown word (recma)         -- {recmaPlugins: [recmaBabel
docs/docs/getting-started.mdx:431:25    - Unknown word (recma)         -- {recmaPlugins: [recmaBabel] /* jsxImportSource
docs/docs/getting-started.mdx:440:9     - Unknown word (recma)         -- * A “recma” plugin is a unified
docs/docs/getting-started.mdx:441:24    - Unknown word (much)          -- * `@mdx-js/mdx` and much of the JS ecosystem
docs/docs/getting-started.mdx:441:39    - Unknown word (ecosystem)     -- and much of the JS ecosystem but not Babel).
docs/docs/getting-started.mdx:442:18    - Unknown word (defines)       -- * This plugin defines `'estree-to-babel'`
docs/docs/getting-started.mdx:443:12    - Unknown word (means)         -- * which means that the resulting Babel
docs/docs/getting-started.mdx:447:12    - Unknown word (recma)         -- function recmaBabel() {
docs/docs/getting-started.mdx:448:39    - Unknown word (similar)       -- error: `Program` is similar enough to a unist node
docs/docs/getting-started.mdx:47:39     - Unknown word (later)         -- js] version of 16 or later is needed to use them
docs/docs/getting-started.mdx:47:62     - Unknown word (them)          -- later is needed to use them.
docs/docs/getting-started.mdx:480:18    - Unknown word (tells)         -- * Plugin that tells Babel to use a different
docs/docs/getting-started.mdx:480:39    - Unknown word (different)     -- tells Babel to use a different parser.
docs/docs/getting-started.mdx:487:18    - Unknown word (handles)       -- * Parser that handles MDX with `@mdx-js/mdx
docs/docs/getting-started.mdx:487:53    - Unknown word (passes)        -- with `@mdx-js/mdx` and passes other things through
docs/docs/getting-started.mdx:48:18     - Unknown word (also)          -- Our packages are also [ESM only][github-gist
docs/docs/getting-started.mdx:500:39    - Unknown word (parsers)       -- does not support async parsers, unfortunately.
docs/docs/getting-started.mdx:500:48    - Unknown word (unfortunately) -- support async parsers, unfortunately.
docs/docs/getting-started.mdx:503:10    - Unknown word (recma)         -- {recmaPlugins: [recmaBabel
docs/docs/getting-started.mdx:513:24    - Unknown word (much)          -- * `@mdx-js/mdx` and much of the JS ecosystem
docs/docs/getting-started.mdx:513:39    - Unknown word (ecosystem)     -- and much of the JS ecosystem but not Babel).
docs/docs/getting-started.mdx:514:18    - Unknown word (defines)       -- * This plugin defines `'estree-to-babel'`
docs/docs/getting-started.mdx:515:12    - Unknown word (means)         -- * which means that the resulting Babel
docs/docs/getting-started.mdx:51:13     - Unknown word (Using)         -- **Note**: Using Rust instead of Node
docs/docs/getting-started.mdx:51:24     - Unknown word (instead)       -- *Note**: Using Rust instead of Node.js?
docs/docs/getting-started.mdx:520:39    - Unknown word (similar)       -- error: `Program` is similar enough to a unist node
docs/docs/getting-started.mdx:52:9      - Unknown word (mdxjs)         -- Try [`mdxjs-rs`][mdxjs-rs]!
docs/docs/getting-started.mdx:539:27    - Unknown word (must)          -- Note that a filename must be set for our plugin
docs/docs/getting-started.mdx:539:57    - Unknown word (know)          -- set for our plugin to know it’s MDX instead of
docs/docs/getting-started.mdx:539:71    - Unknown word (instead)       -- plugin to know it’s MDX instead of JS.
docs/docs/getting-started.mdx:549:43    - Unknown word (instead)       -- use Rollup or webpack instead of Babel directly as
docs/docs/getting-started.mdx:549:60    - Unknown word (directly)      -- webpack instead of Babel directly as that
docs/docs/getting-started.mdx:550:1     - Unknown word (gives)         -- gives the best interface.
docs/docs/getting-started.mdx:551:7     - Unknown word (possible)      -- It is possible to use `@mdx-js/mdx
docs/docs/getting-started.mdx:551:75    - Unknown word (skips)         -- a bit faster, as it skips
docs/docs/getting-started.mdx:552:65    - Unknown word (anyway)        -- parsing, if Babel is used anyway.
docs/docs/getting-started.mdx:555:5     - Unknown word (those)         -- but those only turn internal flags
docs/docs/getting-started.mdx:556:27    - Unknown word (different)     -- does support setting a different parser.
docs/docs/getting-started.mdx:557:15    - Unknown word (lets)          -- Which in turn lets us choose whether to
docs/docs/getting-started.mdx:557:23    - Unknown word (choose)        -- Which in turn lets us choose whether to use the
docs/docs/getting-started.mdx:557:30    - Unknown word (whether)       -- turn lets us choose whether to use the `@mdx-js
docs/docs/getting-started.mdx:560:10    - Unknown word (generators)    -- ### Site generators
docs/docs/getting-started.mdx:567:17    - Unknown word (lets)          -- This base setup lets you import markdown
docs/docs/getting-started.mdx:569:35    - Unknown word (guide)         -- Framework components guide][astro-framework-components
docs/docs/getting-started.mdx:570:31    - Unknown word (frameworks)    -- use components from frameworks in your MDX files.
docs/docs/getting-started.mdx:578:32    - Unknown word (guide)         -- Docusaurus’ MDX and React guide][docusaurus-markdown
docs/docs/getting-started.mdx:581:6     - Unknown word (Gatsby)        -- #### Gatsby
docs/docs/getting-started.mdx:583:2     - Unknown word (Gatsby)        -- [Gatsby][] has its own plugin
docs/docs/getting-started.mdx:584:69    - Unknown word (Gatsby)        -- how to use MDX with Gatsby.
docs/docs/getting-started.mdx:584:7     - Unknown word (gatsby)        -- See [`gatsby-plugin-mdx`][gatsby
docs/docs/getting-started.mdx:59:26     - Unknown word (compiled)      -- is a language that’s compiled to JavaScript.
docs/docs/getting-started.mdx:5:15      - Unknown word (wooorm)     -- {github: 'wooorm', name: 'Titus Wormer
docs/docs/getting-started.mdx:5:31      - Unknown word (Titus)      -- github: 'wooorm', name: 'Titus Wormer', twitter: 'wooorm
docs/docs/getting-started.mdx:5:37      - Unknown word (Wormer)     -- wooorm', name: 'Titus Wormer', twitter: 'wooorm'
docs/docs/getting-started.mdx:5:56      - Unknown word (wooorm)     -- Titus Wormer', twitter: 'wooorm'}
docs/docs/getting-started.mdx:601:29    - Unknown word (pages)         -- Support MDX files as pages:
docs/docs/getting-started.mdx:60:5      - Unknown word (also)          -- (We also compile regular markdown
docs/docs/getting-started.mdx:612:68    - Unknown word (inject)        -- react` with Next to inject
docs/docs/getting-started.mdx:614:53    - Unknown word (instead)       -- `src/` or `/`) file instead.
docs/docs/getting-started.mdx:615:6     - Unknown word (Configuring)   -- See [Configuring MDX on `nextjs.org`
docs/docs/getting-started.mdx:61:24     - Unknown word (started)       -- The easiest way to get started is to use an integration
docs/docs/getting-started.mdx:61:5      - Unknown word (easiest)       -- The easiest way to get started is
docs/docs/getting-started.mdx:624:17    - Unknown word (official)      -- **Note**: the official Parcel plugin is currently
docs/docs/getting-started.mdx:624:43    - Unknown word (currently)     -- official Parcel plugin is currently not maintained.
docs/docs/getting-started.mdx:624:57    - Unknown word (maintained)    -- plugin is currently not maintained.
docs/docs/getting-started.mdx:625:9     - Unknown word (maintained)    -- For a maintained alternative,
docs/docs/getting-started.mdx:646:9     - Unknown word (optionally)    -- You can optionally install and configure
docs/docs/getting-started.mdx:647:33    - Unknown word (passing)       -- context based component passing.
docs/docs/getting-started.mdx:652:11    - Unknown word (might)         -- which you might be using,
docs/docs/getting-started.mdx:668:57    - Unknown word (getting)       -- with Ink/twoslash/react getting different versions of
docs/docs/getting-started.mdx:668:65    - Unknown word (different)     -- twoslash/react getting different versions of React?
docs/docs/getting-started.mdx:672:42    - Unknown word (Assumes)       -- from './example.mdx' // Assumes an integration is used
docs/docs/getting-started.mdx:696:59    - Unknown word (those)         -- components] for what those are and Ink’s
docs/docs/getting-started.mdx:697:14    - Unknown word (they)          -- docs on what they can be replaced with
docs/docs/getting-started.mdx:697:26    - Unknown word (replaced)      -- on what they can be replaced with.
docs/docs/getting-started.mdx:69:35     - Unknown word (loader)        -- configure [`@mdx-js/loader`][mdx-loader]
docs/docs/getting-started.mdx:716:9     - Unknown word (optionally)    -- You can optionally install and configure
docs/docs/getting-started.mdx:717:33    - Unknown word (passing)       -- context based component passing.
docs/docs/getting-started.mdx:71:9      - Unknown word (also)          -- You can also use MDX without bundlers
docs/docs/getting-started.mdx:721:11    - Unknown word (might)         -- which you might be using,
docs/docs/getting-started.mdx:728:33    - Unknown word (passing)       -- context based component passing.
docs/docs/getting-started.mdx:732:11    - Unknown word (might)         -- which you might be using,
docs/docs/getting-started.mdx:735:6     - Unknown word (Theme)         -- #### Theme UI
docs/docs/getting-started.mdx:737:2     - Unknown word (Theme)         -- [Theme UI][theme-ui] has its
docs/docs/getting-started.mdx:738:8     - Unknown word (theme)         -- See [`@theme-ui/mdx`][theme-ui-mdx
docs/docs/getting-started.mdx:74:18     - Unknown word (loader)        -- [`@mdx-js/node-loader`][mdx-node-loader]
docs/docs/getting-started.mdx:776:33    - Unknown word (passing)       -- context based component passing.
docs/docs/getting-started.mdx:79:18     - Unknown word (these)         -- For more info on these tools,
docs/docs/getting-started.mdx:79:5      - Unknown word (more)          -- For more info on these tools
docs/docs/getting-started.mdx:80:5      - Unknown word (their)         -- see their dedicated sections:
docs/docs/getting-started.mdx:817:17    - Unknown word (bunfig)        -- ```toml path="bunfig.toml"
docs/docs/getting-started.mdx:831:4     - Unknown word (Further)       -- ## Further reading
docs/docs/getting-started.mdx:833:10    - Unknown word (want)          -- * If you want to use MDX content in
docs/docs/getting-started.mdx:834:10    - Unknown word (Using)         -- see [§ Using MDX][use]
docs/docs/getting-started.mdx:835:13    - Unknown word (getting)       -- * If you’re getting errors integrating MDX
docs/docs/getting-started.mdx:835:28    - Unknown word (integrating)   -- you’re getting errors integrating MDX,
docs/docs/getting-started.mdx:836:10    - Unknown word (Troubleshooting) -- see [§ Troubleshooting MDX][trouble] or [§
docs/docs/getting-started.mdx:90:51     - Unknown word (itself)        -- integration or `@mdx-js/mdx` itself,
docs/docs/getting-started.mdx:95:3      - Unknown word (optionally)    -- optionally install and configure
docs/docs/getting-started.mdx:99:3      - Unknown word (optionally)    -- optionally install and configure
docs/docs/index.mdx:16:24     - Unknown word (Contributors) -- author: [{name: 'MDX Contributors'}],
docs/docs/index.mdx:24:1      - Unknown word (These)        -- These docs explain the core
docs/docs/index.mdx:24:12     - Unknown word (explain)      -- These docs explain the core concepts of
docs/docs/index.mdx:26:11     - Unknown word (them)         -- to extend them.
docs/docs/index.mdx:27:17     - Unknown word (these)        -- Reading through these should give you a good
docs/docs/index.mdx:27:41     - Unknown word (good)         -- these should give you a good understanding of MDX
docs/docs/index.mdx:27:46     - Unknown word (understanding) -- should give you a good understanding of MDX.
docs/docs/index.mdx:31:28     - Unknown word (props)         -- const navigationTree = props.navigationTree
docs/docs/index.mdx:7:15      - Unknown word (Props)      -- * @typedef Props
docs/docs/troubleshooting-mdx.mdx:100:15    - Unknown word (occur)           -- Problems that occur when using MDX typically
docs/docs/troubleshooting-mdx.mdx:100:26    - Unknown word (using)           -- Problems that occur when using MDX typically relate
docs/docs/troubleshooting-mdx.mdx:100:36    - Unknown word (typically)       -- occur when using MDX typically relate to the APIs of
docs/docs/troubleshooting-mdx.mdx:100:46    - Unknown word (relate)          -- using MDX typically relate to the APIs of
docs/docs/troubleshooting-mdx.mdx:101:43    - Unknown word (them)            -- packages/) and how to use them.
docs/docs/troubleshooting-mdx.mdx:102:1     - Unknown word (Please)          -- Please see the documentation
docs/docs/troubleshooting-mdx.mdx:103:1     - Unknown word (using)           -- using for more info and examples
docs/docs/troubleshooting-mdx.mdx:103:11    - Unknown word (more)            -- using for more info and examples.
docs/docs/troubleshooting-mdx.mdx:105:33    - Unknown word (longer)         -- options.renderer` is no longer supported ``
docs/docs/troubleshooting-mdx.mdx:107:15    - Unknown word (thrown)         -- This error is thrown by [`@mdx-js/loader
docs/docs/troubleshooting-mdx.mdx:107:35    - Unknown word (loader)         -- thrown by [`@mdx-js/loader`](/packages/loader/
docs/docs/troubleshooting-mdx.mdx:108:1     - Unknown word (loader)         -- loader.
docs/docs/troubleshooting-mdx.mdx:109:8     - Unknown word (introduced)     -- It was introduced in version 2 to help
docs/docs/troubleshooting-mdx.mdx:111:52    - Unknown word (injected)       -- arbitrary text to be injected before each compiled
docs/docs/troubleshooting-mdx.mdx:111:73    - Unknown word (compiled)       -- injected before each compiled
docs/docs/troubleshooting-mdx.mdx:113:10    - Unknown word (typically)      -- This was typically used to support frameworks
docs/docs/troubleshooting-mdx.mdx:113:36    - Unknown word (frameworks)     -- typically used to support frameworks other than React such
docs/docs/troubleshooting-mdx.mdx:115:20    - Unknown word (recma)          -- can be added with `recmaPlugins`.
docs/docs/troubleshooting-mdx.mdx:116:37    - Unknown word (approach)       -- 2 uses an AST based approach, it is no longer feasible
docs/docs/troubleshooting-mdx.mdx:116:56    - Unknown word (longer)         -- based approach, it is no longer feasible to
docs/docs/troubleshooting-mdx.mdx:116:63    - Unknown word (feasible)       -- approach, it is no longer feasible to
docs/docs/troubleshooting-mdx.mdx:119:1     - Unknown word (Please)         -- Please see [¶ Preact in § Getting
docs/docs/troubleshooting-mdx.mdx:119:27    - Unknown word (Getting)        -- Please see [¶ Preact in § Getting started](/docs/getting
docs/docs/troubleshooting-mdx.mdx:119:35    - Unknown word (started)        -- Preact in § Getting started](/docs/getting-started
docs/docs/troubleshooting-mdx.mdx:121:30    - Unknown word (Extending)      -- Creating plugins in § Extending MDX](/docs/extending
docs/docs/troubleshooting-mdx.mdx:121:8     - Unknown word (Creating)       -- See [¶ Creating plugins in § Extending
docs/docs/troubleshooting-mdx.mdx:124:8     - Unknown word (Incorrect)      -- ### `` Incorrect `format: 'detect'`
docs/docs/troubleshooting-mdx.mdx:128:39    - Unknown word (follows)        -- message in MDX 2 is as follows:
docs/docs/troubleshooting-mdx.mdx:131:1     - Unknown word (Incorrect)      -- Incorrect `format: 'detect'`:
docs/docs/troubleshooting-mdx.mdx:131:103   - Unknown word (detecting)      -- it does not support detecting the format
docs/docs/troubleshooting-mdx.mdx:131:61    - Unknown word (either)         -- createProcessor` can support either `md` or `mdx`; it does
docs/docs/troubleshooting-mdx.mdx:140:15    - Unknown word (thrown)         -- This error is thrown by [`@mdx-js/mdx`](
docs/docs/troubleshooting-mdx.mdx:141:61    - Unknown word (introduced)     -- `format` option was introduced.
docs/docs/troubleshooting-mdx.mdx:141:8     - Unknown word (introduced)     -- It was introduced in version 2 when the
docs/docs/troubleshooting-mdx.mdx:143:55    - Unknown word (allows)         -- configured with `'detect'`, allows inferring whether a
docs/docs/troubleshooting-mdx.mdx:143:62    - Unknown word (inferring)      -- with `'detect'`, allows inferring whether a
docs/docs/troubleshooting-mdx.mdx:143:72    - Unknown word (whether)        -- `, allows inferring whether a
docs/docs/troubleshooting-mdx.mdx:144:16    - Unknown word (plain)          -- file is MDX or plain markdown.
docs/docs/troubleshooting-mdx.mdx:145:51    - Unknown word (differently)    -- plugins are configured differently, and with
docs/docs/troubleshooting-mdx.mdx:146:1     - Unknown word (different)      -- different options.
docs/docs/troubleshooting-mdx.mdx:147:9     - Unknown word (impossible)     -- This is impossible with `createProcessor
docs/docs/troubleshooting-mdx.mdx:149:39    - Unknown word (please)         -- format of passed files, please either use `compile
docs/docs/troubleshooting-mdx.mdx:149:46    - Unknown word (either)         -- passed files, please either use `compile` from
docs/docs/troubleshooting-mdx.mdx:150:29    - Unknown word (integrations)   -- js/mdx` or one of the integrations.
docs/docs/troubleshooting-mdx.mdx:154:15    - Unknown word (thrown)         -- This error is thrown by [`@mdx-js/mdx`](
docs/docs/troubleshooting-mdx.mdx:155:8     - Unknown word (introduced)     -- It was introduced in version 2 when the
docs/docs/troubleshooting-mdx.mdx:156:30    - Unknown word (were)           -- pragmaImportSource` options were introduced.
docs/docs/troubleshooting-mdx.mdx:156:35    - Unknown word (introduced)     -- gmaImportSource` options were introduced.
docs/docs/troubleshooting-mdx.mdx:158:15    - Unknown word (thrown)         -- This error is thrown when `jsxRuntime` is
docs/docs/troubleshooting-mdx.mdx:15:17     - Unknown word (trouble)    -- **Note**: Had trouble with something that
docs/docs/troubleshooting-mdx.mdx:15:45     - Unknown word (wasn’t)     -- with something that wasn’t explained here but should
docs/docs/troubleshooting-mdx.mdx:15:52     - Unknown word (explained)  -- something that wasn’t explained here but should be?
docs/docs/troubleshooting-mdx.mdx:160:42    - Unknown word (falsey)         -- pragma` is defined as a falsey value (the default is
docs/docs/troubleshooting-mdx.mdx:169:23    - Unknown word (these)          -- You can keep on using these options, but expect
docs/docs/troubleshooting-mdx.mdx:169:49    - Unknown word (them)           -- options, but expect them to be removed in the
docs/docs/troubleshooting-mdx.mdx:16:17     - Unknown word (know)       -- Please let us know.
docs/docs/troubleshooting-mdx.mdx:16:3      - Unknown word (Please)     -- Please let us know.
docs/docs/troubleshooting-mdx.mdx:172:11    - Unknown word (frameworks)     -- All major frameworks currently support the
docs/docs/troubleshooting-mdx.mdx:172:22    - Unknown word (currently)      -- All major frameworks currently support the automatic
docs/docs/troubleshooting-mdx.mdx:173:44    - Unknown word (comes)          -- from MDX perspective, comes with several potential
docs/docs/troubleshooting-mdx.mdx:173:55    - Unknown word (several)        -- perspective, comes with several potential
docs/docs/troubleshooting-mdx.mdx:173:63    - Unknown word (potential)      -- comes with several potential
docs/docs/troubleshooting-mdx.mdx:176:21    - Unknown word (strongly)       -- Because of that, we strongly recommend using an automatic
docs/docs/troubleshooting-mdx.mdx:176:30    - Unknown word (recommend)      -- of that, we strongly recommend using an automatic JSX
docs/docs/troubleshooting-mdx.mdx:177:1     - Unknown word (considering)    -- considering removing support for
docs/docs/troubleshooting-mdx.mdx:177:13    - Unknown word (removing)       -- considering removing support for the classic
docs/docs/troubleshooting-mdx.mdx:17:10     - Unknown word (Contribute) -- See [§ Contribute][contribute] for how
docs/docs/troubleshooting-mdx.mdx:183:18    - Unknown word (jsxs)           -- ### `` Expected `jsxs` given to `evaluate
docs/docs/troubleshooting-mdx.mdx:185:1     - Unknown word (These)          -- These errors are thrown by
docs/docs/troubleshooting-mdx.mdx:185:18    - Unknown word (thrown)         -- These errors are thrown by [`@mdx-js/mdx`](
docs/docs/troubleshooting-mdx.mdx:187:1     - Unknown word (They)           -- They were introduced in version
docs/docs/troubleshooting-mdx.mdx:187:6     - Unknown word (were)           -- They were introduced in version
docs/docs/troubleshooting-mdx.mdx:187:72    - Unknown word (were)           -- and `evaluateSync`) were
docs/docs/troubleshooting-mdx.mdx:190:37    - Unknown word (frameworks)     -- supports React and other frameworks.
docs/docs/troubleshooting-mdx.mdx:191:11    - Unknown word (frameworks)     -- But these frameworks must support an automatic
docs/docs/troubleshooting-mdx.mdx:191:22    - Unknown word (must)           -- But these frameworks must support an automatic
docs/docs/troubleshooting-mdx.mdx:191:5     - Unknown word (these)          -- But these frameworks must support
docs/docs/troubleshooting-mdx.mdx:191:65    - Unknown word (exposes)        -- automatic JSX runtime that exposes these
docs/docs/troubleshooting-mdx.mdx:191:73    - Unknown word (these)          -- runtime that exposes these
docs/docs/troubleshooting-mdx.mdx:193:11    - Unknown word (getting)        -- If you’re getting this error, that means
docs/docs/troubleshooting-mdx.mdx:193:36    - Unknown word (means)          -- getting this error, that means that either a) the framework
docs/docs/troubleshooting-mdx.mdx:193:47    - Unknown word (either)         -- error, that means that either a) the framework does
docs/docs/troubleshooting-mdx.mdx:194:58    - Unknown word (passing)        -- or b) that you’re not passing them correctly
docs/docs/troubleshooting-mdx.mdx:194:71    - Unknown word (correctly)      -- re not passing them correctly
docs/docs/troubleshooting-mdx.mdx:197:1     - Unknown word (Please)         -- Please see [`evaluate` in
docs/docs/troubleshooting-mdx.mdx:198:29    - Unknown word (these)          -- examples on how to pass these values.
docs/docs/troubleshooting-mdx.mdx:202:37    - Unknown word (follows)        -- message in MDX is as follows:
docs/docs/troubleshooting-mdx.mdx:205:109   - Unknown word (generating)     -- import.meta.url` when generating `function-body`
docs/docs/troubleshooting-mdx.mdx:208:44    - Unknown word (specifically)   -- when MDX runs that is specifically compiled with
docs/docs/troubleshooting-mdx.mdx:208:57    - Unknown word (compiled)      -- that is specifically compiled with
docs/docs/troubleshooting-mdx.mdx:209:67    - Unknown word (evluate)       -- function-body'` option to evluate
docs/docs/troubleshooting-mdx.mdx:20:3      - Unknown word (Troubleshooting) -- # Troubleshooting MDX
docs/docs/troubleshooting-mdx.mdx:210:1     - Unknown word (somewhere)     -- somewhere later, and `import.meta
docs/docs/troubleshooting-mdx.mdx:210:11    - Unknown word (later)         -- somewhere later, and `import.meta.url
docs/docs/troubleshooting-mdx.mdx:211:1     - Unknown word (These)         -- These JavaScript features
docs/docs/troubleshooting-mdx.mdx:211:27    - Unknown word (depend)        -- JavaScript features depend on a particular URL
docs/docs/troubleshooting-mdx.mdx:211:39    - Unknown word (particular)    -- features depend on a particular URL to run from, which
docs/docs/troubleshooting-mdx.mdx:212:18    - Unknown word (correct)       -- available or not correct when running a function
docs/docs/troubleshooting-mdx.mdx:213:4     - Unknown word (solve)         -- To solve this, pass a `baseUrl
docs/docs/troubleshooting-mdx.mdx:214:1     - Unknown word (Likely)        -- Likely set to `import.meta
docs/docs/troubleshooting-mdx.mdx:218:15    - Unknown word (occur)         -- Problems that occur when writing MDX typically
docs/docs/troubleshooting-mdx.mdx:218:38    - Unknown word (typically)     -- occur when writing MDX typically have relate to how to
docs/docs/troubleshooting-mdx.mdx:218:53    - Unknown word (relate)        -- writing MDX typically have relate to how to combine
docs/docs/troubleshooting-mdx.mdx:221:3     - Unknown word (forgiving)     -- **forgiving** (what you type may
docs/docs/troubleshooting-mdx.mdx:221:38    - Unknown word (exactly)       -- what you type may not exactly work but it won’t crash
docs/docs/troubleshooting-mdx.mdx:221:64    - Unknown word (crash)         -- exactly work but it won’t crash) whereas
docs/docs/troubleshooting-mdx.mdx:221:71    - Unknown word (whereas)       -- but it won’t crash) whereas
docs/docs/troubleshooting-mdx.mdx:222:28    - Unknown word (insensitive)   -- JavaScript is **whitespace insensitive** and **unforgiving
docs/docs/troubleshooting-mdx.mdx:222:48    - Unknown word (unforgiving)   -- insensitive** and **unforgiving** (it does crash on
docs/docs/troubleshooting-mdx.mdx:222:71    - Unknown word (crash)         -- unforgiving** (it does crash on
docs/docs/troubleshooting-mdx.mdx:223:1     - Unknown word (typos)         -- typos).
docs/docs/troubleshooting-mdx.mdx:225:18    - Unknown word (fall)          -- Errors typically fall in these three categories
docs/docs/troubleshooting-mdx.mdx:225:26    - Unknown word (these)         -- Errors typically fall in these three categories:
docs/docs/troubleshooting-mdx.mdx:225:8     - Unknown word (typically)     -- Errors typically fall in these three
docs/docs/troubleshooting-mdx.mdx:228:51    - Unknown word (plain)         -- if you mean them as plain text instead of JS(X
docs/docs/troubleshooting-mdx.mdx:228:62    - Unknown word (instead)       -- mean them as plain text instead of JS(X)
docs/docs/troubleshooting-mdx.mdx:229:15    - Unknown word (interleaving)  -- * **Incorrect interleaving**
docs/docs/troubleshooting-mdx.mdx:229:5     - Unknown word (Incorrect)     -- * **Incorrect interleaving**
docs/docs/troubleshooting-mdx.mdx:22:14     - Unknown word (goes)            -- This article goes through several common
docs/docs/troubleshooting-mdx.mdx:22:27     - Unknown word (several)         -- article goes through several common problems and
docs/docs/troubleshooting-mdx.mdx:22:67     - Unknown word (might)           -- problems and errors that might occur
docs/docs/troubleshooting-mdx.mdx:22:73     - Unknown word (occur)           -- and errors that might occur
docs/docs/troubleshooting-mdx.mdx:231:6     - Unknown word (Interleaving)  -- [¶ Interleaving in § What is MDX?](
docs/docs/troubleshooting-mdx.mdx:232:5     - Unknown word (Broken)        -- * **Broken JavaScript**
docs/docs/troubleshooting-mdx.mdx:233:10    - Unknown word (sure)          -- — Make sure the JavaScript you write
docs/docs/troubleshooting-mdx.mdx:239:4     - Unknown word (occurs)        -- It occurs when the keywords `import
docs/docs/troubleshooting-mdx.mdx:23:21     - Unknown word (more)            -- when using MDX. {/* more */}
docs/docs/troubleshooting-mdx.mdx:23:6      - Unknown word (using)           -- when using MDX. {/* more */}
docs/docs/troubleshooting-mdx.mdx:240:10    - Unknown word (they)          -- line but they are not followed by
docs/docs/troubleshooting-mdx.mdx:240:23    - Unknown word (followed)      -- line but they are not followed by valid JavaScript
docs/docs/troubleshooting-mdx.mdx:247:49    - Unknown word (expecting)     -- is that the parser is expecting a JavaScript import
docs/docs/troubleshooting-mdx.mdx:249:45    - Unknown word (sure)          -- import or export, make sure it’s not at the start
docs/docs/troubleshooting-mdx.mdx:249:8     - Unknown word (want)          -- If you want the word import or export
docs/docs/troubleshooting-mdx.mdx:24:4      - Unknown word (understand)      -- To understand how the MDX format works
docs/docs/troubleshooting-mdx.mdx:24:44     - Unknown word (recommend)       -- MDX format works, we recommend that you start with
docs/docs/troubleshooting-mdx.mdx:251:11    - Unknown word (want)          -- If you do want an import or export
docs/docs/troubleshooting-mdx.mdx:251:47    - Unknown word (please)        -- or export statement, please make sure that it’s
docs/docs/troubleshooting-mdx.mdx:251:59    - Unknown word (sure)          -- statement, please make sure that it’s valid
docs/docs/troubleshooting-mdx.mdx:258:4     - Unknown word (occurs)        -- It occurs when, after an `import
docs/docs/troubleshooting-mdx.mdx:258:58    - Unknown word (more)          -- `export` statement, more JavaScript is
docs/docs/troubleshooting-mdx.mdx:269:47    - Unknown word (please)        -- variable or function, please export it.
docs/docs/troubleshooting-mdx.mdx:269:8     - Unknown word (want)          -- If you want to define a variable
docs/docs/troubleshooting-mdx.mdx:26:42     - Unknown word (documented)      -- packages](/packages/) is documented in their readmes.
docs/docs/troubleshooting-mdx.mdx:26:56     - Unknown word (their)           -- packages/) is documented in their readmes.
docs/docs/troubleshooting-mdx.mdx:275:16    - Unknown word (there)         -- It occurs when there is an opening curly
docs/docs/troubleshooting-mdx.mdx:275:36    - Unknown word (curly)         -- there is an opening curly brace not followed by
docs/docs/troubleshooting-mdx.mdx:275:4     - Unknown word (occurs)        -- It occurs when there is an opening
docs/docs/troubleshooting-mdx.mdx:275:52    - Unknown word (followed)      -- opening curly brace not followed by a closing brace.
docs/docs/troubleshooting-mdx.mdx:27:38     - Unknown word (Migrating)       -- the latest MDX, see [§ Migrating from v1 to v2][migation
docs/docs/troubleshooting-mdx.mdx:27:4      - Unknown word (migrate)         -- To migrate to the latest MDX, see
docs/docs/troubleshooting-mdx.mdx:282:49    - Unknown word (expecting)     -- is that the parser is expecting another curly brace
docs/docs/troubleshooting-mdx.mdx:282:67    - Unknown word (curly)         -- is expecting another curly brace.
docs/docs/troubleshooting-mdx.mdx:283:13    - Unknown word (want)          -- If you just want a brace but not an expression
docs/docs/troubleshooting-mdx.mdx:284:11    - Unknown word (want)          -- If you do want an expression, please
docs/docs/troubleshooting-mdx.mdx:284:31    - Unknown word (please)        -- want an expression, please make sure to close it
docs/docs/troubleshooting-mdx.mdx:284:43    - Unknown word (sure)          -- expression, please make sure to close it with a closing
docs/docs/troubleshooting-mdx.mdx:286:29    - Unknown word (somewhere)     -- there is a closing brace somewhere, make sure that the
docs/docs/troubleshooting-mdx.mdx:286:4     - Unknown word (there)         -- If there is a closing brace somewhere
docs/docs/troubleshooting-mdx.mdx:286:45    - Unknown word (sure)          -- brace somewhere, make sure that the braces are
docs/docs/troubleshooting-mdx.mdx:287:1     - Unknown word (their)         -- their own lines with no text
docs/docs/troubleshooting-mdx.mdx:288:24    - Unknown word (there)         -- closing brace, or that there are no blank lines between
docs/docs/troubleshooting-mdx.mdx:294:4     - Unknown word (occurs)        -- It occurs when containers with
docs/docs/troubleshooting-mdx.mdx:305:49    - Unknown word (likely)        -- is that the parser it likely points to a bug.
docs/docs/troubleshooting-mdx.mdx:31:13     - Unknown word (integrating)     -- * [Problems integrating MDX](#problems-integrating
docs/docs/troubleshooting-mdx.mdx:320:16    - Unknown word (there)         -- It occurs when there are matching curly braces
docs/docs/troubleshooting-mdx.mdx:320:35    - Unknown word (curly)         -- when there are matching curly braces that, when interpretin
docs/docs/troubleshooting-mdx.mdx:320:4     - Unknown word (occurs)        -- It occurs when there are matching
docs/docs/troubleshooting-mdx.mdx:320:59    - Unknown word (interpreting)  -- curly braces that, when interpreting what’s
docs/docs/troubleshooting-mdx.mdx:334:49    - Unknown word (expecting)     -- is that the parser is expecting a JavaScript
docs/docs/troubleshooting-mdx.mdx:336:25    - Unknown word (instead)       -- you just want braces instead of an expression, escape
docs/docs/troubleshooting-mdx.mdx:339:58    - Unknown word (loops)         -- and `else` and `for` loops) do not work.
docs/docs/troubleshooting-mdx.mdx:339:6     - Unknown word (means)         -- That means statements (such as
docs/docs/troubleshooting-mdx.mdx:33:13     - Unknown word (using)           -- * [Problems using MDX](#problems-using
docs/docs/troubleshooting-mdx.mdx:340:13    - Unknown word (complex)       -- If you need complex logic, you can wrap
docs/docs/troubleshooting-mdx.mdx:340:62    - Unknown word (programs)      -- statements and whole programs into an
docs/docs/troubleshooting-mdx.mdx:341:27    - Unknown word (different)     -- or move it out to a different file, export it from
docs/docs/troubleshooting-mdx.mdx:348:35    - Unknown word (curly)         -- when there are matching curly braces that, and valid
docs/docs/troubleshooting-mdx.mdx:349:18    - Unknown word (there’s)       -- inside them, but there’s too much JavaScript
docs/docs/troubleshooting-mdx.mdx:349:30    - Unknown word (much)          -- them, but there’s too much JavaScript.
docs/docs/troubleshooting-mdx.mdx:34:34     - Unknown word (longer)          -- options.renderer` is no longer supported ``](#optionsrendere
docs/docs/troubleshooting-mdx.mdx:356:49    - Unknown word (expecting)     -- is that the parser is expecting a single JavaScript
docs/docs/troubleshooting-mdx.mdx:357:12    - Unknown word (yielding)      -- expression yielding one value.
docs/docs/troubleshooting-mdx.mdx:358:25    - Unknown word (instead)       -- you just want braces instead of an expression, escape
docs/docs/troubleshooting-mdx.mdx:35:9      - Unknown word (Incorrect)       -- * [`` Incorrect `format: 'detect'`
docs/docs/troubleshooting-mdx.mdx:36:9      - Unknown word (Unexpected)      -- * [`` Unexpected `format: 'detect'`
docs/docs/troubleshooting-mdx.mdx:372:44    - Unknown word (allows)        -- error is that JSX only allows spreading a single value
docs/docs/troubleshooting-mdx.mdx:372:51    - Unknown word (spreading)     -- that JSX only allows spreading a single value at a
docs/docs/troubleshooting-mdx.mdx:383:1     - Unknown word (These)        -- These errors are thrown by
docs/docs/troubleshooting-mdx.mdx:384:1     - Unknown word (They)         -- They were introduced in version
docs/docs/troubleshooting-mdx.mdx:384:6     - Unknown word (were)         -- They were introduced in version
docs/docs/troubleshooting-mdx.mdx:385:1     - Unknown word (They)         -- They occur when something
docs/docs/troubleshooting-mdx.mdx:385:6     - Unknown word (occur)        -- They occur when something other
docs/docs/troubleshooting-mdx.mdx:38:9      - Unknown word (Unexpected)      -- * [`` Unexpected deprecated option `jsxRuntime
docs/docs/troubleshooting-mdx.mdx:392:44    - Unknown word (allows)       -- error is that JSX only allows spreading values:
docs/docs/troubleshooting-mdx.mdx:392:51    - Unknown word (spreading)    -- that JSX only allows spreading values:
docs/docs/troubleshooting-mdx.mdx:402:1     - Unknown word (These)        -- These errors are thrown by
docs/docs/troubleshooting-mdx.mdx:403:1     - Unknown word (They)         -- They were introduced in MDX
docs/docs/troubleshooting-mdx.mdx:403:6     - Unknown word (were)         -- They were introduced in MDX version
docs/docs/troubleshooting-mdx.mdx:404:1     - Unknown word (They)         -- They occur when something
docs/docs/troubleshooting-mdx.mdx:404:27    - Unknown word (unexpected)   -- occur when something unexpected was found in a JSX tag
docs/docs/troubleshooting-mdx.mdx:404:6     - Unknown word (occur)        -- They occur when something unexpected
docs/docs/troubleshooting-mdx.mdx:41:19     - Unknown word (jsxs)            -- * [`` Expected `jsxs` given to `evaluate
docs/docs/troubleshooting-mdx.mdx:42:8      - Unknown word (Unexpected)      -- * [``Unexpected missing `options.baseUrl
docs/docs/troubleshooting-mdx.mdx:431:71    - Unknown word (expects)      -- very strict grammar and expects
docs/docs/troubleshooting-mdx.mdx:433:1     - Unknown word (There)        -- There are different solutions
docs/docs/troubleshooting-mdx.mdx:433:31    - Unknown word (depending)    -- different solutions depending on what was expected
docs/docs/troubleshooting-mdx.mdx:434:31    - Unknown word (carefully)    -- read the error message carefully as it indicates where
docs/docs/troubleshooting-mdx.mdx:434:47    - Unknown word (indicates)    -- message carefully as it indicates where the problem
docs/docs/troubleshooting-mdx.mdx:435:1     - Unknown word (occurred)     -- occurred and what was expected
docs/docs/troubleshooting-mdx.mdx:435:32    - Unknown word (instead)      -- and what was expected instead.
docs/docs/troubleshooting-mdx.mdx:449:36    - Unknown word (somewhere)    -- forgot an opening tag somewhere.
docs/docs/troubleshooting-mdx.mdx:45:8      - Unknown word (Unexpected)      -- * [``Unexpected `$type` in code: only
docs/docs/troubleshooting-mdx.mdx:466:49    - Unknown word (likely)       -- is that the parser it likely points to a bug.
docs/docs/troubleshooting-mdx.mdx:46:9      - Unknown word (Unexpected)      -- * [`` Unexpected end of file in expression
docs/docs/troubleshooting-mdx.mdx:481:31    - Unknown word (placed)       -- when attributes are placed on closing tags.
docs/docs/troubleshooting-mdx.mdx:495:33    - Unknown word (also)         -- when a closing tag is also marked as self-closing
docs/docs/troubleshooting-mdx.mdx:518:40    - Unknown word (must)         -- this error is that tags must match in JSX.
docs/docs/troubleshooting-mdx.mdx:519:5     - Unknown word (likely)       -- You likely forgot to open or close
docs/docs/troubleshooting-mdx.mdx:519:51    - Unknown word (correctly)    -- close one of the two correctly.
docs/docs/troubleshooting-mdx.mdx:521:7     - Unknown word (Cannot)       -- ### ``Cannot close `$type` ($at)
docs/docs/troubleshooting-mdx.mdx:523:56    - Unknown word (still)        -- token (`$type`, $at) is still open``
docs/docs/troubleshooting-mdx.mdx:523:7     - Unknown word (Cannot)       -- ### ``Cannot close document, a token
docs/docs/troubleshooting-mdx.mdx:527:4     - Unknown word (typically)    -- It typically occurs when markdown
docs/docs/troubleshooting-mdx.mdx:527:63    - Unknown word (correctly)    -- are not interleaved correctly.
docs/docs/troubleshooting-mdx.mdx:535:1     - Unknown word (still)        -- still tags open.
docs/docs/troubleshooting-mdx.mdx:537:4     - Unknown word (Interleaving) -- [¶ Interleaving in § What is MDX?](
docs/docs/troubleshooting-mdx.mdx:5:15      - Unknown word (wooorm)     -- {github: 'wooorm', name: 'Titus Wormer
docs/docs/troubleshooting-mdx.mdx:5:31      - Unknown word (Titus)      -- github: 'wooorm', name: 'Titus Wormer', twitter: 'wooorm
docs/docs/troubleshooting-mdx.mdx:5:37      - Unknown word (Wormer)     -- wooorm', name: 'Titus Wormer', twitter: 'wooorm'
docs/docs/troubleshooting-mdx.mdx:5:56      - Unknown word (wooorm)     -- Titus Wormer', twitter: 'wooorm'}
docs/docs/troubleshooting-mdx.mdx:60:38     - Unknown word (different)       -- close `$type` ($at): a different token (`$type`, $at
docs/docs/troubleshooting-mdx.mdx:60:8      - Unknown word (Cannot)          -- * [``Cannot close `$type` ($at)
docs/docs/troubleshooting-mdx.mdx:61:57     - Unknown word (still)           -- token (`$type`, $at) is still open``](#cannot-close
docs/docs/troubleshooting-mdx.mdx:61:8      - Unknown word (Cannot)          -- * [``Cannot close document, a token
docs/docs/troubleshooting-mdx.mdx:63:13     - Unknown word (integrating)     -- ## Problems integrating MDX
docs/docs/troubleshooting-mdx.mdx:67:11     - Unknown word (having)          -- If you’re having problems integrating
docs/docs/troubleshooting-mdx.mdx:67:27     - Unknown word (integrating)     -- you’re having problems integrating MDX with different tools
docs/docs/troubleshooting-mdx.mdx:67:48     - Unknown word (different)       -- integrating MDX with different tools, that’s likely
docs/docs/troubleshooting-mdx.mdx:67:72     - Unknown word (likely)          -- different tools, that’s likely
docs/docs/troubleshooting-mdx.mdx:69:1      - Unknown word (They’ve)         -- They’ve been in the works since
docs/docs/troubleshooting-mdx.mdx:69:55     - Unknown word (them)            -- 15, we’ve supported them in MDX files from the
docs/docs/troubleshooting-mdx.mdx:69:9      - Unknown word (been)            -- They’ve been in the works since
docs/docs/troubleshooting-mdx.mdx:70:32     - Unknown word (completely)      -- in MDX version 2 we completely switched to them.
docs/docs/troubleshooting-mdx.mdx:70:43     - Unknown word (switched)        -- version 2 we completely switched to them.
docs/docs/troubleshooting-mdx.mdx:70:55     - Unknown word (them)            -- completely switched to them.
docs/docs/troubleshooting-mdx.mdx:72:1      - Unknown word (Most)            -- Most other tools are working
docs/docs/troubleshooting-mdx.mdx:72:46     - Unknown word (them)            -- working hard to support them.
docs/docs/troubleshooting-mdx.mdx:73:6      - Unknown word (still)           -- Some still require extra configuration
docs/docs/troubleshooting-mdx.mdx:75:1      - Unknown word (There’s)         -- There’s a great [Gist by
docs/docs/troubleshooting-mdx.mdx:75:18     - Unknown word (Gist)            -- There’s a great [Gist by
docs/docs/troubleshooting-mdx.mdx:76:4      - Unknown word (sindresorhus)    -- **@sindresorhus**](https://gist.github
docs/docs/troubleshooting-mdx.mdx:77:51     - Unknown word (different)       -- to use ESM with many different tools.
docs/docs/troubleshooting-mdx.mdx:77:7      - Unknown word (explains)        -- which explains in detail how to use
docs/docs/troubleshooting-mdx.mdx:78:11     - Unknown word (having)          -- If you’re having trouble with MDX, some
docs/docs/troubleshooting-mdx.mdx:78:18     - Unknown word (trouble)         -- If you’re having trouble with MDX, some other
docs/docs/troubleshooting-mdx.mdx:79:32     - Unknown word (looking)         -- likely find what you’re looking for there.
docs/docs/troubleshooting-mdx.mdx:79:44     - Unknown word (there)           -- what you’re looking for there.
docs/docs/troubleshooting-mdx.mdx:79:8      - Unknown word (likely)          -- you’ll likely find what you’re looking
docs/docs/troubleshooting-mdx.mdx:80:1      - Unknown word (Please)          -- Please give it a thorough read
docs/docs/troubleshooting-mdx.mdx:80:18     - Unknown word (thorough)        -- Please give it a thorough read.
docs/docs/troubleshooting-mdx.mdx:81:11     - Unknown word (still)           -- If you’re still having problems, the
docs/docs/troubleshooting-mdx.mdx:81:17     - Unknown word (having)          -- If you’re still having problems, the issue
docs/docs/troubleshooting-mdx.mdx:82:1      - Unknown word (integrating)     -- integrating MDX with might provide
docs/docs/troubleshooting-mdx.mdx:82:22     - Unknown word (might)           -- integrating MDX with might provide the answer.
docs/docs/troubleshooting-mdx.mdx:84:11     - Unknown word (having)          -- If you’re having trouble with tools that
docs/docs/troubleshooting-mdx.mdx:84:18     - Unknown word (trouble)         -- If you’re having trouble with tools that don
docs/docs/troubleshooting-mdx.mdx:88:30     - Unknown word (making)          -- summary>Expand example of making a CJS bundle</summary
docs/docs/troubleshooting-mdx.mdx:98:13     - Unknown word (using)           -- ## Problems using MDX
docs/docs/using-mdx.mdx:105:32    - Unknown word (compiled)   -- saw that MDX files are compiled to components.
docs/docs/using-mdx.mdx:106:13    - Unknown word (those)      -- You can use those components like any
docs/docs/using-mdx.mdx:107:1     - Unknown word (choice)     -- choice.
docs/docs/using-mdx.mdx:116:8     - Unknown word (twoslash)   -- ```jsx twoslash path="example.jsx"
docs/docs/using-mdx.mdx:123:40    - Unknown word (Assumes)    -- from './example.mdx' // Assumes an integration is used
docs/docs/using-mdx.mdx:12:3      - Unknown word (Using)      -- # Using MDX
docs/docs/using-mdx.mdx:132:22    - Unknown word (also)       -- All other values are also exported.
docs/docs/using-mdx.mdx:143:39    - Unknown word (ways)       -- imported in the following ways:
docs/docs/using-mdx.mdx:145:7     - Unknown word (twoslash)   -- ```js twoslash path="example.js"
docs/docs/using-mdx.mdx:14:14     - Unknown word (explains)   -- This article explains how to use MDX files
docs/docs/using-mdx.mdx:154:30    - Unknown word (everything) -- namespace import to get everything:
docs/docs/using-mdx.mdx:155:13    - Unknown word (everything) -- import * as everything from './example.mdx
docs/docs/using-mdx.mdx:155:48    - Unknown word (Assumes)    -- from './example.mdx' // Assumes an integration is used
docs/docs/using-mdx.mdx:156:13    - Unknown word (everything) -- console.log(everything) // {Thing: [Function
docs/docs/using-mdx.mdx:158:19    - Unknown word (shortcut)   -- // Default export shortcut and a named import specifier
docs/docs/using-mdx.mdx:15:27     - Unknown word (props)      -- shows how you can pass props and how to import, define
docs/docs/using-mdx.mdx:15:4      - Unknown word (shows)      -- It shows how you can pass props
docs/docs/using-mdx.mdx:15:84     - Unknown word (more)       -- pass components. {/* more */}
docs/docs/using-mdx.mdx:168:5     - Unknown word (Props)      -- ### Props
docs/docs/using-mdx.mdx:16:16     - Unknown word (started)    -- See [§ Getting started][start] for how to integrate
docs/docs/using-mdx.mdx:16:43     - Unknown word (integrate)  -- started][start] for how to integrate MDX into your project
docs/docs/using-mdx.mdx:16:8      - Unknown word (Getting)    -- See [§ Getting started][start] for
docs/docs/using-mdx.mdx:170:30    - Unknown word (showed)     -- What is MDX][what], we showed that JavaScript expressions
docs/docs/using-mdx.mdx:170:73    - Unknown word (curly)      -- expressions, inside curly
docs/docs/using-mdx.mdx:17:4      - Unknown word (understand) -- To understand how the MDX format works
docs/docs/using-mdx.mdx:17:44     - Unknown word (recommend)  -- MDX format works, we recommend that you start with
docs/docs/using-mdx.mdx:182:1     - Unknown word (Instead)    -- Instead of importing or defining
docs/docs/using-mdx.mdx:182:12    - Unknown word (importing)  -- Instead of importing or defining data within
docs/docs/using-mdx.mdx:182:25    - Unknown word (defining)   -- Instead of importing or defining data within MDX, data
docs/docs/using-mdx.mdx:182:60    - Unknown word (also)       -- within MDX, data can also be passed
docs/docs/using-mdx.mdx:184:20    - Unknown word (called)     -- The passed data is called `props`.
docs/docs/using-mdx.mdx:195:8     - Unknown word (twoslash)   -- ```jsx twoslash path="example.jsx"
docs/docs/using-mdx.mdx:202:40    - Unknown word (Assumes)    -- from './example.mdx' // Assumes an integration is used
docs/docs/using-mdx.mdx:205:50    - Unknown word (Venus)      -- reateElement(Example, {name: 'Venus', year: 2021}))
docs/docs/using-mdx.mdx:208:28    - Unknown word (Mars)       -- console.log(<Example name="Mars" year={2022} />)
docs/docs/using-mdx.mdx:215:20    - Unknown word (analyzer)   -- See [`mdx-js/mdx-analyzer`][mdx-analyzer] for
docs/docs/using-mdx.mdx:215:49    - Unknown word (more)       -- ][mdx-analyzer] for more info.
docs/docs/using-mdx.mdx:220:1     - Unknown word (There)      -- There is one special prop
docs/docs/using-mdx.mdx:221:4     - Unknown word (takes)      -- It takes an object mapping component
docs/docs/using-mdx.mdx:237:40    - Unknown word (Assumes)    -- from './example.mdx' // Assumes an integration is used
docs/docs/using-mdx.mdx:243:48    - Unknown word (Pluto)      -- {{color: 'tomato'}}>Pluto</span>
docs/docs/using-mdx.mdx:24:6      - Unknown word (Props)      -- * [Props](#props)
docs/docs/using-mdx.mdx:251:31    - Unknown word (them)       -- also define or import them within MDX:
docs/docs/using-mdx.mdx:251:9     - Unknown word (also)       -- You can also define or import them
docs/docs/using-mdx.mdx:254:29    - Unknown word (rebass)     -- Box, Heading} from 'rebass'
docs/docs/using-mdx.mdx:256:5     - Unknown word (using)      -- MDX using imported components
docs/docs/using-mdx.mdx:263:37    - Unknown word (they)       -- files *are* components, they can also import each
docs/docs/using-mdx.mdx:263:46    - Unknown word (also)       -- components, they can also import each other:
docs/docs/using-mdx.mdx:266:39    - Unknown word (Assumes)    -- from './license.md' // Assumes an integration is used
docs/docs/using-mdx.mdx:278:33    - Unknown word (passing)    -- some other examples of passing components:
docs/docs/using-mdx.mdx:294:10    - Unknown word (Rewrite)    -- // Rewrite `em`s (`*like so*`)
docs/docs/using-mdx.mdx:294:62    - Unknown word (foreground) -- i` with a goldenrod foreground color.
docs/docs/using-mdx.mdx:298:25    - Unknown word (using)      -- // Pass a layout (using the special `'wrapper
docs/docs/using-mdx.mdx:298:45    - Unknown word (wrapper)    -- using the special `'wrapper'` key).
docs/docs/using-mdx.mdx:299:7     - Unknown word (wrapper)    -- wrapper({components, ...rest
docs/docs/using-mdx.mdx:306:49    - Unknown word (theme)      -- component can be used as `<theme.text>hi</theme.text
docs/docs/using-mdx.mdx:306:64    - Unknown word (theme)      -- as `<theme.text>hi</theme.text>`
docs/docs/using-mdx.mdx:307:7     - Unknown word (theme)      -- theme: {
docs/docs/using-mdx.mdx:319:8     - Unknown word (equivalents) -- * HTML equivalents for the things you write
docs/docs/using-mdx.mdx:31:16     - Unknown word (compiles)   -- An integration compiles MDX syntax to JavaScript
docs/docs/using-mdx.mdx:321:20    - Unknown word (defines)     -- * `wrapper`, which defines the layout (but a local
docs/docs/using-mdx.mdx:321:4     - Unknown word (wrapper)     -- * `wrapper`, which defines the
docs/docs/using-mdx.mdx:321:59    - Unknown word (takes)       -- (but a local layout takes precedence)
docs/docs/using-mdx.mdx:321:65    - Unknown word (precedence)  -- a local layout takes precedence)
docs/docs/using-mdx.mdx:322:3     - Unknown word (anything)    -- * anything else that is a valid
docs/docs/using-mdx.mdx:324:40    - Unknown word (locally)     -- like.so />`, note that locally defined components take
docs/docs/using-mdx.mdx:325:3     - Unknown word (precedence)  -- precedence)**‡**
docs/docs/using-mdx.mdx:327:21    - Unknown word (whether)     -- **‡** The rules for whether a name in JSX (so `x
docs/docs/using-mdx.mdx:328:51    - Unknown word (follows)     -- `Component`) are as follows:
docs/docs/using-mdx.mdx:330:6     - Unknown word (there’s)     -- * if there’s a dot,
docs/docs/using-mdx.mdx:332:42    - Unknown word (taken)       -- reference to the key `b` taken from object `a`
docs/docs/using-mdx.mdx:332:9     - Unknown word (means)       -- which means a reference to the key
docs/docs/using-mdx.mdx:333:3     - Unknown word (otherwise)   -- * otherwise,
docs/docs/using-mdx.mdx:336:3     - Unknown word (otherwise)   -- * otherwise,
docs/docs/using-mdx.mdx:339:3     - Unknown word (otherwise)   -- * otherwise,
docs/docs/using-mdx.mdx:342:1     - Unknown word (These)       -- These keys in `components
docs/docs/using-mdx.mdx:343:15    - Unknown word (illustrated) -- references is illustrated as follows.
docs/docs/using-mdx.mdx:343:30    - Unknown word (follows)     -- references is illustrated as follows.
docs/docs/using-mdx.mdx:348:13    - Unknown word (bravo)       -- * <a href="#bravo">JSX with a lowercase
docs/docs/using-mdx.mdx:349:14    - Unknown word (charlie)     -- * <Link to="#charlie">JSX with a capitalized
docs/docs/using-mdx.mdx:349:34    - Unknown word (capitalized) -- charlie">JSX with a capitalized name</Link>
docs/docs/using-mdx.mdx:370:85    - Unknown word (dashed)      -- style={{borderTop: '1px dashed', color: 'tomato'}}
docs/docs/using-mdx.mdx:380:19    - Unknown word (card)        -- <div className="card">
docs/docs/using-mdx.mdx:383:21    - Unknown word (bravo)       -- <li><a href="#bravo">JSX with a lowercase
docs/docs/using-mdx.mdx:384:21    - Unknown word (charlie)     -- <li><a href="#charlie" style={{borderTop:
docs/docs/using-mdx.mdx:384:54    - Unknown word (dashed)      -- style={{borderTop: '1px dashed', color: 'tomato'}}
docs/docs/using-mdx.mdx:384:92    - Unknown word (capitalized) -- tomato'}}>JSX with a capitalized name</a></li>
docs/docs/using-mdx.mdx:390:32    - Unknown word (equivalent)  -- because `a` is the HTML equivalent for the markdown syntax
docs/docs/using-mdx.mdx:390:67    - Unknown word (being)       -- the markdown syntax being used.
docs/docs/using-mdx.mdx:391:20    - Unknown word (bravo)       -- The second link (`#bravo`) remains unchanged
docs/docs/using-mdx.mdx:391:28    - Unknown word (remains)     -- second link (`#bravo`) remains unchanged,
docs/docs/using-mdx.mdx:393:19    - Unknown word (charlie)     -- The third link (`#charlie`) is dashed and tomato
docs/docs/using-mdx.mdx:393:32    - Unknown word (dashed)      -- link (`#charlie`) is dashed and tomato,
docs/docs/using-mdx.mdx:398:1     - Unknown word (There)       -- There is one special component
docs/docs/using-mdx.mdx:400:41    - Unknown word (using)       -- defined from within MDX using a default export:
docs/docs/using-mdx.mdx:416:72    - Unknown word (takes)       -- wrapper` (but a local one takes
docs/docs/using-mdx.mdx:417:1     - Unknown word (precedence)  -- precedence).
docs/docs/using-mdx.mdx:422:1     - Unknown word (Passing)     -- Passing components is typically
docs/docs/using-mdx.mdx:422:23    - Unknown word (typically)   -- Passing components is typically fine.
docs/docs/using-mdx.mdx:423:11    - Unknown word (often)       -- Providers often only add extra weight
docs/docs/using-mdx.mdx:42:18     - Unknown word (turned)     -- That’s *roughly* turned into the following JavaScript
docs/docs/using-mdx.mdx:42:9      - Unknown word (roughly)    -- That’s *roughly* turned into the following
docs/docs/using-mdx.mdx:43:11     - Unknown word (might)      -- The below might help to form a mental
docs/docs/using-mdx.mdx:43:32     - Unknown word (mental)     -- might help to form a mental model:
docs/docs/using-mdx.mdx:458:13    - Unknown word (those)       -- That works, those components are used
docs/docs/using-mdx.mdx:45:8      - Unknown word (twoslash)   -- ```jsx twoslash path="output-outline
docs/docs/using-mdx.mdx:460:17    - Unknown word (nesting)     -- But when you’re nesting MDX files (importing
docs/docs/using-mdx.mdx:460:36    - Unknown word (importing)   -- re nesting MDX files (importing them into each other
docs/docs/using-mdx.mdx:460:46    - Unknown word (them)        -- MDX files (importing them into each other) it
docs/docs/using-mdx.mdx:460:75    - Unknown word (become)      -- into each other) it can become
docs/docs/using-mdx.mdx:461:1     - Unknown word (cumbersome)  -- cumbersome.
docs/docs/using-mdx.mdx:477:4     - Unknown word (solve)       -- To solve this, a *[context][
docs/docs/using-mdx.mdx:478:72    - Unknown word (having)      -- component tree without having to
docs/docs/using-mdx.mdx:478:9     - Unknown word (provides)    -- Context provides a way to pass data through
docs/docs/using-mdx.mdx:479:17    - Unknown word (manually)    -- pass props down manually at every level.
docs/docs/using-mdx.mdx:482:12    - Unknown word (either)      -- 1. Install either [`@mdx-js/react`][mdx
docs/docs/using-mdx.mdx:484:39    - Unknown word (using)       -- what framework you’re using
docs/docs/using-mdx.mdx:484:4     - Unknown word (depending)   -- depending on what framework you
docs/docs/using-mdx.mdx:487:28    - Unknown word (either)      -- to that package, so either `'@mdx-js/react'`,
docs/docs/using-mdx.mdx:490:28    - Unknown word (most)        -- it to wrap your top-most MDX content component
docs/docs/using-mdx.mdx:491:17    - Unknown word (instead)     -- `components` instead:
docs/docs/using-mdx.mdx:511:55    - Unknown word (passing)     -- and verbose component passing:
docs/docs/using-mdx.mdx:528:33    - Unknown word (their)       -- MDXProvider`s are nested, their components are merged
docs/docs/using-mdx.mdx:528:54    - Unknown word (merged)      -- their components are merged.
docs/docs/using-mdx.mdx:555:25    - Unknown word (using)       -- which results in `h1`s using `Component1`, `h2`s
docs/docs/using-mdx.mdx:558:10    - Unknown word (differently) -- To merge differently or not at all, pass
docs/docs/using-mdx.mdx:560:1     - Unknown word (instead)     -- instead.
docs/docs/using-mdx.mdx:561:52    - Unknown word (discarded)   -- context components are discarded:
docs/docs/using-mdx.mdx:596:15    - Unknown word (nesting)     -- If you’re not nesting MDX files, or not nesting
docs/docs/using-mdx.mdx:596:41    - Unknown word (nesting)     -- nesting MDX files, or not nesting them often, don’t use
docs/docs/using-mdx.mdx:596:49    - Unknown word (them)        -- files, or not nesting them often, don’t use
docs/docs/using-mdx.mdx:596:54    - Unknown word (often)       -- or not nesting them often, don’t use
docs/docs/using-mdx.mdx:597:28    - Unknown word (explicitly)  -- providers: pass components explicitly.
docs/docs/using-mdx.mdx:5:15      - Unknown word (wooorm)     -- {github: 'wooorm', name: 'Titus Wormer
docs/docs/using-mdx.mdx:5:31      - Unknown word (Titus)      -- github: 'wooorm', name: 'Titus Wormer', twitter: 'wooorm
docs/docs/using-mdx.mdx:5:37      - Unknown word (Wormer)     -- wooorm', name: 'Titus Wormer', twitter: 'wooorm'
docs/docs/using-mdx.mdx:5:56      - Unknown word (wooorm)     -- Titus Wormer', twitter: 'wooorm'}
docs/docs/using-mdx.mdx:60:44     - Unknown word (still)      -- serialized JavaScript that still needs to be evaluated
docs/docs/using-mdx.mdx:60:50     - Unknown word (needs)      -- JavaScript that still needs to be evaluated
docs/docs/using-mdx.mdx:61:16     - Unknown word (injected)   -- * A comment is injected to configure how JSX
docs/docs/using-mdx.mdx:61:49     - Unknown word (handled)    -- configure how JSX is handled
docs/docs/using-mdx.mdx:67:7      - Unknown word (twoslash)   -- ```js twoslash path="output-actual
docs/docs/using-mdx.mdx:69:45     - Unknown word (jsxs)       -- Fragment, jsx as _jsx, jsxs as _jsxs} from 'react
docs/docs/using-mdx.mdx:69:54     - Unknown word (jsxs)       -- jsx as _jsx, jsxs as _jsxs} from 'react/jsx-runtime
docs/docs/using-mdx.mdx:75:28     - Unknown word (props)      -- function _createMdxContent(props) {
docs/docs/using-mdx.mdx:76:37     - Unknown word (props)      -- components = {h1: 'h1', ...props.components}
docs/docs/using-mdx.mdx:77:11     - Unknown word (jsxs)       -- return _jsxs(_components.h1, {children
docs/docs/using-mdx.mdx:80:36     - Unknown word (props)      -- function MDXContent(props = {}) {
docs/docs/using-mdx.mdx:81:10     - Unknown word (wrapper)    -- const {wrapper: MDXLayout} = props
docs/docs/using-mdx.mdx:81:32     - Unknown word (props)      -- wrapper: MDXLayout} = props.components || {}
docs/docs/using-mdx.mdx:88:6      - Unknown word (more)       -- Some more observations:
docs/docs/using-mdx.mdx:90:10     - Unknown word (compiled)   -- * JSX is compiled away to function calls
docs/docs/using-mdx.mdx:90:19     - Unknown word (away)       -- * JSX is compiled away to function calls and
docs/docs/using-mdx.mdx:91:53     - Unknown word (wrapper)    -- given `{components: {wrapper: MyLayout}}` to
docs/docs/using-mdx.mdx:96:14     - Unknown word (coupled)    -- † MDX is not coupled to React.
docs/docs/using-mdx.mdx:97:9      - Unknown word (also)       -- You can also use it with [Preact
docs/docs/using-mdx.mdx:99:2      - Unknown word (Theme)      -- [Theme UI][],
docs/docs/what-is-mdx.mdx:107:19    - Unknown word (equivalent)    -- You can write the equivalent in markdown (or MDX
docs/docs/what-is-mdx.mdx:116:12    - Unknown word (rank)          -- # Heading (rank 1)
docs/docs/what-is-mdx.mdx:131:14    - Unknown word (introducing)   -- A paragraph, introducing a thematic break:
docs/docs/what-is-mdx.mdx:131:28    - Unknown word (thematic)      -- paragraph, introducing a thematic break:
docs/docs/what-is-mdx.mdx:143:1     - Unknown word (Nonstandard)   -- Nonstandard markdown features (such
docs/docs/what-is-mdx.mdx:144:1     - Unknown word (highlighting)  -- highlighting) can be enabled with
docs/docs/what-is-mdx.mdx:145:4     - Unknown word (Using)         -- [¶ Using plugins][using-plugins
docs/docs/what-is-mdx.mdx:153:37    - Unknown word (nicely)        -- for that is so you can nicely indent your components
docs/docs/what-is-mdx.mdx:15:14     - Unknown word (explains)   -- This article explains what the MDX format
docs/docs/what-is-mdx.mdx:161:3     - Unknown word (Autolinks)     -- * Autolinks do not work in MDX.
docs/docs/what-is-mdx.mdx:162:22    - Unknown word (they)          -- The reason is that they can be indistinguishable
docs/docs/what-is-mdx.mdx:162:34    - Unknown word (indistinguishable) -- is that they can be indistinguishable from JSX (for example
docs/docs/what-is-mdx.mdx:163:31    - Unknown word (being)             -- rect>`) and we prefer being explicit.
docs/docs/what-is-mdx.mdx:164:10    - Unknown word (want)              -- If you want links, use full links
docs/docs/what-is-mdx.mdx:165:5     - Unknown word (descriptive)       -- `[descriptive text](https://and-the
docs/docs/what-is-mdx.mdx:166:15    - Unknown word (doesn’t)           -- * HTML syntax doesn’t work in MDX as it’s
docs/docs/what-is-mdx.mdx:166:43    - Unknown word (replaced)          -- work in MDX as it’s replaced by JSX (`<img>` to
docs/docs/what-is-mdx.mdx:168:3     - Unknown word (Instead)           -- Instead of HTML comments, you
docs/docs/what-is-mdx.mdx:16:4      - Unknown word (shows)      -- It shows how markdown, JSX, JavaScript
docs/docs/what-is-mdx.mdx:170:59    - Unknown word (curly)             -- than (`<`) and left curly brace (`{`)
docs/docs/what-is-mdx.mdx:173:1     - Unknown word (More)              -- More on how MDX differs from
docs/docs/what-is-mdx.mdx:173:17    - Unknown word (differs)           -- More on how MDX differs from markdown is
docs/docs/what-is-mdx.mdx:174:2     - Unknown word (documented)        -- [documented here](https://github
docs/docs/what-is-mdx.mdx:178:66    - Unknown word (makes)             -- looks* like HTML but makes it
docs/docs/what-is-mdx.mdx:179:1     - Unknown word (convenient)        -- convenient to use components (reusable
docs/docs/what-is-mdx.mdx:17:56     - Unknown word (more)       -- used inside MDX. {/* more */}
docs/docs/what-is-mdx.mdx:180:8     - Unknown word (typically)         -- JSX is typically combined with a frontend
docs/docs/what-is-mdx.mdx:181:1     - Unknown word (These)             -- These frameworks add support
docs/docs/what-is-mdx.mdx:181:67    - Unknown word (repeating)         -- which let you change repeating
docs/docs/what-is-mdx.mdx:181:7     - Unknown word (frameworks)        -- These frameworks add support for components
docs/docs/what-is-mdx.mdx:182:27    - Unknown word (markup)            -- things like the following markup:
docs/docs/what-is-mdx.mdx:185:12    - Unknown word (Venus)             -- <h2>Hello, Venus!</h2>
docs/docs/what-is-mdx.mdx:186:12    - Unknown word (Mars)              -- <h2>Hello, Mars!</h2>
docs/docs/what-is-mdx.mdx:18:16     - Unknown word (started)    -- See [§ Getting started][start] for details
docs/docs/what-is-mdx.mdx:18:54     - Unknown word (integrate)  -- for details on how to integrate MDX into your
docs/docs/what-is-mdx.mdx:18:8      - Unknown word (Getting)    -- See [§ Getting started][start] for
docs/docs/what-is-mdx.mdx:192:16    - Unknown word (Venus)             -- <Welcome name="Venus" />
docs/docs/what-is-mdx.mdx:192:2     - Unknown word (Welcome)           -- <Welcome name="Venus" />
docs/docs/what-is-mdx.mdx:193:16    - Unknown word (Mars)              -- <Welcome name="Mars" />
docs/docs/what-is-mdx.mdx:193:2     - Unknown word (Welcome)           -- <Welcome name="Mars" />
docs/docs/what-is-mdx.mdx:196:8     - Unknown word (good)              -- JSX is good for **components**.
docs/docs/what-is-mdx.mdx:197:10    - Unknown word (repeating)         -- It makes repeating things more clear and
docs/docs/what-is-mdx.mdx:197:27    - Unknown word (more)              -- makes repeating things more clear and allows for
docs/docs/what-is-mdx.mdx:197:4     - Unknown word (makes)             -- It makes repeating things more
docs/docs/what-is-mdx.mdx:197:42    - Unknown word (allows)            -- things more clear and allows for separation of concerns
docs/docs/what-is-mdx.mdx:197:53    - Unknown word (separation)        -- clear and allows for separation of concerns.
docs/docs/what-is-mdx.mdx:197:67    - Unknown word (concerns)          -- allows for separation of concerns.
docs/docs/what-is-mdx.mdx:204:24    - Unknown word (Markup)            -- abbr title="HyperText Markup Language">HTML</abbr
docs/docs/what-is-mdx.mdx:204:58    - Unknown word (lovely)            -- Language">HTML</abbr> is a lovely language.
docs/docs/what-is-mdx.mdx:20:8      - Unknown word (Using)      -- See [§ Using MDX][use] when you’re
docs/docs/what-is-mdx.mdx:211:19    - Unknown word (mentioned)         -- But as previously mentioned you can use components
docs/docs/what-is-mdx.mdx:211:8     - Unknown word (previously)        -- But as previously mentioned you can use
docs/docs/what-is-mdx.mdx:212:22    - Unknown word (must)              -- Note that components must be defined.
docs/docs/what-is-mdx.mdx:213:16    - Unknown word (them)              -- You can import them, define them locally
docs/docs/what-is-mdx.mdx:213:29    - Unknown word (them)              -- import them, define them locally, or pass them
docs/docs/what-is-mdx.mdx:213:34    - Unknown word (locally)           -- import them, define them locally, or pass them in later
docs/docs/what-is-mdx.mdx:213:51    - Unknown word (them)              -- them locally, or pass them in later (see
docs/docs/what-is-mdx.mdx:213:59    - Unknown word (later)             -- locally, or pass them in later (see
docs/docs/what-is-mdx.mdx:214:4     - Unknown word (Using)             -- [§ Using MDX][use]):
docs/docs/what-is-mdx.mdx:219:9     - Unknown word (also)              -- You can also use objects with components
docs/docs/what-is-mdx.mdx:230:1     - Unknown word (There)             -- There are a few edge cases
docs/docs/what-is-mdx.mdx:231:12    - Unknown word (differs)           -- [where MDX differs from JSX](https://github
docs/docs/what-is-mdx.mdx:235:49    - Unknown word (curly)             -- JavaScript expressions inside curly braces:
docs/docs/what-is-mdx.mdx:235:5     - Unknown word (also)              -- MDX also supports JavaScript
docs/docs/what-is-mdx.mdx:241:42    - Unknown word (programs)          -- contain whole JavaScript programs as long as they’re
docs/docs/what-is-mdx.mdx:241:62    - Unknown word (they’re)           -- programs as long as they’re
docs/docs/what-is-mdx.mdx:242:33    - Unknown word (evaluates)         -- an expression that evaluates to something that can
docs/docs/what-is-mdx.mdx:247:9     - Unknown word (guess)             -- const guess = Math.random()
docs/docs/what-is-mdx.mdx:249:7     - Unknown word (guess)             -- if (guess > 0.66) {
docs/docs/what-is-mdx.mdx:24:4      - Unknown word (Prerequisites) -- * [Prerequisites](#prerequisites)
docs/docs/what-is-mdx.mdx:253:7     - Unknown word (guess)             -- if (guess > 0.33) {
docs/docs/what-is-mdx.mdx:254:48    - Unknown word (would)             -- color: 'violet'}}>Who would have guessed?!</span
docs/docs/what-is-mdx.mdx:254:59    - Unknown word (guessed)           -- violet'}}>Who would have guessed?!</span>
docs/docs/what-is-mdx.mdx:270:1     - Unknown word (These)             -- These ESM features can be
docs/docs/what-is-mdx.mdx:280:9     - Unknown word (also)              -- ESM can also be used for non-components
docs/docs/what-is-mdx.mdx:284:27    - Unknown word (population)        -- import population from './population.js'
docs/docs/what-is-mdx.mdx:284:8     - Unknown word (population)        -- import population from './population.js
docs/docs/what-is-mdx.mdx:287:14    - Unknown word (population)        -- <Chart data={population} label={'Something with
docs/docs/what-is-mdx.mdx:290:5     - Unknown word (Interleaving)      -- ### Interleaving
docs/docs/what-is-mdx.mdx:292:23    - Unknown word (inlines)          -- You can use markdown “inlines” but not “blocks” inside
docs/docs/what-is-mdx.mdx:299:33    - Unknown word (produce)          -- tags on one line don’t produce blocks so they don’t
docs/docs/what-is-mdx.mdx:299:51    - Unknown word (they)             -- t produce blocks so they don’t produce `<p>`s
docs/docs/what-is-mdx.mdx:299:62    - Unknown word (produce)          -- blocks so they don’t produce `<p>`s
docs/docs/what-is-mdx.mdx:300:1     - Unknown word (either)           -- either.
docs/docs/what-is-mdx.mdx:301:20    - Unknown word (they)             -- On separate lines, they do:
docs/docs/what-is-mdx.mdx:309:18    - Unknown word (using)            -- We differentiate using this rule (same line
docs/docs/what-is-mdx.mdx:309:4     - Unknown word (differentiate)    -- We differentiate using this rule (same
docs/docs/what-is-mdx.mdx:311:20    - Unknown word (incorrect)        -- So you *can* build incorrect HTML (which you shouldn
docs/docs/what-is-mdx.mdx:311:46    - Unknown word (shouldn’t)        -- incorrect HTML (which you shouldn’t):
docs/docs/what-is-mdx.mdx:31:6      - Unknown word (Interleaving)  -- * [Interleaving](#interleaving)
docs/docs/what-is-mdx.mdx:321:10    - Unknown word (possible)         -- It’s not possible to wrap “blocks” if
docs/docs/what-is-mdx.mdx:322:47    - Unknown word (different)        -- closing tags are in different blocks
docs/docs/what-is-mdx.mdx:326:1     - Unknown word (Welcome)          -- Welcome! <a href="about.html
docs/docs/what-is-mdx.mdx:326:19    - Unknown word (about)            -- Welcome! <a href="about.html">
docs/docs/what-is-mdx.mdx:32:4      - Unknown word (Further)       -- * [Further reading](#further-reading
docs/docs/what-is-mdx.mdx:330:7     - Unknown word (Falcons)          -- # The Falcons!</a>
docs/docs/what-is-mdx.mdx:334:21    - Unknown word (paragraphs)       -- So in this case two paragraphs and a heading.
docs/docs/what-is-mdx.mdx:335:1     - Unknown word (Leaving)          -- Leaving an opening `a` tag in
docs/docs/what-is-mdx.mdx:337:32    - Unknown word (misnested)        -- causes an error as it is misnested.
docs/docs/what-is-mdx.mdx:337:7     - Unknown word (causes)           -- Which causes an error as it is misnested
docs/docs/what-is-mdx.mdx:339:4     - Unknown word (Further)          -- ## Further reading
docs/docs/what-is-mdx.mdx:341:10    - Unknown word (want)             -- * If you want to use MDX in your project
docs/docs/what-is-mdx.mdx:341:50    - Unknown word (Getting)          -- your project, see [§ Getting started][start];
docs/docs/what-is-mdx.mdx:341:58    - Unknown word (started)          -- project, see [§ Getting started][start];
docs/docs/what-is-mdx.mdx:342:10    - Unknown word (Using)            -- see [§ Using MDX][use] when you’re
docs/docs/what-is-mdx.mdx:343:13    - Unknown word (getting)          -- * If you’re getting errors when working
docs/docs/what-is-mdx.mdx:344:6     - Unknown word (Troubleshooting)  -- [§ Troubleshooting MDX][trouble]
docs/docs/what-is-mdx.mdx:34:4      - Unknown word (Prerequisites) -- ## Prerequisites
docs/docs/what-is-mdx.mdx:36:14     - Unknown word (enjoy)         -- To write and enjoy MDX, you should be familiar
docs/docs/what-is-mdx.mdx:36:39     - Unknown word (familiar)      -- enjoy MDX, you should be familiar with both markdown
docs/docs/what-is-mdx.mdx:37:12     - Unknown word (cheat)         -- (see this [cheat sheet and tutorial]
docs/docs/what-is-mdx.mdx:38:13     - Unknown word (specifically)  -- JavaScript (specifically [JSX][jsx-spec]).
docs/docs/what-is-mdx.mdx:42:5      - Unknown word (allows)        -- MDX allows you to use JSX in your
docs/docs/what-is-mdx.mdx:43:48     - Unknown word (charts)        -- such as interactive charts or alerts, and embed
docs/docs/what-is-mdx.mdx:43:58     - Unknown word (alerts)        -- interactive charts or alerts, and embed them
docs/docs/what-is-mdx.mdx:43:76     - Unknown word (them)          -- or alerts, and embed them
docs/docs/what-is-mdx.mdx:45:56     - Unknown word (blast)         -- content with components a blast.
docs/docs/what-is-mdx.mdx:45:6      - Unknown word (makes)         -- This makes writing long-form content
docs/docs/what-is-mdx.mdx:48:1      - Unknown word (More)          -- More practically MDX can
docs/docs/what-is-mdx.mdx:48:29     - Unknown word (explained)     -- practically MDX can be explained as a format that combines
docs/docs/what-is-mdx.mdx:48:56     - Unknown word (combines)      -- explained as a format that combines markdown with
docs/docs/what-is-mdx.mdx:48:6      - Unknown word (practically)   -- More practically MDX can be explained
docs/docs/what-is-mdx.mdx:49:18     - Unknown word (follows)       -- JSX and looks as follows:
docs/docs/what-is-mdx.mdx:55:10     - Unknown word (notable)       -- > Some notable things in a block quote
docs/docs/what-is-mdx.mdx:59:49     - Unknown word (those)         -- are markdown, while those *HTML-like tags* are
docs/docs/what-is-mdx.mdx:5:15      - Unknown word (johno)      -- {github: 'johno', name: 'John Otander
docs/docs/what-is-mdx.mdx:5:30      - Unknown word (John)       -- github: 'johno', name: 'John Otander', twitter:
docs/docs/what-is-mdx.mdx:5:35      - Unknown word (Otander)    -- johno', name: 'John Otander', twitter: '4lpine'
docs/docs/what-is-mdx.mdx:5:56      - Unknown word (lpine)      -- Otander', twitter: '4lpine'},
docs/docs/what-is-mdx.mdx:60:10     - Unknown word (often)         -- Markdown often feels more natural to
docs/docs/what-is-mdx.mdx:60:16     - Unknown word (feels)         -- Markdown often feels more natural to type
docs/docs/what-is-mdx.mdx:60:22     - Unknown word (more)          -- Markdown often feels more natural to type than
docs/docs/what-is-mdx.mdx:61:18     - Unknown word (headings)      -- like emphasis or headings.
docs/docs/what-is-mdx.mdx:62:62     - Unknown word (makes)         -- looks* like HTML but makes it convenient
docs/docs/what-is-mdx.mdx:62:71     - Unknown word (convenient)    -- like HTML but makes it convenient
docs/docs/what-is-mdx.mdx:66:51     - Unknown word (expects)       -- for React and React expects classes that way.
docs/docs/what-is-mdx.mdx:66:59     - Unknown word (classes)       -- React and React expects classes that way.
docs/docs/what-is-mdx.mdx:67:50     - Unknown word (classes)       -- Vue and Preact, expect classes to be defined
docs/docs/what-is-mdx.mdx:67:7      - Unknown word (frameworks)    -- Other frameworks, such as Vue and Preact
docs/docs/what-is-mdx.mdx:68:1      - Unknown word (differently)   -- differently, so note that there
docs/docs/what-is-mdx.mdx:68:27     - Unknown word (there)         -- differently, so note that there are some differences
docs/docs/what-is-mdx.mdx:69:1      - Unknown word (authored)      -- authored depending on what tools
docs/docs/what-is-mdx.mdx:69:10     - Unknown word (depending)     -- authored depending on what tools it’s used
docs/docs/what-is-mdx.mdx:6:15      - Unknown word (wooorm)     -- {github: 'wooorm', name: 'Titus Wormer
docs/docs/what-is-mdx.mdx:6:31      - Unknown word (Titus)      -- github: 'wooorm', name: 'Titus Wormer', twitter: 'wooorm
docs/docs/what-is-mdx.mdx:6:37      - Unknown word (Wormer)     -- wooorm', name: 'Titus Wormer', twitter: 'wooorm'
docs/docs/what-is-mdx.mdx:6:56      - Unknown word (wooorm)     -- Titus Wormer', twitter: 'wooorm'}
docs/docs/what-is-mdx.mdx:80:13     - Unknown word (using)         -- If you’re using a bundler integration
docs/docs/what-is-mdx.mdx:82:3      - Unknown word (Alternatively) -- Alternatively, `options.format` can
docs/docs/what-is-mdx.mdx:85:16     - Unknown word (combines)      -- The MDX syntax combines markdown with JSX.
docs/docs/what-is-mdx.mdx:86:25     - Unknown word (along)         -- This gives us something along the lines of literate
docs/docs/what-is-mdx.mdx:86:44     - Unknown word (literate)      -- something along the lines of literate programming.
docs/docs/what-is-mdx.mdx:86:53     - Unknown word (programming)   -- the lines of literate programming.
docs/docs/what-is-mdx.mdx:86:6      - Unknown word (gives)         -- This gives us something along the
docs/docs/what-is-mdx.mdx:87:4      - Unknown word (also)          -- It also gives us an odd mix
docs/docs/what-is-mdx.mdx:87:9      - Unknown word (gives)         -- It also gives us an odd mix of two
docs/docs/what-is-mdx.mdx:88:19     - Unknown word (forgiving)     -- sensitive** and **forgiving** (what you type may
docs/docs/what-is-mdx.mdx:88:54     - Unknown word (exactly)       -- what you type may not exactly work but it
docs/docs/what-is-mdx.mdx:89:14     - Unknown word (whereas)       -- won’t crash) whereas JavaScript is **whitespace
docs/docs/what-is-mdx.mdx:89:49     - Unknown word (insensitive)   -- JavaScript is **whitespace insensitive** and
docs/docs/what-is-mdx.mdx:89:7      - Unknown word (crash)         -- won’t crash) whereas JavaScript
docs/docs/what-is-mdx.mdx:90:26     - Unknown word (crash)         -- unforgiving** (it does crash on typos).
docs/docs/what-is-mdx.mdx:90:3      - Unknown word (unforgiving)   -- **unforgiving** (it does crash on
docs/docs/what-is-mdx.mdx:90:35     - Unknown word (typos)         -- * (it does crash on typos).
docs/docs/what-is-mdx.mdx:92:1      - Unknown word (Weirdly)       -- Weirdly enough we quite like
docs/docs/what-is-mdx.mdx:92:19     - Unknown word (quite)         -- Weirdly enough we quite like how they combine
docs/docs/what-is-mdx.mdx:92:34     - Unknown word (they)          -- enough we quite like how they combine!
docs/docs/what-is-mdx.mdx:96:10     - Unknown word (often)         -- Markdown often feels more natural to
docs/docs/what-is-mdx.mdx:96:16     - Unknown word (feels)         -- Markdown often feels more natural to type
docs/docs/what-is-mdx.mdx:96:22     - Unknown word (more)          -- Markdown often feels more natural to type than
docs/docs/what-is-mdx.mdx:97:18     - Unknown word (headings)      -- like emphasis or headings.
docs/docs/what-is-mdx.mdx:98:10     - Unknown word (typically)     -- Markdown typically looks more like what
docs/docs/what-is-mdx.mdx:98:26     - Unknown word (more)          -- Markdown typically looks more like what’s intended
docs/docs/what-is-mdx.mdx:98:43     - Unknown word (intended)      -- looks more like what’s intended and is terser.
docs/docs/what-is-mdx.mdx:99:1      - Unknown word (Instead)       -- Instead of the following HTML
docs/guides/embed.mdx:103:14    - Unknown word (want)        -- If you don’t want to use explicit imports
docs/guides/embed.mdx:106:10    - Unknown word (codepen)     -- Here’s a codepen, and some other blog
docs/guides/embed.mdx:111:14    - Unknown word (either)      -- Then you can either pass all components
docs/guides/embed.mdx:115:40    - Unknown word (Assumes)     -- from './example.mdx' // Assumes an integration is used
docs/guides/embed.mdx:121:1     - Unknown word (also)        -- also use `MDXEmbedProvider
docs/guides/embed.mdx:125:40    - Unknown word (Assumes)     -- from './example.mdx' // Assumes an integration is used
docs/guides/embed.mdx:12:12     - Unknown word (explores)   -- This guide explores how to embed things
docs/guides/embed.mdx:12:46     - Unknown word (tweets)     -- to embed things like tweets, gists or codepens in
docs/guides/embed.mdx:12:54     - Unknown word (gists)      -- things like tweets, gists or codepens in
docs/guides/embed.mdx:12:6      - Unknown word (guide)      -- This guide explores how to embed
docs/guides/embed.mdx:12:63     - Unknown word (codepens)   -- like tweets, gists or codepens in
docs/guides/embed.mdx:13:15     - Unknown word (more)       -- markdown. {/* more */}
docs/guides/embed.mdx:17:1      - Unknown word (There)      -- There are two ways to accomplish
docs/guides/embed.mdx:17:15     - Unknown word (ways)       -- There are two ways to accomplish embeds
docs/guides/embed.mdx:17:23     - Unknown word (accomplish) -- There are two ways to accomplish embeds: at compile time
docs/guides/embed.mdx:18:1      - Unknown word (Doing)      -- Doing it at compile time means
docs/guides/embed.mdx:18:26     - Unknown word (means)      -- Doing it at compile time means the effort is spent
docs/guides/embed.mdx:18:36     - Unknown word (effort)     -- compile time means the effort is spent upfront so
docs/guides/embed.mdx:18:46     - Unknown word (spent)      -- means the effort is spent upfront so that readers
docs/guides/embed.mdx:18:52     - Unknown word (upfront)    -- the effort is spent upfront so that readers will
docs/guides/embed.mdx:18:68     - Unknown word (readers)    -- spent upfront so that readers will
docs/guides/embed.mdx:19:13     - Unknown word (experience) -- have a fast experience as no requests have
docs/guides/embed.mdx:19:50     - Unknown word (made)       -- requests have to be made on the client.
docs/guides/embed.mdx:20:1      - Unknown word (Doing)      -- Doing it at runtime gives
docs/guides/embed.mdx:20:21     - Unknown word (gives)      -- Doing it at runtime gives more flexibility by
docs/guides/embed.mdx:20:27     - Unknown word (more)       -- it at runtime gives more flexibility by moving
docs/guides/embed.mdx:20:32     - Unknown word (flexibility) -- at runtime gives more flexibility by moving the work to
docs/guides/embed.mdx:21:22     - Unknown word (slow)        -- This can result in a slow experience for readers
docs/guides/embed.mdx:21:27     - Unknown word (experience)  -- can result in a slow experience for readers though.
docs/guides/embed.mdx:21:42     - Unknown word (readers)     -- slow experience for readers though.
docs/guides/embed.mdx:21:50     - Unknown word (though)      -- experience for readers though.
docs/guides/embed.mdx:22:4      - Unknown word (also)        -- It also depends on what framework
docs/guides/embed.mdx:22:9      - Unknown word (depends)     -- It also depends on what framework you
docs/guides/embed.mdx:27:59     - Unknown word (doing)       -- remark-embedder] by doing something like
docs/guides/embed.mdx:32:32     - Unknown word (currently)   -- remark-embedder` is currently using faux-esm.
docs/guides/embed.mdx:32:42     - Unknown word (using)       -- embedder` is currently using faux-esm.
docs/guides/embed.mdx:32:48     - Unknown word (faux)        -- is currently using faux-esm.
docs/guides/embed.mdx:33:8      - Unknown word (faux)        -- import fauxRemarkEmbedder from
docs/guides/embed.mdx:34:12     - Unknown word (Oembed)      -- import fauxOembedTransformer from '@remark
docs/guides/embed.mdx:34:65     - Unknown word (oembed)      -- embedder/transformer-oembed'
docs/guides/embed.mdx:34:8      - Unknown word (faux)        -- import fauxOembedTransformer from
docs/guides/embed.mdx:36:24     - Unknown word (faux)        -- const remarkEmbedder = fauxRemarkEmbedder.default
docs/guides/embed.mdx:37:27     - Unknown word (faux)        -- oembedTransformer = fauxOembedTransformer.default
docs/guides/embed.mdx:37:31     - Unknown word (Oembed)      -- oembedTransformer = fauxOembedTransformer.default
docs/guides/embed.mdx:37:7      - Unknown word (oembed)      -- const oembedTransformer = fauxOembedTransf
docs/guides/embed.mdx:3:15      - Unknown word (wooorm)     -- {github: 'wooorm', name: 'Titus Wormer
docs/guides/embed.mdx:3:31      - Unknown word (Titus)      -- github: 'wooorm', name: 'Titus Wormer', twitter: 'wooorm
docs/guides/embed.mdx:3:37      - Unknown word (Wormer)     -- wooorm', name: 'Titus Wormer', twitter: 'wooorm'
docs/guides/embed.mdx:3:56      - Unknown word (wooorm)     -- Titus Wormer', twitter: 'wooorm'}
docs/guides/embed.mdx:52:27     - Unknown word (oembed)      -- {transformers: [oembedTransformer]}
docs/guides/embed.mdx:61:19     - Unknown word (equivalent)  -- <summary>Expand equivalent JSX</summary>
docs/guides/embed.mdx:73:14     - Unknown word (Rick)        -- title="Rick Astley - Never Gonna
docs/guides/embed.mdx:73:19     - Unknown word (Astley)      -- title="Rick Astley - Never Gonna Give You
docs/guides/embed.mdx:73:34     - Unknown word (Gonna)       -- Rick Astley - Never Gonna Give You Up (Official
docs/guides/embed.mdx:73:53     - Unknown word (Official)    -- Never Gonna Give You Up (Official Music Video)"
docs/guides/embed.mdx:87:10     - Unknown word (codepen)     -- Here’s a codepen, and some other blog
docs/guides/embed.mdx:93:19     - Unknown word (equivalent)  -- <summary>Expand equivalent JSX</summary>
docs/guides/embed.mdx:97:17     - Unknown word (codepen)     -- <p>Here’s a codepen, and some other blog
docs/guides/frontmatter.mdx:103:8     - Unknown word (exactly)    -- That’s exactly what the remark plugin
docs/guides/frontmatter.mdx:108:1     - Unknown word (More)       -- More info on plugins is available
docs/guides/frontmatter.mdx:108:41    - Unknown word (Extending)  -- plugins is available in [§ Extending MDX][extend]
docs/guides/frontmatter.mdx:12:12     - Unknown word (explores)   -- This guide explores how to support YAML
docs/guides/frontmatter.mdx:12:6      - Unknown word (guide)      -- This guide explores how to support
docs/guides/frontmatter.mdx:12:65     - Unknown word (more)       -- frontmatter in MDX. {/* more */}
docs/guides/frontmatter.mdx:14:6      - Unknown word (means)      -- That means frontmatter is not supported
docs/guides/frontmatter.mdx:16:18     - Unknown word (powerful)   -- MDX comes with a powerful and dynamic alternative
docs/guides/frontmatter.mdx:16:5      - Unknown word (comes)      -- MDX comes with a powerful and
docs/guides/frontmatter.mdx:16:67     - Unknown word (namely)     -- alternative to frontmatter, namely ESM
docs/guides/frontmatter.mdx:18:1      - Unknown word (These)      -- These exports:
docs/guides/frontmatter.mdx:29:7      - Unknown word (twoslash)   -- ```js twoslash path="example.js"
docs/guides/frontmatter.mdx:39:42     - Unknown word (Assumes)    -- from './example.mdx' // Assumes an integration is used
docs/guides/frontmatter.mdx:3:15      - Unknown word (wooorm)     -- {github: 'wooorm', name: 'Titus Wormer
docs/guides/frontmatter.mdx:3:31      - Unknown word (Titus)      -- github: 'wooorm', name: 'Titus Wormer', twitter: 'wooorm
docs/guides/frontmatter.mdx:3:37      - Unknown word (Wormer)     -- wooorm', name: 'Titus Wormer', twitter: 'wooorm'
docs/guides/frontmatter.mdx:3:56      - Unknown word (wooorm)     -- Titus Wormer', twitter: 'wooorm'}
docs/guides/frontmatter.mdx:41:28     - Unknown word (Prints)     -- console.log(Post.title) // Prints 'Hi, World!'
docs/guides/frontmatter.mdx:44:30     - Unknown word (though)     -- might prefer frontmatter though, as it lets you define
docs/guides/frontmatter.mdx:44:44     - Unknown word (lets)       -- frontmatter though, as it lets you define data that
docs/guides/frontmatter.mdx:44:5      - Unknown word (might)      -- You might prefer frontmatter though
docs/guides/frontmatter.mdx:45:1      - Unknown word (extracted)  -- extracted from the file system
docs/guides/frontmatter.mdx:45:41     - Unknown word (compiling)  -- file system *before* compiling.
docs/guides/frontmatter.mdx:46:30     - Unknown word (looked)     -- MDX with frontmatter looked like this:
docs/guides/frontmatter.mdx:56:14     - Unknown word (compiling)  -- Then without compiling or evaluating the metadata
docs/guides/frontmatter.mdx:58:7      - Unknown word (twoslash)   -- ```js twoslash path="example.js"
docs/guides/frontmatter.mdx:62:29     - Unknown word (matter)     -- matter} from 'vfile-matter'
docs/guides/frontmatter.mdx:62:9      - Unknown word (matter)     -- import {matter} from 'vfile-matter
docs/guides/frontmatter.mdx:65:1      - Unknown word (matter)     -- matter(file)
docs/guides/frontmatter.mdx:67:23     - Unknown word (matter)     -- console.log(file.data.matter)
docs/guides/frontmatter.mdx:70:30     - Unknown word (doesn’t)    -- compiler, `@mdx-js/mdx`, doesn’t understand YAML frontmatter
docs/guides/frontmatter.mdx:70:38     - Unknown word (understand) -- mdx-js/mdx`, doesn’t understand YAML frontmatter by
docs/guides/frontmatter.mdx:71:22     - Unknown word (using)      -- it can be enabled by using a remark plugin,
docs/guides/frontmatter.mdx:74:7      - Unknown word (twoslash)   -- ```js twoslash path="example.js"
docs/guides/frontmatter.mdx:92:12     - Unknown word (wanted)     -- What if we wanted that too?
docs/guides/gfm.mdx:10:10     - Unknown word (flavored)   -- # GitHub flavored markdown (GFM)
docs/guides/gfm.mdx:120:19    - Unknown word (footnotes)  -- <section data-footnotes="true" className="footnotes
docs/guides/gfm.mdx:120:47    - Unknown word (footnotes)  -- footnotes="true" className="footnotes">
docs/guides/gfm.mdx:121:35    - Unknown word (footnote)   -- className="sr-only" id="footnote-label">
docs/guides/gfm.mdx:122:9     - Unknown word (Footnotes)  -- Footnotes
docs/guides/gfm.mdx:12:12     - Unknown word (explores)   -- This guide explores how to support GFM features
docs/guides/gfm.mdx:12:6      - Unknown word (guide)      -- This guide explores how to support
docs/guides/gfm.mdx:130:20    - Unknown word (footnote)   -- data-footnote-backref=""
docs/guides/gfm.mdx:132:31    - Unknown word (footnote)   -- className="data-footnote-backref"
docs/guides/gfm.mdx:13:1      - Unknown word (footnotes)  -- footnotes, strikethrough, tables
docs/guides/gfm.mdx:13:55     - Unknown word (more)       -- and task lists. {/* more */}
docs/guides/gfm.mdx:15:20     - Unknown word (flavored)   -- That means [GitHub flavored markdown (GFM)][gfm
docs/guides/gfm.mdx:15:6      - Unknown word (means)      -- That means [GitHub flavored markdown
docs/guides/gfm.mdx:17:1      - Unknown word (They)       -- They can be enabled by using
docs/guides/gfm.mdx:17:24     - Unknown word (using)      -- They can be enabled by using a remark plugin: [`remark
docs/guides/gfm.mdx:20:1      - Unknown word (More)       -- More info on plugins is available
docs/guides/gfm.mdx:20:41     - Unknown word (Extending)  -- plugins is available in [§ Extending MDX][extend]
docs/guides/gfm.mdx:31:4      - Unknown word (Footnote)   -- ## Footnote
docs/guides/gfm.mdx:39:18     - Unknown word (tildes)     -- ~one~ or ~~two~~ tildes.
docs/guides/gfm.mdx:3:15      - Unknown word (wooorm)     -- {github: 'wooorm', name: 'Titus Wormer
docs/guides/gfm.mdx:3:31      - Unknown word (Titus)      -- github: 'wooorm', name: 'Titus Wormer', twitter: 'wooorm
docs/guides/gfm.mdx:3:37      - Unknown word (Wormer)     -- wooorm', name: 'Titus Wormer', twitter: 'wooorm'
docs/guides/gfm.mdx:3:56      - Unknown word (wooorm)     -- Titus Wormer', twitter: 'wooorm'}
docs/guides/gfm.mdx:52:5      - Unknown word (above)      -- The above MDX with GFM can be
docs/guides/gfm.mdx:54:7      - Unknown word (twoslash)   -- ```js twoslash path="example.js"
docs/guides/gfm.mdx:70:19     - Unknown word (equivalent) -- <summary>Expand equivalent JSX</summary>
docs/guides/gfm.mdx:81:9      - Unknown word (Footnote)   -- <h2>Footnote</h2>
docs/guides/gfm.mdx:88:16     - Unknown word (footnote)   -- data-footnote-ref="true"
docs/guides/gfm.mdx:89:29     - Unknown word (footnote)   -- aria-describedby="footnote-label"
docs/guides/gfm.mdx:97:40     - Unknown word (tildes)     -- del> or <del>two</del> tildes.
docs/guides/index.mdx:16:24     - Unknown word (Contributors) -- author: [{name: 'MDX Contributors'}],
docs/guides/index.mdx:22:3      - Unknown word (Guides)       -- # Guides
docs/guides/index.mdx:24:1      - Unknown word (These)        -- These guides explain how to
docs/guides/index.mdx:24:14     - Unknown word (explain)      -- These guides explain how to accomplish several
docs/guides/index.mdx:24:29     - Unknown word (accomplish)   -- guides explain how to accomplish several common use cases
docs/guides/index.mdx:24:40     - Unknown word (several)      -- explain how to accomplish several common use cases and
docs/guides/index.mdx:24:7      - Unknown word (guides)       -- These guides explain how to accomplish
docs/guides/index.mdx:29:28     - Unknown word (props)        -- const navigationTree = props.navigationTree
docs/guides/index.mdx:31:30     - Unknown word (guides)       -- return item.name === '/guides/'
docs/guides/index.mdx:7:15      - Unknown word (Props)      -- * @typedef Props
docs/guides/injecting-components.mdx:102:8     - Unknown word (twoslash)      -- ```jsx twoslash path="mdx-components
docs/guides/injecting-components.mdx:10:3      - Unknown word (Injecting)  -- # Injecting components
docs/guides/injecting-components.mdx:114:15    - Unknown word (Pluto)         -- return 'Pluto'
docs/guides/injecting-components.mdx:123:9     - Unknown word (passing)       -- And now passing a file path or URL to
docs/guides/injecting-components.mdx:128:23    - Unknown word (jsxs)          -- import {jsx as _jsx, jsxs as _jsxs} from 'react
docs/guides/injecting-components.mdx:128:32    - Unknown word (jsxs)          -- jsx as _jsx, jsxs as _jsxs} from 'react/jsx-runtime
docs/guides/injecting-components.mdx:12:12     - Unknown word (shows)      -- This guide shows how to inject arbitrary
docs/guides/injecting-components.mdx:12:25     - Unknown word (inject)     -- This guide shows how to inject arbitrary components
docs/guides/injecting-components.mdx:12:6      - Unknown word (guide)      -- This guide shows how to inject
docs/guides/injecting-components.mdx:133:9     - Unknown word (locally)       -- Now our locally defined components will
docs/guides/injecting-components.mdx:13:11     - Unknown word (more)       -- runs. {/* more */}
docs/guides/injecting-components.mdx:14:4      - Unknown word (shows)      -- It shows how the underlying features
docs/guides/injecting-components.mdx:17:22     - Unknown word (advantage)  -- and how you can take advantage of that functionality
docs/guides/injecting-components.mdx:17:40     - Unknown word (functionality) -- take advantage of that functionality yourself.
docs/guides/injecting-components.mdx:17:54     - Unknown word (yourself)      -- of that functionality yourself.
docs/guides/injecting-components.mdx:26:48     - Unknown word (instead)       -- say a component used instead of the `h1`:
docs/guides/injecting-components.mdx:28:8      - Unknown word (twoslash)      -- ```jsx twoslash path="example.jsx"
docs/guides/injecting-components.mdx:35:40     - Unknown word (Assumes)       -- from './example.mdx' // Assumes an integration is used
docs/guides/injecting-components.mdx:3:15      - Unknown word (wooorm)     -- {github: 'wooorm', name: 'Titus Wormer
docs/guides/injecting-components.mdx:3:31      - Unknown word (Titus)      -- github: 'wooorm', name: 'Titus Wormer', twitter: 'wooorm
docs/guides/injecting-components.mdx:3:37      - Unknown word (Wormer)     -- wooorm', name: 'Titus Wormer', twitter: 'wooorm'
docs/guides/injecting-components.mdx:3:56      - Unknown word (wooorm)     -- Titus Wormer', twitter: 'wooorm'}
docs/guides/injecting-components.mdx:41:17     - Unknown word (Pluto)         -- return 'Pluto'
docs/guides/injecting-components.mdx:51:15     - Unknown word (yourself)      -- When you find yourself passing that `components
docs/guides/injecting-components.mdx:51:24     - Unknown word (passing)       -- When you find yourself passing that `components` prop
docs/guides/injecting-components.mdx:52:11     - Unknown word (want)          -- you might want to look at an alternative
docs/guides/injecting-components.mdx:52:5      - Unknown word (might)         -- you might want to look at an alternativ
docs/guides/injecting-components.mdx:53:11     - Unknown word (reach)         -- You might reach for our context based
docs/guides/injecting-components.mdx:53:5      - Unknown word (might)         -- You might reach for our context
docs/guides/injecting-components.mdx:55:29     - Unknown word (downsides)     -- context has performance downsides and context doesn’t
docs/guides/injecting-components.mdx:55:51     - Unknown word (doesn’t)       -- downsides and context doesn’t always work (such as
docs/guides/injecting-components.mdx:59:20     - Unknown word (passing)       -- how does component passing work?
docs/guides/injecting-components.mdx:60:13     - Unknown word (illustrated)   -- That can be illustrated by looking at the code
docs/guides/injecting-components.mdx:60:28     - Unknown word (looking)       -- can be illustrated by looking at the code generated
docs/guides/injecting-components.mdx:60:73     - Unknown word (above)         -- generated by MDX for the above
docs/guides/injecting-components.mdx:62:21     - Unknown word (shows)         -- Here is a diff that shows what the example normally
docs/guides/injecting-components.mdx:62:44     - Unknown word (normally)      -- shows what the example normally compiles to and what
docs/guides/injecting-components.mdx:62:53     - Unknown word (compiles)      -- the example normally compiles to and what
docs/guides/injecting-components.mdx:67:23     - Unknown word (jsxs)          -- import {jsx as _jsx, jsxs as _jsxs} from 'react
docs/guides/injecting-components.mdx:67:32     - Unknown word (jsxs)          -- jsx as _jsx, jsxs as _jsxs} from 'react/jsx-runtime
docs/guides/injecting-components.mdx:70:29     - Unknown word (props)         -- function _createMdxContent(props) {
docs/guides/injecting-components.mdx:71:48     - Unknown word (props)         -- 'em', h1: 'h1', ...props.components}
docs/guides/injecting-components.mdx:76:9      - Unknown word (props)         -- + ...props.components
docs/guides/injecting-components.mdx:80:12     - Unknown word (jsxs)          -- return _jsxs(_components.h1, {
docs/guides/injecting-components.mdx:81:46     - Unknown word (props)         -- function _createMdxContent(props) {
docs/guides/injecting-components.mdx:84:37     - Unknown word (props)         -- function MDXContent(props = {}) {
docs/guides/injecting-components.mdx:85:11     - Unknown word (wrapper)       -- - const {wrapper: MDXLayout} = props
docs/guides/injecting-components.mdx:86:11     - Unknown word (wrapper)       -- + const {wrapper: MDXLayout} = {..._provideCom
docs/guides/injecting-components.mdx:93:21     - Unknown word (taken)         -- that components are taken from `props.components
docs/guides/injecting-components.mdx:95:7      - Unknown word (refers)        -- which refers to an `useMDXComponents
docs/guides/injecting-components.mdx:98:30     - Unknown word (inject)        -- use this interface to inject components from a file
docs/guides/math.mdx:14:12     - Unknown word (explores)   -- This guide explores how to support math
docs/guides/math.mdx:14:6      - Unknown word (guide)      -- This guide explores how to support
docs/guides/math.mdx:14:61     - Unknown word (more)       -- (LaTeX) in MDX. {/* more */}
docs/guides/math.mdx:16:6      - Unknown word (means)      -- That means math is not supported
docs/guides/math.mdx:17:24     - Unknown word (using)      -- Math can be enabled by using a remark plugin: [`remark
docs/guides/math.mdx:18:32     - Unknown word (either)     -- with a rehype plugin: either
docs/guides/math.mdx:19:52     - Unknown word (mathjax)    -- (KaTeX) or [`rehype-mathjax`][rehype-mathjax]
docs/guides/math.mdx:21:39     - Unknown word (they)       -- and rehype plugins, they can be passed in [`remarkPlug
docs/guides/math.mdx:22:22     - Unknown word (respectively) -- and `rehypePlugins`, respectively, in `ProcessorOptions
docs/guides/math.mdx:23:1      - Unknown word (More)         -- More info on plugins is available
docs/guides/math.mdx:23:41     - Unknown word (Extending)    -- plugins is available in [§ Extending MDX][extend]
docs/guides/math.mdx:31:5      - Unknown word (above)        -- The above MDX with math can be
docs/guides/math.mdx:33:7      - Unknown word (twoslash)     -- ```js twoslash path="example.js"
docs/guides/math.mdx:39:14     - Unknown word (Katex)        -- import rehypeKatex from 'rehype-katex'
docs/guides/math.mdx:45:29     - Unknown word (Katex)        -- rehypePlugins: [rehypeKatex],
docs/guides/math.mdx:53:19     - Unknown word (equivalent)   -- <summary>Expand equivalent JSX</summary>
docs/guides/math.mdx:58:24     - Unknown word (katex)        -- <span className="katex">
docs/guides/math.mdx:59:26     - Unknown word (katex)        -- <span className="katex-mathml">
docs/guides/math.mdx:59:32     - Unknown word (mathml)       -- span className="katex-mathml">
docs/guides/math.mdx:5:15      - Unknown word (wooorm)     -- {github: 'wooorm', name: 'Titus Wormer
docs/guides/math.mdx:5:31      - Unknown word (Titus)      -- github: 'wooorm', name: 'Titus Wormer', twitter: 'wooorm
docs/guides/math.mdx:5:37      - Unknown word (Wormer)     -- wooorm', name: 'Titus Wormer', twitter: 'wooorm'
docs/guides/math.mdx:5:56      - Unknown word (wooorm)     -- Titus Wormer', twitter: 'wooorm'}
docs/guides/math.mdx:62:26     - Unknown word (katex)        -- <span className="katex-html" aria-hidden="true
docs/guides/math.mdx:72:25     - Unknown word (chose)        -- Important**: if you chose `rehype-katex`, you
docs/guides/math.mdx:72:58     - Unknown word (also)         -- rehype-katex`, you should also use `katex.css`
docs/guides/math.mdx:72:68     - Unknown word (katex)        -- you should also use `katex.css`
docs/guides/math.mdx:73:3      - Unknown word (somewhere)    -- somewhere on the page to style
docs/guides/math.mdx:73:39     - Unknown word (properly)     -- the page to style math properly.
docs/guides/math.mdx:81:53     - Unknown word (katex)        -- stylesheet, go to [`katex docs`][katex docs].
docs/guides/math.mdx:87:17     - Unknown word (also)         -- **Note:** see also
docs/guides/math.mdx:90:32     - Unknown word (calculations) -- properties or to make calculations)
docs/guides/mdx-on-demand.mdx:100:32    - Unknown word (Props)      -- async function getStaticProps() {
docs/guides/mdx-on-demand.mdx:107:11    - Unknown word (props)      -- return {props: {code}}
docs/guides/mdx-on-demand.mdx:14:12     - Unknown word (shows)      -- This guide shows how to use `@mdx-js
docs/guides/mdx-on-demand.mdx:14:6      - Unknown word (guide)      -- This guide shows how to use `@mdx
docs/guides/mdx-on-demand.mdx:15:28     - Unknown word (more)       -- result on clients. {/* more */}
docs/guides/mdx-on-demand.mdx:16:38     - Unknown word (Remix)      -- such as Next.js and Remix, make it easy to split
docs/guides/mdx-on-demand.mdx:16:53     - Unknown word (easy)       -- js and Remix, make it easy to split work between
docs/guides/mdx-on-demand.mdx:16:6      - Unknown word (frameworks) -- Some frameworks, such as Next.js and
docs/guides/mdx-on-demand.mdx:18:1      - Unknown word (Using)      -- Using that it’s possible to
docs/guides/mdx-on-demand.mdx:18:17     - Unknown word (possible)   -- Using that it’s possible to for example do most
docs/guides/mdx-on-demand.mdx:18:44     - Unknown word (most)       -- possible to for example do most of the work on demand
docs/guides/mdx-on-demand.mdx:19:8      - Unknown word (instead)    -- server instead of at build time, then
docs/guides/mdx-on-demand.mdx:20:1      - Unknown word (they)       -- they finally use it.
docs/guides/mdx-on-demand.mdx:22:32     - Unknown word (sometimes)  -- similar to what people sometimes use [`mdx-bundler`]
docs/guides/mdx-on-demand.mdx:22:9      - Unknown word (similar)    -- This is similar to what people sometimes
docs/guides/mdx-on-demand.mdx:23:51     - Unknown word (also)       -- remote] for, but MDX also supports it.
docs/guides/mdx-on-demand.mdx:29:7      - Unknown word (twoslash)   -- ```js twoslash path="server.js"
docs/guides/mdx-on-demand.mdx:36:37     - Unknown word (somehow)    -- code` to the client somehow.
docs/guides/mdx-on-demand.mdx:41:7      - Unknown word (twoslash)   -- ```js twoslash path="client.js"
docs/guides/mdx-on-demand.mdx:45:50     - Unknown word (somehow)    -- get `code` from server somehow.
docs/guides/mdx-on-demand.mdx:51:19     - Unknown word (Using)      -- framework (see [§ Using MDX][use]).
docs/guides/mdx-on-demand.mdx:53:1      - Unknown word (More)       -- More information is available
docs/guides/mdx-on-demand.mdx:55:30     - Unknown word (also)       -- other use cases, you can also use [`evaluate`][eval
docs/guides/mdx-on-demand.mdx:55:70     - Unknown word (compiles)   -- ][eval], which both compiles
docs/guides/mdx-on-demand.mdx:5:15      - Unknown word (wooorm)     -- {github: 'wooorm', name: 'Titus Wormer
docs/guides/mdx-on-demand.mdx:5:31      - Unknown word (Titus)      -- github: 'wooorm', name: 'Titus Wormer', twitter: 'wooorm
docs/guides/mdx-on-demand.mdx:5:37      - Unknown word (Wormer)     -- wooorm', name: 'Titus Wormer', twitter: 'wooorm'
docs/guides/mdx-on-demand.mdx:5:56      - Unknown word (wooorm)     -- Titus Wormer', twitter: 'wooorm'}
docs/guides/mdx-on-demand.mdx:61:10     - Unknown word (minified)   -- nicely minified bundle out or so.
docs/guides/mdx-on-demand.mdx:61:3      - Unknown word (nicely)     -- nicely minified bundle out
docs/guides/mdx-on-demand.mdx:66:6      - Unknown word (frameworks) -- Some frameworks let you write the server
docs/guides/mdx-on-demand.mdx:69:22     - Unknown word (pages)      -- ``js twoslash path="pages/hello.js"
docs/guides/mdx-on-demand.mdx:69:7      - Unknown word (twoslash)   -- ```js twoslash path="pages/hello.js
docs/guides/mdx-on-demand.mdx:80:28     - Unknown word (props)      -- param {{code: string}} props
docs/guides/syntax-highlighting.mdx:12:10     - Unknown word (highlighting) -- # Syntax highlighting
docs/guides/syntax-highlighting.mdx:131:20    - Unknown word (everything)   -- The `meta` part is everything after the language
docs/guides/syntax-highlighting.mdx:132:43    - Unknown word (normally)     -- part of markdown: it’s normally ignored.
docs/guides/syntax-highlighting.mdx:133:12    - Unknown word (above)        -- But as the above example shows, it’s
docs/guides/syntax-highlighting.mdx:133:26    - Unknown word (shows)        -- as the above example shows, it’s a useful place
docs/guides/syntax-highlighting.mdx:133:40    - Unknown word (useful)       -- example shows, it’s a useful place to put some extra
docs/guides/syntax-highlighting.mdx:135:15    - Unknown word (doesn’t)      -- `@mdx-js/mdx` doesn’t know whether you’re
docs/guides/syntax-highlighting.mdx:135:23    - Unknown word (know)         -- mdx-js/mdx` doesn’t know whether you’re handling
docs/guides/syntax-highlighting.mdx:135:28    - Unknown word (whether)      -- js/mdx` doesn’t know whether you’re handling code
docs/guides/syntax-highlighting.mdx:136:67    - Unknown word (handles)      -- defaults to how markdown handles it:
docs/guides/syntax-highlighting.mdx:139:17    - Unknown word (want)         -- But what if you want to access `meta` at
docs/guides/syntax-highlighting.mdx:140:8     - Unknown word (exactly)      -- That’s exactly what the rehype plugin
docs/guides/syntax-highlighting.mdx:142:4     - Unknown word (lets)         -- It lets you type JSX attributes
docs/guides/syntax-highlighting.mdx:147:1     - Unknown word (More)         -- More info on plugins is available
docs/guides/syntax-highlighting.mdx:147:41    - Unknown word (Extending)    -- plugins is available in [§ Extending MDX][extend]
docs/guides/syntax-highlighting.mdx:14:12     - Unknown word (explores)     -- This guide explores how to apply syntax
docs/guides/syntax-highlighting.mdx:14:41     - Unknown word (highlighting) -- how to apply syntax highlighting to code
docs/guides/syntax-highlighting.mdx:14:6      - Unknown word (guide)        -- This guide explores how to apply
docs/guides/syntax-highlighting.mdx:15:13     - Unknown word (more)         -- blocks. {/* more */}
docs/guides/syntax-highlighting.mdx:17:26     - Unknown word (highlighting) -- does not apply syntax highlighting to code blocks by default
docs/guides/syntax-highlighting.mdx:19:1      - Unknown word (There)        -- There are two ways to accomplish
docs/guides/syntax-highlighting.mdx:19:15     - Unknown word (ways)         -- There are two ways to accomplish syntax
docs/guides/syntax-highlighting.mdx:19:23     - Unknown word (accomplish)   -- There are two ways to accomplish syntax highlighting
docs/guides/syntax-highlighting.mdx:19:41     - Unknown word (highlighting) -- to accomplish syntax highlighting: at compile time or
docs/guides/syntax-highlighting.mdx:21:1      - Unknown word (Doing)        -- Doing it at compile time means
docs/guides/syntax-highlighting.mdx:21:26     - Unknown word (means)        -- Doing it at compile time means the effort is spent
docs/guides/syntax-highlighting.mdx:21:36     - Unknown word (effort)       -- compile time means the effort is spent upfront so
docs/guides/syntax-highlighting.mdx:21:46     - Unknown word (spent)        -- means the effort is spent upfront so that readers
docs/guides/syntax-highlighting.mdx:21:52     - Unknown word (upfront)      -- the effort is spent upfront so that readers will
docs/guides/syntax-highlighting.mdx:21:68     - Unknown word (readers)      -- spent upfront so that readers will
docs/guides/syntax-highlighting.mdx:22:13     - Unknown word (experience)   -- have a fast experience as no extra code is
docs/guides/syntax-highlighting.mdx:22:52     - Unknown word (them)         -- extra code is sent to them (syntax highlighting
docs/guides/syntax-highlighting.mdx:22:65     - Unknown word (highlighting) -- sent to them (syntax highlighting
docs/guides/syntax-highlighting.mdx:23:1      - Unknown word (needs)        -- needs a *lot* of code to work
docs/guides/syntax-highlighting.mdx:24:1      - Unknown word (Doing)        -- Doing it at runtime gives
docs/guides/syntax-highlighting.mdx:24:21     - Unknown word (gives)        -- Doing it at runtime gives more flexibility by
docs/guides/syntax-highlighting.mdx:24:27     - Unknown word (more)         -- it at runtime gives more flexibility by moving
docs/guides/syntax-highlighting.mdx:24:32     - Unknown word (flexibility)  -- at runtime gives more flexibility by moving the work to
docs/guides/syntax-highlighting.mdx:25:22     - Unknown word (slow)         -- This can result in a slow experience for readers
docs/guides/syntax-highlighting.mdx:25:27     - Unknown word (experience)   -- can result in a slow experience for readers though.
docs/guides/syntax-highlighting.mdx:25:42     - Unknown word (readers)      -- slow experience for readers though.
docs/guides/syntax-highlighting.mdx:25:50     - Unknown word (though)       -- experience for readers though.
docs/guides/syntax-highlighting.mdx:26:4      - Unknown word (also)         -- It also depends on what framework
docs/guides/syntax-highlighting.mdx:26:9      - Unknown word (depends)      -- It also depends on what framework you
docs/guides/syntax-highlighting.mdx:31:26     - Unknown word (starry)       -- for example [`rehype-starry-night`][rehype-starry
docs/guides/syntax-highlighting.mdx:31:33     - Unknown word (night)        -- example [`rehype-starry-night`][rehype-starry-night
docs/guides/syntax-highlighting.mdx:31:64     - Unknown word (starry)       -- rehype-starry-night] (`starry-night`),
docs/guides/syntax-highlighting.mdx:31:71     - Unknown word (night)        -- starry-night] (`starry-night`),
docs/guides/syntax-highlighting.mdx:32:42     - Unknown word (lowlight)     -- rehype-highlight] (`lowlight`, `highlight.js`),
docs/guides/syntax-highlighting.mdx:33:45     - Unknown word (refractor)    -- prism`][rehype-prism] (`refractor`, `prism`)
docs/guides/syntax-highlighting.mdx:33:7      - Unknown word (mapbox)       -- or [`@mapbox/rehype-prism`][rehype
docs/guides/syntax-highlighting.mdx:34:4      - Unknown word (doing)        -- by doing something like this
docs/guides/syntax-highlighting.mdx:36:7      - Unknown word (twoslash)     -- ```js twoslash path="example.js"
docs/guides/syntax-highlighting.mdx:40:14     - Unknown word (Starry)       -- import rehypeStarryNight from 'rehype-starry
docs/guides/syntax-highlighting.mdx:40:20     - Unknown word (Night)        -- import rehypeStarryNight from 'rehype-starry
docs/guides/syntax-highlighting.mdx:40:39     - Unknown word (starry)       -- ehypeStarryNight from 'rehype-starry-night'
docs/guides/syntax-highlighting.mdx:40:46     - Unknown word (night)        -- from 'rehype-starry-night'
docs/guides/syntax-highlighting.mdx:47:53     - Unknown word (Starry)       -- rehypePlugins: [rehypeStarryNight]}))
docs/guides/syntax-highlighting.mdx:47:59     - Unknown word (Night)        -- rehypePlugins: [rehypeStarryNight]}))
docs/guides/syntax-highlighting.mdx:52:19     - Unknown word (equivalent)   -- <summary>Expand equivalent JSX</summary>
docs/guides/syntax-highlighting.mdx:5:15      - Unknown word (wooorm)     -- {github: 'wooorm', name: 'Titus Wormer
docs/guides/syntax-highlighting.mdx:5:31      - Unknown word (Titus)      -- github: 'wooorm', name: 'Titus Wormer', twitter: 'wooorm
docs/guides/syntax-highlighting.mdx:5:37      - Unknown word (Wormer)     -- wooorm', name: 'Titus Wormer', twitter: 'wooorm'
docs/guides/syntax-highlighting.mdx:5:56      - Unknown word (wooorm)     -- Titus Wormer', twitter: 'wooorm'}
docs/guides/syntax-highlighting.mdx:66:22     - Unknown word (must)         -- **Important**: you must likely also include
docs/guides/syntax-highlighting.mdx:66:27     - Unknown word (likely)       -- Important**: you must likely also include CSS somewhere
docs/guides/syntax-highlighting.mdx:66:34     - Unknown word (also)         -- Important**: you must likely also include CSS somewhere
docs/guides/syntax-highlighting.mdx:66:51     - Unknown word (somewhere)    -- likely also include CSS somewhere on the page.
docs/guides/syntax-highlighting.mdx:67:46     - Unknown word (using)        -- of the plugin you’re using for more information
docs/guides/syntax-highlighting.mdx:67:56     - Unknown word (more)         -- plugin you’re using for more information.
docs/guides/syntax-highlighting.mdx:73:16     - Unknown word (highlighter)  -- [`react-syntax-highlighter`][react-syntax-highlighter
docs/guides/syntax-highlighting.mdx:74:4      - Unknown word (doing)        -- by doing something like this
docs/guides/syntax-highlighting.mdx:76:25     - Unknown word (highlighter)  -- Note: `react-syntax-highlighter` doesn’t seem actively
docs/guides/syntax-highlighting.mdx:76:38     - Unknown word (doesn’t)      -- syntax-highlighter` doesn’t seem actively maintained
docs/guides/syntax-highlighting.mdx:76:46     - Unknown word (seem)         -- highlighter` doesn’t seem actively maintained
docs/guides/syntax-highlighting.mdx:76:51     - Unknown word (actively)     -- highlighter` doesn’t seem actively maintained so no twoslash
docs/guides/syntax-highlighting.mdx:76:60     - Unknown word (maintained)   -- doesn’t seem actively maintained so no twoslash to check
docs/guides/syntax-highlighting.mdx:76:77     - Unknown word (twoslash)     -- actively maintained so no twoslash to check this example
docs/guides/syntax-highlighting.mdx:79:14     - Unknown word (Highlighter)  -- import SyntaxHighlighter from 'react-syntax-highlighte
docs/guides/syntax-highlighting.mdx:79:45     - Unknown word (highlighter)  -- ighlighter from 'react-syntax-highlighter'
docs/guides/syntax-highlighting.mdx:80:37     - Unknown word (Assumes)      -- from './example.mdx' // Assumes an integration is used
docs/guides/syntax-highlighting.mdx:87:14     - Unknown word (Highlighter)  -- ? <SyntaxHighlighter language={match[1]}
docs/guides/syntax-highlighting.mdx:93:19     - Unknown word (equivalent)   -- <summary>Expand equivalent JSX</summary>
docs/index.mdx:100:24    - Unknown word (playground) -- made an interactive playground where you can try MDX
docs/index.mdx:100:4     - Unknown word (made)       -- We made an interactive playground
docs/index.mdx:101:1     - Unknown word (turns)      -- turns into.
docs/index.mdx:104:8     - Unknown word (started)    -- ## Get started
docs/index.mdx:106:1     - Unknown word (There)      -- There are integrations for
docs/index.mdx:106:11    - Unknown word (integrations) -- There are integrations for most bundlers, frameworks
docs/index.mdx:106:28    - Unknown word (most)         -- are integrations for most bundlers, frameworks
docs/index.mdx:106:43    - Unknown word (frameworks)   -- tegrations for most bundlers, frameworks, and editors.
docs/index.mdx:107:1     - Unknown word (Whether)      -- Whether you build with Docusaurus
docs/index.mdx:109:8     - Unknown word (using)        -- You’re using React, Preact, or Vue
docs/index.mdx:110:6     - Unknown word (started)      -- [Get started »][getting-started]
docs/index.mdx:115:10    - Unknown word (Powerful)     -- * ❤️ **Powerful**: MDX blends markdown
docs/index.mdx:115:26    - Unknown word (blends)       -- ️ **Powerful**: MDX blends markdown and JSX syntax
docs/index.mdx:115:64    - Unknown word (perfectly)    -- and JSX syntax to fit perfectly in
docs/index.mdx:117:10    - Unknown word (Everything)   -- * 💻 **Everything is a component**: Use
docs/index.mdx:119:26    - Unknown word (Decide)       -- � **Customizable**: Decide which component is rendered
docs/index.mdx:121:32    - Unknown word (simplicity)   -- Markdown-based**: The simplicity and elegance of markdown
docs/index.mdx:121:47    - Unknown word (elegance)     -- The simplicity and elegance of markdown remains
docs/index.mdx:121:68    - Unknown word (remains)      -- elegance of markdown remains,
docs/index.mdx:122:31    - Unknown word (want)         -- use JSX only when you want to
docs/index.mdx:123:10    - Unknown word (Blazingly)    -- * 🔥 **Blazingly blazing fast**: MDX
docs/index.mdx:123:20    - Unknown word (blazing)      -- * 🔥 **Blazingly blazing fast**: MDX has no runtime
docs/index.mdx:123:72    - Unknown word (occurs)       -- runtime, all compilation occurs
docs/index.mdx:127:17    - Unknown word (good)         -- > lol mdx is so good
docs/index.mdx:129:14    - Unknown word (abramov)      -- > — [**@dan\_abramov**][quote]
docs/index.mdx:16:24     - Unknown word (authorable) -- "description": "an authorable format for writing JSX
docs/index.mdx:18:6      - Unknown word (offers)     -- "offers": {
docs/index.mdx:1:35      - Unknown word (snowfall)   -- from './_component/snowfall.jsx'
docs/index.mdx:23:6      - Unknown word (operating)  -- "operatingSystem": "Windows, MacOS
docs/index.mdx:42:5      - Unknown word (lets)       -- MDX lets you use JSX in your
docs/index.mdx:43:48     - Unknown word (charts)     -- such as interactive charts or alerts, and embed
docs/index.mdx:43:58     - Unknown word (alerts)     -- interactive charts or alerts, and embed them
docs/index.mdx:43:76     - Unknown word (them)       -- or alerts, and embed them
docs/index.mdx:45:56     - Unknown word (blast)      -- content with components a blast. {/* more */}
docs/index.mdx:45:6      - Unknown word (makes)      -- This makes writing long-form content
docs/index.mdx:45:67     - Unknown word (more)       -- components a blast. {/* more */}
docs/index.mdx:49:17     - Unknown word (card)       -- <div className="card big">
docs/index.mdx:52:50     - Unknown word (also)       -- nothing big, which is also nice sometimes!
docs/index.mdx:52:60     - Unknown word (sometimes)  -- which is also nice sometimes!
docs/index.mdx:53:15     - Unknown word (drops)      -- This mainly drops support for old Node
docs/index.mdx:53:53     - Unknown word (later)      -- old Node (use 16 or later), adds modern ES202
docs/index.mdx:53:61     - Unknown word (adds)       -- Node (use 16 or later), adds modern ES2024
docs/index.mdx:53:8      - Unknown word (mainly)     -- This mainly drops support for old
docs/index.mdx:55:11     - Unknown word (several)    -- removes several deprecated options.
docs/index.mdx:55:3      - Unknown word (removes)    -- removes several deprecated options
docs/index.mdx:67:28     - Unknown word (snowfall)   -- import {Chart} from './snowfall.js'
docs/index.mdx:6:15      - Unknown word (johno)      -- {github: 'johno', name: 'John Otander
docs/index.mdx:6:30      - Unknown word (John)       -- github: 'johno', name: 'John Otander', twitter:
docs/index.mdx:6:35      - Unknown word (Otander)    -- johno', name: 'John Otander', twitter: '4lpine'
docs/index.mdx:6:56      - Unknown word (lpine)      -- Otander', twitter: '4lpine'},
docs/index.mdx:70:19     - Unknown word (snowfall)   -- # Last year’s snowfall
docs/index.mdx:72:20     - Unknown word (snowfall)   -- In {year}, the snowfall was above average.
docs/index.mdx:72:33     - Unknown word (above)      -- year}, the snowfall was above average.
docs/index.mdx:73:12     - Unknown word (followed)   -- It was followed by a warm spring which
docs/index.mdx:73:26     - Unknown word (warm)       -- It was followed by a warm spring which caused
docs/index.mdx:73:31     - Unknown word (spring)     -- was followed by a warm spring which caused
docs/index.mdx:73:44     - Unknown word (caused)     -- a warm spring which caused
docs/index.mdx:74:37     - Unknown word (nearby)     -- conditions in many of the nearby rivers.
docs/index.mdx:74:44     - Unknown word (rivers)     -- in many of the nearby rivers.
docs/index.mdx:7:15      - Unknown word (wooorm)     -- {github: 'wooorm', name: 'Titus Wormer
docs/index.mdx:7:31      - Unknown word (Titus)      -- github: 'wooorm', name: 'Titus Wormer', twitter: 'wooorm
docs/index.mdx:7:37      - Unknown word (Wormer)     -- wooorm', name: 'Titus Wormer', twitter: 'wooorm'
docs/index.mdx:7:56      - Unknown word (wooorm)     -- Titus Wormer', twitter: 'wooorm'}
docs/index.mdx:81:13     - Unknown word (compiled)   -- It gets compiled to JavaScript that you
docs/index.mdx:81:8      - Unknown word (gets)       -- It gets compiled to JavaScript
docs/index.mdx:87:21     - Unknown word (snowfall)   -- # Last year’s snowfall
docs/index.mdx:89:35     - Unknown word (above)      -- year}, the snowfall was above average.
docs/index.mdx:90:14     - Unknown word (followed)   -- It was followed by a warm spring which
docs/index.mdx:90:28     - Unknown word (warm)       -- It was followed by a warm spring which caused
docs/index.mdx:90:33     - Unknown word (spring)     -- was followed by a warm spring which caused flood conditions
docs/index.mdx:90:46     - Unknown word (caused)     -- a warm spring which caused flood conditions in
docs/index.mdx:91:11     - Unknown word (nearby)     -- the nearby rivers.
docs/index.mdx:91:18     - Unknown word (rivers)     -- the nearby rivers.
docs/migrating/v1.mdx:13:38     - Unknown word (guide)      -- is an old migration guide.
docs/migrating/v1.mdx:14:10     - Unknown word (Migrating)  -- See [§ Migrating from v1 to v2](/migrating
docs/migrating/v1.mdx:15:16     - Unknown word (kept)       -- The below is kept as is for historical
docs/migrating/v1.mdx:15:31     - Unknown word (historical) -- below is kept as is for historical purposes.
docs/migrating/v1.mdx:15:42     - Unknown word (purposes)   -- as is for historical purposes.
docs/migrating/v1.mdx:18:3      - Unknown word (Migrating)  -- # Migrating from v0 to v1
docs/migrating/v1.mdx:20:1      - Unknown word (Unfortunately) -- Unfortunately, we’ve had to introduce
docs/migrating/v1.mdx:20:29     - Unknown word (introduce)     -- Unfortunately, we’ve had to introduce a few breaking changes
docs/migrating/v1.mdx:20:45     - Unknown word (breaking)      -- had to introduce a few breaking changes, so we’ve written
docs/migrating/v1.mdx:21:11     - Unknown word (guide)         -- migration guide.
docs/migrating/v1.mdx:22:23     - Unknown word (seamless)      -- In order to ensure as seamless of an upgrade as possible
docs/migrating/v1.mdx:22:49     - Unknown word (possible)      -- seamless of an upgrade as possible we plan on supporting
docs/migrating/v1.mdx:22:69     - Unknown word (supporting)    -- possible we plan on supporting
docs/migrating/v1.mdx:23:30     - Unknown word (there’s)       -- the next 12 months so there’s not a huge rush to update
docs/migrating/v1.mdx:23:44     - Unknown word (huge)          -- months so there’s not a huge rush to update (though
docs/migrating/v1.mdx:23:49     - Unknown word (rush)          -- so there’s not a huge rush to update (though we
docs/migrating/v1.mdx:23:65     - Unknown word (though)        -- huge rush to update (though we’d
docs/migrating/v1.mdx:26:7      - Unknown word (Breaking)      -- ## ⚠️ Breaking changes
docs/migrating/v1.mdx:28:23     - Unknown word (replaced)      -- [🚨`@mdx-js/tag` is replaced by `@mdx-js/react` and
docs/migrating/v1.mdx:29:20     - Unknown word (merges)        -- * [MDXProvider now merges component contexts when
docs/migrating/v1.mdx:29:37     - Unknown word (contexts)      -- now merges component contexts when nested](#mdxprovider
docs/migrating/v1.mdx:41:12     - Unknown word (different)     -- ### What’s different?
docs/migrating/v1.mdx:43:31     - Unknown word (been)          -- MDXTag implementation has been removed with a custom
docs/migrating/v1.mdx:44:1      - Unknown word (inspired)      -- inspired by
docs/migrating/v1.mdx:46:37     - Unknown word (more)          -- that transpiled JSX is more readable and that JSX
docs/migrating/v1.mdx:46:6      - Unknown word (ensures)       -- This ensures that transpiled JSX
docs/migrating/v1.mdx:47:32     - Unknown word (counterpart)   -- component as its markdown counterpart.
docs/migrating/v1.mdx:48:4      - Unknown word (also)          -- It also allows MDXProvider to
docs/migrating/v1.mdx:48:9      - Unknown word (allows)        -- It also allows MDXProvider to provide
docs/migrating/v1.mdx:51:32     - Unknown word (also)          -- implementation will also cause JSX HTML elements
docs/migrating/v1.mdx:53:38     - Unknown word (identically)   -- following will result in two identically rendered `h1`s:
docs/migrating/v1.mdx:5:15      - Unknown word (johno)      -- {github: 'johno', name: 'John Otander
docs/migrating/v1.mdx:5:30      - Unknown word (John)       -- github: 'johno', name: 'John Otander', twitter:
docs/migrating/v1.mdx:5:35      - Unknown word (Otander)    -- johno', name: 'John Otander', twitter: '4lpine'
docs/migrating/v1.mdx:5:56      - Unknown word (lpine)      -- Otander', twitter: '4lpine'}
docs/migrating/v1.mdx:61:24     - Unknown word (further)       -- See the blog post for further reading](/blog/custom
docs/migrating/v1.mdx:65:23     - Unknown word (most)          -- This shouldn’t affect most usecases, however if
docs/migrating/v1.mdx:65:28     - Unknown word (usecases)      -- shouldn’t affect most usecases, however if you’re nesting
docs/migrating/v1.mdx:65:38     - Unknown word (however)       -- affect most usecases, however if you’re nesting component
docs/migrating/v1.mdx:65:56     - Unknown word (nesting)       -- usecases, however if you’re nesting component
docs/migrating/v1.mdx:65:6      - Unknown word (shouldn’t)     -- This shouldn’t affect most usecases
docs/migrating/v1.mdx:66:1      - Unknown word (contexts)      -- contexts and rely on them not
docs/migrating/v1.mdx:66:14     - Unknown word (rely)          -- contexts and rely on them not being merged
docs/migrating/v1.mdx:66:22     - Unknown word (them)          -- contexts and rely on them not being merged you
docs/migrating/v1.mdx:66:31     - Unknown word (being)         -- and rely on them not being merged you will have
docs/migrating/v1.mdx:66:37     - Unknown word (merged)        -- rely on them not being merged you will have to use
docs/migrating/v1.mdx:66:69     - Unknown word (functional)    -- will have to use the functional
docs/migrating/v1.mdx:67:12     - Unknown word (allows)        -- form which allows you to customize the
docs/migrating/v1.mdx:67:26     - Unknown word (customize)     -- which allows you to customize the merge.
docs/migrating/v1.mdx:68:4      - Unknown word (ignoring)      -- By ignoring outer context components
docs/migrating/v1.mdx:68:42     - Unknown word (returning)     -- context components and returning a new component mapping
docs/migrating/v1.mdx:81:8      - Unknown word (upgrading)     -- Before upgrading to `@mdx-js/mdx@1`,
docs/migrating/v2.mdx:109:29    - Unknown word (follows)         -- update your code as follows:
docs/migrating/v2.mdx:13:38     - Unknown word (guide)      -- is an old migration guide.
docs/migrating/v2.mdx:14:10     - Unknown word (Migrating)  -- See [§ Migrating from v2 to v3](/migrating
docs/migrating/v2.mdx:15:16     - Unknown word (kept)       -- The below is kept as is for historical
docs/migrating/v2.mdx:15:31     - Unknown word (historical) -- below is kept as is for historical purposes.
docs/migrating/v2.mdx:15:42     - Unknown word (purposes)   -- as is for historical purposes.
docs/migrating/v2.mdx:173:48    - Unknown word (worked)          -- close to how MDX 1 worked.
docs/migrating/v2.mdx:173:5     - Unknown word (above)           -- The above changes get MDX 2 close
docs/migrating/v2.mdx:174:17    - Unknown word (simpler)         -- You can make it simpler:
docs/migrating/v2.mdx:177:6     - Unknown word (compiles)        -- It compiles modern JavaScript to
docs/migrating/v2.mdx:180:42    - Unknown word (footnotes)       -- for autolink literals, footnotes, strikethrough, tables
docs/migrating/v2.mdx:180:6     - Unknown word (adds)            -- It adds support for autolink
docs/migrating/v2.mdx:182:16    - Unknown word (want)            -- If you don’t want them, you can uninstall
docs/migrating/v2.mdx:182:21    - Unknown word (them)            -- If you don’t want them, you can uninstall it
docs/migrating/v2.mdx:184:21    - Unknown word (guide)           -- More info in [our guide on GFM][guide-gfm]
docs/migrating/v2.mdx:184:3     - Unknown word (More)            -- More info in [our guide on
docs/migrating/v2.mdx:186:48    - Unknown word (passing)         -- context based components passing.
docs/migrating/v2.mdx:186:6     - Unknown word (adds)            -- It adds support for context
docs/migrating/v2.mdx:189:3     - Unknown word (More)            -- More info in [¶ MDX provider
docs/migrating/v2.mdx:189:37    - Unknown word (Using)           -- ¶ MDX provider in § Using MDX][mdx-provider]
docs/migrating/v2.mdx:18:3      - Unknown word (Migrating)  -- # Migrating from v1 to v2
docs/migrating/v2.mdx:193:1     - Unknown word (Using)           -- Using Preact as an example
docs/migrating/v2.mdx:202:18    - Unknown word (either)          -- // Optional: either remove the following
docs/migrating/v2.mdx:209:23    - Unknown word (please)          -- For more information, please see [§ API in `@mdx
docs/migrating/v2.mdx:209:5     - Unknown word (more)            -- For more information, please
docs/migrating/v2.mdx:215:17    - Unknown word (replaced)        -- * `renderer` is replaced by `jsxImportSource
docs/migrating/v2.mdx:216:3     - Unknown word (others)          -- others options.
docs/migrating/v2.mdx:217:3     - Unknown word (More)            -- More info in [§ API in `
docs/migrating/v2.mdx:218:17    - Unknown word (were)            -- * Other options were undocumented but passed
docs/migrating/v2.mdx:218:22    - Unknown word (undocumented)    -- Other options were undocumented but passed to `@mdx
docs/migrating/v2.mdx:221:23    - Unknown word (please)          -- For more information, please see [§ API in `@mdx
docs/migrating/v2.mdx:221:5     - Unknown word (more)            -- For more information, please
docs/migrating/v2.mdx:225:25    - Unknown word (integrations)    -- update our framework integrations, please first update
docs/migrating/v2.mdx:225:39    - Unknown word (please)          -- framework integrations, please first update to recent
docs/migrating/v2.mdx:227:11    - Unknown word (sure)            -- Then make sure ESM is supported.
docs/migrating/v2.mdx:228:19    - Unknown word (above)           -- [ESM is explained above][esm].
docs/migrating/v2.mdx:228:9     - Unknown word (explained)       -- [ESM is explained above][esm].
docs/migrating/v2.mdx:235:11    - Unknown word (these)           -- Note that these packages now only add
docs/migrating/v2.mdx:236:1     - Unknown word (passing)         -- passing.
docs/migrating/v2.mdx:237:43    - Unknown word (them)            -- that, you can uninstall them.
docs/migrating/v2.mdx:238:1     - Unknown word (More)            -- More info in [¶ MDX provider
docs/migrating/v2.mdx:238:35    - Unknown word (Using)           -- ¶ MDX provider in § Using MDX][mdx-provider].
docs/migrating/v2.mdx:242:26    - Unknown word (slightly)        -- interface of changed slightly:
docs/migrating/v2.mdx:245:42    - Unknown word (instead)         -- framework’s functions instead: `React.createElement
docs/migrating/v2.mdx:24:15     - Unknown word (loader)     -- * [`@mdx-js/loader`](#mdx-jsloader)
docs/migrating/v2.mdx:250:55    - Unknown word (sure)            -- js/mdx`, first make sure ESM is supported.
docs/migrating/v2.mdx:251:19    - Unknown word (above)           -- [ESM is explained above][esm].
docs/migrating/v2.mdx:251:9     - Unknown word (explained)       -- [ESM is explained above][esm].
docs/migrating/v2.mdx:258:29    - Unknown word (follows)         -- update your code as follows:
docs/migrating/v2.mdx:290:48    - Unknown word (worked)          -- close to how MDX 1 worked.
docs/migrating/v2.mdx:290:5     - Unknown word (above)           -- The above changes get MDX 2 close
docs/migrating/v2.mdx:291:17    - Unknown word (simpler)         -- You can make it simpler:
docs/migrating/v2.mdx:294:42    - Unknown word (footnotes)       -- for autolink literals, footnotes, strikethrough, tables
docs/migrating/v2.mdx:294:6     - Unknown word (adds)            -- It adds support for autolink
docs/migrating/v2.mdx:296:16    - Unknown word (want)            -- If you don’t want them, you can uninstall
docs/migrating/v2.mdx:296:21    - Unknown word (them)            -- If you don’t want them, you can uninstall it
docs/migrating/v2.mdx:298:21    - Unknown word (guide)           -- More info in [our guide on GFM][guide-gfm]
docs/migrating/v2.mdx:298:3     - Unknown word (More)            -- More info in [our guide on
docs/migrating/v2.mdx:300:48    - Unknown word (passing)         -- context based components passing.
docs/migrating/v2.mdx:300:6     - Unknown word (adds)            -- It adds support for context
docs/migrating/v2.mdx:303:37    - Unknown word (Using)           -- ¶ MDX provider in § Using MDX][mdx-provider]
docs/migrating/v2.mdx:306:1     - Unknown word (Using)           -- Using Preact as an example
docs/migrating/v2.mdx:314:5     - Unknown word (more)           -- For more information, please
docs/migrating/v2.mdx:320:25    - Unknown word (replaced)       -- The default export is replaced by the named export
docs/migrating/v2.mdx:321:30    - Unknown word (replaced)       -- named export `sync` is replaced by [`compileSync`][mdx
docs/migrating/v2.mdx:322:40    - Unknown word (replaced)       -- `createCompiler` is replaced by
docs/migrating/v2.mdx:325:16    - Unknown word (instead)        -- `remark-mdx` instead
docs/migrating/v2.mdx:326:67    - Unknown word (instead)        -- are now [VFile][]s instead of
docs/migrating/v2.mdx:328:3     - Unknown word (There)          -- * There are new exports [`evaluate
docs/migrating/v2.mdx:331:22    - Unknown word (were)           -- Options in version 1 were undocumented.
docs/migrating/v2.mdx:331:27    - Unknown word (undocumented)   -- Options in version 1 were undocumented.
docs/migrating/v2.mdx:334:17    - Unknown word (replaced)       -- * `filepath` is replaced by accepting a VFile
docs/migrating/v2.mdx:334:29    - Unknown word (accepting)      -- filepath` is replaced by accepting a VFile or compatible
docs/migrating/v2.mdx:336:31    - Unknown word (recma)          -- compilers` is replaced by `recmaPlugins`
docs/migrating/v2.mdx:336:4     - Unknown word (compilers)      -- * `compilers` is replaced by `recmaPlugins
docs/migrating/v2.mdx:337:4     - Unknown word (hast)           -- * `hastPlugins` is replaced
docs/migrating/v2.mdx:340:3     - Unknown word (automatically)  -- automatically
docs/migrating/v2.mdx:341:41    - Unknown word (recma)          -- removed, use a custom recma plugin instead
docs/migrating/v2.mdx:341:54    - Unknown word (instead)        -- custom recma plugin instead
docs/migrating/v2.mdx:342:3     - Unknown word (There)          -- * There are many new options
docs/migrating/v2.mdx:342:41    - Unknown word (different)      -- new options to support different JSX runtimes, non-React
docs/migrating/v2.mdx:343:15    - Unknown word (away)           -- compile JSX away, source maps, normal
docs/migrating/v2.mdx:343:55    - Unknown word (otherwise)      -- normal markdown, and otherwise change how MDX
docs/migrating/v2.mdx:344:6     - Unknown word (compiled)       -- is compiled
docs/migrating/v2.mdx:346:5     - Unknown word (more)           -- For more information, please
docs/migrating/v2.mdx:351:57    - Unknown word (more)           -- now do the same and more.
docs/migrating/v2.mdx:352:23    - Unknown word (sure)           -- To update, first make sure ESM is supported.
docs/migrating/v2.mdx:353:9     - Unknown word (explained)      -- [ESM is explained above][esm].
docs/migrating/v2.mdx:354:1     - Unknown word (Please)         -- Please also make sure you are
docs/migrating/v2.mdx:354:18    - Unknown word (sure)           -- Please also make sure you are using a recent
docs/migrating/v2.mdx:354:31    - Unknown word (using)          -- also make sure you are using a recent version of
docs/migrating/v2.mdx:354:8     - Unknown word (also)           -- Please also make sure you are using
docs/migrating/v2.mdx:362:29    - Unknown word (follows)        -- update your code as follows:
docs/migrating/v2.mdx:401:48    - Unknown word (worked)         -- close to how MDX 1 worked.
docs/migrating/v2.mdx:402:17    - Unknown word (simpler)        -- You can make it simpler:
docs/migrating/v2.mdx:405:48    - Unknown word (passing)        -- context based components passing.
docs/migrating/v2.mdx:405:6     - Unknown word (adds)           -- It adds support for context
docs/migrating/v2.mdx:426:61    - Unknown word (importing)      -- component just like how importing
docs/migrating/v2.mdx:42:34     - Unknown word (might)      -- upgrading to version 2, you might run into import problems
docs/migrating/v2.mdx:42:6      - Unknown word (upgrading)  -- When upgrading to version 2, you might
docs/migrating/v2.mdx:435:9     - Unknown word (explained)      -- [ESM is explained above][esm].
docs/migrating/v2.mdx:449:23    - Unknown word (Getting)        -- Then, see [¶ Vue in § Getting started](/docs/getting
docs/migrating/v2.mdx:449:31    - Unknown word (started)        -- [¶ Vue in § Getting started](/docs/getting-started
docs/migrating/v2.mdx:44:18     - Unknown word (them)       -- You have to load them with `import foo from
docs/migrating/v2.mdx:44:52     - Unknown word (instead)    -- import foo from 'foo'` instead of
docs/migrating/v2.mdx:455:14    - Unknown word (their)          -- Parcel 2 has their own plugin.
docs/migrating/v2.mdx:457:26    - Unknown word (Getting)        -- see [¶ Parcel in § Getting started](/docs/getting
docs/migrating/v2.mdx:457:34    - Unknown word (started)        -- Parcel in § Getting started](/docs/getting-started
docs/migrating/v2.mdx:462:12    - Unknown word (several)        -- We removed several packages doing internal
docs/migrating/v2.mdx:462:29    - Unknown word (doing)          -- removed several packages doing internal work for us
docs/migrating/v2.mdx:463:1     - Unknown word (These)          -- These packages are:
docs/migrating/v2.mdx:466:8     - Unknown word (longer)         -- — no longer needed internal helpers
docs/migrating/v2.mdx:468:8     - Unknown word (longer)         -- — no longer needed test helpers
docs/migrating/v2.mdx:469:11    - Unknown word (theme)          -- * `gatsby-theme-mdx`
docs/migrating/v2.mdx:469:4     - Unknown word (gatsby)         -- * `gatsby-theme-mdx`
docs/migrating/v2.mdx:46:1      - Unknown word (Please)     -- Please see [¶ ESM in § Troubleshooti
docs/migrating/v2.mdx:46:24     - Unknown word (Troubleshooting) -- Please see [¶ ESM in § Troubleshooting MDX][trouble-esm].
docs/migrating/v2.mdx:470:8     - Unknown word (longer)         -- — no longer needed website template
docs/migrating/v2.mdx:472:47    - Unknown word (handles)        -- transforms, our compiler handles imports
docs/migrating/v2.mdx:472:8     - Unknown word (longer)         -- — no longer needed transforms, our
docs/migrating/v2.mdx:474:47    - Unknown word (handles)        -- transforms, our compiler handles exports
docs/migrating/v2.mdx:474:8     - Unknown word (longer)         -- — no longer needed transforms, our
docs/migrating/v2.mdx:476:43    - Unknown word (similar)        -- transform, something similar is done by
docs/migrating/v2.mdx:478:32    - Unknown word (props)          -- plugin-apply-mdx-type-props`
docs/migrating/v2.mdx:479:47    - Unknown word (architecture)   -- transform due to the new architecture
docs/migrating/v2.mdx:481:26    - Unknown word (recommend)      -- no longer needed, we recommend to start your project
docs/migrating/v2.mdx:481:63    - Unknown word (whatever)       -- start your project with whatever other
docs/migrating/v2.mdx:482:3     - Unknown word (integrations)   -- integrations you prefer and *then
docs/migrating/v2.mdx:487:18    - Unknown word (improved)       -- In version 2, we improved the syntax of the MDX
docs/migrating/v2.mdx:488:24    - Unknown word (likely)         -- When upgrading, you’ll likely get errors.
docs/migrating/v2.mdx:488:6     - Unknown word (upgrading)      -- When upgrading, you’ll likely get errors
docs/migrating/v2.mdx:489:27    - Unknown word (carefully)      -- those error messages carefully, as they typically explain
docs/migrating/v2.mdx:489:41    - Unknown word (they)           -- messages carefully, as they typically explain what
docs/migrating/v2.mdx:489:46    - Unknown word (typically)      -- messages carefully, as they typically explain what
docs/migrating/v2.mdx:489:56    - Unknown word (explain)        -- carefully, as they typically explain what
docs/migrating/v2.mdx:489:6     - Unknown word (those)          -- Read those error messages carefully
docs/migrating/v2.mdx:490:1     - Unknown word (happened)       -- happened where and how to fix
docs/migrating/v2.mdx:491:67    - Unknown word (solve)           -- common errors and how to solve them.
docs/migrating/v2.mdx:491:8     - Unknown word (Troubleshooting) -- See [§ Troubleshooting MDX][trouble] for common
docs/migrating/v2.mdx:495:23    - Unknown word (couple)          -- Let’s kick off with a couple of things that are now
docs/migrating/v2.mdx:495:53    - Unknown word (possible)        -- things that are now possible with JSX in MDX.
docs/migrating/v2.mdx:495:7     - Unknown word (kick)            -- Let’s kick off with a couple of
docs/migrating/v2.mdx:496:53    - Unknown word (anymore)         -- between JSX and markdown anymore:
docs/migrating/v2.mdx:509:42    - Unknown word (plain)           -- heading now, not code or plain text
docs/migrating/v2.mdx:50:31     - Unknown word (upgrading)       -- to make changes when upgrading some `mdx-js/*` packages
docs/migrating/v2.mdx:513:18    - Unknown word (want)            -- // if you do want code blocks, use fenced
docs/migrating/v2.mdx:513:40    - Unknown word (fenced)          -- want code blocks, use fenced code
docs/migrating/v2.mdx:519:23    - Unknown word (inlines)         -- You can use markdown “inlines” but not “blocks” inside
docs/migrating/v2.mdx:51:25     - Unknown word (discuss)         -- this section we will discuss the needed changes for
docs/migrating/v2.mdx:526:33    - Unknown word (produce)         -- tags on one line don’t produce blocks so they don’t
docs/migrating/v2.mdx:526:51    - Unknown word (they)            -- t produce blocks so they don’t produce `<p>`s
docs/migrating/v2.mdx:526:62    - Unknown word (produce)         -- blocks so they don’t produce `<p>`s
docs/migrating/v2.mdx:527:1     - Unknown word (either)          -- either.
docs/migrating/v2.mdx:528:20    - Unknown word (they)            -- On separate lines, they do:
docs/migrating/v2.mdx:52:11     - Unknown word (experiencing)    -- If you’re experiencing problems, please see
docs/migrating/v2.mdx:52:34     - Unknown word (please)          -- experiencing problems, please see [§ Troubleshooting
docs/migrating/v2.mdx:52:48     - Unknown word (Troubleshooting) -- problems, please see [§ Troubleshooting MDX][trouble]
docs/migrating/v2.mdx:536:18    - Unknown word (using)           -- We differentiate using this rule (same line
docs/migrating/v2.mdx:536:4     - Unknown word (differentiate)   -- We differentiate using this rule (same
docs/migrating/v2.mdx:538:20    - Unknown word (incorrect)       -- So you *can* build incorrect HTML (which you shouldn
docs/migrating/v2.mdx:538:46    - Unknown word (shouldn’t)       -- incorrect HTML (which you shouldn’t):
docs/migrating/v2.mdx:53:30     - Unknown word (solve)           -- common errors and how to solve them.
docs/migrating/v2.mdx:53:36     - Unknown word (them)            -- errors and how to solve them.
docs/migrating/v2.mdx:548:10    - Unknown word (possible)        -- It’s not possible to wrap “blocks” if
docs/migrating/v2.mdx:549:27    - Unknown word (different)       -- corresponding tags are on different lines:
docs/migrating/v2.mdx:552:1     - Unknown word (Welcome)         -- Welcome! <a href="about.html
docs/migrating/v2.mdx:552:19    - Unknown word (about)           -- Welcome! <a href="about.html">
docs/migrating/v2.mdx:556:7     - Unknown word (Falcons)         -- # The Falcons!</a>
docs/migrating/v2.mdx:55:14     - Unknown word (loader)          -- ### `@mdx-js/loader`
docs/migrating/v2.mdx:560:21    - Unknown word (paragraphs)      -- So in this case two paragraphs and a heading.
docs/migrating/v2.mdx:561:1     - Unknown word (Leaving)         -- Leaving an opening `a` tag in
docs/migrating/v2.mdx:561:57    - Unknown word (stray)           -- first paragraph and a stray closing `a` tag in
docs/migrating/v2.mdx:564:15    - Unknown word (several)         -- We also fixed several cases where JSX was
docs/migrating/v2.mdx:564:4     - Unknown word (also)            -- We also fixed several cases
docs/migrating/v2.mdx:564:57    - Unknown word (handled)         -- JSX was not parsed or handled correctly or
docs/migrating/v2.mdx:564:65    - Unknown word (correctly)       -- not parsed or handled correctly or
docs/migrating/v2.mdx:565:6     - Unknown word (crashed)         -- even crashed.
docs/migrating/v2.mdx:571:36    - Unknown word (hatch)           -- use them as an escape hatch if you ever *just* want
docs/migrating/v2.mdx:571:61    - Unknown word (want)            -- hatch if you ever *just* want strings or JSX
docs/migrating/v2.mdx:571:9     - Unknown word (also)            -- You can also use them as an escape
docs/migrating/v2.mdx:572:1     - Unknown word (rather)          -- rather than markdown:
docs/migrating/v2.mdx:577:20    - Unknown word (these)           -- This just JSX, these *asterisks* have no
docs/migrating/v2.mdx:577:27    - Unknown word (asterisks)       -- This just JSX, these *asterisks* have no meaning.
docs/migrating/v2.mdx:57:23     - Unknown word (loader)          -- To update our webpack loader `@mdx-js/loader`, please
docs/migrating/v2.mdx:57:39     - Unknown word (loader)          -- webpack loader `@mdx-js/loader`, please first update
docs/migrating/v2.mdx:57:48     - Unknown word (please)          -- loader `@mdx-js/loader`, please first update to recent
docs/migrating/v2.mdx:589:14    - Unknown word (easily)          -- You can more easily embed components in
docs/migrating/v2.mdx:591:30    - Unknown word (theme)           -- `language` because theme in VS Code is broken
docs/migrating/v2.mdx:591:50    - Unknown word (broken)          -- theme in VS Code is broken. */}
docs/migrating/v2.mdx:594:24    - Unknown word (props)           -- export function Button(props) {
docs/migrating/v2.mdx:597:36    - Unknown word (props)           -- button style={style} {...props} />
docs/migrating/v2.mdx:59:11     - Unknown word (sure)            -- Then make sure ESM is supported.
docs/migrating/v2.mdx:5:15      - Unknown word (wooorm)     -- {github: 'wooorm', name: 'Titus Wormer
docs/migrating/v2.mdx:5:31      - Unknown word (Titus)      -- github: 'wooorm', name: 'Titus Wormer', twitter: 'wooorm
docs/migrating/v2.mdx:5:37      - Unknown word (Wormer)     -- wooorm', name: 'Titus Wormer', twitter: 'wooorm'
docs/migrating/v2.mdx:5:56      - Unknown word (wooorm)     -- Titus Wormer', twitter: 'wooorm'}
docs/migrating/v2.mdx:601:15    - Unknown word (several)         -- We also fixed several cases where `import
docs/migrating/v2.mdx:601:4     - Unknown word (also)            -- We also fixed several cases
docs/migrating/v2.mdx:601:57    - Unknown word (were)            -- import` and `export` were not parsed or
docs/migrating/v2.mdx:602:1     - Unknown word (handled)         -- handled correctly or even crashed
docs/migrating/v2.mdx:602:27    - Unknown word (crashed)         -- handled correctly or even crashed.
docs/migrating/v2.mdx:602:9     - Unknown word (correctly)       -- handled correctly or even crashed.
docs/migrating/v2.mdx:607:15    - Unknown word (several)         -- We turned off several things that are allowed
docs/migrating/v2.mdx:607:4     - Unknown word (turned)          -- We turned off several things that
docs/migrating/v2.mdx:608:6     - Unknown word (ambiguous)       -- less ambiguous.
docs/migrating/v2.mdx:609:38    - Unknown word (differs)         -- in MDX and where it differs is in
docs/migrating/v2.mdx:60:19     - Unknown word (above)           -- [ESM is explained above][esm].
docs/migrating/v2.mdx:60:9      - Unknown word (explained)       -- [ESM is explained above][esm].
docs/migrating/v2.mdx:614:4     - Unknown word (turned)          -- We turned off GFM features in
docs/migrating/v2.mdx:615:50    - Unknown word (footnotes)       -- add autolink literals, footnotes, strikethrough,
docs/migrating/v2.mdx:617:11    - Unknown word (want)            -- If you do want these features, you
docs/migrating/v2.mdx:617:16    - Unknown word (these)           -- If you do want these features, you can use
docs/migrating/v2.mdx:618:10    - Unknown word (guide)           -- See [our guide on GFM][guide-gfm].
docs/migrating/v2.mdx:61:11     - Unknown word (having)          -- If you’re having trouble using ESM in
docs/migrating/v2.mdx:61:18     - Unknown word (trouble)         -- If you’re having trouble using ESM in your webpack
docs/migrating/v2.mdx:61:26     - Unknown word (using)           -- you’re having trouble using ESM in your webpack
docs/migrating/v2.mdx:624:41    - Unknown word (rather)          -- components now throw an error rather than render their children
docs/migrating/v2.mdx:624:60    - Unknown word (their)           -- error rather than render their children
docs/migrating/v2.mdx:625:47    - Unknown word (closer)          -- the console, which is closer to how frameworks like
docs/migrating/v2.mdx:625:61    - Unknown word (frameworks)      -- which is closer to how frameworks like
docs/migrating/v2.mdx:627:18    - Unknown word (combos)          -- * `parent.child` combos such as `ol.li`, to
docs/migrating/v2.mdx:627:62    - Unknown word (were)            -- to pass components, were removed, we
docs/migrating/v2.mdx:628:3     - Unknown word (recommend)       -- recommend to style your `ol`s
docs/migrating/v2.mdx:628:51    - Unknown word (separately)      -- s, `ul`s, and `li`s separately
docs/migrating/v2.mdx:629:59    - Unknown word (recommend)       -- inlineCode` was removed, we recommend to use
docs/migrating/v2.mdx:62:39     - Unknown word (loader)          -- our previous `@mdx-js/loader` (`1.6.22`):
docs/migrating/v2.mdx:632:45    - Unknown word (recommend)       -- isMDXContent` was removed, we recommend treating `MDXContent
docs/migrating/v2.mdx:632:55    - Unknown word (treating)        -- removed, we recommend treating `MDXContent`
docs/migrating/v2.mdx:634:3     - Unknown word (Locally)        -- * Locally defined or imported
docs/migrating/v2.mdx:634:42    - Unknown word (precede)        -- imported components precede over passed components
docs/migrating/v2.mdx:635:36    - Unknown word (lack)           -- sandbox” components, for lack of a better name.
docs/migrating/v2.mdx:635:46    - Unknown word (better)         -- components, for lack of a better name.
docs/migrating/v2.mdx:636:6     - Unknown word (means)          -- It means that when you pass a
docs/migrating/v2.mdx:639:17    - Unknown word (theme)          -- `components={{theme}}`, where `theme` is
docs/migrating/v2.mdx:639:34    - Unknown word (theme)          -- components={{theme}}`, where `theme` is an object with a
docs/migrating/v2.mdx:640:26    - Unknown word (theme)          -- can be used with: `<theme.Box>stuff</theme.Box
docs/migrating/v2.mdx:641:63    - Unknown word (layouts)        -- no longer passed to layouts, you
docs/migrating/v2.mdx:642:7     - Unknown word (achieve)        -- can achieve the same with:
docs/migrating/v2.mdx:644:15    - Unknown word (everything)     -- import * as everything from './example.mdx
docs/migrating/v2.mdx:645:43    - Unknown word (everything)     -- Content, ...exported} = everything
docs/migrating/v2.mdx:649:15    - Unknown word (several)        -- We also fixed several cases where defined
docs/migrating/v2.mdx:649:4     - Unknown word (also)           -- We also fixed several cases
docs/migrating/v2.mdx:650:1     - Unknown word (weren’t)        -- weren’t handled correctly or
docs/migrating/v2.mdx:650:17    - Unknown word (correctly)      -- weren’t handled correctly or even crashed.
docs/migrating/v2.mdx:650:35    - Unknown word (crashed)        -- handled correctly or even crashed.
docs/migrating/v2.mdx:650:9     - Unknown word (handled)        -- weren’t handled correctly or even crashed
docs/migrating/v2.mdx:654:1     - Unknown word (Phew)           -- Phew.
docs/migrating/v2.mdx:655:5     - Unknown word (made)           -- You made it!
docs/migrating/v2.mdx:656:1     - Unknown word (Welcome)        -- Welcome on the MDX 2 train,
docs/migrating/v2.mdx:656:22    - Unknown word (train)          -- Welcome on the MDX 2 train, it’s been a journey
docs/migrating/v2.mdx:656:34    - Unknown word (been)           -- the MDX 2 train, it’s been a journey.
docs/migrating/v2.mdx:656:41    - Unknown word (journey)        -- train, it’s been a journey.
docs/migrating/v2.mdx:657:12    - Unknown word (wasn’t)         -- We know it wasn’t the easiest to migrate
docs/migrating/v2.mdx:657:23    - Unknown word (easiest)        -- We know it wasn’t the easiest to migrate, we’re happy
docs/migrating/v2.mdx:657:34    - Unknown word (migrate)        -- wasn’t the easiest to migrate, we’re happy you’re
docs/migrating/v2.mdx:657:4     - Unknown word (know)           -- We know it wasn’t the easiest
docs/migrating/v2.mdx:657:62    - Unknown word (still)          -- we’re happy you’re still here, we’ll
docs/migrating/v2.mdx:658:23    - Unknown word (easier)         -- try to make migration easier next time.
docs/migrating/v2.mdx:659:25    - Unknown word (able)           -- With our new AST, we’re able to create codemods from
docs/migrating/v2.mdx:659:40    - Unknown word (codemods)       -- we’re able to create codemods from now on.
docs/migrating/v3.mdx:10:3      - Unknown word (Migrating)  -- # Migrating from v2 to v3
docs/migrating/v3.mdx:12:3      - Unknown word (couple)     -- A couple small changes this time
docs/migrating/v3.mdx:13:10     - Unknown word (folks)      -- For most folks, updating Node.js and
docs/migrating/v3.mdx:13:5      - Unknown word (most)       -- For most folks, updating Node
docs/migrating/v3.mdx:22:50     - Unknown word (loader)     -- with `@mdx-js/node-loader`](#replace-mdx-jsregister
docs/migrating/v3.mdx:26:11     - Unknown word (still)      -- If you’re still on old Node, it’s time
docs/migrating/v3.mdx:27:8      - Unknown word (least)      -- Use at least Node 16.
docs/migrating/v3.mdx:33:1      - Unknown word (Most)       -- Most of them remain working
docs/migrating/v3.mdx:33:14     - Unknown word (remain)     -- Most of them remain working between versions
docs/migrating/v3.mdx:33:9      - Unknown word (them)       -- Most of them remain working between
docs/migrating/v3.mdx:34:1      - Unknown word (Particularly) -- Particularly if you use TypeScript
docs/migrating/v3.mdx:34:37     - Unknown word (there)        -- you use TypeScript, there was a breaking internal
docs/migrating/v3.mdx:34:49     - Unknown word (breaking)     -- TypeScript, there was a breaking internal change in the
docs/migrating/v3.mdx:36:1      - Unknown word (There)        -- There were also some small
docs/migrating/v3.mdx:36:12     - Unknown word (also)         -- There were also some small internal
docs/migrating/v3.mdx:36:7      - Unknown word (were)         -- There were also some small internal
docs/migrating/v3.mdx:3:15      - Unknown word (wooorm)     -- {github: 'wooorm', name: 'Titus Wormer
docs/migrating/v3.mdx:3:31      - Unknown word (Titus)      -- github: 'wooorm', name: 'Titus Wormer', twitter: 'wooorm
docs/migrating/v3.mdx:3:37      - Unknown word (Wormer)     -- wooorm', name: 'Titus Wormer', twitter: 'wooorm'
docs/migrating/v3.mdx:3:56      - Unknown word (wooorm)     -- Titus Wormer', twitter: 'wooorm'}
docs/migrating/v3.mdx:43:1      - Unknown word (Likely)       -- Likely set to `import.meta
docs/migrating/v3.mdx:46:61     - Unknown word (needs)        -- code that works, but it needs to know
docs/migrating/v3.mdx:46:70     - Unknown word (know)         -- works, but it needs to know
docs/migrating/v3.mdx:49:33     - Unknown word (these)        -- get a runtime error if these features are used in
docs/migrating/v3.mdx:55:37     - Unknown word (might)        -- react/jsx-runtime`, you might get a TypeScript error
docs/migrating/v3.mdx:56:64     - Unknown word (incorrectly)  -- because it is typed incorrectly.
docs/migrating/v3.mdx:57:4      - Unknown word (remediate)    -- To remediate this, do:
docs/migrating/v3.mdx:68:12     - Unknown word (still)        -- Classic is still supported but you will
docs/migrating/v3.mdx:71:25     - Unknown word (still)        -- classic runtime can still be nice in other places
docs/migrating/v3.mdx:71:48     - Unknown word (places)       -- still be nice in other places, but it causes potential
docs/migrating/v3.mdx:71:63     - Unknown word (causes)       -- other places, but it causes potential
docs/migrating/v3.mdx:71:70     - Unknown word (potential)    -- places, but it causes potential
docs/migrating/v3.mdx:73:8      - Unknown word (specify)      -- If you specify `jsxRuntime: 'classic
docs/migrating/v3.mdx:74:24     - Unknown word (consider)     -- pragmaImportSource`), consider switching to `automatic
docs/migrating/v3.mdx:74:33     - Unknown word (switching)    -- ragmaImportSource`), consider switching to `automatic`.
docs/migrating/v3.mdx:75:11     - Unknown word (frameworks)   -- All major frameworks support the automatic
docs/migrating/v3.mdx:76:38     - Unknown word (likely)       -- classic runtime will likely be removed next major
docs/migrating/v3.mdx:81:20     - Unknown word (instead)      -- `useMDXComponents` instead.
docs/migrating/v3.mdx:83:1      - Unknown word (Reminder)     -- Reminder: you probably don’t
docs/migrating/v3.mdx:86:50     - Unknown word (loader)       -- with `@mdx-js/node-loader`
docs/migrating/v3.mdx:88:73     - Unknown word (loader)       -- , use `@mdx-js/node-loader` instead.
docs/migrating/v3.mdx:88:81     - Unknown word (instead)      -- mdx-js/node-loader` instead.
docs/packages/index.mdx:16:24     - Unknown word (Contributors) -- author: [{name: 'MDX Contributors'}],
docs/packages/index.mdx:24:40     - Unknown word (maintained)   -- the packages that are maintained in our monorepo.
docs/packages/index.mdx:25:1      - Unknown word (They)         -- They include `@mdx-js/mdx
docs/packages/index.mdx:26:50     - Unknown word (several)      -- the MDX syntax; and several integrations with
docs/packages/index.mdx:26:58     - Unknown word (integrations) -- syntax; and several integrations with
docs/packages/index.mdx:27:23     - Unknown word (frameworks)   -- bundlers and frontend frameworks.
docs/packages/index.mdx:31:28     - Unknown word (props)        -- const navigationTree = props.navigationTree
docs/packages/index.mdx:7:15      - Unknown word (Props)      -- * @typedef Props
docs/playground.mdx:11:3      - Unknown word (Playground) -- # Playground
docs/playground.mdx:14:36     - Unknown word (turns)      -- to find out what it turns into. {/* more */}
docs/playground.mdx:14:52     - Unknown word (more)       -- what it turns into. {/* more */}
docs/playground.mdx:15:62     - Unknown word (intermediary) -- generated code, and the intermediary
docs/playground.mdx:17:13     - Unknown word (helpful)      -- This can be helpful for debugging or exploring
docs/playground.mdx:17:38     - Unknown word (exploring)    -- helpful for debugging or exploring.
docs/playground.mdx:18:44     - Unknown word (recommend)    -- MDX format works, we recommend that you start with
docs/playground.mdx:18:9      - Unknown word (about)        -- To read about how the MDX format works
docs/playground.mdx:21:22     - Unknown word (bleed)        -- div className="full-bleed">
docs/playground.mdx:3:15      - Unknown word (johno)      -- {github: 'johno', name: 'John Otander
docs/playground.mdx:3:30      - Unknown word (John)       -- github: 'johno', name: 'John Otander', twitter:
docs/playground.mdx:3:35      - Unknown word (Otander)    -- johno', name: 'John Otander', twitter: '4lpine'
docs/playground.mdx:3:56      - Unknown word (lpine)      -- Otander', twitter: '4lpine'},
docs/playground.mdx:4:15      - Unknown word (wooorm)     -- {github: 'wooorm', name: 'Titus Wormer
docs/playground.mdx:4:31      - Unknown word (Titus)      -- github: 'wooorm', name: 'Titus Wormer', twitter: 'wooorm
docs/playground.mdx:4:37      - Unknown word (Wormer)     -- wooorm', name: 'Titus Wormer', twitter: 'wooorm'
docs/playground.mdx:4:56      - Unknown word (wooorm)     -- Titus Wormer', twitter: 'wooorm'}
docs/table-of-components.mdx:106:17    - Unknown word (backticks)   -- Some `backticks` for inline.
docs/table-of-components.mdx:109:20    - Unknown word (fences)      -- backtick.fences('for blocks')
docs/table-of-components.mdx:118:26    - Unknown word (backticks)   -- Some <code>backticks</code> for inline.
docs/table-of-components.mdx:120:65    - Unknown word (fences)      -- javascript">backtick.fences('for blocks')
docs/table-of-components.mdx:132:17    - Unknown word (asterisks)   -- Some *asterisks* for emphasis.
docs/table-of-components.mdx:139:25    - Unknown word (asterisks)   -- <p>Some <em>asterisks</em> for emphasis.<
docs/table-of-components.mdx:13:15     - Unknown word (about)      -- A great thing about MDX is that you can
docs/table-of-components.mdx:13:60     - Unknown word (specify)    -- can write markdown and specify a component
docs/table-of-components.mdx:14:12     - Unknown word (instead)    -- to be used instead of an HTML element.
docs/table-of-components.mdx:14:44     - Unknown word (more)       -- an HTML element. {/* more */}
docs/table-of-components.mdx:15:27     - Unknown word (those)      -- following table lists those HTML elements that can
docs/table-of-components.mdx:15:59     - Unknown word (overwritten) -- elements that can be overwritten,
docs/table-of-components.mdx:168:25    - Unknown word (signs)       -- ## Two number signs…
docs/table-of-components.mdx:175:28    - Unknown word (signs)       -- <h2>Two number signs…</h2>
docs/table-of-components.mdx:17:25     - Unknown word (equivalent)  -- what the normal JSX equivalent would be.
docs/table-of-components.mdx:17:36     - Unknown word (would)       -- normal JSX equivalent would be.
docs/table-of-components.mdx:186:28    - Unknown word (signs)       -- ### Three number signs…
docs/table-of-components.mdx:18:6      - Unknown word (taking)      -- But, taking the first row for `a
docs/table-of-components.mdx:193:30    - Unknown word (signs)       -- <h3>Three number signs…</h3>
docs/table-of-components.mdx:19:23     - Unknown word (doing)       -- with `<FancyLink>` by doing:
docs/table-of-components.mdx:19:8      - Unknown word (Fancy)       -- with `<FancyLink>` by doing:
docs/table-of-components.mdx:204:16    - Unknown word (Four)        -- #### Four number signs…
docs/table-of-components.mdx:204:28    - Unknown word (signs)       -- #### Four number signs…
docs/table-of-components.mdx:211:17    - Unknown word (Four)        -- <h4>Four number signs…</h4>
docs/table-of-components.mdx:222:17    - Unknown word (Five)        -- ##### Five number signs…
docs/table-of-components.mdx:229:17    - Unknown word (Five)        -- <h5>Five number signs…</h5>
docs/table-of-components.mdx:22:37     - Unknown word (Assumes)     -- from './readme.md' // Assumes an integration is used
docs/table-of-components.mdx:23:39     - Unknown word (fancy)       -- from './components/fancy-link.js'
docs/table-of-components.mdx:23:9      - Unknown word (Fancy)       -- import {FancyLink} from './components
docs/table-of-components.mdx:258:17    - Unknown word (asterisks)   -- Three asterisks for a thematic break
docs/table-of-components.mdx:258:33    - Unknown word (thematic)    -- Three asterisks for a thematic break:
docs/table-of-components.mdx:25:25     - Unknown word (Fancy)       -- Readme components={{a: FancyLink}} />
docs/table-of-components.mdx:267:22    - Unknown word (asterisks)   -- <p>Three asterisks for a thematic break
docs/table-of-components.mdx:267:38    - Unknown word (thematic)    -- Three asterisks for a thematic break:</p>
docs/table-of-components.mdx:286:27    - Unknown word (logo)        -- <p><img src="/logo.png" alt="Alt text"
docs/table-of-components.mdx:28:1      - Unknown word (More)        -- More information on how to
docs/table-of-components.mdx:297:13    - Unknown word (asterisks)   -- * asterisks for unordered items
docs/table-of-components.mdx:299:14    - Unknown word (decimals)    -- 1. decimals and a dot for ordered
docs/table-of-components.mdx:30:22     - Unknown word (bleed)       -- div className="full-bleed">
docs/table-of-components.mdx:310:19    - Unknown word (decimals)    -- <li>decimals and a dot for ordered
docs/table-of-components.mdx:322:14    - Unknown word (decimals)    -- 1. decimals and a dot for ordered
docs/table-of-components.mdx:330:19    - Unknown word (decimals)    -- <li>decimals and a dot for ordered
docs/table-of-components.mdx:361:20    - Unknown word (fences)      -- backtick.fences('for blocks')
docs/table-of-components.mdx:369:65    - Unknown word (fences)      -- javascript">backtick.fences('for blocks')
docs/table-of-components.mdx:36:25     - Unknown word (Equivalent)  -- <th scope="col">Equivalent JSX</th>
docs/table-of-components.mdx:3:15      - Unknown word (johno)      -- {github: 'johno', name: 'John Otander
docs/table-of-components.mdx:3:30      - Unknown word (John)       -- github: 'johno', name: 'John Otander', twitter:
docs/table-of-components.mdx:3:35      - Unknown word (Otander)    -- johno', name: 'John Otander', twitter: '4lpine'
docs/table-of-components.mdx:3:56      - Unknown word (lpine)      -- Otander', twitter: '4lpine'},
docs/table-of-components.mdx:417:24    - Unknown word (overwrite)   -- The components you can overwrite use their standard HTML
docs/table-of-components.mdx:417:38    - Unknown word (their)       -- you can overwrite use their standard HTML names
docs/table-of-components.mdx:418:1     - Unknown word (Normally)    -- Normally, in markdown, those
docs/table-of-components.mdx:418:24    - Unknown word (those)       -- Normally, in markdown, those names are: `a`, `blockquote
docs/table-of-components.mdx:421:32    - Unknown word (guide)       -- remark-gfm`][gfm] ([see guide][guide-gfm]), you can
docs/table-of-components.mdx:421:60    - Unknown word (also)        -- guide-gfm]), you can also use: `del`,
docs/table-of-components.mdx:423:77    - Unknown word (they)        -- constructs and advertise that they
docs/table-of-components.mdx:424:24    - Unknown word (also)        -- work with rehype, will also work with MDX.
docs/table-of-components.mdx:426:1     - Unknown word (More)        -- More information on components
docs/table-of-components.mdx:427:20    - Unknown word (Using)       -- [¶ Components in § Using MDX][components].
docs/table-of-components.mdx:4:15      - Unknown word (wooorm)     -- {github: 'wooorm', name: 'Titus Wormer
docs/table-of-components.mdx:4:31      - Unknown word (Titus)      -- github: 'wooorm', name: 'Titus Wormer', twitter: 'wooorm
docs/table-of-components.mdx:4:37      - Unknown word (Wormer)     -- wooorm', name: 'Titus Wormer', twitter: 'wooorm'
docs/table-of-components.mdx:4:56      - Unknown word (wooorm)     -- Titus Wormer', twitter: 'wooorm'}
packages/esbuild/lib/index.js:125:33    - Unknown word (Cannot)       -- : new VFileMessage('Cannot process MDX file with
packages/esbuild/lib/index.js:139:10    - Unknown word (Safety)       -- // Safety check: the file has
packages/esbuild/lib/index.js:139:48    - Unknown word (there)        -- file has a path, so there has to be a `dirname
packages/esbuild/lib/index.js:154:18    - Unknown word (around)       -- * Info passed around.
packages/esbuild/lib/index.js:197:5     - Unknown word (notes)        -- notes: [],
packages/esbuild/lib/index.js:32:18     - Unknown word (around)     -- * Info passed around.
packages/esbuild/lib/index.js:44:21     - Unknown word (Aware)      -- import {createFormatAwareProcessors} from '@mdx
packages/esbuild/lib/index.js:44:79     - Unknown word (aware)      -- internal-create-format-aware-processors'
packages/esbuild/lib/index.js:45:53     - Unknown word (extnames)   -- mdx-js/mdx/internal-extnames-to-regex'
packages/esbuild/lib/index.js:45:9      - Unknown word (extnames)   -- import {extnamesToRegex} from '@mdx-js
packages/esbuild/lib/index.js:57:12     - Unknown word (takes)      -- * esbuild takes care of turning modern
packages/esbuild/lib/index.js:57:26     - Unknown word (turning)    -- esbuild takes care of turning modern JavaScript features
packages/esbuild/lib/index.js:57:34     - Unknown word (modern)     -- takes care of turning modern JavaScript features
packages/esbuild/lib/index.js:58:10     - Unknown word (wherever)   -- * works wherever you want it to.
packages/esbuild/lib/index.js:58:23     - Unknown word (want)       -- works wherever you want it to.
packages/esbuild/lib/index.js:59:15     - Unknown word (integrations) -- * With other integrations you might need to use
packages/esbuild/lib/index.js:59:32     - Unknown word (might)        -- other integrations you might need to use Babel for
packages/esbuild/lib/index.js:61:27     - Unknown word (more)         -- See esbuild’s docs for more info.
packages/esbuild/lib/index.js:69:10     - Unknown word (extnames)     -- const {extnames, process} = createFormatAware
packages/esbuild/lib/index.js:69:43     - Unknown word (Aware)        -- process} = createFormatAwareProcessors({
packages/esbuild/lib/index.js:83:27     - Unknown word (extnames)     -- build.onLoad({filter: extnamesToRegex(extnames)}, onload
packages/esbuild/lib/index.js:83:43     - Unknown word (extnames)     -- filter: extnamesToRegex(extnames)}, onload)
packages/esbuild/readme.md:102:17    - Unknown word (fully)        -- This package is fully typed with [TypeScript
packages/esbuild/readme.md:103:16    - Unknown word (additional)   -- It exports the additional type [`Options`][api
packages/esbuild/readme.md:108:10    - Unknown word (maintained)   -- Projects maintained by the unified collective
packages/esbuild/readme.md:108:36    - Unknown word (collective)   -- maintained by the unified collective are compatible with
packages/esbuild/readme.md:108:67    - Unknown word (maintained)   -- are compatible with maintained
packages/esbuild/readme.md:111:19    - Unknown word (major)        -- When we cut a new major release, we drop support
packages/esbuild/readme.md:111:54    - Unknown word (unmaintained) -- we drop support for unmaintained versions of
packages/esbuild/readme.md:113:22    - Unknown word (keep)         -- This means we try to keep the current release
packages/esbuild/readme.md:113:6     - Unknown word (means)        -- This means we try to keep the current
packages/esbuild/readme.md:120:4     - Unknown word (Contribute)   -- ## Contribute
packages/esbuild/readme.md:122:51    - Unknown word (ways)         -- on our website for ways to get started.
packages/esbuild/readme.md:122:63    - Unknown word (started)      -- website for ways to get started.
packages/esbuild/readme.md:122:8     - Unknown word (Contribute)   -- See [§ Contribute][contribute] on our
packages/esbuild/readme.md:123:30    - Unknown word (ways)         -- Support][support] for ways to get help.
packages/esbuild/readme.md:123:42    - Unknown word (help)         -- support] for ways to get help.
packages/esbuild/readme.md:125:29    - Unknown word (conduct)      -- project has a [code of conduct][coc].
packages/esbuild/readme.md:126:4     - Unknown word (interacting)  -- By interacting with this repository
packages/esbuild/readme.md:126:69    - Unknown word (agree)        -- rganization, or community you agree to
packages/esbuild/readme.md:127:1     - Unknown word (abide)        -- abide by its terms.
packages/esbuild/readme.md:12:6      - Unknown word (more)       -- <!-- more -->
packages/esbuild/readme.md:131:12    - Unknown word (Titus)        -- [MIT][] © [Titus Wormer][author]
packages/esbuild/readme.md:131:18    - Unknown word (Wormer)       -- [MIT][] © [Titus Wormer][author]
packages/esbuild/readme.md:16:4      - Unknown word (What)       -- * [What is this?](#what-is-this
packages/esbuild/readme.md:26:4      - Unknown word (Contribute) -- * [Contribute](#contribute)
packages/esbuild/readme.md:29:4      - Unknown word (What)       -- ## What is this?
packages/esbuild/readme.md:35:21     - Unknown word (useful)     -- This integration is useful if you’re using [esbuild
packages/esbuild/readme.md:35:38     - Unknown word (using)      -- is useful if you’re using [esbuild][] (or another
packages/esbuild/readme.md:35:60     - Unknown word (another)    -- using [esbuild][] (or another tool that
packages/esbuild/readme.md:35:73     - Unknown word (that)       -- [] (or another tool that
packages/esbuild/readme.md:36:1      - Unknown word (uses)       -- uses esbuild).
packages/esbuild/readme.md:38:43     - Unknown word (lower)      -- evaluate MDX code then the lower-level compiler (`@mdx
packages/esbuild/readme.md:38:8      - Unknown word (want)       -- If you want to evaluate MDX code
packages/esbuild/readme.md:40:12     - Unknown word (nonstandard) -- to support nonstandard JSX runtime (such as
packages/esbuild/readme.md:40:37     - Unknown word (such)        -- nonstandard JSX runtime (such as Vue), `@mdx-js/mdx
packages/esbuild/readme.md:40:69     - Unknown word (also)        -- , `@mdx-js/mdx` can also be
packages/esbuild/readme.md:41:22     - Unknown word (loader)      -- used, or our webpack loader (`@mdx-js/loader`) or
packages/esbuild/readme.md:41:39     - Unknown word (loader)      -- webpack loader (`@mdx-js/loader`) or Rollup plugin
packages/esbuild/readme.md:55:14     - Unknown word (like)        -- Do something like this with the esbuild
packages/esbuild/readme.md:55:4      - Unknown word (something)   -- Do something like this with the esbuild
packages/esbuild/readme.md:5:4       - Unknown word (Downloads)  -- [![Downloads][downloads-badge]][downloads
packages/esbuild/readme.md:61:1      - Unknown word (await)       -- await esbuild.build({
packages/esbuild/readme.md:62:30     - Unknown word (your)        -- Replace `index.js` with your entry point that imports
packages/esbuild/readme.md:62:47     - Unknown word (that)        -- with your entry point that imports MDX files:
packages/esbuild/readme.md:6:4       - Unknown word (Sponsors)   -- [![Sponsors][sponsors-badge]][collective
packages/esbuild/readme.md:79:15     - Unknown word (care)        -- esbuild takes care of turning modern JavaScript
packages/esbuild/readme.md:79:23     - Unknown word (turning)     -- esbuild takes care of turning modern JavaScript features
packages/esbuild/readme.md:79:31     - Unknown word (modern)      -- takes care of turning modern JavaScript features
packages/esbuild/readme.md:79:70     - Unknown word (that)        -- features into syntax that works
packages/esbuild/readme.md:79:9      - Unknown word (takes)       -- esbuild takes care of turning modern
packages/esbuild/readme.md:7:4       - Unknown word (Backers)    -- [![Backers][backers-badge]][collective
packages/esbuild/readme.md:80:1      - Unknown word (wherever)    -- wherever you want it to.
packages/esbuild/readme.md:80:14     - Unknown word (want)        -- wherever you want it to.
packages/esbuild/readme.md:81:12     - Unknown word (integrations) -- With other integrations you might need to use
packages/esbuild/readme.md:81:29     - Unknown word (might)        -- other integrations you might need to use Babel for
packages/esbuild/readme.md:81:35     - Unknown word (need)         -- integrations you might need to use Babel for this
packages/esbuild/readme.md:82:20     - Unknown word (needed)       -- esbuild that’s not needed.
packages/esbuild/readme.md:82:9      - Unknown word (that’s)       -- esbuild that’s not needed.
packages/esbuild/readme.md:83:24     - Unknown word (more)         -- See esbuild’s docs for more info.
packages/esbuild/readme.md:87:40     - Unknown word (optional)     -- Options`][api-options], optional)
packages/esbuild/readme.md:8:4       - Unknown word (Chat)       -- [![Chat][chat-badge]][chat]
packages/esbuild/readme.md:90:8      - Unknown word (Returns)      -- ###### Returns
packages/esbuild/readme.md:98:17     - Unknown word (same)         -- Options are the same as [`CompileOptions
packages/esbuild/test/index.js:114:21    - Unknown word (Markup)     -- renderToStaticMarkup(React.createElement
packages/esbuild/test/index.js:144:23    - Unknown word (Markup)     -- renderToStaticMarkup(React.createElement
packages/esbuild/test/index.js:170:41    - Unknown word (loader)     -- match(String(error), /No loader is configured for "
packages/esbuild/test/index.js:18:23     - Unknown word (Markup)     -- import {renderToStaticMarkup} from 'react-dom/server
packages/esbuild/test/index.js:194:41    - Unknown word (loader)     -- match(String(error), /No loader is configured for "
packages/esbuild/test/index.js:1:19      - Unknown word (unicorn)    -- /* eslint-disable unicorn/prefer-structured-clone
packages/esbuild/test/index.js:21:24     - Unknown word (expose)     -- await t.test('should expose the public api', async
packages/esbuild/test/index.js:232:9     - Unknown word (notes)      -- notes: [],
packages/esbuild/test/index.js:234:16    - Unknown word (Unexpected) -- text: 'Unexpected character `/` (U+00
packages/esbuild/test/index.js:280:13    - Unknown word (notes)      -- notes: [],
packages/esbuild/test/index.js:297:13    - Unknown word (notes)      -- notes: [],
packages/esbuild/test/index.js:312:13    - Unknown word (notes)      -- notes: [],
packages/esbuild/test/index.js:327:13    - Unknown word (notes)      -- notes: [],
packages/esbuild/test/index.js:396:30    - Unknown word (mdxjs)      -- assert(esm.type === 'mdxjsEsm')
packages/esbuild/test/index.js:435:47    - Unknown word (crash)      -- esbuildMdx({rehypePlugins: [crash]})]
packages/esbuild/test/index.js:452:25    - Unknown word (Cannot)     -- message: 'Cannot process MDX file with
packages/esbuild/test/index.js:454:24    - Unknown word (Cannot)     -- reason: 'Cannot process MDX file with
packages/esbuild/test/index.js:470:20    - Unknown word (Cannot)     -- text: 'Cannot process MDX file with
packages/esbuild/test/index.js:479:14    - Unknown word (crash)      -- function crash() {
packages/esbuild/test/index.js:481:36    - Unknown word (went)       -- new Error('Something went wrong')
packages/esbuild/test/index.js:50:21     - Unknown word (Markup)     -- renderToStaticMarkup(React.createElement
packages/esbuild/test/index.js:537:29    - Unknown word (crash)      -- const mdxUrl = new URL('crash.mdx', import.meta.url
packages/esbuild/test/index.js:538:28    - Unknown word (crash)      -- const jsUrl = new URL('crash.js', import.meta.url
packages/esbuild/test/index.js:565:39    - Unknown word (crash)      -- error.stack?.includes('crash.mdx:2:8)'))
packages/esbuild/test/index.js:59:32     - Unknown word (importing)  -- test('should support importing MDX in MDX', async function
packages/esbuild/test/index.js:5:25      - Unknown word (hast)       -- import {Root} from 'hast'
packages/esbuild/test/index.js:87:32     - Unknown word (Markup)     -- equal(renderToStaticMarkup(React.createElement
packages/loader/index.cjs:12:45     - Unknown word (generates)  -- export immediately, as TS generates broken types.
packages/loader/index.cjs:12:55     - Unknown word (broken)     -- immediately, as TS generates broken types.
packages/loader/index.cjs:14:18     - Unknown word (loader)     -- module.exports = loader
packages/loader/index.cjs:17:12     - Unknown word (loader)     -- * Webpack loader
packages/loader/index.cjs:19:36     - Unknown word (loaders)    -- webpack supports ESM loaders, remove this wrapper
packages/loader/index.cjs:19:57     - Unknown word (wrapper)    -- loaders, remove this wrapper.
packages/loader/index.cjs:21:11     - Unknown word (Loader)     -- * @this {LoaderContext<unknown>}
packages/loader/index.cjs:28:10     - Unknown word (loader)     -- function loader(code) {
packages/loader/index.cjs:2:13      - Unknown word (Loader)     -- * @import {LoaderContext} from 'webpack
packages/loader/index.cjs:32:19     - Unknown word (loader)     -- return module.loader.call(this, code, callback
packages/loader/lib/index.js:106:13    - Unknown word (fpath)      -- const fpath = path.relative(context
packages/loader/lib/index.js:107:26    - Unknown word (fpath)      -- error.message = `${fpath}:${error.name}: ${error
packages/loader/lib/index.js:15:10     - Unknown word (cannot)     -- * You cannot pass them manually.
packages/loader/lib/index.js:15:22     - Unknown word (them)       -- * You cannot pass them manually.
packages/loader/lib/index.js:15:27     - Unknown word (manually)   -- You cannot pass them manually.
packages/loader/lib/index.js:28:21     - Unknown word (Aware)      -- import {createFormatAwareProcessors} from '@mdx
packages/loader/lib/index.js:28:79     - Unknown word (aware)      -- internal-create-format-aware-processors'
packages/loader/lib/index.js:31:23     - Unknown word (heavily)    -- Note: the cache is heavily inspired by:
packages/loader/lib/index.js:31:31     - Unknown word (inspired)   -- the cache is heavily inspired by:
packages/loader/lib/index.js:38:19     - Unknown word (loader)     -- * A Webpack (5+) loader for MDX.
packages/loader/lib/index.js:39:29     - Unknown word (wraps)      -- webpack.cjs`, which wraps this, because Webpack
packages/loader/lib/index.js:39:41     - Unknown word (because)    -- , which wraps this, because Webpack loaders must
packages/loader/lib/index.js:39:57     - Unknown word (loaders)    -- this, because Webpack loaders must currently
packages/loader/lib/index.js:39:65     - Unknown word (must)       -- because Webpack loaders must currently
packages/loader/lib/index.js:39:70     - Unknown word (currently)  -- Webpack loaders must currently
packages/loader/lib/index.js:42:11     - Unknown word (Loader)     -- * @this {LoaderContext<unknown>}
packages/loader/lib/index.js:46:12     - Unknown word (Loader)     -- * @param {LoaderContext<unknown>['callback
packages/loader/lib/index.js:51:17     - Unknown word (loader)     -- export function loader(value, callback) {
packages/loader/lib/index.js:59:29     - Unknown word (loaders)    -- ignore next -- some loaders set `undefined` (see
packages/loader/lib/index.js:5:42      - Unknown word (Loader)     -- as WebpackCompiler, LoaderContext} from 'webpack
packages/loader/lib/index.js:66:102    - Unknown word (more)       -- com/migrating/v2/> for more information'
packages/loader/lib/index.js:66:35     - Unknown word (longer)     -- options.renderer` is no longer supported. Please see
packages/loader/lib/index.js:66:53     - Unknown word (Please)     -- no longer supported. Please see <https://mdxjs.com
packages/loader/lib/index.js:82:27     - Unknown word (Aware)      -- process = createFormatAwareProcessors(config).process
packages/loader/lib/index.js:94:47     - Unknown word (compiled)   -- error: `webpack` is not compiled with `exactOptionalPropertyTy
packages/loader/lib/index.js:95:78     - Unknown word (here)       -- map` to be `undefined` here.
packages/loader/readme.md:106:17    - Unknown word (same)       -- Options are the same as [`CompileOptions
packages/loader/readme.md:107:10    - Unknown word (exception)  -- with the exception that the `SourceMapGenerator
packages/loader/readme.md:107:20    - Unknown word (that)       -- with the exception that the `SourceMapGenerator
packages/loader/readme.md:109:17    - Unknown word (them)       -- You cannot pass them manually.
packages/loader/readme.md:109:22    - Unknown word (manually)   -- You cannot pass them manually.
packages/loader/readme.md:109:5     - Unknown word (cannot)     -- You cannot pass them manually.
packages/loader/readme.md:10:9      - Unknown word (loader)     -- webpack loader for MDX.
packages/loader/readme.md:113:5     - Unknown word (Combine)    -- ### Combine with Babel
packages/loader/readme.md:115:12    - Unknown word (modern)     -- If you use modern JavaScript features
packages/loader/readme.md:115:43    - Unknown word (might)      -- JavaScript features you might want to use Babel through
packages/loader/readme.md:115:49    - Unknown word (want)       -- JavaScript features you might want to use Babel through
packages/loader/readme.md:116:51    - Unknown word (that)       -- to compile to code that works in older browsers
packages/loader/readme.md:116:65    - Unknown word (older)      -- to code that works in older browsers:
packages/loader/readme.md:116:71    - Unknown word (browsers)   -- that works in older browsers:
packages/loader/readme.md:126:3     - Unknown word (module)     -- module: {
packages/loader/readme.md:12:6      - Unknown word (more)       -- <!-- more -->
packages/loader/readme.md:133:19    - Unknown word (that)       -- // Note that Webpack runs right-to
packages/loader/readme.md:152:17    - Unknown word (fully)      -- This package is fully typed with [TypeScript
packages/loader/readme.md:153:16    - Unknown word (additional) -- It exports the additional type [`Options`][api
packages/loader/readme.md:158:10    - Unknown word (maintained) -- Projects maintained by the unified collective
packages/loader/readme.md:158:36    - Unknown word (collective) -- maintained by the unified collective are compatible with
packages/loader/readme.md:158:67    - Unknown word (maintained) -- are compatible with maintained
packages/loader/readme.md:161:19    - Unknown word (major)      -- When we cut a new major release, we drop support
packages/loader/readme.md:161:54    - Unknown word (unmaintained) -- we drop support for unmaintained versions of
packages/loader/readme.md:163:22    - Unknown word (keep)         -- This means we try to keep the current release
packages/loader/readme.md:163:6     - Unknown word (means)        -- This means we try to keep the current
packages/loader/readme.md:16:4      - Unknown word (What)       -- * [What is this?](#what-is-this
packages/loader/readme.md:170:4     - Unknown word (Contribute)   -- ## Contribute
packages/loader/readme.md:172:51    - Unknown word (ways)         -- on our website for ways to get started.
packages/loader/readme.md:172:63    - Unknown word (started)      -- website for ways to get started.
packages/loader/readme.md:172:8     - Unknown word (Contribute)   -- See [§ Contribute][contribute] on our
packages/loader/readme.md:173:30    - Unknown word (ways)         -- Support][support] for ways to get help.
packages/loader/readme.md:173:42    - Unknown word (help)         -- support] for ways to get help.
packages/loader/readme.md:175:29    - Unknown word (conduct)      -- project has a [code of conduct][coc].
packages/loader/readme.md:176:4     - Unknown word (interacting)  -- By interacting with this repository
packages/loader/readme.md:176:69    - Unknown word (agree)        -- rganization, or community you agree to
packages/loader/readme.md:177:1     - Unknown word (abide)        -- abide by its terms.
packages/loader/readme.md:181:11    - Unknown word (Compositor)   -- [MIT][] © Compositor and [Vercel][]
packages/loader/readme.md:1:12      - Unknown word (loader)     -- # `@mdx-js/loader`
packages/loader/readme.md:24:6      - Unknown word (Combine)    -- * [Combine with Babel](#combine
packages/loader/readme.md:28:4      - Unknown word (Contribute) -- * [Contribute](#contribute)
packages/loader/readme.md:31:4      - Unknown word (What)       -- ## What is this?
packages/loader/readme.md:33:27     - Unknown word (loader)     -- package is a webpack loader to support MDX.
packages/loader/readme.md:37:21     - Unknown word (useful)     -- This integration is useful if you’re using webpack
packages/loader/readme.md:37:38     - Unknown word (using)      -- is useful if you’re using webpack (or another
packages/loader/readme.md:37:56     - Unknown word (another)    -- re using webpack (or another tool that uses
packages/loader/readme.md:37:69     - Unknown word (that)       -- webpack (or another tool that uses
packages/loader/readme.md:37:74     - Unknown word (uses)       -- or another tool that uses
packages/loader/readme.md:38:10     - Unknown word (such)       -- webpack, such as Next.js or Rspack
packages/loader/readme.md:38:29     - Unknown word (Rspack)     -- such as Next.js or Rspack).
packages/loader/readme.md:40:25     - Unknown word (combined)   -- This integration can be combined with the Babel loader
packages/loader/readme.md:40:49     - Unknown word (loader)     -- combined with the Babel loader to compile modern
packages/loader/readme.md:40:67     - Unknown word (modern)     -- Babel loader to compile modern
packages/loader/readme.md:41:24     - Unknown word (ones)       -- JavaScript features to ones your users support.
packages/loader/readme.md:41:29     - Unknown word (your)       -- JavaScript features to ones your users support.
packages/loader/readme.md:43:43     - Unknown word (lower)      -- evaluate MDX code then the lower-level compiler (`@mdx
packages/loader/readme.md:43:8      - Unknown word (want)       -- If you want to evaluate MDX code
packages/loader/readme.md:44:13     - Unknown word (manually)   -- can be used manually.
packages/loader/readme.md:52:21     - Unknown word (loader)     -- npm install @mdx-js/loader
packages/loader/readme.md:57:15     - Unknown word (along)      -- Add something along these lines to your
packages/loader/readme.md:57:21     - Unknown word (these)      -- Add something along these lines to your `webpack
packages/loader/readme.md:57:36     - Unknown word (your)       -- along these lines to your `webpack.config.js`
packages/loader/readme.md:57:5      - Unknown word (something)  -- Add something along these lines to
packages/loader/readme.md:5:4       - Unknown word (Downloads)  -- [![Downloads][downloads-badge]][downloads
packages/loader/readme.md:67:3      - Unknown word (module)     -- module: {
packages/loader/readme.md:6:4       - Unknown word (Sponsors)   -- [![Sponsors][sponsors-badge]][collective
packages/loader/readme.md:7:4       - Unknown word (Backers)    -- [![Backers][backers-badge]][collective
packages/loader/readme.md:88:5      - Unknown word (also)       -- See also [¶ Next.js][next] and
packages/loader/readme.md:88:64     - Unknown word (using)      -- vue-cli], if you’re using webpack
packages/loader/readme.md:89:19     - Unknown word (more)       -- through them, for more info.
packages/loader/readme.md:89:9      - Unknown word (them)       -- through them, for more info.
packages/loader/readme.md:8:4       - Unknown word (Chat)       -- [![Chat][chat-badge]][chat]
packages/loader/readme.md:99:50     - Unknown word (passed)     -- ][api-options]) are passed separately through
packages/loader/readme.md:99:57     - Unknown word (separately) -- options]) are passed separately through
packages/loader/test/index.js:11:23     - Unknown word (Markup)     -- import {renderToStaticMarkup} from 'react-dom/server
packages/loader/test/index.js:131:56    - Unknown word (loader)     -- mdx$/, use: ['@mdx-js/loader']}]},
packages/loader/test/index.js:146:19    - Unknown word (Unexpected) -- webpack.mdx:1:22: Unexpected end of file in expression
packages/loader/test/index.js:16:15     - Unknown word (loader)     -- test('@mdx-js/loader', async function (t
packages/loader/test/index.js:17:24     - Unknown word (expose)     -- await t.test('should expose the public api', async
packages/loader/test/index.js:18:52     - Unknown word (loader)     -- await import('@mdx-js/loader'))
packages/loader/test/index.js:20:37     - Unknown word (lowest)     -- when Node 23 is the lowest baseline,
packages/loader/test/index.js:227:59    - Unknown word (longer)     -- options.renderer` is no longer supported/)
packages/loader/test/index.js:42:56     - Unknown word (loader)     -- mdx$/, use: ['@mdx-js/loader']}]},
packages/loader/test/index.js:60:21     - Unknown word (Markup)     -- renderToStaticMarkup(React.createElement
packages/loader/test/index.js:95:58     - Unknown word (loader)     -- mdx$/, use: ['@mdx-js/loader']}]},
packages/mdx/lib/compile.js:20:28     - Unknown word (means)      -- The `'detect'` format means to use `'md'` for files
packages/mdx/lib/compile.js:21:33     - Unknown word (otherwise)  -- mdExtensions` and `'mdx'` otherwise.
packages/mdx/lib/compile.js:35:17     - Unknown word (compiled)   -- * Promise to compiled file.
packages/mdx/lib/compile.js:45:18     - Unknown word (please)     -- * When possible please use the async `compile
packages/mdx/lib/compile.js:45:9      - Unknown word (possible)   -- * When possible please use the async
packages/mdx/lib/compile.js:52:6      - Unknown word (Compiled)   -- * Compiled file.
packages/mdx/lib/core.js:100:50    - Unknown word (recma)         -- null | undefined} [recmaPlugins]
packages/mdx/lib/core.js:101:14    - Unknown word (recma)         -- * List of recma plugins (optional);
packages/mdx/lib/core.js:102:20    - Unknown word (ecosystem)     -- * this is a new ecosystem, currently in beta,
packages/mdx/lib/core.js:102:31    - Unknown word (currently)     -- is a new ecosystem, currently in beta, to transform
packages/mdx/lib/core.js:102:63    - Unknown word (esast)         -- in beta, to transform esast trees
packages/mdx/lib/core.js:110:23    - Unknown word (Dangerous)     -- the option `allowDangerousHtml` will always be
packages/mdx/lib/core.js:112:25    - Unknown word (might)         -- In particular, you might want to pass configuration
packages/mdx/lib/core.js:112:31    - Unknown word (want)          -- particular, you might want to pass configuration
packages/mdx/lib/core.js:112:62    - Unknown word (footnotes)     -- pass configuration for footnotes if your
packages/mdx/lib/core.js:112:75    - Unknown word (your)          -- onfiguration for footnotes if your
packages/mdx/lib/core.js:112:9     - Unknown word (particular)    -- * In particular, you might want to pass
packages/mdx/lib/core.js:113:24    - Unknown word (English)       -- content is not in English.
packages/mdx/lib/core.js:114:21    - Unknown word (Recma)         -- * @property {RehypeRecmaOptions['stylePropertyNameCase
packages/mdx/lib/core.js:118:62    - Unknown word (aware)         -- the author has to be aware of which
packages/mdx/lib/core.js:119:16    - Unknown word (they)          -- * framework they use and write code accordingl
packages/mdx/lib/core.js:119:40    - Unknown word (accordingly)   -- they use and write code accordingly;
packages/mdx/lib/core.js:120:59    - Unknown word (configures)    -- project, this option configures it
packages/mdx/lib/core.js:126:28    - Unknown word (devlop)        -- {unreachable} from 'devlop'
packages/mdx/lib/core.js:127:28    - Unknown word (recma)         -- recmaBuildJsx from 'recma-build-jsx'
packages/mdx/lib/core.js:127:8     - Unknown word (recma)         -- import recmaBuildJsx from 'recma
packages/mdx/lib/core.js:130:14    - Unknown word (Recma)         -- import rehypeRecma from 'rehype-recma'
packages/mdx/lib/core.js:137:17    - Unknown word (Rewrite)       -- import {recmaJsxRewrite} from './plugin/recma
packages/mdx/lib/core.js:137:51    - Unknown word (rewrite)       -- './plugin/recma-jsx-rewrite.js'
packages/mdx/lib/core.js:139:22    - Unknown word (Unravel)       -- import {remarkMarkAndUnravel} from './plugin/remark
packages/mdx/lib/core.js:139:62    - Unknown word (unravel)       -- plugin/remark-mark-and-unravel.js'
packages/mdx/lib/core.js:143:4     - Unknown word (compilers)     -- 'compilers',
packages/mdx/lib/core.js:145:4     - Unknown word (hast)          -- 'hastPlugins',
packages/mdx/lib/core.js:151:5     - Unknown word (warned)        -- let warned = false
packages/mdx/lib/core.js:171:10    - Unknown word (Unexpected)    -- 'Unexpected removed option `' +
packages/mdx/lib/core.js:173:63    - Unknown word (migrate)       -- migrating/v2/> on how to migrate'
packages/mdx/lib/core.js:182:8     - Unknown word (Unexpected)    -- "Unexpected `format: 'detect'`,
packages/mdx/lib/core.js:191:6     - Unknown word (warned)        -- !warned
packages/mdx/lib/core.js:193:5     - Unknown word (warned)        -- warned = true
packages/mdx/lib/core.js:195:159   - Unknown word (migrate)       -- migrating/v3/> on how to migrate"
packages/mdx/lib/core.js:195:8     - Unknown word (Unexpected)    -- "Unexpected deprecated option `jsxRuntime
packages/mdx/lib/core.js:208:23    - Unknown word (Unravel)       -- .use(remarkMarkAndUnravel)
packages/mdx/lib/core.js:20:6      - Unknown word (Whether)    -- * Whether to add extra info to
packages/mdx/lib/core.js:212:12    - Unknown word (Dangerous)     -- allowDangerousHtml: true,
packages/mdx/lib/core.js:223:31    - Unknown word (trouble)       -- but type inference has trouble with it and bridges
packages/mdx/lib/core.js:223:51    - Unknown word (bridges)       -- trouble with it and bridges.
packages/mdx/lib/core.js:224:16    - Unknown word (Recma)        -- .use(rehypeRecma, settings)
packages/mdx/lib/core.js:226:18    - Unknown word (Rewrite)      -- .use(recmaJsxRewrite, settings)
packages/mdx/lib/core.js:237:27    - Unknown word (doesn’t)      -- ts-expect-error: TS doesn’t get the plugins we added
packages/mdx/lib/core.js:23:11     - Unknown word (using)      -- * when using the webpack loader
packages/mdx/lib/core.js:23:29     - Unknown word (loader)     -- when using the webpack loader (`@mdx-js/loader`) or
packages/mdx/lib/core.js:23:46     - Unknown word (loader)     -- webpack loader (`@mdx-js/loader`) or the Rollup integration
packages/mdx/lib/core.js:24:47     - Unknown word (automatically) -- through Vite, this is automatically inferred from how
packages/mdx/lib/core.js:25:20     - Unknown word (those)         -- * you configure those tools.
packages/mdx/lib/core.js:26:21     - Unknown word (Recma)         -- * @property {RehypeRecmaOptions['elementAttributeNameC
packages/mdx/lib/core.js:30:62     - Unknown word (aware)         -- the author has to be aware of which
packages/mdx/lib/core.js:31:16     - Unknown word (they)          -- * framework they use and write code accordingl
packages/mdx/lib/core.js:31:40     - Unknown word (accordingly)   -- they use and write code accordingly;
packages/mdx/lib/core.js:32:59     - Unknown word (configures)    -- project, this option configures it
packages/mdx/lib/core.js:35:13     - Unknown word (means)         -- * `'md'` means treat as markdown and
packages/mdx/lib/core.js:35:19     - Unknown word (treat)         -- * `'md'` means treat as markdown and `'mdx
packages/mdx/lib/core.js:35:49     - Unknown word (means)         -- markdown and `'mdx'` means treat as MDX.
packages/mdx/lib/core.js:35:55     - Unknown word (treat)         -- markdown and `'mdx'` means treat as MDX.
packages/mdx/lib/core.js:37:6      - Unknown word (Whether)       -- * Whether to keep JSX (default
packages/mdx/lib/core.js:38:36     - Unknown word (away)          -- default is to compile JSX away so that the resulting
packages/mdx/lib/core.js:3:25      - Unknown word (mdast)      -- import {Root} from 'mdast'
packages/mdx/lib/core.js:43:40     - Unknown word (jsxs)          -- jsx`, `jsxDEV`, and `jsxs`.
packages/mdx/lib/core.js:46:28     - Unknown word (compiles)      -- the automatic runtime compiles to `import _jsx from
packages/mdx/lib/core.js:48:26     - Unknown word (compiles)      -- the classic runtime compiles to calls such as `h
packages/mdx/lib/core.js:4:30      - Unknown word (Recma)      -- import {Options as RehypeRecmaOptions} from 'rehype
packages/mdx/lib/core.js:4:57      - Unknown word (recma)      -- ypeRecmaOptions} from 'rehype-recma'
packages/mdx/lib/core.js:51:8      - Unknown word (likely)        -- * > likely be removed in the next
packages/mdx/lib/core.js:54:14     - Unknown word (integrations)  -- * affects integrations.
packages/mdx/lib/core.js:54:6      - Unknown word (affects)       -- * affects integrations.
packages/mdx/lib/core.js:57:14     - Unknown word (integrations)  -- * affects integrations.
packages/mdx/lib/core.js:57:6      - Unknown word (affects)       -- * affects integrations.
packages/mdx/lib/core.js:60:9      - Unknown word (most)          -- * in most cases `'program'` should
packages/mdx/lib/core.js:61:6      - Unknown word (internally)    -- * internally `evaluate` uses `'function
packages/mdx/lib/core.js:63:25     - Unknown word (might)         -- in some cases, you might want what `evaluate
packages/mdx/lib/core.js:63:31     - Unknown word (want)          -- some cases, you might want what `evaluate` does
packages/mdx/lib/core.js:64:14     - Unknown word (compiling)     -- * as when compiling on the server and running
packages/mdx/lib/core.js:69:11     - Unknown word (changing)      -- * when changing this, you should also
packages/mdx/lib/core.js:69:37     - Unknown word (also)          -- changing this, you should also define `pragmaFrag`
packages/mdx/lib/core.js:73:8      - Unknown word (likely)        -- * > likely be removed in the next
packages/mdx/lib/core.js:76:10     - Unknown word (unnamed)       -- * for unnamed calls: `<>` to `React
packages/mdx/lib/core.js:78:11     - Unknown word (changing)      -- * when changing this, you should also
packages/mdx/lib/core.js:78:37     - Unknown word (also)          -- changing this, you should also define `pragma` and
packages/mdx/lib/core.js:82:8      - Unknown word (likely)        -- * > likely be removed in the next
packages/mdx/lib/core.js:86:9      - Unknown word (illustrate)    -- * to illustrate, when `pragma` is `
packages/mdx/lib/core.js:89:11     - Unknown word (changing)      -- * when changing this, you should also
packages/mdx/lib/core.js:89:37     - Unknown word (also)          -- changing this, you should also define `pragma` and
packages/mdx/lib/core.js:92:8      - Unknown word (likely)        -- * > likely be removed in the next
packages/mdx/lib/core.js:95:6      - Unknown word (normally)      -- * normally it’s used for runtimes
packages/mdx/lib/core.js:96:24     - Unknown word (inject)        -- it can be used to inject components into the
packages/mdx/lib/core.js:96:51     - Unknown word (compiled)      -- components into the compiled code;
packages/mdx/lib/core.js:97:17     - Unknown word (must)          -- * the module must export and identifier
packages/mdx/lib/core.js:97:72     - Unknown word (called)        -- useMDXComponents` which is called
packages/mdx/lib/evaluate.js:14:19     - Unknown word (your)       -- * When you trust your content, `evaluate`
packages/mdx/lib/evaluate.js:15:9      - Unknown word (possible)   -- * When possible, use `compile`, write
packages/mdx/lib/evaluate.js:16:15     - Unknown word (integrations) -- * one of the integrations.
packages/mdx/lib/evaluate.js:18:11     - Unknown word (Danger)       -- * > ☢️ **Danger**: it’s called **evaluate
packages/mdx/lib/evaluate.js:18:26     - Unknown word (called)       -- ☢️ **Danger**: it’s called **evaluate** because
packages/mdx/lib/evaluate.js:18:46     - Unknown word (because)      -- called **evaluate** because it `eval`s JavaScript
packages/mdx/lib/evaluate.js:20:11     - Unknown word (Notes)        -- * ###### Notes
packages/mdx/lib/evaluate.js:22:32     - Unknown word (takes)        -- Compiling (and running) MDX takes time.
packages/mdx/lib/evaluate.js:22:4      - Unknown word (Compiling)    -- * Compiling (and running) MDX takes
packages/mdx/lib/evaluate.js:24:51     - Unknown word (often)        -- a string of MDX that often changes using a virtual
packages/mdx/lib/evaluate.js:24:65     - Unknown word (using)        -- MDX that often changes using a virtual
packages/mdx/lib/evaluate.js:25:57     - Unknown word (improvement)  -- React), one performance improvement is to call
packages/mdx/lib/evaluate.js:26:31     - Unknown word (yourself)     -- MDXContent` component yourself.
packages/mdx/lib/evaluate.js:28:14     - Unknown word (diffed)       -- * cannot be diffed:
packages/mdx/lib/evaluate.js:28:4      - Unknown word (cannot)       -- * cannot be diffed:
packages/mdx/lib/evaluate.js:44:6      - Unknown word (anything)     -- * anything else that was exported
packages/mdx/lib/evaluate.js:48:10     - Unknown word (compiletime)  -- const {compiletime, runtime} = resolveEvaluateOp
packages/mdx/lib/evaluate.js:49:34     - Unknown word (compiletime)  -- await compile(file, compiletime), runtime)
packages/mdx/lib/evaluate.js:55:18     - Unknown word (please)       -- * When possible please use the async `evaluate
packages/mdx/lib/evaluate.js:55:9      - Unknown word (possible)     -- * When possible please use the async
packages/mdx/lib/evaluate.js:57:11     - Unknown word (Danger)       -- * > ☢️ **Danger**: it’s called **evaluate
packages/mdx/lib/evaluate.js:57:26     - Unknown word (called)       -- ☢️ **Danger**: it’s called **evaluate** because
packages/mdx/lib/evaluate.js:57:46     - Unknown word (because)      -- called **evaluate** because it `eval`s JavaScript
packages/mdx/lib/evaluate.js:67:10     - Unknown word (compiletime)  -- const {compiletime, runtime} = resolveEvaluateOp
packages/mdx/lib/evaluate.js:68:36     - Unknown word (compiletime)  -- runSync(compileSync(file, compiletime), runtime)
packages/mdx/lib/node-types.js:10:4      - Unknown word (mdxjs)      -- 'mdxjsEsm'
packages/mdx/lib/node-types.js:2:23      - Unknown word (made)       -- List of node types made by `mdast-util-mdx`
packages/mdx/lib/node-types.js:2:32      - Unknown word (mdast)      -- node types made by `mdast-util-mdx`, which have
packages/mdx/lib/node-types.js:3:12      - Unknown word (untouched)  -- * through untouched from the mdast tree
packages/mdx/lib/node-types.js:3:31      - Unknown word (mdast)      -- through untouched from the mdast tree to the hast tree
packages/mdx/lib/node-types.js:3:49      - Unknown word (hast)       -- the mdast tree to the hast tree.
packages/mdx/lib/plugin/recma-build-jsx-transform.js:10:21     - Unknown word (instead)    -- * `arguments[0]` instead (default: `'program
packages/mdx/lib/plugin/recma-build-jsx-transform.js:13:61     - Unknown word (specifiers) -- ../util/estree-util-specifiers-to-declarations.js'
packages/mdx/lib/plugin/recma-build-jsx-transform.js:13:9      - Unknown word (specifiers) -- import {specifiersToDeclarations} from
packages/mdx/lib/plugin/recma-build-jsx-transform.js:17:36     - Unknown word (compiling)  -- change the tree after compiling JSX away.
packages/mdx/lib/plugin/recma-build-jsx-transform.js:17:50     - Unknown word (away)       -- after compiling JSX away.
packages/mdx/lib/plugin/recma-build-jsx-transform.js:24:17     - Unknown word (recma)      -- export function recmaBuildJsxTransform(options
packages/mdx/lib/plugin/recma-build-jsx-transform.js:35:42     - Unknown word (injected)   -- pragma comment that we injected ourselves as it is no
packages/mdx/lib/plugin/recma-build-jsx-transform.js:35:51     - Unknown word (ourselves)  -- comment that we injected ourselves as it is no longer
packages/mdx/lib/plugin/recma-build-jsx-transform.js:35:73     - Unknown word (longer)     -- ourselves as it is no longer
packages/mdx/lib/plugin/recma-build-jsx-transform.js:43:13     - Unknown word (compiling)  -- // When compiling to a function body,
packages/mdx/lib/plugin/recma-build-jsx-transform.js:43:71     - Unknown word (just)       -- the import that was just
packages/mdx/lib/plugin/recma-build-jsx-transform.js:44:35     - Unknown word (jsxs)       -- generated, and get `jsx`, `jsxs`, and `Fragment` from
packages/mdx/lib/plugin/recma-build-jsx-transform.js:45:8      - Unknown word (instead)    -- // instead.
packages/mdx/lib/plugin/recma-build-jsx-transform.js:49:30     - Unknown word (currently)  -- Skip directives: JS currently only has `use strict
packages/mdx/lib/plugin/recma-build-jsx-transform.js:49:73     - Unknown word (allows)     -- use strict`, but Acorn allows
packages/mdx/lib/plugin/recma-build-jsx-transform.js:50:20     - Unknown word (ones)       -- // arbitrary ones.
packages/mdx/lib/plugin/recma-build-jsx-transform.js:51:10     - Unknown word (Practically) -- // Practically things like `use client
packages/mdx/lib/plugin/recma-build-jsx-transform.js:72:25     - Unknown word (specifiers)  -- declarations: specifiersToDeclarations(
packages/mdx/lib/plugin/recma-build-jsx-transform.js:73:25     - Unknown word (specifiers)  -- declaration.specifiers,
packages/mdx/lib/plugin/recma-build-jsx-transform.js:7:41      - Unknown word (recma)      -- for internal plugin `recma-build-jsx-transform
packages/mdx/lib/plugin/recma-build-jsx-transform.js:9:6       - Unknown word (Whether)    -- * Whether to keep the import of
packages/mdx/lib/plugin/recma-document.js:109:9     - Unknown word (specifiers) -- specifiers: [
packages/mdx/lib/plugin/recma-document.js:120:28    - Unknown word (they)       -- (import/exports) as they are.
packages/mdx/lib/plugin/recma-document.js:126:10    - Unknown word (Treat)      -- // Treat it as an inline layout
packages/mdx/lib/plugin/recma-document.js:130:14    - Unknown word (Unexpected) -- 'Unexpected duplicate layout, expected
packages/mdx/lib/plugin/recma-document.js:134:15    - Unknown word (ancestors)  -- ancestors: [tree, child],
packages/mdx/lib/plugin/recma-document.js:137:24    - Unknown word (recma)      -- source: 'recma-document'
packages/mdx/lib/plugin/recma-document.js:161:12    - Unknown word (Cast)       -- // Cast because always simple
packages/mdx/lib/plugin/recma-document.js:161:17    - Unknown word (because)    -- // Cast because always simple.
packages/mdx/lib/plugin/recma-document.js:165:15    - Unknown word (specifiers) -- child.specifiers = child.specifiers.filter
packages/mdx/lib/plugin/recma-document.js:165:34    - Unknown word (specifiers) -- child.specifiers = child.specifiers.filter(function (specifier
packages/mdx/lib/plugin/recma-document.js:172:18    - Unknown word (Unexpected) -- 'Unexpected duplicate layout, expected
packages/mdx/lib/plugin/recma-document.js:176:19    - Unknown word (ancestors)  -- ancestors: [tree, child, specifier
packages/mdx/lib/plugin/recma-document.js:179:28    - Unknown word (recma)      -- source: 'recma-document'
packages/mdx/lib/plugin/recma-document.js:186:24    - Unknown word (just)       -- // Make it just an import: `import MDXLayout
packages/mdx/lib/plugin/recma-document.js:229:15    - Unknown word (there)      -- // If there are other things imported
packages/mdx/lib/plugin/recma-document.js:255:37    - Unknown word (because)    -- catch-all branch is because plugins might add other
packages/mdx/lib/plugin/recma-document.js:255:53    - Unknown word (might)      -- branch is because plugins might add other things.
packages/mdx/lib/plugin/recma-document.js:256:12    - Unknown word (Normally)   -- // Normally, we only have import
packages/mdx/lib/plugin/recma-document.js:256:58    - Unknown word (just)       -- import/export/jsx, but just add whatever’s
packages/mdx/lib/plugin/recma-document.js:256:67    - Unknown word (whatever’s) -- export/jsx, but just add whatever’s
packages/mdx/lib/plugin/recma-document.js:257:12    - Unknown word (there)      -- // there.
packages/mdx/lib/plugin/recma-document.js:262:11    - Unknown word (there)      -- // If there was no JSX content at
packages/mdx/lib/plugin/recma-document.js:32:29     - Unknown word (devlop)     -- ok as assert} from 'devlop'
packages/mdx/lib/plugin/recma-document.js:335:46    - Unknown word (generating) -- hit this branch when generating function bodies, as
packages/mdx/lib/plugin/recma-document.js:336:39    - Unknown word (compiled)   -- statements are already compiled away into import expressions
packages/mdx/lib/plugin/recma-document.js:336:48    - Unknown word (away)       -- are already compiled away into import expressions
packages/mdx/lib/plugin/recma-document.js:337:31    - Unknown word (unexpected) -- assert(baseHref, 'unexpected missing `baseHref` in
packages/mdx/lib/plugin/recma-document.js:33:15     - Unknown word (Visitors)   -- import {createVisitors} from 'estree-util-scope
packages/mdx/lib/plugin/recma-document.js:345:19    - Unknown word (injected)   -- // be injected to work with expressions
packages/mdx/lib/plugin/recma-document.js:346:43    - Unknown word (here)       -- baseHref` at compile time here and statements are static
packages/mdx/lib/plugin/recma-document.js:352:18    - Unknown word (Fine)       -- // Fine: a full URL.
packages/mdx/lib/plugin/recma-document.js:361:20    - Unknown word (Fine)       -- // Fine: are bare specifier
packages/mdx/lib/plugin/recma-document.js:361:30    - Unknown word (bare)       -- // Fine: are bare specifier.
packages/mdx/lib/plugin/recma-document.js:40:61     - Unknown word (specifiers) -- ../util/estree-util-specifiers-to-declarations.js'
packages/mdx/lib/plugin/recma-document.js:40:9      - Unknown word (specifiers) -- import {specifiersToDeclarations} from
packages/mdx/lib/plugin/recma-document.js:423:40    - Unknown word (using)      -- function-body` when using dynamic url injection
packages/mdx/lib/plugin/recma-document.js:442:17    - Unknown word (visitors)   -- const visitors = createVisitors()
packages/mdx/lib/plugin/recma-document.js:442:34    - Unknown word (Visitors)   -- const visitors = createVisitors()
packages/mdx/lib/plugin/recma-document.js:446:15    - Unknown word (visitors)   -- visitors.enter(node)
packages/mdx/lib/plugin/recma-document.js:454:17    - Unknown word (visitors)   -- visitors.exit(node)
packages/mdx/lib/plugin/recma-document.js:457:20    - Unknown word (visitors)   -- leave: visitors.exit
packages/mdx/lib/plugin/recma-document.js:459:34    - Unknown word (visitors)   -- exportedValues.push(...visitors.scopes[0].defined)
packages/mdx/lib/plugin/recma-document.js:471:16    - Unknown word (Must)       -- // Must be string.
packages/mdx/lib/plugin/recma-document.js:501:53    - Unknown word (they)       -- source, but types say they can be missing.
packages/mdx/lib/plugin/recma-document.js:51:17     - Unknown word (recma)      -- export function recmaDocument(options) {
packages/mdx/lib/plugin/recma-document.js:590:16    - Unknown word (there’s)    -- * Whether there’s an internal layout
packages/mdx/lib/plugin/recma-document.js:590:8     - Unknown word (Whether)    -- * Whether there’s an internal
packages/mdx/lib/plugin/recma-document.js:639:9     - Unknown word (consequent) -- consequent: result,
packages/mdx/lib/plugin/recma-document.js:650:10    - Unknown word (Cast)       -- // Cast because TS otherwise
packages/mdx/lib/plugin/recma-document.js:650:15    - Unknown word (because)    -- // Cast because TS otherwise does not
packages/mdx/lib/plugin/recma-document.js:650:26    - Unknown word (otherwise)  -- // Cast because TS otherwise does not think `JSXFragment
packages/mdx/lib/plugin/recma-document.js:650:45    - Unknown word (think)      -- TS otherwise does not think `JSXFragment`s are expression
packages/mdx/lib/plugin/recma-document.js:678:43    - Unknown word (occur)      -- ignore next 2 -- can only occur in a function (which
packages/mdx/lib/plugin/recma-document.js:715:18    - Unknown word (Cast)       -- // Cast because TS doesn’t think
packages/mdx/lib/plugin/recma-document.js:715:23    - Unknown word (because)    -- // Cast because TS doesn’t think `JSXFragment
packages/mdx/lib/plugin/recma-document.js:715:34    - Unknown word (doesn’t)    -- // Cast because TS doesn’t think `JSXFragment`
packages/mdx/lib/plugin/recma-document.js:715:42    - Unknown word (think)      -- Cast because TS doesn’t think `JSXFragment` is an
packages/mdx/lib/plugin/recma-document.js:735:10    - Unknown word (inject)     -- function injectPragma(tree, name, value
packages/mdx/lib/plugin/recma-document.js:770:11    - Unknown word (consequent) -- consequent: {
packages/mdx/lib/plugin/recma-document.js:776:43    - Unknown word (widely)     -- `URL.canParse` when widely supported (see commented
packages/mdx/lib/plugin/recma-document.js:776:65    - Unknown word (commented)  -- widely supported (see commented
packages/mdx/lib/plugin/recma-document.js:777:21    - Unknown word (below)      -- // out code below).
packages/mdx/lib/plugin/recma-document.js:804:43    - Unknown word (widely)     -- `URL.canParse` when widely supported.
packages/mdx/lib/plugin/recma-document.js:813:14    - Unknown word (consequent) -- // consequent: {
packages/mdx/lib/plugin/recma-document.js:847:11    - Unknown word (consequent) -- consequent: {
packages/mdx/lib/plugin/recma-document.js:85:7      - Unknown word (inject)     -- injectPragma(tree, '@jsxFrag
packages/mdx/lib/plugin/recma-document.js:896:7     - Unknown word (consequent) -- consequent: {
packages/mdx/lib/plugin/recma-document.js:89:7      - Unknown word (inject)     -- injectPragma(tree, '@jsx',
packages/mdx/lib/plugin/recma-document.js:905:126   - Unknown word (generating) -- import.meta.url` when generating `function-body`'
packages/mdx/lib/plugin/recma-document.js:905:18    - Unknown word (Unexpected) -- 'Unexpected missing `options.baseUrl
packages/mdx/lib/plugin/recma-document.js:93:7      - Unknown word (inject)     -- injectPragma(tree, '@jsxImportSource
packages/mdx/lib/plugin/recma-document.js:97:7      - Unknown word (inject)     -- injectPragma(tree, '@jsxRuntime
packages/mdx/lib/plugin/recma-jsx-rewrite.js:101:22    - Unknown word (visitors)    -- !inScope(visitors.scopes, 'MDXLayout'
packages/mdx/lib/plugin/recma-jsx-rewrite.js:125:30    - Unknown word (most)        -- // Find the left-most identifier.
packages/mdx/lib/plugin/recma-jsx-rewrite.js:134:39    - Unknown word (visitors)    -- isInScope = inScope(visitors.scopes, id)
packages/mdx/lib/plugin/recma-jsx-rewrite.js:156:59    - Unknown word (doesn’t)     -- ES identifier, and it doesn’t start with a
packages/mdx/lib/plugin/recma-jsx-rewrite.js:157:14    - Unknown word (lowercase)   -- // lowercase letter, it’s a component
packages/mdx/lib/plugin/recma-jsx-rewrite.js:163:26    - Unknown word (visitors)    -- if (!inScope(visitors.scopes, id)) {
packages/mdx/lib/plugin/recma-jsx-rewrite.js:165:23    - Unknown word (later)       -- // `if` later.
packages/mdx/lib/plugin/recma-jsx-rewrite.js:253:51    - Unknown word (directly)    -- a component is used directly (`<X>`) but it’s also
packages/mdx/lib/plugin/recma-jsx-rewrite.js:253:77    - Unknown word (also)        -- directly (`<X>`) but it’s also
packages/mdx/lib/plugin/recma-jsx-rewrite.js:27:17     - Unknown word (identifiers) -- * Map of JSX identifiers which cannot be used
packages/mdx/lib/plugin/recma-jsx-rewrite.js:27:35     - Unknown word (cannot)      -- JSX identifiers which cannot be used as JS identifiers
packages/mdx/lib/plugin/recma-jsx-rewrite.js:27:56     - Unknown word (identifiers) -- cannot be used as JS identifiers, to valid JS identifiers
packages/mdx/lib/plugin/recma-jsx-rewrite.js:27:81     - Unknown word (identifiers) -- identifiers, to valid JS identifiers.
packages/mdx/lib/plugin/recma-jsx-rewrite.js:295:49    - Unknown word (several)     -- getting components from several sources, merge them
packages/mdx/lib/plugin/recma-jsx-rewrite.js:295:72    - Unknown word (them)        -- several sources, merge them.
packages/mdx/lib/plugin/recma-jsx-rewrite.js:301:27    - Unknown word (sure)        -- // make sure it’s defined.
packages/mdx/lib/plugin/recma-jsx-rewrite.js:313:56    - Unknown word (generates)   -- 'MDXLayout']` this generates:
packages/mdx/lib/plugin/recma-jsx-rewrite.js:315:36    - Unknown word (wrapper)     -- const {MyComponent, wrapper: MDXLayout} = _components
packages/mdx/lib/plugin/recma-jsx-rewrite.js:317:55    - Unknown word (taken)       -- MDXLayout is special as it’s taken from
packages/mdx/lib/plugin/recma-jsx-rewrite.js:318:29    - Unknown word (wrapper)     -- // `_components.wrapper`.
packages/mdx/lib/plugin/recma-jsx-rewrite.js:31:6      - Unknown word (Identifiers) -- * Identifiers of used objects (such
packages/mdx/lib/plugin/recma-jsx-rewrite.js:328:53    - Unknown word (wrapper)     -- name === 'MDXLayout' ? 'wrapper' : name
packages/mdx/lib/plugin/recma-jsx-rewrite.js:33:17     - Unknown word (identifiers) -- * Map of JSX identifiers for components and objects
packages/mdx/lib/plugin/recma-jsx-rewrite.js:33:66     - Unknown word (they)        -- and objects, to where they were first used.
packages/mdx/lib/plugin/recma-jsx-rewrite.js:33:71     - Unknown word (were)        -- objects, to where they were first used.
packages/mdx/lib/plugin/recma-jsx-rewrite.js:354:46    - Unknown word (represented) -- JSX IDs that can’t be represented as JavaScript IDs (as
packages/mdx/lib/plugin/recma-jsx-rewrite.js:355:20    - Unknown word (those)       -- // those with dashes, such as
packages/mdx/lib/plugin/recma-jsx-rewrite.js:355:31    - Unknown word (dashes)      -- // those with dashes, such as `custom-element
packages/mdx/lib/plugin/recma-jsx-rewrite.js:357:24    - Unknown word (takes)       -- // and takes it from components:
packages/mdx/lib/plugin/recma-jsx-rewrite.js:396:18    - Unknown word (partials)    -- // Add partials (so for `x.y.z` it’d
packages/mdx/lib/plugin/recma-jsx-rewrite.js:39:15     - Unknown word (Visitors)    -- import {createVisitors} from 'estree-util-scope
packages/mdx/lib/plugin/recma-jsx-rewrite.js:43:61     - Unknown word (specifiers)  -- ../util/estree-util-specifiers-to-declarations.js'
packages/mdx/lib/plugin/recma-jsx-rewrite.js:43:9      - Unknown word (specifiers)  -- import {specifiersToDeclarations} from
packages/mdx/lib/plugin/recma-jsx-rewrite.js:440:15    - Unknown word (consequent)  -- consequent: {
packages/mdx/lib/plugin/recma-jsx-rewrite.js:454:40    - Unknown word (implied)     -- Arrow functions with an implied return:
packages/mdx/lib/plugin/recma-jsx-rewrite.js:477:11    - Unknown word (potentially) -- // If potentially missing components are
packages/mdx/lib/plugin/recma-jsx-rewrite.js:485:11    - Unknown word (consequent)  -- consequent: {type: 'Literal', value
packages/mdx/lib/plugin/recma-jsx-rewrite.js:493:35    - Unknown word (likely)      -- to be defined: you likely forgot to import, pass
packages/mdx/lib/plugin/recma-jsx-rewrite.js:507:11    - Unknown word (consequent)  -- consequent: toBinaryAddition([
packages/mdx/lib/plugin/recma-jsx-rewrite.js:508:60    - Unknown word (your)        -- nIt’s referenced in your code at `'},
packages/mdx/lib/plugin/recma-jsx-rewrite.js:51:18     - Unknown word (rewrites)    -- * A plugin that rewrites JSX in functions to
packages/mdx/lib/plugin/recma-jsx-rewrite.js:52:45     - Unknown word (called)      -- when the function is called `_createMdxContent`
packages/mdx/lib/plugin/recma-jsx-rewrite.js:53:19     - Unknown word (there)       -- * a provider (if there is one).
packages/mdx/lib/plugin/recma-jsx-rewrite.js:54:12     - Unknown word (makes)       -- * It also makes sure that any undefined
packages/mdx/lib/plugin/recma-jsx-rewrite.js:54:18     - Unknown word (sure)        -- * It also makes sure that any undefined components
packages/mdx/lib/plugin/recma-jsx-rewrite.js:54:66     - Unknown word (either)      -- components are defined: either from
packages/mdx/lib/plugin/recma-jsx-rewrite.js:54:7      - Unknown word (also)        -- * It also makes sure that any
packages/mdx/lib/plugin/recma-jsx-rewrite.js:563:9     - Unknown word (specifiers)  -- const specifiers = [
packages/mdx/lib/plugin/recma-jsx-rewrite.js:575:23    - Unknown word (specifiers)  -- declarations: specifiersToDeclarations(
packages/mdx/lib/plugin/recma-jsx-rewrite.js:576:11    - Unknown word (specifiers)  -- specifiers,
packages/mdx/lib/plugin/recma-jsx-rewrite.js:593:6     - Unknown word (Whether)     -- * Whether `node` is a named function
packages/mdx/lib/plugin/recma-jsx-rewrite.js:605:6     - Unknown word (Whether)     -- * Whether `id` is in `scope`.
packages/mdx/lib/plugin/recma-jsx-rewrite.js:62:17     - Unknown word (recma)       -- export function recmaJsxRewrite(options)
packages/mdx/lib/plugin/recma-jsx-rewrite.js:62:25     - Unknown word (Rewrite)     -- export function recmaJsxRewrite(options) {
packages/mdx/lib/plugin/recma-jsx-rewrite.js:74:11     - Unknown word (visitors)    -- const visitors = createVisitors()
packages/mdx/lib/plugin/recma-jsx-rewrite.js:74:28     - Unknown word (Visitors)    -- const visitors = createVisitors()
packages/mdx/lib/plugin/recma-jsx-rewrite.js:82:9      - Unknown word (visitors)    -- visitors.enter(node)
packages/mdx/lib/plugin/rehype-remove-raw.js:11:4      - Unknown word (dangerous)  -- * dangerous HTML into nodes.
packages/mdx/lib/plugin/rehype-remove-raw.js:2:25      - Unknown word (hast)       -- import {Root} from 'hast'
packages/mdx/lib/plugin/rehype-remove-raw.js:8:23      - Unknown word (removes)    -- A tiny plugin that removes raw HTML.
packages/mdx/lib/plugin/rehype-remove-raw.js:8:6       - Unknown word (tiny)       -- * A tiny plugin that removes
packages/mdx/lib/plugin/remark-mark-and-unravel.js:10:23     - Unknown word (unravels)   -- A tiny plugin that unravels `<p><h1>x</h1></p>`
packages/mdx/lib/plugin/remark-mark-and-unravel.js:10:56     - Unknown word (also)       -- <h1>x</h1></p>` but also
packages/mdx/lib/plugin/remark-mark-and-unravel.js:10:6      - Unknown word (tiny)       -- * A tiny plugin that unravels
packages/mdx/lib/plugin/remark-mark-and-unravel.js:11:41     - Unknown word (knowledge)  -- </p>` (so it has no knowledge of “HTML”).
packages/mdx/lib/plugin/remark-mark-and-unravel.js:13:25     - Unknown word (being)      -- It also marks JSX as being explicitly JSX, so when
packages/mdx/lib/plugin/remark-mark-and-unravel.js:13:31     - Unknown word (explicitly) -- also marks JSX as being explicitly JSX, so when a user
packages/mdx/lib/plugin/remark-mark-and-unravel.js:13:62     - Unknown word (passes)     -- JSX, so when a user passes a `h1`
packages/mdx/lib/plugin/remark-mark-and-unravel.js:13:7      - Unknown word (also)       -- * It also marks JSX as being explicitly
packages/mdx/lib/plugin/remark-mark-and-unravel.js:19:30     - Unknown word (Unravel)    -- function remarkMarkAndUnravel() {
packages/mdx/lib/plugin/remark-mark-and-unravel.js:2:38      - Unknown word (mdast)      -- RootContent} from 'mdast'
packages/mdx/lib/plugin/remark-mark-and-unravel.js:30:16     - Unknown word (More)       -- let oneOrMore = false
packages/mdx/lib/plugin/remark-mark-and-unravel.js:42:18     - Unknown word (More)       -- oneOrMore = true
packages/mdx/lib/plugin/remark-mark-and-unravel.js:54:25     - Unknown word (More)       -- if (all && oneOrMore) {
packages/mdx/lib/plugin/remark-mark-and-unravel.js:64:36     - Unknown word (mutate)     -- / @ts-expect-error: mutate because it is faster
packages/mdx/lib/plugin/remark-mark-and-unravel.js:64:43     - Unknown word (because)    -- expect-error: mutate because it is faster; content
packages/mdx/lib/plugin/remark-mark-and-unravel.js:64:57     - Unknown word (faster)     -- mutate because it is faster; content model is fine
packages/mdx/lib/plugin/remark-mark-and-unravel.js:64:82     - Unknown word (fine)       -- faster; content model is fine.
packages/mdx/lib/plugin/remark-mark-and-unravel.js:69:36     - Unknown word (mutate)     -- / @ts-expect-error: mutate because it is faster
packages/mdx/lib/plugin/remark-mark-and-unravel.js:69:43     - Unknown word (because)    -- expect-error: mutate because it is faster; content
packages/mdx/lib/plugin/remark-mark-and-unravel.js:69:57     - Unknown word (faster)     -- mutate because it is faster; content model is fine
packages/mdx/lib/plugin/remark-mark-and-unravel.js:69:82     - Unknown word (fine)       -- faster; content model is fine.
packages/mdx/lib/plugin/remark-mark-and-unravel.js:99:26     - Unknown word (mdxjs)      -- node.type === 'mdxjsEsm') &&
packages/mdx/lib/run.js:10:13     - Unknown word (compiled)   -- * Run code compiled with `outputFormat:
packages/mdx/lib/run.js:12:11     - Unknown word (Danger)     -- * > ☢️ **Danger**: this `eval`s JavaScript
packages/mdx/lib/run.js:21:6      - Unknown word (anything)   -- * anything else that was exported
packages/mdx/lib/run.js:30:18     - Unknown word (please)     -- * When possible please use the async `run`
packages/mdx/lib/run.js:30:9      - Unknown word (possible)   -- * When possible please use the async
packages/mdx/lib/run.js:32:11     - Unknown word (Danger)     -- * > ☢️ **Danger**: this `eval`s JavaScript
packages/mdx/lib/types.d.ts:14:11     - Unknown word (Esast)      -- interface EsastCommentData extends EsastData
packages/mdx/lib/types.d.ts:14:36     - Unknown word (Esast)      -- EsastCommentData extends EsastData {
packages/mdx/lib/types.d.ts:16:6      - Unknown word (Whether)    -- * Whether a node (only used on
packages/mdx/lib/types.d.ts:17:47     - Unknown word (away)       -- when we compile JSX away, we can remove it.
packages/mdx/lib/types.d.ts:19:6      - Unknown word (Registered) -- * Registered by `@mdx-js/mdx/lib
packages/mdx/lib/types.d.ts:28:45     - Unknown word (mdast)      -- passed through from mdast through hast to esast
packages/mdx/lib/types.d.ts:28:59     - Unknown word (hast)       -- through from mdast through hast to esast.
packages/mdx/lib/types.d.ts:28:67     - Unknown word (esast)      -- mdast through hast to esast.
packages/mdx/lib/types.d.ts:30:8      - Unknown word (Registered) -- * Registered by `@mdx-js/mdx/lib
packages/mdx/lib/types.d.ts:32:12     - Unknown word (Esast)      -- data?: EsastData | undefined
packages/mdx/lib/types.d.ts:37:42     - Unknown word (recma)      -- data passed added by `recma-document`.
packages/mdx/lib/types.d.ts:39:8      - Unknown word (Registered) -- * Registered by `@mdx-js/mdx/lib
packages/mdx/lib/types.d.ts:41:12     - Unknown word (Esast)      -- data?: EsastCommentData | undefined
packages/mdx/lib/types.d.ts:45:22     - Unknown word (mdast)      -- / Register data on `mdast`.
packages/mdx/lib/types.d.ts:46:17     - Unknown word (mdast)      -- declare module 'mdast-util-mdx-jsx' {
packages/mdx/lib/types.d.ts:49:27     - Unknown word (authored)   -- Whether a node was authored as explicit JSX (`<h
packages/mdx/lib/types.d.ts:49:67     - Unknown word (implicitly) -- explicit JSX (`<h1>`) or as implicitly
packages/mdx/lib/types.d.ts:49:8      - Unknown word (Whether)    -- * Whether a node was authored
packages/mdx/lib/types.d.ts:4:11      - Unknown word (Esast)      -- interface EsastData extends UnistData
packages/mdx/lib/types.d.ts:50:8      - Unknown word (turned)     -- * turned into JSX (`# hi`).
packages/mdx/lib/types.d.ts:52:8      - Unknown word (Registered) -- * Registered by `@mdx-js/mdx/lib
packages/mdx/lib/types.d.ts:59:27     - Unknown word (authored)   -- Whether a node was authored as explicit JSX (`<h
packages/mdx/lib/types.d.ts:59:67     - Unknown word (implicitly) -- explicit JSX (`<h1>`) or as implicitly
packages/mdx/lib/types.d.ts:59:8      - Unknown word (Whether)    -- * Whether a node was authored
packages/mdx/lib/types.d.ts:60:8      - Unknown word (turned)     -- * turned into JSX (`# hi`).
packages/mdx/lib/types.d.ts:6:25      - Unknown word (authored)   -- Whether a node was authored as explicit JSX (`<h
packages/mdx/lib/types.d.ts:6:6       - Unknown word (Whether)    -- * Whether a node was authored
packages/mdx/lib/types.d.ts:6:65      - Unknown word (implicitly) -- explicit JSX (`<h1>`) or as implicitly
packages/mdx/lib/types.d.ts:7:6       - Unknown word (turned)     -- * turned into JSX (`# hi`).
packages/mdx/lib/types.d.ts:9:6       - Unknown word (Registered) -- * Registered by `@mdx-js/mdx/lib
packages/mdx/lib/util/create-format-aware-processors.js:10:19     - Unknown word (Aware)      -- * @typedef FormatAwareProcessors
packages/mdx/lib/util/create-format-aware-processors.js:12:38     - Unknown word (extnames)   -- ReadonlyArray<string>} extnames
packages/mdx/lib/util/create-format-aware-processors.js:26:26     - Unknown word (extnames)   -- import {md, mdx} from './extnames.js'
packages/mdx/lib/util/create-format-aware-processors.js:30:38     - Unknown word (different)  -- processors to handle different formats.
packages/mdx/lib/util/create-format-aware-processors.js:34:19     - Unknown word (Aware)      -- * @return {FormatAwareProcessors}
packages/mdx/lib/util/create-format-aware-processors.js:37:29     - Unknown word (Aware)      -- function createFormatAwareProcessors(compileOptions
packages/mdx/lib/util/create-format-aware-processors.js:3:25      - Unknown word (mdast)      -- import {Root} from 'mdast'
packages/mdx/lib/util/create-format-aware-processors.js:47:5      - Unknown word (extnames)   -- extnames:
packages/mdx/lib/util/create-format-aware-processors.js:69:72     - Unknown word (they)       -- one for MDX) so that they do
packages/mdx/lib/util/create-format-aware-processors.js:70:21     - Unknown word (reconstructed) -- * not have to be reconstructed for each file.
packages/mdx/lib/util/estree-util-create.js:25:35     - Unknown word (they’re)    -- expect-error: assume they’re settable.
packages/mdx/lib/util/estree-util-create.js:5:30      - Unknown word (above)      -- to show references to above types in VS Code.
packages/mdx/lib/util/estree-util-declaration-to-expression.js:10:29     - Unknown word (devlop)     -- ok as assert} from 'devlop'
packages/mdx/lib/util/estree-util-declaration-to-expression.js:15:4      - Unknown word (Doesn’t)    -- * Doesn’t work for variable declaration
packages/mdx/lib/util/estree-util-declaration-to-expression.js:15:55     - Unknown word (fine)       -- declarations, but that’s fine for our use case
packages/mdx/lib/util/estree-util-declaration-to-expression.js:16:12     - Unknown word (currently)  -- * because currently we’re using this utility
packages/mdx/lib/util/estree-util-declaration-to-expression.js:16:28     - Unknown word (using)      -- because currently we’re using this utility for export
packages/mdx/lib/util/estree-util-declaration-to-expression.js:16:39     - Unknown word (utility)    -- currently we’re using this utility for export default declaratio
packages/mdx/lib/util/estree-util-declaration-to-expression.js:16:4      - Unknown word (because)    -- * because currently we’re using
packages/mdx/lib/util/estree-util-declaration-to-expression.js:29:14     - Unknown word (currently)  -- // This is currently an internal utility
packages/mdx/lib/util/estree-util-declaration-to-expression.js:29:36     - Unknown word (utility)    -- currently an internal utility so the next shouldn
packages/mdx/lib/util/estree-util-declaration-to-expression.js:29:56     - Unknown word (shouldn’t)  -- utility so the next shouldn’t happen or a
packages/mdx/lib/util/estree-util-declaration-to-expression.js:29:66     - Unknown word (happen)     -- so the next shouldn’t happen or a
packages/mdx/lib/util/estree-util-declaration-to-expression.js:30:20     - Unknown word (making)     -- // maintainer is making a mistake.
packages/mdx/lib/util/estree-util-declaration-to-expression.js:30:29     - Unknown word (mistake)    -- maintainer is making a mistake.
packages/mdx/lib/util/estree-util-declaration-to-expression.js:30:6      - Unknown word (maintainer) -- // maintainer is making a mistake
packages/mdx/lib/util/estree-util-declaration-to-expression.js:31:52     - Unknown word (unexpected) -- ClassDeclaration', 'unexpected node type')
packages/mdx/lib/util/estree-util-is-declaration.js:10:30     - Unknown word (above)      -- to show references to above types in VS Code.
packages/mdx/lib/util/estree-util-is-declaration.js:19:6      - Unknown word (Whether)    -- * Whether `node` is a declaration
packages/mdx/lib/util/estree-util-specifiers-to-declarations.js:15:29     - Unknown word (devlop)     -- ok as assert} from 'devlop'
packages/mdx/lib/util/estree-util-specifiers-to-declarations.js:19:154    - Unknown word (specifiers) -- Readonly<ImportSpecifier>>} specifiers
packages/mdx/lib/util/estree-util-specifiers-to-declarations.js:20:6      - Unknown word (Specifiers) -- * Specifiers.
packages/mdx/lib/util/estree-util-specifiers-to-declarations.js:26:17     - Unknown word (specifiers) -- export function specifiersToDeclarations(specifiers
packages/mdx/lib/util/estree-util-specifiers-to-declarations.js:26:42     - Unknown word (specifiers) -- specifiersToDeclarations(specifiers, init) {
packages/mdx/lib/util/estree-util-specifiers-to-declarations.js:31:14     - Unknown word (Specifiers) -- const otherSpecifiers = []
packages/mdx/lib/util/estree-util-specifiers-to-declarations.js:32:22     - Unknown word (according)  -- // Can only be one according to JS syntax.
packages/mdx/lib/util/estree-util-specifiers-to-declarations.js:36:20     - Unknown word (specifiers) -- while (++index < specifiers.length) {
packages/mdx/lib/util/estree-util-specifiers-to-declarations.js:37:23     - Unknown word (specifiers) -- const specifier = specifiers[index]
packages/mdx/lib/util/estree-util-specifiers-to-declarations.js:42:12     - Unknown word (Specifiers) -- otherSpecifiers.push(specifier)
packages/mdx/lib/util/estree-util-specifiers-to-declarations.js:61:24     - Unknown word (Specifiers) -- properties: otherSpecifiers.map(function (specifier
packages/mdx/lib/util/estree-util-specifiers-to-declarations.js:71:19     - Unknown word (them)       -- // Switch them around if we’re exporting
packages/mdx/lib/util/estree-util-specifiers-to-declarations.js:71:24     - Unknown word (around)     -- // Switch them around if we’re exporting.
packages/mdx/lib/util/estree-util-specifiers-to-declarations.js:71:40     - Unknown word (exporting)  -- them around if we’re exporting.
packages/mdx/lib/util/estree-util-specifiers-to-declarations.js:77:30     - Unknown word (about)      -- / To do: what to do about literals?
packages/mdx/lib/util/estree-util-to-binary-addition.js:5:29      - Unknown word (devlop)     -- ok as assert} from 'devlop'
packages/mdx/lib/util/estree-util-to-id-or-member-expression.js:11:29     - Unknown word (devlop)     -- ok as assert} from 'devlop'
packages/mdx/lib/util/estree-util-to-id-or-member-expression.js:16:6      - Unknown word (Identifiers) -- * Identifiers (example: `['list',
packages/mdx/lib/util/estree-util-to-id-or-member-expression.js:44:66     - Unknown word (most)        -- expected identifier as left-most value')
packages/mdx/lib/util/estree-util-to-id-or-member-expression.js:50:6      - Unknown word (Identifiers) -- * Identifiers (example: `['list',
packages/mdx/lib/util/extnames-to-regex.js:2:19      - Unknown word (extnames)   -- * Turn a list of extnames (*with* dots) into an
packages/mdx/lib/util/extnames-to-regex.js:2:36      - Unknown word (dots)       -- of extnames (*with* dots) into an expression
packages/mdx/lib/util/extnames-to-regex.js:4:35      - Unknown word (extnames)   -- ReadonlyArray<string>} extnames
packages/mdx/lib/util/extnames-to-regex.js:5:14      - Unknown word (extnames)   -- * List of extnames.
packages/mdx/lib/util/extnames-to-regex.js:7:21      - Unknown word (them)       -- * Regex matching them.
packages/mdx/lib/util/extnames-to-regex.js:9:17      - Unknown word (extnames)   -- export function extnamesToRegex(extnames) {
packages/mdx/lib/util/extnames-to-regex.js:9:33      - Unknown word (extnames)   -- function extnamesToRegex(extnames) {
packages/mdx/lib/util/resolve-evaluate-options.js:15:27     - Unknown word (compiled)   -- Configuration to run compiled code.
packages/mdx/lib/util/resolve-evaluate-options.js:17:30     - Unknown word (jsxs)       -- Fragment`, `jsx`, and `jsxs` are used when the code
packages/mdx/lib/util/resolve-evaluate-options.js:17:62     - Unknown word (compiled)   -- used when the code is compiled in
packages/mdx/lib/util/resolve-evaluate-options.js:18:6      - Unknown word (production) -- * production mode (`development:
packages/mdx/lib/util/resolve-evaluate-options.js:19:44     - Unknown word (compiled)   -- jsxDEV` are used when compiled in development mode
packages/mdx/lib/util/resolve-evaluate-options.js:21:50     - Unknown word (compiled)   -- used when the code is compiled with
packages/mdx/lib/util/resolve-evaluate-options.js:23:14     - Unknown word (matter)     -- * doesn’t matter).
packages/mdx/lib/util/resolve-evaluate-options.js:23:6      - Unknown word (doesn’t)    -- * doesn’t matter).
packages/mdx/lib/util/resolve-evaluate-options.js:27:22     - Unknown word (also)       -- * this option can also be given at compile
packages/mdx/lib/util/resolve-evaluate-options.js:28:28     - Unknown word (likely)     -- you should pass this (likely at runtime), as you
packages/mdx/lib/util/resolve-evaluate-options.js:28:55     - Unknown word (might)      -- at runtime), as you might get runtime errors
packages/mdx/lib/util/resolve-evaluate-options.js:29:11     - Unknown word (using)      -- * when using `import.meta.url` /
packages/mdx/lib/util/resolve-evaluate-options.js:29:65     - Unknown word (otherwise)  -- / `export … from ` otherwise.
packages/mdx/lib/util/resolve-evaluate-options.js:33:62     - Unknown word (production) -- with static children in production mode.
packages/mdx/lib/util/resolve-evaluate-options.js:36:40     - Unknown word (jsxs)       -- null | undefined} [jsxs]
packages/mdx/lib/util/resolve-evaluate-options.js:37:63     - Unknown word (production) -- dynamic children in production mode.
packages/mdx/lib/util/resolve-evaluate-options.js:47:30     - Unknown word (above)      -- to show references to above types in VS Code.
packages/mdx/lib/util/resolve-evaluate-options.js:51:10     - Unknown word (compiletime) -- * Split compiletime options from runtime
packages/mdx/lib/util/resolve-evaluate-options.js:55:15     - Unknown word (compiletime) -- * @returns {{compiletime: CompileOptions, runtime
packages/mdx/lib/util/resolve-evaluate-options.js:65:5      - Unknown word (jsxs)        -- jsxs,
packages/mdx/lib/util/resolve-evaluate-options.js:75:10     - Unknown word (jsxs)        -- if (!jsxs) throw new Error('Expected
packages/mdx/lib/util/resolve-evaluate-options.js:75:43     - Unknown word (jsxs)        -- new Error('Expected `jsxs` given to `evaluate
packages/mdx/lib/util/resolve-evaluate-options.js:79:5      - Unknown word (compiletime) -- compiletime: {
packages/mdx/lib/util/resolve-file-and-options.js:12:4      - Unknown word (might)      -- * might contain `format: 'detect
packages/mdx/lib/util/resolve-file-and-options.js:8:21      - Unknown word (extnames)   -- import {md} from './extnames.js'
packages/mdx/readme.md:1004:5    - Unknown word (symbol)        -- — symbol to use for fragments
packages/mdx/readme.md:1007:19   - Unknown word (relative)      -- `export … from` relative to it;
packages/mdx/readme.md:1008:27   - Unknown word (given)         -- this option can also be given at compile time in
packages/mdx/readme.md:1009:52   - Unknown word (might)         -- at runtime), as you might get runtime errors
packages/mdx/readme.md:1010:62   - Unknown word (otherwise)     -- / `export … from ` otherwise
packages/mdx/readme.md:1010:8    - Unknown word (using)         -- when using `import.meta.url` /
packages/mdx/readme.md:1012:61   - Unknown word (production)    -- with static children in production mode
packages/mdx/readme.md:1012:72   - Unknown word (mode)          -- children in production mode
packages/mdx/readme.md:1014:52   - Unknown word (mode)          -- element in development mode
packages/mdx/readme.md:1016:62   - Unknown word (production)    -- dynamic children in production mode
packages/mdx/readme.md:1016:73   - Unknown word (mode)          -- children in production mode
packages/mdx/readme.md:101:20    - Unknown word (compiled)     -- console.log(String(compiled))
packages/mdx/readme.md:1022:30   - Unknown word (expose)        -- runtime` module will expose `Fragment`, `jsx`, and
packages/mdx/readme.md:1031:34   - Unknown word (expose)        -- runtime` module will expose `Fragment` and `jsxDEV
packages/mdx/readme.md:1039:20   - Unknown word (expose)        -- Our providers will expose `useMDXComponents`:
packages/mdx/readme.md:104:1     - Unknown word (Yields)       -- Yields roughly:
packages/mdx/readme.md:104:8     - Unknown word (roughly)      -- Yields roughly:
packages/mdx/readme.md:1054:1    - Unknown word (There)         -- There are no parameters.
packages/mdx/readme.md:1062:17   - Unknown word (fully)         -- This package is fully typed with [TypeScript
packages/mdx/readme.md:1063:16   - Unknown word (additional)    -- It exports the additional types
packages/mdx/readme.md:1073:14   - Unknown word (evaluated)     -- For types of evaluated MDX to work, make sure
packages/mdx/readme.md:1073:42   - Unknown word (sure)          -- evaluated MDX to work, make sure the TypeScript `JSX
packages/mdx/readme.md:1075:17   - Unknown word (installing)    -- This is done by installing and using the types
packages/mdx/readme.md:1075:51   - Unknown word (your)          -- and using the types of your framework, such as
packages/mdx/readme.md:1075:9    - Unknown word (done)          -- This is done by installing and using
packages/mdx/readme.md:1079:4    - Unknown word (Architecture)  -- ## Architecture
packages/mdx/readme.md:107:45    - Unknown word (jsxs)         -- Fragment, jsx as _jsx, jsxs as _jsxs} from 'react
packages/mdx/readme.md:107:54    - Unknown word (jsxs)         -- jsx as _jsx, jsxs as _jsxs} from 'react/jsx-runtime
packages/mdx/readme.md:1081:15   - Unknown word (what)          -- To understand what this project does, it
packages/mdx/readme.md:1081:33   - Unknown word (does)          -- understand what this project does, it’s very important
packages/mdx/readme.md:1081:4    - Unknown word (understand)    -- To understand what this project does
packages/mdx/readme.md:1081:44   - Unknown word (very)          -- this project does, it’s very important to first understand
packages/mdx/readme.md:1081:49   - Unknown word (important)     -- project does, it’s very important to first understand
packages/mdx/readme.md:1081:68   - Unknown word (understand)    -- very important to first understand
packages/mdx/readme.md:1082:1    - Unknown word (what)          -- what unified does: please
packages/mdx/readme.md:1082:14   - Unknown word (does)          -- what unified does: please read through
packages/mdx/readme.md:1082:20   - Unknown word (please)        -- what unified does: please read through the [`unifiedjs
packages/mdx/readme.md:1082:46   - Unknown word (unifiedjs)     -- please read through the [`unifiedjs/unified`][unified] readme
packages/mdx/readme.md:1083:11   - Unknown word (until)         -- (the part until you hit the API section
packages/mdx/readme.md:1085:39   - Unknown word (wrapped)       -- a unified pipeline — wrapped so that most folks don
packages/mdx/readme.md:1085:55   - Unknown word (most)          -- pipeline — wrapped so that most folks don’t need to
packages/mdx/readme.md:1085:60   - Unknown word (folks)         -- wrapped so that most folks don’t need to
packages/mdx/readme.md:1085:72   - Unknown word (need)          -- that most folks don’t need to
packages/mdx/readme.md:1086:1    - Unknown word (know)          -- know about unified.
packages/mdx/readme.md:1086:6    - Unknown word (about)         -- know about unified.
packages/mdx/readme.md:1087:15   - Unknown word (goes)          -- The processor goes through these steps
packages/mdx/readme.md:1087:28   - Unknown word (these)         -- processor goes through these steps:
packages/mdx/readme.md:1090:7    - Unknown word (mdast)         -- to mdast (markdown syntax tree
packages/mdx/readme.md:1091:39   - Unknown word (ecosystem)     -- through remark (markdown ecosystem)
packages/mdx/readme.md:1092:14   - Unknown word (mdast)         -- 3. transform mdast to hast (HTML syntax
packages/mdx/readme.md:1092:23   - Unknown word (hast)          -- transform mdast to hast (HTML syntax tree)
packages/mdx/readme.md:1093:35   - Unknown word (ecosystem)     -- through rehype (HTML ecosystem)
packages/mdx/readme.md:1094:14   - Unknown word (hast)         -- 5. transform hast to esast (JS syntax
packages/mdx/readme.md:1094:22   - Unknown word (esast)        -- . transform hast to esast (JS syntax tree)
packages/mdx/readme.md:1095:16   - Unknown word (needed)       -- 6. do the work needed to get a component
packages/mdx/readme.md:1096:32   - Unknown word (ecosystem)    -- transform through recma (JS ecosystem)
packages/mdx/readme.md:1097:14   - Unknown word (esast)        -- 8. serialize esast as JavaScript
packages/mdx/readme.md:1101:17   - Unknown word (parsed)       -- The markdown is parsed with [`micromark/micromark
packages/mdx/readme.md:1103:33   - Unknown word (mdxjs)        -- micromark-extension-mdxjs`][micromark-extension
packages/mdx/readme.md:1104:1    - Unknown word (turn)         -- turn uses [acorn][]).
packages/mdx/readme.md:1104:6    - Unknown word (uses)         -- turn uses [acorn][]).
packages/mdx/readme.md:1106:25   - Unknown word (mdast)        -- extension [`syntax-tree/mdast-util-mdx`][mdast-util
packages/mdx/readme.md:1106:70   - Unknown word (turn)         -- util-mdx] are used to turn the
packages/mdx/readme.md:1109:13   - Unknown word (closest)      -- Markdown is closest to the source format
packages/mdx/readme.md:1110:48   - Unknown word (come)         -- plugins][remark-plugins] come in.
packages/mdx/readme.md:1110:9    - Unknown word (where)        -- This is where [remark plugins][remark
packages/mdx/readme.md:1111:1    - Unknown word (Typically)    -- Typically, there shouldn’t be
packages/mdx/readme.md:1111:12   - Unknown word (there)        -- Typically, there shouldn’t be much going
packages/mdx/readme.md:1111:18   - Unknown word (shouldn’t)    -- Typically, there shouldn’t be much going on here
packages/mdx/readme.md:1111:31   - Unknown word (much)         -- there shouldn’t be much going on here.
packages/mdx/readme.md:1111:36   - Unknown word (going)        -- there shouldn’t be much going on here.
packages/mdx/readme.md:1111:45   - Unknown word (here)         -- shouldn’t be much going on here.
packages/mdx/readme.md:1112:17   - Unknown word (want)         -- But perhaps you want to support GFM (tables
packages/mdx/readme.md:1112:5    - Unknown word (perhaps)      -- But perhaps you want to support
packages/mdx/readme.md:1112:58   - Unknown word (frontmatter)  -- tables and such) or frontmatter?
packages/mdx/readme.md:1113:27   - Unknown word (here)         -- you can add a plugin here: `remark-gfm` or `remark
packages/mdx/readme.md:1113:57   - Unknown word (frontmatter)  -- remark-gfm` or `remark-frontmatter`,
packages/mdx/readme.md:1114:1    - Unknown word (respectively) -- respectively.
packages/mdx/readme.md:1116:27   - Unknown word (hast)         -- markdown, we go to [hast][] (HTML).
packages/mdx/readme.md:1117:24   - Unknown word (done)         -- This transformation is done by
packages/mdx/readme.md:1119:1    - Unknown word (Wait)         -- Wait, why, what is HTML needed
packages/mdx/readme.md:1119:12   - Unknown word (what)         -- Wait, why, what is HTML needed?
packages/mdx/readme.md:1119:25   - Unknown word (needed)       -- Wait, why, what is HTML needed?
packages/mdx/readme.md:1120:31   - Unknown word (care)         -- the reason is that we care about HTML semantics
packages/mdx/readme.md:1120:36   - Unknown word (about)        -- reason is that we care about HTML semantics: we want
packages/mdx/readme.md:1120:61   - Unknown word (want)         -- about HTML semantics: we want to know that
packages/mdx/readme.md:1120:69   - Unknown word (know)         -- semantics: we want to know that
packages/mdx/readme.md:1121:1    - Unknown word (something)    -- something is an `<a>`, not whether
packages/mdx/readme.md:1121:28   - Unknown word (whether)      -- something is an `<a>`, not whether it’s a link with a resource
packages/mdx/readme.md:1123:20   - Unknown word (closer)       -- So an HTML AST is *closer* to where we want to
packages/mdx/readme.md:1123:31   - Unknown word (where)        -- HTML AST is *closer* to where we want to go.
packages/mdx/readme.md:1123:40   - Unknown word (want)         -- closer* to where we want to go.
packages/mdx/readme.md:1124:1    - Unknown word (Another)      -- Another reason is that there
packages/mdx/readme.md:1124:24   - Unknown word (there)        -- Another reason is that there are many things folks
packages/mdx/readme.md:1124:34   - Unknown word (many)         -- reason is that there are many things folks need when
packages/mdx/readme.md:1124:46   - Unknown word (folks)        -- there are many things folks need when they go MDX
packages/mdx/readme.md:1124:52   - Unknown word (need)         -- are many things folks need when they go MDX ->
packages/mdx/readme.md:1124:62   - Unknown word (they)         -- things folks need when they go MDX -> JS,
packages/mdx/readme.md:1125:22   - Unknown word (even)         -- markdown -> HTML, or even folks who only process
packages/mdx/readme.md:1125:27   - Unknown word (folks)        -- markdown -> HTML, or even folks who only process their
packages/mdx/readme.md:1125:50   - Unknown word (their)        -- folks who only process their HTML -> HTML: use cases
packages/mdx/readme.md:1125:74   - Unknown word (cases)        -- their HTML -> HTML: use cases
packages/mdx/readme.md:1126:7    - Unknown word (than)         -- other than MDX.
packages/mdx/readme.md:1127:27   - Unknown word (these)        -- having a single AST in these cases and writing a
packages/mdx/readme.md:1127:33   - Unknown word (cases)        -- single AST in these cases and writing a plugin
packages/mdx/readme.md:1127:4    - Unknown word (having)       -- By having a single AST in these
packages/mdx/readme.md:1128:22   - Unknown word (supports)     -- AST, that plugin can supports *all* these use cases
packages/mdx/readme.md:1128:37   - Unknown word (these)        -- plugin can supports *all* these use cases (for example
packages/mdx/readme.md:1128:47   - Unknown word (cases)        -- supports *all* these use cases (for example,
packages/mdx/readme.md:1129:3    - Unknown word (rehypejs)     -- [`rehypejs/rehype-highlight`][rehype
packages/mdx/readme.md:1129:60   - Unknown word (highlighting) -- highlight] for syntax highlighting or
packages/mdx/readme.md:1130:3    - Unknown word (rehypejs)     -- [`rehypejs/rehype-katex`][rehype
packages/mdx/readme.md:1131:13   - Unknown word (where)        -- So, this is where [rehype plugins][rehype
packages/mdx/readme.md:1131:52   - Unknown word (come)         -- plugins][rehype-plugins] come in: most of the plugins
packages/mdx/readme.md:1131:61   - Unknown word (most)         -- rehype-plugins] come in: most of the plugins,
packages/mdx/readme.md:1132:1    - Unknown word (probably)     -- probably.
packages/mdx/readme.md:1134:28   - Unknown word (esast)        -- we go to JavaScript: [esast][] (JS; an
packages/mdx/readme.md:1135:53   - Unknown word (more)         -- estree but looks a bit more like other unist ASTs
packages/mdx/readme.md:1135:58   - Unknown word (like)         -- but looks a bit more like other unist ASTs).
packages/mdx/readme.md:1136:24   - Unknown word (done)         -- This transformation is done by
packages/mdx/readme.md:1138:15   - Unknown word (ecosystem)    -- This is a new ecosystem that does not have utilities
packages/mdx/readme.md:1138:30   - Unknown word (does)         -- a new ecosystem that does not have utilities or
packages/mdx/readme.md:1138:39   - Unknown word (have)         -- ecosystem that does not have utilities or plugins
packages/mdx/readme.md:1139:10   - Unknown word (where)        -- But it’s where `@mdx-js/mdx` does its
packages/mdx/readme.md:1139:30   - Unknown word (does)         -- where `@mdx-js/mdx` does its thing: where it
packages/mdx/readme.md:1139:55   - Unknown word (adds)         -- its thing: where it adds imports/exports,
packages/mdx/readme.md:113:28    - Unknown word (props)        -- function _createMdxContent(props) {
packages/mdx/readme.md:1140:10   - Unknown word (compiles)     -- where it compiles JSX away into `_jsx
packages/mdx/readme.md:1140:23   - Unknown word (away)         -- where it compiles JSX away into `_jsx()` calls
packages/mdx/readme.md:1140:42   - Unknown word (calls)        -- JSX away into `_jsx()` calls, and where it does the
packages/mdx/readme.md:1140:77   - Unknown word (cool)         -- where it does the other cool
packages/mdx/readme.md:1141:16   - Unknown word (provides)     -- things that it provides.
packages/mdx/readme.md:1143:1    - Unknown word (Finally)      -- Finally, The output is serialized
packages/mdx/readme.md:1144:1    - Unknown word (That)         -- That final step is done by
packages/mdx/readme.md:1144:20   - Unknown word (done)         -- That final step is done by [astring][], a
packages/mdx/readme.md:1144:29   - Unknown word (astring)      -- final step is done by [astring][], a
packages/mdx/readme.md:1144:6    - Unknown word (final)        -- That final step is done by [astring
packages/mdx/readme.md:1149:10   - Unknown word (maintained)   -- Projects maintained by the unified collective
packages/mdx/readme.md:1149:36   - Unknown word (collective)   -- maintained by the unified collective are compatible with
packages/mdx/readme.md:1149:67   - Unknown word (maintained)   -- are compatible with maintained
packages/mdx/readme.md:114:37    - Unknown word (props)        -- components = {h1: 'h1', ...props.components}
packages/mdx/readme.md:1152:19   - Unknown word (major)        -- When we cut a new major release, we drop support
packages/mdx/readme.md:1152:54   - Unknown word (unmaintained) -- we drop support for unmaintained versions of
packages/mdx/readme.md:1154:22   - Unknown word (keep)         -- This means we try to keep the current release
packages/mdx/readme.md:1154:6    - Unknown word (means)        -- This means we try to keep the current
packages/mdx/readme.md:115:11    - Unknown word (jsxs)         -- return _jsxs(_components.h1, {children
packages/mdx/readme.md:1161:4    - Unknown word (Contribute)   -- ## Contribute
packages/mdx/readme.md:1163:51   - Unknown word (ways)         -- on our website for ways to get started.
packages/mdx/readme.md:1163:63   - Unknown word (started)      -- website for ways to get started.
packages/mdx/readme.md:1163:8    - Unknown word (Contribute)   -- See [§ Contribute][contribute] on our
packages/mdx/readme.md:1164:30   - Unknown word (ways)         -- Support][support] for ways to get help.
packages/mdx/readme.md:1164:42   - Unknown word (help)         -- support] for ways to get help.
packages/mdx/readme.md:1166:29   - Unknown word (conduct)      -- project has a [code of conduct][coc].
packages/mdx/readme.md:1167:4    - Unknown word (interacting)  -- By interacting with this repository
packages/mdx/readme.md:1167:69   - Unknown word (agree)        -- rganization, or community you agree to
packages/mdx/readme.md:1168:1    - Unknown word (abide)        -- abide by its terms.
packages/mdx/readme.md:1172:11   - Unknown word (Compositor)   -- [MIT][] © Compositor and [Vercel][]
packages/mdx/readme.md:118:36    - Unknown word (props)        -- function MDXContent(props = {}) {
packages/mdx/readme.md:119:10    - Unknown word (wrapper)      -- const {wrapper: MDXLayout} = props
packages/mdx/readme.md:119:22    - Unknown word (Layout)       -- const {wrapper: MDXLayout} = props.components
packages/mdx/readme.md:119:32    - Unknown word (props)        -- wrapper: MDXLayout} = props.components || {}
packages/mdx/readme.md:120:13    - Unknown word (Layout)       -- return MDXLayout
packages/mdx/readme.md:121:15    - Unknown word (Layout)       -- ? _jsx(MDXLayout, {...props, children
packages/mdx/readme.md:121:27    - Unknown word (props)        -- _jsx(MDXLayout, {...props, children: _jsx(_createMdxCon
packages/mdx/readme.md:126:34    - Unknown word (more)         -- MDX][using-mdx] for more on how MDX work and
packages/mdx/readme.md:126:8     - Unknown word (Using)        -- See [§ Using MDX][using-mdx] for
packages/mdx/readme.md:130:26    - Unknown word (following)    -- package exports the following identifiers:
packages/mdx/readme.md:139:1     - Unknown word (There)        -- There is no default export
packages/mdx/readme.md:13:6      - Unknown word (more)       -- <!-- more -->
packages/mdx/readme.md:149:55    - Unknown word (optional)     -- api-compile-options], optional)
packages/mdx/readme.md:152:8     - Unknown word (Returns)      -- ###### Returns
packages/mdx/readme.md:154:12    - Unknown word (compiled)     -- Promise to compiled file ([`Promise<VFile
packages/mdx/readme.md:158:35    - Unknown word (many)         -- value for `file` can be many different things.
packages/mdx/readme.md:158:40    - Unknown word (different)    -- for `file` can be many different things.
packages/mdx/readme.md:159:70    - Unknown word (anything)     -- `VFile`][vfile], or anything
packages/mdx/readme.md:160:1     - Unknown word (that)         -- that can be given to `new
packages/mdx/readme.md:160:13    - Unknown word (given)        -- that can be given to `new VFile`.
packages/mdx/readme.md:166:1     - Unknown word (await)        -- await compile(':)')
packages/mdx/readme.md:167:1     - Unknown word (await)        -- await compile(Buffer.from
packages/mdx/readme.md:168:1     - Unknown word (await)        -- await compile({path: 'path
packages/mdx/readme.md:172:42    - Unknown word (more)         -- can be used to access more than the generated code
packages/mdx/readme.md:172:47    - Unknown word (than)         -- used to access more than the generated code:
packages/mdx/readme.md:172:56    - Unknown word (generated)    -- access more than the generated code:
packages/mdx/readme.md:176:24    - Unknown word (Consistent)   -- import remarkPresetLintConsistent from 'remark-preset
packages/mdx/readme.md:176:60    - Unknown word (consistent)   -- 'remark-preset-lint-consistent' // Lint rules to check
packages/mdx/readme.md:176:99    - Unknown word (consistent)   -- Lint rules to check for consistent markdown.
packages/mdx/readme.md:177:31    - Unknown word (reporter)     -- reporter} from 'vfile-reporter'
packages/mdx/readme.md:177:9     - Unknown word (reporter)     -- import {reporter} from 'vfile-reporter
packages/mdx/readme.md:179:30    - Unknown word (like)         -- file = await compile('*like this* or _like this
packages/mdx/readme.md:179:45    - Unknown word (like)         -- compile('*like this* or _like this_?', {remarkPlugins
packages/mdx/readme.md:179:92    - Unknown word (Consistent)   -- markPlugins: [remarkPresetLintConsistent]})
packages/mdx/readme.md:17:4      - Unknown word (What)       -- * [What is this?](#what-is-this
packages/mdx/readme.md:181:15    - Unknown word (reporter)     -- console.error(reporter(file))
packages/mdx/readme.md:184:1     - Unknown word (Yields)       -- Yields:
packages/mdx/readme.md:187:23    - Unknown word (Emphasis)     -- 1:16-1:27 warning  Emphasis should use `*` as a
packages/mdx/readme.md:187:60    - Unknown word (emphasis)     -- use `*` as a marker  emphasis-marker remark-lint
packages/mdx/readme.md:196:15    - Unknown word (please)       -- When possible please use the async [`compile
packages/mdx/readme.md:196:6     - Unknown word (possible)     -- When possible please use the async
packages/mdx/readme.md:202:55    - Unknown word (optional)     -- api-compile-options], optional)
packages/mdx/readme.md:205:8     - Unknown word (Returns)      -- ###### Returns
packages/mdx/readme.md:207:1     - Unknown word (Compiled)     -- Compiled file ([`VFile`][vfile
packages/mdx/readme.md:217:59    - Unknown word (optional)     -- processor-options], optional)
packages/mdx/readme.md:220:8     - Unknown word (Returns)      -- ###### Returns
packages/mdx/readme.md:228:16    - Unknown word (your)         -- When you trust your content, `evaluate`
packages/mdx/readme.md:229:6     - Unknown word (possible)     -- When possible, use [`compile`][api
packages/mdx/readme.md:230:27    - Unknown word (Integrations) -- or use one of the [§ Integrations][integrations].
packages/mdx/readme.md:232:23    - Unknown word (called)       -- ☢️ **Danger**: it’s called **evaluate** because
packages/mdx/readme.md:232:8     - Unknown word (Danger)       -- > ☢️ **Danger**: it’s called **evaluate
packages/mdx/readme.md:241:8     - Unknown word (Returns)      -- ###### Returns
packages/mdx/readme.md:243:14    - Unknown word (module)       -- Promise to a module ([`Promise<MDXModule
packages/mdx/readme.md:243:35    - Unknown word (Module)       -- module ([`Promise<MDXModule>` from
packages/mdx/readme.md:247:1     - Unknown word (anything)     -- anything else that was exported
packages/mdx/readme.md:247:15    - Unknown word (that)         -- anything else that was exported is available
packages/mdx/readme.md:247:24    - Unknown word (exported)     -- anything else that was exported is available too.
packages/mdx/readme.md:248:14    - Unknown word (assuming)     -- For example, assuming the contents of `example
packages/mdx/readme.md:248:5     - Unknown word (example)      -- For example, assuming the contents
packages/mdx/readme.md:258:2     - Unknown word (yields)       -- …yields:
packages/mdx/readme.md:264:8     - Unknown word (Notes)        -- ###### Notes
packages/mdx/readme.md:266:1     - Unknown word (Compiling)    -- Compiling (and running) MDX takes
packages/mdx/readme.md:266:29    - Unknown word (takes)        -- Compiling (and running) MDX takes time.
packages/mdx/readme.md:268:43    - Unknown word (that)         -- rendering a string of MDX that often changes using
packages/mdx/readme.md:268:48    - Unknown word (often)        -- a string of MDX that often changes using a virtual
packages/mdx/readme.md:268:62    - Unknown word (using)        -- MDX that often changes using a virtual DOM
packages/mdx/readme.md:269:18    - Unknown word (such)         -- based framework (such as React), one performance
packages/mdx/readme.md:269:38    - Unknown word (performance)  -- such as React), one performance improvement is to call
packages/mdx/readme.md:269:50    - Unknown word (improvement)  -- React), one performance improvement is to call the
packages/mdx/readme.md:269:68    - Unknown word (call)         -- performance improvement is to call the
packages/mdx/readme.md:270:24    - Unknown word (yourself)     -- MDXContent` component yourself.
packages/mdx/readme.md:271:15    - Unknown word (that)         -- The reason is that the `evaluate` creates
packages/mdx/readme.md:271:35    - Unknown word (creates)      -- that the `evaluate` creates a new function each
packages/mdx/readme.md:271:75    - Unknown word (cannot)       -- function each time, which cannot
packages/mdx/readme.md:272:4     - Unknown word (diffed)       -- be diffed:
packages/mdx/readme.md:285:15    - Unknown word (please)       -- When possible please use the async [`evaluate
packages/mdx/readme.md:285:6     - Unknown word (possible)     -- When possible please use the async
packages/mdx/readme.md:287:23    - Unknown word (called)       -- ☢️ **Danger**: it’s called **evaluate** because
packages/mdx/readme.md:287:8     - Unknown word (Danger)       -- > ☢️ **Danger**: it’s called **evaluate
packages/mdx/readme.md:296:8     - Unknown word (Returns)      -- ###### Returns
packages/mdx/readme.md:298:1     - Unknown word (Module)       -- Module ([`MDXModule` from
packages/mdx/readme.md:298:14    - Unknown word (Module)       -- Module ([`MDXModule` from `mdx/types.js
packages/mdx/readme.md:302:20    - Unknown word (made)         -- List of node types made by `mdast-util-mdx`
packages/mdx/readme.md:302:29    - Unknown word (mdast)        -- node types made by `mdast-util-mdx`, which have
packages/mdx/readme.md:302:52    - Unknown word (have)         -- mdast-util-mdx`, which have to be passed
packages/mdx/readme.md:302:63    - Unknown word (passed)       -- mdx`, which have to be passed
packages/mdx/readme.md:303:28    - Unknown word (mdast)        -- through untouched from the mdast tree to the hast tree
packages/mdx/readme.md:303:46    - Unknown word (hast)         -- the mdast tree to the hast tree (`Array<string
packages/mdx/readme.md:303:9     - Unknown word (untouched)    -- through untouched from the mdast tree
packages/mdx/readme.md:307:10    - Unknown word (compiled)     -- Run code compiled with `outputFormat:
packages/mdx/readme.md:309:8     - Unknown word (Danger)       -- > ☢️ **Danger**: this `eval`s JavaScript
packages/mdx/readme.md:320:14    - Unknown word (module)       -- Promise to a module ([`Promise<MDXModule
packages/mdx/readme.md:320:35    - Unknown word (Module)       -- module ([`Promise<MDXModule>` from
packages/mdx/readme.md:323:1     - Unknown word (anything)     -- anything else that was exported
packages/mdx/readme.md:323:24    - Unknown word (exported)     -- anything else that was exported is available too.
packages/mdx/readme.md:325:8     - Unknown word (Example)      -- ###### Example
packages/mdx/readme.md:333:37    - Unknown word (somehow)      -- code` to the client somehow.
packages/mdx/readme.md:342:50    - Unknown word (somehow)      -- get `code` from server somehow.
packages/mdx/readme.md:349:2     - Unknown word (yields)       -- …yields:
packages/mdx/readme.md:359:15    - Unknown word (please)       -- When possible please use the async [`run
packages/mdx/readme.md:359:6     - Unknown word (possible)     -- When possible please use the async
packages/mdx/readme.md:361:8     - Unknown word (Danger)       -- > ☢️ **Danger**: this `eval`s JavaScript
packages/mdx/readme.md:372:1     - Unknown word (Module)       -- Module ([`MDXModule` from
packages/mdx/readme.md:378:25    - Unknown word (same)         -- CompileOptions` is the same as [`ProcessorOptions
packages/mdx/readme.md:379:10    - Unknown word (exception)    -- with the exception that the `format` option
packages/mdx/readme.md:379:45    - Unknown word (supports)     -- the `format` option supports a `'detect'` value,
packages/mdx/readme.md:381:23    - Unknown word (means)        -- The `'detect'` format means to use `'md'` for files
packages/mdx/readme.md:382:28    - Unknown word (otherwise)    -- mdExtensions` and `'mdx'` otherwise.
packages/mdx/readme.md:394:38    - Unknown word (null)         -- detect' | 'md' | 'mdx' | null | undefined
packages/mdx/readme.md:394:45    - Unknown word (undefined)    -- md' | 'mdx' | null | undefined
packages/mdx/readme.md:39:4      - Unknown word (Architecture) -- * [Architecture](#architecture)
packages/mdx/readme.md:402:26    - Unknown word (same)         -- EvaluateOptions` is the same as [`CompileOptions
packages/mdx/readme.md:403:1     - Unknown word (except)       -- except that the options `baseUrl
packages/mdx/readme.md:404:34    - Unknown word (Frag)         -- tputFormat`, `pragma`, `pragmaFrag`, `pragmaImportSource
packages/mdx/readme.md:406:37    - Unknown word (also)         -- api-run-options] are also used.
packages/mdx/readme.md:416:36    - Unknown word (also)         -- / Note that this is also in `RunOptions`.
packages/mdx/readme.md:422:12    - Unknown word (Frag)         -- | 'pragmaFrag'
packages/mdx/readme.md:42:4      - Unknown word (Contribute)   -- * [Contribute](#contribute)
packages/mdx/readme.md:431:1     - Unknown word (Represent)    -- Represent the children, typically
packages/mdx/readme.md:431:25    - Unknown word (typically)    -- Represent the children, typically a symbol (TypeScript
packages/mdx/readme.md:431:37    - Unknown word (symbol)       -- children, typically a symbol (TypeScript type).
packages/mdx/readme.md:436:17    - Unknown word (unknown)      -- type Fragment = unknown
packages/mdx/readme.md:441:10    - Unknown word (production)   -- Create a production element (TypeScript
packages/mdx/readme.md:445:12    - Unknown word (unknown)      -- * `type` (`unknown`)
packages/mdx/readme.md:446:30    - Unknown word (symbol)       -- element type: `Fragment` symbol, tag name (`string`
packages/mdx/readme.md:449:23    - Unknown word (undefined)    -- `key` (`string` or `undefined`)
packages/mdx/readme.md:454:14    - Unknown word (your)         -- Element from your framework (`JSX.Element
packages/mdx/readme.md:45:4      - Unknown word (What)         -- ## What is this?
packages/mdx/readme.md:462:12    - Unknown word (unknown)      -- * `type` (`unknown`)
packages/mdx/readme.md:463:30    - Unknown word (symbol)       -- element type: `Fragment` symbol, tag name (`string`
packages/mdx/readme.md:466:23    - Unknown word (undefined)    -- `key` (`string` or `undefined`)
packages/mdx/readme.md:469:20    - Unknown word (more)         -- — whether two or more children are passed
packages/mdx/readme.md:469:38    - Unknown word (passed)       -- or more children are passed (in an array), which
packages/mdx/readme.md:469:5     - Unknown word (whether)      -- — whether two or more children
packages/mdx/readme.md:469:69    - Unknown word (whether)      -- an array), which is whether
packages/mdx/readme.md:470:19    - Unknown word (would)        -- `jsxs` or `jsx` would be used
packages/mdx/readme.md:470:4     - Unknown word (jsxs)         -- `jsxs` or `jsx` would be used
packages/mdx/readme.md:472:10    - Unknown word (about)        -- — info about source
packages/mdx/readme.md:473:12    - Unknown word (unknown)     -- * `self` (`unknown`)
packages/mdx/readme.md:473:4     - Unknown word (self)        -- * `self` (`unknown`)
packages/mdx/readme.md:47:28     - Unknown word (that)         -- package is a compiler that turns MDX into JavaScript
packages/mdx/readme.md:47:33     - Unknown word (turns)        -- package is a compiler that turns MDX into JavaScript
packages/mdx/readme.md:483:3     - Unknown word (optional)    -- optional)
packages/mdx/readme.md:484:62    - Unknown word (resulting)   -- the `map` field on the resulting file
packages/mdx/readme.md:486:21    - Unknown word (Expand)      -- <details><summary>Expand example</summary>
packages/mdx/readme.md:488:3     - Unknown word (Assuming)    -- Assuming `example.mdx` from
packages/mdx/readme.md:48:8      - Unknown word (also)         -- It can also evaluate MDX code.
packages/mdx/readme.md:491:27    - Unknown word (promises)    -- import fs from 'node:fs/promises'
packages/mdx/readme.md:503:4     - Unknown word (yields)      -- …yields:
packages/mdx/readme.md:508:24    - Unknown word (QAAQ)        -- mappings: ';;aAAaA,QAAQ;YAAQ;;;;;;;;iBAE3B'
packages/mdx/readme.md:508:29    - Unknown word (YAAQ)        -- mappings: ';;aAAaA,QAAQ;YAAQ;;;;;;;;iBAE3B',
packages/mdx/readme.md:517:33    - Unknown word (optional)    -- (`URL` or `string`, optional, example: `import.meta
packages/mdx/readme.md:519:19    - Unknown word (relative)    -- `export … from` relative to it
packages/mdx/readme.md:521:21    - Unknown word (Expand)      -- <details><summary>Expand example</summary>
packages/mdx/readme.md:523:10    - Unknown word (have)        -- Say we have a module `example.js
packages/mdx/readme.md:523:17    - Unknown word (module)      -- Say we have a module `example.js`:
packages/mdx/readme.md:529:43    - Unknown word (Typically)   -- https://a.full/url' // Typically `import.meta.url`
packages/mdx/readme.md:52:31     - Unknown word (turning)      -- the core compiler for turning MDX into JavaScript
packages/mdx/readme.md:52:65     - Unknown word (gives)        -- into JavaScript which gives you the
packages/mdx/readme.md:534:34    - Unknown word (yields)      -- running `node example.js` yields:
packages/mdx/readme.md:53:1      - Unknown word (most)         -- most control.
packages/mdx/readme.md:545:39    - Unknown word (false)       -- boolean`, default: `false`)
packages/mdx/readme.md:546:5     - Unknown word (whether)     -- — whether to add extra info to
packages/mdx/readme.md:546:52    - Unknown word (generated)   -- to error messages in generated code and use the
packages/mdx/readme.md:549:26    - Unknown word (loader)      -- when using the webpack loader (`@mdx-js/loader`) or
packages/mdx/readme.md:549:43    - Unknown word (loader)      -- webpack loader (`@mdx-js/loader`) or the Rollup integration
packages/mdx/readme.md:549:8     - Unknown word (using)       -- when using the webpack loader
packages/mdx/readme.md:54:11     - Unknown word (using)        -- If you’re using a bundler (Rollup, esbuild
packages/mdx/readme.md:54:57     - Unknown word (site)         -- esbuild, webpack), a site builder (Next.js),
packages/mdx/readme.md:550:44    - Unknown word (automatically) -- through Vite, this is automatically inferred from how
packages/mdx/readme.md:550:58    - Unknown word (inferred)      -- this is automatically inferred from how
packages/mdx/readme.md:551:17    - Unknown word (those)         -- you configure those tools
packages/mdx/readme.md:553:21    - Unknown word (Expand)        -- <details><summary>Expand example</summary>
packages/mdx/readme.md:555:14    - Unknown word (some)          -- Say we had some MDX that references
packages/mdx/readme.md:555:63    - Unknown word (passed)        -- component that can be passed or
packages/mdx/readme.md:556:3     - Unknown word (provided)      -- provided at runtime:
packages/mdx/readme.md:559:16    - Unknown word (Icon)          -- **Note**<NoteIcon />: some stuff.
packages/mdx/readme.md:559:25    - Unknown word (some)          -- Note**<NoteIcon />: some stuff.
packages/mdx/readme.md:55:30     - Unknown word (comes)        -- system (Vite) which comes with a bundler, you
packages/mdx/readme.md:55:59     - Unknown word (better)       -- with a bundler, you’re better off using an
packages/mdx/readme.md:55:70     - Unknown word (using)        -- bundler, you’re better off using an
packages/mdx/readme.md:562:9     - Unknown word (module)        -- And a module to evaluate that:
packages/mdx/readme.md:565:27    - Unknown word (promises)      -- import fs from 'node:fs/promises'
packages/mdx/readme.md:56:21     - Unknown word (Integrations) -- integration: see [§ Integrations][integrations].
packages/mdx/readme.md:576:17    - Unknown word (would)         -- …running that would normally (production
packages/mdx/readme.md:576:23    - Unknown word (normally)      -- …running that would normally (production) yield:
packages/mdx/readme.md:576:33    - Unknown word (production)    -- that would normally (production) yield:
packages/mdx/readme.md:576:45    - Unknown word (yield)         -- normally (production) yield:
packages/mdx/readme.md:579:10    - Unknown word (Expected)      -- Error: Expected component `NoteIcon
packages/mdx/readme.md:579:34    - Unknown word (Icon)          -- Expected component `NoteIcon` to be defined: you
packages/mdx/readme.md:579:59    - Unknown word (likely)        -- to be defined: you likely forgot to import, pass
packages/mdx/readme.md:579:93    - Unknown word (provide)       -- to import, pass, or provide it.
packages/mdx/readme.md:580:79    - Unknown word (anonymous)     -- lib/run.js:18:10), <anonymous>:27:9)
packages/mdx/readme.md:581:76    - Unknown word (anonymous)     -- lib/run.js:18:10), <anonymous>:15:20)
packages/mdx/readme.md:582:69    - Unknown word (anonymous)     -- lib/run.js:18:10), <anonymous>:9:9)
packages/mdx/readme.md:586:32    - Unknown word (true)          -- we add `development: true` to our example:
packages/mdx/readme.md:590:27    - Unknown word (promises)      -- import fs from 'node:fs/promises'
packages/mdx/readme.md:598:68    - Unknown word (true)          -- value}, {development: true, ...runtime, baseUrl
packages/mdx/readme.md:5:4       - Unknown word (Downloads)  -- [![Downloads][downloads-badge]][downloads
packages/mdx/readme.md:603:20    - Unknown word (again)         -- …and we’d run it again, we’d get:
packages/mdx/readme.md:606:10    - Unknown word (Expected)      -- Error: Expected component `NoteIcon
packages/mdx/readme.md:606:34    - Unknown word (Icon)          -- Expected component `NoteIcon` to be defined: you
packages/mdx/readme.md:606:59    - Unknown word (likely)        -- to be defined: you likely forgot to import, pass
packages/mdx/readme.md:606:93    - Unknown word (provide)       -- to import, pass, or provide it.
packages/mdx/readme.md:607:22    - Unknown word (your)          -- It’s referenced in your code at `1:9-1:21` in
packages/mdx/readme.md:607:8     - Unknown word (referenced)    -- It’s referenced in your code at `1:
packages/mdx/readme.md:608:3     - Unknown word (provide)       -- provide it.
packages/mdx/readme.md:609:79    - Unknown word (anonymous)     -- lib/run.js:18:10), <anonymous>:27:9)
packages/mdx/readme.md:610:76    - Unknown word (anonymous)     -- lib/run.js:18:10), <anonymous>:15:20)
packages/mdx/readme.md:618:5     - Unknown word (casing)        -- — casing to use for attribute
packages/mdx/readme.md:619:8     - Unknown word (casing)        -- HTML casing is for example `class
packages/mdx/readme.md:620:9     - Unknown word (casing)        -- React casing is for example `className
packages/mdx/readme.md:621:22    - Unknown word (written)       -- for JSX components written in MDX, the author has
packages/mdx/readme.md:621:59    - Unknown word (aware)         -- the author has to be aware of which
packages/mdx/readme.md:622:13    - Unknown word (they)          -- framework they use and write code accordingl
packages/mdx/readme.md:622:37    - Unknown word (accordingly)   -- they use and write code accordingly;
packages/mdx/readme.md:623:17    - Unknown word (generated)     -- for AST nodes generated by this project, this
packages/mdx/readme.md:623:56    - Unknown word (configures)    -- project, this option configures it
packages/mdx/readme.md:627:10    - Unknown word (means)         -- `'md'` means treat as markdown and
packages/mdx/readme.md:627:16    - Unknown word (treat)         -- `'md'` means treat as markdown and `'mdx
packages/mdx/readme.md:627:46    - Unknown word (means)         -- markdown and `'mdx'` means treat as [MDX][mdx-syntax
packages/mdx/readme.md:627:52    - Unknown word (treat)         -- markdown and `'mdx'` means treat as [MDX][mdx-syntax
packages/mdx/readme.md:629:21    - Unknown word (Expand)        -- <details><summary>Expand example</summary>
packages/mdx/readme.md:632:19    - Unknown word (Seen)          -- compile('…') // Seen as MDX.
packages/mdx/readme.md:633:36    - Unknown word (Seen)          -- {format: 'mdx'}) // Seen as MDX.
packages/mdx/readme.md:634:35    - Unknown word (Seen)          -- {format: 'md'}) // Seen as markdown.
packages/mdx/readme.md:639:31    - Unknown word (false)         -- boolean`, default: `false`)
packages/mdx/readme.md:640:16    - Unknown word (keep)          -- — whether to keep JSX;
packages/mdx/readme.md:640:5     - Unknown word (whether)       -- — whether to keep JSX;
packages/mdx/readme.md:641:33    - Unknown word (away)          -- default is to compile JSX away so that the resulting
packages/mdx/readme.md:641:50    - Unknown word (resulting)     -- JSX away so that the resulting file is
packages/mdx/readme.md:642:3     - Unknown word (immediately)   -- immediately runnable.
packages/mdx/readme.md:644:21    - Unknown word (Expand)        -- <details><summary>Expand example</summary>
packages/mdx/readme.md:649:23    - Unknown word (true)          -- compile(file, {jsx: true})
packages/mdx/readme.md:652:16    - Unknown word (difference)    -- …yields this difference:
packages/mdx/readme.md:652:4     - Unknown word (yields)        -- …yields this difference:
packages/mdx/readme.md:655:48    - Unknown word (jsxs)          -- Fragment, jsx as _jsx, jsxs as _jsxs} from 'react
packages/mdx/readme.md:674:12    - Unknown word (wrapper)       -- const {wrapper: MDXLayout} = props
packages/mdx/readme.md:674:24    - Unknown word (Layout)        -- const {wrapper: MDXLayout} = props.components
packages/mdx/readme.md:675:15    - Unknown word (Layout)        -- return MDXLayout
packages/mdx/readme.md:689:5     - Unknown word (place)         -- — place to import automatic
packages/mdx/readme.md:701:16    - Unknown word (difference)    -- …yields this difference:
packages/mdx/readme.md:712:25    - Unknown word (compiles)      -- the automatic runtime compiles to `import _jsx from
packages/mdx/readme.md:714:23    - Unknown word (compiles)      -- the classic runtime compiles to calls such as `h
packages/mdx/readme.md:714:35    - Unknown word (calls)         -- runtime compiles to calls such as `h('p')`
packages/mdx/readme.md:714:41    - Unknown word (such)          -- runtime compiles to calls such as `h('p')`
packages/mdx/readme.md:716:53    - Unknown word (deprecated)    -- the classic runtime is deprecated and will
packages/mdx/readme.md:716:68    - Unknown word (will)          -- runtime is deprecated and will
packages/mdx/readme.md:717:15    - Unknown word (removed)       -- > likely be removed in the next major version
packages/mdx/readme.md:717:35    - Unknown word (major)         -- removed in the next major version.
packages/mdx/readme.md:717:5     - Unknown word (likely)        -- > likely be removed in the next
packages/mdx/readme.md:727:16    - Unknown word (difference)    -- …yields this difference:
packages/mdx/readme.md:735:49    - Unknown word (null)          -- createElement(React.Fragment, null, 'World!')
packages/mdx/readme.md:73:4      - Unknown word (browsers)     -- In browsers with [`esm.sh`][esmsh
packages/mdx/readme.md:742:42    - Unknown word (program)       -- function-body'` or `'program'`, default: `'program
packages/mdx/readme.md:742:64    - Unknown word (program)       -- program'`, default: `'program'`)
packages/mdx/readme.md:744:11    - Unknown word (cases)        -- in most cases `'program'` should be
packages/mdx/readme.md:744:19    - Unknown word (program)      -- in most cases `'program'` should be used, it
packages/mdx/readme.md:744:6     - Unknown word (most)         -- in most cases `'program'` should
packages/mdx/readme.md:744:67    - Unknown word (program)      -- it results in a whole program;
packages/mdx/readme.md:745:3     - Unknown word (internally)   -- internally [`evaluate`][api-evaluate
packages/mdx/readme.md:745:41    - Unknown word (uses)         -- evaluate`][api-evaluate] uses `'function-body'` to
packages/mdx/readme.md:746:20    - Unknown word (passed)       -- code that can be passed to [`run`][api-run]
packages/mdx/readme.md:747:11    - Unknown word (cases)        -- in some cases, you might want what
packages/mdx/readme.md:747:22    - Unknown word (might)        -- in some cases, you might want what `evaluate
packages/mdx/readme.md:747:28    - Unknown word (want)         -- some cases, you might want what `evaluate` does
packages/mdx/readme.md:747:33    - Unknown word (what)         -- cases, you might want what `evaluate` does in separate
packages/mdx/readme.md:747:49    - Unknown word (does)         -- want what `evaluate` does in separate steps, such
packages/mdx/readme.md:747:57    - Unknown word (separate)     -- what `evaluate` does in separate steps, such
packages/mdx/readme.md:747:6     - Unknown word (some)         -- in some cases, you might want
packages/mdx/readme.md:747:73    - Unknown word (such)         -- does in separate steps, such
packages/mdx/readme.md:748:11    - Unknown word (compiling)    -- as when compiling on the server and running
packages/mdx/readme.md:759:58    - Unknown word (program)      -- code, {outputFormat: 'program'}))) // Default.
packages/mdx/readme.md:76:15     - Unknown word (module)       -- <script type="module">
packages/mdx/readme.md:773:8     - Unknown word (strict)       -- 'use strict'
packages/mdx/readme.md:774:44    - Unknown word (arguments)    -- Fragment, jsx: _jsx} = arguments[0]
packages/mdx/readme.md:781:26    - Unknown word (will)         -- The `'program'` format will use import statements
packages/mdx/readme.md:781:42    - Unknown word (statements)   -- format will use import statements to import the runtime
packages/mdx/readme.md:782:3     - Unknown word (optionally)   -- optionally provider) and use an
packages/mdx/readme.md:782:55    - Unknown word (yield)        -- export statement to yield the `MDXContent`
packages/mdx/readme.md:785:32    - Unknown word (will)         -- function-body'` format will get the runtime (and
packages/mdx/readme.md:785:58    - Unknown word (optionally)   -- get the runtime (and optionally provider)
packages/mdx/readme.md:786:24    - Unknown word (rewrite)      -- from `arguments[0]`, rewrite export statements, and
packages/mdx/readme.md:786:39    - Unknown word (statements)   -- 0]`, rewrite export statements, and use a return statement
packages/mdx/readme.md:786:9     - Unknown word (arguments)    -- from `arguments[0]`, rewrite export
packages/mdx/readme.md:787:18    - Unknown word (exported)     -- yield what was exported.
packages/mdx/readme.md:787:3     - Unknown word (yield)        -- yield what was exported.
packages/mdx/readme.md:787:9     - Unknown word (what)         -- yield what was exported.
packages/mdx/readme.md:791:69    - Unknown word (mdown)        -- md', '.markdown', '.mdown',
packages/mdx/readme.md:792:22    - Unknown word (mdwn)         -- '.mkdn', '.mkd', '.mdwn', '.mkdown', '.ron'
packages/mdx/readme.md:792:31    - Unknown word (mkdown)       -- '.mkd', '.mdwn', '.mkdown', '.ron']`)
packages/mdx/readme.md:792:5     - Unknown word (mkdn)         -- '.mkdn', '.mkd', '.mdwn',
packages/mdx/readme.md:794:14    - Unknown word (Integrations) -- affects [§ Integrations][integrations]
packages/mdx/readme.md:794:3     - Unknown word (affects)      -- affects [§ Integrations][integrations
packages/mdx/readme.md:798:14    - Unknown word (Integrations) -- affects [§ Integrations][integrations]
packages/mdx/readme.md:798:3     - Unknown word (affects)      -- affects [§ Integrations][integrations
packages/mdx/readme.md:7:4       - Unknown word (Sponsors)   -- [![Sponsors][sponsors-badge]][collective
packages/mdx/readme.md:802:3     - Unknown word (calls)        -- calls: `<x />` to `React.createElem
packages/mdx/readme.md:803:34    - Unknown word (also)         -- changing this, you should also define `pragmaFrag`
packages/mdx/readme.md:803:53    - Unknown word (Frag)         -- should also define `pragmaFrag` and
packages/mdx/readme.md:803:8     - Unknown word (changing)     -- when changing this, you should also
packages/mdx/readme.md:806:53    - Unknown word (deprecated)   -- the classic runtime is deprecated and will
packages/mdx/readme.md:806:68    - Unknown word (will)         -- runtime is deprecated and will
packages/mdx/readme.md:807:15    - Unknown word (removed)      -- > likely be removed in the next major version
packages/mdx/readme.md:807:35    - Unknown word (major)        -- removed in the next major version.
packages/mdx/readme.md:807:5     - Unknown word (likely)       -- > likely be removed in the next
packages/mdx/readme.md:817:11    - Unknown word (Frag)         -- pragmaFrag: 'preact.Fragment',
packages/mdx/readme.md:822:16    - Unknown word (difference)   -- …yields this difference:
packages/mdx/readme.md:829:49    - Unknown word (null)         -- createElement(React.Fragment, null, 'World!')
packages/mdx/readme.md:830:51    - Unknown word (null)         -- reateElement(preact.Fragment, null, 'World!')
packages/mdx/readme.md:837:10    - Unknown word (Frag)         -- * `pragmaFrag` (`string`, default
packages/mdx/readme.md:838:25    - Unknown word (symbol)       -- pragma for fragment symbol, used in the classic
packages/mdx/readme.md:839:15    - Unknown word (calls)        -- for unnamed calls: `<>` to `React.createElement
packages/mdx/readme.md:839:7     - Unknown word (unnamed)      -- for unnamed calls: `<>` to `React
packages/mdx/readme.md:83:31     - Unknown word (example)      -- have an MDX document, `example.mdx`:
packages/mdx/readme.md:83:8      - Unknown word (have)         -- Say we have an MDX document, `example
packages/mdx/readme.md:840:34    - Unknown word (also)         -- changing this, you should also define `pragma` and
packages/mdx/readme.md:840:8     - Unknown word (changing)     -- when changing this, you should also
packages/mdx/readme.md:843:53    - Unknown word (deprecated)   -- the classic runtime is deprecated and will
packages/mdx/readme.md:843:68    - Unknown word (will)         -- runtime is deprecated and will
packages/mdx/readme.md:844:15    - Unknown word (removed)      -- > likely be removed in the next major version
packages/mdx/readme.md:844:35    - Unknown word (major)        -- removed in the next major version.
packages/mdx/readme.md:844:5     - Unknown word (likely)       -- > likely be removed in the next
packages/mdx/readme.md:847:5     - Unknown word (where)        -- — where to import the identifier
packages/mdx/readme.md:849:6     - Unknown word (illustrate)   -- to illustrate, when `pragma` is `
packages/mdx/readme.md:850:25    - Unknown word (generated)    -- the following will be generated: `import a from 'c'
packages/mdx/readme.md:850:67    - Unknown word (such)         -- from 'c'` and things such as
packages/mdx/readme.md:850:7     - Unknown word (following)    -- the following will be generated:
packages/mdx/readme.md:852:8     - Unknown word (changing)     -- when changing this, you should also
packages/mdx/readme.md:854:53    - Unknown word (deprecated)   -- the classic runtime is deprecated and will
packages/mdx/readme.md:855:15    - Unknown word (removed)      -- > likely be removed in the next major version
packages/mdx/readme.md:855:35    - Unknown word (major)        -- removed in the next major version.
packages/mdx/readme.md:858:5     - Unknown word (place)        -- — place to import a provider
packages/mdx/readme.md:859:3     - Unknown word (normally)     -- normally it’s used for runtimes
packages/mdx/readme.md:860:21    - Unknown word (inject)       -- it can be used to inject components into the
packages/mdx/readme.md:860:48    - Unknown word (compiled)     -- components into the compiled code;
packages/mdx/readme.md:861:14    - Unknown word (must)         -- the module must export and identifier
packages/mdx/readme.md:861:69    - Unknown word (called)       -- useMDXComponents` which is called
packages/mdx/readme.md:862:11    - Unknown word (arguments)    -- without arguments to get an object of
packages/mdx/readme.md:873:16    - Unknown word (difference)   -- …yields this difference:
packages/mdx/readme.md:877:33    - Unknown word (provide)      -- useMDXComponents as _provideComponents} from '@mdx
packages/mdx/readme.md:886:12    - Unknown word (provide)      -- + ..._provideComponents(),
packages/mdx/readme.md:893:13    - Unknown word (wrapper)      -- - const {wrapper: MDXLayout} = props
packages/mdx/readme.md:894:13    - Unknown word (wrapper)      -- + const {wrapper: MDXLayout} = {
packages/mdx/readme.md:8:4       - Unknown word (Backers)    -- [![Backers][backers-badge]][collective
packages/mdx/readme.md:906:4     - Unknown word (recma)        -- * `recmaPlugins` ([`PluggableList
packages/mdx/readme.md:908:13    - Unknown word (recma)        -- — list of recma plugins;
packages/mdx/readme.md:909:17    - Unknown word (ecosystem)    -- this is a new ecosystem, currently in beta,
packages/mdx/readme.md:909:28    - Unknown word (currently)    -- is a new ecosystem, currently in beta, to transform
packages/mdx/readme.md:909:61    - Unknown word (esast)        -- beta, to transform [esast][] trees
packages/mdx/readme.md:915:10    - Unknown word (recma)        -- import recmaMdxIsMdxComponent from
packages/mdx/readme.md:915:39    - Unknown word (recma)        -- recmaMdxIsMdxComponent from 'recma-mdx-is-mdx-component
packages/mdx/readme.md:917:24    - Unknown word (recma)        -- await compile(file, {recmaPlugins: [recmaMdxIsMdxCompone
packages/mdx/readme.md:929:16    - Unknown word (Katex)        -- import rehypeKatex from 'rehype-katex'
packages/mdx/readme.md:930:56    - Unknown word (like)         -- math' // Support math like `$so$`.
packages/mdx/readme.md:932:46    - Unknown word (Katex)        -- rehypePlugins: [rehypeKatex], remarkPlugins: [remarkMath
packages/mdx/readme.md:936:28    - Unknown word (Katex)        -- rehypePlugins: [[rehypeKatex, {strict: true, throwOnError
packages/mdx/readme.md:936:36    - Unknown word (strict)       -- ehypePlugins: [[rehypeKatex, {strict: true, throwOnError
packages/mdx/readme.md:936:44    - Unknown word (true)         -- rehypeKatex, {strict: true, throwOnError: true
packages/mdx/readme.md:936:50    - Unknown word (throw)        -- rehypeKatex, {strict: true, throwOnError: true}]],
packages/mdx/readme.md:936:64    - Unknown word (true)         -- true, throwOnError: true}]],
packages/mdx/readme.md:93:20     - Unknown word (example)      -- …and some code in `example.js` to compile `example
packages/mdx/readme.md:93:44     - Unknown word (example)      -- example.js` to compile `example.mdx` to JavaScript:
packages/mdx/readme.md:93:6      - Unknown word (some)         -- …and some code in `example.js
packages/mdx/readme.md:950:16    - Unknown word (Frontmatter)  -- import remarkFrontmatter from 'remark-frontmatter
packages/mdx/readme.md:950:41    - Unknown word (frontmatter)  -- emarkFrontmatter from 'remark-frontmatter' // YAML and such.
packages/mdx/readme.md:950:66    - Unknown word (such)         -- frontmatter' // YAML and such.
packages/mdx/readme.md:951:49    - Unknown word (footnotes)    -- remark-gfm' // Tables, footnotes, strikethrough, task
packages/mdx/readme.md:951:60    - Unknown word (strikethrough) -- Tables, footnotes, strikethrough, task lists, literal
packages/mdx/readme.md:954:47    - Unknown word (Frontmatter)   -- remarkPlugins: [[remarkFrontmatter, 'toml']]}) // A plugin
packages/mdx/readme.md:955:57    - Unknown word (Frontmatter)   -- arkPlugins: [remarkGfm, remarkFrontmatter]}) // Two plugins.
packages/mdx/readme.md:956:66    - Unknown word (false)         -- remarkGfm, {singleTilde: false}], remarkFrontmatter
packages/mdx/readme.md:956:81    - Unknown word (Frontmatter)   -- singleTilde: false}], remarkFrontmatter]}) // Two plugins, first
packages/mdx/readme.md:964:20    - Unknown word (Dangerous)     -- the option `allowDangerousHtml` will always be
packages/mdx/readme.md:964:40    - Unknown word (always)        -- allowDangerousHtml` will always be set to `true` and
packages/mdx/readme.md:965:49    - Unknown word (passed)        -- api-node-types]) are passed through;
packages/mdx/readme.md:966:22    - Unknown word (might)         -- In particular, you might want to pass configuration
packages/mdx/readme.md:966:28    - Unknown word (want)          -- particular, you might want to pass configuration
packages/mdx/readme.md:966:59    - Unknown word (footnotes)     -- pass configuration for footnotes if your
packages/mdx/readme.md:966:6     - Unknown word (particular)    -- In particular, you might want to pass
packages/mdx/readme.md:966:72    - Unknown word (your)          -- onfiguration for footnotes if your
packages/mdx/readme.md:967:21    - Unknown word (English)       -- content is not in English
packages/mdx/readme.md:96:25     - Unknown word (promises)     -- import fs from 'node:fs/promises'
packages/mdx/readme.md:972:48    - Unknown word (clobber)       -- remarkRehypeOptions: {clobberPrefix: 'comment-1'}
packages/mdx/readme.md:978:5     - Unknown word (casing)        -- — casing to use for property
packages/mdx/readme.md:979:66    - Unknown word (clamp)         -- color` and `-webkit-line-clamp`;
packages/mdx/readme.md:979:7     - Unknown word (casing)        -- CSS casing is for example `background
packages/mdx/readme.md:980:62    - Unknown word (Clamp)         -- ckgroundColor` and `WebkitLineClamp`;
packages/mdx/readme.md:981:22    - Unknown word (written)       -- for JSX components written in MDX, the author has
packages/mdx/readme.md:981:59    - Unknown word (aware)         -- the author has to be aware of which
packages/mdx/readme.md:982:13    - Unknown word (they)          -- framework they use and write code accordingl
packages/mdx/readme.md:982:37    - Unknown word (accordingly)   -- they use and write code accordingly;
packages/mdx/readme.md:983:17    - Unknown word (generated)     -- for AST nodes generated by this project, this
packages/mdx/readme.md:983:56    - Unknown word (configures)    -- project, this option configures it
packages/mdx/readme.md:986:10    - Unknown word (obsolete)      -- — turn obsolete `align` properties on
packages/mdx/readme.md:986:5     - Unknown word (turn)          -- — turn obsolete `align` properties
packages/mdx/readme.md:993:69    - Unknown word (production)    -- code is compiled in production
packages/mdx/readme.md:994:1     - Unknown word (mode)          -- mode (`development: false
packages/mdx/readme.md:994:21    - Unknown word (false)         -- mode (`development: false`).
packages/mdx/readme.md:995:63    - Unknown word (mode)          -- compiled in development mode
packages/mdx/readme.md:998:34    - Unknown word (exact)         -- oviderImportSource: '#'` (the exact value of this compile
packages/mdx/readme.md:998:69    - Unknown word (doesn’t)       -- this compile option doesn’t
packages/mdx/readme.md:999:1     - Unknown word (matter)        -- matter).
packages/mdx/readme.md:99:18     - Unknown word (await)        -- const compiled = await compile(await fs.readFile
packages/mdx/readme.md:99:32     - Unknown word (await)        -- compiled = await compile(await fs.readFile('example
packages/mdx/readme.md:99:51     - Unknown word (example)      -- compile(await fs.readFile('example.mdx'))
packages/mdx/readme.md:99:7      - Unknown word (compiled)     -- const compiled = await compile(await
packages/mdx/readme.md:9:4       - Unknown word (Chat)       -- [![Chat][chat-badge]][chat]
packages/mdx/test/compile.js:1029:40   - Unknown word (responding)    -- component suspended while responding to synchronous input
packages/mdx/test/compile.js:1071:13   - Unknown word (sure)          -- // Make sure to run tests w/ `--enable
packages/mdx/test/compile.js:1089:19   - Unknown word (bare)          -- 'should leave bare specifiers untouched
packages/mdx/test/compile.js:1089:24   - Unknown word (specifiers)    -- 'should leave bare specifiers untouched w/ `baseUrl
packages/mdx/test/compile.js:1089:35   - Unknown word (untouched)     -- leave bare specifiers untouched w/ `baseUrl`',
packages/mdx/test/compile.js:1103:27   - Unknown word (specifiers)    -- should leave URLs as specifiers untouched w/ `baseUrl
packages/mdx/test/compile.js:1103:38   - Unknown word (untouched)     -- leave URLs as specifiers untouched w/ `baseUrl`',
packages/mdx/test/compile.js:1116:30   - Unknown word (specifiers)    -- should resolve relative specifiers w/ `baseUrl`',
packages/mdx/test/compile.js:1118:53   - Unknown word (would)         -- inside `context/`, so it would normally have to be
packages/mdx/test/compile.js:1118:59   - Unknown word (normally)      -- context/`, so it would normally have to be `./data.js
packages/mdx/test/compile.js:1119:14   - Unknown word (because)       -- // But because we rewrite relative
packages/mdx/test/compile.js:1119:25   - Unknown word (rewrite)       -- // But because we rewrite relative to this file
packages/mdx/test/compile.js:1131:16   - Unknown word (above)         -- // Same as above but uses a URL.
packages/mdx/test/compile.js:1142:21   - Unknown word (importing)     -- 'should support importing dynamic expressions
packages/mdx/test/compile.js:1144:18   - Unknown word (above)         -- // Same as above but uses a URL.
packages/mdx/test/compile.js:1177:19   - Unknown word (wrapper)       -- ' const {wrapper: MDXLayout} = props
packages/mdx/test/compile.js:121:20    - Unknown word (Mdast)      -- * @returns {MdastRoot}
packages/mdx/test/compile.js:1222:117  - Unknown word (likely)        -- to be defined: you likely forgot to import, pass
packages/mdx/test/compile.js:1270:32   - Unknown word (using)         -- test('should support using props', async function
packages/mdx/test/compile.js:1293:68   - Unknown word (there)         -- for `MDXLayout` when there is an internal layout
packages/mdx/test/compile.js:1360:17   - Unknown word (inject)        -- 'should not inject a provider for JSX in
packages/mdx/test/compile.js:1402:17   - Unknown word (inject)        -- 'should not inject a provider for JSX in
packages/mdx/test/compile.js:1406:46   - Unknown word (also)          -- { <span /> }\n\nAnd also { <div /> }.', {
packages/mdx/test/compile.js:1411:56   - Unknown word (jsxs)          -- Fragment, jsx as _jsx, jsxs as _jsxs} from "react
packages/mdx/test/compile.js:1411:65   - Unknown word (jsxs)          -- jsx as _jsx, jsxs as _jsxs} from "react/jsx-runtime
packages/mdx/test/compile.js:1419:22   - Unknown word (jsxs)          -- ' return _jsxs(_Fragment, {',
packages/mdx/test/compile.js:1420:53   - Unknown word (jsxs)          -- span", {}), "\\n", _jsxs(_components.p, {',
packages/mdx/test/compile.js:1421:34   - Unknown word (also)          -- children: ["And also ", _jsx("div", {}),
packages/mdx/test/compile.js:1448:16   - Unknown word (quot)          -- /x="y &quot; z"/
packages/mdx/test/compile.js:14:23     - Unknown word (Markup)     -- import {renderToStaticMarkup} from 'react-dom/server
packages/mdx/test/compile.js:156:45    - Unknown word (representable) -- document (rehype, non-representable)',
packages/mdx/test/compile.js:1599:46   - Unknown word (handles)       -- error: check how runtime handles an incorrect `format
packages/mdx/test/compile.js:1601:9    - Unknown word (Unexpected)    -- }, /Unexpected `format: 'detect'`/
packages/mdx/test/compile.js:26:52     - Unknown word (handles)    -- check how the runtime handles a removed option.
packages/mdx/test/compile.js:29:38     - Unknown word (Unexpected) -- match(String(error), /Unexpected removed option `filepath
packages/mdx/test/compile.js:2:43      - Unknown word (hast)       -- Element, Root} from 'hast'
packages/mdx/test/compile.js:314:21    - Unknown word (passing)       -- 'should support passing in `components` to
packages/mdx/test/compile.js:336:21    - Unknown word (passing)       -- 'should support passing in `components` (for
packages/mdx/test/compile.js:35:18     - Unknown word (about)      -- 'should warn about the deprecated classic
packages/mdx/test/compile.js:361:21    - Unknown word (passing)       -- 'should support passing in `components` directly
packages/mdx/test/compile.js:361:45    - Unknown word (directly)      -- passing in `components` directly and as an object w/
packages/mdx/test/compile.js:398:21    - Unknown word (overwriting)   -- 'should support overwriting components by passing
packages/mdx/test/compile.js:398:47    - Unknown word (passing)       -- overwriting components by passing them to `MDXContent
packages/mdx/test/compile.js:398:55    - Unknown word (them)          -- components by passing them to `MDXContent`',
packages/mdx/test/compile.js:3:21      - Unknown word (Mdast)      -- * @import {Root as MdastRoot} from 'mdast'
packages/mdx/test/compile.js:3:38      - Unknown word (mdast)      -- as MdastRoot} from 'mdast'
packages/mdx/test/compile.js:417:27    - Unknown word (overwriting)   -- should *not* support overwriting components in exports
packages/mdx/test/compile.js:44:23     - Unknown word (Markup)     -- renderToStaticMarkup(
packages/mdx/test/compile.js:457:21    - Unknown word (provided)      -- 'should support provided components in exported
packages/mdx/test/compile.js:485:21    - Unknown word (provided)      -- 'should support provided components in exported
packages/mdx/test/compile.js:532:21    - Unknown word (provided)      -- 'should support provided component objects in
packages/mdx/test/compile.js:53:10     - Unknown word (Unexpected) -- "Unexpected deprecated option `jsxRuntime
packages/mdx/test/compile.js:53:161    - Unknown word (migrate)    -- migrating/v3/> on how to migrate"
packages/mdx/test/compile.js:566:43    - Unknown word (passing)       -- setting the layout by passing it (as `wrapper`) to
packages/mdx/test/compile.js:566:59    - Unknown word (wrapper)       -- layout by passing it (as `wrapper`) to `MDXContent`',
packages/mdx/test/compile.js:576:15    - Unknown word (wrapper)       -- wrapper(properties) {
packages/mdx/test/compile.js:607:27    - Unknown word (overwriting)   -- should *not* support overwriting the layout by passing
packages/mdx/test/compile.js:607:70    - Unknown word (wrapper)       -- by passing one (as `wrapper`) to `MDXContent`',
packages/mdx/test/compile.js:623:17    - Unknown word (wrapper)       -- wrapper(properties) {
packages/mdx/test/compile.js:636:47    - Unknown word (layouts)       -- not* support multiple layouts (1)', async function
packages/mdx/test/compile.js:645:10    - Unknown word (Unexpected)    -- /Unexpected duplicate layout, expected
packages/mdx/test/compile.js:650:47    - Unknown word (layouts)       -- not* support multiple layouts (2)', async function
packages/mdx/test/compile.js:659:10    - Unknown word (Unexpected)    -- /Unexpected duplicate layout, expected
packages/mdx/test/compile.js:698:51    - Unknown word (locally)       -- member is not defined locally',
packages/mdx/test/compile.js:69:21     - Unknown word (Markup)     -- renderToStaticMarkup(
packages/mdx/test/compile.js:712:51    - Unknown word (locally)       -- member is not defined locally (JSX in a function)
packages/mdx/test/compile.js:727:48    - Unknown word (locally)       -- used member is defined locally (JSX in a function)
packages/mdx/test/compile.js:742:13    - Unknown word (expose)        -- 'should expose source information in
packages/mdx/test/compile.js:751:26    - Unknown word (removes)       -- // To do: React 19 removes this, figure out a way
packages/mdx/test/compile.js:751:73    - Unknown word (still)         -- way to test if this still works?
packages/mdx/test/compile.js:761:18    - Unknown word (more)          -- 'should pass more info to errors w/ `developmen
packages/mdx/test/compile.js:769:30    - Unknown word (your)          -- /It’s referenced in your code at `1:1-1:6/)
packages/mdx/test/compile.js:787:30    - Unknown word (your)          -- /It’s referenced in your code at `1:5-1:12` in
packages/mdx/test/compile.js:78:21     - Unknown word (Markup)     -- renderToStaticMarkup(
packages/mdx/test/compile.js:90:23     - Unknown word (Markup)     -- renderToStaticMarkup(
packages/mdx/test/compile.js:928:21    - Unknown word (injected)      -- 'should support injected MDX nodes w/ `rehype
packages/mdx/test/compile.js:944:20    - Unknown word (Mdast)         -- * @param {MdastRoot} tree
packages/mdx/test/compile.js:951:20    - Unknown word (mdxjs)         -- type: 'mdxjsEsm',
packages/mdx/test/compile.js:980:61    - Unknown word (identifiers)   -- not valid JavaScript identifiers with layouts (GH-21
packages/mdx/test/compile.js:980:78    - Unknown word (layouts)       -- JavaScript identifiers with layouts (GH-2112)',
packages/mdx/test/context/components.js:13:17     - Unknown word (Pill)       -- export function Pill(properties) {
packages/mdx/test/context/run.js:27:21     - Unknown word (fixture)    -- const fileName = 'fixture-' + Math.random() +
packages/mdx/test/core.js:5:24      - Unknown word (expose)     -- await t.test('should expose the public api', async
packages/mdx/test/evaluate.js:103:12    - Unknown word (Unexpected) -- /Unexpected missing `options.baseUrl
packages/mdx/test/evaluate.js:110:40    - Unknown word (using)      -- a runtime error when using `export … from` w/o
packages/mdx/test/evaluate.js:119:12    - Unknown word (Unexpected) -- /Unexpected missing `options.baseUrl
packages/mdx/test/evaluate.js:126:40    - Unknown word (using)      -- a runtime error when using `export … from` w/o
packages/mdx/test/evaluate.js:135:12    - Unknown word (Unexpected) -- /Unexpected missing `options.baseUrl
packages/mdx/test/evaluate.js:13:50     - Unknown word (handles)    -- check how the runtime handles missing options.
packages/mdx/test/evaluate.js:174:37    - Unknown word (specifiers) -- support an `import` w/o specifiers w/o `baseUrl` (expecting
packages/mdx/test/evaluate.js:174:63    - Unknown word (expecting)  -- specifiers w/o `baseUrl` (expecting it at runtime)',
packages/mdx/test/evaluate.js:188:38    - Unknown word (specifiers) -- support an `import` w/ 0 specifiers w/o `baseUrl` (expecting
packages/mdx/test/evaluate.js:188:64    - Unknown word (expecting)  -- specifiers w/o `baseUrl` (expecting it at runtime)',
packages/mdx/test/evaluate.js:205:61    - Unknown word (Pill)       -- components.js"\n\n<x.Pill>Hi!</x.Pill>',
packages/mdx/test/evaluate.js:205:73    - Unknown word (Pill)       -- js"\n\n<x.Pill>Hi!</x.Pill>',
packages/mdx/test/evaluate.js:217:46    - Unknown word (bare)       -- namespace import and a bare specifier w/ `baseUrl
packages/mdx/test/evaluate.js:220:66    - Unknown word (Pill)       -- components.js"\n\n<x.Pill>a</x.Pill> and <Div
packages/mdx/test/evaluate.js:220:76    - Unknown word (Pill)       -- js"\n\n<x.Pill>a</x.Pill> and <Div>b</Div>',
packages/mdx/test/evaluate.js:30:42     - Unknown word (jsxs)       -- should throw on missing `jsxs`', async function (
packages/mdx/test/evaluate.js:357:18    - Unknown word (sure)       -- // I’m not sure if this makes sense
packages/mdx/test/evaluate.js:357:31    - Unknown word (makes)      -- I’m not sure if this makes sense, but it is how
packages/mdx/test/evaluate.js:357:37    - Unknown word (sense)      -- not sure if this makes sense, but it is how Node
packages/mdx/test/evaluate.js:35:46     - Unknown word (jsxs)       -- String(error), /Expected `jsxs` given to `evaluate
packages/mdx/test/evaluate.js:366:21    - Unknown word (rewriting)  -- 'should support rewriting `import.meta.url` w
packages/mdx/test/evaluate.js:378:21    - Unknown word (rewriting)  -- 'should support rewriting `import.meta.url` w
packages/mdx/test/evaluate.js:55:21     - Unknown word (Markup)     -- renderToStaticMarkup(React.createElement
packages/mdx/test/evaluate.js:5:23      - Unknown word (Markup)     -- import {renderToStaticMarkup} from 'react-dom/server
packages/mdx/test/evaluate.js:64:21     - Unknown word (Markup)     -- renderToStaticMarkup(React.createElement
packages/mdx/test/evaluate.js:76:21     - Unknown word (Markup)     -- renderToStaticMarkup(React.createElement
packages/mdx/test/evaluate.js:88:21     - Unknown word (Markup)     -- renderToStaticMarkup(React.createElement
packages/mdx/test/evaluate.js:94:40     - Unknown word (using)      -- a runtime error when using `import` w/o `baseUrl
packages/mdx/test/index.js:1:29      - Unknown word (unassigned) -- eslint-disable import/no-unassigned-import */
packages/mdx/test/syntax.js:13:23     - Unknown word (Markup)     -- import {renderToStaticMarkup} from 'react-dom/server
packages/mdx/test/syntax.js:14:14     - Unknown word (Katex)      -- import rehypeKatex from 'rehype-katex'
packages/mdx/test/syntax.js:168:21    - Unknown word (headings)   -- 'should support headings (atx) (`#` -> `<h1>
packages/mdx/test/syntax.js:180:21    - Unknown word (headings)   -- 'should support headings (setext) (`=` -> `<h
packages/mdx/test/syntax.js:180:31    - Unknown word (setext)     -- should support headings (setext) (`=` -> `<h1>`)',
packages/mdx/test/syntax.js:1:32      - Unknown word (mdast)      -- Register directive nodes in mdast:
packages/mdx/test/syntax.js:225:21    - Unknown word (thematic)   -- 'should support thematic break (`***` -> `<hr
packages/mdx/test/syntax.js:253:21    - Unknown word (footnotes)  -- 'should support footnotes (`[^a]` -> `<sup><a
packages/mdx/test/syntax.js:263:103   - Unknown word (describedby) -- footnote-ref="true" aria-describedby="footnote-label">1<
packages/mdx/test/syntax.js:263:116   - Unknown word (footnote)    -- true" aria-describedby="footnote-label">1</a></sup><
packages/mdx/test/syntax.js:263:78    - Unknown word (footnote)   -- content-fnref-a" data-footnote-ref="true" aria-describedby
packages/mdx/test/syntax.js:264:15    - Unknown word (footnotes)   -- <section data-footnotes="true" class="footnotes
packages/mdx/test/syntax.js:264:39    - Unknown word (footnotes)   -- footnotes="true" class="footnotes"><h2 class="sr-only
packages/mdx/test/syntax.js:264:74    - Unknown word (footnote)    -- class="sr-only" id="footnote-label">Footnotes</h
packages/mdx/test/syntax.js:264:90    - Unknown word (Footnotes)   -- id="footnote-label">Footnotes</h2>
packages/mdx/test/syntax.js:267:108   - Unknown word (footnote)    -- reference 1" class="data-footnote-backref">↩</a></p>
packages/mdx/test/syntax.js:267:43    - Unknown word (footnote)    -- content-fnref-a" data-footnote-backref="" aria-label
packages/mdx/test/syntax.js:27:23     - Unknown word (Markup)     -- renderToStaticMarkup(
packages/mdx/test/syntax.js:2:23      - Unknown word (mdast)      -- / <reference types="mdast-util-directive" />
packages/mdx/test/syntax.js:302:166   - Unknown word (checkbox)    -- list-item"><input type="checkbox" disabled=""/> b</li
packages/mdx/test/syntax.js:302:83    - Unknown word (checkbox)    -- list-item"><input type="checkbox" disabled="" checked
packages/mdx/test/syntax.js:322:42    - Unknown word (footnotes)   -- syntax: markdown (GFM footnotes, `remark-gfm`, `remark
packages/mdx/test/syntax.js:331:33    - Unknown word (Notes)       -- footnoteLabel: 'Notes',
packages/mdx/test/syntax.js:338:105   - Unknown word (describedby) -- footnote-ref="true" aria-describedby="footnote-label">1<
packages/mdx/test/syntax.js:339:15    - Unknown word (footnotes)   -- <section data-footnotes="true" class="footnotes
packages/mdx/test/syntax.js:339:90    - Unknown word (Notes)       -- id="footnote-label">Notes</h2>
packages/mdx/test/syntax.js:391:37    - Unknown word (Katex)       -- rehypePlugins: [rehypeKatex]
packages/mdx/test/syntax.js:39:23     - Unknown word (Markup)     -- renderToStaticMarkup(
packages/mdx/test/syntax.js:420:16    - Unknown word (Mdast)       -- * @param {MdastRoot} tree
packages/mdx/test/syntax.js:429:26    - Unknown word (leaf)        -- node.type === 'leafDirective' ||
packages/mdx/test/syntax.js:462:24    - Unknown word (unravel)     -- await t.test('should unravel JSX (text) as an only
packages/mdx/test/syntax.js:471:24    - Unknown word (unravel)     -- await t.test('should unravel JSX (text) as only children
packages/mdx/test/syntax.js:481:13    - Unknown word (unravel)     -- 'should unravel JSX (text) and whitespace
packages/mdx/test/syntax.js:493:13    - Unknown word (unravel)     -- 'should unravel expression (text) as
packages/mdx/test/syntax.js:505:13    - Unknown word (unravel)     -- 'should unravel expression (text) as
packages/mdx/test/syntax.js:5:21      - Unknown word (Mdast)      -- * @import {Root as MdastRoot} from 'mdast'
packages/mdx/test/syntax.js:5:38      - Unknown word (mdast)      -- as MdastRoot} from 'mdast'
packages/mdx/test/syntax.js:629:19    - Unknown word (there)       -- // Important: there should not be whitespace
packages/mdx/test/syntax.js:629:8     - Unknown word (Important)   -- // Important: there should not be
packages/mdx/test/syntax.js:630:16    - Unknown word (normally)    -- // This is normally not present, but unraveling
packages/mdx/test/syntax.js:630:42    - Unknown word (unraveling)  -- normally not present, but unraveling makes this a bit more
packages/mdx/test/syntax.js:630:53    - Unknown word (makes)       -- present, but unraveling makes this a bit more complex
packages/mdx/test/syntax.js:630:70    - Unknown word (more)        -- unraveling makes this a bit more complex.
packages/mdx/test/syntax.js:630:75    - Unknown word (complex)     -- makes this a bit more complex.
packages/mdx/test/syntax.js:644:31    - Unknown word (jsxs)        -- import {jsx as _jsx, jsxs as _jsxs} from "react
packages/mdx/test/syntax.js:644:40    - Unknown word (jsxs)        -- jsx as _jsx, jsxs as _jsxs} from "react/jsx-runtime
packages/mdx/test/syntax.js:648:27    - Unknown word (jsxs)        -- ' children: _jsxs("tr", {',
packages/mdx/test/syntax.js:659:19    - Unknown word (wrapper)     -- ' const {wrapper: MDXLayout} = props
packages/mdx/test/syntax.js:66:23     - Unknown word (Markup)     -- renderToStaticMarkup(
packages/mdx/test/syntax.js:674:32    - Unknown word (importing)   -- test('should support importing components w/ ESM',
packages/mdx/test/syntax.js:680:24    - Unknown word (Pill)        -- 'import {Pill} from "./components
packages/mdx/test/syntax.js:680:57    - Unknown word (Pill)        -- /components.js"\n\n<Pill>!</Pill>'
packages/mdx/test/syntax.js:680:65    - Unknown word (Pill)        -- components.js"\n\n<Pill>!</Pill>'
packages/mdx/test/syntax.js:689:32    - Unknown word (importing)   -- test('should support importing data w/ ESM', async
packages/mdx/test/syntax.js:702:32    - Unknown word (exporting)   -- test('should support exporting w/ ESM', async function
packages/mdx/test/syntax.js:711:21    - Unknown word (exporting)   -- 'should support exporting an identifier w/o a
packages/mdx/test/syntax.js:717:32    - Unknown word (exporting)   -- test('should support exporting an object pattern',
packages/mdx/test/syntax.js:726:21    - Unknown word (exporting)   -- 'should support exporting a rest element in an
packages/mdx/test/syntax.js:739:21    - Unknown word (exporting)   -- 'should support exporting an assignment pattern
packages/mdx/test/syntax.js:78:23     - Unknown word (Markup)     -- renderToStaticMarkup(
packages/mdx/test/syntax.js:798:21    - Unknown word (rexporting)  -- 'should support rexporting something as a default
packages/mdx/test/syntax.js:814:21    - Unknown word (rexporting)  -- 'should support rexporting the default export from
packages/mdx/test/syntax.js:830:21    - Unknown word (rexporting)  -- 'should support rexporting the default export from
packages/mdx/test/syntax.js:846:21    - Unknown word (rexporting)  -- 'should support rexporting the default export,
packages/mdx/test/syntax.js:853:35    - Unknown word (Pill)        -- 'export {default, Pill} from "./components
packages/mdx/test/syntax.js:883:19    - Unknown word (wrapper)     -- ' const {wrapper: MDXLayout} = props
packages/mdx/test/syntax.js:896:115   - Unknown word (likely)      -- to be defined: you likely forgot to import, pass
packages/mdx/test/syntax.js:896:196   - Unknown word (your)        -- nIt’s referenced in your code at `" + place
packages/mdx/test/syntax.js:904:37    - Unknown word (generating)  -- a 'use strict' when generating a `function-body`",
packages/mdx/test/syntax.js:921:21    - Unknown word (wrapper)     -- ' const {wrapper: MDXLayout} = props
packages/mdx/test/syntax.js:99:27     - Unknown word (fenced)     -- should support code (fenced) (` ``` ` -> `pre code
packages/node-loader/index.js:12:24     - Unknown word (loader)     -- Pass options to the loader.
packages/node-loader/index.js:14:34     - Unknown word (Loader)     -- initialize = defaultLoader.initialize
packages/node-loader/index.js:5:15      - Unknown word (Loader)     -- import {createLoader} from './lib/index.js
packages/node-loader/index.js:7:14      - Unknown word (Loader)     -- const defaultLoader = createLoader()
packages/node-loader/index.js:7:29      - Unknown word (Loader)     -- defaultLoader = createLoader()
packages/node-loader/index.js:9:15      - Unknown word (Loader)     -- export {createLoader} from './lib/index.js
packages/node-loader/lib/index.js:103:17    - Unknown word (extnames)   -- const regex = extnamesToRegex(extnames)
packages/node-loader/lib/index.js:103:33    - Unknown word (extnames)   -- regex = extnamesToRegex(extnames)
packages/node-loader/lib/index.js:16:6      - Unknown word (whether)    -- * whether you run Node with `
packages/node-loader/lib/index.js:17:10     - Unknown word (cannot)     -- * You cannot pass it manually.
packages/node-loader/lib/index.js:17:25     - Unknown word (manually)   -- You cannot pass it manually.
packages/node-loader/lib/index.js:23:21     - Unknown word (Aware)      -- import {createFormatAwareProcessors} from '@mdx
packages/node-loader/lib/index.js:23:79     - Unknown word (aware)      -- internal-create-format-aware-processors'
packages/node-loader/lib/index.js:24:53     - Unknown word (extnames)   -- mdx-js/mdx/internal-extnames-to-regex'
packages/node-loader/lib/index.js:24:9      - Unknown word (extnames)   -- import {extnamesToRegex} from '@mdx-js
packages/node-loader/lib/index.js:33:51     - Unknown word (loader)     -- null | undefined} [loaderOptions]
packages/node-loader/lib/index.js:38:23     - Unknown word (Loader)     -- export function createLoader(loaderOptions) {
packages/node-loader/lib/index.js:38:30     - Unknown word (loader)     -- function createLoader(loaderOptions) {
packages/node-loader/lib/index.js:3:63      - Unknown word (aware)      -- internal-create-format-aware-processors'
packages/node-loader/lib/index.js:40:28     - Unknown word (loader)     -- settings = configure(loaderOptions || {})
packages/node-loader/lib/index.js:49:30     - Unknown word (loader)     -- settings = configure({...loaderOptions, ...options}
packages/node-loader/lib/index.js:98:10     - Unknown word (extnames)   -- const {extnames, process} = createFormatAware
packages/node-loader/lib/index.js:98:43     - Unknown word (Aware)      -- process} = createFormatAwareProcessors({
packages/node-loader/readme.md:102:11    - Unknown word (solve)        -- > You can solve that by adding a `register
packages/node-loader/readme.md:102:17    - Unknown word (that)         -- > You can solve that by adding a `register
packages/node-loader/readme.md:102:25    - Unknown word (adding)       -- You can solve that by adding a `register.js` file
packages/node-loader/readme.md:105:32    - Unknown word (module)       -- register} from 'node:module'
packages/node-loader/readme.md:10:16     - Unknown word (also)       -- Node.js hooks (also knows as loaders) for
packages/node-loader/readme.md:10:21     - Unknown word (knows)      -- Node.js hooks (also knows as loaders) for MDX
packages/node-loader/readme.md:10:30     - Unknown word (loaders)    -- hooks (also knows as loaders) for MDX.
packages/node-loader/readme.md:110:45    - Unknown word (example)      -- import ./register.js example.js` instead.
packages/node-loader/readme.md:110:57    - Unknown word (instead)      -- register.js example.js` instead.
packages/node-loader/readme.md:114:45    - Unknown word (Loader)       -- identifiers [`createLoader`][api-create-loader
packages/node-loader/readme.md:116:1     - Unknown word (There)        -- There is no default export
packages/node-loader/readme.md:118:12    - Unknown word (Loader)       -- ### `createLoader(options?)`
packages/node-loader/readme.md:120:25    - Unknown word (handle)       -- Create Node.js hooks to handle markdown and MDX.
packages/node-loader/readme.md:124:40    - Unknown word (optional)     -- Options`][api-options], optional)
packages/node-loader/readme.md:127:8     - Unknown word (Returns)      -- ###### Returns
packages/node-loader/readme.md:12:6      - Unknown word (more)       -- <!-- more -->
packages/node-loader/readme.md:135:45    - Unknown word (more)         -- docs][node-load] for more info.
packages/node-loader/readme.md:141:17    - Unknown word (same)         -- Options are the same as [`CompileOptions
packages/node-loader/readme.md:142:1     - Unknown word (exception)    -- exception that the `development
packages/node-loader/readme.md:142:11    - Unknown word (that)         -- exception that the `development` option
packages/node-loader/readme.md:142:63    - Unknown word (whether)      -- is supported based on whether you
packages/node-loader/readme.md:144:20    - Unknown word (manually)     -- You cannot pass it manually.
packages/node-loader/readme.md:144:5     - Unknown word (cannot)       -- You cannot pass it manually.
packages/node-loader/readme.md:148:17    - Unknown word (fully)        -- This package is fully typed with [TypeScript
packages/node-loader/readme.md:149:16    - Unknown word (additional)   -- It exports the additional type [`Options`][api
packages/node-loader/readme.md:154:10    - Unknown word (maintained)   -- Projects maintained by the unified collective
packages/node-loader/readme.md:154:36    - Unknown word (collective)   -- maintained by the unified collective are compatible with
packages/node-loader/readme.md:154:67    - Unknown word (maintained)   -- are compatible with maintained
packages/node-loader/readme.md:157:19    - Unknown word (major)        -- When we cut a new major release, we drop support
packages/node-loader/readme.md:157:54    - Unknown word (unmaintained) -- we drop support for unmaintained versions of
packages/node-loader/readme.md:159:22    - Unknown word (keep)         -- This means we try to keep the current release
packages/node-loader/readme.md:159:6     - Unknown word (means)        -- This means we try to keep the current
packages/node-loader/readme.md:166:4     - Unknown word (Contribute)   -- ## Contribute
packages/node-loader/readme.md:168:51    - Unknown word (ways)         -- on our website for ways to get started.
packages/node-loader/readme.md:168:63    - Unknown word (started)      -- website for ways to get started.
packages/node-loader/readme.md:168:8     - Unknown word (Contribute)   -- See [§ Contribute][contribute] on our
packages/node-loader/readme.md:169:30    - Unknown word (ways)         -- Support][support] for ways to get help.
packages/node-loader/readme.md:169:42    - Unknown word (help)         -- support] for ways to get help.
packages/node-loader/readme.md:16:4      - Unknown word (What)       -- * [What is this?](#what-is-this
packages/node-loader/readme.md:171:29    - Unknown word (conduct)      -- project has a [code of conduct][coc].
packages/node-loader/readme.md:172:4     - Unknown word (interacting)  -- By interacting with this repository
packages/node-loader/readme.md:172:69    - Unknown word (agree)        -- rganization, or community you agree to
packages/node-loader/readme.md:173:1     - Unknown word (abide)        -- abide by its terms.
packages/node-loader/readme.md:177:12    - Unknown word (Titus)        -- [MIT][] © [Titus Wormer][author]
packages/node-loader/readme.md:177:18    - Unknown word (Wormer)       -- [MIT][] © [Titus Wormer][author]
packages/node-loader/readme.md:1:17      - Unknown word (loader)     -- # `@mdx-js/node-loader`
packages/node-loader/readme.md:21:13     - Unknown word (Loader)     -- * [`createLoader(options?)`](#createloaderopti
packages/node-loader/readme.md:27:4      - Unknown word (Contribute) -- * [Contribute](#contribute)
packages/node-loader/readme.md:30:4      - Unknown word (What)       -- ## What is this?
packages/node-loader/readme.md:32:14     - Unknown word (contains)   -- This package contains Node.js hooks to add
packages/node-loader/readme.md:32:56     - Unknown word (importing)  -- hooks to add support for importing MDX files.
packages/node-loader/readme.md:33:32     - Unknown word (currently)  -- Customization Hooks* are currently a release candidate
packages/node-loader/readme.md:33:52     - Unknown word (candidate)  -- currently a release candidate.
packages/node-loader/readme.md:37:21     - Unknown word (useful)     -- This integration is useful if you’re using Node
packages/node-loader/readme.md:37:38     - Unknown word (using)      -- is useful if you’re using Node and want to import
packages/node-loader/readme.md:37:53     - Unknown word (want)       -- you’re using Node and want to import MDX files
packages/node-loader/readme.md:40:11     - Unknown word (using)      -- If you’re using a bundler (webpack,
packages/node-loader/readme.md:40:60     - Unknown word (site)       -- Rollup, esbuild), or a site builder
packages/node-loader/readme.md:41:40     - Unknown word (comes)      -- system (Vite) which comes with a bundler, you
packages/node-loader/readme.md:41:70     - Unknown word (instead)    -- with a bundler, you can instead
packages/node-loader/readme.md:42:1      - Unknown word (another)    -- another integration: see [§
packages/node-loader/readme.md:42:29     - Unknown word (Integrations) -- integration: see [§ Integrations][integrations].
packages/node-loader/readme.md:50:26     - Unknown word (loader)       -- install @mdx-js/node-loader
packages/node-loader/readme.md:55:31     - Unknown word (example)      -- have an MDX document, `example.mdx`:
packages/node-loader/readme.md:55:8      - Unknown word (have)         -- Say we have an MDX document, `example
packages/node-loader/readme.md:5:4       - Unknown word (Downloads)  -- [![Downloads][downloads-badge]][downloads
packages/node-loader/readme.md:65:10     - Unknown word (module)       -- …and our module `example.js` looks as
packages/node-loader/readme.md:65:18     - Unknown word (example)      -- …and our module `example.js` looks as follows
packages/node-loader/readme.md:65:39     - Unknown word (follows)      -- example.js` looks as follows:
packages/node-loader/readme.md:68:23     - Unknown word (Markup)       -- import {renderToStaticMarkup} from 'react-dom/server
packages/node-loader/readme.md:6:4       - Unknown word (Sponsors)   -- [![Sponsors][sponsors-badge]][collective
packages/node-loader/readme.md:70:24     - Unknown word (example)      -- import Content from './example.mdx'
packages/node-loader/readme.md:72:27     - Unknown word (Markup)       -- console.log(renderToStaticMarkup(React.createElement
packages/node-loader/readme.md:78:28     - Unknown word (loader)       -- loader=@mdx-js/node-loader example.js
packages/node-loader/readme.md:78:35     - Unknown word (example)      -- @mdx-js/node-loader example.js
packages/node-loader/readme.md:78:8      - Unknown word (loader)       -- node --loader=@mdx-js/node-loader
packages/node-loader/readme.md:7:4       - Unknown word (Backers)    -- [![Backers][backers-badge]][collective
packages/node-loader/readme.md:81:2      - Unknown word (yields)       -- …yields:
packages/node-loader/readme.md:87:36     - Unknown word (lower)        -- you use Node 18 and lower, then you can ignore
packages/node-loader/readme.md:87:67     - Unknown word (following)    -- then you can ignore the following
packages/node-loader/readme.md:8:4       - Unknown word (Chat)       -- [![Chat][chat-badge]][chat]
packages/node-loader/readme.md:91:48     - Unknown word (Loaders)      -- perimentalWarning: Custom ESM Loaders is an experimental feature
packages/node-loader/readme.md:91:87     - Unknown word (might)        -- experimental feature and might change at any > time
packages/node-loader/readme.md:92:22     - Unknown word (warnings)     -- (Use `node --trace-warnings ...` to show where the
packages/node-loader/readme.md:92:44     - Unknown word (where)        -- warnings ...` to show where the warning was created
packages/node-loader/readme.md:95:36     - Unknown word (higher)       -- you use Node 20 and higher, then you get the following
packages/node-loader/readme.md:95:61     - Unknown word (following)    -- higher, then you get the following warning:
packages/node-loader/readme.md:98:53     - Unknown word (loader)       -- entalWarning: `--experimental-loader` may be removed in the
packages/node-loader/readme.md:98:68     - Unknown word (removed)      -- experimental-loader` may be removed in the future; instead
packages/node-loader/readme.md:98:91     - Unknown word (instead)      -- removed in the future; instead use > `register()`:
packages/node-loader/readme.md:99:65     - Unknown word (module)       -- register } from "node:module"; import { pathToFileURL
packages/node-loader/test/index.js:11:20     - Unknown word (loader)     -- test('@mdx-js/node-loader', async function (t
packages/node-loader/test/index.js:12:24     - Unknown word (expose)     -- await t.test('should expose the public api', async
packages/node-loader/test/index.js:13:61     - Unknown word (loader)     -- import('@mdx-js/node-loader')).sort(), [
packages/node-loader/test/index.js:14:14     - Unknown word (Loader)     -- 'createLoader',
packages/node-loader/test/index.js:21:34     - Unknown word (loader)     -- mdxUrl = new URL('node-loader.mdx', import.meta.url
packages/node-loader/test/index.js:40:12     - Unknown word (Please)     -- 'Please run Node with `--loader
packages/node-loader/test/index.js:40:36     - Unknown word (loader)     -- Please run Node with `--loader=@mdx-js/node-loader
packages/node-loader/test/index.js:40:56     - Unknown word (loader)     -- loader=@mdx-js/node-loader` to test the ESM loader
packages/node-loader/test/index.js:50:21     - Unknown word (Markup)     -- renderToStaticMarkup(React.createElement
packages/node-loader/test/index.js:58:29     - Unknown word (crash)      -- const mdxUrl = new URL('crash.mdx', import.meta.url
packages/node-loader/test/index.js:77:12     - Unknown word (Please)     -- 'Please run Node with `--loader
packages/node-loader/test/index.js:87:27     - Unknown word (Markup)     -- () => renderToStaticMarkup(React.createElement
packages/node-loader/test/index.js:93:39     - Unknown word (crash)      -- error.stack?.includes('crash.mdx:2:8)'))
packages/node-loader/test/index.js:9:23      - Unknown word (Markup)     -- import {renderToStaticMarkup} from 'react-dom/server
packages/preact/lib/index.js:19:62     - Unknown word (them)       -- function that creates them (optional).
packages/preact/lib/index.js:36:62     - Unknown word (them)       -- function that creates them (optional).
packages/preact/readme.md:104:20    - Unknown word (Getting)    -- See [¶ Preact in § Getting started][start-preact
packages/preact/readme.md:104:28    - Unknown word (started)    -- Preact in § Getting started][start-preact] for how
packages/preact/readme.md:104:66    - Unknown word (started)    -- preact] for how to get started with
packages/preact/readme.md:106:26    - Unknown word (Using)      -- ¶ MDX provider in § Using MDX][use-provider] for
packages/preact/readme.md:113:1     - Unknown word (There)      -- There is no default export
packages/preact/readme.md:121:19    - Unknown word (Props)      -- * `properties` ([`Props`][api-props])
packages/preact/readme.md:124:7     - Unknown word (Returns)    -- ##### Returns
packages/preact/readme.md:135:49    - Unknown word (optional)   -- api-merge-components], optional)
packages/preact/readme.md:136:48    - Unknown word (that)       -- to use or a function that creates them
packages/preact/readme.md:136:5     - Unknown word (additional) -- — additional components to use or
packages/preact/readme.md:136:53    - Unknown word (creates)    -- use or a function that creates them
packages/preact/readme.md:136:61    - Unknown word (them)       -- function that creates them
packages/preact/readme.md:138:8     - Unknown word (Returns)    -- ###### Returns
packages/preact/readme.md:13:6      - Unknown word (more)       -- <!-- more -->
packages/preact/readme.md:152:8     - Unknown word (Returns)    -- ###### Returns
packages/preact/readme.md:154:1     - Unknown word (Additional) -- Additional components ([`MDXComponents
packages/preact/readme.md:157:6     - Unknown word (Props)      -- ### `Props`
packages/preact/readme.md:164:3     - Unknown word (optional)   -- optional)
packages/preact/readme.md:167:49    - Unknown word (optional)   -- api-merge-components], optional)
packages/preact/readme.md:168:48    - Unknown word (that)       -- to use or a function that creates them
packages/preact/readme.md:168:5     - Unknown word (additional) -- — additional components to use or
packages/preact/readme.md:168:53    - Unknown word (creates)    -- use or a function that creates them
packages/preact/readme.md:168:61    - Unknown word (them)       -- function that creates them
packages/preact/readme.md:169:48    - Unknown word (false)      -- boolean`, default: `false`)
packages/preact/readme.md:170:14    - Unknown word (outer)      -- — turn off outer component context
packages/preact/readme.md:170:5     - Unknown word (turn)       -- — turn off outer component
packages/preact/readme.md:174:17    - Unknown word (fully)      -- This package is fully typed with [TypeScript
packages/preact/readme.md:175:16    - Unknown word (additional) -- It exports the additional types [`MergeComponents
packages/preact/readme.md:176:3     - Unknown word (Props)      -- [`Props`][api-props].
packages/preact/readme.md:178:25    - Unknown word (sure)       -- types to work, make sure the TypeScript `JSX
packages/preact/readme.md:179:17    - Unknown word (installing) -- This is done by installing and using the types
packages/preact/readme.md:179:32    - Unknown word (using)      -- done by installing and using the types of your framework
packages/preact/readme.md:179:51    - Unknown word (your)       -- and using the types of your framework, as in
packages/preact/readme.md:179:9     - Unknown word (done)       -- This is done by installing and using
packages/preact/readme.md:17:4      - Unknown word (What)       -- * [What is this?](#what-is-this
packages/preact/readme.md:184:10    - Unknown word (maintained) -- Projects maintained by the unified collective
packages/preact/readme.md:184:36    - Unknown word (collective) -- maintained by the unified collective are compatible with
packages/preact/readme.md:184:67    - Unknown word (maintained) -- are compatible with maintained
packages/preact/readme.md:187:19    - Unknown word (major)      -- When we cut a new major release, we drop support
packages/preact/readme.md:187:54    - Unknown word (unmaintained) -- we drop support for unmaintained versions of
packages/preact/readme.md:189:22    - Unknown word (keep)         -- This means we try to keep the current release
packages/preact/readme.md:189:6     - Unknown word (means)        -- This means we try to keep the current
packages/preact/readme.md:196:4     - Unknown word (Contribute)   -- ## Contribute
packages/preact/readme.md:198:51    - Unknown word (ways)         -- on our website for ways to get started.
packages/preact/readme.md:198:63    - Unknown word (started)      -- website for ways to get started.
packages/preact/readme.md:198:8     - Unknown word (Contribute)   -- See [§ Contribute][contribute] on our
packages/preact/readme.md:199:30    - Unknown word (ways)         -- Support][support] for ways to get help.
packages/preact/readme.md:199:42    - Unknown word (help)         -- support] for ways to get help.
packages/preact/readme.md:201:29    - Unknown word (conduct)      -- project has a [code of conduct][coc].
packages/preact/readme.md:202:4     - Unknown word (interacting)  -- By interacting with this repository
packages/preact/readme.md:202:69    - Unknown word (agree)        -- rganization, or community you agree to
packages/preact/readme.md:203:1     - Unknown word (abide)        -- abide by its terms.
packages/preact/readme.md:207:11    - Unknown word (Compositor)   -- [MIT][] © Compositor and [Vercel][]
packages/preact/readme.md:25:7      - Unknown word (Props)      -- * [`Props`](#props)
packages/preact/readme.md:29:4      - Unknown word (Contribute) -- * [Contribute](#contribute)
packages/preact/readme.md:32:4      - Unknown word (What)       -- ## What is this?
packages/preact/readme.md:34:59     - Unknown word (combining)  -- components provider for combining Preact with
packages/preact/readme.md:39:23     - Unknown word (needed)     -- This package is **not needed** for MDX to work with
packages/preact/readme.md:40:26     - Unknown word (Using)      -- ¶ MDX provider in § Using MDX][use-provider] for
packages/preact/readme.md:58:4      - Unknown word (browsers)   -- In browsers with [`esm.sh`][esmsh
packages/preact/readme.md:5:4       - Unknown word (Downloads)  -- [![Downloads][downloads-badge]][downloads
packages/preact/readme.md:61:15     - Unknown word (module)     -- <script type="module">
packages/preact/readme.md:75:61     - Unknown word (such)       -- to compile MDX to JS, such as
packages/preact/readme.md:75:8      - Unknown word (Assumes)    -- // ^-- Assumes an integration is used
packages/preact/readme.md:76:32     - Unknown word (loader)     -- js/esbuild`, `@mdx-js/loader`, `@mdx-js/node-loader
packages/preact/readme.md:76:55     - Unknown word (loader)     -- loader`, `@mdx-js/node-loader`, or
packages/preact/readme.md:77:26     - Unknown word (that)       -- mdx-js/rollup`, and that it is configured with
packages/preact/readme.md:77:37     - Unknown word (configured) -- rollup`, and that it is configured with
packages/preact/readme.md:7:4       - Unknown word (Sponsors)   -- [![Sponsors][sponsors-badge]][collective
packages/preact/readme.md:8:4       - Unknown word (Backers)    -- [![Backers][backers-badge]][collective
packages/preact/readme.md:94:26     - Unknown word (have)       -- **Note**: you don’t have to use `MDXProvider
packages/preact/readme.md:95:3      - Unknown word (directly)   -- > directly:
packages/preact/readme.md:9:4       - Unknown word (Chat)       -- [![Chat][chat-badge]][chat]
packages/preact/test/index.jsx:16:59     - Unknown word (jsxs)       -- Fragment, jsx: Jsx, jsxs: Jsx}} */ (
packages/preact/test/index.jsx:21:24     - Unknown word (expose)     -- await t.test('should expose the public api', async
packages/preact/test/index.jsx:53:33     - Unknown word (wrapper)    -- test('should support `wrapper` in `components`', async
packages/preact/test/index.jsx:64:33     - Unknown word (Props)      -- * @param {ComponentProps<'div'>} properties
packages/preact/test/index.jsx:69:13     - Unknown word (wrapper)    -- wrapper(properties) {
packages/preact/test/index.jsx:6:22      - Unknown word (Props)      -- * @import {ComponentProps} from 'preact'
packages/react/lib/index.js:19:62     - Unknown word (them)       -- function that creates them (optional).
packages/react/lib/index.js:35:62     - Unknown word (them)       -- function that creates them (optional).
packages/react/lib/index.js:42:17     - Unknown word (avoid)      -- // Memoize to avoid unnecessary top-level
packages/react/readme.md:108:19    - Unknown word (Getting)     -- See [¶ React in § Getting started][start-react
packages/react/readme.md:108:27    - Unknown word (started)     -- React in § Getting started][start-react] for how
packages/react/readme.md:108:64    - Unknown word (started)     -- react] for how to get started with MDX
packages/react/readme.md:110:26    - Unknown word (Using)       -- ¶ MDX provider in § Using MDX][use-provider] for
packages/react/readme.md:117:1     - Unknown word (There)       -- There is no default export
packages/react/readme.md:125:19    - Unknown word (Props)       -- * `properties` ([`Props`][api-props])
packages/react/readme.md:128:7     - Unknown word (Returns)     -- ##### Returns
packages/react/readme.md:139:49    - Unknown word (optional)    -- api-merge-components], optional)
packages/react/readme.md:13:6      - Unknown word (more)       -- <!-- more -->
packages/react/readme.md:140:48    - Unknown word (that)        -- to use or a function that creates them
packages/react/readme.md:140:5     - Unknown word (additional)  -- — additional components to use or
packages/react/readme.md:140:53    - Unknown word (creates)     -- use or a function that creates them
packages/react/readme.md:140:61    - Unknown word (them)        -- function that creates them
packages/react/readme.md:142:8     - Unknown word (Returns)     -- ###### Returns
packages/react/readme.md:156:8     - Unknown word (Returns)     -- ###### Returns
packages/react/readme.md:158:1     - Unknown word (Additional)  -- Additional components ([`MDXComponents
packages/react/readme.md:161:6     - Unknown word (Props)       -- ### `Props`
packages/react/readme.md:168:3     - Unknown word (optional)    -- optional)
packages/react/readme.md:171:49    - Unknown word (optional)    -- api-merge-components], optional)
packages/react/readme.md:172:48    - Unknown word (that)        -- to use or a function that creates them
packages/react/readme.md:172:5     - Unknown word (additional)  -- — additional components to use or
packages/react/readme.md:172:53    - Unknown word (creates)     -- use or a function that creates them
packages/react/readme.md:172:61    - Unknown word (them)        -- function that creates them
packages/react/readme.md:173:48    - Unknown word (false)       -- boolean`, default: `false`)
packages/react/readme.md:174:14    - Unknown word (outer)       -- — turn off outer component context
packages/react/readme.md:174:5     - Unknown word (turn)        -- — turn off outer component
packages/react/readme.md:178:17    - Unknown word (fully)       -- This package is fully typed with [TypeScript
packages/react/readme.md:179:16    - Unknown word (additional)  -- It exports the additional types [`MergeComponents
packages/react/readme.md:17:4      - Unknown word (What)       -- * [What is this?](#what-is-this
packages/react/readme.md:180:3     - Unknown word (Props)       -- [`Props`][api-props].
packages/react/readme.md:182:25    - Unknown word (sure)        -- types to work, make sure the TypeScript `JSX
packages/react/readme.md:183:17    - Unknown word (installing)  -- This is done by installing and using the types
packages/react/readme.md:183:32    - Unknown word (using)       -- done by installing and using the types of your framework
packages/react/readme.md:183:51    - Unknown word (your)        -- and using the types of your framework, as in
packages/react/readme.md:183:9     - Unknown word (done)        -- This is done by installing and using
packages/react/readme.md:188:10    - Unknown word (maintained)  -- Projects maintained by the unified collective
packages/react/readme.md:188:36    - Unknown word (collective)  -- maintained by the unified collective are compatible with
packages/react/readme.md:188:67    - Unknown word (maintained)  -- are compatible with maintained
packages/react/readme.md:191:19    - Unknown word (major)       -- When we cut a new major release, we drop support
packages/react/readme.md:191:54    - Unknown word (unmaintained) -- we drop support for unmaintained versions of
packages/react/readme.md:193:22    - Unknown word (keep)         -- This means we try to keep the current release
packages/react/readme.md:193:6     - Unknown word (means)        -- This means we try to keep the current
packages/react/readme.md:200:4     - Unknown word (Contribute)   -- ## Contribute
packages/react/readme.md:202:51    - Unknown word (ways)         -- on our website for ways to get started.
packages/react/readme.md:202:63    - Unknown word (started)      -- website for ways to get started.
packages/react/readme.md:202:8     - Unknown word (Contribute)   -- See [§ Contribute][contribute] on our
packages/react/readme.md:203:30    - Unknown word (ways)         -- Support][support] for ways to get help.
packages/react/readme.md:203:42    - Unknown word (help)         -- support] for ways to get help.
packages/react/readme.md:205:29    - Unknown word (conduct)      -- project has a [code of conduct][coc].
packages/react/readme.md:206:4     - Unknown word (interacting)  -- By interacting with this repository
packages/react/readme.md:206:69    - Unknown word (agree)        -- rganization, or community you agree to
packages/react/readme.md:207:1     - Unknown word (abide)        -- abide by its terms.
packages/react/readme.md:211:11    - Unknown word (Compositor)   -- [MIT][] © Compositor and [Vercel][]
packages/react/readme.md:25:7      - Unknown word (Props)      -- * [`Props`](#props)
packages/react/readme.md:29:4      - Unknown word (Contribute) -- * [Contribute](#contribute)
packages/react/readme.md:32:4      - Unknown word (What)       -- ## What is this?
packages/react/readme.md:34:59     - Unknown word (combining)  -- components provider for combining React with
packages/react/readme.md:39:23     - Unknown word (needed)     -- This package is **not needed** for MDX to work with
packages/react/readme.md:40:26     - Unknown word (Using)      -- ¶ MDX provider in § Using MDX][use-provider] for
packages/react/readme.md:44:53     - Unknown word (instead)    -- `src/` or `/`) file instead.
packages/react/readme.md:45:6      - Unknown word (Configuring) -- See [Configuring MDX on `nextjs.org`
packages/react/readme.md:45:65     - Unknown word (more)        -- configuring-mdx] for more info.
packages/react/readme.md:5:4       - Unknown word (Downloads)  -- [![Downloads][downloads-badge]][downloads
packages/react/readme.md:62:4      - Unknown word (browsers)    -- In browsers with [`esm.sh`][esmsh
packages/react/readme.md:65:15     - Unknown word (module)      -- <script type="module">
packages/react/readme.md:79:61     - Unknown word (such)        -- to compile MDX to JS, such as
packages/react/readme.md:79:8      - Unknown word (Assumes)     -- // ^-- Assumes an integration is used
packages/react/readme.md:7:4       - Unknown word (Sponsors)   -- [![Sponsors][sponsors-badge]][collective
packages/react/readme.md:80:32     - Unknown word (loader)      -- js/esbuild`, `@mdx-js/loader`, `@mdx-js/node-loader
packages/react/readme.md:80:55     - Unknown word (loader)      -- loader`, `@mdx-js/node-loader`, or
packages/react/readme.md:81:26     - Unknown word (that)        -- mdx-js/rollup`, and that it is configured with
packages/react/readme.md:81:37     - Unknown word (configured)  -- rollup`, and that it is configured with
packages/react/readme.md:8:4       - Unknown word (Backers)    -- [![Backers][backers-badge]][collective
packages/react/readme.md:98:26     - Unknown word (have)        -- **Note**: you don’t have to use `MDXProvider
packages/react/readme.md:99:3      - Unknown word (directly)    -- > directly:
packages/react/readme.md:9:4       - Unknown word (Chat)       -- [![Chat][chat-badge]][chat]
packages/react/test/index.jsx:14:59     - Unknown word (jsxs)       -- Fragment, jsx: Jsx, jsxs: Jsx}} */ (
packages/react/test/index.jsx:19:24     - Unknown word (expose)     -- await t.test('should expose the public api', async
packages/react/test/index.jsx:3:22      - Unknown word (Props)      -- * @import {ComponentProps} from 'react'
packages/react/test/index.jsx:51:33     - Unknown word (wrapper)    -- test('should support `wrapper` in `components`', async
packages/react/test/index.jsx:62:33     - Unknown word (Props)      -- * @param {ComponentProps<'div'>} properties
packages/react/test/index.jsx:64:13     - Unknown word (wrapper)    -- wrapper(properties) {
packages/remark-mdx/index.js:1:4       - Unknown word (Augment)    -- // Augment node types:
packages/remark-mdx/index.js:2:23      - Unknown word (mdast)      -- / <reference types="mdast-util-mdx" />
packages/remark-mdx/lib/index.js:12:47     - Unknown word (mdast)      -- mdxToMarkdown} from 'mdast-util-mdx'
packages/remark-mdx/lib/index.js:13:42     - Unknown word (mdxjs)      -- micromark-extension-mdxjs'
packages/remark-mdx/lib/index.js:13:9      - Unknown word (mdxjs)      -- import {mdxjs} from 'micromark-extension
packages/remark-mdx/lib/index.js:2:38      - Unknown word (mdast)      -- ToMarkdownOptions} from 'mdast-util-mdx'
packages/remark-mdx/lib/index.js:3:68      - Unknown word (mdxjs)      -- micromark-extension-mdxjs'
packages/remark-mdx/lib/index.js:41:28     - Unknown word (mdxjs)      -- micromarkExtensions.push(mdxjs(settings))
packages/remark-mdx/readme.md:100:1     - Unknown word (Yields)       -- Yields:
packages/remark-mdx/readme.md:120:40    - Unknown word (optional)     -- Options`][api-options], optional)
packages/remark-mdx/readme.md:123:8     - Unknown word (Returns)      -- ###### Returns
packages/remark-mdx/readme.md:125:1     - Unknown word (Nothing)      -- Nothing (`undefined`).
packages/remark-mdx/readme.md:125:11    - Unknown word (undefined)    -- Nothing (`undefined`).
packages/remark-mdx/readme.md:134:35    - Unknown word (true)         -- ecmaVersion: 2024, locations: true, sourceType: 'module
packages/remark-mdx/readme.md:134:54    - Unknown word (module)       -- true, sourceType: 'module'}`)
packages/remark-mdx/readme.md:135:41    - Unknown word (except)       -- for acorn; all fields except `locations` can be set
packages/remark-mdx/readme.md:136:37    - Unknown word (Infinity)     -- `number`, default: `Infinity`)
packages/remark-mdx/readme.md:136:4     - Unknown word (print)        -- * `printWidth` (`number`, default
packages/remark-mdx/readme.md:137:13    - Unknown word (wrap)         -- — try and wrap syntax at this width
packages/remark-mdx/readme.md:138:17    - Unknown word (finite)       -- when set to a finite number (say, `80`),
packages/remark-mdx/readme.md:138:48    - Unknown word (formatter)    -- number (say, `80`), the formatter will print
packages/remark-mdx/readme.md:138:58    - Unknown word (will)         -- 80`), the formatter will print
packages/remark-mdx/readme.md:138:63    - Unknown word (print)        -- the formatter will print
packages/remark-mdx/readme.md:139:17    - Unknown word (separate)     -- attributes on separate lines when a tag doesn
packages/remark-mdx/readme.md:139:43    - Unknown word (doesn’t)      -- separate lines when a tag doesn’t fit on one line;
packages/remark-mdx/readme.md:13:6      - Unknown word (more)       -- <!-- more -->
packages/remark-mdx/readme.md:140:14    - Unknown word (behavior)     -- the normal behavior is to print attributes
packages/remark-mdx/readme.md:140:29    - Unknown word (print)        -- normal behavior is to print attributes with spaces
packages/remark-mdx/readme.md:140:51    - Unknown word (spaces)       -- print attributes with spaces between them instead
packages/remark-mdx/readme.md:140:66    - Unknown word (them)         -- with spaces between them instead
packages/remark-mdx/readme.md:140:71    - Unknown word (instead)      -- spaces between them instead
packages/remark-mdx/readme.md:141:11    - Unknown word (endings)      -- of line endings
packages/remark-mdx/readme.md:143:28    - Unknown word (around)       -- preferred quote to use around attribute values
packages/remark-mdx/readme.md:143:5     - Unknown word (preferred)    -- — preferred quote to use around
packages/remark-mdx/readme.md:144:38    - Unknown word (false)        -- boolean`, default: `false`)
packages/remark-mdx/readme.md:145:28    - Unknown word (that)         -- use the other quote if that results in less bytes
packages/remark-mdx/readme.md:146:13    - Unknown word (Closing)      -- * `tightSelfClosing` (`boolean`, default
packages/remark-mdx/readme.md:146:4     - Unknown word (tight)        -- * `tightSelfClosing` (`boolean
packages/remark-mdx/readme.md:146:44    - Unknown word (false)        -- boolean`, default: `false`)
packages/remark-mdx/readme.md:146:9     - Unknown word (Self)         -- * `tightSelfClosing` (`boolean`,
packages/remark-mdx/readme.md:147:36    - Unknown word (closing)      -- an extra space when closing self-closing elements
packages/remark-mdx/readme.md:147:44    - Unknown word (self)         -- extra space when closing self-closing elements: `
packages/remark-mdx/readme.md:147:49    - Unknown word (closing)      -- space when closing self-closing elements: `<img/>`
packages/remark-mdx/readme.md:148:3     - Unknown word (instead)      -- instead of `<img />`
packages/remark-mdx/readme.md:150:65    - Unknown word (intentionally) -- allowEmpty`, and `spread` are intentionally not documented. -->
packages/remark-mdx/readme.md:150:83    - Unknown word (documented)    -- are intentionally not documented. -->
packages/remark-mdx/readme.md:152:4     - Unknown word (Authoring)     -- ## Authoring
packages/remark-mdx/readme.md:154:52    - Unknown word (corresponding) -- author MDX, see each corresponding readme:
packages/remark-mdx/readme.md:163:12    - Unknown word (representation) -- MDX has no representation in HTML.
packages/remark-mdx/readme.md:164:1     - Unknown word (Though)         -- Though, when you are dealing
packages/remark-mdx/readme.md:164:22    - Unknown word (dealing)        -- Though, when you are dealing with MDX, you will likely
packages/remark-mdx/readme.md:164:44    - Unknown word (will)           -- dealing with MDX, you will likely go *through*
packages/remark-mdx/readme.md:164:49    - Unknown word (likely)         -- dealing with MDX, you will likely go *through* hast.
packages/remark-mdx/readme.md:164:69    - Unknown word (hast)           -- likely go *through* hast.
packages/remark-mdx/readme.md:165:16    - Unknown word (passing)        -- You can enable passing MDX through to hast
packages/remark-mdx/readme.md:165:39    - Unknown word (hast)           -- passing MDX through to hast by configuring
packages/remark-mdx/readme.md:165:47    - Unknown word (configuring)    -- MDX through to hast by configuring
packages/remark-mdx/readme.md:166:55    - Unknown word (mdxjs)          -- with `passThrough: ['mdxjsEsm',
packages/remark-mdx/readme.md:171:27    - Unknown word (these)          -- info on the syntax of these features, see each correspond
packages/remark-mdx/readme.md:171:52    - Unknown word (corresponding)  -- these features, see each corresponding readme:
packages/remark-mdx/readme.md:17:4      - Unknown word (What)       -- * [What is this?](#what-is-this
packages/remark-mdx/readme.md:180:32    - Unknown word (these)          -- on the syntax tree of these features, see each correspond
packages/remark-mdx/readme.md:180:57    - Unknown word (corresponding)  -- these features, see each corresponding readme:
packages/remark-mdx/readme.md:189:13    - Unknown word (what)           -- For info on what errors are thrown, see
packages/remark-mdx/readme.md:189:29    - Unknown word (thrown)         -- info on what errors are thrown, see each corresponding
packages/remark-mdx/readme.md:189:46    - Unknown word (corresponding)  -- are thrown, see each corresponding readme:
packages/remark-mdx/readme.md:198:17    - Unknown word (fully)          -- This package is fully typed with [TypeScript
packages/remark-mdx/readme.md:199:16    - Unknown word (additional)     -- It exports the additional type [`Options`][api
packages/remark-mdx/readme.md:202:14    - Unknown word (mdast)          -- with `@types/mdast` by adding a reference
packages/remark-mdx/readme.md:202:24    - Unknown word (adding)         -- with `@types/mdast` by adding a reference:
packages/remark-mdx/readme.md:205:26    - Unknown word (mdast)          -- Register MDX nodes in mdast:
packages/remark-mdx/readme.md:209:25    - Unknown word (mdast)          -- import {Root} from 'mdast'
packages/remark-mdx/readme.md:212:9     - Unknown word (visit)          -- import {visit} from 'unist-util-visit
packages/remark-mdx/readme.md:218:16    - Unknown word (undefined)      -- * @returns {undefined}
packages/remark-mdx/readme.md:218:7     - Unknown word (returns)        -- * @returns {undefined}
packages/remark-mdx/readme.md:219:8     - Unknown word (Nothing)        -- * Nothing.
packages/remark-mdx/readme.md:222:5     - Unknown word (visit)          -- visit(tree, function (node
packages/remark-mdx/readme.md:231:10    - Unknown word (maintained)     -- Projects maintained by the unified collective
packages/remark-mdx/readme.md:231:36    - Unknown word (collective)     -- maintained by the unified collective are compatible with
packages/remark-mdx/readme.md:231:67    - Unknown word (maintained)     -- are compatible with maintained
packages/remark-mdx/readme.md:234:19    - Unknown word (major)          -- When we cut a new major release, we drop support
packages/remark-mdx/readme.md:234:54    - Unknown word (unmaintained)   -- we drop support for unmaintained versions of
packages/remark-mdx/readme.md:236:22    - Unknown word (keep)           -- This means we try to keep the current release
packages/remark-mdx/readme.md:236:6     - Unknown word (means)          -- This means we try to keep the current
packages/remark-mdx/readme.md:243:4     - Unknown word (Contribute)     -- ## Contribute
packages/remark-mdx/readme.md:245:51    - Unknown word (ways)           -- on our website for ways to get started.
packages/remark-mdx/readme.md:245:63    - Unknown word (started)        -- website for ways to get started.
packages/remark-mdx/readme.md:245:8     - Unknown word (Contribute)     -- See [§ Contribute][contribute] on our
packages/remark-mdx/readme.md:246:30    - Unknown word (ways)           -- Support][support] for ways to get help.
packages/remark-mdx/readme.md:246:42    - Unknown word (help)           -- support] for ways to get help.
packages/remark-mdx/readme.md:248:29    - Unknown word (conduct)        -- project has a [code of conduct][coc].
packages/remark-mdx/readme.md:249:4     - Unknown word (interacting)    -- By interacting with this repository
packages/remark-mdx/readme.md:249:69    - Unknown word (agree)          -- rganization, or community you agree to
packages/remark-mdx/readme.md:24:4      - Unknown word (Authoring)  -- * [Authoring](#authoring)
packages/remark-mdx/readme.md:250:1     - Unknown word (abide)          -- abide by its terms.
packages/remark-mdx/readme.md:254:12    - Unknown word (Titus)          -- [MIT][] © [Titus Wormer][author]
packages/remark-mdx/readme.md:254:18    - Unknown word (Wormer)         -- [MIT][] © [Titus Wormer][author]
packages/remark-mdx/readme.md:32:4      - Unknown word (Contribute) -- * [Contribute](#contribute)
packages/remark-mdx/readme.md:35:4      - Unknown word (What)       -- ## What is this?
packages/remark-mdx/readme.md:38:10     - Unknown word (that)       -- markdown that MDX adds: JSX (`<x/
packages/remark-mdx/readme.md:38:19     - Unknown word (adds)       -- markdown that MDX adds: JSX (`<x/>`), export
packages/remark-mdx/readme.md:40:44     - Unknown word (parsing)    -- plugin to add support for parsing and serializing them
packages/remark-mdx/readme.md:40:68     - Unknown word (them)       -- parsing and serializing them.
packages/remark-mdx/readme.md:42:13     - Unknown word (does)       -- This plugin does not handle how MDX is
packages/remark-mdx/readme.md:42:22     - Unknown word (handle)     -- This plugin does not handle how MDX is compiled
packages/remark-mdx/readme.md:42:40     - Unknown word (compiled)   -- not handle how MDX is compiled to JavaScript or evaluated
packages/remark-mdx/readme.md:42:66     - Unknown word (evaluated)  -- compiled to JavaScript or evaluated and
packages/remark-mdx/readme.md:43:1      - Unknown word (rendered)   -- rendered to HTML.
packages/remark-mdx/readme.md:44:1      - Unknown word (That’s)     -- That’s done by [`@mdx-js/mdx
packages/remark-mdx/readme.md:44:8      - Unknown word (done)       -- That’s done by [`@mdx-js/mdx`][mdx
packages/remark-mdx/readme.md:48:16     - Unknown word (useful)     -- This plugin is useful if you’re dealing with
packages/remark-mdx/readme.md:48:33     - Unknown word (dealing)    -- is useful if you’re dealing with the MDX syntax
packages/remark-mdx/readme.md:48:65     - Unknown word (integrating) -- with the MDX syntax and integrating
packages/remark-mdx/readme.md:50:1      - Unknown word (Some)        -- Some example use cases are
packages/remark-mdx/readme.md:50:18     - Unknown word (cases)       -- Some example use cases are when you want to
packages/remark-mdx/readme.md:50:37     - Unknown word (want)        -- use cases are when you want to lint the syntax or
packages/remark-mdx/readme.md:50:6      - Unknown word (example)     -- Some example use cases are when you
packages/remark-mdx/readme.md:51:1      - Unknown word (something)   -- something other that JavaScript
packages/remark-mdx/readme.md:51:17     - Unknown word (that)        -- something other that JavaScript.
packages/remark-mdx/readme.md:53:30     - Unknown word (want)        -- don’t use plugins and want to access the syntax
packages/remark-mdx/readme.md:55:3      - Unknown word (mdast)       -- [`mdast-util-mdx`][mdast-util
packages/remark-mdx/readme.md:57:1      - Unknown word (Typically)   -- Typically though, you’d want to
packages/remark-mdx/readme.md:57:11     - Unknown word (though)      -- Typically though, you’d want to move
packages/remark-mdx/readme.md:57:25     - Unknown word (want)        -- Typically though, you’d want to move a layer up:
packages/remark-mdx/readme.md:58:1      - Unknown word (That)        -- That package is the core
packages/remark-mdx/readme.md:58:39     - Unknown word (turning)     -- the core compiler for turning MDX into JavaScript
packages/remark-mdx/readme.md:59:1      - Unknown word (gives)       -- gives you the most control
packages/remark-mdx/readme.md:59:15     - Unknown word (most)        -- gives you the most control.
packages/remark-mdx/readme.md:5:4       - Unknown word (Downloads)  -- [![Downloads][downloads-badge]][downloads
packages/remark-mdx/readme.md:60:27     - Unknown word (using)       -- even higher: if you’re using a bundler (Rollup, esbuild
packages/remark-mdx/readme.md:60:4      - Unknown word (even)        -- Or even higher: if you’re using
packages/remark-mdx/readme.md:60:76     - Unknown word (site)        -- esbuild, webpack), or a site
packages/remark-mdx/readme.md:60:9      - Unknown word (higher)      -- Or even higher: if you’re using a bundler
packages/remark-mdx/readme.md:61:48     - Unknown word (comes)       -- system (Vite) which comes with a bundler, you
packages/remark-mdx/readme.md:62:1      - Unknown word (better)      -- better off using an integration
packages/remark-mdx/readme.md:62:12     - Unknown word (using)       -- better off using an integration: see
packages/remark-mdx/readme.md:62:41     - Unknown word (Integrations) -- integration: see [§ Integrations][integrations].
packages/remark-mdx/readme.md:79:4      - Unknown word (browsers)     -- In browsers with [`esm.sh`][esmsh
packages/remark-mdx/readme.md:7:4       - Unknown word (Sponsors)   -- [![Sponsors][sponsors-badge]][collective
packages/remark-mdx/readme.md:82:15     - Unknown word (module)       -- <script type="module">
packages/remark-mdx/readme.md:8:4       - Unknown word (Backers)    -- [![Backers][backers-badge]][collective
packages/remark-mdx/readme.md:93:14     - Unknown word (await)        -- const file = await remark()
packages/remark-mdx/readme.md:9:4       - Unknown word (Chat)       -- [![Chat][chat-badge]][chat]
packages/remark-mdx/test/index.js:106:41    - Unknown word (bravo)      -- basic.parse('Alpha <b>*bravo*</b> charlie.')
packages/remark-mdx/test/index.js:122:70    - Unknown word (bravo)      -- type: 'text', value: 'bravo'}]}
packages/remark-mdx/test/index.js:160:43    - Unknown word (nameless)   -- should serialize an empty nameless fragment', function
packages/remark-mdx/test/index.js:220:63    - Unknown word (bravo)      -- mdxJsxAttribute', name: 'bravo'}],
packages/remark-mdx/test/index.js:228:17    - Unknown word (bravo)      -- 'Alpha <b bravo /> charlie.\n'
packages/remark-mdx/test/index.js:22:24     - Unknown word (expose)     -- await t.test('should expose the public api', async
packages/remark-mdx/test/index.js:245:52    - Unknown word (bravo)      -- mdxJsxAttribute', name: 'bravo', value: 'bravo'}
packages/remark-mdx/test/index.js:258:36    - Unknown word (prefixed)   -- 'should serialize a prefixed attribute (element)
packages/remark-mdx/test/index.js:2:26      - Unknown word (mdast)      -- import {Nodes} from 'mdast'
packages/remark-mdx/test/index.js:31:42     - Unknown word (charlie)    -- basic.parse('Alpha <b/> charlie.')
packages/remark-mdx/test/index.js:468:15    - Unknown word (onvisit)    -- visit(tree, onvisit)
packages/remark-mdx/test/index.js:477:10    - Unknown word (onvisit)    -- function onvisit(node) {
packages/remark-mdx/test/index.js:479:21    - Unknown word (mdxjs)      -- (node.type === 'mdxjsEsm' ||
packages/remark-mdx/test/index.js:48:37     - Unknown word (charlie)    -- type: 'text', value: ' charlie.'}
packages/remark-mdx/test/index.js:498:7     - Unknown word (onvisit)    -- onvisit(child)
packages/remark-mdx/test/index.js:501:9     - Unknown word (onvisit)    -- onvisit(child.value)
packages/remark-mdx/test/index.js:56:45     - Unknown word (charlie)    -- parse('Alpha <b></b> charlie.')
packages/remark-mdx/test/index.js:73:37     - Unknown word (charlie)    -- type: 'text', value: ' charlie.'}
packages/remark-mdx/test/index.js:7:12      - Unknown word (mdast)      -- * } from 'mdast-util-mdx'
packages/remark-mdx/test/index.js:81:43     - Unknown word (charlie)    -- basic.parse('Alpha <></> charlie.')
packages/rollup/lib/index.js:103:48    - Unknown word (compiled)    -- error: `rollup` is not compiled with `exactOptionalPropertyTy
packages/rollup/lib/index.js:104:80    - Unknown word (here)        -- map` to be `undefined` here.
packages/rollup/lib/index.js:105:16    - Unknown word (compiled)    -- map: compiled.map
packages/rollup/lib/index.js:2:19      - Unknown word (Aware)      -- * @import {FormatAwareProcessors} from '@mdx
packages/rollup/lib/index.js:2:77      - Unknown word (aware)      -- internal-create-format-aware-processors'
packages/rollup/lib/index.js:32:15     - Unknown word (called)      -- * Callback called by Rollup and Vite to
packages/rollup/lib/index.js:41:15     - Unknown word (called)      -- * Callback called by Vite to set additional
packages/rollup/lib/index.js:4:42      - Unknown word (pluginutils) -- FilterPattern} from '@rollup/pluginutils'
packages/rollup/lib/index.js:55:21     - Unknown word (Aware)       -- import {createFormatAwareProcessors} from '@mdx
packages/rollup/lib/index.js:55:79     - Unknown word (aware)       -- internal-create-format-aware-processors'
packages/rollup/lib/index.js:56:37     - Unknown word (pluginutils) -- createFilter} from '@rollup/pluginutils'
packages/rollup/lib/index.js:70:20     - Unknown word (Aware)       -- /** @type {FormatAwareProcessors} */
packages/rollup/lib/index.js:71:13     - Unknown word (Aware)       -- let formatAwareProcessors
packages/rollup/lib/index.js:77:13     - Unknown word (Aware)       -- formatAwareProcessors = createFormatAware
packages/rollup/lib/index.js:96:31     - Unknown word (extnames)    -- formatAwareProcessors.extnames.includes(file.extname
packages/rollup/lib/index.js:98:15     - Unknown word (compiled)    -- const compiled = await formatAwareProcessors
packages/rollup/lib/index.js:99:29     - Unknown word (compiled)    -- const code = String(compiled.value)
packages/rollup/readme.md:102:17    - Unknown word (same)       -- Options are the same as [`CompileOptions
packages/rollup/readme.md:103:10    - Unknown word (exception)  -- with the exception that the `SourceMapGenerator
packages/rollup/readme.md:103:20    - Unknown word (that)       -- with the exception that the `SourceMapGenerator
packages/rollup/readme.md:105:20    - Unknown word (manually)   -- You cannot pass it manually.
packages/rollup/readme.md:105:5     - Unknown word (cannot)     -- You cannot pass it manually.
packages/rollup/readme.md:106:46    - Unknown word (also)       -- development` option is also supported based on how
packages/rollup/readme.md:106:6     - Unknown word (using)      -- When using Vite, the `development
packages/rollup/readme.md:109:1     - Unknown word (There)      -- There are also two additional
packages/rollup/readme.md:109:11    - Unknown word (also)       -- There are also two additional options
packages/rollup/readme.md:109:20    - Unknown word (additional) -- There are also two additional options:
packages/rollup/readme.md:113:63    - Unknown word (optional)   -- RegExp`, or `string`, optional)
packages/rollup/readme.md:115:63    - Unknown word (optional)   -- RegExp`, or `string`, optional)
packages/rollup/readme.md:120:5     - Unknown word (Combine)    -- ### Combine with Babel
packages/rollup/readme.md:122:12    - Unknown word (modern)     -- If you use modern JavaScript features
packages/rollup/readme.md:122:43    - Unknown word (might)      -- JavaScript features you might want to use Babel through
packages/rollup/readme.md:122:49    - Unknown word (want)       -- JavaScript features you might want to use Babel through
packages/rollup/readme.md:123:66    - Unknown word (that)       -- to compile to code that works:
packages/rollup/readme.md:12:6      - Unknown word (more)       -- <!-- more -->
packages/rollup/readme.md:140:10    - Unknown word (Also)       -- // Also run on what used to
packages/rollup/readme.md:140:22    - Unknown word (what)       -- // Also run on what used to be `.mdx` (but
packages/rollup/readme.md:152:17    - Unknown word (fully)      -- This package is fully typed with [TypeScript
packages/rollup/readme.md:153:16    - Unknown word (additional) -- It exports the additional type [`Options`][api
packages/rollup/readme.md:158:10    - Unknown word (maintained) -- Projects maintained by the unified collective
packages/rollup/readme.md:158:36    - Unknown word (collective) -- maintained by the unified collective are compatible with
packages/rollup/readme.md:158:67    - Unknown word (maintained) -- are compatible with maintained
packages/rollup/readme.md:161:19    - Unknown word (major)      -- When we cut a new major release, we drop support
packages/rollup/readme.md:161:54    - Unknown word (unmaintained) -- we drop support for unmaintained versions of
packages/rollup/readme.md:163:22    - Unknown word (keep)         -- This means we try to keep the current release
packages/rollup/readme.md:163:6     - Unknown word (means)        -- This means we try to keep the current
packages/rollup/readme.md:16:4      - Unknown word (What)       -- * [What is this?](#what-is-this
packages/rollup/readme.md:170:4     - Unknown word (Contribute)   -- ## Contribute
packages/rollup/readme.md:172:51    - Unknown word (ways)         -- on our website for ways to get started.
packages/rollup/readme.md:172:63    - Unknown word (started)      -- website for ways to get started.
packages/rollup/readme.md:172:8     - Unknown word (Contribute)   -- See [§ Contribute][contribute] on our
packages/rollup/readme.md:173:30    - Unknown word (ways)         -- Support][support] for ways to get help.
packages/rollup/readme.md:173:42    - Unknown word (help)         -- support] for ways to get help.
packages/rollup/readme.md:175:29    - Unknown word (conduct)      -- project has a [code of conduct][coc].
packages/rollup/readme.md:176:4     - Unknown word (interacting)  -- By interacting with this repository
packages/rollup/readme.md:176:69    - Unknown word (agree)        -- rganization, or community you agree to
packages/rollup/readme.md:177:1     - Unknown word (abide)        -- abide by its terms.
packages/rollup/readme.md:181:12    - Unknown word (Titus)        -- [MIT][] © [Titus Wormer][author]
packages/rollup/readme.md:181:18    - Unknown word (Wormer)       -- [MIT][] © [Titus Wormer][author]
packages/rollup/readme.md:24:6      - Unknown word (Combine)    -- * [Combine with Babel](#combine
packages/rollup/readme.md:28:4      - Unknown word (Contribute) -- * [Contribute](#contribute)
packages/rollup/readme.md:31:4      - Unknown word (What)       -- ## What is this?
packages/rollup/readme.md:37:21     - Unknown word (useful)     -- This integration is useful if you’re using Rollup
packages/rollup/readme.md:37:38     - Unknown word (using)      -- is useful if you’re using Rollup (or another tool
packages/rollup/readme.md:37:55     - Unknown word (another)    -- re using Rollup (or another tool that uses
packages/rollup/readme.md:37:68     - Unknown word (that)       -- Rollup (or another tool that uses
packages/rollup/readme.md:37:73     - Unknown word (uses)       -- or another tool that uses
packages/rollup/readme.md:38:9      - Unknown word (such)       -- Rollup, such as Vite).
packages/rollup/readme.md:40:25     - Unknown word (combined)   -- This integration can be combined with the Babel plugin
packages/rollup/readme.md:40:67     - Unknown word (modern)     -- Babel plugin to compile modern
packages/rollup/readme.md:41:24     - Unknown word (ones)       -- JavaScript features to ones your users support.
packages/rollup/readme.md:41:29     - Unknown word (your)       -- JavaScript features to ones your users support.
packages/rollup/readme.md:43:43     - Unknown word (lower)      -- evaluate MDX code then the lower-level compiler (`@mdx
packages/rollup/readme.md:43:8      - Unknown word (want)       -- If you want to evaluate MDX code
packages/rollup/readme.md:44:13     - Unknown word (manually)   -- can be used manually.
packages/rollup/readme.md:57:15     - Unknown word (along)      -- Add something along these lines to your
packages/rollup/readme.md:57:21     - Unknown word (these)      -- Add something along these lines to your `rollup
packages/rollup/readme.md:57:36     - Unknown word (your)       -- along these lines to your `rollup.config.js`:
packages/rollup/readme.md:57:5      - Unknown word (something)  -- Add something along these lines to
packages/rollup/readme.md:5:4       - Unknown word (Downloads)  -- [![Downloads][downloads-badge]][downloads
packages/rollup/readme.md:6:4       - Unknown word (Sponsors)   -- [![Sponsors][sponsors-badge]][collective
packages/rollup/readme.md:78:35     - Unknown word (using)      -- Vite][vite] if you’re using Rollup through them
packages/rollup/readme.md:78:5      - Unknown word (also)       -- See also [¶ Vite][vite] if you
packages/rollup/readme.md:78:56     - Unknown word (them)       -- using Rollup through them for more info.
packages/rollup/readme.md:78:65     - Unknown word (more)       -- Rollup through them for more info.
packages/rollup/readme.md:7:4       - Unknown word (Backers)    -- [![Backers][backers-badge]][collective
packages/rollup/readme.md:8:4       - Unknown word (Chat)       -- [![Chat][chat-badge]][chat]
packages/rollup/readme.md:91:40     - Unknown word (optional)   -- Options`][api-options], optional)
packages/rollup/readme.md:94:8      - Unknown word (Returns)    -- ###### Returns
packages/rollup/test/index.js:101:32    - Unknown word (jsxs)       -- doesNotMatch(code, /jsxs?\(/)
packages/rollup/test/index.js:12:23     - Unknown word (Markup)     -- import {renderToStaticMarkup} from 'react-dom/server
packages/rollup/test/index.js:17:24     - Unknown word (expose)     -- await t.test('should expose the public api', async
packages/rollup/test/index.js:44:10     - Unknown word (AAAO)       -- ';;AAAO,SAAA,OAAA,GAAA;;AAA
packages/rollup/test/index.js:44:102    - Unknown word (CAAA)       -- CAAA,SAAA,EAAAA,GAAA,CAAA,OAAA,EAAA,EAAA,CAAA
packages/rollup/test/index.js:44:107    - Unknown word (OAAA)       -- SAAA,EAAAA,GAAA,CAAA,OAAA,EAAA,EAAA,CAAA;;;;;
packages/rollup/test/index.js:44:112    - Unknown word (EAAA)       -- EAAAA,GAAA,CAAA,OAAA,EAAA,EAAA,CAAA;;;;;;;;;;
packages/rollup/test/index.js:44:117    - Unknown word (EAAA)       -- GAAA,CAAA,OAAA,EAAA,EAAA,CAAA;;;;;;;;;;;;;;;
packages/rollup/test/index.js:44:122    - Unknown word (CAAA)       -- CAAA,OAAA,EAAA,EAAA,CAAA;;;;;;;;;;;;;;;'
packages/rollup/test/index.js:44:15     - Unknown word (SAAA)       -- ';;AAAO,SAAA,OAAA,GAAA;;AAA8B,IAAA
packages/rollup/test/index.js:44:20     - Unknown word (OAAA)       -- ';;AAAO,SAAA,OAAA,GAAA;;AAA8B,IAAA,QAAA
packages/rollup/test/index.js:44:25     - Unknown word (GAAA)       -- ';;AAAO,SAAA,OAAA,GAAA;;AAA8B,IAAA,QAAA,EAAA
packages/rollup/test/index.js:44:37     - Unknown word (IAAA)       -- SAAA,OAAA,GAAA;;AAA8B,IAAA,QAAA,EAAA;;;;;;;;;AAEnC
packages/rollup/test/index.js:44:42     - Unknown word (QAAA)       -- OAAA,GAAA;;AAA8B,IAAA,QAAA,EAAA;;;;;;;;;AAEnC,IAAA
packages/rollup/test/index.js:44:47     - Unknown word (EAAA)       -- GAAA;;AAA8B,IAAA,QAAA,EAAA;;;;;;;;;AAEnC,IAAA,QAAA
packages/rollup/test/index.js:44:66     - Unknown word (IAAA)       -- QAAA,EAAA;;;;;;;;;AAEnC,IAAA,QAAA,EAAA,CAAA,SAAA
packages/rollup/test/index.js:44:71     - Unknown word (QAAA)       -- EAAA;;;;;;;;;AAEnC,IAAA,QAAA,EAAA,CAAA,SAAA,EAAAA
packages/rollup/test/index.js:44:76     - Unknown word (EAAA)       -- ;;;;AAEnC,IAAA,QAAA,EAAA,CAAA,SAAA,EAAAA,GAAA
packages/rollup/test/index.js:44:81     - Unknown word (CAAA)       -- AAEnC,IAAA,QAAA,EAAA,CAAA,SAAA,EAAAA,GAAA,CAAA
packages/rollup/test/index.js:44:86     - Unknown word (SAAA)       -- IAAA,QAAA,EAAA,CAAA,SAAA,EAAAA,GAAA,CAAA,OAAA
packages/rollup/test/index.js:44:91     - Unknown word (EAAAA)      -- QAAA,EAAA,CAAA,SAAA,EAAAA,GAAA,CAAA,OAAA,EAAA
packages/rollup/test/index.js:44:97     - Unknown word (GAAA)       -- EAAA,CAAA,SAAA,EAAAA,GAAA,CAAA,OAAA,EAAA,EAAA
packages/rollup/test/index.js:54:21     - Unknown word (Markup)     -- renderToStaticMarkup(React.createElement
packages/rollup/test/index.js:62:30     - Unknown word (production) -- t.test('should infer production mode in vite', async
packages/rollup/test/index.js:68:20     - Unknown word (production) -- name: 'production'
packages/rollup/test/index.js:79:25     - Unknown word (jsxs)       -- assert.match(code, /jsxs?\(/)
packages/rollup/test/index.js:89:20     - Unknown word (production) -- name: 'production'
packages/vue/lib/index.js:13:32     - Unknown word (inject)     -- Fragment, createVNode, inject, provide} from 'vue
packages/vue/lib/index.js:56:10     - Unknown word (inject)     -- return inject('$mdxComponents', {
packages/vue/readme.md:101:26    - Unknown word (Using)      -- ¶ MDX provider in § Using MDX][use-provider] for
packages/vue/readme.md:108:1     - Unknown word (There)      -- There is no default export
packages/vue/readme.md:120:1     - Unknown word (There)      -- There are no parameters.
packages/vue/readme.md:122:8     - Unknown word (Returns)    -- ###### Returns
packages/vue/readme.md:127:6     - Unknown word (Props)      -- ### `Props`
packages/vue/readme.md:134:3     - Unknown word (optional)   -- optional)
packages/vue/readme.md:135:5     - Unknown word (additional) -- — additional components to use
packages/vue/readme.md:139:17    - Unknown word (fully)      -- This package is fully typed with [TypeScript
packages/vue/readme.md:13:6      - Unknown word (more)       -- <!-- more -->
packages/vue/readme.md:140:16    - Unknown word (additional) -- It exports the additional type [`Props`][api-props
packages/vue/readme.md:140:34    - Unknown word (Props)      -- the additional type [`Props`][api-props].
packages/vue/readme.md:142:25    - Unknown word (sure)       -- types to work, make sure the TypeScript `JSX
packages/vue/readme.md:143:17    - Unknown word (installing) -- This is done by installing and using the types
packages/vue/readme.md:143:32    - Unknown word (using)      -- done by installing and using the types of your framework
packages/vue/readme.md:143:51    - Unknown word (your)       -- and using the types of your framework, as in
packages/vue/readme.md:143:9     - Unknown word (done)       -- This is done by installing and using
packages/vue/readme.md:148:10    - Unknown word (maintained) -- Projects maintained by the unified collective
packages/vue/readme.md:148:36    - Unknown word (collective) -- maintained by the unified collective are compatible with
packages/vue/readme.md:148:67    - Unknown word (maintained) -- are compatible with maintained
packages/vue/readme.md:151:19    - Unknown word (major)      -- When we cut a new major release, we drop support
packages/vue/readme.md:151:54    - Unknown word (unmaintained) -- we drop support for unmaintained versions of
packages/vue/readme.md:153:22    - Unknown word (keep)         -- This means we try to keep the current release
packages/vue/readme.md:153:6     - Unknown word (means)        -- This means we try to keep the current
packages/vue/readme.md:160:4     - Unknown word (Contribute)   -- ## Contribute
packages/vue/readme.md:162:51    - Unknown word (ways)         -- on our website for ways to get started.
packages/vue/readme.md:162:63    - Unknown word (started)      -- website for ways to get started.
packages/vue/readme.md:162:8     - Unknown word (Contribute)   -- See [§ Contribute][contribute] on our
packages/vue/readme.md:163:30    - Unknown word (ways)         -- Support][support] for ways to get help.
packages/vue/readme.md:163:42    - Unknown word (help)         -- support] for ways to get help.
packages/vue/readme.md:165:29    - Unknown word (conduct)      -- project has a [code of conduct][coc].
packages/vue/readme.md:166:4     - Unknown word (interacting)  -- By interacting with this repository
packages/vue/readme.md:166:69    - Unknown word (agree)        -- rganization, or community you agree to
packages/vue/readme.md:167:1     - Unknown word (abide)        -- abide by its terms.
packages/vue/readme.md:171:11    - Unknown word (Compositor)   -- [MIT][] © Compositor and [Vercel][]
packages/vue/readme.md:17:4      - Unknown word (What)       -- * [What is this?](#what-is-this
packages/vue/readme.md:24:7      - Unknown word (Props)      -- * [`Props`](#props)
packages/vue/readme.md:28:4      - Unknown word (Contribute) -- * [Contribute](#contribute)
packages/vue/readme.md:31:4      - Unknown word (What)       -- ## What is this?
packages/vue/readme.md:33:59     - Unknown word (combining)  -- components provider for combining Vue with
packages/vue/readme.md:38:23     - Unknown word (needed)     -- This package is **not needed** for MDX to work with
packages/vue/readme.md:39:26     - Unknown word (Using)      -- ¶ MDX provider in § Using MDX][use-provider] for
packages/vue/readme.md:57:4      - Unknown word (browsers)   -- In browsers with [`esm.sh`][esmsh
packages/vue/readme.md:5:4       - Unknown word (Downloads)  -- [![Downloads][downloads-badge]][downloads
packages/vue/readme.md:60:15     - Unknown word (module)     -- <script type="module">
packages/vue/readme.md:71:61     - Unknown word (such)       -- to compile MDX to JS, such as
packages/vue/readme.md:71:8      - Unknown word (Assumes)    -- // ^-- Assumes an integration is used
packages/vue/readme.md:72:32     - Unknown word (loader)     -- js/esbuild`, `@mdx-js/loader`, `@mdx-js/node-loader
packages/vue/readme.md:72:55     - Unknown word (loader)     -- loader`, `@mdx-js/node-loader`, or
packages/vue/readme.md:73:26     - Unknown word (that)       -- mdx-js/rollup`, and that it is configured with
packages/vue/readme.md:73:37     - Unknown word (configured) -- rollup`, and that it is configured with
packages/vue/readme.md:7:4       - Unknown word (Sponsors)   -- [![Sponsors][sponsors-badge]][collective
packages/vue/readme.md:80:29     - Unknown word (bind)       -- template: '<MDXProvider v-bind:components="components
packages/vue/readme.md:85:26     - Unknown word (have)       -- **Note**: you don’t have to use `MDXProvider
packages/vue/readme.md:86:3      - Unknown word (directly)   -- > directly:
packages/vue/readme.md:8:4       - Unknown word (Backers)    -- [![Backers][backers-badge]][collective
packages/vue/readme.md:93:32     - Unknown word (bind)       -- template: '<MDXProvider v-bind:components="components
packages/vue/readme.md:99:17     - Unknown word (Getting)    -- See [¶ Vue in § Getting started][start-vue]
packages/vue/readme.md:99:25     - Unknown word (started)    -- [¶ Vue in § Getting started][start-vue] for how
packages/vue/readme.md:99:60     - Unknown word (started)    -- vue] for how to get started with MDX and
packages/vue/readme.md:9:4       - Unknown word (Chat)       -- [![Chat][chat-badge]][chat]
packages/vue/test/index.js:14:59     - Unknown word (jsxs)       -- Fragment, jsx: Jsx, jsxs: Jsx}} */ (
packages/vue/test/index.js:151:34    - Unknown word (hydrate)    -- SSR comments used to hydrate.
packages/vue/test/index.js:18:27     - Unknown word (would)      -- Note: a regular import would be nice but that completely
packages/vue/test/index.js:18:50     - Unknown word (completely) -- would be nice but that completely messes up the JSX types
packages/vue/test/index.js:18:61     - Unknown word (messes)     -- but that completely messes up the JSX types.
packages/vue/test/index.js:24:24     - Unknown word (expose)     -- await t.test('should expose the public api', async
packages/vue/test/index.js:38:27     - Unknown word (more)       -- should evaluate some more complex MDX code (text
packages/vue/test/index.js:38:32     - Unknown word (complex)    -- should evaluate some more complex MDX code (text, inline
packages/vue/test/index.js:62:32     - Unknown word (passing)    -- test('should support passing `components`', async
packages/vue/test/index.js:71:32     - Unknown word (passing)    -- test('should support passing `components`', async
readme.md:100:35    - Unknown word (Theme)       -- https://themeisle.com">ThemeIsle</a><br><br>
readme.md:100:40    - Unknown word (Isle)        -- themeisle.com">ThemeIsle</a><br><br>
readme.md:104:29    - Unknown word (Expo)        -- href="https://expo.io">Expo</a><br><br>
readme.md:108:34    - Unknown word (Boost)       -- https://boostnote.io">Boost Note</a><br><br>
readme.md:116:38    - Unknown word (Holloway)    -- //www.holloway.com">Holloway</a><br><br>
readme.md:11:4      - Unknown word (Sponsors)   -- [![Sponsors][sponsors-badge]][collective
readme.md:122:13    - Unknown word (middle)      -- <tr valign="middle">
readme.md:12:4      - Unknown word (Backers)    -- [![Backers][backers-badge]][collective
readme.md:133:11    - Unknown word (Compositor)  -- [MIT][] © Compositor and [Vercel][]
readme.md:13:4      - Unknown word (Chat)       -- [![Chat][chat-badge]][chat]
readme.md:15:22     - Unknown word (authorable) -- MDX][website] is an authorable format that lets you
readme.md:15:40     - Unknown word (that)       -- an authorable format that lets you seamlessly
readme.md:15:45     - Unknown word (lets)       -- authorable format that lets you seamlessly write
readme.md:15:54     - Unknown word (seamlessly) -- format that lets you seamlessly write JSX in
readme.md:16:1      - Unknown word (your)       -- your markdown documents.
readme.md:17:28     - Unknown word (such)       -- can import components, such as interactive charts
readme.md:17:48     - Unknown word (charts)     -- such as interactive charts or alerts, and embed
readme.md:17:58     - Unknown word (alerts)     -- interactive charts or alerts, and embed them
readme.md:17:76     - Unknown word (them)       -- or alerts, and embed them
readme.md:18:1      - Unknown word (within)     -- within your content.
readme.md:18:8      - Unknown word (your)       -- within your content.
readme.md:19:56     - Unknown word (blast)      -- content with components a blast.
readme.md:19:6      - Unknown word (makes)      -- This makes writing long-form content
readme.md:23:24     - Unknown word (snowfall)   -- import {Chart} from './snowfall.js'
readme.md:24:14     - Unknown word (year)       -- export const year = 2013
readme.md:26:15     - Unknown word (snowfall)   -- # Last year’s snowfall
readme.md:26:8      - Unknown word (year’s)     -- # Last year’s snowfall
readme.md:28:16     - Unknown word (snowfall)   -- In {year}, the snowfall was above average.
readme.md:28:29     - Unknown word (above)      -- year}, the snowfall was above average.
readme.md:28:35     - Unknown word (average)    -- the snowfall was above average.
readme.md:28:5      - Unknown word (year)       -- In {year}, the snowfall was above
readme.md:29:22     - Unknown word (warm)       -- It was followed by a warm spring which caused
readme.md:29:27     - Unknown word (spring)     -- was followed by a warm spring which caused
readme.md:29:40     - Unknown word (caused)     -- a warm spring which caused
readme.md:29:8      - Unknown word (followed)   -- It was followed by a warm spring which
readme.md:30:21     - Unknown word (many)       -- flood conditions in many of the nearby rivers
readme.md:30:33     - Unknown word (nearby)     -- conditions in many of the nearby rivers.
readme.md:30:40     - Unknown word (rivers)     -- in many of the nearby rivers.
readme.md:32:14     - Unknown word (year)       -- <Chart year={year} color="#fcb32c" />
readme.md:32:8      - Unknown word (year)       -- <Chart year={year} color="#fcb3
readme.md:35:62     - Unknown word (more)       -- docs/what-is-mdx/) for more info on the
readme.md:35:8      - Unknown word (What)       -- See [§ What is MDX](https://mdxjs
readme.md:37:8      - Unknown word (Playground) -- See [§ Playground](https://mdxjs.com/playground
readme.md:39:4      - Unknown word (What)       -- ## What is this?
readme.md:41:24     - Unknown word (contains)   -- This GitHub repository contains several packages for
readme.md:41:33     - Unknown word (several)    -- repository contains several packages for compiling
readme.md:41:54     - Unknown word (compiling)  -- several packages for compiling the MDX format to
readme.md:42:13     - Unknown word (integrating) -- JavaScript, integrating with bundlers such as
readme.md:42:39     - Unknown word (such)        -- integrating with bundlers such as webpack and Rollup
readme.md:42:75     - Unknown word (using)       -- and Rollup, and for using
readme.md:43:20     - Unknown word (such)        -- it with frameworks such as React, Preact, and
readme.md:43:9      - Unknown word (frameworks)  -- it with frameworks such as React, Preact
readme.md:45:16     - Unknown word (started)     -- See [§ Getting started](https://mdxjs.com/getting
readme.md:45:8      - Unknown word (Getting)     -- See [§ Getting started](https://mdxjs
readme.md:46:1      - Unknown word (integrate)   -- integrate MDX into your project
readme.md:46:20     - Unknown word (your)        -- integrate MDX into your project.
readme.md:50:35     - Unknown word (site)        -- Security][security] on our site for information.
readme.md:52:4      - Unknown word (Contribute)  -- ## Contribute
readme.md:54:39     - Unknown word (site)        -- [contribute] on our site for ways to get started
readme.md:54:48     - Unknown word (ways)        -- contribute] on our site for ways to get started.
readme.md:54:60     - Unknown word (started)     -- site for ways to get started.
readme.md:54:8      - Unknown word (Contribute)  -- See [§ Contribute][contribute] on our
readme.md:55:30     - Unknown word (ways)        -- Support][support] for ways to get help.
readme.md:55:42     - Unknown word (help)        -- support] for ways to get help.
readme.md:57:29     - Unknown word (conduct)     -- project has a [code of conduct][coc].
readme.md:58:4      - Unknown word (interacting) -- By interacting with this repository
readme.md:58:69     - Unknown word (agree)       -- rganization, or community you agree to
readme.md:59:1      - Unknown word (abide)       -- abide by its terms.
readme.md:61:4      - Unknown word (Sponsor)     -- ## Sponsor
readme.md:63:33     - Unknown word (site)        -- Sponsor][sponsor] on our site for how to help financially
readme.md:63:49     - Unknown word (help)        -- our site for how to help financially.
readme.md:63:54     - Unknown word (financially) -- site for how to help financially.
readme.md:63:8      - Unknown word (Sponsor)     -- See [§ Sponsor][sponsor] on our site
readme.md:66:13     - Unknown word (middle)      -- <tr valign="middle">
readme.md:72:32     - Unknown word (Motif)       -- https://motif.land">Motif</a><br><br>
readme.md:84:38     - Unknown word (Gatsby)      -- //www.gatsbyjs.org">Gatsby</a><br><br>
readme.md:88:13     - Unknown word (middle)      -- <tr valign="middle"></tr>
readme.md:89:13     - Unknown word (middle)      -- <tr valign="middle">
readme.md:92:16     - Unknown word (sharper)     -- <!--OC has a sharper image-->
renovate.json5:2:3       - Unknown word (extends)    -- extends: ['config:base', ':preserveSe
renovate.json5:2:30      - Unknown word (preserve)   -- extends: ['config:base', ':preserveSemverRanges'],
renovate.json5:3:14      - Unknown word (before)     -- schedule: 'before 3am on Monday'
renovate.json5:3:28      - Unknown word (Monday)     -- schedule: 'before 3am on Monday'
script/jsx-loader.js:10:15     - Unknown word (loader)     -- * A tiny JSX loader.
script/jsx-loader.js:10:6      - Unknown word (tiny)       -- * A tiny JSX loader.
script/jsx-loader.js:12:23     - Unknown word (Loader)     -- export function createLoader() {
script/jsx-loader.js:34:7      - Unknown word (loader)     -- loader: 'jsx',
script/jsx-loader.js:5:22      - Unknown word (Loader)     -- const {load} = createLoader()
tsconfig.json:13:15     - Unknown word (needed)      -- // To do: needed for DocSearch for now
tsconfig.json:14:6      - Unknown word (skip)        -- "skipLibCheck": true,
tsconfig.json:5:6       - Unknown word (declaration) -- "declaration": true,
tsconfig.json:6:6       - Unknown word (declaration) -- "declarationMap": true,
tsconfig.json:7:10      - Unknown word (Declaration) -- "emitDeclarationOnly": true,
tsconfig.json:8:11      - Unknown word (Optional)    -- "exactOptionalPropertyTypes": true
tsconfig.json:9:13      - Unknown word (preserve)    -- "jsx": "preserve",
vercel.json:10:24     - Unknown word (guides)     -- "destination": "/guides/",
vercel.json:114:24    - Unknown word (guides)       -- "destination": "/guides/frontmatter/",
vercel.json:114:31    - Unknown word (frontmatter)  -- destination": "/guides/frontmatter/",
vercel.json:115:19    - Unknown word (guides)       -- "source": "/guides/custom-loader/"
vercel.json:115:33    - Unknown word (loader)       -- source": "/guides/custom-loader/"
vercel.json:118:38    - Unknown word (highlighting) -- destination": "/guides/syntax-highlighting/#syntax-highlighting
vercel.json:118:59    - Unknown word (highlighting) -- highlighting/#syntax-highlighting-with-the-meta-field
vercel.json:122:29    - Unknown word (what)         -- destination": "/docs/what-is-mdx/",
vercel.json:130:38    - Unknown word (embeds)       -- destination": "/guides/embed/#embeds-at-run-time",
vercel.json:134:29    - Unknown word (extending)    -- destination": "/docs/extending-mdx/",
vercel.json:146:29    - Unknown word (using)        -- destination": "/docs/using-mdx/#layout",
vercel.json:146:40    - Unknown word (layout)       -- : "/docs/using-mdx/#layout",
vercel.json:147:26    - Unknown word (wrapper)      -- "source": "/guides/wrapper-customization/"
vercel.json:150:29    - Unknown word (extending)    -- destination": "/docs/extending-mdx/#creating-plugins
vercel.json:150:44    - Unknown word (creating)     -- docs/extending-mdx/#creating-plugins",
vercel.json:151:26    - Unknown word (writing)      -- "source": "/guides/writing-a-plugin/"
vercel.json:154:29    - Unknown word (what)         -- destination": "/docs/what-is-mdx/",
vercel.json:158:29    - Unknown word (extending)    -- destination": "/docs/extending-mdx/#using-plugins"
vercel.json:158:44    - Unknown word (using)        -- docs/extending-mdx/#using-plugins",
vercel.json:22:29     - Unknown word (using)      -- destination": "/docs/using-mdx/",
vercel.json:26:34     - Unknown word (contribute) -- destination": "/community/contribute/",
vercel.json:27:28     - Unknown word (contributing) -- source": "/advanced/contributing/"
vercel.json:30:24     - Unknown word (guides)       -- "destination": "/guides/frontmatter/",
vercel.json:30:31     - Unknown word (frontmatter)  -- destination": "/guides/frontmatter/",
vercel.json:31:35     - Unknown word (loader)       -- : "/advanced/custom-loader/"
vercel.json:34:29     - Unknown word (extending)    -- destination": "/docs/extending-mdx/#using-plugins"
vercel.json:34:44     - Unknown word (using)        -- docs/extending-mdx/#using-plugins",
vercel.json:38:29     - Unknown word (extending)    -- destination": "/docs/extending-mdx/",
vercel.json:3:4       - Unknown word (trailing)   -- "trailingSlash": true,
vercel.json:42:38     - Unknown word (evaluatefile) -- destination": "/packages/mdx/#evaluatefile-options",
vercel.json:4:4       - Unknown word (redirects)  -- "redirects": [
vercel.json:58:29     - Unknown word (getting)      -- destination": "/docs/getting-started/#types",
vercel.json:58:37     - Unknown word (started)      -- destination": "/docs/getting-started/#types",
vercel.json:62:24     - Unknown word (guides)       -- "destination": "/guides/frontmatter/",
vercel.json:62:31     - Unknown word (frontmatter)  -- destination": "/guides/frontmatter/",
vercel.json:63:28     - Unknown word (writing)      -- source": "/advanced/writing-a-plugin/"
vercel.json:66:34     - Unknown word (contribute)   -- destination": "/community/contribute/",
vercel.json:67:19     - Unknown word (contributing) -- "source": "/contributing/"
vercel.json:6:34      - Unknown word (about)      -- destination": "/community/about/",
vercel.json:70:29     - Unknown word (getting)      -- destination": "/docs/getting-started/#editor",
vercel.json:70:37     - Unknown word (started)      -- destination": "/docs/getting-started/#editor",
vercel.json:74:29     - Unknown word (getting)      -- destination": "/docs/getting-started/#editor",
vercel.json:74:37     - Unknown word (started)      -- destination": "/docs/getting-started/#editor",
vercel.json:78:29     - Unknown word (getting)      -- destination": "/docs/getting-started/#vite",
vercel.json:78:37     - Unknown word (started)      -- destination": "/docs/getting-started/#vite",
vercel.json:79:19     - Unknown word (getting)      -- "source": "/getting-started/create-react
vercel.json:79:27     - Unknown word (started)      -- "source": "/getting-started/create-react-app/"
vercel.json:7:19      - Unknown word (about)      -- "source": "/about/"
vercel.json:82:46     - Unknown word (gatsby)       -- docs/getting-started/#gatsby",
vercel.json:83:35     - Unknown word (gatsby)       -- : "/getting-started/gatsby/"
website/generate.js:103:11    - Unknown word (abbreviated) -- abbreviatedAuthors.length > 0
website/generate.js:103:22    - Unknown word (Authors)     -- abbreviatedAuthors.length > 0
website/generate.js:104:33    - Unknown word (abbreviated) -- ? listFormat.format(abbreviatedAuthors)
website/generate.js:104:44    - Unknown word (Authors)     -- listFormat.format(abbreviatedAuthors)
website/generate.js:110:10    - Unknown word (Sanitize)    -- // Sanitize the hast description
website/generate.js:110:23    - Unknown word (hast)        -- // Sanitize the hast description:
website/generate.js:111:45    - Unknown word (Hast)        -- data.meta.descriptionHast) {
website/generate.js:112:12    - Unknown word (Cast)        -- // Cast because we get a root
website/generate.js:112:17    - Unknown word (because)     -- // Cast because we get a root back.
website/generate.js:113:30    - Unknown word (Hast)        -- data.meta.descriptionHast = /** @type {Root}
website/generate.js:114:11    - Unknown word (sanitize)    -- sanitize(data.meta.descriptionHast
website/generate.js:114:41    - Unknown word (Hast)        -- data.meta.descriptionHast, schema)
website/generate.js:154:12    - Unknown word (sitemap)     -- new URL('sitemap.xml', config.output
website/generate.js:156:5     - Unknown word (sitemap)     -- sitemap(
website/generate.js:168:18    - Unknown word (sitemap)     -- console.log('✔ `/sitemap.xml`')
website/generate.js:182:22    - Unknown word (wrapper)     -- components: {wrapper: Layout},
website/generate.js:198:14    - Unknown word (Idea)        -- // Idea: only include editor
website/generate.js:198:43    - Unknown word (playground)  -- only include editor on playground? Use more editors.
website/generate.js:198:59    - Unknown word (more)        -- editor on playground? Use more editors.
website/generate.js:234:56    - Unknown word (migrating)   -- blog/v2/' || name === '/migrating/v2/'
website/generate.js:25:20     - Unknown word (because)    -- * note: mutable because `isArray` casts to any
website/generate.js:25:38     - Unknown word (casts)      -- mutable because `isArray` casts to any.
website/generate.js:37:31     - Unknown word (ungap)      -- structuredClone from '@ungap/structured-clone'
website/generate.js:3:46      - Unknown word (hast)       -- Properties, Root} from 'hast'
website/generate.js:40:9      - Unknown word (sanitize)   -- import {sanitize} from 'hast-util-sanitize
website/generate.js:53:24     - Unknown word (xast)       -- import {sitemap} from 'xast-util-sitemap'
website/generate.js:53:34     - Unknown word (sitemap)    -- sitemap} from 'xast-util-sitemap'
website/generate.js:53:9      - Unknown word (sitemap)    -- import {sitemap} from 'xast-util-sitemap
website/generate.js:54:22     - Unknown word (xast)       -- import {toXml} from 'xast-util-to-xml'
website/generate.js:5:20      - Unknown word (Matter)     -- * @import {DataMapMatter, DataMapMeta} from
website/generate.js:81:53     - Unknown word (matter)     -- MDXContent, info?: Info, matter: DataMapMatter, meta
website/generate.js:81:68     - Unknown word (Matter)     -- Info, matter: DataMapMatter, meta: DataMapMeta,
website/generate.js:84:26     - Unknown word (differently) -- // Handle `author` differently.
website/generate.js:86:13     - Unknown word (authors)     -- const authors = Array.isArray(author
website/generate.js:87:27     - Unknown word (authors)     -- const authorNames = authors.map(function (d) {
website/generate.js:91:11     - Unknown word (authors)     -- if (authors[0] && authors[0].twitter
website/generate.js:91:25     - Unknown word (authors)     -- if (authors[0] && authors[0].twitter) {
website/generate.js:92:34     - Unknown word (authors)     -- restInfo.authorTwitter = authors[0].twitter
website/generate.js:95:13     - Unknown word (abbreviated) -- const abbreviatedAuthors =
website/generate.js:95:24     - Unknown word (Authors)     -- const abbreviatedAuthors =
website/generate.js:97:43     - Unknown word (others)      -- authorNames.slice(0, 2), 'others']
website/loader.js:10:28     - Unknown word (loader)     -- register('../script/jsx-loader.js', import.meta.url
website/loader.js:1:15      - Unknown word (Loader)     -- import {createLoader as createJsxLoader}
website/loader.js:1:34      - Unknown word (Loader)     -- createLoader as createJsxLoader} from '../script/jsx
website/loader.js:1:62      - Unknown word (loader)     -- from '../script/jsx-loader.js'
website/loader.js:2:39      - Unknown word (loader)     -- initialize, load} from './mdx-loader.js'
website/loader.js:4:17      - Unknown word (loaders)    -- const loader = {loaders: [createJsxLoader()
website/loader.js:4:36      - Unknown word (Loader)     -- {loaders: [createJsxLoader(), {initialize, load
website/loader.js:4:7       - Unknown word (loader)     -- const loader = {loaders: [createJsxLoader
website/loader.js:5:16      - Unknown word (loader)     -- export default loader
website/loader.js:7:17      - Unknown word (dropping)   -- // To do: after dropping Node 18:
website/mdx-loader.js:105:12    - Unknown word (Twoslash)      -- [rehypeTwoslash, {twoslash: {compilerOptions
website/mdx-loader.js:105:23    - Unknown word (twoslash)      -- [rehypeTwoslash, {twoslash: {compilerOptions: commandLin
website/mdx-loader.js:111:11    - Unknown word (Gemoji)        -- remarkGemoji,
website/mdx-loader.js:114:36    - Unknown word (matter)        -- remarkMdxFrontmatter, {name: 'matter'}],
website/mdx-loader.js:115:16    - Unknown word (Badges)        -- remarkStripBadges,
website/mdx-loader.js:116:11    - Unknown word (Squeeze)       -- remarkSqueezeParagraphs,
website/mdx-loader.js:116:18    - Unknown word (Paragraphs)    -- remarkSqueezeParagraphs,
website/mdx-loader.js:121:34    - Unknown word (Loader)        -- initialize, load} = createLoader(options)
website/mdx-loader.js:136:14    - Unknown word (currentcolor)  -- fill: 'currentcolor',
website/mdx-loader.js:168:37    - Unknown word (hack)          -- Symlinks, which we have to hack around.
website/mdx-loader.js:168:42    - Unknown word (around)        -- which we have to hack around.
website/mdx-loader.js:191:10    - Unknown word (recma)         -- function recmaInjectMeta(options)
website/mdx-loader.js:191:15    - Unknown word (Inject)        -- function recmaInjectMeta(options) {
website/mdx-loader.js:19:15     - Unknown word (Loader)     -- import {createLoader} from '@mdx-js/node
website/mdx-loader.js:19:42     - Unknown word (loader)     -- from '@mdx-js/node-loader'
website/mdx-loader.js:202:13    - Unknown word (everything)    -- // Find everything that’s defined in the
website/mdx-loader.js:203:11    - Unknown word (visitors)      -- const visitors = createVisitors()
website/mdx-loader.js:203:28    - Unknown word (Visitors)      -- const visitors = createVisitors()
website/mdx-loader.js:206:9     - Unknown word (visitors)      -- visitors.enter(node)
website/mdx-loader.js:214:11    - Unknown word (visitors)      -- visitors.exit(node) // Call the
website/mdx-loader.js:214:56    - Unknown word (manually)      -- Call the exit handler manually.
website/mdx-loader.js:217:14    - Unknown word (visitors)      -- leave: visitors.exit
website/mdx-loader.js:219:22    - Unknown word (visitors)      -- const topScope = visitors.scopes[0]
website/mdx-loader.js:21:24     - Unknown word (wooorm)     -- import {common} from '@wooorm/starry-night'
website/mdx-loader.js:21:31     - Unknown word (starry)     -- common} from '@wooorm/starry-night'
website/mdx-loader.js:21:38     - Unknown word (night)      -- from '@wooorm/starry-night'
website/mdx-loader.js:224:8     - Unknown word (Treat)         -- // Treat as arbitrary object
website/mdx-loader.js:22:25     - Unknown word (wooorm)     -- import sourceMdx from '@wooorm/starry-night/source
website/mdx-loader.js:22:32     - Unknown word (starry)     -- sourceMdx from '@wooorm/starry-night/source.mdx'
website/mdx-loader.js:22:39     - Unknown word (night)      -- from '@wooorm/starry-night/source.mdx'
website/mdx-loader.js:23:26     - Unknown word (wooorm)     -- import sourceToml from '@wooorm/starry-night/source
website/mdx-loader.js:23:33     - Unknown word (starry)     -- sourceToml from '@wooorm/starry-night/source.toml'
website/mdx-loader.js:23:40     - Unknown word (night)      -- from '@wooorm/starry-night/source.toml'
website/mdx-loader.js:24:25     - Unknown word (wooorm)     -- import sourceTsx from '@wooorm/starry-night/source
website/mdx-loader.js:24:32     - Unknown word (starry)     -- sourceTsx from '@wooorm/starry-night/source.tsx'
website/mdx-loader.js:24:39     - Unknown word (night)      -- from '@wooorm/starry-night/source.tsx'
website/mdx-loader.js:255:7     - Unknown word (specifiers)    -- specifiers: []
website/mdx-loader.js:25:15     - Unknown word (Visitors)   -- import {createVisitors} from 'estree-util-scope
website/mdx-loader.js:272:11    - Unknown word (Plain)         -- txt: 'Plain text',
website/mdx-loader.js:30:22     - Unknown word (Headings)   -- import rehypeAutolinkHeadings from 'rehype-autolink
website/mdx-loader.js:318:26    - Unknown word (twoslash)      -- if (metaProperties.twoslash === '') {
website/mdx-loader.js:319:25    - Unknown word (twoslash)      -- className.push('twoslash')
website/mdx-loader.js:338:14    - Unknown word (giant)         -- // Not giant.
website/mdx-loader.js:358:34    - Unknown word (please)        -- [mdx-config]: warn: please add %s to have a nice
website/mdx-loader.js:39:14     - Unknown word (Starry)     -- import rehypeStarryNight from 'rehype-starry
website/mdx-loader.js:39:20     - Unknown word (Night)      -- import rehypeStarryNight from 'rehype-starry
website/mdx-loader.js:39:39     - Unknown word (starry)     -- ehypeStarryNight from 'rehype-starry-night'
website/mdx-loader.js:39:46     - Unknown word (night)      -- from 'rehype-starry-night'
website/mdx-loader.js:40:14     - Unknown word (Twoslash)   -- import rehypeTwoslash from 'rehype-twoslash
website/mdx-loader.js:40:36     - Unknown word (twoslash)   -- rehypeTwoslash from 'rehype-twoslash'
website/mdx-loader.js:42:14     - Unknown word (Gemoji)     -- import remarkGemoji from 'remark-gemoji
website/mdx-loader.js:42:34     - Unknown word (gemoji)     -- remarkGemoji from 'remark-gemoji'
website/mdx-loader.js:46:14     - Unknown word (Squeeze)    -- import remarkSqueezeParagraphs from 'remark
website/mdx-loader.js:46:21     - Unknown word (Paragraphs) -- import remarkSqueezeParagraphs from 'remark-squeeze
website/mdx-loader.js:46:45     - Unknown word (squeeze)    -- queezeParagraphs from 'remark-squeeze-paragraphs'
website/mdx-loader.js:46:53     - Unknown word (paragraphs) -- from 'remark-squeeze-paragraphs'
website/mdx-loader.js:47:19     - Unknown word (Badges)     -- import remarkStripBadges from 'remark-strip-badges
website/mdx-loader.js:47:45     - Unknown word (badges)     -- tripBadges from 'remark-strip-badges'
website/mdx-loader.js:4:41      - Unknown word (hast)       -- ElementContent, Root} from 'hast'
website/mdx-loader.js:66:21     - Unknown word (Unrecoverable) -- console.warn('Unrecoverable diagnostic', x)
website/mdx-loader.js:77:18     - Unknown word (recma)         -- recmaPlugins: [recmaInjectMeta],
website/mdx-loader.js:77:23     - Unknown word (Inject)        -- recmaPlugins: [recmaInjectMeta],
website/mdx-loader.js:77:3      - Unknown word (recma)         -- recmaPlugins: [recmaInjectMeta
website/mdx-loader.js:84:24     - Unknown word (Hast)          -- {inferDescriptionHast: true, truncateSize
website/mdx-loader.js:91:21     - Unknown word (Headings)      -- rehypeAutolinkHeadings,
website/mdx-loader.js:99:13     - Unknown word (Starry)        -- rehypeStarryNight,
website/mdx-loader.js:99:19     - Unknown word (Night)         -- rehypeStarryNight,
website/post.js:103:23    - Unknown word (sanitize)   -- const clean = sanitize(body, {
website/post.js:121:11    - Unknown word (clobber)    -- clobber: []
website/post.js:12:31     - Unknown word (Matter)     -- property {Readonly<DataMapMatter>} matter
website/post.js:12:40     - Unknown word (matter)     -- Readonly<DataMapMatter>} matter
website/post.js:13:6      - Unknown word (Matter)     -- * Matter.
website/post.js:15:6      - Unknown word (Whether)    -- * Whether to exclude from the
website/post.js:161:1     - Unknown word (chromium)   -- chromium.setGraphicsMode = false
website/post.js:167:19    - Unknown word (chromium)   -- args: [...chromium.args, '--disable-gpu
website/post.js:168:26    - Unknown word (chromium)   -- defaultViewport: chromium.defaultViewport,
website/post.js:169:40    - Unknown word (executable) -- xecutablePath: await chromium.executablePath(),
website/post.js:169:9     - Unknown word (executable) -- executablePath: await chromium
website/post.js:190:30    - Unknown word (improve)    -- Don’t regenerate to improve performance.
website/post.js:216:24    - Unknown word (purple)     -- /* purple */
website/post.js:225:30    - Unknown word (seems)      -- /* Twitter seems to cut 1em off the size
website/post.js:227:31    - Unknown word (assumption) -- * but the assumption is that most folks will
website/post.js:227:50    - Unknown word (most)       -- the assumption is that most folks will share on
website/post.js:227:55    - Unknown word (folks)      -- assumption is that most folks will share on
website/post.js:24:24     - Unknown word (sparticuz)  -- import chromium from '@sparticuz/chromium'
website/post.js:24:34     - Unknown word (chromium)   -- chromium from '@sparticuz/chromium'
website/post.js:24:8      - Unknown word (chromium)   -- import chromium from '@sparticuz/chromium
website/post.js:254:34    - Unknown word (ellipsis)   -- text-overflow: ellipsis;
website/post.js:27:9      - Unknown word (sanitize)   -- import {sanitize, defaultSchema} from
website/post.js:320:42    - Unknown word (Hast)       -- info.meta.descriptionHast
website/post.js:321:25    - Unknown word (sanitize)   -- ? sanitize(info.meta.descriptionHast
website/post.js:321:55    - Unknown word (Hast)       -- info.meta.descriptionHast, schema)
website/post.js:322:55    - Unknown word (matter)     -- description || info.matter.description
website/post.js:329:53    - Unknown word (contributors) -- meta.author || 'MDX contributors')
website/post.js:33:20     - Unknown word (xast)       -- import {rss} from 'xast-util-feed'
website/post.js:34:22     - Unknown word (xast)       -- import {toXml} from 'xast-util-to-xml'
website/post.js:353:18    - Unknown word (doubled)      -- // This is doubled in the actual file dimensions
website/post.js:355:18    - Unknown word (emulate)      -- await page.emulateMediaFeatures([
website/post.js:356:17    - Unknown word (prefers)      -- {name: 'prefers-color-scheme', value
website/post.js:3:20      - Unknown word (Matter)     -- * @import {DataMapMatter, DataMapMeta} from
website/post.js:4:26      - Unknown word (xast)       -- import {Entry} from 'xast-util-feed'
website/post.js:71:51     - Unknown word (past)       -- are published in the past.
website/post.js:91:12     - Unknown word (most)       -- // Ten most recently published articles
website/post.js:91:17     - Unknown word (recently)   -- // Ten most recently published articles.
website/post.js:91:36     - Unknown word (articles)   -- most recently published articles.
website/prep.js:119:23    - Unknown word (Redirecting) -- h('title', 'Redirecting…'),
website/prep.js:126:20    - Unknown word (Redirecting) -- h('h1', 'Redirecting…'),
website/prep.js:128:48    - Unknown word (here)        -- String(abs)}, 'Click here if you are not redirected
website/prep.js:3:25      - Unknown word (hast)       -- import {Root} from 'hast'
website/prep.js:48:28     - Unknown word (sitemap)    -- Sitemap: ' + new URL('sitemap.xml', config.site),
website/prep.js:48:6      - Unknown word (Sitemap)    -- 'Sitemap: ' + new URL('sitemap
website/schema-description.js:9:3       - Unknown word (ancestors)  -- ancestors: {},
website/types.d.ts:14:14     - Unknown word (patched)    -- * Field patched by `acorn`.
website/types.d.ts:16:56     - Unknown word (playground) -- MDX website for the playground.
website/types.d.ts:16:8      - Unknown word (Registered) -- * Registered by types for the MDX
website/types.d.ts:22:21     - Unknown word (hast)       -- // Register data on hast.
website/types.d.ts:23:17     - Unknown word (hast)       -- declare module 'hast' {
website/types.d.ts:28:8      - Unknown word (Registered) -- * Registered by `website/types.d
website/types.d.ts:38:8      - Unknown word (Authors)    -- * Authors associated with a document
website/types.d.ts:40:8      - Unknown word (Registered) -- * Registered by `website/types.d
website/types.d.ts:42:5      - Unknown word (authors)    -- authors?: Array<Author> | null
website/types.d.ts:47:8      - Unknown word (Registered) -- * Registered by `website/types.d
website/types.d.ts:7:14      - Unknown word (patched)    -- * Field patched by `acorn`.
website/types.d.ts:9:56      - Unknown word (playground) -- MDX website for the playground.
website/types.d.ts:9:8       - Unknown word (Registered) -- * Registered by types for the MDX
