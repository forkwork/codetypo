---
Repository: wireapp/wire-desktop
Url: https://github.com/wireapp/wire-desktop.git
Args: '["*.md","electron/renderer/**/*.jsx","electron/src/**/*.ts","electron/html/*.html"]'
Summary:
  files: 51
  filesWithIssues: 51
  issues: 1888
  errors: 4
Errors:
  - Dictionary Error with (en_us)
  - Dictionary Error with (filetypes)
  - Dictionary Error with (html-symbol-entities)
  - Dictionary Error with (public-licenses)

issues:
  - "electron/html/about.html:11:42          about       U       ><span data-string=\"aboutVersion\"></span> <span"
  - "electron/html/about.html:20:90          Releases    U       span data-string=\"aboutReleases\"></span></a>"
  - "electron/html/proxy-prompt.html:11:55       Headline    U       data-string=\"proxyPromptHeadline\"></span></p>"
  - "electron/src/auth/ProxyAuth.test.main.ts:2:4            Wire            U       * Wire"
  - "electron/src/auth/ProxyAuth.test.main.ts:5:43           redistribute    U       free software: you can redistribute it and/or modify"
  - "electron/src/auth/ProxyAuth.test.main.ts:7:34           either          U       Software Foundation, either version 3 of the License"
  - "electron/src/auth/ProxyAuth.test.main.ts:8:8            your            U       * (at your option) any later version"
  - "electron/src/auth/ProxyAuth.test.main.ts:8:25           later           U       at your option) any later version."
  - "electron/src/auth/ProxyAuth.test.main.ts:10:20          distributed     U       * This program is distributed in the hope that it"
  - "electron/src/auth/ProxyAuth.test.main.ts:10:39          hope            U       is distributed in the hope that it will be useful"
  - "electron/src/auth/ProxyAuth.test.main.ts:10:60          useful          U       hope that it will be useful,"
  - "electron/src/auth/ProxyAuth.test.main.ts:11:20          WARRANTY        U       * but WITHOUT ANY WARRANTY; without even the implied"
  - "electron/src/auth/ProxyAuth.test.main.ts:11:38          even            U       ANY WARRANTY; without even the implied warranty"
  - "electron/src/auth/ProxyAuth.test.main.ts:11:47          implied         U       WARRANTY; without even the implied warranty of"
  - "electron/src/auth/ProxyAuth.test.main.ts:11:55          warranty        U       without even the implied warranty of"
  - "electron/src/auth/ProxyAuth.test.main.ts:12:23          FITNESS         U       MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE"
  - "electron/src/auth/ProxyAuth.test.main.ts:12:37          PARTICULAR      U       CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the"
  - "electron/src/auth/ProxyAuth.test.main.ts:12:48          PURPOSE         U       FITNESS FOR A PARTICULAR PURPOSE. See the"
  - "electron/src/auth/ProxyAuth.test.main.ts:13:35          more            U       General Public License for more details."
  - "electron/src/auth/ProxyAuth.test.main.ts:16:4           along           U       * along with this program. If"
  - "electron/src/auth/ProxyAuth.test.main.ts:27:7           generates       U       it(\"generates a proxy URL using the"
  - "electron/src/auth/ProxyAuth.test.main.ts:27:29          using           U       generates a proxy URL using the operating system"
  - "electron/src/auth/ProxyAuth.test.main.ts:27:39          operating       U       proxy URL using the operating system's proxy settings"
  - "electron/src/auth/ProxyAuth.test.main.ts:29:14          wireproxy       U       host: 'wireproxy.com',"
  - "electron/src/auth/ProxyAuth.test.main.ts:43:51          passwords       U       characters like slashes in passwords', () => {"
  - "electron/src/auth/ProxyAuth.test.main.ts:59:23          wire            U       username: 'user@wire',"
  - "electron/src/auth/ProxyAuth.test.main.ts:72:18          myuser          U       username: 'myuser',"
  - "electron/src/auth/ProxyAuth.ts:43:17        Defaulting      U       logger.log('Defaulting to HTTP proxy');"
  - "electron/src/calling/PictureInPictureCall.ts:22:45          WIRE                U       PICTURE_CALL_FRAME_NAME = 'WIRE_PICTURE_IN_PICTURE_CALL"
  - "electron/src/calling/PictureInPictureCall.ts:34:5           fullscreenable      U       fullscreenable: true,"
  - "electron/src/calling/PictureInPictureCall.ts:35:5           maximizable         U       maximizable: true,"
  - "electron/src/calling/PictureInPictureCall.ts:37:5           minimizable         U       minimizable: true,"
  - "electron/src/lib/CertificateVerifyProcManager.ts:25:37          wireapp         U       certificateUtils from '@wireapp/certificate-check';"
  - "electron/src/lib/CertificateVerifyProcManager.ts:34:3           bypass          U       bypassDialogLock: boolean;"
  - "electron/src/lib/CertificateVerifyProcManager.ts:35:5           Checkbox        U       isCheckboxChecked: boolean;"
  - "electron/src/lib/CertificateVerifyProcManager.ts:36:5           Chromium        U       isChromiumError: boolean;"
  - "electron/src/lib/CertificateVerifyProcManager.ts:40:7           Indicates       U       /** Indicates success and disables"
  - "electron/src/lib/CertificateVerifyProcManager.ts:40:29          disables        U       Indicates success and disables Certificate Transparency"
  - "electron/src/lib/CertificateVerifyProcManager.ts:40:50          Transparency    U       disables Certificate Transparency verification */"
  - "electron/src/lib/CertificateVerifyProcManager.ts:43:7           CHROMIUM        U       USE_CHROMIUM_VALIDATION = -3,"
  - "electron/src/lib/CertificateVerifyProcManager.ts:59:35          Pinning         U       static bypassCertificatePinning = false;"
  - "electron/src/lib/CertificateVerifyProcManager.ts:71:23          PINNING         U       SHOW_DETAILS_TEXT_PINNING: getText('certificateVerifyPr"
  - "electron/src/lib/CertificateVerifyProcManager.ts:73:13          BYPASS          U       WARNING_BYPASS: getText('certificateVerifyPr"
  - "electron/src/lib/CertificateVerifyProcManager.ts:73:65          Bypass          U       ficateVerifyProcManagerWarningBypass'),"
  - "electron/src/lib/CertificateVerifyProcManager.ts:104:60         ability         U       message box with the ability to save the certificate"
  - "electron/src/lib/CertificateVerifyProcManager.ts:114:28         chosen          U       const {filePath: chosenPath} = await dialog"
  - "electron/src/lib/CertificateVerifyProcManager.ts:156:12         checkbox        U       const {checkboxChecked, response} ="
  - "electron/src/lib/CertificateVerifyProcManager.ts:171:51         pinning         U       disabled certificate pinning');"
  - "electron/src/lib/CertificateVerifyProcManager.ts:175:12         Postpone        U       // Postpone unlocking of the dialog"
  - "electron/src/lib/CertificateVerifyProcManager.ts:175:21         unlocking       U       // Postpone unlocking of the dialog so the"
  - "electron/src/lib/CertificateVerifyProcManager.ts:200:20         validated       U       const {hostname, validatedCertificate, verificationResul"
  - "electron/src/lib/CertificateVerifyProcManager.ts:217:40         Pinned          U       tificateUtils.hostnameShouldBePinned(hostname) && CertificateVerif"
  - "electron/src/lib/CertificateVerifyProcManager.ts:223:62         Displaying      U       inningResults.errorMessage}\". Displaying certificate pinning"
  - "electron/src/lib/CoreProtocol.test.main.ts:40:16        conversation    U       it('forwards conversation deep links to the WebApp"
  - "electron/src/lib/CoreProtocol.test.main.ts:43:21        called          U       sendActionSpy.calledWith("
  - "electron/src/lib/CoreProtocol.test.main.ts:57:20        logins          U       it('forwards SSO logins', async () => {"
  - "electron/src/lib/CoreProtocol.ts:25:9           shorten         U       import {shortenText} from './ElectronUtil"
  - "electron/src/lib/CoreProtocol.ts:39:12          CONVERSATION    U       const JOIN_CONVERSATION_FLOW = 'conversation"
  - "electron/src/lib/CoreProtocol.ts:47:18          Dispatching     U       logger.info('Dispatching deep link ...');"
  - "electron/src/lib/CoreProtocol.ts:55:41          ignoring        U       'Invalid deep link, ignoring');"
  - "electron/src/lib/CoreProtocol.ts:62:47          triggering      U       link is a SSO link, triggering SSO login ...');"
  - "electron/src/lib/CoreProtocol.ts:66:30          Conversation    U       await this.handleJoinConversation(route);"
  - "electron/src/lib/CoreProtocol.ts:72:22          Triggering      U       logger.info('Triggering hash location change"
  - "electron/src/lib/CoreProtocol.ts:89:20          Starting        U       logger.info('Starting SSO flow ...');"
  - "electron/src/lib/CoreProtocol.ts:94:23          Cannot          U       logger.error(`Cannot start SSO flow: ${error"
  - "electron/src/lib/CoreProtocol.ts:101:20         Joining         U       logger.info('Joining conversation ...');"
  - "electron/src/lib/CoreProtocol.ts:132:75         registered      U       customProtocolName}\" already registered`);"
  - "electron/src/lib/CoreProtocol.ts:134:20         Registering     U       logger.info(`Registering custom protocol \"${config"
  - "electron/src/lib/CoreProtocol.ts:145:31         looking         U       logger.info('App ready, looking for deep link in arguments"
  - "electron/src/lib/CoreProtocol.ts:155:38         detected        U       info('Second instance detected, looking for deep link"
  - "electron/src/lib/download.test.main.ts:25:7         converts    U       it('converts colons to dashes because"
  - "electron/src/lib/download.test.main.ts:25:16        colons      U       it('converts colons to dashes because colons"
  - "electron/src/lib/download.test.main.ts:25:26        dashes      U       'converts colons to dashes because colons cannot"
  - "electron/src/lib/download.test.main.ts:25:33        because     U       converts colons to dashes because colons cannot be used"
  - "electron/src/lib/download.test.main.ts:25:48        cannot      U       dashes because colons cannot be used in filenames"
  - "electron/src/lib/download.ts:26:34          commons         U       DateUtil} from '@wireapp/commons';"
  - "electron/src/lib/download.ts:37:16          formatted       U       const {date: formattedDate, time: formattedTime"
  - "electron/src/lib/ElectronUtil.ts:22:54          snippet     U       xecuteJavaScriptWithoutResult(snippet: string, target: WebContents"
  - "electron/src/lib/ElectronUtil.ts:23:11          removes     U       // This removes all trailing `;` and"
  - "electron/src/lib/ElectronUtil.ts:23:40          adds        U       all trailing `;` and adds `;0` at the end of the"
  - "electron/src/lib/eventType.ts:21:3          ABOUT           U       ABOUT: {"
  - "electron/src/lib/eventType.ts:68:5          REDO            U       REDO: 'EVENT_TYPE.EDIT.REDO"
  - "electron/src/lib/eventType.ts:70:5          UNDO            U       UNDO: 'EVENT_TYPE.EDIT.UNDO"
  - "electron/src/lib/eventType.ts:76:5          UNREAD          U       UNREAD_COUNT: 'EVENT_TYPE.LIFECYCLE"
  - "electron/src/lib/eventType.ts:86:5          SUBMITTED       U       SUBMITTED: 'EVENT_TYPE.PROXY_PROMPT"
  - "electron/src/lib/eventType.ts:91:5          THEME           U       THEME_UPDATE: 'EVENT_TYPE"
  - "electron/src/lib/eventType.ts:99:3          WRAPPER         U       WRAPPER: {"
  - "electron/src/lib/eventType.ts:101:5         RELAUNCH        U       RELAUNCH: 'EVENT_TYPE.WRAPPER"
  - "electron/src/lib/LocalAccountDeletion.ts:42:9           truncated       U       const truncatedId = truncate(accountId"
  - "electron/src/lib/LocalAccountDeletion.ts:48:24          Unable          U       throw new Error(`Unable to find webview content"
  - "electron/src/lib/LocalAccountDeletion.ts:51:60          wiped           U       can have its storage wiped');"
  - "electron/src/lib/LocalAccountDeletion.ts:53:17          Deleting        U       logger.log(`Deleting session data for account"
  - "electron/src/lib/LocalAccountDeletion.ts:62:6           therefore       U       // therefore partitionId is optional"
  - "electron/src/lib/openGraph.test.main.ts:30:7        russian         U       const russianMessage = 'Привет из"
  - "electron/src/lib/openGraph.test.main.ts:30:25       Привет          U       const russianMessage = 'Привет из нока!';"
  - "electron/src/lib/openGraph.test.main.ts:30:35       нока            U       russianMessage = 'Привет из нока!';"
  - "electron/src/lib/openGraph.test.main.ts:57:21       reqheaders      U       nock(exampleUrl, {reqheaders: {Cookie: cookieText"
  - "electron/src/lib/openGraph.test.main.ts:70:7        decodes         U       it('decodes a text encoded with"
  - "electron/src/lib/openGraph.test.main.ts:85:35       charsets        U       defaults to utf8 on invalid charsets', async () => {"
  - "electron/src/lib/openGraph.test.main.ts:98:28       didn't          U       assert.fail(`Request didn't throw`);"
  - "electron/src/lib/openGraph.test.main.ts:104:7       saves           U       it('saves cookies on requests"
  - "electron/src/lib/openGraph.ts:34:16         adapter         U       axios.defaults.adapter = require('axios/lib"
  - "electron/src/lib/openGraph.ts:34:45         adapters        U       require('axios/lib/adapters/http'); // always use"
  - "electron/src/lib/openGraph.ts:36:7          arrayify        U       const arrayify = <T>(value: T[] | T"
  - "electron/src/lib/openGraph.ts:123:56        generation      U       format for open graph generation (Content-Type is \"$"
  - "electron/src/lib/openGraph.ts:131:40        must            U       'end' event handler must be first: https://github"
  - "electron/src/lib/openGraph.ts:172:25        Twitterbot      U       config.userAgent = 'Twitterbot/1.0';"
  - "electron/src/locale/index.ts:48:50          Persistence     U       settings/ConfigurationPersistence';"
  - "electron/src/locale/index.ts:113:8          English         U       en: 'English',"
  - "electron/src/locale/index.ts:114:8          Čeština         U       cs: 'Čeština',"
  - "electron/src/locale/index.ts:115:8          Dansk           U       da: 'Dansk',"
  - "electron/src/locale/index.ts:116:8          Deutsch         U       de: 'Deutsch',"
  - "electron/src/locale/index.ts:117:8          Ελληνικά        U       el: 'Ελληνικά',"
  - "electron/src/locale/index.ts:118:8          Eesti           U       et: 'Eesti',"
  - "electron/src/locale/index.ts:119:8          Español         U       es: 'Español',"
  - "electron/src/locale/index.ts:120:8          Français        U       fr: 'Français',"
  - "electron/src/locale/index.ts:121:8          Hrvatski        U       hr: 'Hrvatski',"
  - "electron/src/locale/index.ts:122:8          Italiano        U       it: 'Italiano',"
  - "electron/src/locale/index.ts:123:8          Lietuvos        U       lt: 'Lietuvos',"
  - "electron/src/locale/index.ts:124:8          Magyar          U       hu: 'Magyar',"
  - "electron/src/locale/index.ts:125:8          Nederlands      U       nl: 'Nederlands',"
  - "electron/src/locale/index.ts:126:8          Polski          U       pl: 'Polski',"
  - "electron/src/locale/index.ts:127:8          Português       U       pt: 'Português do Brasil',"
  - "electron/src/locale/index.ts:128:8          Română          U       ro: 'Română',"
  - "electron/src/locale/index.ts:129:8          Русский         U       ru: 'Русский',"
  - "electron/src/locale/index.ts:131:8          Slovenčina      U       sk: 'Slovenčina',"
  - "electron/src/locale/index.ts:132:8          Slovenščina     U       sl: 'Slovenščina',"
  - "electron/src/locale/index.ts:133:8          Suomi           U       fi: 'Suomi',"
  - "electron/src/locale/index.ts:134:8          Türkçe          U       tr: 'Türkçe',"
  - "electron/src/locale/index.ts:135:8          Українська      U       uk: 'Українська',"
  - "electron/src/locale/index.ts:155:13         Replacements    U       const customReplacements: Record<string, string"
  - "electron/src/locale/index.ts:170:9          replacements    U       const replacements: Record<string, string"
  - "electron/src/logging/getLogger.ts:21:13         logdown         U       import * as logdown from 'logdown';"
  - "electron/src/logging/getLogger.ts:35:47         production      U       config.environment !== 'production';"
  - "electron/src/logging/loggerUtils.ts:33:68       Symbolic    U       absolute, cwd: base, followSymbolicLinks: false, onlyFiles"
  - "electron/src/main.ts:30:10          Capturer        U       desktopCapturer,"
  - "electron/src/main.ts:35:19          Keeper          U       import windowStateKeeper from 'electron-window"
  - "electron/src/main.ts:64:9           Tray            U       import {TrayHandler} from './menu"
  - "electron/src/main.ts:72:9           About           U       import {AboutWindow} from './window"
  - "electron/src/main.ts:85:46          wrapper         U       join(APP_PATH, 'css/wrapper.css');"
  - "electron/src/main.ts:117:32         enforced        U       title: locale.getText('enforcedDownloadComplete'),"
  - "electron/src/main.ts:119:65         downloads       U       DownloadPath) ?? app.getPath('downloads'),"
  - "electron/src/main.ts:138:20         Using           U       logger.info(`Using proxy server URL from"
  - "electron/src/main.ts:141:20         socks           U       if (!/^(https?|socks[45]):$/.test(proxyInfoArg"
  - "electron/src/main.ts:153:23         logo            U       const iconFileName = `logo.${EnvironmentUtil.platform"
  - "electron/src/main.ts:155:9          needs           U       // This needs to stay global, see"
  - "electron/src/main.ts:155:18         stay            U       // This needs to stay global, see"
  - "electron/src/main.ts:157:5          tray            U       let tray: TrayHandler;"
  - "electron/src/main.ts:160:7          Quitting        U       let isQuitting = false;"
  - "electron/src/main.ts:169:4          Squirrel        U       // Squirrel setup"
  - "electron/src/main.ts:172:15         mdns            U       // do not use mdns for local ip obfuscation"
  - "electron/src/main.ts:172:33         obfuscation     U       use mdns for local ip obfuscation to prevent windows firewall"
  - "electron/src/main.ts:172:64         firewall        U       bfuscation to prevent windows firewall prompt"
  - "electron/src/main.ts:173:73         Mdns            U       WebRtcHideLocalIpsWithMdns');"
  - "electron/src/main.ts:192:64         Flash           U       event, {count, ignoreFlash}: {count?: number; ignoreFlas"
  - "electron/src/main.ts:193:14         Unread          U       tray.showUnreadCount(main, count, ignoreFlash"
  - "electron/src/main.ts:200:59         relaunch        U       RELAUNCH, () => lifecycle.relaunch());"
  - "electron/src/main.ts:210:31         locally         U       save the downloadPath locally"
  - "electron/src/main.ts:218:16         still           U       // if a user still has the old config version"
  - "electron/src/main.ts:218:70         maximized       U       and had the window maximized last time"
  - "electron/src/main.ts:219:32         Maximized       U       typeof mainWindowState.isMaximized === 'undefined' && isFullScre"
  - "electron/src/main.ts:220:10         maximize        U       main.maximize();"
  - "electron/src/main.ts:280:17         Throttling      U       backgroundThrottling: false,"
  - "electron/src/main.ts:281:14         Isolation       U       contextIsolation: false,"
  - "electron/src/main.ts:312:109        exist           U       \". Does the account exist?`),"
  - "electron/src/main.ts:336:30         Shortcuts       U       systemMenu.registerGlobalShortcuts();"
  - "electron/src/main.ts:337:10         flash           U       main.flashFrame(false);"
  - "electron/src/main.ts:350:42         leaving         U       Fullscreen detected, leaving full screen before hiding"
  - "electron/src/main.ts:350:69         hiding          U       leaving full screen before hiding...');"
  - "electron/src/main.ts:360:26         gone            U       app.on('render-process-gone', async (event, _, details"
  - "electron/src/main.ts:361:31         crashed         U       logger.error('WebContents crashed. Will reload the window"
  - "electron/src/main.ts:416:50         applying        U       system proxy settings, applying settings on the main"
  - "electron/src/main.ts:426:40         submitted       U       log('Proxy info was submitted via prompt');"
  - "electron/src/main.ts:448:65         here            U       mode: 'auto_detect'` here"
  - "electron/src/main.ts:504:15         Workarounds     U       const addLinuxWorkarounds = (): void => {"
  - "electron/src/main.ts:506:30         Unity           U       Fix indicator icon on Unity"
  - "electron/src/main.ts:512:38         Gnome           U       nvironmentUtil.linuxDesktop.isGnomeX11"
  - "electron/src/main.ts:519:13         Portable        U       const handlePortableFlags = (): void =>"
  - "electron/src/main.ts:520:67         PORTABLE        U       argv[config.ARGUMENT.PORTABLE]) {"
  - "electron/src/main.ts:523:31         APPIMAGE        U       path.join(process.env.APPIMAGE || process.execPath"
  - "electron/src/main.ts:525:17         Saving          U       logger.log(`Saving user data to \"${USER"
  - "electron/src/main.ts:533:11         Socks           U       const isSocksProxy = proxyProtocol"
  - "electron/src/main.ts:536:28         NTLM            U       webContents.session.allowNTLMCredentialsForDomains"
  - "electron/src/main.ts:542:15         Wrapper         U       class ElectronWrapperInit {"
  - "electron/src/main.ts:577:16         hardening       U       // <webview> hardening"
  - "electron/src/main.ts:621:8          Keeping         U       // Keeping this Function for future"
  - "electron/src/main.ts:625:26         Navigating      U       this.logger.log(`Navigating inside <webview>. URL"
  - "electron/src/main.ts:636:44         everything      U       Windows by default on everything"
  - "electron/src/main.ts:647:40         Insecure        U       webPreferences.allowRunningInsecureContent = false;"
  - "electron/src/main.ts:673:19         styling         U       const stylingRegex = /(color:#|font"
  - "electron/src/main.ts:749:4          Reloads         U       // Reloads the entire view when"
  - "electron/src/main.ts:749:16         entire          U       // Reloads the entire view when a `relaunch"
  - "electron/src/main.ts:750:14         Relaunch        U       lifecycle.addRelaunchListeners(async () ="
  - "electron/src/main.ts:755:9          further         U       // Stop further execution on update"
  - "electron/src/menu/developer.ts:23:12        Availeble       U       import {getAvailebleEnvironments, setEnvironment"
  - "electron/src/menu/system.ts:21:23       Shortcut        U       import {dialog, globalShortcut, ipcMain, Menu, MenuItemConst"
  - "electron/src/menu/system.ts:43:7        launcher        U       const launcher = new autoLaunch({"
  - "electron/src/menu/system.ts:83:7        spelling        U       const spellingTemplate: MenuItemConstructorO"
  - "electron/src/menu/system.ts:192:34      Undo            U       locale.getText('menuUndo'),"
  - "electron/src/menu/system.ts:197:34      Redo            U       locale.getText('menuRedo'),"
  - "electron/src/menu/system.ts:229:34      Minimize        U       locale.getText('menuMinimize'),"
  - "electron/src/menu/system.ts:230:14      minimize        U       role: 'minimize',"
  - "electron/src/menu/system.ts:270:14      removing        U       // TODO: removing these temporarily until"
  - "electron/src/menu/system.ts:270:23      these           U       // TODO: removing these temporarily until such"
  - "electron/src/menu/system.ts:270:29      temporarily     U       TODO: removing these temporarily until such a time as"
  - "electron/src/menu/system.ts:316:38      Others          U       locale.getText('menuHideOthers'),"
  - "electron/src/menu/system.ts:391:30      Later           U       locale.getText('restartLater'),"
  - "electron/src/menu/system.ts:499:42      shortcut        U       Registering global mute shortcut \"${muteAccelerator}"
  - "electron/src/menu/system.ts:507:47      switching       U       Registering global account switching shortcut \"${switchAccelerator"
  - "electron/src/menu/system.ts:518:43      shortcuts       U       Unregistering all global shortcuts ...');"
  - "electron/src/menu/TrayHandler.test.main.ts:28:7         fixtures    U       const fixturesDir = path.join(__dirname"
  - "electron/src/menu/TrayHandler.test.main.ts:29:11        Mock        U       const TrayMock = new Tray(path.join"
  - "electron/src/menu/TrayHandler.test.main.ts:47:41        stops       U       the badge counter and stops flashing the app frame"
  - "electron/src/menu/TrayHandler.test.main.ts:47:47        flashing    U       badge counter and stops flashing the app frame when app"
  - "electron/src/menu/TrayHandler.test.main.ts:83:11        flashes     U       it('flashes the app frame when app"
  - "electron/src/menu/TrayHandler.test.main.ts:101:65       been        U       the window has already been flashed', async ()"
  - "electron/src/menu/TrayHandler.test.main.ts:101:70       flashed     U       window has already been flashed', async () => {"
  - "electron/src/menu/TrayHandler.ts:50:52          gnome               U       linuxDesktop.isGnomeX11 ? '.gnome' : '@3x'}.png`;"
  - "electron/src/menu/TrayHandler.ts:55:37          taskbar             U       path.join(IMAGE_ROOT, 'taskbar.overlay.png'),"
  - "electron/src/menu/TrayHandler.ts:104:21         leads               U       flashFrame() leads to a constant bouncing"
  - "electron/src/menu/TrayHandler.ts:104:41         bouncing            U       leads to a constant bouncing of the dock icon on"
  - "electron/src/menu/TrayHandler.ts:104:57         dock                U       constant bouncing of the dock icon on macOS."
  - "electron/src/menu/TrayHandler.ts:105:37         directly            U       calling the dock.bounce() directly, we avoid this behavior"
  - "electron/src/menu/TrayHandler.ts:105:50         avoid               U       bounce() directly, we avoid this behavior. the"
  - "electron/src/menu/TrayHandler.ts:105:76         informational       U       this behavior. the \"informational\""
  - "electron/src/menu/TrayHandler.ts:106:35         makes               U       optional (default), but makes it easier to read"
  - "electron/src/menu/TrayHandler.ts:106:44         easier              U       default), but makes it easier to read"
  - "electron/src/menu/TrayHandler.ts:130:56         unread              U       overlayImage, locale.getText('unreadMessages'));"
  - "electron/src/preload/menu/preload-about.test.renderer.ts:31:7           publishes       U       it('publishes labels', done => {"
  - "electron/src/preload/menu/preload-context.ts:107:41         Misspelling     U       webContents.replaceMisspelling(suggestion),"
  - "electron/src/preload/menu/preload-context.ts:148:23         consist         U       // Code block can consist of many tags: CODE,"
  - "electron/src/preload/preload-app.ts:46:62       accountid       U       WebviewTag>(`.Webview[data-accountid=\"${id}\"]`);"
  - "electron/src/preload/preload-app.ts:84:68       redo            U       getSelectedWebview()?.redo());"
  - "electron/src/preload/preload-app.ts:86:68       undo            U       getSelectedWebview()?.undo());"
  - "electron/src/preload/preload-webview.ts:25:52       messaging       U       from '@wireapp/protocol-messaging';"
  - "electron/src/preload/preload-webview.ts:35:3        accent          U       accentID: number;"
  - "electron/src/preload/preload-webview.ts:37:3        dark            U       darkMode: boolean;"
  - "electron/src/preload/preload-webview.ts:45:6        Theme           U       type Theme = 'dark' | 'default"
  - "electron/src/preload/preload-webview.ts:52:16       Dark            U       const useDarkMode = remote.nativeTheme"
  - "electron/src/preload/preload-webview.ts:53:20       Switching       U       logger.info(`Switching dark mode ${useDarkMode"
  - "electron/src/preload/preload-webview.ts:54:75       DARK            U       UPDATE.INTERFACE.USE_DARK_MODE, useDarkMode);"
  - "electron/src/preload/preload-webview.ts:146:77      theme           U       UPDATE.INTERFACE.THEME, (theme: Theme) => {"
  - "electron/src/preload/preload-webview.ts:158:41      SHORTCUT        U       publish(WebAppEvents.SHORTCUT.ADD_PEOPLE);"
  - "electron/src/preload/preload-webview.ts:196:50      SILENCE         U       WebAppEvents.SHORTCUT.SILENCE);"
  - "electron/src/preload/preload-webview.ts:263:25      improved        U       @todo: This can be improved by polyfilling getDisplayMedi"
  - "electron/src/preload/preload-webview.ts:263:37      polyfilling     U       This can be improved by polyfilling getDisplayMedia function"
  - "electron/src/preload/preload-webview.ts:279:91      Popout          U       VERSION, supportsCallingPopoutWindow: true};"
  - "electron/src/preload/preload-webview.ts:286:26      MILLIS          U       const HALF_SECOND_IN_MILLIS = 500;"
  - "electron/src/preload/preload-webview.ts:288:20      Attempting      U       logger.info('Attempting to register event handlers"
  - "electron/src/preload/preload-webview.ts:309:4       overwrite       U       // overwrite window.close() to prevent"
  - "electron/src/preload/preload-webview.ts:309:60      itself          U       webapp from closing itself"
  - "electron/src/preload/preload-webview.ts:310:8       SQSERVICES      U       // see SQSERVICES-1882 and SQSERVICES"
  - "electron/src/runtime/EnvironmentUtil.ts:31:3        PRODUCTION      U       PRODUCTION = 'PRODUCTION',"
  - "electron/src/runtime/EnvironmentUtil.ts:46:36       Production      U       PRODUCTION]: {name: 'Production', server: ServerType"
  - "electron/src/runtime/EnvironmentUtil.ts:90:7        there           U       * If there is a custom url set"
  - "electron/src/runtime/EnvironmentUtil.ts:101:4       Gives           U       * Gives all the environments"
  - "electron/src/runtime/EnvironmentUtil.ts:103:74      against         U       environment the app can run against"
  - "electron/src/runtime/lifecycle.ts:31:38         squirrel        U       Squirrel from '../update/squirrel';"
  - "electron/src/runtime/lifecycle.ts:87:16         Initiating      U       logger.info('Initiating app quit ...');"
  - "electron/src/runtime/lifecycle.ts:91:18         Clearing        U       logger.info('Clearing cache ...');"
  - "electron/src/runtime/lifecycle.ts:100:16        Exiting         U       logger.info('Exiting ...');"
  - "electron/src/runtime/lifecycle.ts:105:16        Relaunching     U       logger.info('Relaunching the app ...');"
  - "electron/src/runtime/lifecycle.ts:108:28        possible        U       on MacOS, it is not possible to relaunch the app"
  - "electron/src/runtime/lifecycle.ts:108:61        just            U       relaunch the app, so just fallback"
  - "electron/src/runtime/lifecycle.ts:109:11        reloading       U       * to reloading all the webviews"
  - "electron/src/settings/config.ts:60:15       portable    U       PORTABLE = 'portable',"
  - "electron/src/settings/config.ts:65:3        DLPATH      U       DLPATH = 'dlpath',"
  - "electron/src/settings/config.ts:65:13       dlpath      U       DLPATH = 'dlpath',"
  - "electron/src/settings/config.ts:77:68       KHTML       U       AppleWebKit/537.36 (KHTML, like Gecko) Chrome"
  - "electron/src/settings/config.ts:77:80       Gecko       U       537.36 (KHTML, like Gecko) Chrome/69.0.3497.1"
  - "electron/src/settings/config.ts:77:108      Safari      U       Chrome/69.0.3497.100 Safari/537.36',"
  - "electron/src/settings/ConfigurationPersistence.ts:25:15         Updater         U       import {SchemaUpdater} from './SchemaUpdater"
  - "electron/src/settings/ConfigurationPersistence.ts:57:23         Restoring       U       this.logger.info(`Restoring \"${name}\"`);"
  - "electron/src/settings/ConfigurationPersistence.ts:70:35         occurred        U       logger.error('An error occurred while persisting the"
  - "electron/src/settings/ConfigurationPersistence.ts:70:50         persisting      U       error occurred while persisting the configuration',"
  - "electron/src/settings/ConfigurationPersistence.ts:83:65         sensible        U       the latest schema with sensible defaults:"
  - "electron/src/settings/SettingsType.ts:21:32         Wire's          U       Settings that can be set in Wire's \"init.json\" file to"
  - "electron/src/settings/SettingsType.ts:31:41         wearezeta       U       Library/Containers/com.wearezeta.zclient.mac/Data/Library"
  - "electron/src/settings/SettingsType.ts:31:51         zclient         U       Containers/com.wearezeta.zclient.mac/Data/Library/Application"
  - "electron/src/settings/SettingsType.ts:37:39         premise         U       app URL to use in on-premise deployments. The \"env"
  - "electron/src/settings/SettingsType.ts:49:7          Defines         U       /** Defines the proxy server url"
  - "electron/src/settings/SettingsType.ts:57:35         shall           U       which part of the screen shall the app be initially"
  - "electron/src/settings/SettingsType.ts:57:52         initially       U       screen shall the app be initially rendered? */"
  - "electron/src/sso/AutomatedSingleSignOn.ts:27:3          reached     U       reachedMaximumAccounts?: boolean"
  - "electron/src/sso/AutomatedSingleSignOn.ts:38:54         Singular    U       wrapperAddAccountErrorMessageSingular');"
  - "electron/src/sso/SingleSignOn.ts:62:16          SESS            U       AUTH_ERROR_SESS_NOT_AVAILABLE: 'AUTH"
  - "electron/src/sso/SingleSignOn.ts:88:17          ephemeral       U       // Create a ephemeral and isolated session"
  - "electron/src/sso/SingleSignOn.ts:103:50         otherwise       U       create the window before otherwise it does not work"
  - "electron/src/sso/SingleSignOn.ts:141:43         pages           U       windows (open external pages in OS browser)"
  - "electron/src/sso/SingleSignOn.ts:193:13         authenticity    U       // Ensure authenticity of the window from within"
  - "electron/src/sso/SingleSignOn.ts:212:59         zuid            U       cookies.get({name: 'zuid'});"
  - "electron/src/sso/SingleSignOn.ts:246:62         consumed        U       not be set or has been consumed');"
  - "electron/src/sso/SingleSignOn.ts:269:13         Registered      U       const isRegistered = session.protocol.isProtocol"
  - "electron/src/sso/SingleSignOn.ts:304:28         provided        U       Ensure guest window provided type is valid"
  - "electron/src/sso/SingleSignOn.ts:307:47         aborting        U       Invalid type detected, aborting.');"
  - "electron/src/sso/SingleSignOn.ts:310:8          Fake            U       // Fake postMessage to the webview"
  - "electron/src/types/globals.d.ts:39:51       would           U       encrypt/decrypt methods would take and return Uint"
  - "electron/src/types/globals.d.ts:39:102      them            U       Array (and try to parse them as base64)"
  - "electron/src/types/globals.d.ts:40:76       assumption      U       and return string (no assumption on the format (base"
  - "electron/src/update/shortcuts.ts:31:61          Explorer        U       'Microsoft/Internet Explorer/Quick Launch/User Pinned"
  - "electron/src/update/shortcuts.ts:33:74          Programs        U       Microsoft/Windows/Start Menu/Programs', linkName),"
  - "electron/src/update/shortcuts.ts:39:9           documented      U       // As documented in https://github.com"
  - "electron/src/update/shortcuts.ts:40:46          clicks          U       problems with notification clicks on Windows 10."
  - "electron/src/update/shortcuts.ts:41:10          easiest         U       // The easiest workaround is to create"
  - "electron/src/update/shortcuts.ts:41:18          workaround      U       // The easiest workaround is to create shortcuts"
  - "electron/src/update/squirrel.ts:50:6        SQUIRREL    U       enum SQUIRREL_EVENT {"
  - "electron/src/update/squirrel.ts:61:11       spawned     U       const spawnedProcess = childProcess"
  - "electron/src/update/squirrel.ts:92:24       updater     U       logger.info(`Running updater with args ${JSON.stringify"
  - "electron/src/window/AboutWindow.ts:92:25        broken          U       // will-navigate is broken with sandboxed env,"
  - "electron/src/window/AboutWindow.ts:92:52        intercepting    U       with sandboxed env, intercepting requests instead"
  - "electron/src/window/AboutWindow.ts:92:74        instead         U       intercepting requests instead"
  - "electron/src/window/AboutWindow.ts:95:21        those           U       // Only allow those URLs to be opened within"
  - "electron/src/window/WindowManager.ts:52:27          Minimized       U       if (browserWindow.isMinimized()) {"
  - "electron/src/window/WindowManager.ts:88:67          want            U       queue the action we want to send. It will be"
  - "electron/src/window/WindowManager.ts:88:92          flushed         U       to send. It will be flushed later on by the flushActionsQ"
  - "electron/src/window/WindowUtil.test.main.ts:21:9        stub            U       import {stub, SinonStub} from 'sinon"
  - "electron/src/window/WindowUtil.test.main.ts:21:20       Stub            U       import {stub, SinonStub} from 'sinon';"
  - "electron/src/window/WindowUtil.test.main.ts:42:9        opens           U       it('opens secure URLs externally"
  - "electron/src/window/WindowUtil.test.main.ts:42:27       externally      U       it('opens secure URLs externally', async () => {"
  - "electron/src/window/WindowUtil.test.main.ts:50:15       insecure        U       it('opens insecure URLs externally if allowed"
  - "electron/src/window/WindowUtil.test.main.ts:58:9        doesn't         U       it(`doesn't open insecure URLs externally"
  - "electron/src/window/WindowUtil.test.main.ts:67:26       attacker        U       const url = 'smb://attacker.tld/public/pwn.desktop"
  - "electron/src/window/WindowUtil.ts:32:11         Rectangle       U       interface Rectangle {"
  - "electron/src/window/WindowUtil.ts:39:59         rectangle       U       point: [number, number], rectangle: Rectangle): boolean"
  - "electron/src/window/WindowUtil.ts:40:11         Coordinate      U       const [xCoordinate, yCoordinate] = point"
  - "electron/src/window/WindowUtil.ts:130:3         movable         U       movable: true,"
  - "README.md:5:61          find                U       code of Wire. You can find more information at"
  - "README.md:5:121         contacting          U       https://wire.com) or by contacting opensource@wire.com"
  - "README.md:9:5           licensing           U       For licensing information, see the"
  - "README.md:11:41         that                U       open source software that we make available from"
  - "README.md:11:85         develop             U       from time to time to develop your own mobile, desktop"
  - "README.md:11:142        cause               U       web application, and cause that application to"
  - "README.md:11:199        purposes            U       our servers for any purposes, we refer to that resulting"
  - "README.md:11:212        refer               U       for any purposes, we refer to that resulting application"
  - "README.md:11:226        resulting           U       purposes, we refer to that resulting application as an “Open"
  - "README.md:11:298        subject             U       Open Source Apps are subject to, and may only be"
  - "README.md:11:338        commercialized      U       only be used and/or commercialized in accordance with,"
  - "README.md:11:356        accordance          U       or commercialized in accordance with, the Terms of Use"
  - "README.md:11:390        applicable          U       with, the Terms of Use applicable to the Wire Application"
  - "README.md:11:439        found               U       Application, which can be found at https://wire.com"
  - "README.md:11:479        Additionally        U       wire.com/legal/#terms. Additionally, if you choose to build"
  - "README.md:11:500        choose              U       Additionally, if you choose to build an Open Source"
  - "README.md:11:536        certain             U       an Open Source App, certain restrictions apply,"
  - "README.md:11:544        restrictions        U       Source App, certain restrictions apply, as follows:"
  - "README.md:11:567        follows             U       restrictions apply, as follows:"
  - "README.md:13:8          agree               U       a. You agree not to change the way"
  - "README.md:13:56         connects            U       the Open Source App connects and interacts with our"
  - "README.md:13:69         interacts           U       Source App connects and interacts with our servers; b"
  - "README.md:13:117        weaken              U       b. You agree not to weaken any of the security"
  - "README.md:13:246        than                U       data for purposes other than the intended and original"
  - "README.md:13:255        intended            U       purposes other than the intended and original functionality"
  - "README.md:13:268        original            U       than the intended and original functionality of the"
  - "README.md:13:277        functionality       U       intended and original functionality of the Open Source App"
  - "README.md:13:347        solely              U       acknowledge that you are solely responsible for any"
  - "README.md:13:354        responsible         U       that you are solely responsible for any and all updates"
  - "README.md:15:5          clarity             U       For clarity, if you compile the"
  - "README.md:15:251        will                U       then that application will not be deemed an Open"
  - "README.md:15:263        deemed              U       application will not be deemed an Open Source App and"
  - "README.md:15:297        foregoing           U       Open Source App and the foregoing will not apply to that"
  - "README.md:17:15         granted             U       No license is granted to the Wire trademark"
  - "README.md:17:35         trademark           U       granted to the Wire trademark and its associated logos"
  - "README.md:17:64         logos               U       trademark and its associated logos, all of which will continue"
  - "README.md:17:104        owned               U       will continue to be owned exclusively by Wire"
  - "README.md:17:110        exclusively         U       continue to be owned exclusively by Wire Swiss GmbH."
  - "README.md:17:203        expressly           U       associated logos is expressly prohibited without the"
  - "README.md:17:213        prohibited          U       associated logos is expressly prohibited without the express"
  - "README.md:17:244        prior               U       without the express prior written consent of Wire"
  - "README.md:17:250        written             U       without the express prior written consent of Wire Swiss"
  - "README.md:17:258        consent             U       express prior written consent of Wire Swiss GmbH."
  - "README.md:21:29         wrapping            U       platform desktop app, wrapping the [wire-webapp](https"
  - "README.md:23:5          Prerequisites       U       ### Prerequisites"
  - "README.md:28:27         official            U       Yarn (Install using the official instructions at https"
  - "README.md:28:36         instructions        U       Install using the official instructions at https://yarnpkg.com"
  - "README.md:28:121        recommended         U       not using the package recommended by apt-get)"
  - "README.md:61:30         varies              U       Feature development) | (varies) | commit | x.y+3 (e"
  - "README.md:62:6          Nightly             U       | 2 (Nightly test automation) |"
  - "README.md:63:6          Internal            U       | 3 (Internal release) | [staging"
  - "README.md:63:27         staging             U       Internal release) | [staging](https://github.com"
  - "README.md:86:14         like                U       If you would like to build for another"
  - "README.md:86:32         another             U       would like to build for another Linux target, run the"
  - "README.md:86:62         following           U       Linux target, run the following command:"
  - "README.md:93:59         Have                U       target (e.g. `rpm`). Have a look at the [documentation"
  - "README.md:93:66         look                U       e.g. `rpm`). Have a look at the [documentation"
  - "README.md:93:192        Multiple            U       the available targets. Multiple targets can be combined"
  - "README.md:93:216        combined            U       Multiple targets can be combined by comma separation"
  - "README.md:93:234        separation          U       be combined by comma separation (e.g. `rpm,deb`). Note"
  - "README.md:93:283        offer               U       Note that we cannot offer support for uncommon"
  - "README.md:93:301        uncommon            U       cannot offer support for uncommon targets."
  - "README.md:95:1          Furthermore         U       Furthermore, you can disable [asar"
  - "README.md:95:31         asar                U       Furthermore, you can disable [asar packaging](https://www"
  - "README.md:95:149        needed              U       recommended, but e.g. needed for target `dir`) by"
  - "README.md:95:193        ASAR                U       by setting `ENABLE_ASAR=\"false\"` before building"
  - "README.md:95:199        false               U       setting `ENABLE_ASAR=\"false\"` before building. Example"
  - "README.md:95:207        before              U       ENABLE_ASAR=\"false\"` before building. Example:"
  - "README.md:95:224        Example             U       false\"` before building. Example:"
  - "README.md:102:5         Troubleshooting     U       ### Troubleshooting"
  - "README.md:104:12        having              U       If you are having troubles building Wire"
  - "README.md:104:19        troubles            U       If you are having troubles building Wire for Desktop"
  - "README.md:104:65        troubleshooting     U       for Desktop, then [our troubleshooting page](https://github"
  - "README.md:104:149       might               U       wiki/Troubleshooting) might be of help."
  - "README.md:104:161       help                U       Troubleshooting) might be of help."
  - "README.md:106:5         Translations        U       ### Translations"
  - "README.md:108:10        translations        U       All Wire translations are crowdsourced via"
  - "README.md:108:27        crowdsourced        U       Wire translations are crowdsourced via [Crowdin](https"
  - "README.md:112:12        course              U       You can of course use the webapp in your"
  - "README.md:112:62        prefer              U       browser, but if you prefer to install wire-desktop"
  - "SECURITY.md:1:1         Please      U       Please check Wire's [global"
