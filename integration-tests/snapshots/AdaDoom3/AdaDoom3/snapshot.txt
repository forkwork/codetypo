
Repository: AdaDoom3/AdaDoom3
Url: "https://github.com/AdaDoom3/AdaDoom3.git"
Args: ["**/*.*"]
Lines:
 Dictionary Error with (en_us) Error: ENOENT: no such file or directory, open './dictionaries/en_US/en_US.trie.gz'
 exit code: 1
-------------------------------------------
-------------------------------------------
CodeTypo: Files checked: 103, Issues found: 23464 in 101 files with 4 errors.
Dictionary Error with (en_us) Error: ENOENT: no such file or directory, open './dictionaries/en_US/en_US.trie.gz'
Dictionary Error with (filetypes) Error: ENOENT: no such file or directory, open './dictionaries/filetypes/filetypes.txt.gz'
Dictionary Error with (filetypes) Error: ENOENT: no such file or directory, open './dictionaries/filetypes/filetypes.txt.gz'
Dictionary Error with (html-symbol-entities) Error: ENOENT: no such file or directory, open './dictionaries/html-symbol-entities/entities.txt.gz'
Dictionary Error with (html-symbol-entities) Error: ENOENT: no such file or directory, open './dictionaries/html-symbol-entities/entities.txt.gz'
Dictionary Error with (public-licenses) Error: ENOENT: no such file or directory, open './dictionaries/public-licenses/public-licenses.txt.gz'
Dictionary Error with (public-licenses) Error: ENOENT: no such file or directory, open './dictionaries/public-licenses/public-licenses.txt.gz'
Engine/Assembly/PPC/neo-engine-cpu.adb:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/Assembly/PPC/neo-engine-cpu.adb:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/Assembly/PPC/neo-engine-cpu.adb:10:110    - Unknown word (warranty)     -- without even the implied warranty of                -
Engine/Assembly/PPC/neo-engine-cpu.adb:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/Assembly/PPC/neo-engine-cpu.adb:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/Assembly/PPC/neo-engine-cpu.adb:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/Assembly/PPC/neo-engine-cpu.adb:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/Assembly/PPC/neo-engine-cpu.adb:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/Assembly/PPC/neo-engine-cpu.adb:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/Assembly/PPC/neo-engine-cpu.adb:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/Assembly/PPC/neo-engine-cpu.adb:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/Assembly/PPC/neo-engine-cpu.adb:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/Assembly/PPC/neo-engine-cpu.adb:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/Assembly/PPC/neo-engine-cpu.adb:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/Assembly/PPC/neo-engine-cpu.adb:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/Assembly/PPC/neo-engine-cpu.adb:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/Assembly/PPC/neo-engine-cpu.adb:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/Assembly/PPC/neo-engine-cpu.adb:5:52      - Unknown word (Copyright)  -- Copyright (C) 2016 Justin Squirek
Engine/Assembly/PPC/neo-engine-cpu.adb:5:71      - Unknown word (Justin)     -- Copyright (C) 2016 Justin Squirek
Engine/Assembly/PPC/neo-engine-cpu.adb:5:78      - Unknown word (Squirek)    -- Copyright (C) 2016 Justin Squirek
Engine/Assembly/PPC/neo-engine-cpu.adb:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/Assembly/PPC/neo-engine-cpu.adb:8:30      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/Assembly/PPC/neo-engine-cpu.adb:8:70      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/Assembly/PPC/neo-engine-cpu.adb:8:87      - Unknown word (later)        -- at your option) any later version.
Engine/Assembly/x86-64/neo-engine-cpu.adb:100:111   - Unknown word (POPCNT)       -- ECX_Register, 23); -- POPCNT
Engine/Assembly/x86-64/neo-engine-cpu.adb:100:18    - Unknown word (Population)   -- Result.Has_Population_Count
Engine/Assembly/x86-64/neo-engine-cpu.adb:101:18    - Unknown word (Multi)        -- Result.Has_Multi_Media_Extensions
Engine/Assembly/x86-64/neo-engine-cpu.adb:105:111   - Unknown word (SSSE)         -- ECX_Register, 9); -- SSSE3
Engine/Assembly/x86-64/neo-engine-cpu.adb:105:46    - Unknown word (Supplement)   -- Streaming_SIMD_Extensions_3_Supplement := Is_Enabled (16
Engine/Assembly/x86-64/neo-engine-cpu.adb:108:111   - Unknown word (PCLMULQDQ)      -- ECX_Register, 1); -- PCLMULQDQ
Engine/Assembly/x86-64/neo-engine-cpu.adb:108:18    - Unknown word (Carryless)    -- Result.Has_Carryless_Multiplication_Of_Two
Engine/Assembly/x86-64/neo-engine-cpu.adb:108:28    - Unknown word (Multiplication) -- Result.Has_Carryless_Multiplication_Of_Two_64_Bit := Is
Engine/Assembly/x86-64/neo-engine-cpu.adb:109:22    - Unknown word (Manipulation)   -- Result.Has_Bit_Manipulation_Extensions_1
Engine/Assembly/x86-64/neo-engine-cpu.adb:10:102    - Unknown word (implied)      -- warranty; without even the implied warranty of merchantability
Engine/Assembly/x86-64/neo-engine-cpu.adb:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/Assembly/x86-64/neo-engine-cpu.adb:10:110    - Unknown word (warranty)     -- without even the implied warranty of merchantability or
Engine/Assembly/x86-64/neo-engine-cpu.adb:10:141    - Unknown word (fitness)      -- of merchantability or fitness for a   --
Engine/Assembly/x86-64/neo-engine-cpu.adb:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/Assembly/x86-64/neo-engine-cpu.adb:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/Assembly/x86-64/neo-engine-cpu.adb:10:43     - Unknown word (will)         -- in the hope that it will be useful, but without
Engine/Assembly/x86-64/neo-engine-cpu.adb:10:51     - Unknown word (useful)       -- hope that it will be useful, but without any warranty
Engine/Assembly/x86-64/neo-engine-cpu.adb:10:75     - Unknown word (warranty)     -- useful, but without any warranty; without even the implied
Engine/Assembly/x86-64/neo-engine-cpu.adb:10:93     - Unknown word (even)         -- any warranty; without even the implied warranty
Engine/Assembly/x86-64/neo-engine-cpu.adb:110:22    - Unknown word (Manipulation)   -- Result.Has_Bit_Manipulation_Extensions_2
Engine/Assembly/x86-64/neo-engine-cpu.adb:111:27    - Unknown word (Vector)         -- Result.Has_Advanced_Vector_Extensions_1
Engine/Assembly/x86-64/neo-engine-cpu.adb:112:27    - Unknown word (Vector)         -- Result.Has_Advanced_Vector_Extensions_2
Engine/Assembly/x86-64/neo-engine-cpu.adb:114:48    - Unknown word (Convert)        -- Precision_Floating_Point_Convert := Is_Enabled (1
Engine/Assembly/x86-64/neo-engine-cpu.adb:115:111   - Unknown word (CMOV)           -- EDX_Register, 15); -- CMOV
Engine/Assembly/x86-64/neo-engine-cpu.adb:116:18    - Unknown word (Hyperthreading) -- Result.Has_Hyperthreading
Engine/Assembly/x86-64/neo-engine-cpu.adb:117:111   - Unknown word (FXSR)           -- EDX_Register, 24); -- FXSR
Engine/Assembly/x86-64/neo-engine-cpu.adb:118:18    - Unknown word (Fused)          -- Result.Has_Fused_Multiply_Add_3
Engine/Assembly/x86-64/neo-engine-cpu.adb:118:24    - Unknown word (Multiply)       -- Result.Has_Fused_Multiply_Add_3
Engine/Assembly/x86-64/neo-engine-cpu.adb:119:18    - Unknown word (Fused)          -- Result.Has_Fused_Multiply_Add_4
Engine/Assembly/x86-64/neo-engine-cpu.adb:119:24    - Unknown word (Multiply)       -- Result.Has_Fused_Multiply_Add_4
Engine/Assembly/x86-64/neo-engine-cpu.adb:11:15     - Unknown word (purpose)      -- -- particular purpose. See the GNU General
Engine/Assembly/x86-64/neo-engine-cpu.adb:11:4      - Unknown word (particular)   -- -- particular purpose. See the GNU
Engine/Assembly/x86-64/neo-engine-cpu.adb:11:63     - Unknown word (more)         -- General Public License for more details.
Engine/Assembly/x86-64/neo-engine-cpu.adb:120:33    - Unknown word (Convert)        -- Result.Has_High_Precision_Convert :
Engine/Assembly/x86-64/neo-engine-cpu.adb:122:18    - Unknown word (Leading)        -- Result.Has_Leading_Zero_Count
Engine/Assembly/x86-64/neo-engine-cpu.adb:124:23    - Unknown word (operating)      -- -- Check if the operating system will save the
Engine/Assembly/x86-64/neo-engine-cpu.adb:124:40    - Unknown word (will)           -- the operating system will save the YMM registers
Engine/Assembly/x86-64/neo-engine-cpu.adb:124:58    - Unknown word (registers)      -- system will save the YMM registers
Engine/Assembly/x86-64/neo-engine-cpu.adb:126:14    - Unknown word (Volatile)       -- Asm (Volatile => True,
Engine/Assembly/x86-64/neo-engine-cpu.adb:126:26    - Unknown word (True)           -- Asm (Volatile => True,
Engine/Assembly/x86-64/neo-engine-cpu.adb:128:27    - Unknown word (xgetbv)         -- Template => "xgetbv",
Engine/Assembly/x86-64/neo-engine-cpu.adb:130:29    - Unknown word (Vector)         -- Result.Has_Advanced_Vector_Extensions_Enabled
Engine/Assembly/x86-64/neo-engine-cpu.adb:137:30    - Unknown word (overhead)       -- Constant info to remove overhead
Engine/Assembly/x86-64/neo-engine-cpu.adb:138:15    - Unknown word (INTERNAL)       -- INFORMATION_INTERNAL : constant CPU_State
Engine/Assembly/x86-64/neo-engine-cpu.adb:138:56    - Unknown word (Internal)       -- CPU_State := Get_CPU_Internal;
Engine/Assembly/x86-64/neo-engine-cpu.adb:139:53    - Unknown word (INTERNAL)       -- State is (INFORMATION_INTERNAL);
Engine/Assembly/x86-64/neo-engine-cpu.adb:142:12    - Unknown word (Exceptions)     -- -- Check_Exceptions --
Engine/Assembly/x86-64/neo-engine-cpu.adb:145:19    - Unknown word (Exceptions)     -- procedure Check_Exceptions is
Engine/Assembly/x86-64/neo-engine-cpu.adb:152:14    - Unknown word (Volatile)       -- Asm (Volatile => True,
Engine/Assembly/x86-64/neo-engine-cpu.adb:152:26    - Unknown word (True)           -- Asm (Volatile => True,
Engine/Assembly/x86-64/neo-engine-cpu.adb:154:27    - Unknown word (stmxcsr)        -- Template => "stmxcsr (%%eax)");
Engine/Assembly/x86-64/neo-engine-cpu.adb:158:12    - Unknown word (Volatile)       -- Asm (Volatile => True,
Engine/Assembly/x86-64/neo-engine-cpu.adb:158:24    - Unknown word (True)           -- Asm (Volatile => True,
Engine/Assembly/x86-64/neo-engine-cpu.adb:15:35     - Unknown word (Abbreviation) -- constant Str_8 := EOL_8; -- Abbreviation for convience
Engine/Assembly/x86-64/neo-engine-cpu.adb:15:52     - Unknown word (convience)    -- -- Abbreviation for convience
Engine/Assembly/x86-64/neo-engine-cpu.adb:160:25    - Unknown word (fnstsw)         -- Template => "fnstsw (%%eax)");
Engine/Assembly/x86-64/neo-engine-cpu.adb:163:32    - Unknown word (found)          -- Raise the first error found
Engine/Assembly/x86-64/neo-engine-cpu.adb:177:32    - Unknown word (stmxcsr)        -- " stmxcsr (%%eax)
Engine/Assembly/x86-64/neo-engine-cpu.adb:178:32    - Unknown word (movl)           -- " movl (%%eax),     %%ebx
Engine/Assembly/x86-64/neo-engine-cpu.adb:180:32    - Unknown word (movl)           -- " movl %%ebx,       (%%eax
Engine/Assembly/x86-64/neo-engine-cpu.adb:181:32    - Unknown word (ldmxcsr)        -- " ldmxcsr (%%eax)
Engine/Assembly/x86-64/neo-engine-cpu.adb:185:32    - Unknown word (bits)           -- - Clear 6 exception bits plus stack fault
Engine/Assembly/x86-64/neo-engine-cpu.adb:185:37    - Unknown word (plus)           -- Clear 6 exception bits plus stack fault
Engine/Assembly/x86-64/neo-engine-cpu.adb:185:48    - Unknown word (fault)          -- exception bits plus stack fault
Engine/Assembly/x86-64/neo-engine-cpu.adb:188:29    - Unknown word (fnstenv)        -- Template => "fnstenv (%%eax)");
Engine/Assembly/x86-64/neo-engine-cpu.adb:18:6      - Unknown word (Registers)    -- -- Registers --
Engine/Assembly/x86-64/neo-engine-cpu.adb:192:29    - Unknown word (fldenv)         -- Template => "fldenv (%%eax)");
Engine/Assembly/x86-64/neo-engine-cpu.adb:193:47    - Unknown word (fnclex)         -- True, Template => "fnclex");
Engine/Assembly/x86-64/neo-engine-cpu.adb:197:53    - Unknown word (Invalid)        -- 1#) /= 0 then raise Invalid_Operation; end if
Engine/Assembly/x86-64/neo-engine-cpu.adb:198:66    - Unknown word (Operand)        -- then raise Denormalized_Operand; end if;
Engine/Assembly/x86-64/neo-engine-cpu.adb:199:53    - Unknown word (Divide)         -- 4#) /= 0 then raise Divide_By_Zero; end if
Engine/Assembly/x86-64/neo-engine-cpu.adb:200:53    - Unknown word (Numeric)        -- 8#) /= 0 then raise Numeric_Overflow; end if
Engine/Assembly/x86-64/neo-engine-cpu.adb:200:61    - Unknown word (Overflow)       -- then raise Numeric_Overflow; end if;
Engine/Assembly/x86-64/neo-engine-cpu.adb:201:53    - Unknown word (Numeric)        -- 0#) /= 0 then raise Numeric_Underflow; end if
Engine/Assembly/x86-64/neo-engine-cpu.adb:201:61    - Unknown word (Underflow)      -- then raise Numeric_Underflow; end if;
Engine/Assembly/x86-64/neo-engine-cpu.adb:202:53    - Unknown word (Inexact)        -- 0#) /= 0 then raise Inexact_Result; end if
Engine/Assembly/x86-64/neo-engine-cpu.adb:203:59    - Unknown word (Fault)          -- 0 then raise Stack_Fault; end if;
Engine/Assembly/x86-64/neo-engine-cpu.adb:212:17    - Unknown word (Rounding)       -- procedure Set_Rounding (Val : Rounding_Kind
Engine/Assembly/x86-64/neo-engine-cpu.adb:212:33    - Unknown word (Rounding)       -- Set_Rounding (Val : Rounding_Kind) is
Engine/Assembly/x86-64/neo-engine-cpu.adb:212:42    - Unknown word (Kind)           -- Rounding (Val : Rounding_Kind) is
Engine/Assembly/x86-64/neo-engine-cpu.adb:213:5     - Unknown word (Other)          -- Other_Data : aliased Int
Engine/Assembly/x86-64/neo-engine-cpu.adb:215:5     - Unknown word (Rounding)       -- Rounding_Mask :         Int_Unsigned
Engine/Assembly/x86-64/neo-engine-cpu.adb:215:66    - Unknown word (Nearest)        -- = (case Val is when Nearest_Rounding => 16#000
Engine/Assembly/x86-64/neo-engine-cpu.adb:215:74    - Unknown word (Rounding)       -- Val is when Nearest_Rounding => 16#0000#,
Engine/Assembly/x86-64/neo-engine-cpu.adb:216:71    - Unknown word (Rounding)       -- when Down_Rounding => 16#2000#,
Engine/Assembly/x86-64/neo-engine-cpu.adb:218:66    - Unknown word (Truncate)       -- when Truncate_Rounding => 16#6000
Engine/Assembly/x86-64/neo-engine-cpu.adb:21:17     - Unknown word (Kind)         -- type Register_Kind is (EAX_Register, EBX
Engine/Assembly/x86-64/neo-engine-cpu.adb:225:28    - Unknown word (stmxcsr)        -- " stmxcsr (%%eax)
Engine/Assembly/x86-64/neo-engine-cpu.adb:226:28    - Unknown word (movl)           -- " movl (%%eax),     %%ebx
Engine/Assembly/x86-64/neo-engine-cpu.adb:229:28    - Unknown word (movl)           -- " movl %%ebx,       (%%eax
Engine/Assembly/x86-64/neo-engine-cpu.adb:230:28    - Unknown word (ldmxcsr)        -- " ldmxcsr (%%eax)
Engine/Assembly/x86-64/neo-engine-cpu.adb:233:24    - Unknown word (Shift)          -- Rounding_Mask := Shift_Right (Rounding_Mask
Engine/Assembly/x86-64/neo-engine-cpu.adb:235:48    - Unknown word (Other)          -- Ptr'Asm_Input (TO_EAX, Other_Data'Address),
Engine/Assembly/x86-64/neo-engine-cpu.adb:238:26    - Unknown word (fnstcw)         -- " fnstcw (%%eax)          "
Engine/Assembly/x86-64/neo-engine-cpu.adb:239:26    - Unknown word (movw)           -- " movw (%%eax), %%bx
Engine/Assembly/x86-64/neo-engine-cpu.adb:23:33     - Unknown word (calls)        -- "Templates" for Asm calls
Engine/Assembly/x86-64/neo-engine-cpu.adb:23:6      - Unknown word (String)       -- -- String "Templates" for Asm
Engine/Assembly/x86-64/neo-engine-cpu.adb:242:26    - Unknown word (movw)           -- " movw %%bx,    (%%eax)
Engine/Assembly/x86-64/neo-engine-cpu.adb:243:26    - Unknown word (fldcw)          -- " fldcw (%%eax)          "
Engine/Assembly/x86-64/neo-engine-cpu.adb:249:11    - Unknown word (Memory)         -- Blank_Memory : aliased Int_16_Unsigned
Engine/Assembly/x86-64/neo-engine-cpu.adb:249:5     - Unknown word (Blank)          -- Blank_Memory : aliased Int
Engine/Assembly/x86-64/neo-engine-cpu.adb:252:57    - Unknown word (Blank)          -- 'Asm_Input (TO_EAX, Blank_Memory'Address),
Engine/Assembly/x86-64/neo-engine-cpu.adb:252:63    - Unknown word (Memory)         -- Input (TO_EAX, Blank_Memory'Address),
Engine/Assembly/x86-64/neo-engine-cpu.adb:253:75    - Unknown word (Single)         -- ECX, (case Val is when Single_Precision
Engine/Assembly/x86-64/neo-engine-cpu.adb:257:26    - Unknown word (fnstcw)         -- " fnstcw (%%eax)          "
Engine/Assembly/x86-64/neo-engine-cpu.adb:258:26    - Unknown word (movw)           -- " movw (%%eax), %%bx
Engine/Assembly/x86-64/neo-engine-cpu.adb:261:26    - Unknown word (movw)           -- " movw %%bx,    (%%eax)
Engine/Assembly/x86-64/neo-engine-cpu.adb:262:26    - Unknown word (fldcw)          -- " fldcw (%%eax)          "
Engine/Assembly/x86-64/neo-engine-cpu.adb:270:21    - Unknown word (Empty)         -- function Is_Stack_Empty return Bool is
Engine/Assembly/x86-64/neo-engine-cpu.adb:278:26    - Unknown word (fnstenv)       -- " fnstenv (%%eax)
Engine/Assembly/x86-64/neo-engine-cpu.adb:279:26    - Unknown word (movl)          -- " movl 8 (%%eax),   %%eax
Engine/Assembly/x86-64/neo-engine-cpu.adb:293:28    - Unknown word (fnstenv)       -- " fnstenv (%%eax)
Engine/Assembly/x86-64/neo-engine-cpu.adb:302:28    - Unknown word (fstp)          -- " fstp %%st
Engine/Assembly/x86-64/neo-engine-cpu.adb:313:32    - Unknown word (print)         -- Conversion functions to print numbers in different
Engine/Assembly/x86-64/neo-engine-cpu.adb:313:49    - Unknown word (different)     -- to print numbers in different bases
Engine/Assembly/x86-64/neo-engine-cpu.adb:313:59    - Unknown word (bases)         -- numbers in different bases
Engine/Assembly/x86-64/neo-engine-cpu.adb:317:14    - Unknown word (temporaries)   -- -- Stack temporaries
Engine/Assembly/x86-64/neo-engine-cpu.adb:331:28    - Unknown word (fnstenv)       -- " fnstenv (%%esi)
Engine/Assembly/x86-64/neo-engine-cpu.adb:349:31    - Unknown word (fxch)          -- -- fxch %%st (I)
Engine/Assembly/x86-64/neo-engine-cpu.adb:352:31    - Unknown word (fxch)          -- -- fxch %%st (I)
Engine/Assembly/x86-64/neo-engine-cpu.adb:363:28    - Unknown word (fxch)          -- " fxch %%st (1)
Engine/Assembly/x86-64/neo-engine-cpu.adb:366:28    - Unknown word (fxch)          -- " fxch %%st (1)
Engine/Assembly/x86-64/neo-engine-cpu.adb:36:32     - Unknown word (Unsigned)     -- Control_Word : Int_16_Unsigned := 0;
Engine/Assembly/x86-64/neo-engine-cpu.adb:372:28    - Unknown word (fxch)          -- " fxch %%st (2)
Engine/Assembly/x86-64/neo-engine-cpu.adb:37:32     - Unknown word (Unsigned)     -- Unused_A : Int_16_Unsigned := 0;
Engine/Assembly/x86-64/neo-engine-cpu.adb:37:7      - Unknown word (Unused)       -- Unused_A : Int_16_Unsigned
Engine/Assembly/x86-64/neo-engine-cpu.adb:38:32     - Unknown word (Unsigned)     -- Status_Word : Int_16_Unsigned := 0;
Engine/Assembly/x86-64/neo-engine-cpu.adb:39:32     - Unknown word (Unsigned)     -- Unused_B : Int_16_Unsigned := 0;
Engine/Assembly/x86-64/neo-engine-cpu.adb:39:7      - Unknown word (Unused)       -- Unused_B : Int_16_Unsigned
Engine/Assembly/x86-64/neo-engine-cpu.adb:40:32     - Unknown word (Unsigned)     -- : Int_16_Unsigned := 0;
Engine/Assembly/x86-64/neo-engine-cpu.adb:41:7      - Unknown word (Unused)       -- Unused_C : Int_16_Unsigned
Engine/Assembly/x86-64/neo-engine-cpu.adb:425:18    - Unknown word (actual)        -- -- Put the actual stack values
Engine/Assembly/x86-64/neo-engine-cpu.adb:428:35    - Unknown word (wide)          -- Line ("Stack" & Integer'wide_image (I) & ":" & Real
Engine/Assembly/x86-64/neo-engine-cpu.adb:428:63    - Unknown word (wide)          -- image (I) & ":" & Real'wide_image (Stack (I)));
Engine/Assembly/x86-64/neo-engine-cpu.adb:42:15     - Unknown word (Counter)      -- Program_Counter : Int_Unsigned    :
Engine/Assembly/x86-64/neo-engine-cpu.adb:42:7      - Unknown word (Program)      -- Program_Counter : Int_Unsigned
Engine/Assembly/x86-64/neo-engine-cpu.adb:432:27    - Unknown word (registers)     -- -- Put AMD specific registers
Engine/Assembly/x86-64/neo-engine-cpu.adb:434:27    - Unknown word (stmxcsr)       -- Asm (Template => "stmxcsr (%%eax)",
Engine/Assembly/x86-64/neo-engine-cpu.adb:43:10     - Unknown word (Selector)     -- CS_Selector : Int_16_Unsigned
Engine/Assembly/x86-64/neo-engine-cpu.adb:443:14    - Unknown word (Selector)      -- Line ("Selector: "        & To_Str
Engine/Assembly/x86-64/neo-engine-cpu.adb:443:58    - Unknown word (Selector)      -- Str (Environment.CS_Selector, 2));
Engine/Assembly/x86-64/neo-engine-cpu.adb:445:19    - Unknown word (offset)        -- Line ("Data offset: "     & To_Str (Environment
Engine/Assembly/x86-64/neo-engine-cpu.adb:445:60    - Unknown word (Offset)        -- Str (Environment.Data_Offset, 2));
Engine/Assembly/x86-64/neo-engine-cpu.adb:446:19    - Unknown word (selector)      -- Line ("Data selector: "   & To_Str (Environment
Engine/Assembly/x86-64/neo-engine-cpu.adb:446:60    - Unknown word (Selector)      -- Str (Environment.Data_Selector, 2));
Engine/Assembly/x86-64/neo-engine-cpu.adb:448:14    - Unknown word (Program)       -- Line ("Program counter: " & To_Str
Engine/Assembly/x86-64/neo-engine-cpu.adb:448:22    - Unknown word (counter)       -- Line ("Program counter: " & To_Str (Environment
Engine/Assembly/x86-64/neo-engine-cpu.adb:448:55    - Unknown word (Program)       -- To_Str (Environment.Program_Counter, 2));
Engine/Assembly/x86-64/neo-engine-cpu.adb:448:63    - Unknown word (Counter)       -- Environment.Program_Counter, 2));
Engine/Assembly/x86-64/neo-engine-cpu.adb:44:50     - Unknown word (Consists)     -- 6_Unsigned := 0; -- Consists of 11 used + 5 unused
Engine/Assembly/x86-64/neo-engine-cpu.adb:44:74     - Unknown word (unused)       -- Consists of 11 used + 5 unused bits
Engine/Assembly/x86-64/neo-engine-cpu.adb:44:81     - Unknown word (bits)         -- of 11 used + 5 unused bits
Engine/Assembly/x86-64/neo-engine-cpu.adb:452:4     - Unknown word (Executable)    -- -- Executable Section --
Engine/Assembly/x86-64/neo-engine-cpu.adb:455:30    - Unknown word (executable)    -- of Neo.Engine.CPU's executable section
Engine/Assembly/x86-64/neo-engine-cpu.adb:458:24    - Unknown word (returned)      -- - Temporary to hold returned assembly output
Engine/Assembly/x86-64/neo-engine-cpu.adb:45:12     - Unknown word (Offset)       -- Data_Offset : Int_Unsigned
Engine/Assembly/x86-64/neo-engine-cpu.adb:461:8     - Unknown word (Ready)         -- -- Ready the CPU
Engine/Assembly/x86-64/neo-engine-cpu.adb:464:17    - Unknown word (denormals)     -- -- Enable denormals are zero
Engine/Assembly/x86-64/neo-engine-cpu.adb:466:23    - Unknown word (Area)          -- type Array_Save_Area is array (1..512) of
Engine/Assembly/x86-64/neo-engine-cpu.adb:466:59    - Unknown word (Alignment)     -- ..512) of Byte with Alignment => 16;
Engine/Assembly/x86-64/neo-engine-cpu.adb:467:12    - Unknown word (Area)          -- Save_Area : aliased Array_Save
Engine/Assembly/x86-64/neo-engine-cpu.adb:467:38    - Unknown word (Area)          -- aliased Array_Save_Area := (others => 0);
Engine/Assembly/x86-64/neo-engine-cpu.adb:46:12     - Unknown word (Selector)     -- Data_Selector : Int_16_Unsigned
Engine/Assembly/x86-64/neo-engine-cpu.adb:470:54    - Unknown word (Area)          -- Input (TO_EAX, Save_Area (Save_Area'First)'Address
Engine/Assembly/x86-64/neo-engine-cpu.adb:470:65    - Unknown word (Area)          -- EAX, Save_Area (Save_Area'First)'Address),
Engine/Assembly/x86-64/neo-engine-cpu.adb:473:28    - Unknown word (fxsave)        -- " fxsave (%%eax)           "
Engine/Assembly/x86-64/neo-engine-cpu.adb:47:7      - Unknown word (Unused)       -- Unused_D : Int_16_Unsigned
Engine/Assembly/x86-64/neo-engine-cpu.adb:482:30    - Unknown word (stmxcsr)       -- " stmxcsr (%%eax)          "
Engine/Assembly/x86-64/neo-engine-cpu.adb:486:30    - Unknown word (ldmxcsr)       -- " ldmxcsr (%%eax)          "
Engine/Assembly/x86-64/neo-engine-cpu.adb:497:26    - Unknown word (ldmxcsr)       -- " ldmxcsr (%%eax)          "
Engine/Assembly/x86-64/neo-engine-cpu.adb:503:5     - Unknown word (Other)         -- Other_Data : aliased
Engine/Assembly/x86-64/neo-engine-cpu.adb:504:83    - Unknown word (crash)         -- 00_1F00#; -- Do not crash on any error
Engine/Assembly/x86-64/neo-engine-cpu.adb:516:28    - Unknown word (ldmxcsr)       -- " ldmxcsr (%%eax)
Engine/Assembly/x86-64/neo-engine-cpu.adb:520:48    - Unknown word (Other)         -- Ptr'Asm_Input (TO_EAX, Other_Data'Address),
Engine/Assembly/x86-64/neo-engine-cpu.adb:521:57    - Unknown word (Shift)         -- Unsigned'Asm_Input (TO_ECX, Shift_Right (EXCEPTION_MASK
Engine/Assembly/x86-64/neo-engine-cpu.adb:523:26    - Unknown word (fnstcw)        -- " fnstcw (%%eax)          "
Engine/Assembly/x86-64/neo-engine-cpu.adb:524:26    - Unknown word (movw)          -- " movw (%%eax), %%bx
Engine/Assembly/x86-64/neo-engine-cpu.adb:528:26    - Unknown word (fldcw)         -- " fldcw (%%eax)          "
Engine/Assembly/x86-64/neo-engine-cpu.adb:54:20     - Unknown word (Internal)     -- function Get_CPU_Internal return CPU_State is
Engine/Assembly/x86-64/neo-engine-cpu.adb:56:19     - Unknown word (vender)       -- -- Obtain the vender name string
Engine/Assembly/x86-64/neo-engine-cpu.adb:56:31     - Unknown word (string)       -- Obtain the vender name string
Engine/Assembly/x86-64/neo-engine-cpu.adb:56:8      - Unknown word (Obtain)       -- -- Obtain the vender name string
Engine/Assembly/x86-64/neo-engine-cpu.adb:57:18     - Unknown word (Vendor)       -- function Get_Vendor return Vendor_Kind is
Engine/Assembly/x86-64/neo-engine-cpu.adb:57:32     - Unknown word (Vendor)       -- function Get_Vendor return Vendor_Kind is -- "Oh, such
Engine/Assembly/x86-64/neo-engine-cpu.adb:57:39     - Unknown word (Kind)         -- Vendor return Vendor_Kind is -- "Oh, such a sweet
Engine/Assembly/x86-64/neo-engine-cpu.adb:57:55     - Unknown word (such)         -- Vendor_Kind is -- "Oh, such a sweet sweet trick
Engine/Assembly/x86-64/neo-engine-cpu.adb:57:62     - Unknown word (sweet)        -- Kind is -- "Oh, such a sweet sweet trick, just not
Engine/Assembly/x86-64/neo-engine-cpu.adb:57:68     - Unknown word (sweet)        -- - "Oh, such a sweet sweet trick, just not very
Engine/Assembly/x86-64/neo-engine-cpu.adb:57:74     - Unknown word (trick)        -- such a sweet sweet trick, just not very useful
Engine/Assembly/x86-64/neo-engine-cpu.adb:57:81     - Unknown word (just)         -- a sweet sweet trick, just not very useful. :)
Engine/Assembly/x86-64/neo-engine-cpu.adb:57:90     - Unknown word (very)         -- sweet trick, just not very useful. :)"
Engine/Assembly/x86-64/neo-engine-cpu.adb:57:95     - Unknown word (useful)       -- trick, just not very useful. :)"
Engine/Assembly/x86-64/neo-engine-cpu.adb:58:49     - Unknown word (CHAR)         -- := (others => NULL_CHAR_8);
Engine/Assembly/x86-64/neo-engine-cpu.adb:58:7      - Unknown word (Vendor)       -- Vendor : Str_8 (1..12) :=
Engine/Assembly/x86-64/neo-engine-cpu.adb:5:63      - Unknown word (Copyright)  -- Copyright (C) 202X Justin Squirek
Engine/Assembly/x86-64/neo-engine-cpu.adb:5:82      - Unknown word (Justin)     -- Copyright (C) 202X Justin Squirek
Engine/Assembly/x86-64/neo-engine-cpu.adb:5:89      - Unknown word (Squirek)    -- Copyright (C) 202X Justin Squirek
Engine/Assembly/x86-64/neo-engine-cpu.adb:60:14     - Unknown word (Volatile)     -- Asm (Volatile => True,
Engine/Assembly/x86-64/neo-engine-cpu.adb:60:26     - Unknown word (True)         -- Asm (Volatile => True,
Engine/Assembly/x86-64/neo-engine-cpu.adb:62:27     - Unknown word (cpuid)        -- Template => "cpuid",
Engine/Assembly/x86-64/neo-engine-cpu.adb:63:55     - Unknown word (Vendor)       -- Asm_Output (FROM_EBX, Vendor (1..4)),
Engine/Assembly/x86-64/neo-engine-cpu.adb:64:55     - Unknown word (Vendor)       -- Asm_Output (FROM_EDX, Vendor (5..8)),
Engine/Assembly/x86-64/neo-engine-cpu.adb:66:33     - Unknown word (Authentic)    -- return (if    Vendor = "AuthenticAMD" then Advanced_Micro
Engine/Assembly/x86-64/neo-engine-cpu.adb:68:22     - Unknown word (Unknown)      -- else Unknown_Vendor);
Engine/Assembly/x86-64/neo-engine-cpu.adb:72:74     - Unknown word (Kind)         -- Register : Register_Kind; Bit : Natural) return
Engine/Assembly/x86-64/neo-engine-cpu.adb:73:30     - Unknown word (Kind)         -- Data : array (Register_Kind'Range) of Int_Unsigned
Engine/Assembly/x86-64/neo-engine-cpu.adb:75:14     - Unknown word (Volatile)     -- Asm (Volatile => True,
Engine/Assembly/x86-64/neo-engine-cpu.adb:75:26     - Unknown word (True)         -- Asm (Volatile => True,
Engine/Assembly/x86-64/neo-engine-cpu.adb:77:27     - Unknown word (cpuid)        -- Template => "cpuid",
Engine/Assembly/x86-64/neo-engine-cpu.adb:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/Assembly/x86-64/neo-engine-cpu.adb:83:17     - Unknown word (sure)         -- -- Make sure its enabled
Engine/Assembly/x86-64/neo-engine-cpu.adb:8:16      - Unknown word (either)       -- -- Foundation, either version 3 of the License
Engine/Assembly/x86-64/neo-engine-cpu.adb:8:56      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/Assembly/x86-64/neo-engine-cpu.adb:8:73      - Unknown word (later)        -- at your option) any later version.
Engine/Assembly/x86-64/neo-engine-cpu.adb:95:26     - Unknown word (Supplement)   -- Result.Has_3DNow_Supplement
Engine/Assembly/x86-64/neo-engine-cpu.adb:96:20     - Unknown word (Multi)        -- Result.Has_Multi_Media_Extensions_Supplement
Engine/Assembly/x86-64/neo-engine-cpu.adb:96:43     - Unknown word (Supplement)   -- Multi_Media_Extensions_Supplement := Is_Enabled
Engine/Assembly/x86-64/neo-engine-cpu.adb:97:48     - Unknown word (Supplement)   -- Streaming_SIMD_Extensions_4_Supplement := Is_Enabled (16#8
Engine/Assembly/x86-64/neo-engine-cpu.adb:99:111    - Unknown word (OSXSAVE)      -- ECX_Register, 27); -- OSXSAVE
Engine/Runtime/a-comutr.adb:1069:11   - Unknown word (Commented)      -- -- Commented out pending official
Engine/Runtime/a-comutr.adb:1069:33   - Unknown word (official)       -- Commented out pending official ruling by ARG.  ???
Engine/Runtime/a-comutr.adb:1069:42   - Unknown word (ruling)         -- out pending official ruling by ARG.  ???
Engine/Runtime/a-comutr.adb:110:13    - Unknown word (Equal)        -- function Equal_Children
Engine/Runtime/a-comutr.adb:113:13    - Unknown word (Equal)        -- function Equal_Subtree
Engine/Runtime/a-comutr.adb:1171:38   - Unknown word (Need)           -- Position := No_Element;  -- Need ruling from ARG ???
Engine/Runtime/a-comutr.adb:1171:43   - Unknown word (ruling)         -- No_Element; -- Need ruling from ARG ???
Engine/Runtime/a-comutr.adb:1184:14   - Unknown word (Reclaim)        -- -- Reclaim other nodes if Storage
Engine/Runtime/a-comutr.adb:1184:22   - Unknown word (other)          -- -- Reclaim other nodes if Storage_Error
Engine/Runtime/a-comutr.adb:11:37     - Unknown word (redistribute) -- software; you can  redistribute it  and/or modify it
Engine/Runtime/a-comutr.adb:11:4      - Unknown word (GNAT)       -- -- GNAT is free software;  you
Engine/Runtime/a-comutr.adb:1201:28   - Unknown word (Here)           -- - the count value. Here we increment the total
Engine/Runtime/a-comutr.adb:1201:36   - Unknown word (increment)      -- count value. Here we increment the total count by the
Engine/Runtime/a-comutr.adb:1202:20   - Unknown word (just)           -- -- nodes we just inserted.
Engine/Runtime/a-comutr.adb:1202:25   - Unknown word (inserted)       -- -- nodes we just inserted.
Engine/Runtime/a-comutr.adb:1240:38   - Unknown word (Need)           -- Position := No_Element;  -- Need ruling from ARG  ??
Engine/Runtime/a-comutr.adb:1240:43   - Unknown word (ruling)         -- No_Element; -- Need ruling from ARG  ???
Engine/Runtime/a-comutr.adb:1253:14   - Unknown word (Reclaim)        -- -- Reclaim other nodes if Storage
Engine/Runtime/a-comutr.adb:1253:22   - Unknown word (other)          -- -- Reclaim other nodes if Storage_Error
Engine/Runtime/a-comutr.adb:1270:28   - Unknown word (Here)           -- - the count value. Here we increment the total
Engine/Runtime/a-comutr.adb:1270:36   - Unknown word (increment)      -- count value. Here we increment the total count by the
Engine/Runtime/a-comutr.adb:1271:20   - Unknown word (just)           -- -- nodes we just inserted.
Engine/Runtime/a-comutr.adb:1271:25   - Unknown word (inserted)       -- -- nodes we just inserted.
Engine/Runtime/a-comutr.adb:1292:21   - Unknown word (simple)         -- -- This is a simple utility operation to
Engine/Runtime/a-comutr.adb:1292:28   - Unknown word (utility)        -- - This is a simple utility operation to insert
Engine/Runtime/a-comutr.adb:1293:63   - Unknown word (specifies)      -- Parent. The Before node specifies where
Engine/Runtime/a-comutr.adb:1293:73   - Unknown word (where)          -- Before node specifies where
Engine/Runtime/a-comutr.adb:1294:28   - Unknown word (should)         -- - the new children should be inserted relative
Engine/Runtime/a-comutr.adb:1294:38   - Unknown word (inserted)       -- new children should be inserted relative to the existing
Engine/Runtime/a-comutr.adb:1294:47   - Unknown word (relative)       -- children should be inserted relative to the existing
Engine/Runtime/a-comutr.adb:1294:63   - Unknown word (existing)       -- inserted relative to the existing
Engine/Runtime/a-comutr.adb:12:71     - Unknown word (Soft)         -- published by the Free Soft- --
Engine/Runtime/a-comutr.adb:1311:36   - Unknown word (means)          -- Before = null then  -- means "insert after existing
Engine/Runtime/a-comutr.adb:1311:50   - Unknown word (after)          -- then -- means "insert after existing nodes"
Engine/Runtime/a-comutr.adb:1311:56   - Unknown word (existing)       -- means "insert after existing nodes"
Engine/Runtime/a-comutr.adb:1341:21   - Unknown word (simple)        -- -- This is a simple wrapper operation to
Engine/Runtime/a-comutr.adb:1341:28   - Unknown word (wrapper)       -- - This is a simple wrapper operation to insert
Engine/Runtime/a-comutr.adb:1341:58   - Unknown word (single)        -- operation to insert a single child into the
Engine/Runtime/a-comutr.adb:1352:10   - Unknown word (Empty)         -- -- Is_Empty --
Engine/Runtime/a-comutr.adb:1355:16   - Unknown word (Empty)         -- function Is_Empty (Container : Tree) return
Engine/Runtime/a-comutr.adb:1358:11   - Unknown word (Empty)         -- end Is_Empty;
Engine/Runtime/a-comutr.adb:1361:10   - Unknown word (Leaf)          -- -- Is_Leaf --
Engine/Runtime/a-comutr.adb:1371:10   - Unknown word (Reachable)     -- -- Is_Reachable --
Engine/Runtime/a-comutr.adb:1374:16   - Unknown word (Reachable)     -- function Is_Reachable (From, To : Tree_Node
Engine/Runtime/a-comutr.adb:137:13    - Unknown word (Find)         -- function Find_In_Children
Engine/Runtime/a-comutr.adb:1384:20   - Unknown word (True)          -- return True;
Engine/Runtime/a-comutr.adb:1391:11   - Unknown word (Reachable)     -- end Is_Reachable;
Engine/Runtime/a-comutr.adb:139:17    - Unknown word (Element)      -- Item : Element_Type) return Tree_Node
Engine/Runtime/a-comutr.adb:13:23     - Unknown word (either)       -- ware Foundation;  either version 3,  or (at your
Engine/Runtime/a-comutr.adb:13:4      - Unknown word (ware)         -- -- ware Foundation;  either
Engine/Runtime/a-comutr.adb:13:49     - Unknown word (your)         -- either version 3,  or (at your option) any later ver
Engine/Runtime/a-comutr.adb:13:66     - Unknown word (later)        -- at your option) any later ver- --
Engine/Runtime/a-comutr.adb:1411:19   - Unknown word (Busy)          -- Busy : With_Busy (Container.TC'Unrestricted
Engine/Runtime/a-comutr.adb:1411:7    - Unknown word (Busy)          -- Busy : With_Busy (Container
Engine/Runtime/a-comutr.adb:141:13    - Unknown word (Find)         -- function Find_In_Subtree
Engine/Runtime/a-comutr.adb:1435:19   - Unknown word (Busy)          -- Busy : With_Busy (Parent.Container.TC
Engine/Runtime/a-comutr.adb:1435:7    - Unknown word (Busy)          -- Busy : With_Busy (Parent
Engine/Runtime/a-comutr.adb:143:17    - Unknown word (Element)      -- Item : Element_Type) return Tree_Node
Engine/Runtime/a-comutr.adb:1456:21   - Unknown word (helper)        -- -- This is a helper function to recursively
Engine/Runtime/a-comutr.adb:1456:40   - Unknown word (recursively)   -- a helper function to recursively iterate over all the
Engine/Runtime/a-comutr.adb:1457:28   - Unknown word (depth)         -- - in a subtree, in depth-first fashion. This
Engine/Runtime/a-comutr.adb:1457:40   - Unknown word (fashion)       -- subtree, in depth-first fashion. This particular helper
Engine/Runtime/a-comutr.adb:1457:54   - Unknown word (particular)    -- first fashion. This particular helper just
Engine/Runtime/a-comutr.adb:1457:65   - Unknown word (helper)        -- fashion. This particular helper just
Engine/Runtime/a-comutr.adb:1458:11   - Unknown word (visits)        -- -- visits the children of this
Engine/Runtime/a-comutr.adb:1459:11   - Unknown word (itself)        -- -- itself. This is useful when
Engine/Runtime/a-comutr.adb:1459:27   - Unknown word (useful)        -- -- itself. This is useful when starting from the
Engine/Runtime/a-comutr.adb:1459:39   - Unknown word (starting)      -- This is useful when starting from the ultimate root
Engine/Runtime/a-comutr.adb:1459:57   - Unknown word (ultimate)      -- when starting from the ultimate root of the
Engine/Runtime/a-comutr.adb:1460:11   - Unknown word (entire)        -- -- entire tree (see Iterate),
Engine/Runtime/a-comutr.adb:1460:60   - Unknown word (have)          -- as that root does not have an element.
Engine/Runtime/a-comutr.adb:1472:39   - Unknown word (Reversible)    -- Iterator_Interfaces.Reversible_Iterator'Class
Engine/Runtime/a-comutr.adb:14:11     - Unknown word (GNAT)         -- -- sion.  GNAT is distributed in the
Engine/Runtime/a-comutr.adb:14:19     - Unknown word (distributed)  -- -- sion.  GNAT is distributed in the hope that it
Engine/Runtime/a-comutr.adb:14:38     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/Runtime/a-comutr.adb:14:4      - Unknown word (sion)         -- -- sion. GNAT is distributed
Engine/Runtime/a-comutr.adb:14:43     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/Runtime/a-comutr.adb:14:51     - Unknown word (will)         -- in the hope that it will be useful, but WITH
Engine/Runtime/a-comutr.adb:14:59     - Unknown word (useful)       -- hope that it will be useful, but WITH- --
Engine/Runtime/a-comutr.adb:1507:29   - Unknown word (multiway)      -- Implement Vet for multiway trees???
Engine/Runtime/a-comutr.adb:150:16    - Unknown word (Reachable)    -- function Is_Reachable (From, To : Tree_Node
Engine/Runtime/a-comutr.adb:1542:21   - Unknown word (helper)        -- -- This is a helper function to recursively
Engine/Runtime/a-comutr.adb:1542:40   - Unknown word (recursively)   -- a helper function to recursively iterate over all the
Engine/Runtime/a-comutr.adb:1543:28   - Unknown word (depth)         -- - in a subtree, in depth-first fashion. It first
Engine/Runtime/a-comutr.adb:1543:40   - Unknown word (fashion)       -- subtree, in depth-first fashion. It first visits the
Engine/Runtime/a-comutr.adb:1543:58   - Unknown word (visits)        -- first fashion. It first visits the root of the
Engine/Runtime/a-comutr.adb:1544:25   - Unknown word (visits)        -- -- subtree, then visits its children.
Engine/Runtime/a-comutr.adb:157:7     - Unknown word (Before)       -- Before : Tree_Node_Access
Engine/Runtime/a-comutr.adb:15:12     - Unknown word (WARRANTY)     -- -- OUT ANY WARRANTY; without even the
Engine/Runtime/a-comutr.adb:15:31     - Unknown word (even)         -- ANY WARRANTY;  without even the  implied warranty
Engine/Runtime/a-comutr.adb:15:41     - Unknown word (implied)      -- without even the  implied warranty of MERCHANTABILITY
Engine/Runtime/a-comutr.adb:15:49     - Unknown word (warranty)     -- without even the  implied warranty of MERCHANTABILITY
Engine/Runtime/a-comutr.adb:1603:32   - Unknown word (busy)          -- Target.Clear; -- checks busy bit
Engine/Runtime/a-comutr.adb:1635:48   - Unknown word (wrong)         -- cursor of Next designates wrong tree";
Engine/Runtime/a-comutr.adb:163:7     - Unknown word (Before)       -- Before : Tree_Node_Access)
Engine/Runtime/a-comutr.adb:165:14    - Unknown word (Splice)       -- procedure Splice_Children
Engine/Runtime/a-comutr.adb:1666:48   - Unknown word (wrong)         -- cursor of Next designates wrong tree";
Engine/Runtime/a-comutr.adb:1669:19   - Unknown word (Sibling)       -- return Next_Sibling (Position);
Engine/Runtime/a-comutr.adb:1673:12   - Unknown word (Sibling)       -- -- Next_Sibling --
Engine/Runtime/a-comutr.adb:1676:18   - Unknown word (Sibling)       -- function Next_Sibling (Position : Cursor)
Engine/Runtime/a-comutr.adb:167:7     - Unknown word (Before)       -- Before : Tree_Node_Access
Engine/Runtime/a-comutr.adb:1687:13   - Unknown word (Sibling)       -- end Next_Sibling;
Engine/Runtime/a-comutr.adb:1689:19   - Unknown word (Sibling)       -- procedure Next_Sibling (Position : in out Cursor
Engine/Runtime/a-comutr.adb:16:21     - Unknown word (PARTICULAR)   -- -- or FITNESS FOR A PARTICULAR PURPOSE.
Engine/Runtime/a-comutr.adb:16:32     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE.
Engine/Runtime/a-comutr.adb:16:7      - Unknown word (FITNESS)      -- -- or FITNESS FOR A PARTICULAR PURPOSE
Engine/Runtime/a-comutr.adb:1700:53   - Unknown word (have)          -- the number of nodes we have actually allocated.
Engine/Runtime/a-comutr.adb:1700:58   - Unknown word (actually)      -- number of nodes we have actually allocated. We
Engine/Runtime/a-comutr.adb:1700:67   - Unknown word (allocated)     -- nodes we have actually allocated. We
Engine/Runtime/a-comutr.adb:1701:27   - Unknown word (specifically)  -- -- cache the value specifically so this Node_Count operation
Engine/Runtime/a-comutr.adb:1702:25   - Unknown word (which)         -- -- in O(1) time, which makes it behave similarly
Engine/Runtime/a-comutr.adb:1702:31   - Unknown word (makes)         -- in O(1) time, which makes it behave similarly
Engine/Runtime/a-comutr.adb:1702:40   - Unknown word (behave)        -- time, which makes it behave similarly to how the
Engine/Runtime/a-comutr.adb:1702:47   - Unknown word (similarly)     -- which makes it behave similarly to how the Length
Engine/Runtime/a-comutr.adb:1702:68   - Unknown word (Length)        -- similarly to how the Length
Engine/Runtime/a-comutr.adb:1703:11   - Unknown word (selector)      -- -- selector function behaves for
Engine/Runtime/a-comutr.adb:1703:29   - Unknown word (behaves)       -- selector function behaves for other containers
Engine/Runtime/a-comutr.adb:1703:41   - Unknown word (other)         -- function behaves for other containers.
Engine/Runtime/a-comutr.adb:1705:15   - Unknown word (cached)        -- -- The cached node count value only
Engine/Runtime/a-comutr.adb:1705:44   - Unknown word (describes)     -- node count value only describes the nodes we have
Engine/Runtime/a-comutr.adb:1705:67   - Unknown word (have)          -- describes the nodes we have
Engine/Runtime/a-comutr.adb:1706:11   - Unknown word (allocated)     -- -- allocated; the root node itself
Engine/Runtime/a-comutr.adb:1706:36   - Unknown word (itself)        -- allocated; the root node itself is not included in that
Engine/Runtime/a-comutr.adb:1706:50   - Unknown word (included)      -- root node itself is not included in that count. The
Engine/Runtime/a-comutr.adb:1707:53   - Unknown word (includes)      -- returns a value that includes the root node
Engine/Runtime/a-comutr.adb:1708:12   - Unknown word (because)       -- -- (because the RM says so), so
Engine/Runtime/a-comutr.adb:1708:27   - Unknown word (says)          -- -- (because the RM says so), so we must add
Engine/Runtime/a-comutr.adb:1708:61   - Unknown word (cached)        -- we must add 1 to our cached value.
Engine/Runtime/a-comutr.adb:1731:7    - Unknown word (Prepent)       -- -- Prepent_Child --
Engine/Runtime/a-comutr.adb:1765:14   - Unknown word (Reclaim)       -- -- Reclaim other nodes if Storage
Engine/Runtime/a-comutr.adb:1765:22   - Unknown word (other)         -- -- Reclaim other nodes if Storage_Error
Engine/Runtime/a-comutr.adb:176:14    - Unknown word (Equal)        -- return Equal_Children (Root_Node
Engine/Runtime/a-comutr.adb:1782:36   - Unknown word (increment)     -- count value. Here we increment the total count by the
Engine/Runtime/a-comutr.adb:1789:7    - Unknown word (Previous)      -- -- Previous --
Engine/Runtime/a-comutr.adb:1792:24   - Unknown word (Previous)      -- overriding function Previous
Engine/Runtime/a-comutr.adb:1803:32   - Unknown word (Previous)      -- "Position cursor of Previous designates wrong tree
Engine/Runtime/a-comutr.adb:1803:52   - Unknown word (wrong)         -- Previous designates wrong tree";
Engine/Runtime/a-comutr.adb:1806:14   - Unknown word (Previous)      -- return Previous_Sibling (Position);
Engine/Runtime/a-comutr.adb:180:7     - Unknown word (Adjust)       -- -- Adjust --
Engine/Runtime/a-comutr.adb:1827:7    - Unknown word (Pseudo)        -- -- Pseudo_Reference --
Engine/Runtime/a-comutr.adb:1830:13   - Unknown word (Pseudo)        -- function Pseudo_Reference
Engine/Runtime/a-comutr.adb:1833:21   - Unknown word (Tamper)        -- TC : constant Tamper_Counts_Access := Container
Engine/Runtime/a-comutr.adb:1838:8    - Unknown word (Pseudo)        -- end Pseudo_Reference;
Engine/Runtime/a-comutr.adb:183:14    - Unknown word (Adjust)       -- procedure Adjust (Container : in out
Engine/Runtime/a-comutr.adb:1876:43   - Unknown word (says)          -- from the stream that says how many elements follow
Engine/Runtime/a-comutr.adb:1876:52   - Unknown word (many)         -- stream that says how many elements follow
Engine/Runtime/a-comutr.adb:1876:57   - Unknown word (elements)     -- stream that says how many elements follow
Engine/Runtime/a-comutr.adb:1876:66   - Unknown word (follow)       -- says how many elements follow
Engine/Runtime/a-comutr.adb:1879:11   - Unknown word (Actual)       -- -- Actual number of elements read
Engine/Runtime/a-comutr.adb:1879:28   - Unknown word (elements)     -- - Actual number of elements read from the stream
Engine/Runtime/a-comutr.adb:1899:60   - Unknown word (corrupt)      -- attempt to read from corrupt stream";
Engine/Runtime/a-comutr.adb:189:64    - Unknown word (initialized)  -- container to its default-initialized
Engine/Runtime/a-comutr.adb:18:69     - Unknown word (granted)      -- GPL version 3, you are granted --
Engine/Runtime/a-comutr.adb:18:9      - Unknown word (special)      -- -- As a special exception under Section
Engine/Runtime/a-comutr.adb:190:18    - Unknown word (before)       -- -- state, before we attempt any allocation
Engine/Runtime/a-comutr.adb:190:28    - Unknown word (attempt)      -- - state, before we attempt any allocation, to ensure
Engine/Runtime/a-comutr.adb:190:40    - Unknown word (allocation)  -- before we attempt any allocation, to ensure that invariants
Engine/Runtime/a-comutr.adb:190:55    - Unknown word (ensure)      -- attempt any allocation, to ensure that invariants
Engine/Runtime/a-comutr.adb:190:62    - Unknown word (that)        -- allocation, to ensure that invariants
Engine/Runtime/a-comutr.adb:1915:42   - Unknown word (reads)        -- that the allocation and reads have completed successfully
Engine/Runtime/a-comutr.adb:1915:48   - Unknown word (have)         -- allocation and reads have completed successfully
Engine/Runtime/a-comutr.adb:1915:63   - Unknown word (successfully) -- reads have completed successfully, it
Engine/Runtime/a-comutr.adb:1916:17   - Unknown word (safe)         -- -- is safe to link the children
Engine/Runtime/a-comutr.adb:191:15    - Unknown word (preserved)   -- -- are preserved in the event that the
Engine/Runtime/a-comutr.adb:191:38    - Unknown word (that)        -- preserved in the event that the allocation fails
Engine/Runtime/a-comutr.adb:191:47    - Unknown word (allocation)  -- in the event that the allocation fails.
Engine/Runtime/a-comutr.adb:191:58    - Unknown word (fails)       -- that the allocation fails.
Engine/Runtime/a-comutr.adb:1945:35   - Unknown word (busy)         -- Container.Clear; -- checks busy bit
Engine/Runtime/a-comutr.adb:1950:57   - Unknown word (corrupt)      -- attempt to read from corrupt stream";
Engine/Runtime/a-comutr.adb:1962:57   - Unknown word (corrupt)      -- attempt to read from corrupt stream";
Engine/Runtime/a-comutr.adb:197:25    - Unknown word (returns)     -- -- Copy_Children returns a count of the number
Engine/Runtime/a-comutr.adb:197:64    - Unknown word (that)        -- the number of nodes that it
Engine/Runtime/a-comutr.adb:198:11    - Unknown word (allocates)   -- -- allocates, but it works by incrementing
Engine/Runtime/a-comutr.adb:198:38    - Unknown word (incrementing) -- allocates, but it works by incrementing the value that is passed
Engine/Runtime/a-comutr.adb:198:61    - Unknown word (that)         -- incrementing the value that is passed
Engine/Runtime/a-comutr.adb:198:69    - Unknown word (passed)       -- ncrementing the value that is passed
Engine/Runtime/a-comutr.adb:199:18    - Unknown word (must)         -- -- in. We must therefore initialize
Engine/Runtime/a-comutr.adb:199:23    - Unknown word (therefore)    -- -- in. We must therefore initialize the count
Engine/Runtime/a-comutr.adb:199:60    - Unknown word (before)       -- initialize the count value before calling
Engine/Runtime/a-comutr.adb:19:27     - Unknown word (described)    -- additional permissions described in the GCC Runtime Library
Engine/Runtime/a-comutr.adb:19:4      - Unknown word (additional)   -- -- additional permissions described
Engine/Runtime/a-comutr.adb:19:56     - Unknown word (Library)      -- described in the GCC Runtime Library Exception,   --
Engine/Runtime/a-comutr.adb:2009:40   - Unknown word (wrong)        -- Position cursor designates wrong container";
Engine/Runtime/a-comutr.adb:2016:29   - Unknown word (multiway)     -- Implement Vet for multiway tree???
Engine/Runtime/a-comutr.adb:2022:24   - Unknown word (Tamper)       -- TC : constant Tamper_Counts_Access :=
Engine/Runtime/a-comutr.adb:2042:21   - Unknown word (utility)      -- -- This is a utility operation to remove
Engine/Runtime/a-comutr.adb:204:18    - Unknown word (attempt)      -- -- Now we attempt the allocation of subtrees
Engine/Runtime/a-comutr.adb:204:30    - Unknown word (allocation)   -- Now we attempt the allocation of subtrees. The invariants
Engine/Runtime/a-comutr.adb:205:11    - Unknown word (satisfied)    -- -- satisfied even if the allocation
Engine/Runtime/a-comutr.adb:205:21    - Unknown word (even)         -- -- satisfied even if the allocation fails
Engine/Runtime/a-comutr.adb:205:33    - Unknown word (allocation)   -- satisfied even if the allocation fails.
Engine/Runtime/a-comutr.adb:205:44    - Unknown word (fails)        -- even if the allocation fails.
Engine/Runtime/a-comutr.adb:208:14    - Unknown word (Assert)       -- pragma Assert (Target_Count = Source
Engine/Runtime/a-comutr.adb:211:8     - Unknown word (Adjust)       -- end Adjust;
Engine/Runtime/a-comutr.adb:2135:14   - Unknown word (Convention)   -- pragma Convention (C, Root_Node_Access
Engine/Runtime/a-comutr.adb:2143:21   - Unknown word (utility)      -- -- This is a utility function for converting
Engine/Runtime/a-comutr.adb:2143:42   - Unknown word (converting)   -- utility function for converting from an access type
Engine/Runtime/a-comutr.adb:2144:26   - Unknown word (distinguished) -- -- designates the distinguished root node to an access
Engine/Runtime/a-comutr.adb:2144:68   - Unknown word (designating)   -- node to an access type designating
Engine/Runtime/a-comutr.adb:2146:27   - Unknown word (otherwise)     -- -- element, but is otherwise identical to a non-root
Engine/Runtime/a-comutr.adb:2146:37   - Unknown word (identical)     -- element, but is otherwise identical to a non-root node,
Engine/Runtime/a-comutr.adb:2147:22   - Unknown word (itself)        -- -- conversion itself is safe.
Engine/Runtime/a-comutr.adb:2147:32   - Unknown word (safe)          -- conversion itself is safe.
Engine/Runtime/a-comutr.adb:214:16    - Unknown word (Find)         -- -- Ancestor_Find --
Engine/Runtime/a-comutr.adb:214:7     - Unknown word (Ancestor)     -- -- Ancestor_Find --
Engine/Runtime/a-comutr.adb:2153:7    - Unknown word (Splice)        -- -- Splice_Children --
Engine/Runtime/a-comutr.adb:2156:14   - Unknown word (Splice)        -- procedure Splice_Children
Engine/Runtime/a-comutr.adb:217:13    - Unknown word (Ancestor)     -- function Ancestor_Find
Engine/Runtime/a-comutr.adb:217:22    - Unknown word (Find)         -- function Ancestor_Find
Engine/Runtime/a-comutr.adb:219:18    - Unknown word (Element)      -- Item : Element_Type) return Cursor
Engine/Runtime/a-comutr.adb:2205:32   - Unknown word (Reachable)     -- if Checks and then Is_Reachable (From => Target_Parent
Engine/Runtime/a-comutr.adb:2209:38   - Unknown word (ancestor)      -- with "Source_Parent is ancestor of Target_Parent";
Engine/Runtime/a-comutr.adb:2212:10   - Unknown word (Splice)        -- Splice_Children
Engine/Runtime/a-comutr.adb:2223:51   - Unknown word (allocated)     -- of the nodes we have allocated, so that operation
Engine/Runtime/a-comutr.adb:2224:57   - Unknown word (means)         -- O(1) time. But that means we must count the
Engine/Runtime/a-comutr.adb:2226:20   - Unknown word (keep)          -- -- order to keep the count accurate.
Engine/Runtime/a-comutr.adb:2226:35   - Unknown word (accurate)      -- order to keep the count accurate.
Engine/Runtime/a-comutr.adb:2231:31   - Unknown word (because)       -- Count := Count - 1;  -- because Source_Parent node does
Engine/Runtime/a-comutr.adb:2233:7    - Unknown word (Splice)        -- Splice_Children
Engine/Runtime/a-comutr.adb:224:40    - Unknown word (Element)      -- and then Position = No_Element then
Engine/Runtime/a-comutr.adb:225:48    - Unknown word (cursor)       -- Error with "Position cursor has no element";
Engine/Runtime/a-comutr.adb:225:62    - Unknown word (element)      -- Position cursor has no element";
Engine/Runtime/a-comutr.adb:228:11    - Unknown word (Commented)    -- -- Commented-out pending official
Engine/Runtime/a-comutr.adb:228:33    - Unknown word (official)     -- Commented-out pending official ruling from ARG.  ?
Engine/Runtime/a-comutr.adb:228:42    - Unknown word (ruling)       -- out pending official ruling from ARG.  ???
Engine/Runtime/a-comutr.adb:2294:35   - Unknown word (ancestor)      -- with "Source_Parent is ancestor of Target_Parent";
Engine/Runtime/a-comutr.adb:22:28     - Unknown word (freely)       -- particular, you can freely distribute your programs
Engine/Runtime/a-comutr.adb:22:36     - Unknown word (distribute)   -- particular, you can freely  distribute your programs  built
Engine/Runtime/a-comutr.adb:22:47     - Unknown word (your)         -- can freely  distribute your programs  built with
Engine/Runtime/a-comutr.adb:22:52     - Unknown word (programs)     -- freely distribute your programs built with the --
Engine/Runtime/a-comutr.adb:22:62     - Unknown word (built)        -- distribute your programs  built with the --
Engine/Runtime/a-comutr.adb:22:7      - Unknown word (particular)   -- -- In particular, you can freely  distribute
Engine/Runtime/a-comutr.adb:230:46    - Unknown word (Unrestricted) -- Container /= Container'Unrestricted_Access then
Engine/Runtime/a-comutr.adb:2312:21   - Unknown word (utility)       -- -- This is a utility operation to remove
Engine/Runtime/a-comutr.adb:2313:36   - Unknown word (them)          -- Source parent and insert them into Target parent.
Engine/Runtime/a-comutr.adb:2317:29   - Unknown word (pointers)      -- Fix up the Parent pointers of each child to designate
Engine/Runtime/a-comutr.adb:2317:41   - Unknown word (each)          -- the Parent pointers of each child to designate
Engine/Runtime/a-comutr.adb:2317:55   - Unknown word (designate)     -- pointers of each child to designate
Engine/Runtime/a-comutr.adb:231:20    - Unknown word (Program)      -- -- raise Program_Error with "Position
Engine/Runtime/a-comutr.adb:231:49    - Unknown word (cursor)       -- Error with "Position cursor not in container";
Engine/Runtime/a-comutr.adb:234:19    - Unknown word (says)         -- -- AI-0136 says to raise PE if Position
Engine/Runtime/a-comutr.adb:234:48    - Unknown word (equals)       -- raise PE if Position equals the root node. This
Engine/Runtime/a-comutr.adb:234:70    - Unknown word (This)         -- equals the root node. This does
Engine/Runtime/a-comutr.adb:234:75    - Unknown word (does)         -- the root node. This does
Engine/Runtime/a-comutr.adb:235:15    - Unknown word (seem)         -- -- not seem correct, as this value
Engine/Runtime/a-comutr.adb:235:20    - Unknown word (correct)      -- -- not seem correct, as this value is just
Engine/Runtime/a-comutr.adb:235:32    - Unknown word (this)         -- not seem correct, as this value is just the limiting
Engine/Runtime/a-comutr.adb:235:46    - Unknown word (just)         -- correct, as this value is just the limiting condition
Engine/Runtime/a-comutr.adb:236:30    - Unknown word (omit)         -- search. For now we omit this check, pending
Engine/Runtime/a-comutr.adb:236:35    - Unknown word (this)         -- search. For now we omit this check, pending a ruling
Engine/Runtime/a-comutr.adb:236:57    - Unknown word (ruling)       -- this check, pending a ruling from the ARG.???
Engine/Runtime/a-comutr.adb:2393:54   - Unknown word (ancestor)      -- Error with "Position is ancestor of Parent";
Engine/Runtime/a-comutr.adb:239:20    - Unknown word (Program)      -- -- raise Program_Error with "Position
Engine/Runtime/a-comutr.adb:239:49    - Unknown word (cursor)       -- Error with "Position cursor designates root";
Engine/Runtime/a-comutr.adb:239:56    - Unknown word (designates)   -- with "Position cursor designates root";
Engine/Runtime/a-comutr.adb:23:23     - Unknown word (including)    -- GNAT Pro compiler, including any required library
Engine/Runtime/a-comutr.adb:23:37     - Unknown word (required)     -- compiler, including any required library run-time units
Engine/Runtime/a-comutr.adb:23:4      - Unknown word (GNAT)         -- -- GNAT Pro compiler, including
Engine/Runtime/a-comutr.adb:23:46     - Unknown word (library)      -- including any required library run-time units,  using
Engine/Runtime/a-comutr.adb:23:71     - Unknown word (using)        -- library run-time units,  using --
Engine/Runtime/a-comutr.adb:2407:22   - Unknown word (unfortunate)   -- -- This is an unfortunate feature of this API
Engine/Runtime/a-comutr.adb:2408:63   - Unknown word (which)         -- from the source tree, which is an O(n)
Engine/Runtime/a-comutr.adb:2409:25   - Unknown word (would)         -- -- operation. It would have been better if
Engine/Runtime/a-comutr.adb:2409:36   - Unknown word (been)          -- operation. It would have been better if the Tree container
Engine/Runtime/a-comutr.adb:2409:41   - Unknown word (better)        -- It would have been better if the Tree container
Engine/Runtime/a-comutr.adb:2410:29   - Unknown word (selector)      -- have a Node_Count selector; a user that wants the
Engine/Runtime/a-comutr.adb:2410:51   - Unknown word (wants)         -- selector; a user that wants the number of nodes
Engine/Runtime/a-comutr.adb:2411:20   - Unknown word (could)         -- -- the tree could simply call Subtree
Engine/Runtime/a-comutr.adb:2411:26   - Unknown word (simply)        -- -- the tree could simply call Subtree_Node_Count
Engine/Runtime/a-comutr.adb:2411:33   - Unknown word (call)          -- the tree could simply call Subtree_Node_Count,
Engine/Runtime/a-comutr.adb:2411:67   - Unknown word (understanding) -- Node_Count, with the understanding
Engine/Runtime/a-comutr.adb:2412:16   - Unknown word (such)          -- -- that such an operation is O(n
Engine/Runtime/a-comutr.adb:2414:14   - Unknown word (course)        -- -- Of course, we could choose to
Engine/Runtime/a-comutr.adb:2414:25   - Unknown word (could)         -- -- Of course, we could choose to implement
Engine/Runtime/a-comutr.adb:2414:31   - Unknown word (choose)        -- Of course, we could choose to implement the Node
Engine/Runtime/a-comutr.adb:2414:66   - Unknown word (selector)      -- implement the Node_Count selector as an
Engine/Runtime/a-comutr.adb:2415:27   - Unknown word (which)         -- -- O(n) operation, which would turn this splice
Engine/Runtime/a-comutr.adb:2415:33   - Unknown word (would)         -- n) operation, which would turn this splice operation
Engine/Runtime/a-comutr.adb:2415:39   - Unknown word (turn)          -- operation, which would turn this splice operation
Engine/Runtime/a-comutr.adb:2415:49   - Unknown word (splice)        -- which would turn this splice operation into an O
Engine/Runtime/a-comutr.adb:245:15    - Unknown word (Element)      -- if N.Element = Item then
Engine/Runtime/a-comutr.adb:2469:14   - Unknown word (Should)        -- -- Should this be PE instead?
Engine/Runtime/a-comutr.adb:2469:32   - Unknown word (instead)       -- Should this be PE instead? Need ARG confirmation
Engine/Runtime/a-comutr.adb:2469:42   - Unknown word (Need)          -- this be PE instead?  Need ARG confirmation.
Engine/Runtime/a-comutr.adb:2489:51   - Unknown word (ancestor)      -- Error with "Position is ancestor of Parent";
Engine/Runtime/a-comutr.adb:24:28     - Unknown word (your)         -- licensing terms  of your choosing.  See the AdaCore
Engine/Runtime/a-comutr.adb:24:33     - Unknown word (choosing)     -- licensing terms  of your choosing. See the AdaCore Software
Engine/Runtime/a-comutr.adb:24:8      - Unknown word (licensing)    -- -- any licensing terms  of your choosing
Engine/Runtime/a-comutr.adb:253:17    - Unknown word (Find)         -- end Ancestor_Find;
Engine/Runtime/a-comutr.adb:253:8     - Unknown word (Ancestor)     -- end Ancestor_Find;
Engine/Runtime/a-comutr.adb:2549:39   - Unknown word (sooner)        -- then -- make this test sooner???
Engine/Runtime/a-comutr.adb:25:8      - Unknown word (full)         -- -- for full details.
Engine/Runtime/a-comutr.adb:2679:20   - Unknown word (Multiway)      -- end Ada.Containers.Multiway_Trees;
Engine/Runtime/a-comutr.adb:270:46    - Unknown word (cursor)       -- Constraint_Error with "Parent cursor has no element";
Engine/Runtime/a-comutr.adb:270:60    - Unknown word (element)      -- Parent cursor has no element";
Engine/Runtime/a-comutr.adb:273:56    - Unknown word (Unrestricted) -- Container /= Container'Unrestricted_Access then
Engine/Runtime/a-comutr.adb:274:16    - Unknown word (Program)      -- raise Program_Error with "Parent cursor
Engine/Runtime/a-comutr.adb:274:43    - Unknown word (cursor)       -- Program_Error with "Parent cursor not in container";
Engine/Runtime/a-comutr.adb:27:18     - Unknown word (originally)   -- -- This unit was originally developed by Matthew
Engine/Runtime/a-comutr.adb:27:29     - Unknown word (developed)    -- unit was originally developed by Matthew J Heaney
Engine/Runtime/a-comutr.adb:27:4      - Unknown word (This)         -- -- This unit was originally
Engine/Runtime/a-comutr.adb:27:42     - Unknown word (Matthew)      -- originally developed by Matthew J Heaney.
Engine/Runtime/a-comutr.adb:27:52     - Unknown word (Heaney)       -- developed by Matthew J Heaney. -
Engine/Runtime/a-comutr.adb:290:14    - Unknown word (Reclaim)      -- -- Reclaim other nodes if Storage
Engine/Runtime/a-comutr.adb:290:22    - Unknown word (other)        -- -- Reclaim other nodes if Storage_Error
Engine/Runtime/a-comutr.adb:304:10    - Unknown word (Before)       -- Before => null);  -- null means
Engine/Runtime/a-comutr.adb:304:36    - Unknown word (means)        -- Before => null);  -- null means "insert at end of list
Engine/Runtime/a-comutr.adb:307:28    - Unknown word (Here)         -- - the count value. Here we increment the total
Engine/Runtime/a-comutr.adb:307:36    - Unknown word (increment)    -- count value. Here we increment the total count by the
Engine/Runtime/a-comutr.adb:308:20    - Unknown word (just)         -- -- nodes we just inserted.
Engine/Runtime/a-comutr.adb:308:25    - Unknown word (inserted)     -- -- nodes we just inserted.
Engine/Runtime/a-comutr.adb:326:32    - Unknown word (busy)         -- Target.Clear; -- checks busy bit
Engine/Runtime/a-comutr.adb:328:25    - Unknown word (returns)      -- -- Copy_Children returns the number of nodes
Engine/Runtime/a-comutr.adb:328:61    - Unknown word (allocates)    -- number of nodes that it allocates, but it
Engine/Runtime/a-comutr.adb:329:11    - Unknown word (does)         -- -- does this by incrementing
Engine/Runtime/a-comutr.adb:329:16    - Unknown word (this)         -- -- does this by incrementing the
Engine/Runtime/a-comutr.adb:329:24    - Unknown word (incrementing) -- -- does this by incrementing the count value passed
Engine/Runtime/a-comutr.adb:329:53    - Unknown word (passed)       -- incrementing the count value passed in, so we must
Engine/Runtime/a-comutr.adb:329:70    - Unknown word (must)         -- value passed in, so we must
Engine/Runtime/a-comutr.adb:330:32    - Unknown word (before)       -- initialize the count before calling Copy_Children
Engine/Runtime/a-comutr.adb:334:35    - Unknown word (inserts)      -- Note that Copy_Children inserts the newly-allocated
Engine/Runtime/a-comutr.adb:334:47    - Unknown word (newly)        -- Children inserts the newly-allocated children into
Engine/Runtime/a-comutr.adb:334:53    - Unknown word (allocated)    -- Children inserts the newly-allocated children into
Engine/Runtime/a-comutr.adb:335:11    - Unknown word (their)        -- -- their parent list only after
Engine/Runtime/a-comutr.adb:335:34    - Unknown word (after)        -- their parent list only after the allocation of all
Engine/Runtime/a-comutr.adb:335:44    - Unknown word (allocation)   -- list only after the allocation of all the children
Engine/Runtime/a-comutr.adb:336:11    - Unknown word (succeeded)    -- -- succeeded. This preserves invariants
Engine/Runtime/a-comutr.adb:336:22    - Unknown word (This)         -- -- succeeded. This preserves invariants
Engine/Runtime/a-comutr.adb:336:27    - Unknown word (preserves)    -- -- succeeded. This preserves invariants even if the
Engine/Runtime/a-comutr.adb:336:48    - Unknown word (even)         -- preserves invariants even if the allocation fails
Engine/Runtime/a-comutr.adb:336:71    - Unknown word (fails)        -- even if the allocation fails.
Engine/Runtime/a-comutr.adb:339:14    - Unknown word (Assert)       -- pragma Assert (Target_Count = Source
Engine/Runtime/a-comutr.adb:35:29     - Unknown word (Multiway)     -- body Ada.Containers.Multiway_Trees is
Engine/Runtime/a-comutr.adb:370:13    - Unknown word (Depth)        -- -- Child_Depth --
Engine/Runtime/a-comutr.adb:373:19    - Unknown word (Depth)        -- function Child_Depth (Parent, Child : Cursor
Engine/Runtime/a-comutr.adb:379:60    - Unknown word (element)      -- Parent cursor has no element";
Engine/Runtime/a-comutr.adb:37:11     - Unknown word (Warnings)     -- pragma Warnings (Off, "variable ""Busy
Engine/Runtime/a-comutr.adb:37:38     - Unknown word (Busy)         -- Warnings (Off, "variable ""Busy*"" is not referenced
Engine/Runtime/a-comutr.adb:37:53     - Unknown word (referenced)   -- variable ""Busy*"" is not referenced");
Engine/Runtime/a-comutr.adb:383:59    - Unknown word (element)      -- Child cursor has no element";
Engine/Runtime/a-comutr.adb:387:16    - Unknown word (Program)      -- raise Program_Error with "Parent and
Engine/Runtime/a-comutr.adb:387:56    - Unknown word (different)    -- Parent and Child in different containers";
Engine/Runtime/a-comutr.adb:38:11     - Unknown word (Warnings)     -- pragma Warnings (Off, "variable ""Lock
Engine/Runtime/a-comutr.adb:38:53     - Unknown word (referenced)   -- variable ""Lock*"" is not referenced");
Engine/Runtime/a-comutr.adb:397:19    - Unknown word (Program)      -- raise Program_Error with "Parent is
Engine/Runtime/a-comutr.adb:397:53    - Unknown word (ancestor)     -- with "Parent is not ancestor of Child";
Engine/Runtime/a-comutr.adb:39:38     - Unknown word (Helpers)      -- comment in Ada.Containers.Helpers
Engine/Runtime/a-comutr.adb:3:28      - Unknown word (GNAT)       -- GNAT LIBRARY COMPONENTS
Engine/Runtime/a-comutr.adb:3:33      - Unknown word (LIBRARY)    -- GNAT LIBRARY COMPONENTS
Engine/Runtime/a-comutr.adb:402:14    - Unknown word (Depth)        -- end Child_Depth;
Engine/Runtime/a-comutr.adb:414:62    - Unknown word (preserve)     -- count to 0, in order to preserve
Engine/Runtime/a-comutr.adb:415:47    - Unknown word (fails)        -- case the deallocation fails. (This works because
Engine/Runtime/a-comutr.adb:415:55    - Unknown word (This)         -- deallocation fails. (This works because
Engine/Runtime/a-comutr.adb:415:66    - Unknown word (because)      -- allocation fails. (This works because
Engine/Runtime/a-comutr.adb:416:31    - Unknown word (immediately)  -- Deallocate_Children immediately removes the children
Engine/Runtime/a-comutr.adb:416:43    - Unknown word (removes)      -- Children immediately removes the children from their
Engine/Runtime/a-comutr.adb:416:69    - Unknown word (their)        -- removes the children from their
Engine/Runtime/a-comutr.adb:417:28    - Unknown word (does)         -- - parent, and then does the actual deallocation
Engine/Runtime/a-comutr.adb:417:37    - Unknown word (actual)       -- parent, and then does the actual deallocation.)
Engine/Runtime/a-comutr.adb:422:31    - Unknown word (returns)      -- Deallocate_Children returns the number of nodes
Engine/Runtime/a-comutr.adb:423:18    - Unknown word (does)         -- -- but it does this by incrementing
Engine/Runtime/a-comutr.adb:423:23    - Unknown word (this)         -- -- but it does this by incrementing the
Engine/Runtime/a-comutr.adb:423:31    - Unknown word (incrementing) -- but it does this by incrementing the count value that
Engine/Runtime/a-comutr.adb:423:68    - Unknown word (passed)       -- count value that is passed in,
Engine/Runtime/a-comutr.adb:424:17    - Unknown word (must)         -- -- so we must first initialize the
Engine/Runtime/a-comutr.adb:424:62    - Unknown word (before)       -- the count return value before calling it.
Engine/Runtime/a-comutr.adb:428:23    - Unknown word (above)        -- -- See comment above. Deallocate_Children
Engine/Runtime/a-comutr.adb:428:50    - Unknown word (immediately)  -- Deallocate_Children immediately removes the
Engine/Runtime/a-comutr.adb:428:62    - Unknown word (removes)      -- Children immediately removes the
Engine/Runtime/a-comutr.adb:429:30    - Unknown word (their)        -- children list from their parent node (here, the
Engine/Runtime/a-comutr.adb:429:49    - Unknown word (here)         -- from their parent node (here, the root of the tree
Engine/Runtime/a-comutr.adb:42:22     - Unknown word (Strings)      -- (S : in out Ada.Strings.Text_Buffers.Root_Buffer
Engine/Runtime/a-comutr.adb:430:20    - Unknown word (after)        -- -- and only after that does it attempt
Engine/Runtime/a-comutr.adb:430:31    - Unknown word (does)         -- and only after that does it attempt the actual
Engine/Runtime/a-comutr.adb:430:39    - Unknown word (attempt)      -- only after that does it attempt the actual deallocation
Engine/Runtime/a-comutr.adb:430:51    - Unknown word (actual)       -- does it attempt the actual deallocation. So even
Engine/Runtime/a-comutr.adb:430:75    - Unknown word (even)         -- actual deallocation. So even
Engine/Runtime/a-comutr.adb:431:31    - Unknown word (fails)        -- if the deallocation fails, the representation
Engine/Runtime/a-comutr.adb:431:42    - Unknown word (representation) -- deallocation fails, the representation invariants for the tree
Engine/Runtime/a-comutr.adb:432:15    - Unknown word (preserved)      -- -- are preserved.
Engine/Runtime/a-comutr.adb:435:14    - Unknown word (Assert)         -- pragma Assert (Children_Count = Container
Engine/Runtime/a-comutr.adb:449:36    - Unknown word (element)        -- Position cursor has no element";
Engine/Runtime/a-comutr.adb:452:58    - Unknown word (Unrestricted)   -- Container /= Container'Unrestricted_Access
Engine/Runtime/a-comutr.adb:455:29    - Unknown word (designates)     -- "Position cursor designates wrong container";
Engine/Runtime/a-comutr.adb:455:40    - Unknown word (wrong)          -- Position cursor designates wrong container";
Engine/Runtime/a-comutr.adb:459:52    - Unknown word (designates)     -- with "Position cursor designates root";
Engine/Runtime/a-comutr.adb:462:29    - Unknown word (multiway)       -- Implement Vet for multiway tree???
Engine/Runtime/a-comutr.adb:463:18    - Unknown word (Assert)         -- -- pragma Assert (Vet (Position),
Engine/Runtime/a-comutr.adb:468:24    - Unknown word (Tamper)         -- TC : constant Tamper_Counts_Access :=
Engine/Runtime/a-comutr.adb:469:17    - Unknown word (Unrestricted)   -- C.TC'Unrestricted_Access;
Engine/Runtime/a-comutr.adb:473:25    - Unknown word (Controlled)     -- Control => (Controlled with TC))
Engine/Runtime/a-comutr.adb:481:7     - Unknown word (Contains)       -- -- Contains --
Engine/Runtime/a-comutr.adb:484:13    - Unknown word (Contains)       -- function Contains
Engine/Runtime/a-comutr.adb:48:47     - Unknown word (Controlled)   -- abstract new Limited_Controlled and
Engine/Runtime/a-comutr.adb:490:8     - Unknown word (Contains)       -- end Contains;
Engine/Runtime/a-comutr.adb:504:17    - Unknown word (Assert)         -- pragma Assert (Target.Count = Source
Engine/Runtime/a-comutr.adb:525:14    - Unknown word (special)        -- -- We special-case the first allocation
Engine/Runtime/a-comutr.adb:525:61    - Unknown word (establish)      -- allocation, in order to establish the
Engine/Runtime/a-comutr.adb:526:11    - Unknown word (representation) -- -- representation invariants for type
Engine/Runtime/a-comutr.adb:542:15    - Unknown word (representation) -- -- The representation invariants for the Children
Engine/Runtime/a-comutr.adb:542:68    - Unknown word (have)           -- the Children_Type list have been
Engine/Runtime/a-comutr.adb:542:73    - Unknown word (been)           -- Children_Type list have been
Engine/Runtime/a-comutr.adb:543:11    - Unknown word (established)    -- -- established, so we can now copy
Engine/Runtime/a-comutr.adb:543:47    - Unknown word (remaining)      -- we can now copy the remaining children of Source.
Engine/Runtime/a-comutr.adb:54:22     - Unknown word (Controlled)   -- ;--with Disable_Controlled => not T_Check;
Engine/Runtime/a-comutr.adb:559:19    - Unknown word (newly)          -- -- Add the newly-allocated children to
Engine/Runtime/a-comutr.adb:559:25    - Unknown word (allocated)      -- -- Add the newly-allocated children to their parent
Engine/Runtime/a-comutr.adb:559:47    - Unknown word (their)          -- allocated children to their parent list only after
Engine/Runtime/a-comutr.adb:559:70    - Unknown word (after)          -- their parent list only after the
Engine/Runtime/a-comutr.adb:560:26    - Unknown word (succeeded)      -- -- allocation has succeeded, so as to preserve invariants
Engine/Runtime/a-comutr.adb:560:46    - Unknown word (preserve)       -- succeeded, so as to preserve invariants of the parent
Engine/Runtime/a-comutr.adb:572:7     - Unknown word (Before)         -- Before : Cursor;
Engine/Runtime/a-comutr.adb:583:53    - Unknown word (Unrestricted)   -- Container /= Target'Unrestricted_Access then
Engine/Runtime/a-comutr.adb:602:53    - Unknown word (designates)     -- with "Source cursor designates root";
Engine/Runtime/a-comutr.adb:605:24    - Unknown word (returns)        -- -- Copy_Subtree returns a count of the number
Engine/Runtime/a-comutr.adb:606:11    - Unknown word (allocates)      -- -- allocates, but it works by incrementing
Engine/Runtime/a-comutr.adb:606:38    - Unknown word (incrementing)   -- allocates, but it works by incrementing the value that is passed
Engine/Runtime/a-comutr.adb:606:69    - Unknown word (passed)         -- ncrementing the value that is passed
Engine/Runtime/a-comutr.adb:607:18    - Unknown word (must)           -- -- in. We must therefore initialize
Engine/Runtime/a-comutr.adb:607:23    - Unknown word (therefore)      -- -- in. We must therefore initialize the count
Engine/Runtime/a-comutr.adb:607:60    - Unknown word (before)         -- initialize the count value before calling
Engine/Runtime/a-comutr.adb:628:28    - Unknown word (Here)           -- - the count value. Here we increment the total
Engine/Runtime/a-comutr.adb:628:36    - Unknown word (increment)      -- count value. Here we increment the total count by the
Engine/Runtime/a-comutr.adb:629:20    - Unknown word (just)           -- -- nodes we just inserted.
Engine/Runtime/a-comutr.adb:629:25    - Unknown word (inserted)       -- -- nodes we just inserted.
Engine/Runtime/a-comutr.adb:62:12     - Unknown word (these)        -- -- ??? these headers are a bit odd
Engine/Runtime/a-comutr.adb:62:49     - Unknown word (sure)         -- are a bit odd, but for sure they do not substitute
Engine/Runtime/a-comutr.adb:62:54     - Unknown word (they)         -- bit odd, but for sure they do not substitute
Engine/Runtime/a-comutr.adb:62:66     - Unknown word (substitute)   -- for sure they do not substitute
Engine/Runtime/a-comutr.adb:63:12     - Unknown word (documenting)  -- -- for documenting things, what *is* a
Engine/Runtime/a-comutr.adb:63:32     - Unknown word (what)         -- documenting things, what *is* a Subtree_Iterator
Engine/Runtime/a-comutr.adb:667:14    - Unknown word (immediately)    -- -- We immediately remove the children
Engine/Runtime/a-comutr.adb:667:51    - Unknown word (their)          -- remove the children from their parent, in order to
Engine/Runtime/a-comutr.adb:668:11    - Unknown word (preserve)       -- -- preserve invariants in case the
Engine/Runtime/a-comutr.adb:67:65     - Unknown word (Cursor)       -- Subtree_Iterator) return Cursor;
Engine/Runtime/a-comutr.adb:715:31    - Unknown word (returns)        -- Deallocate_Children returns a count of the number
Engine/Runtime/a-comutr.adb:716:40    - Unknown word (incrementing)   -- deallocates, but it works by incrementing the value that is passed
Engine/Runtime/a-comutr.adb:716:71    - Unknown word (passed)         -- ncrementing the value that is passed
Engine/Runtime/a-comutr.adb:717:18    - Unknown word (must)           -- -- in. We must therefore initialize
Engine/Runtime/a-comutr.adb:717:23    - Unknown word (therefore)      -- -- in. We must therefore initialize the count
Engine/Runtime/a-comutr.adb:71:18     - Unknown word (Cursor)       -- Position : Cursor) return Cursor;
Engine/Runtime/a-comutr.adb:71:33     - Unknown word (Cursor)       -- Position : Cursor) return Cursor;
Engine/Runtime/a-comutr.adb:729:14    - Unknown word (Leaf)           -- -- Delete_Leaf --
Engine/Runtime/a-comutr.adb:732:21    - Unknown word (Leaf)           -- procedure Delete_Leaf
Engine/Runtime/a-comutr.adb:749:52    - Unknown word (designates)     -- with "Position cursor designates root";
Engine/Runtime/a-comutr.adb:752:33    - Unknown word (Leaf)           -- Checks and then not Is_Leaf (Position) then
Engine/Runtime/a-comutr.adb:753:64    - Unknown word (designate)      -- Position cursor does not designate leaf";
Engine/Runtime/a-comutr.adb:753:74    - Unknown word (leaf)           -- cursor does not designate leaf";
Engine/Runtime/a-comutr.adb:761:19    - Unknown word (represention)   -- -- Restore represention invariants before attempting
Engine/Runtime/a-comutr.adb:761:50    - Unknown word (attempting)     -- epresention invariants before attempting the actual
Engine/Runtime/a-comutr.adb:761:65    - Unknown word (actual)         -- before attempting the actual
Engine/Runtime/a-comutr.adb:767:21    - Unknown word (safe)           -- -- It is now safe to attempt the deallocation
Engine/Runtime/a-comutr.adb:767:29    - Unknown word (attempt)        -- It is now safe to attempt the deallocation. This
Engine/Runtime/a-comutr.adb:767:55    - Unknown word (This)           -- attempt the deallocation. This leaf node has been
Engine/Runtime/a-comutr.adb:767:60    - Unknown word (leaf)           -- the deallocation. This leaf node has been
Engine/Runtime/a-comutr.adb:767:74    - Unknown word (been)           -- This leaf node has been
Engine/Runtime/a-comutr.adb:768:11    - Unknown word (disassociated)  -- -- disassociated from the tree, so even
Engine/Runtime/a-comutr.adb:768:43    - Unknown word (even)           -- sassociated from the tree, so even if the deallocation
Engine/Runtime/a-comutr.adb:769:11    - Unknown word (representation) -- -- representation invariants will remain
Engine/Runtime/a-comutr.adb:769:37    - Unknown word (will)           -- representation invariants will remain satisfied.
Engine/Runtime/a-comutr.adb:769:42    - Unknown word (remain)         -- epresentation invariants will remain satisfied.
Engine/Runtime/a-comutr.adb:769:49    - Unknown word (satisfied)      -- invariants will remain satisfied.
Engine/Runtime/a-comutr.adb:772:15    - Unknown word (Leaf)           -- end Delete_Leaf;
Engine/Runtime/a-comutr.adb:78:31     - Unknown word (Reversible)   -- Iterator_Interfaces.Reversible_Iterator with null record
Engine/Runtime/a-comutr.adb:79:24     - Unknown word (Controlled)   -- ;--with Disable_Controlled => not T_Check;
Engine/Runtime/a-comutr.adb:804:11    - Unknown word (Here)           -- -- Here is one case where a
Engine/Runtime/a-comutr.adb:804:28    - Unknown word (where)          -- - Here is one case where a deallocation failure
Engine/Runtime/a-comutr.adb:805:26    - Unknown word (representation) -- -- violation of a representation invariant. We disassociate
Engine/Runtime/a-comutr.adb:806:42    - Unknown word (decrement)      -- tree now, but we only decrement the total node count
Engine/Runtime/a-comutr.adb:806:73    - Unknown word (after)          -- the total node count after
Engine/Runtime/a-comutr.adb:807:14    - Unknown word (attempt)        -- -- we attempt the deallocation. However
Engine/Runtime/a-comutr.adb:807:40    - Unknown word (However)        -- attempt the deallocation. However, if the deallocation
Engine/Runtime/a-comutr.adb:808:28    - Unknown word (will)           -- - total node count will not get decremented
Engine/Runtime/a-comutr.adb:808:41    - Unknown word (decremented)    -- node count will not get decremented.
Engine/Runtime/a-comutr.adb:810:19    - Unknown word (around)         -- -- One way around this dilemma is to count
Engine/Runtime/a-comutr.adb:810:26    - Unknown word (this)           -- -- One way around this dilemma is to count
Engine/Runtime/a-comutr.adb:810:31    - Unknown word (dilemma)        -- One way around this dilemma is to count the nodes
Engine/Runtime/a-comutr.adb:812:26    - Unknown word (seem)           -- -- so it does not seem worth it.
Engine/Runtime/a-comutr.adb:812:31    - Unknown word (worth)          -- so it does not seem worth it.
Engine/Runtime/a-comutr.adb:814:11    - Unknown word (Perhaps)        -- -- Perhaps this is much ado about
Engine/Runtime/a-comutr.adb:814:27    - Unknown word (much)           -- -- Perhaps this is much ado about nothing, since
Engine/Runtime/a-comutr.adb:814:36    - Unknown word (about)          -- Perhaps this is much ado about nothing, since the only
Engine/Runtime/a-comutr.adb:814:42    - Unknown word (nothing)        -- this is much ado about nothing, since the only way
Engine/Runtime/a-comutr.adb:814:51    - Unknown word (since)          -- much ado about nothing, since the only way
Engine/Runtime/a-comutr.adb:815:39    - Unknown word (Controlled)     -- deallocation can fail is if Controlled Finalization fails:
Engine/Runtime/a-comutr.adb:815:50    - Unknown word (Finalization)   -- fail is if Controlled Finalization fails: this
Engine/Runtime/a-comutr.adb:816:11    - Unknown word (propagates)     -- -- propagates Program_Error so all
Engine/Runtime/a-comutr.adb:816:43    - Unknown word (bets)           -- Program_Error so all bets are off anyway. ???
Engine/Runtime/a-comutr.adb:816:56    - Unknown word (anyway)         -- so all bets are off anyway. ???
Engine/Runtime/a-comutr.adb:81:63     - Unknown word (Cursor)       -- Child_Iterator) return Cursor;
Engine/Runtime/a-comutr.adb:822:23    - Unknown word (therefore)      -- -- in. We must therefore initialize the count
Engine/Runtime/a-comutr.adb:830:24    - Unknown word (above)          -- -- See comments above. We would prefer to
Engine/Runtime/a-comutr.adb:830:34    - Unknown word (would)          -- See comments above. We would prefer to do this sooner
Engine/Runtime/a-comutr.adb:830:40    - Unknown word (prefer)         -- comments above. We would prefer to do this sooner, but
Engine/Runtime/a-comutr.adb:830:58    - Unknown word (sooner)         -- would prefer to do this sooner, but there's no
Engine/Runtime/a-comutr.adb:830:70    - Unknown word (there's)        -- do this sooner, but there's no
Engine/Runtime/a-comutr.adb:831:18    - Unknown word (satisfy)        -- -- way to satisfy that goal without a
Engine/Runtime/a-comutr.adb:831:31    - Unknown word (goal)           -- way to satisfy that goal without a potentially
Engine/Runtime/a-comutr.adb:831:46    - Unknown word (potentially)    -- that goal without a potentially severe execution
Engine/Runtime/a-comutr.adb:831:58    - Unknown word (severe)         -- without a potentially severe execution
Engine/Runtime/a-comutr.adb:832:11    - Unknown word (penalty)        -- -- penalty.
Engine/Runtime/a-comutr.adb:838:7     - Unknown word (Depth)          -- -- Depth --
Engine/Runtime/a-comutr.adb:841:13    - Unknown word (Depth)          -- function Depth (Position : Cursor)
Engine/Runtime/a-comutr.adb:85:18     - Unknown word (Cursor)       -- Position : Cursor) return Cursor;
Engine/Runtime/a-comutr.adb:875:7     - Unknown word (Equal)          -- -- Equal_Children --
Engine/Runtime/a-comutr.adb:878:13    - Unknown word (Equal)          -- function Equal_Children
Engine/Runtime/a-comutr.adb:889:17    - Unknown word (False)          -- return False;
Engine/Runtime/a-comutr.adb:896:20    - Unknown word (False)          -- return False;
Engine/Runtime/a-comutr.adb:89:24     - Unknown word (Previous)     -- overriding function Previous
Engine/Runtime/a-comutr.adb:903:14    - Unknown word (True)           -- return True;
Engine/Runtime/a-comutr.adb:924:17    - Unknown word (True)           -- return True;
Engine/Runtime/a-comutr.adb:929:20    - Unknown word (False)          -- return False;
Engine/Runtime/a-comutr.adb:936:17    - Unknown word (False)          -- return False;
Engine/Runtime/a-comutr.adb:948:17    - Unknown word (False)          -- return False;
Engine/Runtime/a-comutr.adb:94:13     - Unknown word (Subprograms)  -- -- Local Subprograms --
Engine/Runtime/a-comutr.adb:960:7     - Unknown word (Unbusy)         -- Unbusy (Object.Container.TC
Engine/Runtime/a-comutr.adb:9:13      - Unknown word (Copyright)  -- -- Copyright (C) 2004-2016, Free
Engine/Settings/Debugging-No/is_debugging.adb:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/Settings/Debugging-No/is_debugging.adb:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/Settings/Debugging-No/is_debugging.adb:10:110    - Unknown word (warranty)     -- without even the implied warranty of                -
Engine/Settings/Debugging-No/is_debugging.adb:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/Settings/Debugging-No/is_debugging.adb:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/Settings/Debugging-No/is_debugging.adb:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/Settings/Debugging-No/is_debugging.adb:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/Settings/Debugging-No/is_debugging.adb:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/Settings/Debugging-No/is_debugging.adb:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/Settings/Debugging-No/is_debugging.adb:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/Settings/Debugging-No/is_debugging.adb:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/Settings/Debugging-No/is_debugging.adb:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/Settings/Debugging-No/is_debugging.adb:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/Settings/Debugging-No/is_debugging.adb:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/Settings/Debugging-No/is_debugging.adb:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/Settings/Debugging-No/is_debugging.adb:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/Settings/Debugging-No/is_debugging.adb:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/Settings/Debugging-No/is_debugging.adb:16:54     - Unknown word (False)        -- Boolean is begin return False; end;
Engine/Settings/Debugging-No/is_debugging.adb:5:52      - Unknown word (Copyright)  -- Copyright (C) 2016 Justin Squirek
Engine/Settings/Debugging-No/is_debugging.adb:5:71      - Unknown word (Justin)     -- Copyright (C) 2016 Justin Squirek
Engine/Settings/Debugging-No/is_debugging.adb:5:78      - Unknown word (Squirek)    -- Copyright (C) 2016 Justin Squirek
Engine/Settings/Debugging-No/is_debugging.adb:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/Settings/Debugging-No/is_debugging.adb:8:30      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/Settings/Debugging-No/is_debugging.adb:8:70      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/Settings/Debugging-No/is_debugging.adb:8:87      - Unknown word (later)        -- at your option) any later version.
Engine/Settings/Debugging-Yes/is_debugging.adb:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/Settings/Debugging-Yes/is_debugging.adb:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/Settings/Debugging-Yes/is_debugging.adb:10:110    - Unknown word (warranty)     -- without even the implied warranty of                -
Engine/Settings/Debugging-Yes/is_debugging.adb:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/Settings/Debugging-Yes/is_debugging.adb:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/Settings/Debugging-Yes/is_debugging.adb:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/Settings/Debugging-Yes/is_debugging.adb:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/Settings/Debugging-Yes/is_debugging.adb:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/Settings/Debugging-Yes/is_debugging.adb:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/Settings/Debugging-Yes/is_debugging.adb:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/Settings/Debugging-Yes/is_debugging.adb:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/Settings/Debugging-Yes/is_debugging.adb:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/Settings/Debugging-Yes/is_debugging.adb:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/Settings/Debugging-Yes/is_debugging.adb:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/Settings/Debugging-Yes/is_debugging.adb:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/Settings/Debugging-Yes/is_debugging.adb:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/Settings/Debugging-Yes/is_debugging.adb:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/Settings/Debugging-Yes/is_debugging.adb:16:54     - Unknown word (True)         -- Boolean is begin return True; end;
Engine/Settings/Debugging-Yes/is_debugging.adb:5:52      - Unknown word (Copyright)  -- Copyright (C) 2016 Justin Squirek
Engine/Settings/Debugging-Yes/is_debugging.adb:5:71      - Unknown word (Justin)     -- Copyright (C) 2016 Justin Squirek
Engine/Settings/Debugging-Yes/is_debugging.adb:5:78      - Unknown word (Squirek)    -- Copyright (C) 2016 Justin Squirek
Engine/Settings/Debugging-Yes/is_debugging.adb:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/Settings/Debugging-Yes/is_debugging.adb:8:30      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/Settings/Debugging-Yes/is_debugging.adb:8:70      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/Settings/Debugging-Yes/is_debugging.adb:8:87      - Unknown word (later)        -- at your option) any later version.
Engine/Shaders/test.frag:10:41     - Unknown word (displace)      -- ) uniform sampler2D displace;
Engine/Shaders/test.frag:11:41     - Unknown word (metallic)      -- ) uniform sampler2D metallic;
Engine/Shaders/test.frag:12:41     - Unknown word (roughness)     -- ) uniform sampler2D roughness;
Engine/Shaders/test.frag:13:41     - Unknown word (projection)    -- ) uniform sampler2D projection;
Engine/Shaders/test.frag:14:41     - Unknown word (falloff)       -- ) uniform sampler2D falloff;
Engine/Shaders/test.frag:17:16     - Unknown word (flags)         -- // Texture map flags
Engine/Shaders/test.frag:17:4      - Unknown word (Texture)       -- // Texture map flags
Engine/Shaders/test.frag:18:52     - Unknown word (Color)         -- ubo12 {bool enableBaseColor;};
Engine/Shaders/test.frag:19:48     - Unknown word (Irradiance)    -- uniform ubo13 {bool enableIrradiance;};
Engine/Shaders/test.frag:21:48     - Unknown word (Specular)      -- uniform ubo15 {bool enableSpecular;};
Engine/Shaders/test.frag:23:50     - Unknown word (Displace)      -- uniform ubo17 {bool enableDisplace;};
Engine/Shaders/test.frag:24:48     - Unknown word (Metallic)      -- uniform ubo18 {bool enableMetallic;};
Engine/Shaders/test.frag:25:48     - Unknown word (Roughness)     -- uniform ubo19 {bool enableRoughness;};
Engine/Shaders/test.frag:26:50     - Unknown word (Projection)    -- uniform ubo20 {bool enableProjection;};
Engine/Shaders/test.frag:27:50     - Unknown word (Falloff)       -- uniform ubo21 {bool enableFalloff;};
Engine/Shaders/test.frag:29:13     - Unknown word (flag)          -- // Skinning flag
Engine/Shaders/test.frag:29:4      - Unknown word (Skinning)      -- // Skinning flag
Engine/Shaders/test.frag:2:19      - Unknown word (separate)   -- #extension GL_ARB_separate_shader_objects : enable
Engine/Shaders/test.frag:2:28      - Unknown word (shader)     -- extension GL_ARB_separate_shader_objects : enable
Engine/Shaders/test.frag:30:48     - Unknown word (Skinning)      -- uniform ubo11 {bool enableSkinning;};
Engine/Shaders/test.frag:32:30     - Unknown word (frag)          -- location = 0) in vec3 fragColor;
Engine/Shaders/test.frag:32:34     - Unknown word (Color)         -- location = 0) in vec3 fragColor;
Engine/Shaders/test.frag:33:30     - Unknown word (frag)          -- location = 1) in vec2 fragTexCoord;
Engine/Shaders/test.frag:35:34     - Unknown word (Color)         -- location = 0) out vec4 outColor;
Engine/Shaders/test.frag:37:1      - Unknown word (void)          -- void main() {
Engine/Shaders/test.frag:37:6      - Unknown word (main)          -- void main() {
Engine/Shaders/test.frag:38:10     - Unknown word (Color)         -- //outColor = vec4(fragColor, 1
Engine/Shaders/test.frag:38:23     - Unknown word (frag)          -- //outColor = vec4(fragColor, 1.0);
Engine/Shaders/test.frag:39:16     - Unknown word (texture)       -- outColor = texture(baseColor, fragTexCoord
Engine/Shaders/test.frag:39:35     - Unknown word (frag)          -- texture(baseColor, fragTexCoord);
Engine/Shaders/test.frag:4:13      - Unknown word (corresponding) -- // Samplers corresponding to each of the components
Engine/Shaders/test.frag:4:30      - Unknown word (each)          -- Samplers corresponding to each of the components of
Engine/Shaders/test.frag:4:4       - Unknown word (Samplers)   -- // Samplers corresponding to each
Engine/Shaders/test.frag:5:1       - Unknown word (layout)        -- layout(binding = 0) uniform
Engine/Shaders/test.frag:5:21      - Unknown word (uniform)       -- layout(binding = 0) uniform sampler2D baseColor
Engine/Shaders/test.frag:5:29      - Unknown word (sampler)       -- binding = 0) uniform sampler2D baseColor;
Engine/Shaders/test.frag:5:43      - Unknown word (Color)         -- uniform sampler2D baseColor;
Engine/Shaders/test.frag:5:8       - Unknown word (binding)       -- layout(binding = 0) uniform sampler
Engine/Shaders/test.frag:6:10      - Unknown word (binding)       -- //layout(binding = 1) uniform sampler
Engine/Shaders/test.frag:6:23      - Unknown word (uniform)       -- layout(binding = 1) uniform sampler2D irradiance
Engine/Shaders/test.frag:6:3       - Unknown word (layout)        -- //layout(binding = 1) uniform
Engine/Shaders/test.frag:6:31      - Unknown word (sampler)       -- binding = 1) uniform sampler2D irradiance;
Engine/Shaders/test.frag:6:41      - Unknown word (irradiance)    -- ) uniform sampler2D irradiance;
Engine/Shaders/test.frag:7:10      - Unknown word (binding)       -- //layout(binding = 2) uniform sampler
Engine/Shaders/test.frag:7:23      - Unknown word (uniform)       -- layout(binding = 2) uniform sampler2D filterMap
Engine/Shaders/test.frag:7:3       - Unknown word (layout)        -- //layout(binding = 2) uniform
Engine/Shaders/test.frag:7:31      - Unknown word (sampler)       -- binding = 2) uniform sampler2D filterMap;
Engine/Shaders/test.frag:8:1       - Unknown word (layout)        -- layout(binding = 3) uniform
Engine/Shaders/test.frag:8:21      - Unknown word (uniform)       -- layout(binding = 3) uniform sampler2D specular;
Engine/Shaders/test.frag:8:29      - Unknown word (sampler)       -- binding = 3) uniform sampler2D specular;
Engine/Shaders/test.frag:8:39      - Unknown word (specular)      -- ) uniform sampler2D specular;
Engine/Shaders/test.frag:8:8       - Unknown word (binding)       -- layout(binding = 3) uniform sampler
Engine/Shaders/test.frag:9:1       - Unknown word (layout)        -- layout(binding = 4) uniform
Engine/Shaders/test.frag:9:21      - Unknown word (uniform)       -- layout(binding = 4) uniform sampler2D normal;
Engine/Shaders/test.frag:9:29      - Unknown word (sampler)       -- binding = 4) uniform sampler2D normal;
Engine/Shaders/test.frag:9:8       - Unknown word (binding)       -- layout(binding = 4) uniform sampler
Engine/Shaders/test.vert:10:1      - Unknown word (layout)     -- layout(binding = 11) uniform
Engine/Shaders/test.vert:10:22     - Unknown word (uniform)    -- layout(binding = 11) uniform ubo11 {bool enableSkinning
Engine/Shaders/test.vert:10:48     - Unknown word (Skinning)   -- uniform ubo11 {bool enableSkinning;};
Engine/Shaders/test.vert:10:8      - Unknown word (binding)    -- layout(binding = 11) uniform ubo11
Engine/Shaders/test.vert:12:1      - Unknown word (layout)     -- layout(location = 0) in vec
Engine/Shaders/test.vert:13:32     - Unknown word (Color)      -- location = 1) in vec3 inColor;
Engine/Shaders/test.vert:16:31     - Unknown word (frag)       -- location = 0) out vec3 fragColor;
Engine/Shaders/test.vert:16:35     - Unknown word (Color)      -- location = 0) out vec3 fragColor;
Engine/Shaders/test.vert:17:31     - Unknown word (frag)       -- location = 1) out vec2 fragTexCoord;
Engine/Shaders/test.vert:19:1      - Unknown word (void)       -- void main() {
Engine/Shaders/test.vert:19:6      - Unknown word (main)       -- void main() {
Engine/Shaders/test.vert:20:19     - Unknown word (projection) -- gl_Position = projection * view * model * vec
Engine/Shaders/test.vert:21:19     - Unknown word (Color)      -- fragColor = inColor;
Engine/Shaders/test.vert:21:5      - Unknown word (frag)       -- fragColor = inColor;
Engine/Shaders/test.vert:21:9      - Unknown word (Color)      -- fragColor = inColor;
Engine/Shaders/test.vert:22:5      - Unknown word (frag)       -- fragTexCoord = inTexCoord
Engine/Shaders/test.vert:2:19      - Unknown word (separate)   -- #extension GL_ARB_separate_shader_objects : enable
Engine/Shaders/test.vert:2:28      - Unknown word (shader)     -- extension GL_ARB_separate_shader_objects : enable
Engine/Shaders/test.vert:5:1       - Unknown word (layout)     -- layout(binding = 22) uniform
Engine/Shaders/test.vert:5:22      - Unknown word (uniform)    -- layout(binding = 22) uniform ubo22 {mat4 model;}
Engine/Shaders/test.vert:5:8       - Unknown word (binding)    -- layout(binding = 22) uniform ubo22
Engine/Shaders/test.vert:6:1       - Unknown word (layout)     -- layout(binding = 23) uniform
Engine/Shaders/test.vert:6:22      - Unknown word (uniform)    -- layout(binding = 23) uniform ubo23 {mat4 view;};
Engine/Shaders/test.vert:6:8       - Unknown word (binding)    -- layout(binding = 23) uniform ubo23
Engine/Shaders/test.vert:7:1       - Unknown word (layout)     -- layout(binding = 24) uniform
Engine/Shaders/test.vert:7:22      - Unknown word (uniform)    -- layout(binding = 24) uniform ubo24 {mat4 projection
Engine/Shaders/test.vert:7:42      - Unknown word (projection) -- uniform ubo24 {mat4 projection;};
Engine/Shaders/test.vert:7:8       - Unknown word (binding)    -- layout(binding = 24) uniform ubo24
Engine/Shaders/test.vert:9:13      - Unknown word (flag)       -- // Skinning flag
Engine/Shaders/test.vert:9:4       - Unknown word (Skinning)   -- // Skinning flag
Engine/Systems/SDL/neo-engine-system-console.adb:101:13    - Unknown word (Unimplemented) -- raise Unimplemented;
Engine/Systems/SDL/neo-engine-system-console.adb:103:17    - Unknown word (Cursor)        -- procedure Set_Cursor (X, Y : Int_8_Signed
Engine/Systems/SDL/neo-engine-system-console.adb:103:38    - Unknown word (Signed)        -- Cursor (X, Y : Int_8_Signed) is
Engine/Systems/SDL/neo-engine-system-console.adb:107:13    - Unknown word (Adjust)        -- procedure Adjust (X, Y : Int_4_Signed
Engine/Systems/SDL/neo-engine-system-console.adb:107:34    - Unknown word (Signed)        -- Adjust (X, Y : Int_4_Signed; Width, Height : Int
Engine/Systems/SDL/neo-engine-system-console.adb:107:42    - Unknown word (Width)         -- X, Y : Int_4_Signed; Width, Height : Int_4_Positive
Engine/Systems/SDL/neo-engine-system-console.adb:107:49    - Unknown word (Height)        -- Int_4_Signed; Width, Height : Int_4_Positive; Fullscreen
Engine/Systems/SDL/neo-engine-system-console.adb:107:64    - Unknown word (Positive)      -- Width, Height : Int_4_Positive; Fullscreen : Bool)
Engine/Systems/SDL/neo-engine-system-console.adb:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/Systems/SDL/neo-engine-system-console.adb:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/Systems/SDL/neo-engine-system-console.adb:10:110    - Unknown word (warranty)     -- without even the implied warranty of                -
Engine/Systems/SDL/neo-engine-system-console.adb:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/Systems/SDL/neo-engine-system-console.adb:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/Systems/SDL/neo-engine-system-console.adb:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/Systems/SDL/neo-engine-system-console.adb:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/Systems/SDL/neo-engine-system-console.adb:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/Systems/SDL/neo-engine-system-console.adb:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/Systems/SDL/neo-engine-system-console.adb:111:13    - Unknown word (Adjust)        -- procedure Adjust_Windowed (Width, Height
Engine/Systems/SDL/neo-engine-system-console.adb:111:20    - Unknown word (Windowed)      -- procedure Adjust_Windowed (Width, Height : Int
Engine/Systems/SDL/neo-engine-system-console.adb:111:30    - Unknown word (Width)         -- procedure Adjust_Windowed (Width, Height : Int_4_Positive
Engine/Systems/SDL/neo-engine-system-console.adb:111:37    - Unknown word (Height)        -- Adjust_Windowed (Width, Height : Int_4_Positive) is
Engine/Systems/SDL/neo-engine-system-console.adb:111:52    - Unknown word (Positive)      -- Width, Height : Int_4_Positive) is
Engine/Systems/SDL/neo-engine-system-console.adb:115:19    - Unknown word (Windowing)     -- function Update_Windowing return Bool is
Engine/Systems/SDL/neo-engine-system-console.adb:118:14    - Unknown word (False)         -- return False;
Engine/Systems/SDL/neo-engine-system-console.adb:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/Systems/SDL/neo-engine-system-console.adb:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/Systems/SDL/neo-engine-system-console.adb:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/Systems/SDL/neo-engine-system-console.adb:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/Systems/SDL/neo-engine-system-console.adb:120:16    - Unknown word (Borders)       -- function Get_Borders return Vector_Border
Engine/Systems/SDL/neo-engine-system-console.adb:120:31    - Unknown word (Vector)        -- function Get_Borders return Vector_Border.Unsafe.Vector
Engine/Systems/SDL/neo-engine-system-console.adb:120:38    - Unknown word (Border)        -- Borders return Vector_Border.Unsafe.Vector is
Engine/Systems/SDL/neo-engine-system-console.adb:120:45    - Unknown word (Unsafe)        -- return Vector_Border.Unsafe.Vector is
Engine/Systems/SDL/neo-engine-system-console.adb:120:52    - Unknown word (Vector)        -- Vector_Border.Unsafe.Vector is
Engine/Systems/SDL/neo-engine-system-console.adb:121:12    - Unknown word (Vector)        -- Junk : Vector_Border.Unsafe.Vector
Engine/Systems/SDL/neo-engine-system-console.adb:121:19    - Unknown word (Border)        -- Junk : Vector_Border.Unsafe.Vector;
Engine/Systems/SDL/neo-engine-system-console.adb:121:26    - Unknown word (Unsafe)        -- Junk : Vector_Border.Unsafe.Vector;
Engine/Systems/SDL/neo-engine-system-console.adb:121:33    - Unknown word (Vector)        -- Vector_Border.Unsafe.Vector;
Engine/Systems/SDL/neo-engine-system-console.adb:121:5     - Unknown word (Junk)          -- Junk : Vector_Border.Unsafe
Engine/Systems/SDL/neo-engine-system-console.adb:124:14    - Unknown word (Junk)          -- return Junk;
Engine/Systems/SDL/neo-engine-system-console.adb:126:16    - Unknown word (Decoration)    -- function Get_Decoration return Border_State
Engine/Systems/SDL/neo-engine-system-console.adb:126:34    - Unknown word (Border)        -- Get_Decoration return Border_State is
Engine/Systems/SDL/neo-engine-system-console.adb:134:14    - Unknown word (False)         -- return False;
Engine/Systems/SDL/neo-engine-system-console.adb:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/Systems/SDL/neo-engine-system-console.adb:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/Systems/SDL/neo-engine-system-console.adb:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/Systems/SDL/neo-engine-system-console.adb:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/Systems/SDL/neo-engine-system-console.adb:149:17    - Unknown word (Vibration)     -- procedure Set_Vibration (Id : Int_Address; High
Engine/Systems/SDL/neo-engine-system-console.adb:149:66    - Unknown word (Percent)       -- High, Low : Float_4_Percent) is
Engine/Systems/SDL/neo-engine-system-console.adb:153:16    - Unknown word (Cursor)        -- function Get_Cursor return Cursor_state
Engine/Systems/SDL/neo-engine-system-console.adb:153:30    - Unknown word (Cursor)        -- function Get_Cursor return Cursor_state is
Engine/Systems/SDL/neo-engine-system-console.adb:19:6      - Unknown word (Clipboard)    -- -- Clipboard --
Engine/Systems/SDL/neo-engine-system-console.adb:25:18     - Unknown word (Clipboard)    -- if SDL_Set_Clipboard_Text (C.To_C (Text)
Engine/Systems/SDL/neo-engine-system-console.adb:26:16     - Unknown word (Clipboard)    -- raise Clipboard_Error with SDL.Error
Engine/Systems/SDL/neo-engine-system-console.adb:29:12     - Unknown word (Paste)        -- function Paste return Str_2 is
Engine/Systems/SDL/neo-engine-system-console.adb:32:16     - Unknown word (Strings)      -- return C.Strings.Value (SDL_Get_Clipboard
Engine/Systems/SDL/neo-engine-system-console.adb:32:39     - Unknown word (Clipboard)    -- Strings.Value (SDL_Get_Clipboard_Text);
Engine/Systems/SDL/neo-engine-system-console.adb:36:6      - Unknown word (Memory)       -- -- Memory --
Engine/Systems/SDL/neo-engine-system-console.adb:39:16     - Unknown word (Memory)       -- function Get_Memory return Memory_State
Engine/Systems/SDL/neo-engine-system-console.adb:39:30     - Unknown word (Memory)       -- function Get_Memory return Memory_State is (others =>
Engine/Systems/SDL/neo-engine-system-console.adb:42:12     - Unknown word (Handling)     -- -- Error_Handling --
Engine/Systems/SDL/neo-engine-system-console.adb:45:13     - Unknown word (Alert)        -- procedure Alert (Value : Bool
Engine/Systems/SDL/neo-engine-system-console.adb:47:18     - Unknown word (Webpage)      -- procedure Open_Webpage (Path : Str_2)
Engine/Systems/SDL/neo-engine-system-console.adb:49:36     - Unknown word (Unsigned)     -- Last_Error return Int_4_Unsigned is
Engine/Systems/SDL/neo-engine-system-console.adb:54:56     - Unknown word (Kind)         -- 2; Buttons : Button_Kind; Icon : Icon_Kind) return
Engine/Systems/SDL/neo-engine-system-console.adb:54:62     - Unknown word (Icon)         -- Buttons : Button_Kind; Icon : Icon_Kind) return
Engine/Systems/SDL/neo-engine-system-console.adb:54:69     - Unknown word (Icon)         -- Button_Kind; Icon : Icon_Kind) return Bool is
Engine/Systems/SDL/neo-engine-system-console.adb:54:74     - Unknown word (Kind)         -- Button_Kind; Icon : Icon_Kind) return Bool is
Engine/Systems/SDL/neo-engine-system-console.adb:56:15     - Unknown word (Simple)       -- SDL_ShowSimpleMessageBox
Engine/Systems/SDL/neo-engine-system-console.adb:57:14     - Unknown word (False)        -- return False;
Engine/Systems/SDL/neo-engine-system-console.adb:5:52      - Unknown word (Copyright)  -- Copyright (C) 2016 Justin Squirek
Engine/Systems/SDL/neo-engine-system-console.adb:5:71      - Unknown word (Justin)     -- Copyright (C) 2016 Justin Squirek
Engine/Systems/SDL/neo-engine-system-console.adb:5:78      - Unknown word (Squirek)    -- Copyright (C) 2016 Justin Squirek
Engine/Systems/SDL/neo-engine-system-console.adb:66:13     - Unknown word (char)         -- const char* SDL_GetPlatform(void
Engine/Systems/SDL/neo-engine-system-console.adb:66:35     - Unknown word (void)         -- char* SDL_GetPlatform(void)
Engine/Systems/SDL/neo-engine-system-console.adb:71:6      - Unknown word (Windowing)    -- -- Windowing --
Engine/Systems/SDL/neo-engine-system-console.adb:74:13     - Unknown word (Assert)       -- procedure Assert_Only_Instance is null
Engine/Systems/SDL/neo-engine-system-console.adb:75:13     - Unknown word (Minimize)     -- procedure Minimize is
Engine/Systems/SDL/neo-engine-system-console.adb:77:13     - Unknown word (Unimplemented) -- raise Unimplemented;
Engine/Systems/SDL/neo-engine-system-console.adb:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/Systems/SDL/neo-engine-system-console.adb:81:13     - Unknown word (Unimplemented) -- raise Unimplemented;
Engine/Systems/SDL/neo-engine-system-console.adb:83:24     - Unknown word (Multi)         -- procedure Initialize_Multi_Monitor is
Engine/Systems/SDL/neo-engine-system-console.adb:85:13     - Unknown word (Unsupported)   -- raise Unsupported;
Engine/Systems/SDL/neo-engine-system-console.adb:87:22     - Unknown word (Multi)         -- procedure Finalize_Multi_Monitor is
Engine/Systems/SDL/neo-engine-system-console.adb:89:13     - Unknown word (Unsupported)   -- raise Unsupported;
Engine/Systems/SDL/neo-engine-system-console.adb:8:30      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/Systems/SDL/neo-engine-system-console.adb:8:70      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/Systems/SDL/neo-engine-system-console.adb:8:87      - Unknown word (later)        -- at your option) any later version.
Engine/Systems/SDL/neo-engine-system-console.adb:91:24     - Unknown word (Windowing)     -- procedure Initialize_Windowing is
Engine/Systems/SDL/neo-engine-system-console.adb:93:13     - Unknown word (Unimplemented) -- raise Unimplemented;
Engine/Systems/SDL/neo-engine-system-console.adb:95:22     - Unknown word (Windowing)     -- procedure Finalize_Windowing is
Engine/Systems/SDL/neo-engine-system-console.adb:97:13     - Unknown word (Unimplemented) -- raise Unimplemented;
Engine/Systems/SDL/neo-engine-system-console.adb:99:13     - Unknown word (Clip)          -- procedure Clip_Cursor (Undo : Bool
Engine/Systems/SDL/neo-engine-system-console.adb:99:18     - Unknown word (Cursor)        -- procedure Clip_Cursor (Undo : Bool := False
Engine/Systems/SDL/neo-engine-system-console.adb:99:26     - Unknown word (Undo)          -- procedure Clip_Cursor (Undo : Bool := False; Hide
Engine/Systems/SDL/neo-engine-system-console.adb:99:41     - Unknown word (False)         -- Cursor (Undo : Bool := False; Hide : Bool := False
Engine/Systems/SDL/neo-engine-system-console.adb:99:48     - Unknown word (Hide)          -- Undo : Bool := False; Hide : Bool := False) is
Engine/Systems/SDL/neo-engine-system-console.adb:99:63     - Unknown word (False)         -- False; Hide : Bool := False) is
Engine/Systems/SDL/neo-engine-system.adb:100:13    - Unknown word (Unimplemented) -- raise Unimplemented;
Engine/Systems/SDL/neo-engine-system.adb:102:17    - Unknown word (Cursor)        -- procedure Set_Cursor (X, Y : Int_8_Signed
Engine/Systems/SDL/neo-engine-system.adb:102:38    - Unknown word (Signed)        -- Cursor (X, Y : Int_8_Signed) is
Engine/Systems/SDL/neo-engine-system.adb:106:13    - Unknown word (Adjust)        -- procedure Adjust (X, Y : Int_4_Signed
Engine/Systems/SDL/neo-engine-system.adb:106:34    - Unknown word (Signed)        -- Adjust (X, Y : Int_4_Signed; Width, Height : Int
Engine/Systems/SDL/neo-engine-system.adb:106:42    - Unknown word (Width)         -- X, Y : Int_4_Signed; Width, Height : Int_4_Positive
Engine/Systems/SDL/neo-engine-system.adb:106:49    - Unknown word (Height)        -- Int_4_Signed; Width, Height : Int_4_Positive; Fullscreen
Engine/Systems/SDL/neo-engine-system.adb:106:64    - Unknown word (Positive)      -- Width, Height : Int_4_Positive; Fullscreen : Bool)
Engine/Systems/SDL/neo-engine-system.adb:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/Systems/SDL/neo-engine-system.adb:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/Systems/SDL/neo-engine-system.adb:10:110    - Unknown word (warranty)     -- without even the implied warranty of                -
Engine/Systems/SDL/neo-engine-system.adb:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/Systems/SDL/neo-engine-system.adb:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/Systems/SDL/neo-engine-system.adb:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/Systems/SDL/neo-engine-system.adb:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/Systems/SDL/neo-engine-system.adb:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/Systems/SDL/neo-engine-system.adb:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/Systems/SDL/neo-engine-system.adb:110:13    - Unknown word (Adjust)        -- procedure Adjust_Windowed (Width, Height
Engine/Systems/SDL/neo-engine-system.adb:110:20    - Unknown word (Windowed)      -- procedure Adjust_Windowed (Width, Height : Int
Engine/Systems/SDL/neo-engine-system.adb:110:30    - Unknown word (Width)         -- procedure Adjust_Windowed (Width, Height : Int_4_Positive
Engine/Systems/SDL/neo-engine-system.adb:110:37    - Unknown word (Height)        -- Adjust_Windowed (Width, Height : Int_4_Positive) is
Engine/Systems/SDL/neo-engine-system.adb:110:52    - Unknown word (Positive)      -- Width, Height : Int_4_Positive) is
Engine/Systems/SDL/neo-engine-system.adb:114:19    - Unknown word (Windowing)     -- function Update_Windowing return Bool is
Engine/Systems/SDL/neo-engine-system.adb:117:14    - Unknown word (False)         -- return False;
Engine/Systems/SDL/neo-engine-system.adb:119:16    - Unknown word (Borders)       -- function Get_Borders return Vector_Border
Engine/Systems/SDL/neo-engine-system.adb:119:31    - Unknown word (Vector)        -- function Get_Borders return Vector_Border.Unsafe.Vector
Engine/Systems/SDL/neo-engine-system.adb:119:38    - Unknown word (Border)        -- Borders return Vector_Border.Unsafe.Vector is
Engine/Systems/SDL/neo-engine-system.adb:119:45    - Unknown word (Unsafe)        -- return Vector_Border.Unsafe.Vector is
Engine/Systems/SDL/neo-engine-system.adb:119:52    - Unknown word (Vector)        -- Vector_Border.Unsafe.Vector is
Engine/Systems/SDL/neo-engine-system.adb:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/Systems/SDL/neo-engine-system.adb:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/Systems/SDL/neo-engine-system.adb:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/Systems/SDL/neo-engine-system.adb:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/Systems/SDL/neo-engine-system.adb:120:12    - Unknown word (Vector)        -- Junk : Vector_Border.Unsafe.Vector
Engine/Systems/SDL/neo-engine-system.adb:120:19    - Unknown word (Border)        -- Junk : Vector_Border.Unsafe.Vector;
Engine/Systems/SDL/neo-engine-system.adb:120:26    - Unknown word (Unsafe)        -- Junk : Vector_Border.Unsafe.Vector;
Engine/Systems/SDL/neo-engine-system.adb:120:33    - Unknown word (Vector)        -- Vector_Border.Unsafe.Vector;
Engine/Systems/SDL/neo-engine-system.adb:120:5     - Unknown word (Junk)          -- Junk : Vector_Border.Unsafe
Engine/Systems/SDL/neo-engine-system.adb:123:14    - Unknown word (Junk)          -- return Junk;
Engine/Systems/SDL/neo-engine-system.adb:125:16    - Unknown word (Decoration)    -- function Get_Decoration return Border_State
Engine/Systems/SDL/neo-engine-system.adb:125:34    - Unknown word (Border)        -- Get_Decoration return Border_State is
Engine/Systems/SDL/neo-engine-system.adb:133:14    - Unknown word (False)         -- return False;
Engine/Systems/SDL/neo-engine-system.adb:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/Systems/SDL/neo-engine-system.adb:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/Systems/SDL/neo-engine-system.adb:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/Systems/SDL/neo-engine-system.adb:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/Systems/SDL/neo-engine-system.adb:148:17    - Unknown word (Vibration)     -- procedure Set_Vibration (Id : Int_Address; High
Engine/Systems/SDL/neo-engine-system.adb:148:66    - Unknown word (Percent)       -- High, Low : Float_4_Percent) is
Engine/Systems/SDL/neo-engine-system.adb:152:16    - Unknown word (Cursor)        -- function Get_Cursor return Cursor_state
Engine/Systems/SDL/neo-engine-system.adb:152:30    - Unknown word (Cursor)        -- function Get_Cursor return Cursor_state is
Engine/Systems/SDL/neo-engine-system.adb:176:13    - Unknown word (titles)        -- -- Window titles
Engine/Systems/SDL/neo-engine-system.adb:181:3     - Unknown word (MULTI)         -- MULTI_MONITOR_NAME : aliased
Engine/Systems/SDL/neo-engine-system.adb:181:65    - Unknown word (Multi)         -- Str_C (APP_NAME & " Multi-monitor");
Engine/Systems/SDL/neo-engine-system.adb:184:12    - Unknown word (ICON)          -- SDL_PATH_ICON : aliased
Engine/Systems/SDL/neo-engine-system.adb:184:62    - Unknown word (ICON)          -- C := To_Str_C (PATH_ICON & ".bmp
Engine/Systems/SDL/neo-engine-system.adb:185:12    - Unknown word (CURSOR)        -- SDL_PATH_CURSOR_ACTIVE : aliased Str
Engine/Systems/SDL/neo-engine-system.adb:185:62    - Unknown word (CURSOR)        -- C := To_Str_C (PATH_CURSOR_ACTIVE & ".bmp")
Engine/Systems/SDL/neo-engine-system.adb:186:12    - Unknown word (CURSOR)        -- SDL_PATH_CURSOR_INACTIVE : aliased Str
Engine/Systems/SDL/neo-engine-system.adb:186:19    - Unknown word (INACTIVE)      -- SDL_PATH_CURSOR_INACTIVE : aliased Str_C := To
Engine/Systems/SDL/neo-engine-system.adb:186:62    - Unknown word (CURSOR)        -- C := To_Str_C (PATH_CURSOR_INACTIVE & ".bmp")
Engine/Systems/SDL/neo-engine-system.adb:186:69    - Unknown word (INACTIVE)      -- To_Str_C (PATH_CURSOR_INACTIVE & ".bmp");
Engine/Systems/SDL/neo-engine-system.adb:188:27    - Unknown word (invisible)     -- Main "HWND"s for the invisible input window and game
Engine/Systems/SDL/neo-engine-system.adb:188:6     - Unknown word (Main)          -- -- Main "HWND"s for the invisible
Engine/Systems/SDL/neo-engine-system.adb:18:6      - Unknown word (Clipboard)    -- -- Clipboard --
Engine/Systems/SDL/neo-engine-system.adb:191:13    - Unknown word (handles)       -- -- Window handles for multi-monitor mode
Engine/Systems/SDL/neo-engine-system.adb:191:25    - Unknown word (multi)         -- Window handles for multi-monitor mode
Engine/Systems/SDL/neo-engine-system.adb:191:39    - Unknown word (mode)          -- handles for multi-monitor mode
Engine/Systems/SDL/neo-engine-system.adb:192:11    - Unknown word (Vector)        -- package Vector_Ptr is new Neo.Core
Engine/Systems/SDL/neo-engine-system.adb:192:38    - Unknown word (Vectors)       -- Ptr is new Neo.Core.Vectors (Ptr);
Engine/Systems/SDL/neo-engine-system.adb:193:3     - Unknown word (Multi)         -- Multi_Monitor_Windows : Vector
Engine/Systems/SDL/neo-engine-system.adb:193:38    - Unknown word (Unsafe)        -- Windows : Vector_Ptr.Unsafe.Vector;
Engine/Systems/SDL/neo-engine-system.adb:199:13    - Unknown word (isolated)      -- -- A task-isolated GUI console application
Engine/Systems/SDL/neo-engine-system.adb:206:21    - Unknown word (driver)        -- -- Pointer to the driver dll
Engine/Systems/SDL/neo-engine-system.adb:206:6     - Unknown word (Pointer)       -- -- Pointer to the driver dll
Engine/Systems/SDL/neo-engine-system.adb:207:27    - Unknown word (Library)       -- Vulkan_DLL : Ptr := LoadLibraryW (To_Ptr_Char_16_C
Engine/Systems/SDL/neo-engine-system.adb:207:44    - Unknown word (Char)          -- LoadLibraryW (To_Ptr_Char_16_C (VK_WIN32_DLL_NAME
Engine/Systems/SDL/neo-engine-system.adb:209:13    - Unknown word (pointer)       -- -- Load a pointer to a procedure based
Engine/Systems/SDL/neo-engine-system.adb:210:23    - Unknown word (Subprogram)    -- function Get_Vulkan_Subprogram (Name : Str) return
Engine/Systems/SDL/neo-engine-system.adb:210:65    - Unknown word (Proc)          -- Str) return Ptr is (GetProcAddress (Vulkan_DLL,
Engine/Systems/SDL/neo-engine-system.adb:212:22    - Unknown word (strings)       -- -- Fetch extension strings
Engine/Systems/SDL/neo-engine-system.adb:213:65    - Unknown word (SURFACE)       -- _C is (VK_KHR_WIN32_SURFACE_EXTENSION_NAME);
Engine/Systems/SDL/neo-engine-system.adb:215:23    - Unknown word (initialization) -- -- Finalization and initialization (mostly revolve around
Engine/Systems/SDL/neo-engine-system.adb:215:39    - Unknown word (mostly)         -- and initialization (mostly revolve around loading
Engine/Systems/SDL/neo-engine-system.adb:215:46    - Unknown word (revolve)        -- initialization (mostly revolve around loading the dll
Engine/Systems/SDL/neo-engine-system.adb:215:54    - Unknown word (around)         -- nitialization (mostly revolve around loading the dll)
Engine/Systems/SDL/neo-engine-system.adb:215:6     - Unknown word (Finalization)  -- -- Finalization and initialization
Engine/Systems/SDL/neo-engine-system.adb:215:61    - Unknown word (loading)        -- mostly revolve around loading the dll)
Engine/Systems/SDL/neo-engine-system.adb:216:29    - Unknown word (Library)        -- procedure Finalize_Vulkan_Library is begin Assert (FreeLibrary
Engine/Systems/SDL/neo-engine-system.adb:216:46    - Unknown word (Assert)         -- Vulkan_Library is begin Assert (FreeLibrary (Vulkan
Engine/Systems/SDL/neo-engine-system.adb:216:58    - Unknown word (Library)        -- is begin Assert (FreeLibrary (Vulkan_DLL)); end;
Engine/Systems/SDL/neo-engine-system.adb:217:31    - Unknown word (Library)        -- procedure Initialize_Vulkan_Library is
Engine/Systems/SDL/neo-engine-system.adb:219:103   - Unknown word (Surface)        -- Subprogram ("vkCreateWin32SurfaceKHR"));
Engine/Systems/SDL/neo-engine-system.adb:219:20    - Unknown word (Surface)        -- vkCreateWin32SurfaceKHR := To_Ptr_vkCreateWin
Engine/Systems/SDL/neo-engine-system.adb:219:54    - Unknown word (Surface)        -- To_Ptr_vkCreateWin32SurfaceKHR (Get_Vulkan_Subprogram
Engine/Systems/SDL/neo-engine-system.adb:219:77    - Unknown word (Subprogram)     -- SurfaceKHR (Get_Vulkan_Subprogram ("vkCreateWin32SurfaceKHR
Engine/Systems/SDL/neo-engine-system.adb:222:19    - Unknown word (surface)        -- -- Create a new surface
Engine/Systems/SDL/neo-engine-system.adb:223:26    - Unknown word (Surface)        -- function Create_Vulkan_Surface (Instance : Ptr) return
Engine/Systems/SDL/neo-engine-system.adb:225:5     - Unknown word (Surface)        -- Surface_Info : aliased VkWin
Engine/Systems/SDL/neo-engine-system.adb:225:90    - Unknown word (Module)         -- Game, hInstance => GetModuleHandleNULL, others =
Engine/Systems/SDL/neo-engine-system.adb:225:96    - Unknown word (Handle)         -- hInstance => GetModuleHandleNULL, others => <>);
Engine/Systems/SDL/neo-engine-system.adb:227:9     - Unknown word (Assert)         -- vkAssert (vkCreateWin32SurfaceKHR
Engine/Systems/SDL/neo-engine-system.adb:228:7     - Unknown word (Assert)         -- Assert (Result);
Engine/Systems/SDL/neo-engine-system.adb:234:12    - Unknown word (Paste)          -- function Paste return Str;
Engine/Systems/SDL/neo-engine-system.adb:240:13    - Unknown word (Vibrate)        -- procedure Vibrate (Id : Int_Ptr; Hz
Engine/Systems/SDL/neo-engine-system.adb:240:63    - Unknown word (Percent)        -- High, Hz_Low : Real_Percent);
Engine/Systems/SDL/neo-engine-system.adb:243:12    - Unknown word (Handling)       -- -- Error Handling
Engine/Systems/SDL/neo-engine-system.adb:245:13    - Unknown word (Alert)          -- procedure Alert (Val : Bool)
Engine/Systems/SDL/neo-engine-system.adb:247:18    - Unknown word (Webpage)        -- procedure Open_Webpage (Path : Str);
Engine/Systems/SDL/neo-engine-system.adb:249:37    - Unknown word (Unsigned)       -- Error return Int_Unsigned;
Engine/Systems/SDL/neo-engine-system.adb:24:18     - Unknown word (Clipboard)    -- if SDL_Set_Clipboard_Text (C.To_C (Text)
Engine/Systems/SDL/neo-engine-system.adb:250:60    - Unknown word (Kind)           -- Str; Buttons : Buttons_Kind; Icon : Icon_Kind)
Engine/Systems/SDL/neo-engine-system.adb:250:66    - Unknown word (Icon)           -- Buttons : Buttons_Kind; Icon : Icon_Kind)
Engine/Systems/SDL/neo-engine-system.adb:250:73    - Unknown word (Icon)           -- Buttons_Kind; Icon : Icon_Kind)
Engine/Systems/SDL/neo-engine-system.adb:250:78    - Unknown word (Kind)           -- Buttons_Kind; Icon : Icon_Kind)
Engine/Systems/SDL/neo-engine-system.adb:253:6     - Unknown word (Windowing)      -- -- Windowing
Engine/Systems/SDL/neo-engine-system.adb:254:24    - Unknown word (Multi)          -- procedure Initialize_Multi_Monitor;
Engine/Systems/SDL/neo-engine-system.adb:258:13    - Unknown word (Minimize)       -- procedure Minimize;
Engine/Systems/SDL/neo-engine-system.adb:259:13    - Unknown word (Maximize)       -- procedure Maximize;
Engine/Systems/SDL/neo-engine-system.adb:25:16     - Unknown word (Clipboard)    -- raise Clipboard_Error with SDL.Error
Engine/Systems/SDL/neo-engine-system.adb:260:18    - Unknown word (Windowed)       -- procedure Make_Windowed;
Engine/Systems/SDL/neo-engine-system.adb:261:13    - Unknown word (Clip)           -- procedure Clip_Cursor (Do_Clip
Engine/Systems/SDL/neo-engine-system.adb:261:18    - Unknown word (Cursor)         -- procedure Clip_Cursor (Do_Clip : Bool
Engine/Systems/SDL/neo-engine-system.adb:261:34    - Unknown word (Clip)           -- Clip_Cursor (Do_Clip : Bool := True);
Engine/Systems/SDL/neo-engine-system.adb:261:49    - Unknown word (True)           -- (Do_Clip : Bool := True);
Engine/Systems/SDL/neo-engine-system.adb:262:13    - Unknown word (Hide)           -- procedure Hide_Cursor (Do_Hide
Engine/Systems/SDL/neo-engine-system.adb:262:34    - Unknown word (Hide)           -- Hide_Cursor (Do_Hide : Bool := True);
Engine/Systems/SDL/neo-engine-system.adb:262:49    - Unknown word (True)           -- (Do_Hide : Bool := True);
Engine/Systems/SDL/neo-engine-system.adb:263:24    - Unknown word (Style)          -- procedure Set_Cursor_Style (Kind : Cursor_Kind
Engine/Systems/SDL/neo-engine-system.adb:263:31    - Unknown word (Kind)           -- procedure Set_Cursor_Style (Kind : Cursor_Kind);
Engine/Systems/SDL/neo-engine-system.adb:266:44    - Unknown word (Border)         -- return Vector_Border.Unsafe_Array;
Engine/Systems/SDL/neo-engine-system.adb:266:51    - Unknown word (Unsafe)         -- return Vector_Border.Unsafe_Array;
Engine/Systems/SDL/neo-engine-system.adb:267:16    - Unknown word (Decoration)     -- function Get_Decoration return Border_State
Engine/Systems/SDL/neo-engine-system.adb:267:37    - Unknown word (Border)         -- Decoration return Border_State;
Engine/Systems/SDL/neo-engine-system.adb:270:64    - Unknown word (Mode)           -- - Set Activated and Mode cvars
Engine/Systems/SDL/neo-engine-system.adb:273:6     - Unknown word (Clipboard)      -- -- Clipboard --
Engine/Systems/SDL/neo-engine-system.adb:278:7     - Unknown word (Assert)         -- Assert (SDL_Set_Clipboard_Text
Engine/Systems/SDL/neo-engine-system.adb:284:12    - Unknown word (Paste)          -- function Paste return Str_2 is
Engine/Systems/SDL/neo-engine-system.adb:287:16    - Unknown word (Strings)        -- return C.Strings.Value (SDL_Get_Clipboard
Engine/Systems/SDL/neo-engine-system.adb:28:12     - Unknown word (Paste)        -- function Paste return Str_2 is
Engine/Systems/SDL/neo-engine-system.adb:291:6     - Unknown word (Memory)         -- -- Memory --
Engine/Systems/SDL/neo-engine-system.adb:294:16    - Unknown word (Memory)         -- function Get_Memory return Memory_State
Engine/Systems/SDL/neo-engine-system.adb:297:12    - Unknown word (Handling)       -- -- Error_Handling --
Engine/Systems/SDL/neo-engine-system.adb:300:13    - Unknown word (Alert)          -- procedure Alert (Value : Bool
Engine/Systems/SDL/neo-engine-system.adb:302:18    - Unknown word (Webpage)        -- procedure Open_Webpage (Path : Str_2)
Engine/Systems/SDL/neo-engine-system.adb:304:36    - Unknown word (Unsigned)       -- Last_Error return Int_4_Unsigned is
Engine/Systems/SDL/neo-engine-system.adb:309:62    - Unknown word (Icon)           -- Buttons : Button_Kind; Icon : Icon_Kind) return
Engine/Systems/SDL/neo-engine-system.adb:311:15    - Unknown word (Simple)         -- SDL_ShowSimpleMessageBox
Engine/Systems/SDL/neo-engine-system.adb:31:16     - Unknown word (Strings)      -- return C.Strings.Value (SDL_Get_Clipboard
Engine/Systems/SDL/neo-engine-system.adb:31:39     - Unknown word (Clipboard)    -- Strings.Value (SDL_Get_Clipboard_Text);
Engine/Systems/SDL/neo-engine-system.adb:321:13    - Unknown word (char)           -- const char* SDL_GetPlatform(void
Engine/Systems/SDL/neo-engine-system.adb:321:35    - Unknown word (void)           -- char* SDL_GetPlatform(void)
Engine/Systems/SDL/neo-engine-system.adb:330:13    - Unknown word (Minimize)       -- procedure Minimize is
Engine/Systems/SDL/neo-engine-system.adb:340:13    - Unknown word (Unsupported)    -- raise Unsupported;
Engine/Systems/SDL/neo-engine-system.adb:344:13    - Unknown word (Unsupported)    -- raise Unsupported;
Engine/Systems/SDL/neo-engine-system.adb:354:13    - Unknown word (Clip)           -- procedure Clip_Cursor (Undo : Bool
Engine/Systems/SDL/neo-engine-system.adb:354:26    - Unknown word (Undo)           -- procedure Clip_Cursor (Undo : Bool := False; Hide
Engine/Systems/SDL/neo-engine-system.adb:354:48    - Unknown word (Hide)           -- Undo : Bool := False; Hide : Bool := False) is
Engine/Systems/SDL/neo-engine-system.adb:358:38    - Unknown word (Signed)         -- Cursor (X, Y : Int_8_Signed) is
Engine/Systems/SDL/neo-engine-system.adb:35:6      - Unknown word (Memory)       -- -- Memory --
Engine/Systems/SDL/neo-engine-system.adb:362:13    - Unknown word (Adjust)         -- procedure Adjust (X, Y : Int_4_Signed
Engine/Systems/SDL/neo-engine-system.adb:362:34    - Unknown word (Signed)         -- Adjust (X, Y : Int_4_Signed; Width, Height : Int
Engine/Systems/SDL/neo-engine-system.adb:362:42    - Unknown word (Width)          -- X, Y : Int_4_Signed; Width, Height : Int_4_Positive
Engine/Systems/SDL/neo-engine-system.adb:362:49    - Unknown word (Height)         -- Int_4_Signed; Width, Height : Int_4_Positive; Fullscreen
Engine/Systems/SDL/neo-engine-system.adb:362:64    - Unknown word (Positive)      -- Width, Height : Int_4_Positive; Fullscreen : Bool)
Engine/Systems/SDL/neo-engine-system.adb:366:13    - Unknown word (Adjust)        -- procedure Adjust_Windowed (Width, Height
Engine/Systems/SDL/neo-engine-system.adb:366:20    - Unknown word (Windowed)      -- procedure Adjust_Windowed (Width, Height : Int
Engine/Systems/SDL/neo-engine-system.adb:366:30    - Unknown word (Width)         -- procedure Adjust_Windowed (Width, Height : Int_4_Positive
Engine/Systems/SDL/neo-engine-system.adb:366:37    - Unknown word (Height)        -- Adjust_Windowed (Width, Height : Int_4_Positive) is
Engine/Systems/SDL/neo-engine-system.adb:366:52    - Unknown word (Positive)      -- Width, Height : Int_4_Positive) is
Engine/Systems/SDL/neo-engine-system.adb:375:16    - Unknown word (Borders)       -- function Get_Borders return Vector_Border
Engine/Systems/SDL/neo-engine-system.adb:375:45    - Unknown word (Unsafe)        -- return Vector_Border.Unsafe.Vector is
Engine/Systems/SDL/neo-engine-system.adb:376:5     - Unknown word (Junk)          -- Junk : Vector_Border.Unsafe
Engine/Systems/SDL/neo-engine-system.adb:379:14    - Unknown word (Junk)          -- return Junk;
Engine/Systems/SDL/neo-engine-system.adb:381:16    - Unknown word (Decoration)    -- function Get_Decoration return Border_State
Engine/Systems/SDL/neo-engine-system.adb:38:16     - Unknown word (Memory)       -- function Get_Memory return Memory_State
Engine/Systems/SDL/neo-engine-system.adb:38:30     - Unknown word (Memory)       -- function Get_Memory return Memory_State is (others =>
Engine/Systems/SDL/neo-engine-system.adb:404:17    - Unknown word (Vibration)     -- procedure Set_Vibration (Id : Int_Address; High
Engine/Systems/SDL/neo-engine-system.adb:404:66    - Unknown word (Percent)       -- High, Low : Float_4_Percent) is
Engine/Systems/SDL/neo-engine-system.adb:41:12     - Unknown word (Handling)     -- -- Error_Handling --
Engine/Systems/SDL/neo-engine-system.adb:44:13     - Unknown word (Alert)        -- procedure Alert (Value : Bool
Engine/Systems/SDL/neo-engine-system.adb:46:18     - Unknown word (Webpage)      -- procedure Open_Webpage (Path : Str_2)
Engine/Systems/SDL/neo-engine-system.adb:48:36     - Unknown word (Unsigned)     -- Last_Error return Int_4_Unsigned is
Engine/Systems/SDL/neo-engine-system.adb:53:56     - Unknown word (Kind)         -- 2; Buttons : Button_Kind; Icon : Icon_Kind) return
Engine/Systems/SDL/neo-engine-system.adb:53:62     - Unknown word (Icon)         -- Buttons : Button_Kind; Icon : Icon_Kind) return
Engine/Systems/SDL/neo-engine-system.adb:53:69     - Unknown word (Icon)         -- Button_Kind; Icon : Icon_Kind) return Bool is
Engine/Systems/SDL/neo-engine-system.adb:53:74     - Unknown word (Kind)         -- Button_Kind; Icon : Icon_Kind) return Bool is
Engine/Systems/SDL/neo-engine-system.adb:55:15     - Unknown word (Simple)       -- SDL_ShowSimpleMessageBox
Engine/Systems/SDL/neo-engine-system.adb:56:14     - Unknown word (False)        -- return False;
Engine/Systems/SDL/neo-engine-system.adb:5:52      - Unknown word (Copyright)  -- Copyright (C) 2016 Justin Squirek
Engine/Systems/SDL/neo-engine-system.adb:5:71      - Unknown word (Justin)     -- Copyright (C) 2016 Justin Squirek
Engine/Systems/SDL/neo-engine-system.adb:5:78      - Unknown word (Squirek)    -- Copyright (C) 2016 Justin Squirek
Engine/Systems/SDL/neo-engine-system.adb:65:13     - Unknown word (char)         -- const char* SDL_GetPlatform(void
Engine/Systems/SDL/neo-engine-system.adb:65:35     - Unknown word (void)         -- char* SDL_GetPlatform(void)
Engine/Systems/SDL/neo-engine-system.adb:70:6      - Unknown word (Windowing)    -- -- Windowing --
Engine/Systems/SDL/neo-engine-system.adb:73:13     - Unknown word (Assert)       -- procedure Assert_Only_Instance is null
Engine/Systems/SDL/neo-engine-system.adb:74:13     - Unknown word (Minimize)     -- procedure Minimize is
Engine/Systems/SDL/neo-engine-system.adb:76:13     - Unknown word (Unimplemented) -- raise Unimplemented;
Engine/Systems/SDL/neo-engine-system.adb:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/Systems/SDL/neo-engine-system.adb:80:13     - Unknown word (Unimplemented) -- raise Unimplemented;
Engine/Systems/SDL/neo-engine-system.adb:82:24     - Unknown word (Multi)         -- procedure Initialize_Multi_Monitor is
Engine/Systems/SDL/neo-engine-system.adb:84:13     - Unknown word (Unsupported)   -- raise Unsupported;
Engine/Systems/SDL/neo-engine-system.adb:86:22     - Unknown word (Multi)         -- procedure Finalize_Multi_Monitor is
Engine/Systems/SDL/neo-engine-system.adb:88:13     - Unknown word (Unsupported)   -- raise Unsupported;
Engine/Systems/SDL/neo-engine-system.adb:8:30      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/Systems/SDL/neo-engine-system.adb:8:70      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/Systems/SDL/neo-engine-system.adb:8:87      - Unknown word (later)        -- at your option) any later version.
Engine/Systems/SDL/neo-engine-system.adb:90:24     - Unknown word (Windowing)     -- procedure Initialize_Windowing is
Engine/Systems/SDL/neo-engine-system.adb:92:13     - Unknown word (Unimplemented) -- raise Unimplemented;
Engine/Systems/SDL/neo-engine-system.adb:94:22     - Unknown word (Windowing)     -- procedure Finalize_Windowing is
Engine/Systems/SDL/neo-engine-system.adb:96:13     - Unknown word (Unimplemented) -- raise Unimplemented;
Engine/Systems/SDL/neo-engine-system.adb:98:13     - Unknown word (Clip)          -- procedure Clip_Cursor (Undo : Bool
Engine/Systems/SDL/neo-engine-system.adb:98:18     - Unknown word (Cursor)        -- procedure Clip_Cursor (Undo : Bool := False
Engine/Systems/SDL/neo-engine-system.adb:98:26     - Unknown word (Undo)          -- procedure Clip_Cursor (Undo : Bool := False; Hide
Engine/Systems/SDL/neo-engine-system.adb:98:41     - Unknown word (False)         -- Cursor (Undo : Bool := False; Hide : Bool := False
Engine/Systems/SDL/neo-engine-system.adb:98:48     - Unknown word (Hide)          -- Undo : Bool := False; Hide : Bool := False) is
Engine/Systems/SDL/neo-engine-system.adb:98:63     - Unknown word (False)         -- False; Hide : Bool := False) is
Engine/Systems/Win32/neo-engine-system-console.adb:100:14    - Unknown word (procedures)       -- -- Message procedures for convience
Engine/Systems/Win32/neo-engine-system-console.adb:100:29    - Unknown word (convience)        -- Message procedures for convience
Engine/Systems/Win32/neo-engine-system-console.adb:101:23    - Unknown word (Handle)           -- procedure Set_Text (Handle : Ptr; Text : Str) is
Engine/Systems/Win32/neo-engine-system-console.adb:101:58    - Unknown word (Assert)           -- Text : Str) is begin Assert (SendMessageW (Handle
Engine/Systems/Win32/neo-engine-system-console.adb:101:80    - Unknown word (Handle)           -- Assert (SendMessageW (Handle,
Engine/Systems/Win32/neo-engine-system-console.adb:105:23    - Unknown word (Handle)           -- procedure Set_Font (Handle : Ptr; Font : Ptr) is
Engine/Systems/Win32/neo-engine-system-console.adb:105:80    - Unknown word (Handle)           -- Ignore (SendMessageW (Handle,
Engine/Systems/Win32/neo-engine-system-console.adb:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/Systems/Win32/neo-engine-system-console.adb:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/Systems/Win32/neo-engine-system-console.adb:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/Systems/Win32/neo-engine-system-console.adb:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/Systems/Win32/neo-engine-system-console.adb:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/Systems/Win32/neo-engine-system-console.adb:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/Systems/Win32/neo-engine-system-console.adb:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/Systems/Win32/neo-engine-system-console.adb:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/Systems/Win32/neo-engine-system-console.adb:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/Systems/Win32/neo-engine-system-console.adb:110:13    - Unknown word (true)             -- -- Return true if the output text window
Engine/Systems/Win32/neo-engine-system-console.adb:110:66    - Unknown word (bottom)           -- scrollbar is at the bottom
Engine/Systems/Win32/neo-engine-system-console.adb:111:25    - Unknown word (Bottom)           -- function Scrollbar_At_Bottom return Bool is
Engine/Systems/Win32/neo-engine-system-console.adb:112:5     - Unknown word (Scroll)           -- Scroll_Info : aliased SCROLLINFO
Engine/Systems/Win32/neo-engine-system-console.adb:114:45    - Unknown word (VERT)             -- GetScrollInfo (Output_Box, SB_VERT, Scroll_Info'Unchecked
Engine/Systems/Win32/neo-engine-system-console.adb:114:51    - Unknown word (Scroll)           -- Output_Box, SB_VERT, Scroll_Info'Unchecked_Access
Engine/Systems/Win32/neo-engine-system-console.adb:114:7     - Unknown word (Assert)           -- Assert (GetScrollInfo (Output
Engine/Systems/Win32/neo-engine-system-console.adb:115:14    - Unknown word (Scroll)           -- return Scroll_Info.nPos + Number_of
Engine/Systems/Win32/neo-engine-system-console.adb:115:52    - Unknown word (Scroll)           -- Number_of_Lines >= Scroll_Info.nMax;
Engine/Systems/Win32/neo-engine-system-console.adb:118:21    - Unknown word (fonts)            -- -- Create and set fonts for the output box
Engine/Systems/Win32/neo-engine-system-console.adb:119:20    - Unknown word (Fonts)            -- procedure Create_Fonts is
Engine/Systems/Win32/neo-engine-system-console.adb:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/Systems/Win32/neo-engine-system-console.adb:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/Systems/Win32/neo-engine-system-console.adb:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/Systems/Win32/neo-engine-system-console.adb:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/Systems/Win32/neo-engine-system-console.adb:121:5     - Unknown word (Some)             -- Some_BS : aliased Str_C
Engine/Systems/Win32/neo-engine-system-console.adb:123:42    - Unknown word (GETNONCLIENTMETRICS) -- SystemParametersInfoW (SPI_GETNONCLIENTMETRICS, Metrics.cbSize, Metrics
Engine/Systems/Win32/neo-engine-system-console.adb:123:7     - Unknown word (Assert)           -- Assert (SystemParametersInfoW
Engine/Systems/Win32/neo-engine-system-console.adb:124:33    - Unknown word (Indirect)            -- Buttons := CreateFontIndirectW (Metrics.lfMessageFont
Engine/Systems/Win32/neo-engine-system-console.adb:124:85    - Unknown word (Assert)              -- essageFont'Unchecked_Access); Assert (Font_Buttons);
Engine/Systems/Win32/neo-engine-system-console.adb:125:60    - Unknown word (FONT)                -- nHeight => -FONT_CONSOLE_SIZE,
Engine/Systems/Win32/neo-engine-system-console.adb:127:38    - Unknown word (Escapement)          -- nEscapement => 0,
Engine/Systems/Win32/neo-engine-system-console.adb:128:38    - Unknown word (Orientation)         -- nOrientation => 0,
Engine/Systems/Win32/neo-engine-system-console.adb:129:39    - Unknown word (Weight)              -- fnWeight => 0,
Engine/Systems/Win32/neo-engine-system-console.adb:130:40    - Unknown word (Italic)              -- fdwItalic => 0,
Engine/Systems/Win32/neo-engine-system-console.adb:131:40    - Unknown word (Underline)           -- fdwUnderline => 0,
Engine/Systems/Win32/neo-engine-system-console.adb:132:40    - Unknown word (Strike)              -- fdwStrikeOut => 0,
Engine/Systems/Win32/neo-engine-system-console.adb:133:40    - Unknown word (Char)                -- fdwCharSet => DEFAULT
Engine/Systems/Win32/neo-engine-system-console.adb:134:71    - Unknown word (PRECIS)              -- utputPrecision => OUT_DEFAULT_PRECIS,
Engine/Systems/Win32/neo-engine-system-console.adb:135:40    - Unknown word (Clip)                -- fdwClipPrecision => CLIP_DEFAULT
Engine/Systems/Win32/neo-engine-system-console.adb:135:59    - Unknown word (CLIP)                -- fdwClipPrecision => CLIP_DEFAULT_PRECIS,
Engine/Systems/Win32/neo-engine-system-console.adb:135:72    - Unknown word (PRECIS)              -- ipPrecision => CLIP_DEFAULT_PRECIS,
Engine/Systems/Win32/neo-engine-system-console.adb:136:40    - Unknown word (Quality)             -- fdwQuality => DEFAULT_QUALITY
Engine/Systems/Win32/neo-engine-system-console.adb:136:67    - Unknown word (QUALITY)             -- fdwQuality => DEFAULT_QUALITY,
Engine/Systems/Win32/neo-engine-system-console.adb:137:40    - Unknown word (Pitch)               -- fdwPitchAndFamily => FF_MODERN
Engine/Systems/Win32/neo-engine-system-console.adb:137:62    - Unknown word (MODERN)              -- fdwPitchAndFamily => FF_MODERN,
Engine/Systems/Win32/neo-engine-system-console.adb:138:37    - Unknown word (lpsz)                -- lpszFace => FONT
Engine/Systems/Win32/neo-engine-system-console.adb:138:59    - Unknown word (FONT)                -- lpszFace => FONT_CONSOLE'Unchecked_Access
Engine/Systems/Win32/neo-engine-system-console.adb:139:7     - Unknown word (Assert)              -- Assert (Font_Text_Box);
Engine/Systems/Win32/neo-engine-system-console.adb:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/Systems/Win32/neo-engine-system-console.adb:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/Systems/Win32/neo-engine-system-console.adb:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/Systems/Win32/neo-engine-system-console.adb:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/Systems/Win32/neo-engine-system-console.adb:143:22    - Unknown word (Extent)              -- Assert (GetTextExtentPoint32W (hdc      =
Engine/Systems/Win32/neo-engine-system-console.adb:144:40    - Unknown word (String)              -- lpString => C (Some_BS),
Engine/Systems/Win32/neo-engine-system-console.adb:144:53    - Unknown word (Some)                -- lpString => C (Some_BS),
Engine/Systems/Win32/neo-engine-system-console.adb:152:44    - Unknown word (sizing)              -- for setting all GUI sizing globals
Engine/Systems/Win32/neo-engine-system-console.adb:152:8     - Unknown word (single)              -- -- A single function for setting
Engine/Systems/Win32/neo-engine-system-console.adb:153:17    - Unknown word (Sizes)               -- procedure Set_Sizes is
Engine/Systems/Win32/neo-engine-system-console.adb:154:5     - Unknown word (Minimum)             -- Minimum_Width,
Engine/Systems/Win32/neo-engine-system-console.adb:155:9     - Unknown word (Padding)             -- Box_Padding : Int_C := 0;
Engine/Systems/Win32/neo-engine-system-console.adb:156:5     - Unknown word (Border)              -- Border_Height : Int_C := GetSystemMe
Engine/Systems/Win32/neo-engine-system-console.adb:156:51    - Unknown word (CYFRAME)             -- GetSystemMetrics (SM_CYFRAME);
Engine/Systems/Win32/neo-engine-system-console.adb:157:5     - Unknown word (Border)              -- Border_Width : Int_C := GetSystemMe
Engine/Systems/Win32/neo-engine-system-console.adb:157:51    - Unknown word (CXFRAME)             -- GetSystemMetrics (SM_CXFRAME);
Engine/Systems/Win32/neo-engine-system-console.adb:159:7     - Unknown word (Margin)              -- Margin_Group := Int_C
Engine/Systems/Win32/neo-engine-system-console.adb:159:81    - Unknown word (MARGIN)              -- tmHeight) / GROUP_BOX_SIDE_MARGIN);
Engine/Systems/Win32/neo-engine-system-console.adb:160:7     - Unknown word (Margin)              -- Margin_Group_Top := Int_C
Engine/Systems/Win32/neo-engine-system-console.adb:161:11    - Unknown word (Padding)             -- Box_Padding := Int_C (Float
Engine/Systems/Win32/neo-engine-system-console.adb:162:112   - Unknown word (CYVTHUMB)            -- GetSystemMetrics (SM_CYVTHUMB);
Engine/Systems/Win32/neo-engine-system-console.adb:162:36    - Unknown word (Padding)             -- Box_Width := 2 * Box_Padding + (Text_Box_Font_Width
Engine/Systems/Win32/neo-engine-system-console.adb:163:36    - Unknown word (Padding)             -- Box_Height := 2 * Box_Padding + (Text_Box_Font_Height
Engine/Systems/Win32/neo-engine-system-console.adb:163:94    - Unknown word (ROWS)                -- C (NUMBER_OF_OUTPUT_ROWS));
Engine/Systems/Win32/neo-engine-system-console.adb:164:36    - Unknown word (Padding)             -- Box_Height := 2 * Box_Padding + Text_Box_Font_Height
Engine/Systems/Win32/neo-engine-system-console.adb:165:29    - Unknown word (MARGIN)              -- Console_Width := (MARGIN * DBU_Width + Margin
Engine/Systems/Win32/neo-engine-system-console.adb:165:50    - Unknown word (Margin)              -- MARGIN * DBU_Width + Margin_Group + Border_Width
Engine/Systems/Win32/neo-engine-system-console.adb:165:65    - Unknown word (Border)              -- Width + Margin_Group + Border_Width) * 2 + Output
Engine/Systems/Win32/neo-engine-system-console.adb:166:57    - Unknown word (Border)              -- DBU_Height) * 4 + (Border_Height + Margin_Group
Engine/Systems/Win32/neo-engine-system-console.adb:167:106   - Unknown word (CYSIZE)              -- GetSystemMetrics (SM_CYSIZE);
Engine/Systems/Win32/neo-engine-system-console.adb:167:76    - Unknown word (HEIGHT)              -- Box_Height + BUTTON_HEIGHT + GetSystemMetrics
Engine/Systems/Win32/neo-engine-system-console.adb:168:18    - Unknown word (Length)              -- if Buttons'Length > 0 then
Engine/Systems/Win32/neo-engine-system-console.adb:169:35    - Unknown word (Length)              -- Minimum_Width := (Buttons'Length - 1) * MARGIN_BUTTON
Engine/Systems/Win32/neo-engine-system-console.adb:169:9     - Unknown word (Minimum)             -- Minimum_Width := (Buttons'Length
Engine/Systems/Win32/neo-engine-system-console.adb:16:11     - Unknown word (isolated)     -- -- A task-isolated GUI console application
Engine/Systems/Win32/neo-engine-system-console.adb:170:36    - Unknown word (WIDTH)               -- + BUTTON_WIDTH * Buttons'Length + Border
Engine/Systems/Win32/neo-engine-system-console.adb:170:52    - Unknown word (Length)              -- BUTTON_WIDTH * Buttons'Length + Border_Width * 2;
Engine/Systems/Win32/neo-engine-system-console.adb:170:61    - Unknown word (Border)              -- WIDTH * Buttons'Length + Border_Width * 2;
Engine/Systems/Win32/neo-engine-system-console.adb:171:28    - Unknown word (Minimum)            -- if Console_Width < Minimum_Width then
Engine/Systems/Win32/neo-engine-system-console.adb:189:109   - Unknown word (measuring)          -- spawning a message box and measuring it
Engine/Systems/Win32/neo-engine-system-console.adb:189:48    - Unknown word (calculating)        -- variable DBU_Width used in calculating all UI proportions by
Engine/Systems/Win32/neo-engine-system-console.adb:189:67    - Unknown word (proportions)        -- in calculating all UI proportions by spawning a message
Engine/Systems/Win32/neo-engine-system-console.adb:189:82    - Unknown word (spawning)           -- all UI proportions by spawning a message box and measuring
Engine/Systems/Win32/neo-engine-system-console.adb:190:17    - Unknown word (Sizes)              -- procedure Get_Sizes_From_Message_Box is
Engine/Systems/Win32/neo-engine-system-console.adb:193:21    - Unknown word (wait)               -- -- Procedure to wait for the callback-callback
Engine/Systems/Win32/neo-engine-system-console.adb:193:34    - Unknown word (callback)           -- Procedure to wait for the callback-callback (below) to
Engine/Systems/Win32/neo-engine-system-console.adb:193:43    - Unknown word (callback)           -- wait for the callback-callback (below) to set DBU_Width
Engine/Systems/Win32/neo-engine-system-console.adb:193:53    - Unknown word (below)              -- the callback-callback (below) to set DBU_Width
Engine/Systems/Win32/neo-engine-system-console.adb:194:15    - Unknown word (Wait)               -- procedure Wait_For_Set_With_Infinite
Engine/Systems/Win32/neo-engine-system-console.adb:194:33    - Unknown word (Infinite)           -- procedure Wait_For_Set_With_Infinite_Loop is
Engine/Systems/Win32/neo-engine-system-console.adb:196:52    - Unknown word (made)               -- loop -- The Windows API made me do it
Engine/Systems/Win32/neo-engine-system-console.adb:200:37    - Unknown word (Program)            -- Width = 0 then raise Program_Error; end if;
Engine/Systems/Win32/neo-engine-system-console.adb:203:20    - Unknown word (acquire)            -- -- Callback to acquire message box
Engine/Systems/Win32/neo-engine-system-console.adb:203:8     - Unknown word (Callback)           -- -- Callback to acquire message box
Engine/Systems/Win32/neo-engine-system-console.adb:204:17    - Unknown word (Proc)               -- function CBTProc (nCode : Int_C; wParam
Engine/Systems/Win32/neo-engine-system-console.adb:204:84    - Unknown word (Convention)         -- return Int_Ptr with Convention => Stdcall;
Engine/Systems/Win32/neo-engine-system-console.adb:205:17    - Unknown word (Proc)               -- function CBTProc (nCode : Int_C; wParam
Engine/Systems/Win32/neo-engine-system-console.adb:206:75    - Unknown word (CHAR)               -- := (others => NULL_CHAR_C);
Engine/Systems/Win32/neo-engine-system-console.adb:209:10    - Unknown word (Once)               -- -- Once we find the message
Engine/Systems/Win32/neo-engine-system-console.adb:209:18    - Unknown word (find)               -- -- Once we find the message box we have
Engine/Systems/Win32/neo-engine-system-console.adb:209:42    - Unknown word (have)               -- find the message box we have to look through its
Engine/Systems/Win32/neo-engine-system-console.adb:209:50    - Unknown word (look)               -- message box we have to look through its children
Engine/Systems/Win32/neo-engine-system-console.adb:209:55    - Unknown word (through)            -- box we have to look through its children to find
Engine/Systems/Win32/neo-engine-system-console.adb:209:79    - Unknown word (find)               -- through its children to find a button
Engine/Systems/Win32/neo-engine-system-console.adb:210:27    - Unknown word (Proc)               -- function EnumWindowsProc (hwnd : Ptr; lParam
Engine/Systems/Win32/neo-engine-system-console.adb:210:81    - Unknown word (Convention)         -- Ptr) return Int_C with Convention => Stdcall;
Engine/Systems/Win32/neo-engine-system-console.adb:211:27    - Unknown word (Proc)               -- function EnumWindowsProc (hwnd : Ptr; lParam
Engine/Systems/Win32/neo-engine-system-console.adb:212:29    - Unknown word (RECT)               -- Rectangle : aliased RECT := (others => <>);
Engine/Systems/Win32/neo-engine-system-console.adb:212:9     - Unknown word (Rectangle)          -- Rectangle : aliased RECT := (others
Engine/Systems/Win32/neo-engine-system-console.adb:215:14    - Unknown word (Find)               -- -- Find a message box button
Engine/Systems/Win32/neo-engine-system-console.adb:215:43    - Unknown word (calculate)          -- message box button to calculate dialog base units
Engine/Systems/Win32/neo-engine-system-console.adb:215:53    - Unknown word (dialog)             -- button to calculate dialog base units
Engine/Systems/Win32/neo-engine-system-console.adb:216:69    - Unknown word (Length)             -- Class_Name), Class_Name'Length));
Engine/Systems/Win32/neo-engine-system-console.adb:217:70    - Unknown word (Length)             -- Window_Text), Window_Text'Length));
Engine/Systems/Win32/neo-engine-system-console.adb:220:33    - Unknown word (recommended)        -- -- Do the Microsoft recommended math and measurements
Engine/Systems/Win32/neo-engine-system-console.adb:220:45    - Unknown word (math)               -- Microsoft recommended math and measurements: https
Engine/Systems/Win32/neo-engine-system-console.adb:220:54    - Unknown word (measurements)       -- recommended math and measurements: https://support.microsoft
Engine/Systems/Win32/neo-engine-system-console.adb:221:30    - Unknown word (Rect)               -- Assert (GetWindowRect (hwnd, Rectangle'Unchecked
Engine/Systems/Win32/neo-engine-system-console.adb:221:42    - Unknown word (Rectangle)          -- GetWindowRect (hwnd, Rectangle'Unchecked_Access));
Engine/Systems/Win32/neo-engine-system-console.adb:222:41    - Unknown word (Rectangle)          -- Width := (Rectangle.right - Rectangle.left
Engine/Systems/Win32/neo-engine-system-console.adb:222:60    - Unknown word (Rectangle)          -- (Rectangle.right - Rectangle.left);
Engine/Systems/Win32/neo-engine-system-console.adb:223:51    - Unknown word (bottom)             -- := (Rectangle.bottom - Rectangle.top);
Engine/Systems/Win32/neo-engine-system-console.adb:224:100   - Unknown word (This)               -- GETFONT, 0, 0)))); -- This fails without -mwindows
Engine/Systems/Win32/neo-engine-system-console.adb:224:105   - Unknown word (fails)              -- GETFONT, 0, 0)))); -- This fails without -mwindows
Engine/Systems/Win32/neo-engine-system-console.adb:224:120   - Unknown word (mwindows)           -- This fails without -mwindows
Engine/Systems/Win32/neo-engine-system-console.adb:227:63    - Unknown word (WIDTH)              -- Button_Width / BUTTON_WIDTH_DLU;
Engine/Systems/Win32/neo-engine-system-console.adb:228:63    - Unknown word (HEIGHT)             -- Button_Height / BUTTON_HEIGHT_DLU;
Engine/Systems/Win32/neo-engine-system-console.adb:234:12    - Unknown word (Find)               -- -- Find the newly created message
Engine/Systems/Win32/neo-engine-system-console.adb:234:21    - Unknown word (newly)              -- -- Find the newly created message-box
Engine/Systems/Win32/neo-engine-system-console.adb:237:20    - Unknown word (HCBT)               -- if nCode = HCBT_ACTIVATE and S (Class
Engine/Systems/Win32/neo-engine-system-console.adb:237:58    - Unknown word (DIALOG)             -- S (Class_Name) = S (DIALOG_CLASS) and S (Window
Engine/Systems/Win32/neo-engine-system-console.adb:239:22    - Unknown word (dialog)             -- -- Get the dialog base units then close
Engine/Systems/Win32/neo-engine-system-console.adb:240:56    - Unknown word (Proc)               -- (Window, EnumWindowsProc'Address, 0));
Engine/Systems/Win32/neo-engine-system-console.adb:241:11    - Unknown word (Wait)               -- Wait_For_Set_With_Infinite
Engine/Systems/Win32/neo-engine-system-console.adb:241:29    - Unknown word (Infinite)           -- Wait_For_Set_With_Infinite_Loop;
Engine/Systems/Win32/neo-engine-system-console.adb:243:19    - Unknown word (Unhook)            -- Assert (UnhookWindowsHookEx (Hook)
Engine/Systems/Win32/neo-engine-system-console.adb:246:22    - Unknown word (Call)              -- else Ignore (CallNextHookEx (Hook, nCode
Engine/Systems/Win32/neo-engine-system-console.adb:251:37    - Unknown word (callback)          -- a message box and a callback that checks newly created
Engine/Systems/Win32/neo-engine-system-console.adb:251:46    - Unknown word (that)              -- message box and a callback that checks newly created
Engine/Systems/Win32/neo-engine-system-console.adb:251:58    - Unknown word (newly)             -- callback that checks newly created windows, then
Engine/Systems/Win32/neo-engine-system-console.adb:251:86    - Unknown word (wait)              -- created windows, then wait for DBU_Width to be
Engine/Systems/Win32/neo-engine-system-console.adb:254:25    - Unknown word (Infinite)          -- Wait_For_Set_With_Infinite_Loop;
Engine/Systems/Win32/neo-engine-system-console.adb:254:7     - Unknown word (Wait)              -- Wait_For_Set_With_Infinite
Engine/Systems/Win32/neo-engine-system-console.adb:257:21    - Unknown word (callback)          -- -- Console window callback
Engine/Systems/Win32/neo-engine-system-console.adb:258:114   - Unknown word (Convention)        -- return Int_Ptr with Convention => Stdcall;
Engine/Systems/Win32/neo-engine-system-console.adb:258:56    - Unknown word (Unsigned)          -- hwnd : Ptr; uMsg : Int_Unsigned_C; wParam, lParam :
Engine/Systems/Win32/neo-engine-system-console.adb:259:56    - Unknown word (Unsigned)          -- hwnd : Ptr; uMsg : Int_Unsigned_C; wParam, lParam :
Engine/Systems/Win32/neo-engine-system-console.adb:262:35    - Unknown word (Quit)              -- WM_DESTROY => PostQuitMessage (0); Close_Console
Engine/Systems/Win32/neo-engine-system-console.adb:262:69    - Unknown word (True)              -- ); Close_Console := True; return 0;
Engine/Systems/Win32/neo-engine-system-console.adb:263:105   - Unknown word (COLOR)             -- (CONSOLE_BACKGROUND_COLOR));
Engine/Systems/Win32/neo-engine-system-console.adb:263:31    - Unknown word (Edit)              -- when WM_CREATE     => Edit_Background := CreateSolidBrus
Engine/Systems/Win32/neo-engine-system-console.adb:263:36    - Unknown word (Background)        -- WM_CREATE => Edit_Background := CreateSolidBrush
Engine/Systems/Win32/neo-engine-system-console.adb:263:56    - Unknown word (Solid)             -- Background := CreateSolidBrush (To_Windows_Color
Engine/Systems/Win32/neo-engine-system-console.adb:263:61    - Unknown word (Brush)             -- Background := CreateSolidBrush (To_Windows_Color (CONSOLE
Engine/Systems/Win32/neo-engine-system-console.adb:263:79    - Unknown word (Color)             -- CreateSolidBrush (To_Windows_Color (CONSOLE_BACKGROUND
Engine/Systems/Win32/neo-engine-system-console.adb:263:94    - Unknown word (BACKGROUND)        -- Windows_Color (CONSOLE_BACKGROUND_COLOR));
Engine/Systems/Win32/neo-engine-system-console.adb:264:39    - Unknown word (Edit)              -- Assert (Edit_Background);
Engine/Systems/Win32/neo-engine-system-console.adb:264:44    - Unknown word (Background)        -- Assert (Edit_Background);
Engine/Systems/Win32/neo-engine-system-console.adb:265:17    - Unknown word (SYSCOMMAND)        -- when WM_SYSCOMMAND => if wParam = Int_Ptr
Engine/Systems/Win32/neo-engine-system-console.adb:265:88    - Unknown word (SCREENSAVE)        -- wParam = Int_Ptr (SC_SCREENSAVE) then return 1; end
Engine/Systems/Win32/neo-engine-system-console.adb:267:16    - Unknown word (colors)            -- -- Set colors
Engine/Systems/Win32/neo-engine-system-console.adb:268:17    - Unknown word (CTLCOLORSTATIC)    -- when WM_CTLCOLORSTATIC | WM_CTLCOLOREDIT =
Engine/Systems/Win32/neo-engine-system-console.adb:268:37    - Unknown word (CTLCOLOREDIT)      -- CTLCOLORSTATIC | WM_CTLCOLOREDIT =>
Engine/Systems/Win32/neo-engine-system-console.adb:270:114   - Unknown word (INVALID)           -- BACKGROUND_COLOR)) /= CLR_INVALID);
Engine/Systems/Win32/neo-engine-system-console.adb:270:26    - Unknown word (Color)             -- Assert (SetBkColor (To_Ptr (Int_Ptr
Engine/Systems/Win32/neo-engine-system-console.adb:270:73    - Unknown word (Color)             -- wParam)), To_Windows_Color (CONSOLE_BACKGROUND
Engine/Systems/Win32/neo-engine-system-console.adb:270:88    - Unknown word (BACKGROUND)        -- Windows_Color (CONSOLE_BACKGROUND_COLOR)) /= CLR_INVALID
Engine/Systems/Win32/neo-engine-system-console.adb:270:99    - Unknown word (COLOR)             -- (CONSOLE_BACKGROUND_COLOR)) /= CLR_INVALID);
Engine/Systems/Win32/neo-engine-system-console.adb:271:114   - Unknown word (INVALID)           -- FOREGROUND_COLOR)) /= CLR_INVALID);
Engine/Systems/Win32/neo-engine-system-console.adb:271:28    - Unknown word (Color)             -- Assert (SetTextColor (To_Ptr (Int_Ptr (wParam
Engine/Systems/Win32/neo-engine-system-console.adb:271:73    - Unknown word (Color)             -- wParam)), To_Windows_Color (CONSOLE_FOREGROUND
Engine/Systems/Win32/neo-engine-system-console.adb:271:88    - Unknown word (FOREGROUND)        -- Windows_Color (CONSOLE_FOREGROUND_COLOR)) /= CLR_INVALID
Engine/Systems/Win32/neo-engine-system-console.adb:271:99    - Unknown word (COLOR)             -- (CONSOLE_FOREGROUND_COLOR)) /= CLR_INVALID);
Engine/Systems/Win32/neo-engine-system-console.adb:272:32    - Unknown word (Edit)              -- return To_Int_Ptr (Edit_Background);
Engine/Systems/Win32/neo-engine-system-console.adb:272:37    - Unknown word (Background)        -- return To_Int_Ptr (Edit_Background);
Engine/Systems/Win32/neo-engine-system-console.adb:275:29    - Unknown word (presses)           -- -- Check for button presses
Engine/Systems/Win32/neo-engine-system-console.adb:27:6      - Unknown word (Timing)       -- -- Timing
Engine/Systems/Win32/neo-engine-system-console.adb:284:12    - Unknown word (Restrict)          -- -- Restrict resizing
Engine/Systems/Win32/neo-engine-system-console.adb:285:17    - Unknown word (GETMINMAXINFO)     -- when WM_GETMINMAXINFO =>
Engine/Systems/Win32/neo-engine-system-console.adb:287:26    - Unknown word (Track)             -- Min_Max.ptMinTrackSize.x := Console_Width
Engine/Systems/Win32/neo-engine-system-console.adb:288:26    - Unknown word (Track)             -- Min_Max.ptMinTrackSize.y := Console_Height
Engine/Systems/Win32/neo-engine-system-console.adb:28:23     - Unknown word (Clock)        -- Last_Time : Time := Clock;
Engine/Systems/Win32/neo-engine-system-console.adb:292:19    - Unknown word (main)              -- -- Resize main and child windows
Engine/Systems/Win32/neo-engine-system-console.adb:294:38    - Unknown word (MINIMIZED)         -- wParam /= Int_Ptr (SIZE_MINIMIZED) then
Engine/Systems/Win32/neo-engine-system-console.adb:296:27    - Unknown word (inputed)           -- -- Query user inputed sizes then calculate
Engine/Systems/Win32/neo-engine-system-console.adb:296:35    - Unknown word (sizes)             -- Query user inputed sizes then calculate the new
Engine/Systems/Win32/neo-engine-system-console.adb:296:46    - Unknown word (calculate)         -- user inputed sizes then calculate the new sizes with Set
Engine/Systems/Win32/neo-engine-system-console.adb:296:64    - Unknown word (sizes)             -- then calculate the new sizes with Set_Sizes
Engine/Systems/Win32/neo-engine-system-console.adb:296:79    - Unknown word (Sizes)             -- the new sizes with Set_Sizes
Engine/Systems/Win32/neo-engine-system-console.adb:297:57    - Unknown word (EXSTYLE)           -- Console_Window, GWL_EXSTYLE, WS_EX_COMPOSITED))
Engine/Systems/Win32/neo-engine-system-console.adb:297:72    - Unknown word (COMPOSITED)        -- GWL_EXSTYLE, WS_EX_COMPOSITED));
Engine/Systems/Win32/neo-engine-system-console.adb:298:30    - Unknown word (Rect)              -- Assert (GetWindowRect (Console_Window, Rectangle
Engine/Systems/Win32/neo-engine-system-console.adb:299:38    - Unknown word (False)             -- At_Minimum_Height := False;
Engine/Systems/Win32/neo-engine-system-console.adb:300:38    - Unknown word (False)             -- At_Minimum_Width := False;
Engine/Systems/Win32/neo-engine-system-console.adb:301:19    - Unknown word (Bottom)            -- Is_At_Bottom := Scrollbar
Engine/Systems/Win32/neo-engine-system-console.adb:301:51    - Unknown word (Bottom)            -- := Scrollbar_At_Bottom;
Engine/Systems/Win32/neo-engine-system-console.adb:304:17    - Unknown word (Sizes)             -- Set_Sizes;
Engine/Systems/Win32/neo-engine-system-console.adb:306:26    - Unknown word (sizes)            -- -- Apply new sizes
Engine/Systems/Win32/neo-engine-system-console.adb:308:45    - Unknown word (After)            -- hWndInsertAfter => NULL_PTR,
Engine/Systems/Win32/neo-engine-system-console.adb:313:36    - Unknown word (Flags)            -- uFlags => 0));
Engine/Systems/Win32/neo-engine-system-console.adb:316:45    - Unknown word (After)            -- hWndInsertAfter => NULL_PTR,
Engine/Systems/Win32/neo-engine-system-console.adb:31:9      - Unknown word (REPORTING)    -- ERROR_REPORTING_URL : constant Str
Engine/Systems/Win32/neo-engine-system-console.adb:321:36    - Unknown word (Flags)            -- uFlags => 0));
Engine/Systems/Win32/neo-engine-system-console.adb:324:45    - Unknown word (After)            -- hWndInsertAfter => NULL_PTR,
Engine/Systems/Win32/neo-engine-system-console.adb:329:36    - Unknown word (Flags)            -- uFlags => 0));
Engine/Systems/Win32/neo-engine-system-console.adb:332:45    - Unknown word (After)            -- hWndInsertAfter => NULL_PTR,
Engine/Systems/Win32/neo-engine-system-console.adb:337:36    - Unknown word (Flags)            -- uFlags => 0));
Engine/Systems/Win32/neo-engine-system-console.adb:340:45    - Unknown word (After)            -- hWndInsertAfter => NULL_PTR,
Engine/Systems/Win32/neo-engine-system-console.adb:348:23    - Unknown word (repositioning)    -- -- Button repositioning
Engine/Systems/Win32/neo-engine-system-console.adb:34:3      - Unknown word (FONT)         -- FONT_CONSOLE : aliased
Engine/Systems/Win32/neo-engine-system-console.adb:34:54     - Unknown word (Lucida)       -- Str_C := To_Str_C ("Lucida Console");
Engine/Systems/Win32/neo-engine-system-console.adb:357:75    - Unknown word (WIDTH)            -- Int_C (I) * BUTTON_WIDTH - DBU_Width * Int_C
Engine/Systems/Win32/neo-engine-system-console.adb:360:16    - Unknown word (Keep)             -- -- Keep the scrollbar at the
Engine/Systems/Win32/neo-engine-system-console.adb:360:42    - Unknown word (bottom)           -- the scrollbar at the bottom if it was there before
Engine/Systems/Win32/neo-engine-system-console.adb:360:59    - Unknown word (there)            -- the bottom if it was there before resizing
Engine/Systems/Win32/neo-engine-system-console.adb:360:65    - Unknown word (before)           -- bottom if it was there before resizing
Engine/Systems/Win32/neo-engine-system-console.adb:362:21    - Unknown word (Redraw)           -- Assert (RedrawWindow (hwnd, null, NULL
Engine/Systems/Win32/neo-engine-system-console.adb:363:57    - Unknown word (EXSTYLE)          -- Console_Window, GWL_EXSTYLE, 0));
Engine/Systems/Win32/neo-engine-system-console.adb:370:18    - Unknown word (main)             -- -- Execute the main loop
Engine/Systems/Win32/neo-engine-system-console.adb:374:27    - Unknown word (which)            -- -- Load the context which is used globally
Engine/Systems/Win32/neo-engine-system-console.adb:374:41    - Unknown word (globally)         -- context which is used globally
Engine/Systems/Win32/neo-engine-system-console.adb:378:19    - Unknown word (icon)             -- -- Load the icon
Engine/Systems/Win32/neo-engine-system-console.adb:379:116   - Unknown word (theme)            -- except on the "classic" theme
Engine/Systems/Win32/neo-engine-system-console.adb:379:27    - Unknown word (hinst)            -- Icon := LoadImageW (hinst => GetModuleHandleW
Engine/Systems/Win32/neo-engine-system-console.adb:379:43    - Unknown word (Module)           -- LoadImageW (hinst     => GetModuleHandleW (null), -- Loads
Engine/Systems/Win32/neo-engine-system-console.adb:379:49    - Unknown word (Handle)           -- hinst => GetModuleHandleW (null), -- Loads the
Engine/Systems/Win32/neo-engine-system-console.adb:379:68    - Unknown word (Loads)            -- GetModuleHandleW (null), -- Loads the icon nicely - except
Engine/Systems/Win32/neo-engine-system-console.adb:379:7     - Unknown word (Icon)             -- Icon := LoadImageW (hinst
Engine/Systems/Win32/neo-engine-system-console.adb:379:78    - Unknown word (icon)             -- null), -- Loads the icon nicely - except on the
Engine/Systems/Win32/neo-engine-system-console.adb:379:83    - Unknown word (nicely)           -- , -- Loads the icon nicely - except on the "classic
Engine/Systems/Win32/neo-engine-system-console.adb:379:92    - Unknown word (except)           -- Loads the icon nicely - except on the "classic" theme
Engine/Systems/Win32/neo-engine-system-console.adb:37:54     - Unknown word (Edit)         -- Str_C := To_Str_C ("Edit");
Engine/Systems/Win32/neo-engine-system-console.adb:37:8      - Unknown word (EDIT)         -- NAME_EDIT : aliased
Engine/Systems/Win32/neo-engine-system-console.adb:380:27    - Unknown word (lpsz)             -- lpszName => C (WIN32_PATH
Engine/Systems/Win32/neo-engine-system-console.adb:380:54    - Unknown word (ICON)             -- lpszName => C (WIN32_PATH_ICON),
Engine/Systems/Win32/neo-engine-system-console.adb:381:46    - Unknown word (ICON)             -- uType => IMAGE_ICON,
Engine/Systems/Win32/neo-engine-system-console.adb:384:43    - Unknown word (LOADFROMFILE)     -- fuLoad => LR_LOADFROMFILE or LR_DEFAULTSIZE);
Engine/Systems/Win32/neo-engine-system-console.adb:384:62    - Unknown word (DEFAULTSIZE)      -- LR_LOADFROMFILE or LR_DEFAULTSIZE);
Engine/Systems/Win32/neo-engine-system-console.adb:385:10    - Unknown word (Icon)             -- if Icon = NULL_PTR then Icon
Engine/Systems/Win32/neo-engine-system-console.adb:385:31    - Unknown word (Icon)             -- Icon = NULL_PTR then Icon := LoadIconW (GetModuleHandle
Engine/Systems/Win32/neo-engine-system-console.adb:385:43    - Unknown word (Icon)             -- PTR then Icon := LoadIconW (GetModuleHandleW
Engine/Systems/Win32/neo-engine-system-console.adb:385:53    - Unknown word (Module)           -- Icon := LoadIconW (GetModuleHandleW (null), IDI_APPLICATIO
Engine/Systems/Win32/neo-engine-system-console.adb:387:21    - Unknown word (font)             -- -- Set global font and size variables
Engine/Systems/Win32/neo-engine-system-console.adb:388:11    - Unknown word (Sizes)            -- Get_Sizes_From_Message_Box;
Engine/Systems/Win32/neo-engine-system-console.adb:389:14    - Unknown word (Fonts)            -- Create_Fonts;
Engine/Systems/Win32/neo-engine-system-console.adb:392:21    - Unknown word (main)             -- -- Create the main console window
Engine/Systems/Win32/neo-engine-system-console.adb:393:17    - Unknown word (lpfn)             -- Class := (lpfnWndProc => Console
Engine/Systems/Win32/neo-engine-system-console.adb:394:37    - Unknown word (Module)           -- hInstance => GetModuleHandleW (null),
Engine/Systems/Win32/neo-engine-system-console.adb:397:38    - Unknown word (Cursor)           -- hCursor => LoadCursorW (NULL_PTR, IDI_APPLICATION
Engine/Systems/Win32/neo-engine-system-console.adb:398:20    - Unknown word (Background)       -- hbrBackground => COLOR_WINDOW,
Engine/Systems/Win32/neo-engine-system-console.adb:398:34    - Unknown word (COLOR)            -- hbrBackground => COLOR_WINDOW,
Engine/Systems/Win32/neo-engine-system-console.adb:399:17    - Unknown word (lpsz)             -- lpszClassName => C (CONSOLE
Engine/Systems/Win32/neo-engine-system-console.adb:39:6      - Unknown word (Constants)    -- -- Constants
Engine/Systems/Win32/neo-engine-system-console.adb:404:67    - Unknown word (Caps)             -- => GetDeviceCaps (Context, SM_CYDLGFRAME
Engine/Systems/Win32/neo-engine-system-console.adb:404:85    - Unknown word (CYDLGFRAME)       -- GetDeviceCaps (Context, SM_CYDLGFRAME) / 2 - Console_Width
Engine/Systems/Win32/neo-engine-system-console.adb:405:67    - Unknown word (Caps)             -- => GetDeviceCaps (Context, SM_CXHTHUMB
Engine/Systems/Win32/neo-engine-system-console.adb:405:85    - Unknown word (CXHTHUMB)         -- GetDeviceCaps (Context, SM_CXHTHUMB) / 2 - Console_Height
Engine/Systems/Win32/neo-engine-system-console.adb:40:45     - Unknown word (False)        -- : constant Bool  := False;
Engine/Systems/Win32/neo-engine-system-console.adb:410:61    - Unknown word (Module)           -- hInstance => GetModuleHandleW (null),
Engine/Systems/Win32/neo-engine-system-console.adb:412:46    - Unknown word (Style)            -- dwExStyle => 0,
Engine/Systems/Win32/neo-engine-system-console.adb:413:104   - Unknown word (BORDER)           -- or WS_SYSMENU or WS_BORDER or WS_MAXIMIZEBOX
Engine/Systems/Win32/neo-engine-system-console.adb:413:117   - Unknown word (MAXIMIZEBOX)      -- SYSMENU or WS_BORDER or WS_MAXIMIZEBOX
Engine/Systems/Win32/neo-engine-system-console.adb:413:44    - Unknown word (Style)            -- dwStyle => WS_MINIMIZE
Engine/Systems/Win32/neo-engine-system-console.adb:413:61    - Unknown word (MINIMIZE)         -- dwStyle => WS_MINIMIZE or WS_SIZEBOX or WS
Engine/Systems/Win32/neo-engine-system-console.adb:413:76    - Unknown word (SIZEBOX)          -- > WS_MINIMIZE or WS_SIZEBOX or WS_SYSMENU or WS
Engine/Systems/Win32/neo-engine-system-console.adb:413:90    - Unknown word (SYSMENU)          -- or WS_SIZEBOX or WS_SYSMENU or WS_BORDER or WS_MAXIMIZEBO
Engine/Systems/Win32/neo-engine-system-console.adb:414:66    - Unknown word (MINIMIZEBOX)      -- or WS_MINIMIZEBOX);
Engine/Systems/Win32/neo-engine-system-console.adb:417:32    - Unknown word (border)           -- Create the output box border
Engine/Systems/Win32/neo-engine-system-console.adb:41:18     - Unknown word (MARGIN)       -- GROUP_BOX_SIDE_MARGIN : constant Real  :=
Engine/Systems/Win32/neo-engine-system-console.adb:426:63    - Unknown word (Module)           -- hInstance => GetModuleHandleW (null),
Engine/Systems/Win32/neo-engine-system-console.adb:428:48    - Unknown word (Style)           -- dwExStyle => 0,
Engine/Systems/Win32/neo-engine-system-console.adb:429:46    - Unknown word (Style)           -- dwStyle => WS_VISIBLE or
Engine/Systems/Win32/neo-engine-system-console.adb:429:63    - Unknown word (VISIBLE)         -- dwStyle => WS_VISIBLE or BS_GROUPBOX or WS
Engine/Systems/Win32/neo-engine-system-console.adb:42:3      - Unknown word (FONT)         -- FONT_GROUP_BOX_SIZE : constant
Engine/Systems/Win32/neo-engine-system-console.adb:432:35    - Unknown word (Localize)        -- Text (Output_Group_Box, Localize (LABEL_OUTPUT));
Engine/Systems/Win32/neo-engine-system-console.adb:435:62    - Unknown word (EDIT)            -- lpClassName => C (NAME_EDIT),
Engine/Systems/Win32/neo-engine-system-console.adb:445:42    - Unknown word (Style)           -- dwExStyle => 0,
Engine/Systems/Win32/neo-engine-system-console.adb:446:71    - Unknown word (VISIBLE)         -- => WS_VSCROLL or WS_VISIBLE or WS_BORDER or ES_MULTILINE
Engine/Systems/Win32/neo-engine-system-console.adb:446:85    - Unknown word (BORDER)          -- or WS_VISIBLE or WS_BORDER or ES_MULTILINE or ES
Engine/Systems/Win32/neo-engine-system-console.adb:44:3      - Unknown word (SCROLL)       -- SCROLL_FACTOR : constant
Engine/Systems/Win32/neo-engine-system-console.adb:451:31    - Unknown word (border)          -- Create the input box border
Engine/Systems/Win32/neo-engine-system-console.adb:45:3      - Unknown word (FONT)         -- FONT_CONSOLE_SIZE : constant
Engine/Systems/Win32/neo-engine-system-console.adb:463:62    - Unknown word (VISIBLE)         -- dwStyle => WS_VISIBLE or BS_GROUPBOX or WS
Engine/Systems/Win32/neo-engine-system-console.adb:469:61    - Unknown word (EDIT)            -- lpClassName => C (NAME_EDIT),
Engine/Systems/Win32/neo-engine-system-console.adb:46:20     - Unknown word (ROWS)         -- NUMBER_OF_OUTPUT_ROWS : constant Int_C :=
Engine/Systems/Win32/neo-engine-system-console.adb:47:10     - Unknown word (HEIGHT)       -- BUTTON_HEIGHT_DLU : constant Int
Engine/Systems/Win32/neo-engine-system-console.adb:480:56    - Unknown word (VISIBLE)         -- dwStyle => WS_VISIBLE or WS_BORDER or ES_MULTILINE
Engine/Systems/Win32/neo-engine-system-console.adb:480:70    - Unknown word (BORDER)          -- => WS_VISIBLE or WS_BORDER or ES_MULTILINE or WS
Engine/Systems/Win32/neo-engine-system-console.adb:48:10     - Unknown word (WIDTH)        -- BUTTON_WIDTH_DLU : constant
Engine/Systems/Win32/neo-engine-system-console.adb:495:60    - Unknown word (VISIBLE)         -- dwStyle => WS_VISIBLE or WS_CHILD,
Engine/Systems/Win32/neo-engine-system-console.adb:49:14     - Unknown word (INCH)         -- PIXELS_PER_INCH : constant Int
Engine/Systems/Win32/neo-engine-system-console.adb:49:3      - Unknown word (PIXELS)       -- PIXELS_PER_INCH : constant
Engine/Systems/Win32/neo-engine-system-console.adb:500:32    - Unknown word (Localize)        -- Set_Text (Buttons (I), Localize (CONSOLE_BUTTONS (I
Engine/Systems/Win32/neo-engine-system-console.adb:503:44    - Unknown word (foreground)      -- console window into the foreground
Engine/Systems/Win32/neo-engine-system-console.adb:504:116   - Unknown word (good)            -- a major windows bug, good find!"
Engine/Systems/Win32/neo-engine-system-console.adb:504:121   - Unknown word (find)            -- major windows bug, good find!"
Engine/Systems/Win32/neo-engine-system-console.adb:504:46    - Unknown word (SHOWMINIMIZED)   -- (Console_Window, SW_SHOWMINIMIZED)); -- "The fact that
Engine/Systems/Win32/neo-engine-system-console.adb:504:71    - Unknown word (fact)            -- SHOWMINIMIZED)); -- "The fact that this works is a
Engine/Systems/Win32/neo-engine-system-console.adb:504:76    - Unknown word (that)            -- SHOWMINIMIZED)); -- "The fact that this works is a major
Engine/Systems/Win32/neo-engine-system-console.adb:504:81    - Unknown word (this)            -- ; -- "The fact that this works is a major windows
Engine/Systems/Win32/neo-engine-system-console.adb:504:97    - Unknown word (major)           -- that this works is a major windows bug, good find
Engine/Systems/Win32/neo-engine-system-console.adb:506:18    - Unknown word (Focus)           -- Assert (SetFocus (Input_Box));
Engine/Systems/Win32/neo-engine-system-console.adb:509:7     - Unknown word (Outter)          -- Outter: while not Close_Console
Engine/Systems/Win32/neo-engine-system-console.adb:50:3      - Unknown word (MARGIN)       -- MARGIN_BUTTON : constant
Engine/Systems/Win32/neo-engine-system-console.adb:511:12    - Unknown word (Pump)            -- -- Pump the message loop
Engine/Systems/Win32/neo-engine-system-console.adb:512:15    - Unknown word (Peek)            -- while PeekMessageW (Message'Unchecked
Engine/Systems/Win32/neo-engine-system-console.adb:514:25    - Unknown word (certain)         -- -- Preprocess certain messages
Engine/Systems/Win32/neo-engine-system-console.adb:515:14    - Unknown word (Skip)            -- Do_Skip_Message := False;
Engine/Systems/Win32/neo-engine-system-console.adb:515:30    - Unknown word (False)           -- Do_Skip_Message := False;
Engine/Systems/Win32/neo-engine-system-console.adb:519:21    - Unknown word (QUIT)            -- when WM_QUIT => exit Outter;
Engine/Systems/Win32/neo-engine-system-console.adb:519:34    - Unknown word (Outter)          -- when WM_QUIT => exit Outter;
Engine/Systems/Win32/neo-engine-system-console.adb:51:3      - Unknown word (MARGIN)       -- MARGIN : constant
Engine/Systems/Win32/neo-engine-system-console.adb:521:28    - Unknown word (scrolling)       -- -- Scale mouse scrolling
Engine/Systems/Win32/neo-engine-system-console.adb:523:21    - Unknown word (Focus)           -- if GetFocus /= Output_Box then
Engine/Systems/Win32/neo-engine-system-console.adb:524:61    - Unknown word (SCROLL)          -- Lines / Int_64_Natural (SCROLL_FACTOR) loop
Engine/Systems/Win32/neo-engine-system-console.adb:529:45    - Unknown word (Figure)          -- -- Figure out the direction of
Engine/Systems/Win32/neo-engine-system-console.adb:529:60    - Unknown word (direction)       -- -- Figure out the direction of the scroll
Engine/Systems/Win32/neo-engine-system-console.adb:529:77    - Unknown word (scroll)          -- the direction of the scroll
Engine/Systems/Win32/neo-engine-system-console.adb:530:66    - Unknown word (Signed)          -- wParam => (if To_Int_16_Signed
Engine/Systems/Win32/neo-engine-system-console.adb:531:66    - Unknown word (Unsigned)        -- (Int_16_Unsigned
Engine/Systems/Win32/neo-engine-system-console.adb:532:61    - Unknown word (Shift)           -- (Shift_Right
Engine/Systems/Win32/neo-engine-system-console.adb:533:70    - Unknown word (Unsigned)        -- (Int_64_Unsigned (Message.wParam)
Engine/Systems/Win32/neo-engine-system-console.adb:534:96    - Unknown word (WHEEL)           -- 000#, 16))) / MOUSE_WHEEL_DELTA < 0 then 1 else
Engine/Systems/Win32/neo-engine-system-console.adb:538:16    - Unknown word (Capture)         -- -- Capture paste events (Ctrl
Engine/Systems/Win32/neo-engine-system-console.adb:538:24    - Unknown word (paste)           -- -- Capture paste events (Ctrl + V) into
Engine/Systems/Win32/neo-engine-system-console.adb:538:78    - Unknown word (focus)           -- input box and change focus
Engine/Systems/Win32/neo-engine-system-console.adb:53:13     - Unknown word (call)         -- -- System call parameters
Engine/Systems/Win32/neo-engine-system-console.adb:540:21    - Unknown word (Focus)           -- if GetFocus = Output_Box then Assert
Engine/Systems/Win32/neo-engine-system-console.adb:540:53    - Unknown word (Hide)            -- Output_Box then Assert (HideCaret (Output_Box));
Engine/Systems/Win32/neo-engine-system-console.adb:540:57    - Unknown word (Caret)           -- Box then Assert (HideCaret (Output_Box)); end if
Engine/Systems/Win32/neo-engine-system-console.adb:541:26    - Unknown word (Character)       -- Do_Process_Character := True;
Engine/Systems/Win32/neo-engine-system-console.adb:541:39    - Unknown word (True)            -- Process_Character := True;
Engine/Systems/Win32/neo-engine-system-console.adb:543:89    - Unknown word (pressed)         -- 00#) > 0 -- Is Ctrl pressed?
Engine/Systems/Win32/neo-engine-system-console.adb:544:29    - Unknown word (Focus)           -- and then GetFocus /= Input_Box
Engine/Systems/Win32/neo-engine-system-console.adb:546:44    - Unknown word (Paste)           -- Entry (Input_Entry & Paste);
Engine/Systems/Win32/neo-engine-system-console.adb:550:16    - Unknown word (Deal)            -- -- Deal with text input
Engine/Systems/Win32/neo-engine-system-console.adb:551:21    - Unknown word (CHAR)            -- when WM_CHAR =>
Engine/Systems/Win32/neo-engine-system-console.adb:552:29    - Unknown word (Character)       -- if Do_Process_Character then
Engine/Systems/Win32/neo-engine-system-console.adb:553:34    - Unknown word (Char)            -- Current_Input := Char'Val (Int (Message.wParam
Engine/Systems/Win32/neo-engine-system-console.adb:554:28    - Unknown word (Character)       -- Do_Process_Character := False;
Engine/Systems/Win32/neo-engine-system-console.adb:556:20    - Unknown word (Capture)         -- -- Capture text input and put it
Engine/Systems/Win32/neo-engine-system-console.adb:55:27     - Unknown word (TEXTMETRIC)   -- Text_Metric : aliased TEXTMETRIC := (others =
Engine/Systems/Win32/neo-engine-system-console.adb:560:25    - Unknown word (Focus)           -- if GetFocus /= Input_Box then Set
Engine/Systems/Win32/neo-engine-system-console.adb:562:37    - Unknown word (submission)      -- -- Handle a command submission
Engine/Systems/Win32/neo-engine-system-console.adb:563:42    - Unknown word (Char)            -- elsif Current_Input = To_Char_16 (ASCII.CR) then
Engine/Systems/Win32/neo-engine-system-console.adb:563:51    - Unknown word (ASCII)           -- Input = To_Char_16 (ASCII.CR) then
Engine/Systems/Win32/neo-engine-system-console.adb:568:22    - Unknown word (Skip)            -- Do_Skip_Message := True;
Engine/Systems/Win32/neo-engine-system-console.adb:568:38    - Unknown word (True)            -- Do_Skip_Message := True;
Engine/Systems/Win32/neo-engine-system-console.adb:56:27     - Unknown word (WNDCLASSEX)   -- Class : aliased WNDCLASSEX := (others =
Engine/Systems/Win32/neo-engine-system-console.adb:570:27    - Unknown word (backspace)       -- -- Handle backspace by removing the last
Engine/Systems/Win32/neo-engine-system-console.adb:570:40    - Unknown word (removing)        -- Handle backspace by removing the last character from
Engine/Systems/Win32/neo-engine-system-console.adb:570:58    - Unknown word (character)       -- by removing the last character from the entry box
Engine/Systems/Win32/neo-engine-system-console.adb:571:42    - Unknown word (Char)           -- elsif Current_Input = To_Char_16 (ASCII.BS) and Input
Engine/Systems/Win32/neo-engine-system-console.adb:571:51    - Unknown word (ASCII)          -- Input = To_Char_16 (ASCII.BS) and Input_Entry
Engine/Systems/Win32/neo-engine-system-console.adb:575:27    - Unknown word (tabs)           -- -- Ignore tabs
Engine/Systems/Win32/neo-engine-system-console.adb:576:51    - Unknown word (ASCII)          -- Input = To_Char_16 (ASCII.HT) then Do_Skip_Message
Engine/Systems/Win32/neo-engine-system-console.adb:576:69    - Unknown word (Skip)           -- (ASCII.HT) then Do_Skip_Message := True; end
Engine/Systems/Win32/neo-engine-system-console.adb:576:85    - Unknown word (True)           -- then Do_Skip_Message := True; end if;
Engine/Systems/Win32/neo-engine-system-console.adb:57:27     - Unknown word (NONCLIENTMETRICS) -- Metrics : aliased NONCLIENTMETRICS := (others => <>);
Engine/Systems/Win32/neo-engine-system-console.adb:580:38    - Unknown word (other)          -- Update input entry from other tasks ???
Engine/Systems/Win32/neo-engine-system-console.adb:582:40    - Unknown word (need)           -- on the message if we need to
Engine/Systems/Win32/neo-engine-system-console.adb:583:21    - Unknown word (Skip)           -- if not Do_Skip_Message then
Engine/Systems/Win32/neo-engine-system-console.adb:585:21    - Unknown word (Dispatch)       -- Ignore (DispatchMessageW (Message'Unchecked
Engine/Systems/Win32/neo-engine-system-console.adb:589:12    - Unknown word (Hide)           -- -- Hide the cursor in the output
Engine/Systems/Win32/neo-engine-system-console.adb:589:21    - Unknown word (cursor)         -- -- Hide the cursor in the output box
Engine/Systems/Win32/neo-engine-system-console.adb:58:27     - Unknown word (RECT)             -- Rectangle : aliased RECT := (others
Engine/Systems/Win32/neo-engine-system-console.adb:58:3      - Unknown word (Rectangle)        -- Rectangle : aliased RECT
Engine/Systems/Win32/neo-engine-system-console.adb:590:47    - Unknown word (Hide)           -- Output_Box then Ignore (HideCaret (Output_Box));
Engine/Systems/Win32/neo-engine-system-console.adb:590:51    - Unknown word (Caret)          -- Box then Ignore (HideCaret (Output_Box)); end if
Engine/Systems/Win32/neo-engine-system-console.adb:598:74    - Unknown word (GETFIRSTVISIBLELINE) -- SendMessageW (Output_Box, EM_GETFIRSTVISIBLELINE, 0, 0));
Engine/Systems/Win32/neo-engine-system-console.adb:599:20    - Unknown word (This)                -- begin -- This fails ???
Engine/Systems/Win32/neo-engine-system-console.adb:599:25    - Unknown word (fails)               -- begin -- This fails ???
Engine/Systems/Win32/neo-engine-system-console.adb:59:64     - Unknown word (CHAR)             -- := (others => NULL_CHAR_C); -- Buffer size is
Engine/Systems/Win32/neo-engine-system-console.adb:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/Systems/Win32/neo-engine-system-console.adb:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/Systems/Win32/neo-engine-system-console.adb:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/Systems/Win32/neo-engine-system-console.adb:603:14    - Unknown word (Prepare)             -- -- Prepare for repaint
Engine/Systems/Win32/neo-engine-system-console.adb:603:26    - Unknown word (repaint)             -- -- Prepare for repaint
Engine/Systems/Win32/neo-engine-system-console.adb:608:55    - Unknown word (Cutoff)              -- Start_Selection - Int_C (Cutoff);
Engine/Systems/Win32/neo-engine-system-console.adb:609:55    - Unknown word (Cutoff)              -- Selection - Int_C (Cutoff);
Engine/Systems/Win32/neo-engine-system-console.adb:611:14    - Unknown word (Trim)                -- -- Trim the log output if our
Engine/Systems/Win32/neo-engine-system-console.adb:611:48    - Unknown word (overflows)           -- output if our buffer overflows
Engine/Systems/Win32/neo-engine-system-console.adb:612:65    - Unknown word (This)                -- Buffer'Length then -- This needs cleanup!
Engine/Systems/Win32/neo-engine-system-console.adb:612:70    - Unknown word (needs)               -- Length then -- This needs cleanup!
Engine/Systems/Win32/neo-engine-system-console.adb:612:76    - Unknown word (cleanup)             -- Length then -- This needs cleanup!
Engine/Systems/Win32/neo-engine-system-console.adb:613:13    - Unknown word (Cutoff)              -- Cutoff := Int_64_Natural
Engine/Systems/Win32/neo-engine-system-console.adb:613:73    - Unknown word (ASCII)               -- Current_Log, To_Str (ASCII.CR), Input_Buffer'Length
Engine/Systems/Win32/neo-engine-system-console.adb:614:98    - Unknown word (ASCII)               -- Natural (Cutoff)), To_Str (ASCII.CR)));
Engine/Systems/Win32/neo-engine-system-console.adb:615:29    - Unknown word (Tail)                -- Current_Log := Tail (Current_Log, Length
Engine/Systems/Win32/neo-engine-system-console.adb:623:21    - Unknown word (scroll)              -- -- If the scroll bar was at the bottom
Engine/Systems/Win32/neo-engine-system-console.adb:623:43    - Unknown word (bottom)              -- scroll bar was at the bottom, make sure it stays
Engine/Systems/Win32/neo-engine-system-console.adb:623:56    - Unknown word (sure)                -- at the bottom, make sure it stays there
Engine/Systems/Win32/neo-engine-system-console.adb:623:64    - Unknown word (stays)               -- bottom, make sure it stays there
Engine/Systems/Win32/neo-engine-system-console.adb:623:70    - Unknown word (there)               -- make sure it stays there
Engine/Systems/Win32/neo-engine-system-console.adb:626:75    - Unknown word (GETFIRSTVISIBLELINE) -- SendMessageW (Output_Box, EM_GETFIRSTVISIBLELINE, 0, 0));
Engine/Systems/Win32/neo-engine-system-console.adb:62:3      - Unknown word (Cutoff)           -- Cutoff,
Engine/Systems/Win32/neo-engine-system-console.adb:631:14    - Unknown word (Repaint)             -- -- Repaint
Engine/Systems/Win32/neo-engine-system-console.adb:635:12    - Unknown word (Give)                -- -- Give up some cycles
Engine/Systems/Win32/neo-engine-system-console.adb:635:20    - Unknown word (some)                -- -- Give up some cycles
Engine/Systems/Win32/neo-engine-system-console.adb:636:22    - Unknown word (POLLING)             -- delay WINDOW_POLLING_DURATION - (Clock -
Engine/Systems/Win32/neo-engine-system-console.adb:636:30    - Unknown word (DURATION)            -- delay WINDOW_POLLING_DURATION - (Clock - Last_Time
Engine/Systems/Win32/neo-engine-system-console.adb:636:42    - Unknown word (Clock)               -- POLLING_DURATION - (Clock - Last_Time); Last_Time
Engine/Systems/Win32/neo-engine-system-console.adb:636:75    - Unknown word (Clock)               -- Time); Last_Time := Clock;
Engine/Systems/Win32/neo-engine-system-console.adb:637:16    - Unknown word (Outter)              -- end loop Outter;
Engine/Systems/Win32/neo-engine-system-console.adb:639:10    - Unknown word (Hide)                -- -- Hide the console window then
Engine/Systems/Win32/neo-engine-system-console.adb:639:39    - Unknown word (kill)                -- console window then kill it
Engine/Systems/Win32/neo-engine-system-console.adb:63:3      - Unknown word (Cutoff)           -- Cutoff_Lines,
Engine/Systems/Win32/neo-engine-system-console.adb:640:46    - Unknown word (HIDE)                -- (Console_Window, SW_HIDE));
Engine/Systems/Win32/neo-engine-system-console.adb:65:26     - Unknown word (Unsigned)         -- Current_Lines : Int_64_Unsigned := 0;
Engine/Systems/Win32/neo-engine-system-console.adb:66:19     - Unknown word (Char)             -- Current_Input : Char := NULL_CHAR
Engine/Systems/Win32/neo-engine-system-console.adb:66:43     - Unknown word (CHAR)             -- Char := NULL_CHAR;
Engine/Systems/Win32/neo-engine-system-console.adb:67:23     - Unknown word (Unbound)          -- Current_Log : Str_Unbound := NULL_STR_UNBOUND
Engine/Systems/Win32/neo-engine-system-console.adb:67:47     - Unknown word (UNBOUND)          -- Unbound := NULL_STR_UNBOUND;
Engine/Systems/Win32/neo-engine-system-console.adb:69:14     - Unknown word (font)             -- -- Window, font, and icon pointers
Engine/Systems/Win32/neo-engine-system-console.adb:69:24     - Unknown word (icon)             -- - Window, font, and icon pointers
Engine/Systems/Win32/neo-engine-system-console.adb:69:29     - Unknown word (pointers)         -- Window, font, and icon pointers
Engine/Systems/Win32/neo-engine-system-console.adb:71:18     - Unknown word (Font)             -- Font_Text_Box, Font_Buttons,
Engine/Systems/Win32/neo-engine-system-console.adb:71:3      - Unknown word (Font)             -- Font_Text_Box, Font_Buttons
Engine/Systems/Win32/neo-engine-system-console.adb:73:3      - Unknown word (Edit)             -- Edit_Background,
Engine/Systems/Win32/neo-engine-system-console.adb:73:8      - Unknown word (Background)       -- Edit_Background,
Engine/Systems/Win32/neo-engine-system-console.adb:75:3      - Unknown word (Icon)             -- Icon : aliased Ptr := NULL
Engine/Systems/Win32/neo-engine-system-console.adb:77:6      - Unknown word (Sizing)           -- -- Sizing variables
Engine/Systems/Win32/neo-engine-system-console.adb:79:14     - Unknown word (Height)           -- Output_Box_Height, Output_Box_Width, Input
Engine/Systems/Win32/neo-engine-system-console.adb:79:33     - Unknown word (Width)            -- Box_Height, Output_Box_Width, Input_Box_Height,
Engine/Systems/Win32/neo-engine-system-console.adb:79:50     - Unknown word (Height)           -- Box_Width, Input_Box_Height,
Engine/Systems/Win32/neo-engine-system-console.adb:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/Systems/Win32/neo-engine-system-console.adb:80:12     - Unknown word (Font)             -- Text_Box_Font_Height, Text_Box_Font
Engine/Systems/Win32/neo-engine-system-console.adb:80:17     - Unknown word (Height)           -- Text_Box_Font_Height, Text_Box_Font_Width
Engine/Systems/Win32/neo-engine-system-console.adb:80:34     - Unknown word (Font)             -- Font_Height, Text_Box_Font_Width,
Engine/Systems/Win32/neo-engine-system-console.adb:80:39     - Unknown word (Width)            -- Height, Text_Box_Font_Width,
Engine/Systems/Win32/neo-engine-system-console.adb:82:21     - Unknown word (Margin)           -- Margin_Group_Top, Margin_Group,
Engine/Systems/Win32/neo-engine-system-console.adb:82:3      - Unknown word (Margin)           -- Margin_Group_Top, Margin_Group
Engine/Systems/Win32/neo-engine-system-console.adb:83:11     - Unknown word (Height)           -- Current_Height, Current_Width,
Engine/Systems/Win32/neo-engine-system-console.adb:83:27     - Unknown word (Width)            -- Current_Height, Current_Width,
Engine/Systems/Win32/neo-engine-system-console.adb:84:11     - Unknown word (Height)           -- Console_Height, Console_Width,
Engine/Systems/Win32/neo-engine-system-console.adb:84:27     - Unknown word (Width)            -- Console_Height, Console_Width,
Engine/Systems/Win32/neo-engine-system-console.adb:85:25     - Unknown word (Width)            -- Button_Height, Button_Width,
Engine/Systems/Win32/neo-engine-system-console.adb:86:15     - Unknown word (Font)             -- Message_Box_Font_Height,
Engine/Systems/Win32/neo-engine-system-console.adb:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/Systems/Win32/neo-engine-system-console.adb:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/Systems/Win32/neo-engine-system-console.adb:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/Systems/Win32/neo-engine-system-console.adb:90:6      - Unknown word (Flags)            -- -- Flags
Engine/Systems/Win32/neo-engine-system-console.adb:92:14     - Unknown word (Character)        -- Do_Process_Character,
Engine/Systems/Win32/neo-engine-system-console.adb:93:10     - Unknown word (Minimum)          -- Was_At_Minimum_Width,
Engine/Systems/Win32/neo-engine-system-console.adb:94:10     - Unknown word (Minimum)          -- Was_At_Minimum_Height,
Engine/Systems/Win32/neo-engine-system-console.adb:95:10     - Unknown word (Bottom)           -- Was_At_Bottom, Is_At_Bottom,
Engine/Systems/Win32/neo-engine-system-console.adb:95:24     - Unknown word (Bottom)           -- Was_At_Bottom, Is_At_Bottom,
Engine/Systems/Win32/neo-engine-system-console.adb:96:29     - Unknown word (False)            -- Skip_Message : Bool := False;
Engine/Systems/Win32/neo-engine-system-console.adb:96:6      - Unknown word (Skip)             -- Do_Skip_Message : Bool := False
Engine/Systems/Win32/neo-engine-system.adb:100:27    - Unknown word (Library)      -- Vulkan_DLL : Ptr := LoadLibraryW (C (VK_WIN32_DLL_NAME
Engine/Systems/Win32/neo-engine-system.adb:102:13    - Unknown word (pointer)      -- -- Load a pointer to a procedure based
Engine/Systems/Win32/neo-engine-system.adb:103:23    - Unknown word (Subprogram)   -- function Get_Vulkan_Subprogram (Name : Str) return
Engine/Systems/Win32/neo-engine-system.adb:103:65    - Unknown word (Proc)         -- Str) return Ptr is (GetProcAddress (Vulkan_DLL,
Engine/Systems/Win32/neo-engine-system.adb:105:12    - Unknown word (surface)      -- -- Fetch surface extension strings
Engine/Systems/Win32/neo-engine-system.adb:105:30    - Unknown word (strings)      -- Fetch surface extension strings
Engine/Systems/Win32/neo-engine-system.adb:106:44    - Unknown word (Char)         -- Extension return Ptr_Char_8_C is (C (VK_KHR_WIN
Engine/Systems/Win32/neo-engine-system.adb:106:73    - Unknown word (SURFACE)      -- is (C (VK_KHR_WIN32_SURFACE_EXTENSION));
Engine/Systems/Win32/neo-engine-system.adb:108:23    - Unknown word (initialization) -- -- Finalization and initialization (mostly revolve around
Engine/Systems/Win32/neo-engine-system.adb:108:39    - Unknown word (mostly)         -- and initialization (mostly revolve around loading
Engine/Systems/Win32/neo-engine-system.adb:108:46    - Unknown word (revolve)        -- initialization (mostly revolve around loading the dll
Engine/Systems/Win32/neo-engine-system.adb:108:54    - Unknown word (around)         -- nitialization (mostly revolve around loading the dll)
Engine/Systems/Win32/neo-engine-system.adb:108:6     - Unknown word (Finalization) -- -- Finalization and initialization
Engine/Systems/Win32/neo-engine-system.adb:108:61    - Unknown word (loading)        -- mostly revolve around loading the dll)
Engine/Systems/Win32/neo-engine-system.adb:109:29    - Unknown word (Library)        -- procedure Finalize_Vulkan_Library is begin Assert (FreeLibrary
Engine/Systems/Win32/neo-engine-system.adb:109:46    - Unknown word (Assert)         -- Vulkan_Library is begin Assert (FreeLibrary (Vulkan
Engine/Systems/Win32/neo-engine-system.adb:109:58    - Unknown word (Library)        -- is begin Assert (FreeLibrary (Vulkan_DLL)); end;
Engine/Systems/Win32/neo-engine-system.adb:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/Systems/Win32/neo-engine-system.adb:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/Systems/Win32/neo-engine-system.adb:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/Systems/Win32/neo-engine-system.adb:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/Systems/Win32/neo-engine-system.adb:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/Systems/Win32/neo-engine-system.adb:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/Systems/Win32/neo-engine-system.adb:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/Systems/Win32/neo-engine-system.adb:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/Systems/Win32/neo-engine-system.adb:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/Systems/Win32/neo-engine-system.adb:110:31    - Unknown word (Library)        -- procedure Initialize_Vulkan_Library is
Engine/Systems/Win32/neo-engine-system.adb:111:107   - Unknown word (Surface)        -- Subprogram ("vkCreateWin32SurfaceKHR")); end;
Engine/Systems/Win32/neo-engine-system.adb:111:24    - Unknown word (Surface)        -- begin vkCreateWin32SurfaceKHR := To_Ptr_vkCreateWin
Engine/Systems/Win32/neo-engine-system.adb:111:58    - Unknown word (Surface)        -- To_Ptr_vkCreateWin32SurfaceKHR (Get_Vulkan_Subprogram
Engine/Systems/Win32/neo-engine-system.adb:111:81    - Unknown word (Subprogram)     -- SurfaceKHR (Get_Vulkan_Subprogram ("vkCreateWin32SurfaceKHR
Engine/Systems/Win32/neo-engine-system.adb:113:19    - Unknown word (surface)        -- -- Create a new surface
Engine/Systems/Win32/neo-engine-system.adb:114:26    - Unknown word (Surface)        -- function Create_Vulkan_Surface (Instance : Ptr) return
Engine/Systems/Win32/neo-engine-system.adb:116:103   - Unknown word (Handle)         -- hInstance => GetModuleHandleW (null), others =>
Engine/Systems/Win32/neo-engine-system.adb:116:5     - Unknown word (Surface)        -- Surface_Info : aliased VkWin
Engine/Systems/Win32/neo-engine-system.adb:116:97    - Unknown word (Module)         -- Window, hInstance => GetModuleHandleW (null), others
Engine/Systems/Win32/neo-engine-system.adb:118:43    - Unknown word (must)           -- Window); -- The window must be created already
Engine/Systems/Win32/neo-engine-system.adb:118:59    - Unknown word (already)        -- window must be created already
Engine/Systems/Win32/neo-engine-system.adb:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/Systems/Win32/neo-engine-system.adb:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/Systems/Win32/neo-engine-system.adb:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/Systems/Win32/neo-engine-system.adb:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/Systems/Win32/neo-engine-system.adb:125:6     - Unknown word (Clipboard)      -- -- Clipboard --
Engine/Systems/Win32/neo-engine-system.adb:128:14    - Unknown word (clipboard)      -- -- Set the clipboard with custom text
Engine/Systems/Win32/neo-engine-system.adb:131:30    - Unknown word (handle)         -- Declare a new type to handle an unchecked conversion
Engine/Systems/Win32/neo-engine-system.adb:132:61    - Unknown word (Char)           -- First..Item'Last + 1) of Char_16_C;
Engine/Systems/Win32/neo-engine-system.adb:137:8     - Unknown word (Prepare)        -- -- Prepare global data
Engine/Systems/Win32/neo-engine-system.adb:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/Systems/Win32/neo-engine-system.adb:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/Systems/Win32/neo-engine-system.adb:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/Systems/Win32/neo-engine-system.adb:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/Systems/Win32/neo-engine-system.adb:140:28    - Unknown word (GMEM)           -- Data := GlobalAlloc (GMEM_MOVEABLE, Text_Array
Engine/Systems/Win32/neo-engine-system.adb:140:33    - Unknown word (MOVEABLE)       -- = GlobalAlloc (GMEM_MOVEABLE, Text_Array'Object_Size
Engine/Systems/Win32/neo-engine-system.adb:144:36    - Unknown word (CHAR)           -- Text.all'Last) := NULL_CHAR_C;
Engine/Systems/Win32/neo-engine-system.adb:146:52    - Unknown word (clipboard)      -- data and send it to the clipboard
Engine/Systems/Win32/neo-engine-system.adb:147:47    - Unknown word (Char)           -- loop Text (I) := To_Char_16_C (Item (I)); end
Engine/Systems/Win32/neo-engine-system.adb:149:19    - Unknown word (Clipboard)      -- Assert (OpenClipboard (NULL_PTR) /= 0 and
Engine/Systems/Win32/neo-engine-system.adb:150:15    - Unknown word (Empty)          -- Assert (EmptyClipboard);
Engine/Systems/Win32/neo-engine-system.adb:150:20    - Unknown word (Clipboard)      -- Assert (EmptyClipboard);
Engine/Systems/Win32/neo-engine-system.adb:151:18    - Unknown word (Clipboard)      -- Assert (SetClipboardData (CF_UNICODETEXT
Engine/Systems/Win32/neo-engine-system.adb:151:36    - Unknown word (UNICODETEXT)    -- SetClipboardData (CF_UNICODETEXT, Data));
Engine/Systems/Win32/neo-engine-system.adb:152:20    - Unknown word (Clipboard)      -- Assert (CloseClipboard);
Engine/Systems/Win32/neo-engine-system.adb:155:23    - Unknown word (clipboard)      -- -- Grab the current clipboard text
Engine/Systems/Win32/neo-engine-system.adb:155:6     - Unknown word (Grab)           -- -- Grab the current clipboard
Engine/Systems/Win32/neo-engine-system.adb:156:12    - Unknown word (Paste)          -- function Paste return Str is
Engine/Systems/Win32/neo-engine-system.adb:157:22    - Unknown word (Char)           -- Text : Ptr_Const_Char_16_C := null;
Engine/Systems/Win32/neo-engine-system.adb:161:36    - Unknown word (UNICODETEXT)    -- GetClipboardData (CF_UNICODETEXT); Assert (Data);
Engine/Systems/Win32/neo-engine-system.adb:162:28    - Unknown word (Char)           -- Text := To_Ptr_Const_Char_16_C (GlobalLock (Data
Engine/Systems/Win32/neo-engine-system.adb:168:12    - Unknown word (Handling)       -- -- Error_Handling --
Engine/Systems/Win32/neo-engine-system.adb:171:55    - Unknown word (descriptive)    -- Return values are not descriptive in the Win32 API
Engine/Systems/Win32/neo-engine-system.adb:174:6     - Unknown word (Calls)          -- -- Calls used for sending log
Engine/Systems/Win32/neo-engine-system.adb:175:58    - Unknown word (notepad)        -- is begin Execute ("notepad.exe " & Path); end;
Engine/Systems/Win32/neo-engine-system.adb:176:18    - Unknown word (Webpage)        -- procedure Open_Webpage (Path : Str) is
Engine/Systems/Win32/neo-engine-system.adb:178:64    - Unknown word (Classes)        -- To_Str_C ("Software\Classes\http\shell\open\command
Engine/Systems/Win32/neo-engine-system.adb:179:5     - Unknown word (Length)         -- Length : aliased Int_Unsigned
Engine/Systems/Win32/neo-engine-system.adb:182:66    - Unknown word (Length)         -- null, null, NULL_PTR, Length'Unchecked_Access));
Engine/Systems/Win32/neo-engine-system.adb:184:46    - Unknown word (Length)         -- Str_C (1..Int_Size_C (Length)) := (others => NULL
Engine/Systems/Win32/neo-engine-system.adb:184:74    - Unknown word (CHAR)           -- := (others => NULL_CHAR_C);
Engine/Systems/Win32/neo-engine-system.adb:186:74    - Unknown word (Length)         -- null, Result'Address, Length'Unchecked_Access));
Engine/Systems/Win32/neo-engine-system.adb:18:11     - Unknown word (dependant)    -- -- System-dependant subprograms for Microsoft
Engine/Systems/Win32/neo-engine-system.adb:18:21     - Unknown word (subprograms)  -- -- System-dependant subprograms for Microsoft Windows
Engine/Systems/Win32/neo-engine-system.adb:195:28    - Unknown word (STARTUPINFO)    -- Startup_Info : aliased STARTUPINFO := (others
Engine/Systems/Win32/neo-engine-system.adb:195:5     - Unknown word (Startup)        -- Startup_Info : aliased STARTUPINFO
Engine/Systems/Win32/neo-engine-system.adb:198:48    - Unknown word (Subtract)       -- = MAX_PATH - 1); -- Subtract one to account for null
Engine/Systems/Win32/neo-engine-system.adb:198:81    - Unknown word (terminator)     -- to account for null terminator
Engine/Systems/Win32/neo-engine-system.adb:203:32    - Unknown word (Inherit)        -- bInheritHandles => 0,
Engine/Systems/Win32/neo-engine-system.adb:203:39    - Unknown word (Handles)        -- bInheritHandles => 0,
Engine/Systems/Win32/neo-engine-system.adb:204:41    - Unknown word (Flags)          -- dwCreationFlags => 0,
Engine/Systems/Win32/neo-engine-system.adb:207:33    - Unknown word (Startup)        -- lpStartupInfo => Startup
Engine/Systems/Win32/neo-engine-system.adb:207:55    - Unknown word (Startup)        -- lpStartupInfo => Startup_Info'Unchecked_Access
Engine/Systems/Win32/neo-engine-system.adb:212:49    - Unknown word (Kind)           -- Str; Buttons : Buttons_Kind; Icon : Icon_Kind) return
Engine/Systems/Win32/neo-engine-system.adb:212:55    - Unknown word (Icon)           -- Buttons : Buttons_Kind; Icon : Icon_Kind) return
Engine/Systems/Win32/neo-engine-system.adb:212:62    - Unknown word (Icon)           -- Buttons_Kind; Icon : Icon_Kind) return Bool is
Engine/Systems/Win32/neo-engine-system.adb:212:67    - Unknown word (Kind)           -- Buttons_Kind; Icon : Icon_Kind) return Bool is
Engine/Systems/Win32/neo-engine-system.adb:214:31    - Unknown word (pointer)        -- Temporary variable for pointer passing
Engine/Systems/Win32/neo-engine-system.adb:214:39    - Unknown word (passing)        -- variable for pointer passing
Engine/Systems/Win32/neo-engine-system.adb:217:30    - Unknown word (icon)           -- Strap in for a custom icon
Engine/Systems/Win32/neo-engine-system.adb:217:8     - Unknown word (Strap)          -- -- Strap in for a custom icon
Engine/Systems/Win32/neo-engine-system.adb:218:18    - Unknown word (Icon)           -- Force_Custom_Icon : Ptr;
Engine/Systems/Win32/neo-engine-system.adb:219:17    - Unknown word (Proc)           -- function CBTProc (nCode : Int_C; wParam
Engine/Systems/Win32/neo-engine-system.adb:219:84    - Unknown word (Convention)     -- return Int_Ptr with Convention => Stdcall;
Engine/Systems/Win32/neo-engine-system.adb:21:26     - Unknown word (Border)       -- procedure Resize (To : Border_State) is begin null
Engine/Systems/Win32/neo-engine-system.adb:220:17    - Unknown word (Proc)           -- function CBTProc (nCode : Int_C; wParam
Engine/Systems/Win32/neo-engine-system.adb:221:76    - Unknown word (CHAR)           -- := (others => NULL_CHAR_C);
Engine/Systems/Win32/neo-engine-system.adb:223:7     - Unknown word (Icon)          -- Icon : Ptr := NULL_PTR
Engine/Systems/Win32/neo-engine-system.adb:226:12    - Unknown word (Identify)      -- -- Identify the message box by class
Engine/Systems/Win32/neo-engine-system.adb:229:20    - Unknown word (HCBT)          -- if nCode = HCBT_ACTIVATE and SC (Class
Engine/Systems/Win32/neo-engine-system.adb:229:60    - Unknown word (DIALOG)        -- SC (Class_Name) = SC (DIALOG_CLASS) and Window_Text
Engine/Systems/Win32/neo-engine-system.adb:231:19    - Unknown word (that)          -- -- Load that icon!
Engine/Systems/Win32/neo-engine-system.adb:231:24    - Unknown word (icon)          -- -- Load that icon!
Engine/Systems/Win32/neo-engine-system.adb:232:11    - Unknown word (Icon)          -- Icon := LoadImageW (hinst
Engine/Systems/Win32/neo-engine-system.adb:232:31    - Unknown word (hinst)         -- Icon := LoadImageW (hinst => NULL_PTR,
Engine/Systems/Win32/neo-engine-system.adb:233:31    - Unknown word (lpsz)          -- lpszName => C (WIN32_PATH
Engine/Systems/Win32/neo-engine-system.adb:233:58    - Unknown word (ICON)          -- lpszName => C (WIN32_PATH_ICON),
Engine/Systems/Win32/neo-engine-system.adb:234:50    - Unknown word (ICON)          -- uType => IMAGE_ICON,
Engine/Systems/Win32/neo-engine-system.adb:237:47    - Unknown word (LOADFROMFILE)  -- fuLoad => LR_LOADFROMFILE or LR_DEFAULTSIZE);
Engine/Systems/Win32/neo-engine-system.adb:237:66    - Unknown word (DEFAULTSIZE)   -- LR_LOADFROMFILE or LR_DEFAULTSIZE);
Engine/Systems/Win32/neo-engine-system.adb:238:57    - Unknown word (Module)        -- Icon := LoadIconW (GetModuleHandleW (null), IDI_APPLICATIO
Engine/Systems/Win32/neo-engine-system.adb:238:63    - Unknown word (Handle)        -- LoadIconW (GetModuleHandleW (null), IDI_APPLICATION
Engine/Systems/Win32/neo-engine-system.adb:240:19    - Unknown word (that)          -- -- Well that was fun...
Engine/Systems/Win32/neo-engine-system.adb:241:44    - Unknown word (SETICON)       -- SendMessageW (Window, WM_SETICON, 0, To_Int_Ptr (Icon
Engine/Systems/Win32/neo-engine-system.adb:242:19    - Unknown word (Unhook)        -- Assert (UnhookWindowsHookEx (Force
Engine/Systems/Win32/neo-engine-system.adb:243:22    - Unknown word (Call)          -- else Ignore (CallNextHookEx (Force_Custom
Engine/Systems/Win32/neo-engine-system.adb:248:27    - Unknown word (find)          -- -- Create a hook to find the message box window
Engine/Systems/Win32/neo-engine-system.adb:248:55    - Unknown word (which)         -- the message box window which will then be able to
Engine/Systems/Win32/neo-engine-system.adb:248:61    - Unknown word (will)          -- message box window which will then be able to set
Engine/Systems/Win32/neo-engine-system.adb:248:74    - Unknown word (able)          -- window which will then be able to set the icon
Engine/Systems/Win32/neo-engine-system.adb:248:90    - Unknown word (icon)          -- then be able to set the icon
Engine/Systems/Win32/neo-engine-system.adb:249:58    - Unknown word (Proc)          -- SetWindowsHookExW (WH_CBT, CBTProc'Address, NULL_PTR, GetCurrent
Engine/Systems/Win32/neo-engine-system.adb:251:17    - Unknown word (call)          -- -- Do the call
Engine/Systems/Win32/neo-engine-system.adb:253:35    - Unknown word (Caption)       -- lpCaption => C (GAME_NAME),
Engine/Systems/Win32/neo-engine-system.adb:255:81    - Unknown word (SYSTEMMODAL)   -- Window = NULL_PTR then MB_SYSTEMMODAL else 0)
Engine/Systems/Win32/neo-engine-system.adb:258:83    - Unknown word (ICONERROR)     -- Error_Icon => MB_ICONERROR,
Engine/Systems/Win32/neo-engine-system.adb:259:83    - Unknown word (ICONWARNING)   -- Warning_Icon => MB_ICONWARNING,
Engine/Systems/Win32/neo-engine-system.adb:260:83    - Unknown word (ICONINFORMATION) -- Information_Icon => MB_ICONINFORMATION)
Engine/Systems/Win32/neo-engine-system.adb:262:60    - Unknown word (Okay)            -- when Okay_Button => MB
Engine/Systems/Win32/neo-engine-system.adb:264:60    - Unknown word (Okay)            -- when Okay_Cancel_Buttons => MB
Engine/Systems/Win32/neo-engine-system.adb:266:60    - Unknown word (IDOK)            -- when IDOK | IDRETRY | IDYES =
Engine/Systems/Win32/neo-engine-system.adb:266:67    - Unknown word (IDRETRY)         -- when IDOK | IDRETRY | IDYES => True,
Engine/Systems/Win32/neo-engine-system.adb:266:77    - Unknown word (IDYES)           -- when IDOK | IDRETRY | IDYES => True,
Engine/Systems/Win32/neo-engine-system.adb:266:86    - Unknown word (True)            -- IDRETRY | IDYES => True,
Engine/Systems/Win32/neo-engine-system.adb:267:70    - Unknown word (False)           -- when others => False);
Engine/Systems/Win32/neo-engine-system.adb:271:6     - Unknown word (Windowing)       -- -- Windowing --
Engine/Systems/Win32/neo-engine-system.adb:274:22    - Unknown word (windowing)       -- -- Styles for game windowing modes
Engine/Systems/Win32/neo-engine-system.adb:274:32    - Unknown word (modes)           -- Styles for game windowing modes
Engine/Systems/Win32/neo-engine-system.adb:274:6     - Unknown word (Styles)          -- -- Styles for game windowing modes
Engine/Systems/Win32/neo-engine-system.adb:275:3     - Unknown word (STYLE)           -- STYLE_FULLSCREEN : constant
Engine/Systems/Win32/neo-engine-system.adb:275:52    - Unknown word (VISIBLE)         -- Int_Unsigned_C := WS_VISIBLE or WS_SYSMENU or WS
Engine/Systems/Win32/neo-engine-system.adb:275:66    - Unknown word (SYSMENU)         -- := WS_VISIBLE or WS_SYSMENU or WS_TOPMOST or WS
Engine/Systems/Win32/neo-engine-system.adb:275:80    - Unknown word (TOPMOST)         -- or WS_SYSMENU or WS_TOPMOST or WS_POPUP;
Engine/Systems/Win32/neo-engine-system.adb:276:107   - Unknown word (SIZEBOX)         -- CAPTION or WS_BORDER or WS_SIZEBOX or WS_MAXIMIZEBOX;
Engine/Systems/Win32/neo-engine-system.adb:276:121   - Unknown word (MAXIMIZEBOX)     -- or WS_SIZEBOX or WS_MAXIMIZEBOX;
Engine/Systems/Win32/neo-engine-system.adb:276:3     - Unknown word (STYLE)           -- STYLE_WINDOWED : constant
Engine/Systems/Win32/neo-engine-system.adb:276:52    - Unknown word (VISIBLE)         -- Int_Unsigned_C := WS_VISIBLE or WS_SYSMENU or WS
Engine/Systems/Win32/neo-engine-system.adb:276:66    - Unknown word (SYSMENU)         -- := WS_VISIBLE or WS_SYSMENU or WS_CAPTION or WS
Engine/Systems/Win32/neo-engine-system.adb:276:80    - Unknown word (CAPTION)         -- or WS_SYSMENU or WS_CAPTION or WS_BORDER or WS_SIZEBOX
Engine/Systems/Win32/neo-engine-system.adb:276:9     - Unknown word (WINDOWED)        -- STYLE_WINDOWED : constant Int_Unsigned
Engine/Systems/Win32/neo-engine-system.adb:276:94    - Unknown word (BORDER)          -- or WS_CAPTION or WS_BORDER or WS_SIZEBOX or WS
Engine/Systems/Win32/neo-engine-system.adb:278:16    - Unknown word (cursors)         -- -- Icons and cursors
Engine/Systems/Win32/neo-engine-system.adb:278:6     - Unknown word (Icons)           -- -- Icons and cursors
Engine/Systems/Win32/neo-engine-system.adb:279:16    - Unknown word (Inactive)        -- Icon, Cursor_Inactive, Cursor_Active : Ptr
Engine/Systems/Win32/neo-engine-system.adb:279:26    - Unknown word (Cursor)          -- Icon, Cursor_Inactive, Cursor_Active : Ptr := NULL
Engine/Systems/Win32/neo-engine-system.adb:279:9     - Unknown word (Cursor)          -- Icon, Cursor_Inactive, Cursor_Active
Engine/Systems/Win32/neo-engine-system.adb:27:20     - Unknown word (Internal)     -- function OS_Info_Internal return OS_Info_State
Engine/Systems/Win32/neo-engine-system.adb:280:12    - Unknown word (Clip)            -- Original_Clip : aliased RECT := (others
Engine/Systems/Win32/neo-engine-system.adb:280:27    - Unknown word (RECT)            -- Original_Clip : aliased RECT := (others => <>);
Engine/Systems/Win32/neo-engine-system.adb:280:3     - Unknown word (Original)        -- Original_Clip : aliased RECT
Engine/Systems/Win32/neo-engine-system.adb:282:31    - Unknown word (rectangles)      -- Conversion functions for rectangles and borders
Engine/Systems/Win32/neo-engine-system.adb:282:46    - Unknown word (borders)         -- functions for rectangles and borders
Engine/Systems/Win32/neo-engine-system.adb:283:15    - Unknown word (Border)          -- function To_Border (Rectangle : RECT) return
Engine/Systems/Win32/neo-engine-system.adb:283:23    - Unknown word (Rectangle)       -- function To_Border (Rectangle : RECT) return Border
Engine/Systems/Win32/neo-engine-system.adb:283:35    - Unknown word (RECT)            -- Border (Rectangle : RECT) return Border_State
Engine/Systems/Win32/neo-engine-system.adb:283:48    - Unknown word (Border)          -- Rectangle : RECT) return Border_State is
Engine/Systems/Win32/neo-engine-system.adb:284:14    - Unknown word (Rectangle)       -- ((Int (Rectangle.top), Int   (Rectangle
Engine/Systems/Win32/neo-engine-system.adb:284:37    - Unknown word (Rectangle)       -- Rectangle.top), Int   (Rectangle.bottom), Int   (Rectangle
Engine/Systems/Win32/neo-engine-system.adb:284:47    - Unknown word (bottom)          -- top), Int   (Rectangle.bottom), Int   (Rectangle.left
Engine/Systems/Win32/neo-engine-system.adb:284:63    - Unknown word (Rectangle)       -- Rectangle.bottom), Int   (Rectangle.left), Int   (Rectangle
Engine/Systems/Win32/neo-engine-system.adb:284:87    - Unknown word (Rectangle)       -- Rectangle.left), Int   (Rectangle.right)));
Engine/Systems/Win32/neo-engine-system.adb:285:15    - Unknown word (RECT)            -- function To_RECT (Border : Border_State
Engine/Systems/Win32/neo-engine-system.adb:285:21    - Unknown word (Border)          -- function To_RECT (Border : Border_State) return
Engine/Systems/Win32/neo-engine-system.adb:285:30    - Unknown word (Border)          -- function To_RECT (Border : Border_State) return RECT is
Engine/Systems/Win32/neo-engine-system.adb:285:51    - Unknown word (RECT)            -- Border_State) return RECT is
Engine/Systems/Win32/neo-engine-system.adb:286:94    - Unknown word (Bottom)          -- Right), Int_C (Border.Bottom)));
Engine/Systems/Win32/neo-engine-system.adb:288:26    - Unknown word (supports)        -- Find out if the API supports windowed mode (e.g.
Engine/Systems/Win32/neo-engine-system.adb:288:35    - Unknown word (windowed)        -- if the API supports windowed mode (e.g. phone)
Engine/Systems/Win32/neo-engine-system.adb:288:44    - Unknown word (mode)            -- API supports windowed mode (e.g. phone)
Engine/Systems/Win32/neo-engine-system.adb:288:6     - Unknown word (Find)            -- -- Find out if the API supports
Engine/Systems/Win32/neo-engine-system.adb:289:44    - Unknown word (False)           -- Only return Bool is (False);
Engine/Systems/Win32/neo-engine-system.adb:291:26    - Unknown word (hidden)          -- Force the game into hidden mode
Engine/Systems/Win32/neo-engine-system.adb:291:33    - Unknown word (mode)            -- the game into hidden mode
Engine/Systems/Win32/neo-engine-system.adb:292:13    - Unknown word (Minimize)        -- procedure Minimize is begin Ignore (ShowWindow
Engine/Systems/Win32/neo-engine-system.adb:292:67    - Unknown word (SHOWMINIMIZED)   -- ShowWindow (Game_Window, SW_SHOWMINIMIZED) = 0); end;
Engine/Systems/Win32/neo-engine-system.adb:294:17    - Unknown word (cursor)          -- -- Change the cursor position
Engine/Systems/Win32/neo-engine-system.adb:295:17    - Unknown word (Cursor)          -- procedure Set_Cursor (Pos : Cursor_State
Engine/Systems/Win32/neo-engine-system.adb:295:31    - Unknown word (Cursor)          -- procedure Set_Cursor (Pos : Cursor_State) is begin Assert
Engine/Systems/Win32/neo-engine-system.adb:295:65    - Unknown word (Cursor)          -- is begin Assert (SetCursorPos (Int_C (Pos.X), Int
Engine/Systems/Win32/neo-engine-system.adb:297:22    - Unknown word (windowed)        -- -- Get the size of windowed mode "decorations"
Engine/Systems/Win32/neo-engine-system.adb:297:31    - Unknown word (mode)            -- the size of windowed mode "decorations"
Engine/Systems/Win32/neo-engine-system.adb:297:37    - Unknown word (decorations)     -- size of windowed mode "decorations"
Engine/Systems/Win32/neo-engine-system.adb:298:119   - Unknown word (CYFRAME)         -- GetSystemMetrics (SM_CYFRAME)),
Engine/Systems/Win32/neo-engine-system.adb:298:16    - Unknown word (Decoration)      -- function Get_Decoration return Border_State
Engine/Systems/Win32/neo-engine-system.adb:298:88    - Unknown word (CYSIZE)          -- GetSystemMetrics (SM_CYSIZE) + GetSystemMetrics
Engine/Systems/Win32/neo-engine-system.adb:299:88    - Unknown word (CXFRAME)         -- GetSystemMetrics (SM_CXFRAME)),
Engine/Systems/Win32/neo-engine-system.adb:29:61     - Unknown word (CHAR)         -- := (others => NULL_CHAR_C);
Engine/Systems/Win32/neo-engine-system.adb:300:88    - Unknown word (CXFRAME)         -- GetSystemMetrics (SM_CXFRAME)),
Engine/Systems/Win32/neo-engine-system.adb:301:52    - Unknown word (Bottom)         -- Bottom => Int (GetSystemMetrics
Engine/Systems/Win32/neo-engine-system.adb:301:88    - Unknown word (CYFRAME)        -- GetSystemMetrics (SM_CYFRAME))));
Engine/Systems/Win32/neo-engine-system.adb:303:29    - Unknown word (initializing)   -- Internal procedure for initializing or adjusting the game
Engine/Systems/Win32/neo-engine-system.adb:303:45    - Unknown word (adjusting)      -- for initializing or adjusting the game window
Engine/Systems/Win32/neo-engine-system.adb:303:6     - Unknown word (Internal)       -- -- Internal procedure for initializing
Engine/Systems/Win32/neo-engine-system.adb:304:13    - Unknown word (Adjust)         -- procedure Adjust_Windowing (X, Y : Int
Engine/Systems/Win32/neo-engine-system.adb:304:20    - Unknown word (Windowing)      -- procedure Adjust_Windowing (X, Y : Int; Width,
Engine/Systems/Win32/neo-engine-system.adb:304:43    - Unknown word (Width)          -- Windowing (X, Y : Int; Width, Height : Positive;
Engine/Systems/Win32/neo-engine-system.adb:304:50    - Unknown word (Height)         -- (X, Y : Int; Width, Height : Positive; Fullscreen
Engine/Systems/Win32/neo-engine-system.adb:304:59    - Unknown word (Positive)       -- Int; Width, Height : Positive; Fullscreen : Bool)
Engine/Systems/Win32/neo-engine-system.adb:307:45    - Unknown word (Style)          -- CreateWindowExW (dwExStyle => 0,
Engine/Systems/Win32/neo-engine-system.adb:310:105   - Unknown word (WINDOWED)       -- FULLSCREEN else STYLE_WINDOWED) or WS_MINIMIZE,
Engine/Systems/Win32/neo-engine-system.adb:310:121   - Unknown word (MINIMIZE)       -- STYLE_WINDOWED) or WS_MINIMIZE,
Engine/Systems/Win32/neo-engine-system.adb:310:43    - Unknown word (Style)          -- dwStyle => (if Fullscreen
Engine/Systems/Win32/neo-engine-system.adb:310:77    - Unknown word (STYLE)          -- (if Fullscreen then STYLE_FULLSCREEN else STYLE
Engine/Systems/Win32/neo-engine-system.adb:310:99    - Unknown word (STYLE)          -- STYLE_FULLSCREEN else STYLE_WINDOWED) or WS_MINIMIZE
Engine/Systems/Win32/neo-engine-system.adb:313:42    - Unknown word (Width)          -- nWidth => Int_C (Width
Engine/Systems/Win32/neo-engine-system.adb:313:64    - Unknown word (Width)          -- nWidth => Int_C (Width),
Engine/Systems/Win32/neo-engine-system.adb:314:42    - Unknown word (Height)         -- nHeight => Int_C (Height
Engine/Systems/Win32/neo-engine-system.adb:314:64    - Unknown word (Height)         -- nHeight => Int_C (Height),
Engine/Systems/Win32/neo-engine-system.adb:317:60    - Unknown word (Module)         -- hInstance => GetModuleHandleW (null),
Engine/Systems/Win32/neo-engine-system.adb:317:66    - Unknown word (Handle)         -- hInstance => GetModuleHandleW (null),
Engine/Systems/Win32/neo-engine-system.adb:31:7      - Unknown word (Assert)       -- Assert (GetUserNameW (null
Engine/Systems/Win32/neo-engine-system.adb:31:94     - Unknown word (INSUFFICIENT) -- GetLastError = ERROR_INSUFFICIENT_BUFFER);
Engine/Systems/Win32/neo-engine-system.adb:322:105   - Unknown word (WINDOWED)       -- FULLSCREEN else STYLE_WINDOWED)) /= 0);
Engine/Systems/Win32/neo-engine-system.adb:322:50    - Unknown word (STYLE)          -- WindowLongW (Game_Window, GWL_STYLE, (if Fullscreen then
Engine/Systems/Win32/neo-engine-system.adb:324:41    - Unknown word (After)          -- hWndInsertAfter => NULL_PTR,
Engine/Systems/Win32/neo-engine-system.adb:327:57    - Unknown word (Width)          -- => Int_C (Width),
Engine/Systems/Win32/neo-engine-system.adb:328:57    - Unknown word (Height)         -- => Int_C (Height),
Engine/Systems/Win32/neo-engine-system.adb:329:32    - Unknown word (Flags)          -- uFlags => 0));
Engine/Systems/Win32/neo-engine-system.adb:32:18     - Unknown word (Module)       -- Assert (GetModuleFileNameW (NULL_PTR,
Engine/Systems/Win32/neo-engine-system.adb:32:64     - Unknown word (Length)       -- C (Folder), Folder'Length));
Engine/Systems/Win32/neo-engine-system.adb:32:7      - Unknown word (Assert)       -- Assert (GetModuleFileNameW
Engine/Systems/Win32/neo-engine-system.adb:333:37    - Unknown word (modes)          -- changes to switch window modes
Engine/Systems/Win32/neo-engine-system.adb:333:6     - Unknown word (Style)          -- -- Style changes to switch window
Engine/Systems/Win32/neo-engine-system.adb:334:13    - Unknown word (Maximize)       -- procedure Maximize is
Engine/Systems/Win32/neo-engine-system.adb:338:14    - Unknown word (Windowing)      -- Adjust_Windowing (X          => 0,
Engine/Systems/Win32/neo-engine-system.adb:338:7     - Unknown word (Adjust)         -- Adjust_Windowing (X
Engine/Systems/Win32/neo-engine-system.adb:33:56     - Unknown word (Backward)     -- To_Str (Folder), "\", Backward))) := NULL_CHAR_C;
Engine/Systems/Win32/neo-engine-system.adb:33:76     - Unknown word (CHAR)         -- Backward))) := NULL_CHAR_C;
Engine/Systems/Win32/neo-engine-system.adb:340:25    - Unknown word (Width)          -- Width => Positive (GetDeviceCa
Engine/Systems/Win32/neo-engine-system.adb:340:39    - Unknown word (Positive)       -- Width => Positive (GetDeviceCaps (Context
Engine/Systems/Win32/neo-engine-system.adb:340:58    - Unknown word (Caps)           -- Positive (GetDeviceCaps (Context, SM_CYDLGFRAME
Engine/Systems/Win32/neo-engine-system.adb:340:76    - Unknown word (CYDLGFRAME)     -- GetDeviceCaps (Context, SM_CYDLGFRAME)),
Engine/Systems/Win32/neo-engine-system.adb:341:25    - Unknown word (Height)         -- Height => Positive (GetDeviceCap
Engine/Systems/Win32/neo-engine-system.adb:341:39    - Unknown word (Positive)       -- Height => Positive (GetDeviceCaps (Context
Engine/Systems/Win32/neo-engine-system.adb:341:58    - Unknown word (Caps)           -- Positive (GetDeviceCaps (Context, SM_CXHTHUMB
Engine/Systems/Win32/neo-engine-system.adb:341:76    - Unknown word (CXHTHUMB)       -- GetDeviceCaps (Context, SM_CXHTHUMB)),
Engine/Systems/Win32/neo-engine-system.adb:342:39    - Unknown word (True)           -- Fullscreen => True);
Engine/Systems/Win32/neo-engine-system.adb:349:14    - Unknown word (Windowing)      -- Adjust_Windowing (X          => Int
Engine/Systems/Win32/neo-engine-system.adb:349:53    - Unknown word (Caps)           -- => Int (GetDeviceCaps (Context, SM_CYDLGFRAME
Engine/Systems/Win32/neo-engine-system.adb:349:7     - Unknown word (Adjust)         -- Adjust_Windowing (X
Engine/Systems/Win32/neo-engine-system.adb:349:71    - Unknown word (CYDLGFRAME)     -- GetDeviceCaps (Context, SM_CYDLGFRAME)) / 2 - Window_Width
Engine/Systems/Win32/neo-engine-system.adb:350:53    - Unknown word (Caps)           -- => Int (GetDeviceCaps (Context, SM_CXHTHUMB
Engine/Systems/Win32/neo-engine-system.adb:350:71    - Unknown word (CXHTHUMB)       -- GetDeviceCaps (Context, SM_CXHTHUMB)) / 2 - Window_Height
Engine/Systems/Win32/neo-engine-system.adb:353:39    - Unknown word (False)          -- Fullscreen => False);
Engine/Systems/Win32/neo-engine-system.adb:357:13    - Unknown word (styling)        -- -- Cursor styling
Engine/Systems/Win32/neo-engine-system.adb:358:24    - Unknown word (Style)          -- procedure Set_Cursor_Style_Internal (Kind : Ptr
Engine/Systems/Win32/neo-engine-system.adb:358:30    - Unknown word (Internal)       -- procedure Set_Cursor_Style_Internal (Kind : Ptr) is
Engine/Systems/Win32/neo-engine-system.adb:358:40    - Unknown word (Kind)           -- Cursor_Style_Internal (Kind : Ptr) is
Engine/Systems/Win32/neo-engine-system.adb:360:108   - Unknown word (Kind)           -- Unsigned_C (To_Int_Ptr (Kind))));
Engine/Systems/Win32/neo-engine-system.adb:360:66    - Unknown word (GCLP)           -- SetClassLongW (Game_Window, GCLP_HCURSOR, Int_Unsigned
Engine/Systems/Win32/neo-engine-system.adb:361:51    - Unknown word (GCLP)           -- etClassLongPtrW (Game_Window, GCLP_HCURSOR, To_Int_Ptr
Engine/Systems/Win32/neo-engine-system.adb:361:77    - Unknown word (Kind)           -- HCURSOR, To_Int_Ptr (Kind))); end if;
Engine/Systems/Win32/neo-engine-system.adb:363:24    - Unknown word (Style)          -- procedure Set_Cursor_Style (Kind : Cursor_Kind
Engine/Systems/Win32/neo-engine-system.adb:365:24    - Unknown word (Internal)       -- Set_Cursor_Style_Internal ((case Kind is
Engine/Systems/Win32/neo-engine-system.adb:367:42    - Unknown word (Inactive)       -- when Inactive_Cursor => Cursor_Inactive
Engine/Systems/Win32/neo-engine-system.adb:367:68    - Unknown word (Inactive)       -- Inactive_Cursor => Cursor_Inactive,
Engine/Systems/Win32/neo-engine-system.adb:371:15    - Unknown word (another)        -- -- Check if another instance of the game
Engine/Systems/Win32/neo-engine-system.adb:373:5     - Unknown word (Handle)         -- Handle : Ptr := NULL_PTR;
Engine/Systems/Win32/neo-engine-system.adb:374:21    - Unknown word (Find)           -- Window : Ptr := FindWindowW (C (GAME_NAME
Engine/Systems/Win32/neo-engine-system.adb:377:40    - Unknown word (SHOWNORMAL)     -- ShowWindow (Window, SW_SHOWNORMAL) = 0);
Engine/Systems/Win32/neo-engine-system.adb:378:22    - Unknown word (Focus)          -- Handle := SetFocus (Window);
Engine/Systems/Win32/neo-engine-system.adb:378:9     - Unknown word (Handle)         -- Handle := SetFocus (Window
Engine/Systems/Win32/neo-engine-system.adb:379:20    - Unknown word (Foreground)     -- Assert (SetForegroundWindow (Window));
Engine/Systems/Win32/neo-engine-system.adb:37:9      - Unknown word (Assert)       -- Assert (GetUserNameW (C (Username
Engine/Systems/Win32/neo-engine-system.adb:381:16    - Unknown word (False)          -- return False;
Engine/Systems/Win32/neo-engine-system.adb:383:14    - Unknown word (True)           -- return True;
Engine/Systems/Win32/neo-engine-system.adb:386:23    - Unknown word (cursor)         -- -- Hide or show the cursor
Engine/Systems/Win32/neo-engine-system.adb:386:6     - Unknown word (Hide)           -- -- Hide or show the cursor
Engine/Systems/Win32/neo-engine-system.adb:387:13    - Unknown word (Hide)           -- procedure Hide_Cursor (Do_Hide : Bool
Engine/Systems/Win32/neo-engine-system.adb:387:29    - Unknown word (Hide)           -- procedure Hide_Cursor (Do_Hide : Bool := True) is
Engine/Systems/Win32/neo-engine-system.adb:387:44    - Unknown word (True)           -- Cursor (Do_Hide : Bool := True) is
Engine/Systems/Win32/neo-engine-system.adb:38:9      - Unknown word (Assert)       -- Assert (IsWow64Process (GetCurrentPr
Engine/Systems/Win32/neo-engine-system.adb:390:22    - Unknown word (internal)      -- -- Modify the "internal display counter"
Engine/Systems/Win32/neo-engine-system.adb:390:39    - Unknown word (counter)       -- the "internal display counter"
Engine/Systems/Win32/neo-engine-system.adb:391:13    - Unknown word (Hide)          -- if Do_Hide then while ShowCursor
Engine/Systems/Win32/neo-engine-system.adb:395:18    - Unknown word (unrestrict)    -- -- Restrict or unrestrict cursor movement (also
Engine/Systems/Win32/neo-engine-system.adb:395:29    - Unknown word (cursor)        -- Restrict or unrestrict cursor movement (also hide
Engine/Systems/Win32/neo-engine-system.adb:395:36    - Unknown word (movement)      -- or unrestrict cursor movement (also hide or show cursor
Engine/Systems/Win32/neo-engine-system.adb:395:46    - Unknown word (also)          -- unrestrict cursor movement (also hide or show cursor
Engine/Systems/Win32/neo-engine-system.adb:395:51    - Unknown word (hide)          -- cursor movement (also hide or show cursor)
Engine/Systems/Win32/neo-engine-system.adb:395:6     - Unknown word (Restrict)      -- -- Restrict or unrestrict cursor
Engine/Systems/Win32/neo-engine-system.adb:395:64    - Unknown word (cursor)        -- movement (also hide or show cursor)
Engine/Systems/Win32/neo-engine-system.adb:396:13    - Unknown word (Clip)          -- procedure Clip_Cursor (Do_Clip : Boolean
Engine/Systems/Win32/neo-engine-system.adb:396:29    - Unknown word (Clip)          -- procedure Clip_Cursor (Do_Clip : Boolean := True) is
Engine/Systems/Win32/neo-engine-system.adb:396:47    - Unknown word (True)          -- Do_Clip : Boolean := True) is
Engine/Systems/Win32/neo-engine-system.adb:397:25    - Unknown word (RECT)          -- Rectangle : aliased RECT := (others => <>);
Engine/Systems/Win32/neo-engine-system.adb:399:24    - Unknown word (Rect)          -- Assert (GetWindowRect (Game_Window, Rectangle
Engine/Systems/Win32/neo-engine-system.adb:401:10    - Unknown word (Unclip)        -- -- Unclip cursor
Engine/Systems/Win32/neo-engine-system.adb:401:17    - Unknown word (cursor)        -- -- Unclip cursor
Engine/Systems/Win32/neo-engine-system.adb:402:17    - Unknown word (Clip)          -- if not Do_Clip and Original_Clip /
Engine/Systems/Win32/neo-engine-system.adb:402:26    - Unknown word (Original)      -- if not Do_Clip and Original_Clip /= (others =>
Engine/Systems/Win32/neo-engine-system.adb:402:35    - Unknown word (Clip)          -- Do_Clip and Original_Clip /= (others => <>) then
Engine/Systems/Win32/neo-engine-system.adb:403:29    - Unknown word (Original)      -- Assert (ClipCursor (Original_Clip'Unchecked_Access
Engine/Systems/Win32/neo-engine-system.adb:404:9     - Unknown word (Original)      -- Original_Clip := (others =>
Engine/Systems/Win32/neo-engine-system.adb:408:12    - Unknown word (Original)      -- if Original_Clip = (others => <
Engine/Systems/Win32/neo-engine-system.adb:40:22     - Unknown word (Memory)       -- Size_Memory => 0,
Engine/Systems/Win32/neo-engine-system.adb:416:18    - Unknown word (callback)      -- -- Game window callback
Engine/Systems/Win32/neo-engine-system.adb:417:111   - Unknown word (Convention)    -- return Int_Ptr with Convention => Stdcall;
Engine/Systems/Win32/neo-engine-system.adb:417:24    - Unknown word (Proc)          -- function Game_Window_Proc (hwnd : Ptr; uMsg :
Engine/Systems/Win32/neo-engine-system.adb:421:32    - Unknown word (Quit)          -- when WM_DESTROY => PostQuitMessage (0); Close_Game
Engine/Systems/Win32/neo-engine-system.adb:423:29    - Unknown word (hiding)        -- -- Stop the OS from hiding or stopping the game
Engine/Systems/Win32/neo-engine-system.adb:423:39    - Unknown word (stopping)      -- the OS from hiding or stopping the game
Engine/Systems/Win32/neo-engine-system.adb:424:66    - Unknown word (SCREENSAVE)    -- KEYMENU or wParam = SC_SCREENSAVE then return 0; end if
Engine/Systems/Win32/neo-engine-system.adb:429:100   - Unknown word (Other)         -- FFFF_0000#) /= 0 then Other_Deactivated
Engine/Systems/Win32/neo-engine-system.adb:429:106   - Unknown word (Deactivated)   -- 0#) /= 0 then Other_Deactivated
Engine/Systems/Win32/neo-engine-system.adb:430:102   - Unknown word (Other)         -- Click_Activated else Other_Activated);
Engine/Systems/Win32/neo-engine-system.adb:430:64    - Unknown word (CLICKACTIVE)   -- 16#0000_FFFF#) = WA_CLICKACTIVE then Click_Activated
Engine/Systems/Win32/neo-engine-system.adb:433:23    - Unknown word (MINIMIZED)     -- when SIZE_MINIMIZED => Activated.Set (Minimize
Engine/Systems/Win32/neo-engine-system.adb:433:51    - Unknown word (Minimize)      -- MINIMIZED => Activated.Set (Minimize_Deactivated);
Engine/Systems/Win32/neo-engine-system.adb:433:60    - Unknown word (Deactivated)   -- Activated.Set (Minimize_Deactivated);
Engine/Systems/Win32/neo-engine-system.adb:434:23    - Unknown word (MAXIMIZED)     -- when SIZE_MAXIMIZED => Mode.Set (Fullscreen
Engine/Systems/Win32/neo-engine-system.adb:434:36    - Unknown word (Mode)          -- when SIZE_MAXIMIZED => Mode.Set (Fullscreen_Mode
Engine/Systems/Win32/neo-engine-system.adb:434:57    - Unknown word (Mode)          -- Mode.Set (Fullscreen_Mode); when others => null
Engine/Systems/Win32/neo-engine-system.adb:437:12    - Unknown word (Extract)       -- -- Extract sizing event information
Engine/Systems/Win32/neo-engine-system.adb:437:20    - Unknown word (sizing)        -- -- Extract sizing event information then
Engine/Systems/Win32/neo-engine-system.adb:437:76    - Unknown word (final)         -- the engine modify the final result
Engine/Systems/Win32/neo-engine-system.adb:438:17    - Unknown word (SIZING)        -- when WM_SIZING =>
Engine/Systems/Win32/neo-engine-system.adb:43:93     - Unknown word (Backward)     -- To_Str (Folder), "\", Backward)),
Engine/Systems/Win32/neo-engine-system.adb:444:62    - Unknown word (WMSZ)          -- when WMSZ_LEFT => Left
Engine/Systems/Win32/neo-engine-system.adb:445:62    - Unknown word (WMSZ)          -- when WMSZ_RIGHT => Right
Engine/Systems/Win32/neo-engine-system.adb:446:62    - Unknown word (WMSZ)          -- when WMSZ_TOP => Top_Resize
Engine/Systems/Win32/neo-engine-system.adb:447:62    - Unknown word (WMSZ)          -- when WMSZ_TOPLEFT => Top_Left
Engine/Systems/Win32/neo-engine-system.adb:448:62    - Unknown word (WMSZ)          -- when WMSZ_TOPRIGHT => Top_Right
Engine/Systems/Win32/neo-engine-system.adb:449:67    - Unknown word (BOTTOM)        -- when WMSZ_BOTTOM => Bottom_Resize
Engine/Systems/Win32/neo-engine-system.adb:449:82    - Unknown word (Bottom)        -- WMSZ_BOTTOM => Bottom_Resize,
Engine/Systems/Win32/neo-engine-system.adb:450:82    - Unknown word (Bottom)        -- WMSZ_BOTTOMLEFT => Bottom_Left_Resize,
Engine/Systems/Win32/neo-engine-system.adb:451:82    - Unknown word (Bottom)        -- WMSZ_BOTTOMRIGHT => Bottom_Right_Resize,
Engine/Systems/Win32/neo-engine-system.adb:452:82    - Unknown word (Other)         -- others => Other_Resize)));
Engine/Systems/Win32/neo-engine-system.adb:458:50    - Unknown word (callback)      -- pplication class and make the callback for the game window
Engine/Systems/Win32/neo-engine-system.adb:459:24    - Unknown word (Windowing)     -- procedure Initialize_Windowing is
Engine/Systems/Win32/neo-engine-system.adb:460:21    - Unknown word (WNDCLASSEX)    -- Class : aliased WNDCLASSEX := (others => <>);
Engine/Systems/Win32/neo-engine-system.adb:463:31    - Unknown word (icon)          -- Load the game window icon
Engine/Systems/Win32/neo-engine-system.adb:464:27    - Unknown word (hinst)         -- Icon := LoadImageW (hinst => GetModuleHandleW
Engine/Systems/Win32/neo-engine-system.adb:464:43    - Unknown word (Module)        -- LoadImageW (hinst     => GetModuleHandleW (null),
Engine/Systems/Win32/neo-engine-system.adb:465:27    - Unknown word (lpsz)          -- lpszName => C (WIN32_PATH
Engine/Systems/Win32/neo-engine-system.adb:465:54    - Unknown word (ICON)          -- lpszName => C (WIN32_PATH_ICON),
Engine/Systems/Win32/neo-engine-system.adb:469:43    - Unknown word (LOADFROMFILE)  -- fuLoad => LR_LOADFROMFILE or LR_DEFAULTSIZE);
Engine/Systems/Win32/neo-engine-system.adb:469:62    - Unknown word (DEFAULTSIZE)   -- LR_LOADFROMFILE or LR_DEFAULTSIZE);
Engine/Systems/Win32/neo-engine-system.adb:472:15    - Unknown word (cursors)       -- -- Load cursors
Engine/Systems/Win32/neo-engine-system.adb:473:14    - Unknown word (Inactive)      -- Cursor_Inactive := LoadImageW (hinst
Engine/Systems/Win32/neo-engine-system.adb:473:38    - Unknown word (hinst)         -- Inactive := LoadImageW (hinst => GetModuleHandleW
Engine/Systems/Win32/neo-engine-system.adb:474:38    - Unknown word (lpsz)          -- lpszName => C (WIN32_PATH
Engine/Systems/Win32/neo-engine-system.adb:474:65    - Unknown word (CURSOR)        -- lpszName => C (WIN32_PATH_CURSOR_INACTIVE),
Engine/Systems/Win32/neo-engine-system.adb:474:72    - Unknown word (INACTIVE)      -- C (WIN32_PATH_CURSOR_INACTIVE),
Engine/Systems/Win32/neo-engine-system.adb:478:54    - Unknown word (LOADFROMFILE)  -- fuLoad => LR_LOADFROMFILE or LR_DEFAULTSIZE);
Engine/Systems/Win32/neo-engine-system.adb:478:73    - Unknown word (DEFAULTSIZE)   -- LR_LOADFROMFILE or LR_DEFAULTSIZE);
Engine/Systems/Win32/neo-engine-system.adb:479:17    - Unknown word (Inactive)      -- if Cursor_Inactive = NULL_PTR then Cursor
Engine/Systems/Win32/neo-engine-system.adb:480:36    - Unknown word (hinst)         -- Active := LoadImageW (hinst => GetModuleHandleW
Engine/Systems/Win32/neo-engine-system.adb:481:36    - Unknown word (lpsz)          -- lpszName => C (WIN32_PATH
Engine/Systems/Win32/neo-engine-system.adb:485:52    - Unknown word (LOADFROMFILE)  -- fuLoad => LR_LOADFROMFILE);
Engine/Systems/Win32/neo-engine-system.adb:488:23    - Unknown word (main)          -- -- Register the main window class (the actual
Engine/Systems/Win32/neo-engine-system.adb:488:46    - Unknown word (actual)        -- main window class (the actual window creation is done
Engine/Systems/Win32/neo-engine-system.adb:488:72    - Unknown word (done)          -- actual window creation is done in Adjust_Windowing
Engine/Systems/Win32/neo-engine-system.adb:488:80    - Unknown word (Adjust)        -- creation is done in Adjust_Windowing)
Engine/Systems/Win32/neo-engine-system.adb:489:17    - Unknown word (lpfn)         -- Class := (lpfnWndProc => Game_Window
Engine/Systems/Win32/neo-engine-system.adb:48:30     - Unknown word (overhead)     -- Constant info to remove overhead
Engine/Systems/Win32/neo-engine-system.adb:494:20    - Unknown word (Background)   -- hbrBackground => To_Int_Ptr (CreateSolidBru
Engine/Systems/Win32/neo-engine-system.adb:494:52    - Unknown word (Solid)        -- > To_Int_Ptr (CreateSolidBrush (To_Windows_Color
Engine/Systems/Win32/neo-engine-system.adb:494:57    - Unknown word (Brush)        -- Int_Ptr (CreateSolidBrush (To_Windows_Color (COLOR
Engine/Systems/Win32/neo-engine-system.adb:494:82    - Unknown word (COLOR)        -- SolidBrush (To_Windows_Color (COLOR_BLACK))),
Engine/Systems/Win32/neo-engine-system.adb:495:17    - Unknown word (lpsz)         -- lpszClassName => C (GAME
Engine/Systems/Win32/neo-engine-system.adb:499:6     - Unknown word (Pump)         -- -- Pump the OS message loop
Engine/Systems/Win32/neo-engine-system.adb:49:15     - Unknown word (INTERNAL)     -- INFORMATION_INTERNAL : constant OS_Info_State
Engine/Systems/Win32/neo-engine-system.adb:49:60     - Unknown word (Internal)     -- Info_State := OS_Info_Internal;
Engine/Systems/Win32/neo-engine-system.adb:503:13    - Unknown word (Peek)         -- while PeekMessageW (Message'Access
Engine/Systems/Win32/neo-engine-system.adb:505:17    - Unknown word (Dispatch)     -- Ignore (DispatchMessageW (Message'Unchecked
Engine/Systems/Win32/neo-engine-system.adb:506:33    - Unknown word (QUIT)         -- Message.message = WM_QUIT or Close_Game then return
Engine/Systems/Win32/neo-engine-system.adb:50:57     - Unknown word (INTERNAL)     -- State is (INFORMATION_INTERNAL);
Engine/Systems/Win32/neo-engine-system.adb:511:6     - Unknown word (Kill)         -- -- Kill the game window
Engine/Systems/Win32/neo-engine-system.adb:515:45    - Unknown word (HIDE)         -- ShowWindow (Game_Window, SW_HIDE) = 0);
Engine/Systems/Win32/neo-engine-system.adb:522:24    - Unknown word (borders)      -- - Fetch all monitor borders (Internal)
Engine/Systems/Win32/neo-engine-system.adb:523:16    - Unknown word (Monitors)     -- function Get_Monitors return Vector_Border
Engine/Systems/Win32/neo-engine-system.adb:523:32    - Unknown word (Vector)       -- Get_Monitors return Vector_Border.Unsafe_Array
Engine/Systems/Win32/neo-engine-system.adb:523:46    - Unknown word (Unsafe)       -- return Vector_Border.Unsafe_Array is
Engine/Systems/Win32/neo-engine-system.adb:524:16    - Unknown word (Vector)       -- Monitors : Vector_Border.Unsafe.Vector
Engine/Systems/Win32/neo-engine-system.adb:524:30    - Unknown word (Unsafe)       -- Monitors : Vector_Border.Unsafe.Vector;
Engine/Systems/Win32/neo-engine-system.adb:524:5     - Unknown word (Monitors)     -- Monitors : Vector_Border.Unsafe
Engine/Systems/Win32/neo-engine-system.adb:526:13    - Unknown word (each)         -- -- Hook each monitor
Engine/Systems/Win32/neo-engine-system.adb:527:123   - Unknown word (Convention)   -- Ptr) return Int_C with Convention => Stdcall;
Engine/Systems/Win32/neo-engine-system.adb:527:59    - Unknown word (lprc)         -- hMonitor, hdcMonitor : Ptr; lprcMonitor : Ptr_RECT; dwData
Engine/Systems/Win32/neo-engine-system.adb:528:59    - Unknown word (lprc)         -- hMonitor, hdcMonitor : Ptr; lprcMonitor : Ptr_RECT; dwData
Engine/Systems/Win32/neo-engine-system.adb:529:22    - Unknown word (MONITORINFO)  -- Info : aliased MONITORINFO := (others => <>);
Engine/Systems/Win32/neo-engine-system.adb:532:9     - Unknown word (Monitors)     -- Monitors.Append (To_Border (Info
Engine/Systems/Win32/neo-engine-system.adb:536:26    - Unknown word (Monitors)     -- Assert (EnumDisplayMonitors (NULL_PTR, null, MonitorEnumP
Engine/Systems/Win32/neo-engine-system.adb:537:15    - Unknown word (Monitors)     -- Assert (Monitors.Length > 0);
Engine/Systems/Win32/neo-engine-system.adb:538:31    - Unknown word (Unsafe)       -- return Vector_Border.To_Unsafe_Array (Monitors);
Engine/Systems/Win32/neo-engine-system.adb:541:22    - Unknown word (monitors)     -- -- Look at all the monitors on a system (excluding
Engine/Systems/Win32/neo-engine-system.adb:541:44    - Unknown word (excluding)    -- monitors on a system (excluding the main one) and return
Engine/Systems/Win32/neo-engine-system.adb:541:58    - Unknown word (main)         -- system (excluding the main one) and return their
Engine/Systems/Win32/neo-engine-system.adb:541:6     - Unknown word (Look)         -- -- Look at all the monitors
Engine/Systems/Win32/neo-engine-system.adb:541:79    - Unknown word (their)        -- main one) and return their borders
Engine/Systems/Win32/neo-engine-system.adb:541:85    - Unknown word (borders)      -- one) and return their borders
Engine/Systems/Win32/neo-engine-system.adb:542:45    - Unknown word (Unsafe)       -- return Vector_Border.Unsafe_Array is
Engine/Systems/Win32/neo-engine-system.adb:545:10    - Unknown word (Enumerate)    -- -- Enumerate all monitors if we are
Engine/Systems/Win32/neo-engine-system.adb:545:24    - Unknown word (monitors)     -- -- Enumerate all monitors if we are in multi-monitor
Engine/Systems/Win32/neo-engine-system.adb:545:46    - Unknown word (multi)        -- monitors if we are in multi-monitor mode
Engine/Systems/Win32/neo-engine-system.adb:545:60    - Unknown word (mode)         -- are in multi-monitor mode
Engine/Systems/Win32/neo-engine-system.adb:546:10    - Unknown word (Mode)         -- if Mode.Get = Multi_Monitor
Engine/Systems/Win32/neo-engine-system.adb:546:21    - Unknown word (Multi)        -- if Mode.Get = Multi_Monitor_Mode then return
Engine/Systems/Win32/neo-engine-system.adb:546:35    - Unknown word (Mode)         -- Get = Multi_Monitor_Mode then return Get_Monitors
Engine/Systems/Win32/neo-engine-system.adb:548:26    - Unknown word (main)         -- -- Return only the main window
Engine/Systems/Win32/neo-engine-system.adb:552:26    - Unknown word (Rect)         -- Assert (GetWindowRect (Game_Window, Result
Engine/Systems/Win32/neo-engine-system.adb:557:31    - Unknown word (acts)         -- Monitor message loop (it acts as a slave to the main
Engine/Systems/Win32/neo-engine-system.adb:557:41    - Unknown word (slave)        -- message loop (it acts as a slave to the main window)
Engine/Systems/Win32/neo-engine-system.adb:557:54    - Unknown word (main)         -- acts as a slave to the main window)
Engine/Systems/Win32/neo-engine-system.adb:558:12    - Unknown word (Multi)        -- function Multi_Monitor_Window_Proc
Engine/Systems/Win32/neo-engine-system.adb:558:120   - Unknown word (Convention)   -- return Int_Ptr with Convention => Stdcall;
Engine/Systems/Win32/neo-engine-system.adb:561:35    - Unknown word (Quit)         -- = WM_CLOSE then PostQuitMessage (0); Close_Multi
Engine/Systems/Win32/neo-engine-system.adb:565:12    - Unknown word (auxiliary)    -- -- Spawn auxiliary windows for other monitors
Engine/Systems/Win32/neo-engine-system.adb:565:34    - Unknown word (other)        -- auxiliary windows for other monitors
Engine/Systems/Win32/neo-engine-system.adb:565:40    - Unknown word (monitors)     -- auxiliary windows for other monitors
Engine/Systems/Win32/neo-engine-system.adb:565:6     - Unknown word (Spawn)        -- -- Spawn auxiliary windows for
Engine/Systems/Win32/neo-engine-system.adb:568:29    - Unknown word (specifically) -- Register a new class specifically for multi-monitor windows
Engine/Systems/Win32/neo-engine-system.adb:568:46    - Unknown word (multi)        -- class specifically for multi-monitor windows
Engine/Systems/Win32/neo-engine-system.adb:569:21    - Unknown word (WNDCLASSEX)   -- Class : aliased WNDCLASSEX := (cbSize        =
Engine/Systems/Win32/neo-engine-system.adb:569:53    - Unknown word (WNDCLASSEX)   -- = (cbSize        => WNDCLASSEX'Object_Size / Byte'Object
Engine/Systems/Win32/neo-engine-system.adb:56:13     - Unknown word (titles)       -- -- Window titles
Engine/Systems/Win32/neo-engine-system.adb:570:36    - Unknown word (lpfn)         -- lpfnWndProc => Multi_Monitor
Engine/Systems/Win32/neo-engine-system.adb:574:39    - Unknown word (Background)   -- hbrBackground => COLOR_GRAYTEXT,
Engine/Systems/Win32/neo-engine-system.adb:574:53    - Unknown word (COLOR)        -- hbrBackground => COLOR_GRAYTEXT,
Engine/Systems/Win32/neo-engine-system.adb:575:56    - Unknown word (MULTI)        -- lpszClassName => C (MULTI_MONITOR_NAME),
Engine/Systems/Win32/neo-engine-system.adb:582:26    - Unknown word (quit)         -- -- Reset the force-quit-insurance due to multi
Engine/Systems/Win32/neo-engine-system.adb:582:48    - Unknown word (multi)        -- quit-insurance due to multi-monitor windows possibly
Engine/Systems/Win32/neo-engine-system.adb:582:70    - Unknown word (possibly)     -- multi-monitor windows possibly being reinitialized
Engine/Systems/Win32/neo-engine-system.adb:582:79    - Unknown word (being)        -- monitor windows possibly being reinitialized
Engine/Systems/Win32/neo-engine-system.adb:585:23    - Unknown word (multimonitor) -- -- Register the multimonitor application
Engine/Systems/Win32/neo-engine-system.adb:588:14    - Unknown word (every)        -- -- For every monitor border create
Engine/Systems/Win32/neo-engine-system.adb:588:28    - Unknown word (border)       -- - For every monitor border create a window that
Engine/Systems/Win32/neo-engine-system.adb:588:51    - Unknown word (that)         -- border create a window that fits it
Engine/Systems/Win32/neo-engine-system.adb:588:56    - Unknown word (fits)         -- create a window that fits it
Engine/Systems/Win32/neo-engine-system.adb:592:97    - Unknown word (DISABLED)     -- STYLE_FULLSCREEN or WS_DISABLED,
Engine/Systems/Win32/neo-engine-system.adb:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/Systems/Win32/neo-engine-system.adb:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/Systems/Win32/neo-engine-system.adb:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/Systems/Win32/neo-engine-system.adb:601:77    - Unknown word (MULTI)        -- lpClassName => C (MULTI_MONITOR_NAME),
Engine/Systems/Win32/neo-engine-system.adb:602:77    - Unknown word (MULTI)        -- lpWindowName => C (MULTI_MONITOR_NAME)));
Engine/Systems/Win32/neo-engine-system.adb:603:46    - Unknown word (Element)      -- Monitor_Windows.Last_Element);
Engine/Systems/Win32/neo-engine-system.adb:604:58    - Unknown word (Element)      -- Monitor_Windows.Last_Element, SW_SHOWNORMAL));
Engine/Systems/Win32/neo-engine-system.adb:604:70    - Unknown word (SHOWNORMAL)   -- Windows.Last_Element, SW_SHOWNORMAL));
Engine/Systems/Win32/neo-engine-system.adb:605:60    - Unknown word (Element)      -- Monitor_Windows.Last_Element));
Engine/Systems/Win32/neo-engine-system.adb:609:32    - Unknown word (foreground)   -- Put the game into the foreground (the extra windows are
Engine/Systems/Win32/neo-engine-system.adb:609:74    - Unknown word (slaves)       -- windows are now its slaves!)
Engine/Systems/Win32/neo-engine-system.adb:60:3      - Unknown word (MULTI)        -- MULTI_MONITOR_NAME : aliased
Engine/Systems/Win32/neo-engine-system.adb:60:73     - Unknown word (Multi)        -- OS_Info.App_Name & " Multi-monitor");
Engine/Systems/Win32/neo-engine-system.adb:610:43    - Unknown word (SHOWNORMAL)   -- ShowWindow (Game_Window, SW_SHOWNORMAL));
Engine/Systems/Win32/neo-engine-system.adb:614:14    - Unknown word (auxiliary)    -- -- Destroy auxiliary windows for other monitors
Engine/Systems/Win32/neo-engine-system.adb:614:36    - Unknown word (other)        -- auxiliary windows for other monitors
Engine/Systems/Win32/neo-engine-system.adb:614:42    - Unknown word (monitors)     -- auxiliary windows for other monitors
Engine/Systems/Win32/neo-engine-system.adb:618:40    - Unknown word (HIDE)         -- ShowWindow (Window, SW_HIDE));
Engine/Systems/Win32/neo-engine-system.adb:621:36    - Unknown word (MULTI)        -- UnregisterClassW (C (MULTI_MONITOR_NAME), NULL
Engine/Systems/Win32/neo-engine-system.adb:629:82    - Unknown word (care)         -- Kind :=( -- We don't care about mouse "keys"
Engine/Systems/Win32/neo-engine-system.adb:629:87    - Unknown word (about)        -- =( -- We don't care about mouse "keys"
Engine/Systems/Win32/neo-engine-system.adb:631:5     - Unknown word (Backspace)    -- Backspace_Key, Tab_Key,
Engine/Systems/Win32/neo-engine-system.adb:632:119   - Unknown word (Kana)         -- Capital_Lock_Key, Kana_Key,
Engine/Systems/Win32/neo-engine-system.adb:632:24    - Unknown word (Shift)        -- Null_Key, Shift_Key, Ctrl
Engine/Systems/Win32/neo-engine-system.adb:632:83    - Unknown word (Pause)        -- Alt_Key, Pause_Break_Key, Capital
Engine/Systems/Win32/neo-engine-system.adb:632:89    - Unknown word (Break)        -- Key, Pause_Break_Key, Capital_Lock_Key
Engine/Systems/Win32/neo-engine-system.adb:633:101   - Unknown word (Escape)       -- Kanji_Key, Escape_Key, Convert_Key
Engine/Systems/Win32/neo-engine-system.adb:633:119   - Unknown word (Convert)      -- Escape_Key, Convert_Key,
Engine/Systems/Win32/neo-engine-system.adb:633:24    - Unknown word (Junja)        -- Null_Key, Junja_Key, Final
Engine/Systems/Win32/neo-engine-system.adb:633:45    - Unknown word (Final)        -- Junja_Key, Final_Key, Hanja_Key
Engine/Systems/Win32/neo-engine-system.adb:633:64    - Unknown word (Hanja)        -- Final_Key, Hanja_Key, Kanji_Key
Engine/Systems/Win32/neo-engine-system.adb:633:83    - Unknown word (Kanji)        -- Hanja_Key, Kanji_Key, Escape_Key
Engine/Systems/Win32/neo-engine-system.adb:634:45    - Unknown word (Mode)         -- Accept_Key, Mode_Change_Key, Space
Engine/Systems/Win32/neo-engine-system.adb:634:8     - Unknown word (Convert)      -- No_Convert_Key, Accept_Key,
Engine/Systems/Win32/neo-engine-system.adb:635:119   - Unknown word (Print)        -- Select_Key, Print_Key,
Engine/Systems/Win32/neo-engine-system.adb:636:24    - Unknown word (Print)        -- Execute_Key, Print_Screen_Key, Insert
Engine/Systems/Win32/neo-engine-system.adb:636:30    - Unknown word (Screen)       -- Execute_Key, Print_Screen_Key, Insert_Key,
Engine/Systems/Win32/neo-engine-system.adb:636:83    - Unknown word (Help)         -- Delete_Key, Help_Key, Zero_Key
Engine/Systems/Win32/neo-engine-system.adb:637:119   - Unknown word (Eight)        -- Seven_Key, Eight_Key,
Engine/Systems/Win32/neo-engine-system.adb:637:45    - Unknown word (Four)         -- Three_Key, Four_Key, Five_Key
Engine/Systems/Win32/neo-engine-system.adb:637:64    - Unknown word (Five)         -- Four_Key, Five_Key, Six_Key
Engine/Systems/Win32/neo-engine-system.adb:638:5     - Unknown word (Nine)         -- Nine_Key, Null_Key
Engine/Systems/Win32/neo-engine-system.adb:63:14     - Unknown word (ICON)         -- WIN32_PATH_ICON : aliased
Engine/Systems/Win32/neo-engine-system.adb:63:87     - Unknown word (ICON)         -- Info.App_Path) & PATH_ICON & ".ico
Engine/Systems/Win32/neo-engine-system.adb:643:71    - Unknown word (Sleep)        -- Key, System_Sleep_Key, Pad_Zero_Key,
Engine/Systems/Win32/neo-engine-system.adb:644:105   - Unknown word (Eight)        -- Pad_Seven_Key, Pad_Eight_Key, Pad_Nine_Key
Engine/Systems/Win32/neo-engine-system.adb:644:123   - Unknown word (Nine)         -- Pad_Eight_Key, Pad_Nine_Key,
Engine/Systems/Win32/neo-engine-system.adb:644:28    - Unknown word (Four)         -- Pad_Three_Key, Pad_Four_Key, Pad_Five
Engine/Systems/Win32/neo-engine-system.adb:644:49    - Unknown word (Five)         -- Four_Key, Pad_Five_Key, Pad_Six_Key
Engine/Systems/Win32/neo-engine-system.adb:645:105   - Unknown word (Slash)        -- Pad_Period_Key, Pad_Slash_Key, F1_Key,
Engine/Systems/Win32/neo-engine-system.adb:645:28    - Unknown word (Plus)         -- Pad_Star_Key, Pad_Plus_Key, Separator
Engine/Systems/Win32/neo-engine-system.adb:645:45    - Unknown word (Separator)    -- Pad_Plus_Key, Separator_Key, Pad_Dash_Key
Engine/Systems/Win32/neo-engine-system.adb:645:9     - Unknown word (Star)         -- Pad_Star_Key, Pad_Plus_Key
Engine/Systems/Win32/neo-engine-system.adb:64:14     - Unknown word (CURSOR)       -- WIN32_PATH_CURSOR_ACTIVE : aliased Str
Engine/Systems/Win32/neo-engine-system.adb:64:87     - Unknown word (CURSOR)       -- Info.App_Path) & PATH_CURSOR_ACTIVE & ".cur")
Engine/Systems/Win32/neo-engine-system.adb:650:83    - Unknown word (Scroll)       -- Number_Lock_Key, Scroll_Lock_Key, OEM_1_Key
Engine/Systems/Win32/neo-engine-system.adb:652:106   - Unknown word (Shift)        -- Null_Key, Left_Shift_Key, Right_Shift_Key
Engine/Systems/Win32/neo-engine-system.adb:652:125   - Unknown word (Shift)        -- Left_Shift_Key, Right_Shift_Key,
Engine/Systems/Win32/neo-engine-system.adb:653:87    - Unknown word (Backward)     -- Right_Alt_Key, Web_Backward_Key, Web_Forward_Key
Engine/Systems/Win32/neo-engine-system.adb:654:49    - Unknown word (Favorites)    -- Search_Key, Web_Favorites_Key, Web_Home_Key,
Engine/Systems/Win32/neo-engine-system.adb:654:90    - Unknown word (Mute)         -- Home_Key, Volume_Mute_Key, Volume_Down_Key
Engine/Systems/Win32/neo-engine-system.adb:655:10    - Unknown word (Track)        -- Next_Track_Key, Previous_Track
Engine/Systems/Win32/neo-engine-system.adb:655:24    - Unknown word (Previous)     -- Next_Track_Key, Previous_Track_Key, Stop_Track
Engine/Systems/Win32/neo-engine-system.adb:655:33    - Unknown word (Track)        -- Track_Key, Previous_Track_Key, Stop_Track_Key
Engine/Systems/Win32/neo-engine-system.adb:655:50    - Unknown word (Track)        -- Previous_Track_Key, Stop_Track_Key, Play_Pause_Key
Engine/Systems/Win32/neo-engine-system.adb:655:64    - Unknown word (Play)         -- Stop_Track_Key, Play_Pause_Key, Web_Mail
Engine/Systems/Win32/neo-engine-system.adb:655:69    - Unknown word (Pause)        -- Stop_Track_Key, Play_Pause_Key, Web_Mail_Key
Engine/Systems/Win32/neo-engine-system.adb:656:101   - Unknown word (Comma)        -- Equals_Key, Comma_Key, Dash_Key
Engine/Systems/Win32/neo-engine-system.adb:656:64    - Unknown word (Semicolon)    -- Null_Key, Semicolon_Key, Equals_Key
Engine/Systems/Win32/neo-engine-system.adb:656:83    - Unknown word (Equals)       -- Semicolon_Key, Equals_Key, Comma_Key
Engine/Systems/Win32/neo-engine-system.adb:657:24    - Unknown word (Slash)        -- Period_Key, Slash_Key, Grave
Engine/Systems/Win32/neo-engine-system.adb:657:45    - Unknown word (Grave)        -- Slash_Key, Grave_Accent_Key, Null_Key
Engine/Systems/Win32/neo-engine-system.adb:657:51    - Unknown word (Accent)       -- Key, Grave_Accent_Key, Null_Key,
Engine/Systems/Win32/neo-engine-system.adb:65:14     - Unknown word (CURSOR)       -- WIN32_PATH_CURSOR_INACTIVE : aliased Str
Engine/Systems/Win32/neo-engine-system.adb:65:21     - Unknown word (INACTIVE)     -- WIN32_PATH_CURSOR_INACTIVE : aliased Str_C := To
Engine/Systems/Win32/neo-engine-system.adb:65:87     - Unknown word (CURSOR)       -- Info.App_Path) & PATH_CURSOR_INACTIVE & ".cur")
Engine/Systems/Win32/neo-engine-system.adb:65:94     - Unknown word (INACTIVE)     -- Path) & PATH_CURSOR_INACTIVE & ".cur");
Engine/Systems/Win32/neo-engine-system.adb:661:29    - Unknown word (Bracket)      -- Null_Key, Left_Bracket_Key, Backslash_Key
Engine/Systems/Win32/neo-engine-system.adb:661:45    - Unknown word (Backslash)    -- Left_Bracket_Key, Backslash_Key, Right_Bracket
Engine/Systems/Win32/neo-engine-system.adb:661:70    - Unknown word (Bracket)      -- Backslash_Key, Right_Bracket_Key, Apostrophe_Key
Engine/Systems/Win32/neo-engine-system.adb:661:83    - Unknown word (Apostrophe)   -- Right_Bracket_Key, Apostrophe_Key, OEM_7_Key,
Engine/Systems/Win32/neo-engine-system.adb:665:101   - Unknown word (Zoom)         -- Play_Key, Zoom_Key, Null_Key
Engine/Systems/Win32/neo-engine-system.adb:665:45    - Unknown word (Exsel)        -- Clear_Selection_Key, Exsel_Key, Erase_EOF
Engine/Systems/Win32/neo-engine-system.adb:665:5     - Unknown word (Attention)    -- Attention_Key, Clear_Selection
Engine/Systems/Win32/neo-engine-system.adb:665:64    - Unknown word (Erase)        -- Exsel_Key, Erase_EOF_Key, Play_Key
Engine/Systems/Win32/neo-engine-system.adb:665:83    - Unknown word (Play)         -- Erase_EOF_Key, Play_Key, Zoom_Key
Engine/Systems/Win32/neo-engine-system.adb:668:15    - Unknown word (representation) -- -- Internal representation of XBox controllers
Engine/Systems/Win32/neo-engine-system.adb:669:3     - Unknown word (Gamepads)       -- Gamepads : aliased array (0.
Engine/Systems/Win32/neo-engine-system.adb:671:22    - Unknown word (controller)     -- -- Vibrate an Xbox controller
Engine/Systems/Win32/neo-engine-system.adb:671:6     - Unknown word (Vibrate)        -- -- Vibrate an Xbox controller
Engine/Systems/Win32/neo-engine-system.adb:672:13    - Unknown word (Vibrate)        -- procedure Vibrate (Id : Int_Ptr; Hz_High
Engine/Systems/Win32/neo-engine-system.adb:672:59    - Unknown word (Percent)        -- High, Hz_Low : Real_Percent) is
Engine/Systems/Win32/neo-engine-system.adb:673:32    - Unknown word (VIBRATION)      -- Vibration : aliased XINPUT_VIBRATION := (wLeftMotorSpeed
Engine/Systems/Win32/neo-engine-system.adb:673:5     - Unknown word (Vibration)      -- Vibration : aliased XINPUT_VIBRATION
Engine/Systems/Win32/neo-engine-system.adb:673:56    - Unknown word (Speed)          -- VIBRATION := (wLeftMotorSpeed => Int_16_Unsigned
Engine/Systems/Win32/neo-engine-system.adb:674:57    - Unknown word (Speed)          -- wRightMotorSpeed => Int_16_Unsigned_C
Engine/Systems/Win32/neo-engine-system.adb:675:75    - Unknown word (Vibration)      -- Int_Unsigned_C (Id), Vibration'Address) = 0); end if
Engine/Systems/Win32/neo-engine-system.adb:677:23    - Unknown word (coordinates)    -- -- Fetch raw cursor coordinates from the system cursor
Engine/Systems/Win32/neo-engine-system.adb:67:27     - Unknown word (invisible)    -- Main "HWND"s for the invisible input window and game
Engine/Systems/Win32/neo-engine-system.adb:67:6      - Unknown word (Main)         -- -- Main "HWND"s for the invisible
Engine/Systems/Win32/neo-engine-system.adb:687:22    - Unknown word (Ordered)        -- Current_Device : Ordered_Device.Cursor;
Engine/Systems/Win32/neo-engine-system.adb:692:8     - Unknown word (Perform)        -- -- Perform black magic
Engine/Systems/Win32/neo-engine-system.adb:697:49    - Unknown word (RIDI)           -- tRawInputDeviceInfoW (Device, RIDI_DEVICENAME, Device_Name
Engine/Systems/Win32/neo-engine-system.adb:704:56    - Unknown word (querying)       -- RawInput devices for querying purposes
Engine/Systems/Win32/neo-engine-system.adb:704:65    - Unknown word (purposes)       -- devices for querying purposes
Engine/Systems/Win32/neo-engine-system.adb:705:79    - Unknown word (RAWINPUTDEVICELIST) -- Count'Unchecked_Access, RAWINPUTDEVICELIST'Object_Size / Byte'Object
Engine/Systems/Win32/neo-engine-system.adb:708:55    - Unknown word (RAWINPUTDEVICELIST) -- Int (Device_Count)) of RAWINPUTDEVICELIST := (others => (others
Engine/Systems/Win32/neo-engine-system.adb:710:85    - Unknown word (RAWINPUTDEVICELIST) -- Count'Unchecked_Access, RAWINPUTDEVICELIST'Object_Size / Byte'Object
Engine/Systems/Win32/neo-engine-system.adb:712:12    - Unknown word (Look)               -- -- Look for keyboards and mice
Engine/Systems/Win32/neo-engine-system.adb:712:21    - Unknown word (keyboards)          -- -- Look for keyboards and mice then add them
Engine/Systems/Win32/neo-engine-system.adb:712:49    - Unknown word (them)               -- keyboards and mice then add them to the internal list
Engine/Systems/Win32/neo-engine-system.adb:712:61    - Unknown word (internal)           -- then add them to the internal list of devices if they
Engine/Systems/Win32/neo-engine-system.adb:712:89    - Unknown word (they)               -- internal list of devices if they are new
Engine/Systems/Win32/neo-engine-system.adb:716:24    - Unknown word (TYPEKEYBOARD)       -- when RIM_TYPEKEYBOARD => Add_Device (To_Int
Engine/Systems/Win32/neo-engine-system.adb:716:84    - Unknown word (Keyboard)           -- List (I).hDevice), (Keyboard_Device, others => <
Engine/Systems/Win32/neo-engine-system.adb:717:24    - Unknown word (TYPEMOUSE)          -- when RIM_TYPEMOUSE =>
Engine/Systems/Win32/neo-engine-system.adb:719:108   - Unknown word (laptops)            -- Avoid fake devices for laptops
Engine/Systems/Win32/neo-engine-system.adb:719:66    - Unknown word (ACPI)               -- List (I).hDevice), "ACPI") = 0 then -- Avoid
Engine/Systems/Win32/neo-engine-system.adb:719:85    - Unknown word (Avoid)              -- "ACPI") = 0 then -- Avoid fake devices for laptops
Engine/Systems/Win32/neo-engine-system.adb:719:91    - Unknown word (fake)               -- ) = 0 then -- Avoid fake devices for laptops
Engine/Systems/Win32/neo-engine-system.adb:71:21     - Unknown word (Multi)        -- Close_Game, Close_Multi_Monitor, Close_Input
Engine/Systems/Win32/neo-engine-system.adb:71:58     - Unknown word (False)        -- Close_Input : Bool := False;
Engine/Systems/Win32/neo-engine-system.adb:726:19    - Unknown word (unplugged)          -- -- Remove unplugged or unused devices
Engine/Systems/Win32/neo-engine-system.adb:726:32    - Unknown word (unused)             -- Remove unplugged or unused devices
Engine/Systems/Win32/neo-engine-system.adb:73:13     - Unknown word (handles)      -- -- Window handles for multi-monitor mode
Engine/Systems/Win32/neo-engine-system.adb:73:25     - Unknown word (multi)        -- Window handles for multi-monitor mode
Engine/Systems/Win32/neo-engine-system.adb:73:39     - Unknown word (mode)         -- handles for multi-monitor mode
Engine/Systems/Win32/neo-engine-system.adb:747:24    - Unknown word (Give)               -- delay 0.01; -- Give the XBox 360 controllers
Engine/Systems/Win32/neo-engine-system.adb:749:66    - Unknown word (them)               -- controllers and add them to our device list
Engine/Systems/Win32/neo-engine-system.adb:74:11     - Unknown word (Vector)       -- package Vector_Ptr is new Neo.Core
Engine/Systems/Win32/neo-engine-system.adb:74:38     - Unknown word (Vectors)      -- Ptr is new Neo.Core.Vectors (Ptr);
Engine/Systems/Win32/neo-engine-system.adb:750:18    - Unknown word (Gamepads)           -- for I in Gamepads'Range loop
Engine/Systems/Win32/neo-engine-system.adb:759:112   - Unknown word (Convention)         -- return Int_Ptr with Convention => Stdcall;
Engine/Systems/Win32/neo-engine-system.adb:75:27     - Unknown word (Vector)       -- Multi_Monitor_Windows : Vector_Ptr.Unsafe.Vector;
Engine/Systems/Win32/neo-engine-system.adb:75:3      - Unknown word (Multi)        -- Multi_Monitor_Windows : Vector
Engine/Systems/Win32/neo-engine-system.adb:75:38     - Unknown word (Unsafe)       -- Windows : Vector_Ptr.Unsafe.Vector;
Engine/Systems/Win32/neo-engine-system.adb:75:45     - Unknown word (Vector)       -- : Vector_Ptr.Unsafe.Vector;
Engine/Systems/Win32/neo-engine-system.adb:762:5     - Unknown word (Bytes)              -- Bytes : aliased Int_Unsigned
Engine/Systems/Win32/neo-engine-system.adb:763:22    - Unknown word (RAWINPUTHEADER)     -- Header : aliased RAWINPUTHEADER := (others => <>);
Engine/Systems/Win32/neo-engine-system.adb:766:37    - Unknown word (Quit)               -- DESTROY => PostQuitMessage (0); Close_Input
Engine/Systems/Win32/neo-engine-system.adb:767:17    - Unknown word (DEVICECHANGE)       -- when WM_DEVICECHANGE => Update_Devices;
Engine/Systems/Win32/neo-engine-system.adb:770:14    - Unknown word (Find)               -- -- Find if the input message
Engine/Systems/Win32/neo-engine-system.adb:770:40    - Unknown word (belongs)            -- if the input message belongs to a mouse or keyboard
Engine/Systems/Win32/neo-engine-system.adb:770:62    - Unknown word (keyboard)           -- belongs to a mouse or keyboard
Engine/Systems/Win32/neo-engine-system.adb:771:11    - Unknown word (Bytes)              -- Bytes := RAWINPUTHEADER'Object
Engine/Systems/Win32/neo-engine-system.adb:771:20    - Unknown word (RAWINPUTHEADER)     -- Bytes := RAWINPUTHEADER'Object_Size / Byte'Object
Engine/Systems/Win32/neo-engine-system.adb:775:52    - Unknown word (Bytes)              -- pcbSize => Bytes'Unchecked_Access,
Engine/Systems/Win32/neo-engine-system.adb:776:52    - Unknown word (RAWINPUTHEADER)     -- cbSizeHeader => RAWINPUTHEADER'Object_Size / Byte'Object
Engine/Systems/Win32/neo-engine-system.adb:777:21    - Unknown word (RAWINPUTHEADER)     -- = RAWINPUTHEADER'Object_Size / Byte'Object
Engine/Systems/Win32/neo-engine-system.adb:786:22    - Unknown word (keyboard)           -- -- Its a keyboard...
Engine/Systems/Win32/neo-engine-system.adb:787:22    - Unknown word (TYPEKEYBOARD)       -- when RIM_TYPEKEYBOARD =>
Engine/Systems/Win32/neo-engine-system.adb:788:15    - Unknown word (Bytes)              -- Bytes := Int_Unsigned_C (RAWKEYBOAR
Engine/Systems/Win32/neo-engine-system.adb:788:40    - Unknown word (RAWKEYBOARD)        -- Bytes := Int_Unsigned_C (RAWKEYBOARD'Object_Size / Byte'Object
Engine/Systems/Win32/neo-engine-system.adb:789:23    - Unknown word (Keyboard)           -- declare Keyboard : aliased RAWKEYBOARD
Engine/Systems/Win32/neo-engine-system.adb:789:42    - Unknown word (RAWKEYBOARD)        -- declare Keyboard : aliased RAWKEYBOARD; begin
Engine/Systems/Win32/neo-engine-system.adb:78:6      - Unknown word (Colors)       -- -- Colors --
Engine/Systems/Win32/neo-engine-system.adb:792:58    - Unknown word (Keyboard)           -- pData => Keyboard'Address,
Engine/Systems/Win32/neo-engine-system.adb:793:58    - Unknown word (Bytes)              -- pcbSize => Bytes'Unchecked_Access,
Engine/Systems/Win32/neo-engine-system.adb:794:58    - Unknown word (RAWINPUTHEADER)     -- cbSizeHeader => RAWINPUTHEADER'Object_Size / Byte'Object
Engine/Systems/Win32/neo-engine-system.adb:795:27    - Unknown word (RAWKEYBOARD)        -- = RAWKEYBOARD'Object_Size / Byte'Object
Engine/Systems/Win32/neo-engine-system.adb:797:20    - Unknown word (Inject)             -- -- Inject the mapped VK code
Engine/Systems/Win32/neo-engine-system.adb:797:31    - Unknown word (mapped)             -- -- Inject the mapped VK code
Engine/Systems/Win32/neo-engine-system.adb:798:20    - Unknown word (Keyboard)           -- if Keyboard.VKey <= VK_MAP'Last
Engine/Systems/Win32/neo-engine-system.adb:798:53    - Unknown word (Keyboard)           -- VKey <= VK_MAP'Last and Keyboard.VKey >= VK_MAP'First
Engine/Systems/Win32/neo-engine-system.adb:799:19    - Unknown word (Inject)             -- Inject_Key (Id   => Id,
Engine/Systems/Win32/neo-engine-system.adb:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/Systems/Win32/neo-engine-system.adb:804:74    - Unknown word (Flags)              -- Key => (if (Keyboard.Flags and KEY_IS_RIGHT_SIDED
Engine/Systems/Win32/neo-engine-system.adb:804:97    - Unknown word (SIDED)              -- Flags and KEY_IS_RIGHT_SIDED) = 0 then Left_Ctrl
Engine/Systems/Win32/neo-engine-system.adb:806:74    - Unknown word (Flags)              -- Key => (if (Keyboard.Flags and KEY_IS_RIGHT_SIDED
Engine/Systems/Win32/neo-engine-system.adb:806:97    - Unknown word (SIDED)              -- Flags and KEY_IS_RIGHT_SIDED) = 0 then Left_Alt_Key
Engine/Systems/Win32/neo-engine-system.adb:813:22    - Unknown word (TYPEMOUSE)          -- when RIM_TYPEMOUSE =>
Engine/Systems/Win32/neo-engine-system.adb:814:40    - Unknown word (RAWMOUSE)           -- Bytes := Int_Unsigned_C (RAWMOUSE'Object_Size / Byte'Object
Engine/Systems/Win32/neo-engine-system.adb:815:39    - Unknown word (RAWMOUSE)           -- declare Mouse : aliased RAWMOUSE; begin
Engine/Systems/Win32/neo-engine-system.adb:81:12     - Unknown word (color)        -- -- Misc. color conversion function
Engine/Systems/Win32/neo-engine-system.adb:81:6      - Unknown word (Misc)         -- -- Misc. color conversion function
Engine/Systems/Win32/neo-engine-system.adb:821:27    - Unknown word (RAWMOUSE)           -- = RAWMOUSE'Object_Size / Byte'Object
Engine/Systems/Win32/neo-engine-system.adb:823:27    - Unknown word (various)            -- -- Handle various buttons
Engine/Systems/Win32/neo-engine-system.adb:824:64    - Unknown word (Inject)             -- Mouse.lLastY /= 0 then Inject_Cursor (Id, (Int (Mouse
Engine/Systems/Win32/neo-engine-system.adb:825:82    - Unknown word (Inject)             -- BUTTON_DOWN) > 0 then Inject_Button (Id, Left_Button
Engine/Systems/Win32/neo-engine-system.adb:826:82    - Unknown word (Inject)             -- BUTTON_UP) > 0 then Inject_Button (Id, Left_Button
Engine/Systems/Win32/neo-engine-system.adb:829:101   - Unknown word (Middle)            -- then Inject_Button (Id, Middle_Button, True);
Engine/Systems/Win32/neo-engine-system.adb:829:53    - Unknown word (MIDDLE)            -- usButtons and RI_MOUSE_MIDDLE_BUTTON_DOWN) > 0 then
Engine/Systems/Win32/neo-engine-system.adb:82:23     - Unknown word (Color)        -- function To_Windows_Color (Color : Color_State
Engine/Systems/Win32/neo-engine-system.adb:82:30     - Unknown word (Color)        -- function To_Windows_Color (Color : Color_State) return
Engine/Systems/Win32/neo-engine-system.adb:82:38     - Unknown word (Color)        -- Windows_Color (Color : Color_State) return Int_Unsigned
Engine/Systems/Win32/neo-engine-system.adb:82:62     - Unknown word (Unsigned)     -- Color_State) return Int_Unsigned_C is
Engine/Systems/Win32/neo-engine-system.adb:830:101   - Unknown word (Middle)            -- then Inject_Button (Id, Middle_Button, False);
Engine/Systems/Win32/neo-engine-system.adb:830:53    - Unknown word (MIDDLE)            -- usButtons and RI_MOUSE_MIDDLE_BUTTON_UP) > 0 then
Engine/Systems/Win32/neo-engine-system.adb:836:20    - Unknown word (Deal)              -- -- Deal with scrolling
Engine/Systems/Win32/neo-engine-system.adb:836:30    - Unknown word (scrolling)         -- -- Deal with scrolling
Engine/Systems/Win32/neo-engine-system.adb:837:106   - Unknown word (HORIZONTAL)        -- usButtons and RI_MOUSE_HORIZONTAL_WHEEL) > 0 then
Engine/Systems/Win32/neo-engine-system.adb:837:117   - Unknown word (WHEEL)             -- RI_MOUSE_HORIZONTAL_WHEEL) > 0 then
Engine/Systems/Win32/neo-engine-system.adb:837:53    - Unknown word (VERTICAL)          -- usButtons and RI_MOUSE_VERTICAL_WHEEL) > 0 or (Mouse
Engine/Systems/Win32/neo-engine-system.adb:837:62    - Unknown word (WHEEL)             -- and RI_MOUSE_VERTICAL_WHEEL) > 0 or (Mouse.usButtons
Engine/Systems/Win32/neo-engine-system.adb:83:10     - Unknown word (Unsigned)     -- (Int_Unsigned_C (Shift_Left (Int_Unsigned
Engine/Systems/Win32/neo-engine-system.adb:83:22     - Unknown word (Shift)        -- (Int_Unsigned_C (Shift_Left (Int_Unsigned
Engine/Systems/Win32/neo-engine-system.adb:83:38     - Unknown word (Unsigned)     -- Unsigned_C (Shift_Left (Int_Unsigned (Color.Green), 8) or
Engine/Systems/Win32/neo-engine-system.adb:83:48     - Unknown word (Color)        -- Left (Int_Unsigned (Color.Green), 8) or
Engine/Systems/Win32/neo-engine-system.adb:840:58    - Unknown word (Signed)            -- Button => (if To_Int_16_Signed (Int_16_Unsigned (Shift
Engine/Systems/Win32/neo-engine-system.adb:841:90    - Unknown word (WHEEL)             -- 000#, 16))) / MOUSE_WHEEL_DELTA < 0
Engine/Systems/Win32/neo-engine-system.adb:842:111   - Unknown word (Wheel)             -- HORIZONTAL_WHEEL) > 0 then Wheel_Left_Button
Engine/Systems/Win32/neo-engine-system.adb:842:84    - Unknown word (HORIZONTAL)        -- usButtons and RI_MOUSE_HORIZONTAL_WHEEL) > 0 then Wheel
Engine/Systems/Win32/neo-engine-system.adb:842:95    - Unknown word (WHEEL)             -- RI_MOUSE_HORIZONTAL_WHEEL) > 0 then Wheel_Left
Engine/Systems/Win32/neo-engine-system.adb:843:111   - Unknown word (Wheel)             -- else Wheel_Down_Button)
Engine/Systems/Win32/neo-engine-system.adb:844:111   - Unknown word (Wheel)             -- HORIZONTAL_WHEEL) > 0 then Wheel_Right_Button
Engine/Systems/Win32/neo-engine-system.adb:844:84    - Unknown word (HORIZONTAL)        -- usButtons and RI_MOUSE_HORIZONTAL_WHEEL) > 0 then Wheel
Engine/Systems/Win32/neo-engine-system.adb:844:95    - Unknown word (WHEEL)             -- RI_MOUSE_HORIZONTAL_WHEEL) > 0 then Wheel_Right
Engine/Systems/Win32/neo-engine-system.adb:845:111   - Unknown word (Wheel)             -- else Wheel_Up_Button)));
Engine/Systems/Win32/neo-engine-system.adb:84:22     - Unknown word (Shift)        -- Shift_Left (Int_Unsigned
Engine/Systems/Win32/neo-engine-system.adb:84:38     - Unknown word (Unsigned)     -- Shift_Left (Int_Unsigned (Color.Blue), 16) or
Engine/Systems/Win32/neo-engine-system.adb:84:48     - Unknown word (Color)        -- Left (Int_Unsigned (Color.Blue), 16) or Int_Unsigned
Engine/Systems/Win32/neo-engine-system.adb:84:54     - Unknown word (Blue)         -- Int_Unsigned (Color.Blue), 16) or Int_Unsigned
Engine/Systems/Win32/neo-engine-system.adb:84:72     - Unknown word (Unsigned)     -- Color.Blue), 16) or Int_Unsigned (Color.Red)));
Engine/Systems/Win32/neo-engine-system.adb:853:26    - Unknown word (keyboards)         -- Handle messages for keyboards and mice
Engine/Systems/Win32/neo-engine-system.adb:856:48    - Unknown word (hidden)            -- class and create the hidden input window
Engine/Systems/Win32/neo-engine-system.adb:857:21    - Unknown word (WNDCLASSEX)        -- Class : aliased WNDCLASSEX := (lpfnWndProc   =
Engine/Systems/Win32/neo-engine-system.adb:857:36    - Unknown word (lpfn)              -- aliased WNDCLASSEX := (lpfnWndProc => Input_Window
Engine/Systems/Win32/neo-engine-system.adb:862:39    - Unknown word (Background)        -- hbrBackground => COLOR_GRAYTEXT,
Engine/Systems/Win32/neo-engine-system.adb:862:53    - Unknown word (COLOR)             -- hbrBackground => COLOR_GRAYTEXT,
Engine/Systems/Win32/neo-engine-system.adb:867:21    - Unknown word (hidden)            -- -- Create the hidden input window
Engine/Systems/Win32/neo-engine-system.adb:872:59    - Unknown word (DISABLED)          -- dwStyle => WS_DISABLED,
Engine/Systems/Win32/neo-engine-system.adb:883:19    - Unknown word (classes)           -- -- Register classes of input devices with
Engine/Systems/Win32/neo-engine-system.adb:883:61    - Unknown word (that)              -- devices with RawInput so that the event loop will
Engine/Systems/Win32/neo-engine-system.adb:883:81    - Unknown word (will)              -- that the event loop will recieve thier messages
Engine/Systems/Win32/neo-engine-system.adb:883:86    - Unknown word (recieve)           -- the event loop will recieve thier messages
Engine/Systems/Win32/neo-engine-system.adb:883:94    - Unknown word (thier)             -- event loop will recieve thier messages
Engine/Systems/Win32/neo-engine-system.adb:885:101   - Unknown word (INPUTSINK)         -- RAW_KEYBOARD, RIDEV_INPUTSINK, Input_Window),
Engine/Systems/Win32/neo-engine-system.adb:885:40    - Unknown word (RAWINPUTDEVICE)    -- aliased array (1..2) of RAWINPUTDEVICE := ((GENERIC_DESKTOP
Engine/Systems/Win32/neo-engine-system.adb:885:7     - Unknown word (Setups)            -- Setups : aliased array (1.
Engine/Systems/Win32/neo-engine-system.adb:885:85    - Unknown word (KEYBOARD)          -- GENERIC_DESKTOP, USE_RAW_KEYBOARD, RIDEV_INPUTSINK, Input
Engine/Systems/Win32/neo-engine-system.adb:885:95    - Unknown word (RIDEV)             -- DESKTOP, USE_RAW_KEYBOARD, RIDEV_INPUTSINK, Input_Window
Engine/Systems/Win32/neo-engine-system.adb:886:101   - Unknown word (INPUTSINK)         -- RAW_MOUSE, RIDEV_INPUTSINK, Input_Window));
Engine/Systems/Win32/neo-engine-system.adb:886:95    - Unknown word (RIDEV)             -- DESKTOP, USE_RAW_MOUSE,    RIDEV_INPUTSINK, Input_Window
Engine/Systems/Win32/neo-engine-system.adb:888:42    - Unknown word (Setups)            -- RegisterRawInputDevices (Setups (1)'Address, Setups
Engine/Systems/Win32/neo-engine-system.adb:888:62    - Unknown word (Setups)            -- Setups (1)'Address, Setups'Length, RAWINPUTDEVICE
Engine/Systems/Win32/neo-engine-system.adb:888:77    - Unknown word (RAWINPUTDEVICE)    -- Address, Setups'Length, RAWINPUTDEVICE'Object_Size / Byte'Object
Engine/Systems/Win32/neo-engine-system.adb:893:34    - Unknown word (overwriting)       -- Unregister input devices by overwriting the setup values and
Engine/Systems/Win32/neo-engine-system.adb:893:50    - Unknown word (setup)             -- devices by overwriting the setup values and kill the
Engine/Systems/Win32/neo-engine-system.adb:893:67    - Unknown word (kill)              -- the setup values and kill the input window
Engine/Systems/Win32/neo-engine-system.adb:895:10    - Unknown word (Setup)             -- Null_Setup : aliased RAWINPUTDEVICE
Engine/Systems/Win32/neo-engine-system.adb:895:26    - Unknown word (RAWINPUTDEVICE)    -- Null_Setup : aliased RAWINPUTDEVICE := (GENERIC_DESKTOP
Engine/Systems/Win32/neo-engine-system.adb:897:45    - Unknown word (Setup)             -- RegisterRawInputDevices (Null_Setup'Address, 1, RAWINPUTDEVICE
Engine/Systems/Win32/neo-engine-system.adb:897:63    - Unknown word (RAWINPUTDEVICE)    -- Null_Setup'Address, 1, RAWINPUTDEVICE'Object_Size / Byte'Object
Engine/Systems/Win32/neo-engine-system.adb:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/Systems/Win32/neo-engine-system.adb:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/Systems/Win32/neo-engine-system.adb:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/Systems/Win32/neo-engine-system.adb:902:6     - Unknown word (Pump)              -- -- Pump messages, check device
Engine/Systems/Win32/neo-engine-system.adb:907:57    - Unknown word (inject)            -- checks for devices then inject results
Engine/Systems/Win32/neo-engine-system.adb:907:8     - Unknown word (Perform)           -- -- Perform range or boolean checks
Engine/Systems/Win32/neo-engine-system.adb:908:15    - Unknown word (Unpack)            -- procedure Unpack_Button (Player : Int
Engine/Systems/Win32/neo-engine-system.adb:90:13     - Unknown word (isolated)     -- -- A task-isolated GUI console application
Engine/Systems/Win32/neo-engine-system.adb:910:49    - Unknown word (Gamepads)          -- wButtons and Raw) /= (Gamepads (Player).wButtons and
Engine/Systems/Win32/neo-engine-system.adb:915:15    - Unknown word (Unpack)            -- procedure Unpack_Stick (Player : Int
Engine/Systems/Win32/neo-engine-system.adb:915:22    - Unknown word (Stick)             -- procedure Unpack_Stick (Player : Int; Stick
Engine/Systems/Win32/neo-engine-system.adb:915:43    - Unknown word (Stick)             -- Stick (Player : Int; Stick : Stick_Kind; X, Y
Engine/Systems/Win32/neo-engine-system.adb:915:51    - Unknown word (Stick)             -- Player : Int; Stick : Stick_Kind; X, Y : Int_16
Engine/Systems/Win32/neo-engine-system.adb:915:77    - Unknown word (Signed)            -- Kind; X, Y : Int_16_Signed_C) is
Engine/Systems/Win32/neo-engine-system.adb:917:16    - Unknown word (Stick)            -- Inject_Stick (Int_Ptr (Player),
Engine/Systems/Win32/neo-engine-system.adb:918:23    - Unknown word (Stick)            -- Stick,
Engine/Systems/Win32/neo-engine-system.adb:919:69    - Unknown word (Signed)           -- if X > 0 then Int_16_Signed_C'Last else Int_16_Signed
Engine/Systems/Win32/neo-engine-system.adb:919:95    - Unknown word (Signed)           -- Signed_C'Last else Int_16_Signed_C'First)),
Engine/Systems/Win32/neo-engine-system.adb:920:69    - Unknown word (Signed)           -- if Y > 0 then Int_16_Signed_C'Last else Int_16_Signed
Engine/Systems/Win32/neo-engine-system.adb:926:10    - Unknown word (Pump)             -- -- Pump the message loop
Engine/Systems/Win32/neo-engine-system.adb:927:13    - Unknown word (Peek)             -- while PeekMessageW (Message'Unchecked
Engine/Systems/Win32/neo-engine-system.adb:929:17    - Unknown word (Dispatch)         -- Ignore (DispatchMessageW (Message'Unchecked
Engine/Systems/Win32/neo-engine-system.adb:930:33    - Unknown word (QUIT)             -- Message.message = WM_QUIT or Close_Input then
Engine/Systems/Win32/neo-engine-system.adb:933:26    - Unknown word (controller)       -- -- Inject Xbox 360 controller input
Engine/Systems/Win32/neo-engine-system.adb:934:22    - Unknown word (Gamepads)         -- begin for I in Gamepads'Range loop
Engine/Systems/Win32/neo-engine-system.adb:937:20    - Unknown word (Gamepads)         -- and then Gamepads (I) /= State.Gamepad
Engine/Systems/Win32/neo-engine-system.adb:939:11    - Unknown word (Unpack)           -- Unpack_Button (I, XINPUT_GAMEPAD
Engine/Systems/Win32/neo-engine-system.adb:940:11    - Unknown word (Unpack)           -- Unpack_Button (I, XINPUT_GAMEPAD
Engine/Systems/Win32/neo-engine-system.adb:941:11    - Unknown word (Unpack)           -- Unpack_Button (I, XINPUT_GAMEPAD
Engine/Systems/Win32/neo-engine-system.adb:943:44    - Unknown word (BACK)             -- Button (I, XINPUT_GAMEPAD_BACK, Back_Button
Engine/Systems/Win32/neo-engine-system.adb:943:60    - Unknown word (Back)             -- GAMEPAD_BACK, Back_Button);
Engine/Systems/Win32/neo-engine-system.adb:945:49    - Unknown word (THUMB)            -- XINPUT_GAMEPAD_LEFT_THUMB, Left_Stick_Button
Engine/Systems/Win32/neo-engine-system.adb:946:50    - Unknown word (THUMB)            -- XINPUT_GAMEPAD_RIGHT_THUMB, Right_Stick_Button
Engine/Systems/Win32/neo-engine-system.adb:947:49    - Unknown word (SHOULDER)         -- XINPUT_GAMEPAD_LEFT_SHOULDER, Left_Bumper_Button
Engine/Systems/Win32/neo-engine-system.adb:947:65    - Unknown word (Bumper)           -- LEFT_SHOULDER, Left_Bumper_Button);
Engine/Systems/Win32/neo-engine-system.adb:948:50    - Unknown word (SHOULDER)         -- XINPUT_GAMEPAD_RIGHT_SHOULDER, Right_Bumper_Button
Engine/Systems/Win32/neo-engine-system.adb:948:66    - Unknown word (Bumper)           -- RIGHT_SHOULDER, Right_Bumper_Button);
Engine/Systems/Win32/neo-engine-system.adb:954:14    - Unknown word (Thumbsticks)      -- -- Thumbsticks
Engine/Systems/Win32/neo-engine-system.adb:955:105   - Unknown word (Thumb)            -- sThumbLY /= Gamepads (I).sThumbLY then
Engine/Systems/Win32/neo-engine-system.adb:955:29    - Unknown word (Thumb)            -- if State.Gamepad.sThumbLX /= Gamepads (I).sThumbLX
Engine/Systems/Win32/neo-engine-system.adb:955:54    - Unknown word (Thumb)            -- sThumbLX /= Gamepads (I).sThumbLX or State.Gamepad.sThumbLY
Engine/Systems/Win32/neo-engine-system.adb:955:80    - Unknown word (Thumb)            -- sThumbLX or State.Gamepad.sThumbLY /= Gamepads (I).sThumbLY
Engine/Systems/Win32/neo-engine-system.adb:956:58    - Unknown word (Thumb)            -- Stick, State.Gamepad.sThumbLX, State.Gamepad.sThumbLY
Engine/Systems/Win32/neo-engine-system.adb:975:119   - Unknown word (crashes)          -- operation!"); end; -- Random crashes ???
Engine/Systems/Win32/neo-engine-system.adb:975:54    - Unknown word (Controller)       -- others => Line ("Xbox Controller has performed an illegal
Engine/Systems/Win32/neo-engine-system.adb:975:69    - Unknown word (performed)        -- Xbox Controller has performed an illegal operation
Engine/Systems/Win32/neo-engine-system.adb:975:82    - Unknown word (illegal)          -- Controller has performed an illegal operation!"); end;
Engine/Systems/Win32/neo-engine-system.adb:99:21     - Unknown word (driver)       -- -- Pointer to the driver dll
Engine/Systems/Win32/neo-engine-system.adb:99:6      - Unknown word (Pointer)      -- -- Pointer to the driver dll
Engine/main.adb:101:20    - Unknown word (Occupied)     -- Input_Status.Occupied (True);
Engine/main.adb:101:30    - Unknown word (True)         -- Input_Status.Occupied (True);
Engine/main.adb:103:20    - Unknown word (Windowing)    -- while Update_Windowing and then Menu_Task.Running
Engine/main.adb:105:16    - Unknown word (cursor)       -- -- Set cursor
Engine/main.adb:107:42    - Unknown word (Style)        -- Get then Set_Cursor_Style (Cursor.Get); end if
Engine/main.adb:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/main.adb:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/main.adb:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/main.adb:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/main.adb:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/main.adb:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/main.adb:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/main.adb:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/main.adb:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/main.adb:111:12    - Unknown word (Handle)       -- -- Handle mode switching
Engine/main.adb:111:19    - Unknown word (mode)         -- -- Handle mode switching
Engine/main.adb:111:24    - Unknown word (switching)    -- -- Handle mode switching
Engine/main.adb:113:29    - Unknown word (Multi)        -- if Current_Mode = Multi_Monitor_Mode then Finalize
Engine/main.adb:113:62    - Unknown word (Multi)        -- Monitor_Mode then Finalize_Multi_Monitor; end if;
Engine/main.adb:114:15    - Unknown word (Windowing)    -- Set_Windowing_Mode;
Engine/main.adb:115:26    - Unknown word (Multi)        -- if Mode.Get /= Multi_Monitor_Mode then -
Engine/main.adb:115:53    - Unknown word (Decide)       -- Monitor_Mode then -- Decide to set or save cursor
Engine/main.adb:115:75    - Unknown word (cursor)       -- Decide to set or save cursor position
Engine/main.adb:116:23    - Unknown word (Main)         -- if not In_Main_Window then
Engine/main.adb:116:64    - Unknown word (Main)         -- then Set_Cursor (Main_Window_Center); end
Engine/main.adb:116:76    - Unknown word (Center)       -- Cursor (Main_Window_Center); end if;
Engine/main.adb:117:23    - Unknown word (Main)         -- if not In_Main_Window (Saved_Pos) then
Engine/main.adb:117:77    - Unknown word (Center)       -- Saved_Pos := Main_Window_Center; end if;
Engine/main.adb:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/main.adb:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/main.adb:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/main.adb:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/main.adb:122:12    - Unknown word (Handle)       -- -- Handle menu entry
Engine/main.adb:123:66    - Unknown word (Occupied)     -- else Game_Entry_Status.Occupied then
Engine/main.adb:124:29    - Unknown word (Occupied)     -- Game_Entry_Status.Occupied (False);
Engine/main.adb:124:39    - Unknown word (False)        -- Entry_Status.Occupied (False);
Engine/main.adb:126:27    - Unknown word (Occupied)     -- Cursor_Status.Occupied (False);
Engine/main.adb:126:37    - Unknown word (False)        -- Cursor_Status.Occupied (False);
Engine/main.adb:128:49    - Unknown word (Clip)         -- Fullscreen_Mode then Clip_Cursor (False); end
Engine/main.adb:128:62    - Unknown word (False)        -- Mode then Clip_Cursor (False); end if;
Engine/main.adb:129:24    - Unknown word (Style)        -- Set_Cursor_Style (Cursor.Get);
Engine/main.adb:131:13    - Unknown word (Hide)         -- Hide_Cursor (False);
Engine/main.adb:131:26    - Unknown word (False)        -- Hide_Cursor (False);
Engine/main.adb:136:13    - Unknown word (Hide)         -- Hide_Cursor;
Engine/main.adb:137:13    - Unknown word (Clip)         -- Clip_Cursor;
Engine/main.adb:138:27    - Unknown word (Occupied)     -- Cursor_Status.Occupied (True);
Engine/main.adb:138:37    - Unknown word (True)         -- Cursor_Status.Occupied (True);
Engine/main.adb:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/main.adb:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/main.adb:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/main.adb:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/main.adb:144:26    - Unknown word (complex)      -- -- Activation is complex and branching can easily
Engine/main.adb:144:38    - Unknown word (branching)    -- Activation is complex and branching can easily lead to problems
Engine/main.adb:144:52    - Unknown word (easily)       -- complex and branching can easily lead to problems, so
Engine/main.adb:144:59    - Unknown word (lead)         -- branching can easily lead to problems, so handle
Engine/main.adb:144:80    - Unknown word (handle)       -- lead to problems, so handle cases explicitly
Engine/main.adb:144:87    - Unknown word (cases)        -- problems, so handle cases explicitly
Engine/main.adb:144:93    - Unknown word (explicitly)   -- problems, so handle cases explicitly
Engine/main.adb:147:18    - Unknown word (Other)        -- when Other_Activated =>
Engine/main.adb:148:38    - Unknown word (True)         -- Input_Status.Occupied (True);
Engine/main.adb:151:22    - Unknown word (Windowed)     -- when Windowed_Mode =>
Engine/main.adb:152:42    - Unknown word (True)         -- Input_Status.Occupied (True);
Engine/main.adb:155:45    - Unknown word (False)        -- Cursor_Status.Occupied (False);
Engine/main.adb:158:35    - Unknown word (Style)        -- else Set_Cursor_Style (Cursor.Get); end if
Engine/main.adb:160:19    - Unknown word (Maximize)     -- Maximize;
Engine/main.adb:163:50    - Unknown word (Style)        -- Get then Set_Cursor_Style (Cursor.Get);
Engine/main.adb:165:21    - Unknown word (Hide)         -- Hide_Cursor;
Engine/main.adb:167:45    - Unknown word (True)         -- Cursor_Status.Occupied (True);
Engine/main.adb:169:21    - Unknown word (Hide)         -- Hide_Cursor;
Engine/main.adb:170:21    - Unknown word (Clip)         -- Clip_Cursor;
Engine/main.adb:178:22    - Unknown word (Windowed)     -- when Windowed_Mode =>
Engine/main.adb:181:50    - Unknown word (Style)       -- Get then Set_Cursor_Style (Cursor.Get);
Engine/main.adb:184:21    - Unknown word (Hide)        -- Hide_Cursor;
Engine/main.adb:185:21    - Unknown word (Clip)        -- Clip_Cursor;
Engine/main.adb:188:48    - Unknown word (mode)        -- bar click in "game" mode
Engine/main.adb:194:18    - Unknown word (Other)       -- when Other_Deactivated | Minimize
Engine/main.adb:194:24    - Unknown word (Deactivated) -- when Other_Deactivated | Minimize_Deactivated
Engine/main.adb:194:38    - Unknown word (Minimize)    -- Other_Deactivated | Minimize_Deactivated =>
Engine/main.adb:194:47    - Unknown word (Deactivated) -- Deactivated | Minimize_Deactivated =>
Engine/main.adb:19:15     - Unknown word (Strings)      -- with Neo.Core.Strings; use Neo.Core
Engine/main.adb:19:47     - Unknown word (Strings)      -- use Neo.Core.Strings;
Engine/main.adb:202:34    - Unknown word (Other)       -- if Activated.Get = Other_Deactivated then
Engine/main.adb:202:40    - Unknown word (Deactivated) -- Activated.Get = Other_Deactivated then
Engine/main.adb:205:46    - Unknown word (Minimize)    -- Minimize;
Engine/main.adb:206:46    - Unknown word (Minimize)    -- Fullscreen_Mode => Minimize;
Engine/main.adb:214:54    - Unknown word (changed)     -- framebuffer if our resolution changed suddenly
Engine/main.adb:214:62    - Unknown word (suddenly)    -- our resolution changed suddenly
Engine/main.adb:215:19    - Unknown word (Width)       -- if Window_Width.Get /= Current_Width
Engine/main.adb:215:40    - Unknown word (Width)       -- Width.Get /= Current_Width or Window_Height.Get
Engine/main.adb:215:56    - Unknown word (Height)      -- Current_Width or Window_Height.Get /= Current_Height
Engine/main.adb:215:78    - Unknown word (Height)      -- Height.Get /= Current_Height then
Engine/main.adb:216:30    - Unknown word (Width)       -- -- Resize (Window_Width.Get, Window_Height.Get
Engine/main.adb:216:48    - Unknown word (Height)      -- Window_Width.Get, Window_Height.Get);
Engine/main.adb:221:12    - Unknown word (Also)        -- -- Also perform a restart if
Engine/main.adb:221:17    - Unknown word (perform)     -- -- Also perform a restart if the framebuffer
Engine/main.adb:221:54    - Unknown word (itself)      -- restart if the framebuffer itself triggers the need for
Engine/main.adb:221:74    - Unknown word (need)        -- itself triggers the need for one
Engine/main.adb:224:17    - Unknown word (some)        -- -- Save some cycles
Engine/main.adb:225:22    - Unknown word (POLLING)     -- delay WINDOW_POLLING_DURATION - (Clock -
Engine/main.adb:225:30    - Unknown word (DURATION)    -- delay WINDOW_POLLING_DURATION - (Clock - Last_Time
Engine/main.adb:225:42    - Unknown word (Clock)       -- POLLING_DURATION - (Clock - Last_Time); Last_Time
Engine/main.adb:225:75    - Unknown word (Clock)       -- Time); Last_Time := Clock;
Engine/main.adb:228:23    - Unknown word (exceptions)  -- -- Handle runtime exceptions
Engine/main.adb:228:8     - Unknown word (Handle)      -- -- Handle runtime exceptions
Engine/main.adb:229:20    - Unknown word (Occurrence)  -- exception when Occurrence: others =>
Engine/main.adb:230:17    - Unknown word (Occurrence)  -- Handle (Occurrence);
Engine/main.adb:230:9     - Unknown word (Handle)      -- Handle (Occurrence);
Engine/main.adb:231:45    - Unknown word (Icon)        -- Console and then Ok (Icon => Error_Icon,
Engine/main.adb:231:62    - Unknown word (Icon)        -- Ok (Icon    => Error_Icon,
Engine/main.adb:232:100   - Unknown word (like)        -- occurred, would you like to view more information
Engine/main.adb:232:113   - Unknown word (more)        -- would you like to view more information?"),
Engine/main.adb:232:56    - Unknown word (Localize)    -- Message => Localize ("An error has occurred
Engine/main.adb:232:80    - Unknown word (occurred)    -- Localize ("An error has occurred, would you like to view
Engine/main.adb:232:90    - Unknown word (would)       -- error has occurred, would you like to view more
Engine/main.adb:236:14    - Unknown word (Drawing)     -- Finalize_Drawing;
Engine/main.adb:23:16     - Unknown word (Graphics)     -- with Neo.World.Graphics; use Neo.World
Engine/main.adb:23:48     - Unknown word (Graphics)     -- use Neo.World.Graphics;
Engine/main.adb:25:16     - Unknown word (Impulses)     -- with Neo.World.Impulses; use Neo.World
Engine/main.adb:25:48     - Unknown word (Impulses)     -- use Neo.World.Impulses;
Engine/main.adb:26:10     - Unknown word (Calendar)     -- with Ada.Calendar; use Ada
Engine/main.adb:26:42     - Unknown word (Calendar)     -- use Ada.Calendar;
Engine/main.adb:27:10     - Unknown word (Calendar)     -- with Ada.Calendar.Formatting; use Ada
Engine/main.adb:27:19     - Unknown word (Formatting)   -- with Ada.Calendar.Formatting; use Ada.Calendar
Engine/main.adb:27:42     - Unknown word (Calendar)     -- Formatting; use Ada.Calendar.Formatting;
Engine/main.adb:27:51     - Unknown word (Formatting)   -- use Ada.Calendar.Formatting;
Engine/main.adb:29:10     - Unknown word (Strings)      -- with Ada.Strings.Wide_Unbounded; use
Engine/main.adb:29:18     - Unknown word (Wide)         -- with Ada.Strings.Wide_Unbounded; use Ada.Strings
Engine/main.adb:29:23     - Unknown word (Unbounded)    -- with Ada.Strings.Wide_Unbounded; use Ada.Strings.Wide
Engine/main.adb:29:42     - Unknown word (Strings)      -- Wide_Unbounded; use Ada.Strings.Wide_Unbounded;
Engine/main.adb:29:50     - Unknown word (Wide)         -- Unbounded; use Ada.Strings.Wide_Unbounded;
Engine/main.adb:29:55     - Unknown word (Unbounded)    -- use Ada.Strings.Wide_Unbounded;
Engine/main.adb:31:24     - Unknown word (executable)   -- Entry point for the executable
Engine/main.adb:32:11     - Unknown word (Main)         -- procedure Main is
Engine/main.adb:37:26     - Unknown word (Safe)         -- Menu_Task : Menu_Tasks.Safe_Task;
Engine/main.adb:39:14     - Unknown word (windowing)    -- -- Set the windowing mode based on the Mode
Engine/main.adb:39:24     - Unknown word (mode)         -- - Set the windowing mode based on the Mode CVar
Engine/main.adb:39:42     - Unknown word (Mode)         -- windowing mode based on the Mode CVar
Engine/main.adb:40:17     - Unknown word (Windowing)    -- procedure Set_Windowing_Mode is
Engine/main.adb:40:27     - Unknown word (Mode)         -- procedure Set_Windowing_Mode is
Engine/main.adb:42:12     - Unknown word (Mode)         -- case Mode.Get is
Engine/main.adb:43:14     - Unknown word (Multi)        -- when Multi_Monitor_Mode => Initialize
Engine/main.adb:43:28     - Unknown word (Mode)         -- when Multi_Monitor_Mode => Initialize_Multi
Engine/main.adb:43:47     - Unknown word (Multi)        -- Monitor_Mode => Initialize_Multi_Monitor;
Engine/main.adb:44:14     - Unknown word (Windowed)     -- when Windowed_Mode => Restore
Engine/main.adb:44:23     - Unknown word (Mode)         -- when Windowed_Mode => Restore;
Engine/main.adb:45:36     - Unknown word (Maximize)     -- Fullscreen_Mode => Maximize;
Engine/main.adb:47:12     - Unknown word (Cursor)       -- Clip_Cursor (Mode.Get = Fullscreen
Engine/main.adb:47:7      - Unknown word (Clip)         -- Clip_Cursor (Mode.Get = Fullscreen
Engine/main.adb:50:15     - Unknown word (Main)         -- -- Start of Main
Engine/main.adb:53:13     - Unknown word (sure)         -- -- Make sure only one game instance
Engine/main.adb:53:41     - Unknown word (exists)       -- only one game instance exists at any one time
Engine/main.adb:56:16     - Unknown word (arguments)    -- -- Process arguments
Engine/main.adb:57:17     - Unknown word (Argument)     -- for I in 1..Argument_Count loop Submit (Replace
Engine/main.adb:57:62     - Unknown word (Argument)     -- Submit (Replace (To_Str (Argument (I)), ".", " ")); end
Engine/main.adb:59:8      - Unknown word (Dump)         -- -- Dump info
Engine/main.adb:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/main.adb:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/main.adb:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/main.adb:61:13     - Unknown word (Started)      -- Line ("Started by " & OS_Info.Username
Engine/main.adb:62:52     - Unknown word (Wide)         -- App_Name & WORD_SIZE'Wide_Image & (if Is_Debugging
Engine/main.adb:64:28     - Unknown word (GNAT)         -- Line ("Compiler: " & "GNAT " & To_Str (GNAT_Info
Engine/main.adb:64:45     - Unknown word (GNAT)         -- & "GNAT " & To_Str (GNAT_Info.Version) & " for
Engine/main.adb:65:30     - Unknown word (Vendor)       -- ("CPU: " & Get_CPU.Vendor'Wide_Image & " w/ (
Engine/main.adb:65:37     - Unknown word (Wide)         -- " & Get_CPU.Vendor'Wide_Image & " w/ (" & Get
Engine/main.adb:70:18     - Unknown word (Localization) -- --Initialize_Localization (S (OS_Info.App_Path
Engine/main.adb:73:13     - Unknown word (Graphics)     -- Title ("Graphics");
Engine/main.adb:74:16     - Unknown word (Windowing)    -- Initialize_Windowing;
Engine/main.adb:75:9      - Unknown word (Windowing)    -- Set_Windowing_Mode;
Engine/main.adb:76:16     - Unknown word (Drawing)      -- Initialize_Drawing;
Engine/main.adb:79:19     - Unknown word (interaction)  -- -- Set window interaction bindings
Engine/main.adb:79:31     - Unknown word (bindings)     -- Set window interaction bindings
Engine/main.adb:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/main.adb:80:16     - Unknown word (Bindings)     -- Enter_Game.Bindings.Append (Mouse
Engine/main.adb:81:16     - Unknown word (Bindings)     -- Fullscreen.Bindings.Append (Keyboard
Engine/main.adb:81:35     - Unknown word (Keyboard)     -- Fullscreen.Bindings.Append (Keyboard (F11_Key));
Engine/main.adb:82:18     - Unknown word (Bindings)     -- Exit_To_Menu.Bindings.Append (Keyboard (Escape
Engine/main.adb:82:35     - Unknown word (Keyboard)     -- Menu.Bindings.Append (Keyboard (Escape_Key));
Engine/main.adb:82:45     - Unknown word (Escape)       -- Bindings.Append (Keyboard (Escape_Key));
Engine/main.adb:85:38     - Unknown word (directly)     -- Debugging then -- Linked directly to the "Debug" scenario
Engine/main.adb:85:62     - Unknown word (scenario)     -- directly to the "Debug" scenario variable
Engine/main.adb:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/main.adb:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/main.adb:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/main.adb:90:17     - Unknown word (catch)        -- -- Block to catch runtime exceptions and
Engine/main.adb:90:31     - Unknown word (exceptions)   -- Block to catch runtime exceptions and contain the main
Engine/main.adb:90:46     - Unknown word (contain)      -- runtime exceptions and contain the main loop
Engine/main.adb:90:58     - Unknown word (main)         -- exceptions and contain the main loop
Engine/main.adb:92:43     - Unknown word (Clock)        -- : Time           := Clock;
Engine/main.adb:93:25     - Unknown word (Cursor)       -- Saved_Pos : Cursor_State := Get_Cursor
Engine/main.adb:93:47     - Unknown word (Cursor)       -- Cursor_State := Get_Cursor;
Engine/main.adb:94:30     - Unknown word (Kind)         -- Current_Mode : Mode_Kind := Mode.Get;
Engine/main.adb:96:13     - Unknown word (Cursor)       -- Current_Cursor : Cursor_Kind
Engine/main.adb:96:25     - Unknown word (Cursor)       -- Current_Cursor : Cursor_Kind := Cursor.Get
Engine/main.adb:96:32     - Unknown word (Kind)         -- Current_Cursor : Cursor_Kind := Cursor.Get;
Engine/main.adb:97:13     - Unknown word (Width)        -- Current_Width : Positive
Engine/main.adb:97:25     - Unknown word (Positive)     -- Current_Width : Positive := Window_Width
Engine/main.adb:97:50     - Unknown word (Width)        -- Positive := Window_Width.Get;
Engine/main.adb:98:13     - Unknown word (Height)       -- Current_Height : Positive
Engine/main.adb:98:25     - Unknown word (Positive)     -- Current_Height : Positive := Window_Height
Engine/main.adb:98:50     - Unknown word (Height)       -- Positive := Window_Height.Get;
Engine/main.adb:99:35     - Unknown word (Kind)         -- Activated : Activated_Kind := Activated.Get;
Engine/neo-api-openal.ads:1000:19   - Unknown word (Depth)                  -- flModulationDepth : Real_32_C
Engine/neo-api-openal.ads:1000:9    - Unknown word (Modulation)             -- flModulationDepth : Real_32_C
Engine/neo-api-openal.ads:1001:12   - Unknown word (Absorption)             -- flAirAbsorptionGainHF : Real_32_C
Engine/neo-api-openal.ads:1004:13   - Unknown word (Rolloff)                -- flRoomRolloffFactor : Real_32_C
Engine/neo-api-openal.ads:1005:8    - Unknown word (Decay)                  -- iDecayHFLimit : Int
Engine/neo-api-openal.ads:1006:21   - Unknown word (Convention)             -- end record with Convention => C;
Engine/neo-api-openal.ads:1009:48   - Unknown word (EFXEAXREVERBPROPERTIES) -- GENERIC : constant EFXEAXREVERBPROPERTIES := (1.0000, 1.0000,
Engine/neo-api-openal.ads:1010:21   - Unknown word (PADDEDCELL)             -- EFX_REVERB_PRESET_PADDEDCELL : constant EFXEAXREVERBP
Engine/neo-api-openal.ads:1010:48   - Unknown word (EFXEAXREVERBPROPERTIES) -- PADDEDCELL : constant EFXEAXREVERBPROPERTIES := (0.1715, 1.0000,
Engine/neo-api-openal.ads:1011:48   - Unknown word (EFXEAXREVERBPROPERTIES) -- : constant EFXEAXREVERBPROPERTIES := (0.4287, 1.0000,
Engine/neo-api-openal.ads:1012:21   - Unknown word (BATHROOM)               -- EFX_REVERB_PRESET_BATHROOM : constant EFXEAXREVER
Engine/neo-api-openal.ads:1012:48   - Unknown word (EFXEAXREVERBPROPERTIES) -- BATHROOM : constant EFXEAXREVERBPROPERTIES := (0.1715, 1.0000,
Engine/neo-api-openal.ads:1013:21   - Unknown word (LIVINGROOM)             -- EFX_REVERB_PRESET_LIVINGROOM : constant EFXEAXREVERBP
Engine/neo-api-openal.ads:1014:21   - Unknown word (STONEROOM)              -- EFX_REVERB_PRESET_STONEROOM : constant EFXEAXREVERB
Engine/neo-api-openal.ads:1015:21   - Unknown word (AUDITORIUM)             -- EFX_REVERB_PRESET_AUDITORIUM : constant EFXEAXREVERBP
Engine/neo-api-openal.ads:1016:21   - Unknown word (CONCERTHALL)            -- EFX_REVERB_PRESET_CONCERTHALL : constant EFXEAXREVERBPR
Engine/neo-api-openal.ads:1017:21   - Unknown word (CAVE)                   -- EFX_REVERB_PRESET_CAVE : constant
Engine/neo-api-openal.ads:1018:21   - Unknown word (ARENA)                  -- EFX_REVERB_PRESET_ARENA : constant
Engine/neo-api-openal.ads:1019:21   - Unknown word (HANGAR)                 -- EFX_REVERB_PRESET_HANGAR : constant
Engine/neo-api-openal.ads:1020:21   - Unknown word (CARPETEDHALLWAY)        -- EFX_REVERB_PRESET_CARPETEDHALLWAY : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1021:21   - Unknown word (HALLWAY)                -- EFX_REVERB_PRESET_HALLWAY : constant EFXEAXREVE
Engine/neo-api-openal.ads:1022:21   - Unknown word (STONECORRIDOR)          -- EFX_REVERB_PRESET_STONECORRIDOR : constant EFXEAXREVERBPROP
Engine/neo-api-openal.ads:1023:21   - Unknown word (ALLEY)                  -- EFX_REVERB_PRESET_ALLEY : constant
Engine/neo-api-openal.ads:1024:21   - Unknown word (FOREST)                 -- EFX_REVERB_PRESET_FOREST : constant
Engine/neo-api-openal.ads:1026:21   - Unknown word (MOUNTAINS)              -- EFX_REVERB_PRESET_MOUNTAINS : constant EFXEAXREVERB
Engine/neo-api-openal.ads:1027:21   - Unknown word (QUARRY)                 -- EFX_REVERB_PRESET_QUARRY : constant
Engine/neo-api-openal.ads:1028:21   - Unknown word (PLAIN)                  -- EFX_REVERB_PRESET_PLAIN : constant
Engine/neo-api-openal.ads:1029:21   - Unknown word (PARKINGLOT)             -- EFX_REVERB_PRESET_PARKINGLOT : constant EFXEAXREVERBP
Engine/neo-api-openal.ads:1030:21   - Unknown word (SEWERPIPE)              -- EFX_REVERB_PRESET_SEWERPIPE : constant EFXEAXREVERB
Engine/neo-api-openal.ads:1031:21   - Unknown word (UNDERWATER)             -- EFX_REVERB_PRESET_UNDERWATER : constant EFXEAXREVERBP
Engine/neo-api-openal.ads:1032:21   - Unknown word (DRUGGED)                -- EFX_REVERB_PRESET_DRUGGED : constant EFXEAXREVE
Engine/neo-api-openal.ads:1033:21   - Unknown word (DIZZY)                  -- EFX_REVERB_PRESET_DIZZY : constant
Engine/neo-api-openal.ads:1034:21   - Unknown word (PSYCHOTIC)              -- EFX_REVERB_PRESET_PSYCHOTIC : constant EFXEAXREVERB
Engine/neo-api-openal.ads:1037:28   - Unknown word (SMALLROOM)              -- REVERB_PRESET_CASTLE_SMALLROOM : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1038:28   - Unknown word (SHORTPASSAGE)           -- REVERB_PRESET_CASTLE_SHORTPASSAGE : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1039:28   - Unknown word (MEDIUMROOM)             -- REVERB_PRESET_CASTLE_MEDIUMROOM : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:103:10    - Unknown word (GAIN)         -- AL_MIN_GAIN : constant
Engine/neo-api-openal.ads:1040:28   - Unknown word (LARGEROOM)              -- REVERB_PRESET_CASTLE_LARGEROOM : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1041:28   - Unknown word (LONGPASSAGE)            -- REVERB_PRESET_CASTLE_LONGPASSAGE : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1042:28   - Unknown word (HALL)                   -- REVERB_PRESET_CASTLE_HALL : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1043:28   - Unknown word (CUPBOARD)               -- REVERB_PRESET_CASTLE_CUPBOARD : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1044:28   - Unknown word (COURTYARD)              -- REVERB_PRESET_CASTLE_COURTYARD : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1045:28   - Unknown word (ALCOVE)                 -- REVERB_PRESET_CASTLE_ALCOVE : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1047:6    - Unknown word (Factory)                -- -- Factory Presets
Engine/neo-api-openal.ads:1048:21   - Unknown word (FACTORY)                -- EFX_REVERB_PRESET_FACTORY_SMALLROOM : constant
Engine/neo-api-openal.ads:1048:29   - Unknown word (SMALLROOM)              -- REVERB_PRESET_FACTORY_SMALLROOM : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1049:21   - Unknown word (FACTORY)                -- EFX_REVERB_PRESET_FACTORY_SHORTPASSAGE : constant
Engine/neo-api-openal.ads:1049:29   - Unknown word (SHORTPASSAGE)           -- REVERB_PRESET_FACTORY_SHORTPASSAGE : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:104:10    - Unknown word (GAIN)         -- AL_MAX_GAIN : constant
Engine/neo-api-openal.ads:1050:21   - Unknown word (FACTORY)                -- EFX_REVERB_PRESET_FACTORY_MEDIUMROOM : constant
Engine/neo-api-openal.ads:1050:29   - Unknown word (MEDIUMROOM)             -- REVERB_PRESET_FACTORY_MEDIUMROOM : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1051:21   - Unknown word (FACTORY)                -- EFX_REVERB_PRESET_FACTORY_LARGEROOM : constant
Engine/neo-api-openal.ads:1051:29   - Unknown word (LARGEROOM)              -- REVERB_PRESET_FACTORY_LARGEROOM : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1052:21   - Unknown word (FACTORY)                -- EFX_REVERB_PRESET_FACTORY_LONGPASSAGE : constant
Engine/neo-api-openal.ads:1052:29   - Unknown word (LONGPASSAGE)            -- REVERB_PRESET_FACTORY_LONGPASSAGE : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1053:29   - Unknown word (HALL)                   -- REVERB_PRESET_FACTORY_HALL : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1054:29   - Unknown word (CUPBOARD)               -- REVERB_PRESET_FACTORY_CUPBOARD : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1055:29   - Unknown word (COURTYARD)              -- REVERB_PRESET_FACTORY_COURTYARD : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1056:29   - Unknown word (ALCOVE)                 -- REVERB_PRESET_FACTORY_ALCOVE : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1058:10   - Unknown word (Palace)                 -- -- Ice Palace Presets
Engine/neo-api-openal.ads:1059:21   - Unknown word (ICEPALACE)             -- EFX_REVERB_PRESET_ICEPALACE_SMALLROOM : constant
Engine/neo-api-openal.ads:1059:31   - Unknown word (SMALLROOM)             -- REVERB_PRESET_ICEPALACE_SMALLROOM : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1060:21   - Unknown word (ICEPALACE)             -- EFX_REVERB_PRESET_ICEPALACE_SHORTPASSAGE : constant
Engine/neo-api-openal.ads:1060:31   - Unknown word (SHORTPASSAGE)          -- REVERB_PRESET_ICEPALACE_SHORTPASSAGE : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1061:21   - Unknown word (ICEPALACE)             -- EFX_REVERB_PRESET_ICEPALACE_MEDIUMROOM : constant
Engine/neo-api-openal.ads:1061:31   - Unknown word (MEDIUMROOM)            -- REVERB_PRESET_ICEPALACE_MEDIUMROOM : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1062:21   - Unknown word (ICEPALACE)             -- EFX_REVERB_PRESET_ICEPALACE_LARGEROOM : constant
Engine/neo-api-openal.ads:1062:31   - Unknown word (LARGEROOM)             -- REVERB_PRESET_ICEPALACE_LARGEROOM : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1063:21   - Unknown word (ICEPALACE)             -- EFX_REVERB_PRESET_ICEPALACE_LONGPASSAGE : constant
Engine/neo-api-openal.ads:1063:31   - Unknown word (LONGPASSAGE)           -- REVERB_PRESET_ICEPALACE_LONGPASSAGE : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1064:31   - Unknown word (HALL)                  -- REVERB_PRESET_ICEPALACE_HALL : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1065:31   - Unknown word (CUPBOARD)              -- REVERB_PRESET_ICEPALACE_CUPBOARD : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1066:31   - Unknown word (COURTYARD)             -- REVERB_PRESET_ICEPALACE_COURTYARD : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1067:31   - Unknown word (ALCOVE)                -- REVERB_PRESET_ICEPALACE_ALCOVE : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1069:12   - Unknown word (Station)               -- -- Space Station Presets
Engine/neo-api-openal.ads:106:6     - Unknown word (ROLLOFF)      -- AL_ROLLOFF_FACTOR : constant
Engine/neo-api-openal.ads:1070:21   - Unknown word (SPACESTATION)          -- EFX_REVERB_PRESET_SPACESTATION_SMALLROOM : constant
Engine/neo-api-openal.ads:1070:34   - Unknown word (SMALLROOM)             -- PRESET_SPACESTATION_SMALLROOM : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1071:21   - Unknown word (SPACESTATION)          -- EFX_REVERB_PRESET_SPACESTATION_SHORTPASSAGE : constant
Engine/neo-api-openal.ads:1071:34   - Unknown word (SHORTPASSAGE)          -- PRESET_SPACESTATION_SHORTPASSAGE : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1072:21   - Unknown word (SPACESTATION)          -- EFX_REVERB_PRESET_SPACESTATION_MEDIUMROOM : constant
Engine/neo-api-openal.ads:1072:34   - Unknown word (MEDIUMROOM)            -- PRESET_SPACESTATION_MEDIUMROOM : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1073:21   - Unknown word (SPACESTATION)          -- EFX_REVERB_PRESET_SPACESTATION_LARGEROOM : constant
Engine/neo-api-openal.ads:1073:34   - Unknown word (LARGEROOM)             -- PRESET_SPACESTATION_LARGEROOM : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1074:21   - Unknown word (SPACESTATION)          -- EFX_REVERB_PRESET_SPACESTATION_LONGPASSAGE : constant
Engine/neo-api-openal.ads:1074:34   - Unknown word (LONGPASSAGE)           -- PRESET_SPACESTATION_LONGPASSAGE : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1075:34   - Unknown word (HALL)                  -- PRESET_SPACESTATION_HALL : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1076:34   - Unknown word (CUPBOARD)              -- PRESET_SPACESTATION_CUPBOARD : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1077:34   - Unknown word (ALCOVE)                -- PRESET_SPACESTATION_ALCOVE : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1079:13   - Unknown word (Galleon)               -- -- Wooden Galleon Presets
Engine/neo-api-openal.ads:1079:6    - Unknown word (Wooden)                -- -- Wooden Galleon Presets
Engine/neo-api-openal.ads:1080:21   - Unknown word (WOODEN)                -- EFX_REVERB_PRESET_WOODEN_SMALLROOM : constant
Engine/neo-api-openal.ads:1080:28   - Unknown word (SMALLROOM)             -- REVERB_PRESET_WOODEN_SMALLROOM : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1081:21   - Unknown word (WOODEN)                -- EFX_REVERB_PRESET_WOODEN_SHORTPASSAGE : constant
Engine/neo-api-openal.ads:1081:28   - Unknown word (SHORTPASSAGE)          -- REVERB_PRESET_WOODEN_SHORTPASSAGE : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1082:21   - Unknown word (WOODEN)                -- EFX_REVERB_PRESET_WOODEN_MEDIUMROOM : constant
Engine/neo-api-openal.ads:1082:28   - Unknown word (MEDIUMROOM)            -- REVERB_PRESET_WOODEN_MEDIUMROOM : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1083:21   - Unknown word (WOODEN)                -- EFX_REVERB_PRESET_WOODEN_LARGEROOM : constant
Engine/neo-api-openal.ads:1083:28   - Unknown word (LARGEROOM)             -- REVERB_PRESET_WOODEN_LARGEROOM : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1084:21   - Unknown word (WOODEN)                -- EFX_REVERB_PRESET_WOODEN_LONGPASSAGE : constant
Engine/neo-api-openal.ads:1084:28   - Unknown word (LONGPASSAGE)           -- REVERB_PRESET_WOODEN_LONGPASSAGE : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1085:28   - Unknown word (HALL)                  -- REVERB_PRESET_WOODEN_HALL : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1086:28   - Unknown word (CUPBOARD)              -- REVERB_PRESET_WOODEN_CUPBOARD : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1087:28   - Unknown word (COURTYARD)             -- REVERB_PRESET_WOODEN_COURTYARD : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1088:28   - Unknown word (ALCOVE)                -- REVERB_PRESET_WOODEN_ALCOVE : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:108:6     - Unknown word (PITCH)        -- AL_PITCH : constant
Engine/neo-api-openal.ads:1090:6    - Unknown word (Sports)                -- -- Sports Presets
Engine/neo-api-openal.ads:1091:21   - Unknown word (SPORT)                 -- EFX_REVERB_PRESET_SPORT_EMPTYSTADIUM : constant
Engine/neo-api-openal.ads:1091:27   - Unknown word (EMPTYSTADIUM)          -- REVERB_PRESET_SPORT_EMPTYSTADIUM : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1092:21   - Unknown word (SPORT)                 -- EFX_REVERB_PRESET_SPORT_SQUASHCOURT : constant
Engine/neo-api-openal.ads:1092:27   - Unknown word (SQUASHCOURT)           -- REVERB_PRESET_SPORT_SQUASHCOURT : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1093:21   - Unknown word (SPORT)                -- EFX_REVERB_PRESET_SPORT_SMALLSWIMMINGPOOL :
Engine/neo-api-openal.ads:1093:27   - Unknown word (SMALLSWIMMINGPOOL)    -- REVERB_PRESET_SPORT_SMALLSWIMMINGPOOL : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1094:21   - Unknown word (SPORT)                -- EFX_REVERB_PRESET_SPORT_LARGESWIMMINGPOOL :
Engine/neo-api-openal.ads:1094:27   - Unknown word (LARGESWIMMINGPOOL)    -- REVERB_PRESET_SPORT_LARGESWIMMINGPOOL : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1095:21   - Unknown word (SPORT)                -- EFX_REVERB_PRESET_SPORT_GYMNASIUM : constant
Engine/neo-api-openal.ads:1095:27   - Unknown word (GYMNASIUM)            -- REVERB_PRESET_SPORT_GYMNASIUM : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1096:27   - Unknown word (FULLSTADIUM)          -- REVERB_PRESET_SPORT_FULLSTADIUM : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1097:27   - Unknown word (STADIUMTANNOY)        -- REVERB_PRESET_SPORT_STADIUMTANNOY : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1099:6    - Unknown word (Prefab)               -- -- Prefab Presets
Engine/neo-api-openal.ads:109:6     - Unknown word (DIRECTION)    -- AL_DIRECTION : constant
Engine/neo-api-openal.ads:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-api-openal.ads:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-api-openal.ads:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo-api-openal.ads:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-api-openal.ads:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-api-openal.ads:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-api-openal.ads:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-api-openal.ads:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-api-openal.ads:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-api-openal.ads:1100:21   - Unknown word (PREFAB)               -- EFX_REVERB_PRESET_PREFAB_WORKSHOP : constant
Engine/neo-api-openal.ads:1100:28   - Unknown word (WORKSHOP)             -- REVERB_PRESET_PREFAB_WORKSHOP : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1101:21   - Unknown word (PREFAB)               -- EFX_REVERB_PRESET_PREFAB_SCHOOLROOM : constant
Engine/neo-api-openal.ads:1101:28   - Unknown word (SCHOOLROOM)           -- REVERB_PRESET_PREFAB_SCHOOLROOM : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1102:21   - Unknown word (PREFAB)               -- EFX_REVERB_PRESET_PREFAB_PRACTISEROOM : constant
Engine/neo-api-openal.ads:1102:28   - Unknown word (PRACTISEROOM)         -- REVERB_PRESET_PREFAB_PRACTISEROOM : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1103:21   - Unknown word (PREFAB)               -- EFX_REVERB_PRESET_PREFAB_OUTHOUSE : constant
Engine/neo-api-openal.ads:1103:28   - Unknown word (OUTHOUSE)             -- REVERB_PRESET_PREFAB_OUTHOUSE : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1104:21   - Unknown word (PREFAB)               -- EFX_REVERB_PRESET_PREFAB_CARAVAN : constant EFXEAXREVE
Engine/neo-api-openal.ads:1104:28   - Unknown word (CARAVAN)              -- REVERB_PRESET_PREFAB_CARAVAN : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1106:15   - Unknown word (Pipe)                 -- -- Dome and Pipe Presets
Engine/neo-api-openal.ads:1106:6    - Unknown word (Dome)                 -- -- Dome and Pipe Presets
Engine/neo-api-openal.ads:1107:21   - Unknown word (DOME)                 -- EFX_REVERB_PRESET_DOME_TOMB : constant EFXEAXREVERBP
Engine/neo-api-openal.ads:1107:26   - Unknown word (TOMB)                 -- EFX_REVERB_PRESET_DOME_TOMB : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1108:21   - Unknown word (PIPE)                 -- EFX_REVERB_PRESET_PIPE_SMALL : constant EFXEAXREVERB
Engine/neo-api-openal.ads:1108:26   - Unknown word (SMALL)                -- EFX_REVERB_PRESET_PIPE_SMALL : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1109:21   - Unknown word (DOME)                 -- EFX_REVERB_PRESET_DOME_SAINTPAULS : constant
Engine/neo-api-openal.ads:1109:26   - Unknown word (SAINTPAULS)           -- EFX_REVERB_PRESET_DOME_SAINTPAULS : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:110:11    - Unknown word (INNER)        -- AL_CONE_INNER_ANGLE : constant Int
Engine/neo-api-openal.ads:110:17    - Unknown word (ANGLE)        -- AL_CONE_INNER_ANGLE : constant Int_Unsigned
Engine/neo-api-openal.ads:110:6     - Unknown word (CONE)         -- AL_CONE_INNER_ANGLE : constant
Engine/neo-api-openal.ads:1110:21   - Unknown word (PIPE)                 -- EFX_REVERB_PRESET_PIPE_LONGTHIN : constant
Engine/neo-api-openal.ads:1110:26   - Unknown word (LONGTHIN)             -- EFX_REVERB_PRESET_PIPE_LONGTHIN : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1111:21   - Unknown word (PIPE)                 -- EFX_REVERB_PRESET_PIPE_LARGE : constant EFXEAXREVERB
Engine/neo-api-openal.ads:1111:26   - Unknown word (LARGE)                -- EFX_REVERB_PRESET_PIPE_LARGE : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1112:21   - Unknown word (PIPE)                 -- EFX_REVERB_PRESET_PIPE_RESONANT : constant
Engine/neo-api-openal.ads:1112:26   - Unknown word (RESONANT)             -- EFX_REVERB_PRESET_PIPE_RESONANT : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1114:6    - Unknown word (Outdoors)             -- -- Outdoors Presets
Engine/neo-api-openal.ads:1115:21   - Unknown word (OUTDOORS)             -- EFX_REVERB_PRESET_OUTDOORS_BACKYARD : constant
Engine/neo-api-openal.ads:1115:30   - Unknown word (BACKYARD)             -- REVERB_PRESET_OUTDOORS_BACKYARD : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1116:21   - Unknown word (OUTDOORS)             -- EFX_REVERB_PRESET_OUTDOORS_ROLLINGPLAINS : constant
Engine/neo-api-openal.ads:1116:30   - Unknown word (ROLLINGPLAINS)        -- REVERB_PRESET_OUTDOORS_ROLLINGPLAINS : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1117:21   - Unknown word (OUTDOORS)             -- EFX_REVERB_PRESET_OUTDOORS_DEEPCANYON : constant
Engine/neo-api-openal.ads:1117:30   - Unknown word (DEEPCANYON)           -- REVERB_PRESET_OUTDOORS_DEEPCANYON : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1118:21   - Unknown word (OUTDOORS)             -- EFX_REVERB_PRESET_OUTDOORS_CREEK : constant EFXEAXREVERB
Engine/neo-api-openal.ads:1118:30   - Unknown word (CREEK)                -- REVERB_PRESET_OUTDOORS_CREEK : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1119:21   - Unknown word (OUTDOORS)             -- EFX_REVERB_PRESET_OUTDOORS_VALLEY : constant EFXEAXREVER
Engine/neo-api-openal.ads:1119:30   - Unknown word (VALLEY)               -- REVERB_PRESET_OUTDOORS_VALLEY : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:111:11    - Unknown word (OUTER)        -- AL_CONE_OUTER_ANGLE : constant Int
Engine/neo-api-openal.ads:111:17    - Unknown word (ANGLE)        -- AL_CONE_OUTER_ANGLE : constant Int_Unsigned
Engine/neo-api-openal.ads:111:6     - Unknown word (CONE)         -- AL_CONE_OUTER_ANGLE : constant
Engine/neo-api-openal.ads:1121:6    - Unknown word (Mood)                 -- -- Mood Presets
Engine/neo-api-openal.ads:1122:21   - Unknown word (MOOD)                 -- EFX_REVERB_PRESET_MOOD_HEAVEN : constant EFXEAXREVER
Engine/neo-api-openal.ads:1122:26   - Unknown word (HEAVEN)               -- EFX_REVERB_PRESET_MOOD_HEAVEN : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1123:21   - Unknown word (MOOD)                 -- EFX_REVERB_PRESET_MOOD_HELL : constant EFXEAXREVERBP
Engine/neo-api-openal.ads:1123:26   - Unknown word (HELL)                 -- EFX_REVERB_PRESET_MOOD_HELL : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1124:21   - Unknown word (MOOD)                 -- EFX_REVERB_PRESET_MOOD_MEMORY : constant EFXEAXREVER
Engine/neo-api-openal.ads:1124:26   - Unknown word (MEMORY)               -- EFX_REVERB_PRESET_MOOD_MEMORY : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1126:6    - Unknown word (Driving)             -- -- Driving Presets
Engine/neo-api-openal.ads:1127:21   - Unknown word (DRIVING)             -- EFX_REVERB_PRESET_DRIVING_COMMENTATOR : constant
Engine/neo-api-openal.ads:1127:29   - Unknown word (COMMENTATOR)         -- REVERB_PRESET_DRIVING_COMMENTATOR : constant EFXEAXREVERBPR
Engine/neo-api-openal.ads:1128:21   - Unknown word (DRIVING)             -- EFX_REVERB_PRESET_DRIVING_PITGARAGE : constant
Engine/neo-api-openal.ads:1128:29   - Unknown word (PITGARAGE)           -- REVERB_PRESET_DRIVING_PITGARAGE : constant EFXEAXREVERB
Engine/neo-api-openal.ads:1129:21   - Unknown word (DRIVING)             -- EFX_REVERB_PRESET_DRIVING_INCAR_RACER : constant
Engine/neo-api-openal.ads:1129:29   - Unknown word (INCAR)               -- REVERB_PRESET_DRIVING_INCAR_RACER : constant
Engine/neo-api-openal.ads:1129:35   - Unknown word (RACER)               -- PRESET_DRIVING_INCAR_RACER : constant EFXEAXREVERBPR
Engine/neo-api-openal.ads:112:11    - Unknown word (OUTER)        -- AL_CONE_OUTER_GAIN : constant Int
Engine/neo-api-openal.ads:112:17    - Unknown word (GAIN)         -- AL_CONE_OUTER_GAIN : constant Int_Unsigned
Engine/neo-api-openal.ads:112:6     - Unknown word (CONE)         -- AL_CONE_OUTER_GAIN : constant
Engine/neo-api-openal.ads:1130:21   - Unknown word (DRIVING)             -- EFX_REVERB_PRESET_DRIVING_INCAR_SPORTS : constant
Engine/neo-api-openal.ads:1130:29   - Unknown word (INCAR)               -- REVERB_PRESET_DRIVING_INCAR_SPORTS : constant
Engine/neo-api-openal.ads:1130:35   - Unknown word (SPORTS)              -- PRESET_DRIVING_INCAR_SPORTS : constant EFXEAXREVERBPRO
Engine/neo-api-openal.ads:1131:21   - Unknown word (DRIVING)             -- EFX_REVERB_PRESET_DRIVING_INCAR_LUXURY : constant
Engine/neo-api-openal.ads:1131:29   - Unknown word (INCAR)               -- REVERB_PRESET_DRIVING_INCAR_LUXURY : constant
Engine/neo-api-openal.ads:1131:35   - Unknown word (LUXURY)              -- PRESET_DRIVING_INCAR_LUXURY : constant EFXEAXREVERBPRO
Engine/neo-api-openal.ads:1132:29   - Unknown word (FULLGRANDSTAND)      -- REVERB_PRESET_DRIVING_FULLGRANDSTAND : constant EFXEAXREVERBPROPE
Engine/neo-api-openal.ads:1133:29   - Unknown word (EMPTYGRANDSTAND)     -- REVERB_PRESET_DRIVING_EMPTYGRANDSTAND : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1134:29   - Unknown word (TUNNEL)              -- REVERB_PRESET_DRIVING_TUNNEL : constant
Engine/neo-api-openal.ads:1137:26   - Unknown word (STREETS)             -- EFX_REVERB_PRESET_CITY_STREETS : constant EFXEAXREVERBPROP
Engine/neo-api-openal.ads:1138:26   - Unknown word (SUBWAY)              -- EFX_REVERB_PRESET_CITY_SUBWAY : constant EFXEAXREVERBPRO
Engine/neo-api-openal.ads:1139:26   - Unknown word (MUSEUM)              -- EFX_REVERB_PRESET_CITY_MUSEUM : constant EFXEAXREVERBPRO
Engine/neo-api-openal.ads:113:10    - Unknown word (OFFSET)       -- AL_SEC_OFFSET : constant Int
Engine/neo-api-openal.ads:1140:26   - Unknown word (LIBRARY)             -- EFX_REVERB_PRESET_CITY_LIBRARY : constant EFXEAXREVERBPROP
Engine/neo-api-openal.ads:1141:26   - Unknown word (UNDERPASS)           -- EFX_REVERB_PRESET_CITY_UNDERPASS : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1142:26   - Unknown word (ABANDONED)           -- EFX_REVERB_PRESET_CITY_ABANDONED : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:1144:6    - Unknown word (Misc)                -- -- Misc. Presets
Engine/neo-api-openal.ads:1145:21   - Unknown word (DUSTYROOM)           -- EFX_REVERB_PRESET_DUSTYROOM : constant EFXEAXREVERBP
Engine/neo-api-openal.ads:1147:21   - Unknown word (SMALLWATERROOM)      -- EFX_REVERB_PRESET_SMALLWATERROOM : constant EFXEAXREVERBPROPER
Engine/neo-api-openal.ads:114:13    - Unknown word (OFFSET)       -- AL_SAMPLE_OFFSET : constant Int
Engine/neo-api-openal.ads:1150:6    - Unknown word (Subprograms)         -- -- Subprograms --
Engine/neo-api-openal.ads:1154:49   - Unknown word (Lenum)               -- return Int_Unsigned_C -- ALenum
Engine/neo-api-openal.ads:1155:38   - Unknown word (True)                -- with Import => True, Convention => StdCall
Engine/neo-api-openal.ads:1155:44   - Unknown word (Convention)          -- with Import => True, Convention => StdCall, External
Engine/neo-api-openal.ads:1157:11   - Unknown word (Controlling)         -- -- 2.8. Controlling AL Execution
Engine/neo-api-openal.ads:1158:52   - Unknown word (Lenum)               -- Int_Unsigned_C) -- ALenum
Engine/neo-api-openal.ads:1159:38   - Unknown word (True)                -- with Import => True, Convention => StdCall
Engine/neo-api-openal.ads:1159:44   - Unknown word (Convention)          -- with Import => True, Convention => StdCall, External
Engine/neo-api-openal.ads:115:11    - Unknown word (OFFSET)       -- AL_BYTE_OFFSET : constant Int
Engine/neo-api-openal.ads:1161:11   - Unknown word (Controlling)         -- -- 2.8. Controlling AL Execution
Engine/neo-api-openal.ads:1162:53   - Unknown word (Lenum)               -- Int_Unsigned_C) -- ALenum
Engine/neo-api-openal.ads:1163:39   - Unknown word (True)                -- with Import => True, Convention => StdCall
Engine/neo-api-openal.ads:1163:45   - Unknown word (Convention)          -- with Import => True, Convention => StdCall, External
Engine/neo-api-openal.ads:1165:11   - Unknown word (Controlling)         -- -- 2.8. Controlling AL Execution
Engine/neo-api-openal.ads:1166:54   - Unknown word (Lenum)               -- Int_Unsigned_C) -- ALenum
Engine/neo-api-openal.ads:1167:57   - Unknown word (Lboolean)            -- _Unsigned_C -- ALboolean
Engine/neo-api-openal.ads:1168:40   - Unknown word (True)                -- with Import => True, Convention => StdCall
Engine/neo-api-openal.ads:1168:46   - Unknown word (Convention)          -- with Import => True, Convention => StdCall, External
Engine/neo-api-openal.ads:1170:12   - Unknown word (Requesting)          -- -- 2.12. Requesting Object Names
Engine/neo-api-openal.ads:1171:70   - Unknown word (Lsizei)              -- -- ALsizei
Engine/neo-api-openal.ads:1172:70   - Unknown word (Luint)               -- Int_32_Unsigned_C) -- ALuint*
Engine/neo-api-openal.ads:1173:42   - Unknown word (True)                -- with Import => True, Convention => StdCall
Engine/neo-api-openal.ads:1175:12   - Unknown word (Releasing)           -- -- 2.13. Releasing Object Names
Engine/neo-api-openal.ads:1176:73   - Unknown word (Lsizei)              -- -- ALsizei
Engine/neo-api-openal.ads:1177:73   - Unknown word (Luint)               -- Int_32_Unsigned_C) -- ALuint*
Engine/neo-api-openal.ads:117:13    - Unknown word (Managing)     -- -- 4.3.6. Managing Source Execution
Engine/neo-api-openal.ads:1180:12   - Unknown word (Validating)          -- -- 2.14. Validating an Object Name
Engine/neo-api-openal.ads:1182:53   - Unknown word (Lboolean)            -- Int_8_Unsigned_C -- ALboolean
Engine/neo-api-openal.ads:1185:12   - Unknown word (Validating)          -- -- 2.14. Validating an Object Name
Engine/neo-api-openal.ads:1187:53   - Unknown word (Lboolean)            -- Int_8_Unsigned_C -- ALboolean
Engine/neo-api-openal.ads:1190:13   - Unknown word (Simple)             -- -- 3.1.1. Simple Queries
Engine/neo-api-openal.ads:1191:18   - Unknown word (Booleanv)           -- procedure alGetBooleanv (paramName : Int_Unsigned
Engine/neo-api-openal.ads:1193:95   - Unknown word (Booleanv)           -- External_Name => "alGetBooleanv";
Engine/neo-api-openal.ads:1195:13   - Unknown word (Simple)             -- -- 3.1.1. Simple Queries
Engine/neo-api-openal.ads:119:6     - Unknown word (INITIAL)      -- AL_INITIAL : constant Int
Engine/neo-api-openal.ads:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-api-openal.ads:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-api-openal.ads:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-api-openal.ads:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-api-openal.ads:1200:13   - Unknown word (Simple)             -- -- 3.1.1. Simple Queries
Engine/neo-api-openal.ads:1201:18   - Unknown word (Integerv)           -- procedure alGetIntegerv (paramName : Int_Unsigned
Engine/neo-api-openal.ads:1203:95   - Unknown word (Integerv)           -- External_Name => "alGetIntegerv";
Engine/neo-api-openal.ads:1205:13   - Unknown word (Simple)             -- -- 3.1.1. Simple Queries
Engine/neo-api-openal.ads:120:6     - Unknown word (PLAYING)      -- AL_PLAYING : constant Int
Engine/neo-api-openal.ads:1211:18   - Unknown word (Floatv)             -- procedure alGetFloatv (paramName : Int_Unsigned
Engine/neo-api-openal.ads:1212:63   - Unknown word (Lfloat)             -- Array_Real_32_C) -- ALfloat*
Engine/neo-api-openal.ads:1213:93   - Unknown word (Floatv)             -- External_Name => "alGetFloatv";
Engine/neo-api-openal.ads:1217:59   - Unknown word (Lfloat)             -- C -- ALfloat
Engine/neo-api-openal.ads:121:6     - Unknown word (PAUSED)       -- AL_PAUSED : constant Int
Engine/neo-api-openal.ads:1221:18   - Unknown word (Doublev)            -- procedure alGetDoublev (paramName : Int_Unsigned
Engine/neo-api-openal.ads:1222:64   - Unknown word (Ldouble)            -- Array_Real_64_C) -- ALdouble*
Engine/neo-api-openal.ads:1223:94   - Unknown word (Doublev)            -- External_Name => "alGetDoublev";
Engine/neo-api-openal.ads:1227:60   - Unknown word (Ldouble)            -- C -- ALdouble
Engine/neo-api-openal.ads:122:6     - Unknown word (STOPPED)      -- AL_STOPPED : constant Int
Engine/neo-api-openal.ads:1230:11   - Unknown word (Attenuation)        -- -- 3.4. Attenuation By Distance
Engine/neo-api-openal.ads:1230:26   - Unknown word (Distance)           -- 3.4. Attenuation By Distance
Engine/neo-api-openal.ads:1231:15   - Unknown word (Distance)           -- procedure alDistanceModel (distanceModel
Engine/neo-api-openal.ads:1231:30   - Unknown word (distance)           -- procedure alDistanceModel (distanceModel : Int_Unsigned
Engine/neo-api-openal.ads:1232:94   - Unknown word (Distance)           -- External_Name => "alDistanceModel";
Engine/neo-api-openal.ads:1234:13   - Unknown word (Velocity)           -- -- 3.5.2. Velocity Dependent Doppler Effect
Engine/neo-api-openal.ads:1234:22   - Unknown word (Dependent)          -- -- 3.5.2. Velocity Dependent Doppler Effect
Engine/neo-api-openal.ads:1234:32   - Unknown word (Doppler)            -- Velocity Dependent Doppler Effect
Engine/neo-api-openal.ads:1235:15   - Unknown word (Doppler)            -- procedure alDopplerFactor (Value : Real
Engine/neo-api-openal.ads:1235:53   - Unknown word (Lfloat)             -- Value : Real_32_C) -- ALfloat
Engine/neo-api-openal.ads:1236:94   - Unknown word (Doppler)            -- External_Name => "alDopplerFactor";
Engine/neo-api-openal.ads:1238:13   - Unknown word (Velocity)           -- -- 3.5.2. Velocity Dependent Doppler Effect
Engine/neo-api-openal.ads:1238:22   - Unknown word (Dependent)          -- -- 3.5.2. Velocity Dependent Doppler Effect
Engine/neo-api-openal.ads:1238:32   - Unknown word (Doppler)            -- Velocity Dependent Doppler Effect
Engine/neo-api-openal.ads:1239:15   - Unknown word (Speed)              -- procedure alSpeedOfSound (Value : Real
Engine/neo-api-openal.ads:1239:22   - Unknown word (Sound)              -- procedure alSpeedOfSound (Value : Real_32_C)
Engine/neo-api-openal.ads:1240:100  - Unknown word (Sound)              -- External_Name => "alSpeedOfSound";
Engine/neo-api-openal.ads:1240:93   - Unknown word (Speed)              -- External_Name => "alSpeedOfSound";
Engine/neo-api-openal.ads:1242:13   - Unknown word (Changing)           -- -- 4.2.2. Changing Listener Attributes
Engine/neo-api-openal.ads:1243:15   - Unknown word (Listenerf)          -- procedure alListenerf (param : Int_Unsigned
Engine/neo-api-openal.ads:1245:90   - Unknown word (Listenerf)          -- External_Name => "alListenerf";
Engine/neo-api-openal.ads:1247:13   - Unknown word (Changing)           -- -- 4.2.2. Changing Listener Attributes
Engine/neo-api-openal.ads:1254:13   - Unknown word (Changing)           -- -- 4.2.2. Changing Listener Attributes
Engine/neo-api-openal.ads:1255:15   - Unknown word (Listeneri)          -- procedure alListeneri (param : Int_Unsigned
Engine/neo-api-openal.ads:1257:90   - Unknown word (Listeneri)          -- External_Name => "alListeneri";
Engine/neo-api-openal.ads:1259:13   - Unknown word (Changing)           -- -- 4.2.2. Changing Listener Attributes
Engine/neo-api-openal.ads:125:6     - Unknown word (FREQUENCY)    -- AL_FREQUENCY : constant Int_Unsigned
Engine/neo-api-openal.ads:1260:15   - Unknown word (Listenerfv)         -- procedure alListenerfv (param  : Int_Unsigned
Engine/neo-api-openal.ads:1266:13   - Unknown word (Changing)           -- -- 4.2.2. Changing Listener Attributes
Engine/neo-api-openal.ads:1267:15   - Unknown word (Listenerfv)         -- procedure alListenerfv (param  : Int_Unsigned
Engine/neo-api-openal.ads:1269:91   - Unknown word (Listenerfv)         -- External_Name => "alListenerfv";
Engine/neo-api-openal.ads:126:6     - Unknown word (BITS)         -- AL_BITS : constant Int
Engine/neo-api-openal.ads:1272:15   - Unknown word (Listeneriv)         -- procedure alListeneriv (param  : Int_Unsigned
Engine/neo-api-openal.ads:1274:91   - Unknown word (Listeneriv)         -- External_Name => "alListeneriv";
Engine/neo-api-openal.ads:1276:13   - Unknown word (Querying)           -- -- 4.2.3. Querying Listener Attributes
Engine/neo-api-openal.ads:1277:18   - Unknown word (Listenerf)          -- procedure alGetListenerf (param : Int_Unsigned
Engine/neo-api-openal.ads:1278:37   - Unknown word (Pointer)            -- Value : Pointer) --
Engine/neo-api-openal.ads:1279:96   - Unknown word (Listenerf)          -- External_Name => "alGetListenerf";
Engine/neo-api-openal.ads:1281:13   - Unknown word (Querying)           -- -- 4.2.3. Querying Listener Attributes
Engine/neo-api-openal.ads:1283:39   - Unknown word (Pointer)            -- value1 : Pointer; --
Engine/neo-api-openal.ads:1284:39   - Unknown word (Pointer)            -- value2 : Pointer; --
Engine/neo-api-openal.ads:1285:39   - Unknown word (Pointer)            -- value3 : Pointer) --
Engine/neo-api-openal.ads:1288:13   - Unknown word (Querying)           -- -- 4.2.3. Querying Listener Attributes
Engine/neo-api-openal.ads:1289:18   - Unknown word (Listenerfv)        -- procedure alGetListenerfv (param : Int_Unsigned
Engine/neo-api-openal.ads:1290:39   - Unknown word (Pointer)           -- values : Pointer) --
Engine/neo-api-openal.ads:1291:97   - Unknown word (Listenerfv)        -- External_Name => "alGetListenerfv";
Engine/neo-api-openal.ads:1293:13   - Unknown word (Querying)          -- -- 4.2.3. Querying Listener Attributes
Engine/neo-api-openal.ads:1294:18   - Unknown word (Listeneri)         -- procedure alGetListeneri (param : Int_Unsigned
Engine/neo-api-openal.ads:1296:96   - Unknown word (Listeneri)         -- External_Name => "alGetListeneri";
Engine/neo-api-openal.ads:1298:13   - Unknown word (Querying)          -- -- 4.2.3. Querying Listener Attributes
Engine/neo-api-openal.ads:1306:18   - Unknown word (Listeneriv)        -- procedure alGetListeneriv (param : Int_Unsigned
Engine/neo-api-openal.ads:1308:97   - Unknown word (Listeneriv)        -- External_Name => "alGetListeneriv";
Engine/neo-api-openal.ads:130:13    - Unknown word (Specifying)   -- -- 5.3.4. Specifying Buffer Content
Engine/neo-api-openal.ads:1310:13   - Unknown word (Managing)          -- -- 4.3.1. Managing Source Names
Engine/neo-api-openal.ads:1311:53   - Unknown word (Lsizei)            -- : Int_Size_C; -- ALsizei
Engine/neo-api-openal.ads:1315:13   - Unknown word (Managing)          -- -- 4.3.1. Managing Source Names
Engine/neo-api-openal.ads:1316:56   - Unknown word (Lsizei)            -- : Int_Size_C; -- ALsizei
Engine/neo-api-openal.ads:131:13    - Unknown word (MONO)         -- AL_FORMAT_MONO8 : constant Int_Unsigned
Engine/neo-api-openal.ads:1321:15   - Unknown word (Sourcef)           -- procedure alSourcef (sid   : Int_Unsigned
Engine/neo-api-openal.ads:1324:88   - Unknown word (Sourcef)           -- External_Name => "alSourcef";
Engine/neo-api-openal.ads:132:13    - Unknown word (MONO)         -- AL_FORMAT_MONO16 : constant Int_Unsigned
Engine/neo-api-openal.ads:1335:15   - Unknown word (Sourcei)           -- procedure alSourcei (sid   : Int_Unsigned
Engine/neo-api-openal.ads:1338:88   - Unknown word (Sourcei)           -- External_Name => "alSourcei";
Engine/neo-api-openal.ads:133:13    - Unknown word (STEREO)       -- AL_FORMAT_STEREO8 : constant Int_Unsigned
Engine/neo-api-openal.ads:1349:15   - Unknown word (Sourcefv)          -- procedure alSourcefv (sid    : Int_Unsigned
Engine/neo-api-openal.ads:134:13    - Unknown word (STEREO)       -- AL_FORMAT_STEREO16 : constant Int_Unsigned
Engine/neo-api-openal.ads:1352:89   - Unknown word (Sourcefv)          -- External_Name => "alSourcefv";
Engine/neo-api-openal.ads:1355:15   - Unknown word (Sourceiv)          -- procedure alSourceiv (sid : Int_Unsigned
Engine/neo-api-openal.ads:1358:89   - Unknown word (Sourceiv)          -- External_Name => "alSourceiv";
Engine/neo-api-openal.ads:1361:18   - Unknown word (Sourcef)           -- procedure alGetSourcef (sid   : Int_Unsigned
Engine/neo-api-openal.ads:1363:35   - Unknown word (Poin)              -- value : Poin) --
Engine/neo-api-openal.ads:1364:94   - Unknown word (Sourcef)           -- External_Name => "alGetSourcef";
Engine/neo-api-openal.ads:1375:18   - Unknown word (Sourcefv)          -- procedure alGetSourcefv (sid    : Int_Unsigned
Engine/neo-api-openal.ads:1378:95   - Unknown word (Sourcefv)          -- External_Name => "alGetSourcefv";
Engine/neo-api-openal.ads:137:7     - Unknown word (FALSE)        -- ALC_FALSE : constant Int_8_Unsigned
Engine/neo-api-openal.ads:1381:18   - Unknown word (Sourcei)           -- procedure alGetSourcei (sid   : Int_Unsigned
Engine/neo-api-openal.ads:1384:94   - Unknown word (Sourcei)           -- External_Name => "alGetSourcei";
Engine/neo-api-openal.ads:138:7     - Unknown word (TRUE)         -- ALC_TRUE : constant Int_8_Unsigned
Engine/neo-api-openal.ads:1395:18   - Unknown word (Sourceiv)          -- procedure alGetSourceiv (sid    : Int_Unsigned
Engine/neo-api-openal.ads:1398:95   - Unknown word (Sourceiv)          -- External_Name => "alGetSourceiv";
Engine/neo-api-openal.ads:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-api-openal.ads:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-api-openal.ads:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-api-openal.ads:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-api-openal.ads:1402:38   - Unknown word (Entries)           -- numEntries : Int_Size_C; -- ALsizei
Engine/neo-api-openal.ads:1403:35   - Unknown word (bids)              -- bids : Pointer) --
Engine/neo-api-openal.ads:1407:21   - Unknown word (Unqueue)           -- procedure alSourceUnqueueBuffers (sid
Engine/neo-api-openal.ads:1408:40   - Unknown word (Entries)           -- numEntries : Int_Size_C; -- ALsizei
Engine/neo-api-openal.ads:1409:37   - Unknown word (bids)              -- bids : Pointer) --
Engine/neo-api-openal.ads:1410:107  - Unknown word (Unqueue)           -- External_Name => "alSourceUnqueueBuffers";
Engine/neo-api-openal.ads:1412:13   - Unknown word (Managing)          -- -- 4.3.6. Managing Source Execution
Engine/neo-api-openal.ads:1413:21   - Unknown word (Playv)             -- procedure alSourcePlayv (ns   : Int_Size_C;
Engine/neo-api-openal.ads:1414:28   - Unknown word (sids)              -- sids : Pointer) --
Engine/neo-api-openal.ads:1415:98   - Unknown word (Playv)             -- External_Name => "alSourcePlayv";
Engine/neo-api-openal.ads:1417:13   - Unknown word (Managing)          -- -- 4.3.6. Managing Source Execution
Engine/neo-api-openal.ads:1418:21   - Unknown word (Play)              -- procedure alSourcePlay (sid : UInt) --
Engine/neo-api-openal.ads:1419:97   - Unknown word (Play)              -- External_Name => "alSourcePlay";
Engine/neo-api-openal.ads:141:7     - Unknown word (FREQUENCY)    -- ALC_FREQUENCY : constant Int
Engine/neo-api-openal.ads:1422:21   - Unknown word (Stopv)             -- procedure alSourceStopv (ns   : Int_Size_C;
Engine/neo-api-openal.ads:1423:28   - Unknown word (sids)              -- sids : Pointer) --
Engine/neo-api-openal.ads:1424:98   - Unknown word (Stopv)             -- External_Name => "alSourceStopv";
Engine/neo-api-openal.ads:1431:21   - Unknown word (Rewindv)           -- procedure alSourceRewindv (ns   : Int_Size_C;
Engine/neo-api-openal.ads:1432:30   - Unknown word (sids)              -- sids : Pointer) --
Engine/neo-api-openal.ads:1433:100  - Unknown word (Rewindv)           -- External_Name => "alSourceRewindv";
Engine/neo-api-openal.ads:1436:21   - Unknown word (Rewind)            -- procedure alSourceRewind (sid : UInt) --
Engine/neo-api-openal.ads:1437:99   - Unknown word (Rewind)            -- External_Name => "alSourceRewind";
Engine/neo-api-openal.ads:1440:21   - Unknown word (Pausev)            -- procedure alSourcePausev (ns : Int_Size_C; -
Engine/neo-api-openal.ads:1442:99   - Unknown word (Pausev)            -- External_Name => "alSourcePausev";
Engine/neo-api-openal.ads:1445:21   - Unknown word (Pause)             -- procedure alSourcePause (sid : UInt) --
Engine/neo-api-openal.ads:1446:98   - Unknown word (Pause)             -- External_Name => "alSourcePause";
Engine/neo-api-openal.ads:144:7     - Unknown word (MONO)         -- ALC_MONO_SOURCES : constant
Engine/neo-api-openal.ads:1451:65   - Unknown word (Lvoid)             -- -- const ALvoid*
Engine/neo-api-openal.ads:1457:15   - Unknown word (Bufferf)           -- procedure alBufferf (bid   : Int_Unsigned
Engine/neo-api-openal.ads:145:7     - Unknown word (STEREO)       -- ALC_STEREO_SOURCES : constant Int
Engine/neo-api-openal.ads:1460:88   - Unknown word (Bufferf)           -- External_Name => "alBufferf";
Engine/neo-api-openal.ads:1471:15   - Unknown word (Bufferi)           -- procedure alBufferi (bid : Int_Unsigned
Engine/neo-api-openal.ads:1474:88   - Unknown word (Bufferi)           -- External_Name => "alBufferi";
Engine/neo-api-openal.ads:1485:15   - Unknown word (Bufferfv)          -- procedure alBufferfv (bid : Int_Unsigned
Engine/neo-api-openal.ads:1488:89   - Unknown word (Bufferfv)         -- External_Name => "alBufferfv";
Engine/neo-api-openal.ads:1491:15   - Unknown word (Bufferiv)         -- procedure alBufferiv (bid : Int_Unsigned
Engine/neo-api-openal.ads:1494:89   - Unknown word (Bufferiv)         -- External_Name => "alBufferiv";
Engine/neo-api-openal.ads:1497:18   - Unknown word (Bufferf)          -- procedure alGetBufferf (bid : Int_Unsigned
Engine/neo-api-openal.ads:149:7     - Unknown word (INVALID)      -- ALC_INVALID_DEVICE : constant Int
Engine/neo-api-openal.ads:1500:94   - Unknown word (Bufferf)          -- External_Name => "alGetBufferf";
Engine/neo-api-openal.ads:1511:18   - Unknown word (Bufferfv)         -- procedure alGetBufferfv (bid : Int_Unsigned
Engine/neo-api-openal.ads:1514:95   - Unknown word (Bufferfv)         -- External_Name => "alGetBufferfv";
Engine/neo-api-openal.ads:1517:18   - Unknown word (Bufferi)          -- procedure alGetBufferi (bid : Int_Unsigned
Engine/neo-api-openal.ads:1520:94   - Unknown word (Bufferi)          -- External_Name => "alGetBufferi";
Engine/neo-api-openal.ads:1531:18   - Unknown word (Bufferiv)         -- procedure alGetBufferiv (bid    : Int_Unsigned
Engine/neo-api-openal.ads:1532:58   - Unknown word (Cenum)            -- Int_Unsigned_C; -- ALCenum
Engine/neo-api-openal.ads:1534:95   - Unknown word (Bufferiv)         -- External_Name => "alGetBufferiv";
Engine/neo-api-openal.ads:1536:13   - Unknown word (Connecting)       -- -- 6.1.1. Connecting to a Device
Engine/neo-api-openal.ads:1537:40   - Unknown word (String)           -- alcOpenDevice (devicename : String) -- ALCchar*
Engine/neo-api-openal.ads:1537:53   - Unknown word (Cchar)            -- devicename : String) -- ALCchar*
Engine/neo-api-openal.ads:1538:43   - Unknown word (Cdevice)          -- return Ptr -- ALCdevice*
Engine/neo-api-openal.ads:153:14    - Unknown word (MEMORY)       -- ALC_OUT_OF_MEMORY : constant Int_Unsigned
Engine/neo-api-openal.ads:1541:13   - Unknown word (Disconnecting)    -- -- 6.1.2. Disconnecting from a Device
Engine/neo-api-openal.ads:1542:57   - Unknown word (Cdevice)          -- Ptr) -- ALCdevice*
Engine/neo-api-openal.ads:1543:57   - Unknown word (Cboolean)         -- Int_8_Unsigned_C -- ALCboolean
Engine/neo-api-openal.ads:1546:13   - Unknown word (Creating)         -- -- 6.2.2. Creating a Context
Engine/neo-api-openal.ads:1547:51   - Unknown word (Cdevice)          -- device : Ptr; -- ALCdevice*
Engine/neo-api-openal.ads:1548:30   - Unknown word (attrlist)         -- attrlist : Pointer) -- ALCint
Engine/neo-api-openal.ads:1548:55   - Unknown word (Cint)             -- attrlist : Pointer) -- ALCint*
Engine/neo-api-openal.ads:1549:46   - Unknown word (Ccontext)         -- return Ptr -- ALCcontext*
Engine/neo-api-openal.ads:1552:13   - Unknown word (Selecting)        -- -- 6.2.3. Selecting a Context for Operation
Engine/neo-api-openal.ads:1553:64   - Unknown word (Ccontext)         -- Ptr) -- ALCcontext*
Engine/neo-api-openal.ads:1554:64   - Unknown word (Cboolean)         -- Int_8_Unsigned_C -- ALCboolean
Engine/neo-api-openal.ads:1558:52   - Unknown word (Ccontext)         -- context : Ptr) -- ALCcontext*
Engine/neo-api-openal.ads:155:13    - Unknown word (String)       -- -- 6.3.7. String Query
Engine/neo-api-openal.ads:1562:52   - Unknown word (Ccontext)         -- context : Ptr) -- ALCcontext*
Engine/neo-api-openal.ads:1565:13   - Unknown word (Destroying)       -- -- 6.2.6. Destroying a Context
Engine/neo-api-openal.ads:1566:52   - Unknown word (Ccontext)         -- context : Ptr) -- ALCcontext*
Engine/neo-api-openal.ads:156:22    - Unknown word (SPECIFIER)    -- ALC_DEFAULT_DEVICE_SPECIFIER : constant Int_Unsigned
Engine/neo-api-openal.ads:1574:18   - Unknown word (Contexts)         -- function alcGetContextsDevice (context : Ptr
Engine/neo-api-openal.ads:1575:54   - Unknown word (Cdevice)          -- return Ptr     -- ALCdevice*
Engine/neo-api-openal.ads:1576:102  - Unknown word (Contexts)         -- External_Name => "alcGetContextsDevice";
Engine/neo-api-openal.ads:157:14    - Unknown word (SPECIFIER)    -- ALC_DEVICE_SPECIFIER : constant Int
Engine/neo-api-openal.ads:1580:52   - Unknown word (Cenum)            -- Int_Unsigned_C -- ALCenum
Engine/neo-api-openal.ads:1584:19   - Unknown word (Integerv)         -- procedure alcGetIntegerv (device : Ptr;
Engine/neo-api-openal.ads:1585:67   - Unknown word (Cenum)            -- Unsigned_C; -- ALCenum
Engine/neo-api-openal.ads:1586:70   - Unknown word (Csizei)           -- -- ALCsizei
Engine/neo-api-openal.ads:1587:70   - Unknown word (Cint)             -- Int_32_Signed_C) -- ALCint*
Engine/neo-api-openal.ads:1588:97   - Unknown word (Integerv)         -- External_Name => "alcGetIntegerv";
Engine/neo-api-openal.ads:1590:13   - Unknown word (Capture)          -- -- 6.4.2. Capture
Engine/neo-api-openal.ads:1591:15   - Unknown word (Capture)          -- function alcCaptureCloseDevice (device
Engine/neo-api-openal.ads:1592:64   - Unknown word (Cboolean)         -- Int_8_Unsigned_C -- ALCboolean
Engine/neo-api-openal.ads:1593:100  - Unknown word (Capture)          -- External_Name => "alcCaptureCloseDevice";
Engine/neo-api-openal.ads:1595:13   - Unknown word (Capture)          -- -- 6.4.2. Capture
Engine/neo-api-openal.ads:1605:58   - Unknown word (Cvoid)            -- : Ptr;        -- ALCvoid*
Engine/neo-api-openal.ads:1606:32   - Unknown word (samps)            -- samps : Int_Size_C) -- ALCsizei
Engine/neo-api-openal.ads:1606:58   - Unknown word (Csizei)           -- : Int_Size_C) -- ALCsizei
Engine/neo-api-openal.ads:1609:10   - Unknown word (Lvoid)            -- typedef ALvoid (AL_APIENTRY*PFNALBUFFERDATAS
Engine/neo-api-openal.ads:1609:20   - Unknown word (APIENTRY)         -- typedef ALvoid (AL_APIENTRY*PFNALBUFFERDATASTATICPROC
Engine/neo-api-openal.ads:1609:29   - Unknown word (PFNALBUFFERDATASTATICPROC) -- ALvoid (AL_APIENTRY*PFNALBUFFERDATASTATICPROC)(const ALint,ALenum
Engine/neo-api-openal.ads:1609:76   - Unknown word (Lvoid)                     -- const ALint,ALenum,ALvoid*,ALsizei,ALsizei);
Engine/neo-api-openal.ads:1611:18   - Unknown word (APIENTRY)                  -- AL_API ALvoid AL_APIENTRY alBufferDataStatic(const
Engine/neo-api-openal.ads:1611:9    - Unknown word (Lvoid)                     -- AL_API ALvoid AL_APIENTRY alBufferDataStati
Engine/neo-api-openal.ads:1612:18   - Unknown word (APIENTRY)                  -- typedef void (AL_APIENTRY*LPALFOLDBACKCALLBACK
Engine/neo-api-openal.ads:1612:27   - Unknown word (LPALFOLDBACKCALLBACK)      -- typedef void (AL_APIENTRY*LPALFOLDBACKCALLBACK)(ALenum,ALsizei);
Engine/neo-api-openal.ads:1612:9    - Unknown word (void)                      -- typedef void (AL_APIENTRY*LPALFOLDBACKCALL
Engine/neo-api-openal.ads:1613:18   - Unknown word (APIENTRY)                  -- typedef void (AL_APIENTRY*LPALREQUESTFOLDBACKSTART
Engine/neo-api-openal.ads:1613:27   - Unknown word (LPALREQUESTFOLDBACKSTART)  -- typedef void (AL_APIENTRY*LPALREQUESTFOLDBACKSTART)(ALenum,ALsizei,ALsizei
Engine/neo-api-openal.ads:1613:85   - Unknown word (LPALFOLDBACKCALLBACK)      -- ALsizei,ALsizei,ALfloat*,LPALFOLDBACKCALLBACK);
Engine/neo-api-openal.ads:1613:9    - Unknown word (void)                      -- typedef void (AL_APIENTRY*LPALREQUESTFOLDB
Engine/neo-api-openal.ads:1614:18   - Unknown word (APIENTRY)                  -- typedef void (AL_APIENTRY*LPALREQUESTFOLDBACKSTOP
Engine/neo-api-openal.ads:1614:27   - Unknown word (LPALREQUESTFOLDBACKSTOP)   -- typedef void (AL_APIENTRY*LPALREQUESTFOLDBACKSTOP)(void);
Engine/neo-api-openal.ads:1614:52   - Unknown word (void)                      -- LPALREQUESTFOLDBACKSTOP)(void);
Engine/neo-api-openal.ads:1614:9    - Unknown word (void)                      -- typedef void (AL_APIENTRY*LPALREQUESTFOLDB
Engine/neo-api-openal.ads:1616:102  - Unknown word (LPALFOLDBACKCALLBACK)      -- length,ALfloat *mem,LPALFOLDBACKCALLBACK callback);
Engine/neo-api-openal.ads:1616:123  - Unknown word (callback)                  -- LPALFOLDBACKCALLBACK callback);
Engine/neo-api-openal.ads:1616:34   - Unknown word (Foldback)                  -- AL_APIENTRY alRequestFoldbackStart(ALenum mode,ALsizei
Engine/neo-api-openal.ads:1616:55   - Unknown word (mode)                      -- alRequestFoldbackStart(ALenum mode,ALsizei count,ALsizei
Engine/neo-api-openal.ads:1616:8    - Unknown word (void)                      -- AL_API void AL_APIENTRY alRequestFoldback
Engine/neo-api-openal.ads:1616:82   - Unknown word (length)                    -- ALsizei count,ALsizei length,ALfloat *mem,LPALFOLDBACKCALL
Engine/neo-api-openal.ads:1617:34   - Unknown word (Foldback)                  -- AL_APIENTRY alRequestFoldbackStop(void);
Engine/neo-api-openal.ads:1618:27   - Unknown word (LPALFOLDBACKCALLBACK)      -- typedef void (AL_APIENTRY*LPALFOLDBACKCALLBACK)(ALenum,ALsizei);
Engine/neo-api-openal.ads:1619:27   - Unknown word (LPALREQUESTFOLDBACKSTART)  -- typedef void (AL_APIENTRY*LPALREQUESTFOLDBACKSTART)(ALenum,ALsizei,ALsizei
Engine/neo-api-openal.ads:1619:85   - Unknown word (LPALFOLDBACKCALLBACK)      -- ALsizei,ALsizei,ALfloat*,LPALFOLDBACKCALLBACK);
Engine/neo-api-openal.ads:1620:27   - Unknown word (LPALREQUESTFOLDBACKSTOP)   -- typedef void (AL_APIENTRY*LPALREQUESTFOLDBACKSTOP)(void);
Engine/neo-api-openal.ads:1622:123  - Unknown word (callback)                  -- LPALFOLDBACKCALLBACK callback);
Engine/neo-api-openal.ads:1622:34   - Unknown word (Foldback)                  -- AL_APIENTRY alRequestFoldbackStart(ALenum mode,ALsizei
Engine/neo-api-openal.ads:1622:55   - Unknown word (mode)                      -- alRequestFoldbackStart(ALenum mode,ALsizei count,ALsizei
Engine/neo-api-openal.ads:1622:82   - Unknown word (length)                    -- ALsizei count,ALsizei length,ALfloat *mem,LPALFOLDBACKCALL
Engine/neo-api-openal.ads:1623:34   - Unknown word (Foldback)                  -- AL_APIENTRY alRequestFoldbackStop(void);
Engine/neo-api-openal.ads:1624:27   - Unknown word (LPALBUFFERSAMPLESSOFT)     -- typedef void (AL_APIENTRY*LPALBUFFERSAMPLESSOFT)(ALuint,ALuint,ALenum
Engine/neo-api-openal.ads:1625:27   - Unknown word (LPALBUFFERSUBSAMPLESSOFT)  -- typedef void (AL_APIENTRY*LPALBUFFERSUBSAMPLESSOFT)(ALuint,ALsizei,ALsizei
Engine/neo-api-openal.ads:1626:27   - Unknown word (LPALGETBUFFERSAMPLESSOFT)  -- typedef void (AL_APIENTRY*LPALGETBUFFERSAMPLESSOFT)(ALuint,ALsizei,ALsizei
Engine/neo-api-openal.ads:1627:32   - Unknown word (LPALISBUFFERFORMATSUPPORTEDSOFT) -- ALboolean (AL_APIENTRY*LPALISBUFFERFORMATSUPPORTEDSOFT)(ALenum);
Engine/neo-api-openal.ads:1629:67   - Unknown word (samplerate)                      -- ALuint buffer, ALuint samplerate, ALenum internalformat
Engine/neo-api-openal.ads:1629:86   - Unknown word (internalformat)                  -- ALuint samplerate, ALenum internalformat, ALsizei samples, ALenum
Engine/neo-api-openal.ads:1630:71   - Unknown word (offset)                          -- ALuint buffer, ALsizei offset, ALsizei samples, ALenum
Engine/neo-api-openal.ads:1631:71   - Unknown word (offset)                          -- ALuint buffer, ALsizei offset, ALsizei samples, ALenum
Engine/neo-api-openal.ads:1634:27   - Unknown word (LPALSOURCEDSOFT)                 -- typedef void (AL_APIENTRY*LPALSOURCEDSOFT)(ALuint,ALenum,ALdouble
Engine/neo-api-openal.ads:1634:59   - Unknown word (Ldouble)                         -- ALSOURCEDSOFT)(ALuint,ALenum,ALdouble);
Engine/neo-api-openal.ads:1635:27   - Unknown word (LPALSOURCE)                      -- typedef void (AL_APIENTRY*LPALSOURCE3DSOFT)(ALuint,ALenum
Engine/neo-api-openal.ads:1635:38   - Unknown word (DSOFT)                           -- APIENTRY*LPALSOURCE3DSOFT)(ALuint,ALenum,ALdouble
Engine/neo-api-openal.ads:1636:27   - Unknown word (LPALSOURCEDVSOFT)                -- typedef void (AL_APIENTRY*LPALSOURCEDVSOFT)(ALuint,ALenum,const
Engine/neo-api-openal.ads:1637:27   - Unknown word (LPALGETSOURCEDSOFT)              -- typedef void (AL_APIENTRY*LPALGETSOURCEDSOFT)(ALuint,ALenum,ALdouble
Engine/neo-api-openal.ads:1638:27   - Unknown word (LPALGETSOURCE)                   -- typedef void (AL_APIENTRY*LPALGETSOURCE3DSOFT)(ALuint,ALenum
Engine/neo-api-openal.ads:1638:41   - Unknown word (DSOFT)                           -- APIENTRY*LPALGETSOURCE3DSOFT)(ALuint,ALenum,ALdouble
Engine/neo-api-openal.ads:1639:27   - Unknown word (LPALGETSOURCEDVSOFT)             -- typedef void (AL_APIENTRY*LPALGETSOURCEDVSOFT)(ALuint,ALenum,ALdouble
Engine/neo-api-openal.ads:163:7     - Unknown word (MAJOR)        -- ALC_MAJOR_VERSION : constant
Engine/neo-api-openal.ads:1640:27   - Unknown word (LPALSOURCEI)                     -- typedef void (AL_APIENTRY*LPALSOURCEI64SOFT)(ALuint,ALenum
Engine/neo-api-openal.ads:1641:27   - Unknown word (LPALSOURCE)                      -- typedef void (AL_APIENTRY*LPALSOURCE3I64SOFT)(ALuint,ALenum
Engine/neo-api-openal.ads:1642:27   - Unknown word (LPALSOURCEI)                     -- typedef void (AL_APIENTRY*LPALSOURCEI64VSOFT)(ALuint,ALenum
Engine/neo-api-openal.ads:1642:40   - Unknown word (VSOFT)                           -- APIENTRY*LPALSOURCEI64VSOFT)(ALuint,ALenum,const
Engine/neo-api-openal.ads:1643:27   - Unknown word (LPALGETSOURCEI)                  -- typedef void (AL_APIENTRY*LPALGETSOURCEI64SOFT)(ALuint,ALenum
Engine/neo-api-openal.ads:1644:27   - Unknown word (LPALGETSOURCE)                   -- typedef void (AL_APIENTRY*LPALGETSOURCE3I64SOFT)(ALuint,ALenum
Engine/neo-api-openal.ads:1645:27   - Unknown word (LPALGETSOURCEI)                  -- typedef void (AL_APIENTRY*LPALGETSOURCEI64VSOFT)(ALuint,ALenum
Engine/neo-api-openal.ads:1645:43   - Unknown word (VSOFT)                           -- APIENTRY*LPALGETSOURCEI64VSOFT)(ALuint,ALenum,ALint
Engine/neo-api-openal.ads:1647:27   - Unknown word (Sourced)                         -- API void AL_APIENTRY alSourcedSOFT(ALuint source, ALenum
Engine/neo-api-openal.ads:1649:27   - Unknown word (Sourcedv)                        -- API void AL_APIENTRY alSourcedvSOFT(ALuint source, ALenum
Engine/neo-api-openal.ads:1650:30   - Unknown word (Sourced)                         -- void AL_APIENTRY alGetSourcedSOFT(ALuint source, ALenum
Engine/neo-api-openal.ads:1652:30   - Unknown word (Sourcedv)                        -- void AL_APIENTRY alGetSourcedvSOFT(ALuint source, ALenum
Engine/neo-api-openal.ads:1653:27   - Unknown word (Sourcei)                         -- API void AL_APIENTRY alSourcei64SOFT(ALuint source
Engine/neo-api-openal.ads:1661:28   - Unknown word (LPALGENEFFECTS)                  -- typedef void (AL_APIENTRY *LPALGENEFFECTS)(ALsizei, ALuint*);
Engine/neo-api-openal.ads:1662:28   - Unknown word (LPALDELETEEFFECTS)               -- typedef void (AL_APIENTRY *LPALDELETEEFFECTS)(ALsizei, const ALuint
Engine/neo-api-openal.ads:1663:33   - Unknown word (LPALISEFFECT)                    -- ALboolean (AL_APIENTRY *LPALISEFFECT)(ALuint);
Engine/neo-api-openal.ads:1664:28   - Unknown word (LPALEFFECTI)                     -- typedef void (AL_APIENTRY *LPALEFFECTI)(ALuint, ALenum, ALint
Engine/neo-api-openal.ads:1665:28   - Unknown word (LPALEFFECTIV)                    -- typedef void (AL_APIENTRY *LPALEFFECTIV)(ALuint, ALenum, const
Engine/neo-api-openal.ads:1666:28   - Unknown word (LPALEFFECTF)                     -- typedef void (AL_APIENTRY *LPALEFFECTF)(ALuint, ALenum, ALfloat
Engine/neo-api-openal.ads:1667:28   - Unknown word (LPALEFFECTFV)                   -- typedef void (AL_APIENTRY *LPALEFFECTFV)(ALuint, ALenum, const
Engine/neo-api-openal.ads:1668:28   - Unknown word (LPALGETEFFECTI)                 -- typedef void (AL_APIENTRY *LPALGETEFFECTI)(ALuint, ALenum, ALint
Engine/neo-api-openal.ads:1669:28   - Unknown word (LPALGETEFFECTIV)                -- typedef void (AL_APIENTRY *LPALGETEFFECTIV)(ALuint, ALenum, ALint
Engine/neo-api-openal.ads:166:13    - Unknown word (Capture)      -- -- 6.4.2. Capture
Engine/neo-api-openal.ads:1670:28   - Unknown word (LPALGETEFFECTF)                 -- typedef void (AL_APIENTRY *LPALGETEFFECTF)(ALuint, ALenum, ALfloat
Engine/neo-api-openal.ads:1671:28   - Unknown word (LPALGETEFFECTFV)                -- typedef void (AL_APIENTRY *LPALGETEFFECTFV)(ALuint, ALenum, ALfloat
Engine/neo-api-openal.ads:1674:28   - Unknown word (LPALGENFILTERS)                 -- typedef void (AL_APIENTRY *LPALGENFILTERS)(ALsizei, ALuint*);
Engine/neo-api-openal.ads:1675:28   - Unknown word (LPALDELETEFILTERS)              -- typedef void (AL_APIENTRY *LPALDELETEFILTERS)(ALsizei, const ALuint
Engine/neo-api-openal.ads:1676:33   - Unknown word (LPALISFILTER)                   -- ALboolean (AL_APIENTRY *LPALISFILTER)(ALuint);
Engine/neo-api-openal.ads:1677:28   - Unknown word (LPALFILTERI)                    -- typedef void (AL_APIENTRY *LPALFILTERI)(ALuint, ALenum, ALint
Engine/neo-api-openal.ads:1678:28   - Unknown word (LPALFILTERIV)                   -- typedef void (AL_APIENTRY *LPALFILTERIV)(ALuint, ALenum, const
Engine/neo-api-openal.ads:1679:28   - Unknown word (LPALFILTERF)                    -- typedef void (AL_APIENTRY *LPALFILTERF)(ALuint, ALenum, ALfloat
Engine/neo-api-openal.ads:167:22    - Unknown word (SPECIFIER)    -- ALC_CAPTURE_DEVICE_SPECIFIER : constant Int
Engine/neo-api-openal.ads:167:7     - Unknown word (CAPTURE)      -- ALC_CAPTURE_DEVICE_SPECIFIER
Engine/neo-api-openal.ads:1680:28   - Unknown word (LPALFILTERFV)                   -- typedef void (AL_APIENTRY *LPALFILTERFV)(ALuint, ALenum, const
Engine/neo-api-openal.ads:1681:28   - Unknown word (LPALGETFILTERI)                 -- typedef void (AL_APIENTRY *LPALGETFILTERI)(ALuint, ALenum, ALint
Engine/neo-api-openal.ads:1682:28   - Unknown word (LPALGETFILTERIV)                -- typedef void (AL_APIENTRY *LPALGETFILTERIV)(ALuint, ALenum, ALint
Engine/neo-api-openal.ads:1683:28   - Unknown word (LPALGETFILTERF)                 -- typedef void (AL_APIENTRY *LPALGETFILTERF)(ALuint, ALenum, ALfloat
Engine/neo-api-openal.ads:1684:28   - Unknown word (LPALGETFILTERFV)                -- typedef void (AL_APIENTRY *LPALGETFILTERFV)(ALuint, ALenum, ALfloat
Engine/neo-api-openal.ads:1686:6    - Unknown word (Auxiliary)                      -- -- Auxiliary Effect Slot object function
Engine/neo-api-openal.ads:1687:28   - Unknown word (LPALGENAUXILIARYEFFECTSLOTS)    -- typedef void (AL_APIENTRY *LPALGENAUXILIARYEFFECTSLOTS)(ALsizei, ALuint*);
Engine/neo-api-openal.ads:1688:28   - Unknown word (LPALDELETEAUXILIARYEFFECTSLOTS) -- typedef void (AL_APIENTRY *LPALDELETEAUXILIARYEFFECTSLOTS)(ALsizei, const ALuint
Engine/neo-api-openal.ads:1689:33   - Unknown word (LPALISAUXILIARYEFFECTSLOT)      -- ALboolean (AL_APIENTRY *LPALISAUXILIARYEFFECTSLOT)(ALuint);
Engine/neo-api-openal.ads:168:30    - Unknown word (SPECIFIER)    -- CAPTURE_DEFAULT_DEVICE_SPECIFIER : constant Int_Unsigned
Engine/neo-api-openal.ads:168:7     - Unknown word (CAPTURE)      -- ALC_CAPTURE_DEFAULT_DEVICE_SPECIFIER
Engine/neo-api-openal.ads:1690:28   - Unknown word (LPALAUXILIARYEFFECTSLOTI)       -- typedef void (AL_APIENTRY *LPALAUXILIARYEFFECTSLOTI)(ALuint, ALenum, ALint
Engine/neo-api-openal.ads:1691:28   - Unknown word (LPALAUXILIARYEFFECTSLOTIV)      -- typedef void (AL_APIENTRY *LPALAUXILIARYEFFECTSLOTIV)(ALuint, ALenum, const
Engine/neo-api-openal.ads:1692:28   - Unknown word (LPALAUXILIARYEFFECTSLOTF)       -- typedef void (AL_APIENTRY *LPALAUXILIARYEFFECTSLOTF)(ALuint, ALenum, ALfloat
Engine/neo-api-openal.ads:1693:28   - Unknown word (LPALAUXILIARYEFFECTSLOTFV)      -- typedef void (AL_APIENTRY *LPALAUXILIARYEFFECTSLOTFV)(ALuint, ALenum, const
Engine/neo-api-openal.ads:1694:28   - Unknown word (LPALGETAUXILIARYEFFECTSLOTI)    -- typedef void (AL_APIENTRY *LPALGETAUXILIARYEFFECTSLOTI)(ALuint, ALenum, ALint
Engine/neo-api-openal.ads:1695:28   - Unknown word (LPALGETAUXILIARYEFFECTSLOTIV)   -- typedef void (AL_APIENTRY *LPALGETAUXILIARYEFFECTSLOTIV)(ALuint, ALenum, ALint
Engine/neo-api-openal.ads:1696:28   - Unknown word (LPALGETAUXILIARYEFFECTSLOTF)    -- typedef void (AL_APIENTRY *LPALGETAUXILIARYEFFECTSLOTF)(ALuint, ALenum, ALfloat
Engine/neo-api-openal.ads:1697:28   - Unknown word (LPALGETAUXILIARYEFFECTSLOTFV)   -- typedef void (AL_APIENTRY *LPALGETAUXILIARYEFFECTSLOTFV)(ALuint, ALenum, ALfloat
Engine/neo-api-openal.ads:1699:32   - Unknown word (Effects)                        -- ALvoid AL_APIENTRY alGenEffects(ALsizei n, ALuint *effects
Engine/neo-api-openal.ads:1699:59   - Unknown word (effects)                        -- GenEffects(ALsizei n, ALuint *effects);
Engine/neo-api-openal.ads:169:7     - Unknown word (CAPTURE)      -- ALC_CAPTURE_SAMPLES
Engine/neo-api-openal.ads:16:11     - Unknown word (binding)      -- -- Custom binding to the OpenAL Soft API
Engine/neo-api-openal.ads:16:33     - Unknown word (Soft)         -- binding to the OpenAL Soft API:
Engine/neo-api-openal.ads:1700:35   - Unknown word (Effects)                        -- AL_APIENTRY alDeleteEffects(ALsizei n, const ALuint
Engine/neo-api-openal.ads:1700:68   - Unknown word (effects)                        -- ALsizei n, const ALuint *effects);
Engine/neo-api-openal.ads:1702:29   - Unknown word (Effecti)                        -- ALvoid AL_APIENTRY alEffecti(ALuint effect, ALenum
Engine/neo-api-openal.ads:1703:29   - Unknown word (Effectiv)                       -- ALvoid AL_APIENTRY alEffectiv(ALuint effect, ALenum
Engine/neo-api-openal.ads:1704:29   - Unknown word (Effectf)                        -- ALvoid AL_APIENTRY alEffectf(ALuint effect, ALenum
Engine/neo-api-openal.ads:1705:29   - Unknown word (Effectfv)                       -- ALvoid AL_APIENTRY alEffectfv(ALuint effect, ALenum
Engine/neo-api-openal.ads:1706:32   - Unknown word (Effecti)                        -- ALvoid AL_APIENTRY alGetEffecti(ALuint effect, ALenum
Engine/neo-api-openal.ads:1707:32   - Unknown word (Effectiv)                       -- ALvoid AL_APIENTRY alGetEffectiv(ALuint effect, ALenum
Engine/neo-api-openal.ads:1708:32   - Unknown word (Effectf)                        -- ALvoid AL_APIENTRY alGetEffectf(ALuint effect, ALenum
Engine/neo-api-openal.ads:1709:32   - Unknown word (Effectfv)                       -- ALvoid AL_APIENTRY alGetEffectfv(ALuint effect, ALenum
Engine/neo-api-openal.ads:1714:29   - Unknown word (Filteri)                        -- ALvoid AL_APIENTRY alFilteri(ALuint filter, ALenum
Engine/neo-api-openal.ads:1715:29   - Unknown word (Filteriv)                       -- ALvoid AL_APIENTRY alFilteriv(ALuint filter, ALenum
Engine/neo-api-openal.ads:1716:29   - Unknown word (Filterf)                        -- ALvoid AL_APIENTRY alFilterf(ALuint filter, ALenum
Engine/neo-api-openal.ads:1717:29   - Unknown word (Filterfv)                       -- ALvoid AL_APIENTRY alFilterfv(ALuint filter, ALenum
Engine/neo-api-openal.ads:1718:32   - Unknown word (Filteri)                        -- ALvoid AL_APIENTRY alGetFilteri(ALuint filter, ALenum
Engine/neo-api-openal.ads:1719:32   - Unknown word (Filteriv)                       -- ALvoid AL_APIENTRY alGetFilteriv(ALuint filter, ALenum
Engine/neo-api-openal.ads:1720:32   - Unknown word (Filterf)                        -- ALvoid AL_APIENTRY alGetFilterf(ALuint filter, ALenum
Engine/neo-api-openal.ads:1721:32   - Unknown word (Filterfv)                       -- ALvoid AL_APIENTRY alGetFilterfv(ALuint filter, ALenum
Engine/neo-api-openal.ads:1723:32   - Unknown word (Auxiliary)                      -- ALvoid AL_APIENTRY alGenAuxiliaryEffectSlots(ALsizei n
Engine/neo-api-openal.ads:1723:47   - Unknown word (Slots)                          -- alGenAuxiliaryEffectSlots(ALsizei n, ALuint *effectslot
Engine/neo-api-openal.ads:1723:72   - Unknown word (effectslots)                    -- ffectSlots(ALsizei n, ALuint *effectslots);
Engine/neo-api-openal.ads:1724:35   - Unknown word (Auxiliary)                      -- AL_APIENTRY alDeleteAuxiliaryEffectSlots(ALsizei n
Engine/neo-api-openal.ads:1724:50   - Unknown word (Slots)                         -- alDeleteAuxiliaryEffectSlots(ALsizei n, const ALuint
Engine/neo-api-openal.ads:1724:81   - Unknown word (effectslots)                   -- ALsizei n, const ALuint *effectslots);
Engine/neo-api-openal.ads:1725:61   - Unknown word (effectslot)                    -- lIsAuxiliaryEffectSlot(ALuint effectslot);
Engine/neo-api-openal.ads:1726:44   - Unknown word (Sloti)                         -- APIENTRY alAuxiliaryEffectSloti(ALuint effectslot, ALenum
Engine/neo-api-openal.ads:1726:57   - Unknown word (effectslot)                    -- alAuxiliaryEffectSloti(ALuint effectslot, ALenum param, ALint
Engine/neo-api-openal.ads:1727:44   - Unknown word (Slotiv)                        -- APIENTRY alAuxiliaryEffectSlotiv(ALuint effectslot, ALenum
Engine/neo-api-openal.ads:1727:58   - Unknown word (effectslot)                    -- lAuxiliaryEffectSlotiv(ALuint effectslot, ALenum param, const
Engine/neo-api-openal.ads:1728:44   - Unknown word (Slotf)                         -- APIENTRY alAuxiliaryEffectSlotf(ALuint effectslot, ALenum
Engine/neo-api-openal.ads:1728:57   - Unknown word (effectslot)                    -- alAuxiliaryEffectSlotf(ALuint effectslot, ALenum param, ALfloat
Engine/neo-api-openal.ads:1729:44   - Unknown word (Slotfv)                        -- APIENTRY alAuxiliaryEffectSlotfv(ALuint effectslot, ALenum
Engine/neo-api-openal.ads:1729:58   - Unknown word (effectslot)                    -- lAuxiliaryEffectSlotfv(ALuint effectslot, ALenum param, const
Engine/neo-api-openal.ads:172:15    - Unknown word (ADPCM)        -- AL_LOKI_IMA_ADPCM_format : constant
Engine/neo-api-openal.ads:172:6     - Unknown word (LOKI)         -- AL_LOKI_IMA_ADPCM_format
Engine/neo-api-openal.ads:1730:47   - Unknown word (Sloti)                         -- alGetAuxiliaryEffectSloti(ALuint effectslot, ALenum
Engine/neo-api-openal.ads:1731:47   - Unknown word (Slotiv)                        -- alGetAuxiliaryEffectSlotiv(ALuint effectslot, ALenum
Engine/neo-api-openal.ads:1732:47   - Unknown word (Slotf)                         -- alGetAuxiliaryEffectSlotf(ALuint effectslot, ALenum
Engine/neo-api-openal.ads:1733:47   - Unknown word (Slotfv)                        -- alGetAuxiliaryEffectSlotfv(ALuint effectslot, ALenum
Engine/neo-api-openal.ads:173:17    - Unknown word (ADPCM)        -- AL_FORMAT_IMA_ADPCM_MONO16_EXT : constant
Engine/neo-api-openal.ads:173:23    - Unknown word (MONO)         -- AL_FORMAT_IMA_ADPCM_MONO16_EXT : constant
Engine/neo-api-openal.ads:174:17    - Unknown word (ADPCM)        -- AL_FORMAT_IMA_ADPCM_STEREO16_EXT : constant
Engine/neo-api-openal.ads:174:23    - Unknown word (STEREO)       -- AL_FORMAT_IMA_ADPCM_STEREO16_EXT : constant
Engine/neo-api-openal.ads:177:11    - Unknown word (WAVE)         -- AL_LOKI_WAVE_format: constant Int
Engine/neo-api-openal.ads:177:6     - Unknown word (LOKI)         -- AL_LOKI_WAVE_format: constant
Engine/neo-api-openal.ads:178:13    - Unknown word (WAVE)         -- AL_FORMAT_WAVE_EXT
Engine/neo-api-openal.ads:181:10    - Unknown word (vorbis)       -- AL_EXT_vorbis 1
Engine/neo-api-openal.ads:182:13    - Unknown word (VORBIS)       -- AL_FORMAT_VORBIS_EXT
Engine/neo-api-openal.ads:185:11    - Unknown word (quadriphonic) -- AL_LOKI_quadriphonic 1
Engine/neo-api-openal.ads:185:6     - Unknown word (LOKI)         -- AL_LOKI_quadriphonic 1
Engine/neo-api-openal.ads:186:13    - Unknown word (QUAD)         -- AL_FORMAT_QUAD8_LOKI
Engine/neo-api-openal.ads:186:19    - Unknown word (LOKI)         -- AL_FORMAT_QUAD8_LOKI : constant
Engine/neo-api-openal.ads:187:13    - Unknown word (QUAD)         -- AL_FORMAT_QUAD16_LOKI
Engine/neo-api-openal.ads:187:20    - Unknown word (LOKI)         -- AL_FORMAT_QUAD16_LOKI : constant
Engine/neo-api-openal.ads:191:13    - Unknown word (MONO)         -- AL_FORMAT_MONO_FLOAT32 : constant
Engine/neo-api-openal.ads:192:13    - Unknown word (STEREO)       -- AL_FORMAT_STEREO_FLOAT32 : constant
Engine/neo-api-openal.ads:200:10    - Unknown word (MULAW)        -- AL_EXT_MULAW 1
Engine/neo-api-openal.ads:201:18    - Unknown word (MULAW)        -- AL_FORMAT_MONO_MULAW_EXT : constant Int
Engine/neo-api-openal.ads:202:20    - Unknown word (MULAW)        -- AL_FORMAT_STEREO_MULAW_EXT : constant Int_Unsigned
Engine/neo-api-openal.ads:205:10    - Unknown word (ALAW)         -- AL_EXT_ALAW : constant Int_Unsigned
Engine/neo-api-openal.ads:206:18    - Unknown word (ALAW)         -- AL_FORMAT_MONO_ALAW_EXT : constant Int
Engine/neo-api-openal.ads:207:20    - Unknown word (ALAW)         -- AL_FORMAT_STEREO_ALAW_EXT : constant Int_Unsigned
Engine/neo-api-openal.ads:211:12    - Unknown word (MAIN)         -- ALC_CHAN_MAIN_LOKI : constant
Engine/neo-api-openal.ads:211:7     - Unknown word (CHAN)         -- ALC_CHAN_MAIN_LOKI : constant
Engine/neo-api-openal.ads:212:7     - Unknown word (CHAN)         -- ALC_CHAN_PCM_LOKI : constant
Engine/neo-api-openal.ads:213:7     - Unknown word (CHAN)         -- ALC_CHAN_CD_LOKI : constant
Engine/neo-api-openal.ads:216:10    - Unknown word (MCFORMATS)    -- AL_EXT_MCFORMATS : constant Int_Unsigned
Engine/neo-api-openal.ads:217:13    - Unknown word (QUAD)         -- AL_FORMAT_QUAD8 : constant Int_Unsigned
Engine/neo-api-openal.ads:218:13    - Unknown word (QUAD)         -- AL_FORMAT_QUAD16 : constant Int_Unsigned
Engine/neo-api-openal.ads:219:13    - Unknown word (QUAD)         -- AL_FORMAT_QUAD32 : constant Int_Unsigned
Engine/neo-api-openal.ads:220:13    - Unknown word (REAR)         -- AL_FORMAT_REAR8 : constant Int_Unsigned
Engine/neo-api-openal.ads:221:13    - Unknown word (REAR)         -- AL_FORMAT_REAR16 : constant Int_Unsigned
Engine/neo-api-openal.ads:222:13    - Unknown word (REAR)         -- AL_FORMAT_REAR32 : constant Int
Engine/neo-api-openal.ads:234:10    - Unknown word (MULAW)        -- AL_EXT_MULAW_MCFORMATS : constant
Engine/neo-api-openal.ads:234:16    - Unknown word (MCFORMATS)    -- AL_EXT_MULAW_MCFORMATS : constant Int_Unsigned
Engine/neo-api-openal.ads:235:18    - Unknown word (MULAW)        -- AL_FORMAT_MONO_MULAW : constant Int_Unsigned
Engine/neo-api-openal.ads:238:13    - Unknown word (REAR)         -- AL_FORMAT_REAR_MULAW : constant
Engine/neo-api-openal.ads:24:7      - Unknown word (Lvoid)        -- -- ALvoid Ptr
Engine/neo-api-openal.ads:252:17    - Unknown word (distance)     -- AL_EXT_source_distance_model : constant Int
Engine/neo-api-openal.ads:256:6     - Unknown word (SOFT)         -- AL_SOFT_buffer_sub_data : constant
Engine/neo-api-openal.ads:257:14    - Unknown word (OFFSETS)      -- AL_BYTE_RW_OFFSETS_SOFT : constant Int
Engine/neo-api-openal.ads:257:22    - Unknown word (SOFT)         -- AL_BYTE_RW_OFFSETS_SOFT : constant Int_Unsigned
Engine/neo-api-openal.ads:258:16    - Unknown word (OFFSETS)      -- AL_SAMPLE_RW_OFFSETS_SOFT : constant Int
Engine/neo-api-openal.ads:258:24    - Unknown word (SOFT)         -- AL_SAMPLE_RW_OFFSETS_SOFT : constant Int_Unsigned
Engine/neo-api-openal.ads:26:7      - Unknown word (Lsizei)       -- -- ALsizei Int_Size_C
Engine/neo-api-openal.ads:271:11    - Unknown word (MAJOR)        -- ALC_EFX_MAJOR_VERSION : constant
Engine/neo-api-openal.ads:273:11    - Unknown word (AUXILIARY)    -- ALC_MAX_AUXILIARY_SENDS : constant Int
Engine/neo-api-openal.ads:273:21    - Unknown word (SENDS)        -- ALC_MAX_AUXILIARY_SENDS : constant Int_Unsigned
Engine/neo-api-openal.ads:276:6     - Unknown word (SOFT)         -- AL_SOFT_direct_channels : constant
Engine/neo-api-openal.ads:277:22    - Unknown word (SOFT)         -- AL_DIRECT_CHANNELS_SOFT : constant Int_Unsigned
Engine/neo-api-openal.ads:27:21     - Unknown word (Unsigned)     -- -- ALenum     Int_Unsigned_C
Engine/neo-api-openal.ads:27:7      - Unknown word (Lenum)        -- -- ALenum Int_Unsigned_C
Engine/neo-api-openal.ads:287:7     - Unknown word (UNSIGNED)     -- ALC_UNSIGNED_BYTE_SOFT : constant
Engine/neo-api-openal.ads:289:7     - Unknown word (UNSIGNED)     -- ALC_UNSIGNED_SHORT_SOFT: constant
Engine/neo-api-openal.ads:28:23     - Unknown word (Unsigned)     -- -- ALboolean  Int_8_Unsigned_C
Engine/neo-api-openal.ads:28:7      - Unknown word (Lboolean)     -- -- ALboolean Int_8_Unsigned_C
Engine/neo-api-openal.ads:291:7     - Unknown word (UNSIGNED)     -- ALC_UNSIGNED_INT_SOFT : constant
Engine/neo-api-openal.ads:29:23     - Unknown word (Signed)       -- -- ALbyte     Int_8_Signed_C
Engine/neo-api-openal.ads:29:7      - Unknown word (Lbyte)        -- -- ALbyte Int_8_Signed_C
Engine/neo-api-openal.ads:303:23    - Unknown word (ANGLES)       -- ifndef AL_EXT_STEREO_ANGLES
Engine/neo-api-openal.ads:304:17    - Unknown word (ANGLES)       -- AL_EXT_STEREO_ANGLES : constant Int_Unsigned
Engine/neo-api-openal.ads:305:13    - Unknown word (ANGLES)       -- AL_STEREO_ANGLES : constant Int_Unsigned
Engine/neo-api-openal.ads:30:23     - Unknown word (Unsigned)     -- -- ALubyte    Int_8_Unsigned_C
Engine/neo-api-openal.ads:30:7      - Unknown word (Lubyte)       -- -- ALubyte Int_8_Unsigned_C
Engine/neo-api-openal.ads:313:24    - Unknown word (latency)      -- ifndef AL_SOFT_source_latency
Engine/neo-api-openal.ads:314:18    - Unknown word (latency)      -- AL_SOFT_source_latency 1
Engine/neo-api-openal.ads:315:13    - Unknown word (OFFSET)       -- AL_SAMPLE_OFFSET_LATENCY_SOFT : constant
Engine/neo-api-openal.ads:315:20    - Unknown word (LATENCY)      -- AL_SAMPLE_OFFSET_LATENCY_SOFT : constant Int
Engine/neo-api-openal.ads:316:10    - Unknown word (OFFSET)       -- AL_SEC_OFFSET_LATENCY_SOFT : constant
Engine/neo-api-openal.ads:316:17    - Unknown word (LATENCY)      -- AL_SEC_OFFSET_LATENCY_SOFT : constant Int
Engine/neo-api-openal.ads:318:19    - Unknown word (Luint)        -- typedef uint64_t ALuint64SOFT;
Engine/neo-api-openal.ads:31:24     - Unknown word (Signed)       -- - ALshort    Int_16_Signed_C
Engine/neo-api-openal.ads:31:7      - Unknown word (Lshort)       -- -- ALshort Int_16_Signed_C
Engine/neo-api-openal.ads:321:6     - Unknown word (METERS)       -- AL_METERS_PER_UNIT
Engine/neo-api-openal.ads:325:6     - Unknown word (AUXILIARY)    -- AL_AUXILIARY_SEND_FILTER
Engine/neo-api-openal.ads:326:10    - Unknown word (ABSORPTION)   -- AL_AIR_ABSORPTION_FACTOR
Engine/neo-api-openal.ads:327:11    - Unknown word (ROLLOFF)      -- AL_ROOM_ROLLOFF_FACTOR
Engine/neo-api-openal.ads:328:11    - Unknown word (OUTER)        -- AL_CONE_OUTER_GAINHF
Engine/neo-api-openal.ads:328:17    - Unknown word (GAINHF)       -- AL_CONE_OUTER_GAINHF
Engine/neo-api-openal.ads:328:6     - Unknown word (CONE)         -- AL_CONE_OUTER_GAINHF
Engine/neo-api-openal.ads:329:20    - Unknown word (GAINHF)       -- AL_DIRECT_FILTER_GAINHF_AUTO 0x
Engine/neo-api-openal.ads:32:24     - Unknown word (Unsigned)     -- - ALushort   Int_16_Unsigned_C
Engine/neo-api-openal.ads:32:7      - Unknown word (Lushort)      -- -- ALushort Int_16_Unsigned_C
Engine/neo-api-openal.ads:330:28    - Unknown word (GAIN)         -- AUXILIARY_SEND_FILTER_GAIN_AUTO 0x2000B
Engine/neo-api-openal.ads:330:6     - Unknown word (AUXILIARY)    -- AL_AUXILIARY_SEND_FILTER_GAIN_AUTO
Engine/neo-api-openal.ads:331:28    - Unknown word (GAINHF)       -- AUXILIARY_SEND_FILTER_GAINHF_AUTO 0x2000C
Engine/neo-api-openal.ads:331:6     - Unknown word (AUXILIARY)    -- AL_AUXILIARY_SEND_FILTER_GAINHF_AUTO
Engine/neo-api-openal.ads:334:6     - Unknown word (Effect)       -- -- Effect properties
Engine/neo-api-openal.ads:336:13    - Unknown word (effect)       -- -- Reverb effect parameters
Engine/neo-api-openal.ads:336:6     - Unknown word (Reverb)       -- -- Reverb effect parameters
Engine/neo-api-openal.ads:337:13    - Unknown word (DENSITY)      -- AL_REVERB_DENSITY
Engine/neo-api-openal.ads:337:6     - Unknown word (REVERB)       -- AL_REVERB_DENSITY
Engine/neo-api-openal.ads:338:13    - Unknown word (DIFFUSION)    -- AL_REVERB_DIFFUSION
Engine/neo-api-openal.ads:338:6     - Unknown word (REVERB)       -- AL_REVERB_DIFFUSION
Engine/neo-api-openal.ads:339:6     - Unknown word (REVERB)       -- AL_REVERB_GAIN
Engine/neo-api-openal.ads:33:21     - Unknown word (Unsigned)     -- -- ALuint     Int_Unsigned_C
Engine/neo-api-openal.ads:33:7      - Unknown word (Luint)        -- -- ALuint Int_Unsigned_C
Engine/neo-api-openal.ads:340:13    - Unknown word (GAINHF)       -- AL_REVERB_GAINHF
Engine/neo-api-openal.ads:340:6     - Unknown word (REVERB)       -- AL_REVERB_GAINHF
Engine/neo-api-openal.ads:341:13    - Unknown word (DECAY)        -- AL_REVERB_DECAY_TIME
Engine/neo-api-openal.ads:341:6     - Unknown word (REVERB)       -- AL_REVERB_DECAY_TIME
Engine/neo-api-openal.ads:342:13    - Unknown word (DECAY)        -- AL_REVERB_DECAY_HFRATIO
Engine/neo-api-openal.ads:342:19    - Unknown word (HFRATIO)      -- AL_REVERB_DECAY_HFRATIO 00
Engine/neo-api-openal.ads:343:13    - Unknown word (REFLECTIONS)  -- AL_REVERB_REFLECTIONS_GAIN
Engine/neo-api-openal.ads:344:13    - Unknown word (REFLECTIONS)  -- AL_REVERB_REFLECTIONS_DELAY
Engine/neo-api-openal.ads:345:13    - Unknown word (LATE)         -- AL_REVERB_LATE_REVERB_GAIN
Engine/neo-api-openal.ads:346:13    - Unknown word (LATE)         -- AL_REVERB_LATE_REVERB_DELAY
Engine/neo-api-openal.ads:347:17    - Unknown word (ABSORPTION)   -- AL_REVERB_AIR_ABSORPTION_GAINHF 000B
Engine/neo-api-openal.ads:347:28    - Unknown word (GAINHF)       -- REVERB_AIR_ABSORPTION_GAINHF 000B
Engine/neo-api-openal.ads:348:18    - Unknown word (ROLLOFF)      -- AL_REVERB_ROOM_ROLLOFF_FACTOR 0
Engine/neo-api-openal.ads:349:13    - Unknown word (DECAY)        -- AL_REVERB_DECAY_HFLIMIT
Engine/neo-api-openal.ads:349:19    - Unknown word (HFLIMIT)      -- AL_REVERB_DECAY_HFLIMIT 00
Engine/neo-api-openal.ads:34:7      - Unknown word (Lfloat)       -- -- ALfloat Real_32_C
Engine/neo-api-openal.ads:351:10    - Unknown word (Reverb)      -- -- EAX Reverb effect parameters
Engine/neo-api-openal.ads:351:17    - Unknown word (effect)      -- -- EAX Reverb effect parameters
Engine/neo-api-openal.ads:352:16    - Unknown word (DENSITY)     -- AL_EAXREVERB_DENSITY
Engine/neo-api-openal.ads:352:6     - Unknown word (EAXREVERB)   -- AL_EAXREVERB_DENSITY
Engine/neo-api-openal.ads:353:16    - Unknown word (DIFFUSION)   -- AL_EAXREVERB_DIFFUSION 0
Engine/neo-api-openal.ads:353:6     - Unknown word (EAXREVERB)   -- AL_EAXREVERB_DIFFUSION
Engine/neo-api-openal.ads:354:6     - Unknown word (EAXREVERB)   -- AL_EAXREVERB_GAIN
Engine/neo-api-openal.ads:355:6     - Unknown word (EAXREVERB)   -- AL_EAXREVERB_GAINHF
Engine/neo-api-openal.ads:356:16    - Unknown word (GAINLF)      -- AL_EAXREVERB_GAINLF
Engine/neo-api-openal.ads:356:6     - Unknown word (EAXREVERB)   -- AL_EAXREVERB_GAINLF
Engine/neo-api-openal.ads:357:16    - Unknown word (DECAY)       -- AL_EAXREVERB_DECAY_TIME
Engine/neo-api-openal.ads:358:16    - Unknown word (DECAY)       -- AL_EAXREVERB_DECAY_HFRATIO
Engine/neo-api-openal.ads:358:22    - Unknown word (HFRATIO)     -- AL_EAXREVERB_DECAY_HFRATIO 0007
Engine/neo-api-openal.ads:359:22    - Unknown word (LFRATIO)     -- AL_EAXREVERB_DECAY_LFRATIO 0008
Engine/neo-api-openal.ads:35:7      - Unknown word (Ldouble)      -- -- ALdouble Real_64_C
Engine/neo-api-openal.ads:360:16    - Unknown word (REFLECTIONS) -- AL_EAXREVERB_REFLECTIONS_GAIN 000
Engine/neo-api-openal.ads:361:16    - Unknown word (REFLECTIONS) -- AL_EAXREVERB_REFLECTIONS_DELAY 000A
Engine/neo-api-openal.ads:362:16    - Unknown word (REFLECTIONS) -- AL_EAXREVERB_REFLECTIONS_PAN 000B
Engine/neo-api-openal.ads:363:16    - Unknown word (LATE)        -- AL_EAXREVERB_LATE_REVERB_GAIN
Engine/neo-api-openal.ads:364:16    - Unknown word (LATE)        -- AL_EAXREVERB_LATE_REVERB_DELAY
Engine/neo-api-openal.ads:365:16    - Unknown word (LATE)        -- AL_EAXREVERB_LATE_REVERB_PAN
Engine/neo-api-openal.ads:366:16    - Unknown word (ECHO)        -- AL_EAXREVERB_ECHO_TIME
Engine/neo-api-openal.ads:367:16    - Unknown word (ECHO)        -- AL_EAXREVERB_ECHO_DEPTH
Engine/neo-api-openal.ads:367:21    - Unknown word (DEPTH)       -- AL_EAXREVERB_ECHO_DEPTH 00
Engine/neo-api-openal.ads:368:16    - Unknown word (MODULATION)  -- AL_EAXREVERB_MODULATION_TIME 00
Engine/neo-api-openal.ads:369:16    - Unknown word (MODULATION)  -- AL_EAXREVERB_MODULATION_DEPTH 00
Engine/neo-api-openal.ads:369:27    - Unknown word (DEPTH)       -- EAXREVERB_MODULATION_DEPTH 0012
Engine/neo-api-openal.ads:370:20    - Unknown word (ABSORPTION)  -- AL_EAXREVERB_AIR_ABSORPTION_GAINHF 0013
Engine/neo-api-openal.ads:371:16    - Unknown word (HFREFERENCE) -- AL_EAXREVERB_HFREFERENCE 001
Engine/neo-api-openal.ads:372:16    - Unknown word (LFREFERENCE) -- AL_EAXREVERB_LFREFERENCE 001
Engine/neo-api-openal.ads:373:21    - Unknown word (ROLLOFF)     -- AL_EAXREVERB_ROOM_ROLLOFF_FACTOR 0016
Engine/neo-api-openal.ads:374:22    - Unknown word (HFLIMIT)     -- AL_EAXREVERB_DECAY_HFLIMIT 0017
Engine/neo-api-openal.ads:376:13    - Unknown word (effect)      -- -- Chorus effect parameters
Engine/neo-api-openal.ads:376:6     - Unknown word (Chorus)      -- -- Chorus effect parameters
Engine/neo-api-openal.ads:377:13    - Unknown word (WAVEFORM)    -- AL_CHORUS_WAVEFORM
Engine/neo-api-openal.ads:377:6     - Unknown word (CHORUS)      -- AL_CHORUS_WAVEFORM
Engine/neo-api-openal.ads:378:13    - Unknown word (PHASE)       -- AL_CHORUS_PHASE
Engine/neo-api-openal.ads:378:6     - Unknown word (CHORUS)      -- AL_CHORUS_PHASE
Engine/neo-api-openal.ads:379:6     - Unknown word (CHORUS)      -- AL_CHORUS_RATE
Engine/neo-api-openal.ads:37:7      - Unknown word (Lboolean)     -- -- ALboolean* Ptr_Int_8_Unsigned
Engine/neo-api-openal.ads:380:13    - Unknown word (DEPTH)       -- AL_CHORUS_DEPTH
Engine/neo-api-openal.ads:380:6     - Unknown word (CHORUS)      -- AL_CHORUS_DEPTH
Engine/neo-api-openal.ads:381:6     - Unknown word (CHORUS)      -- AL_CHORUS_FEEDBACK
Engine/neo-api-openal.ads:384:17    - Unknown word (effect)      -- -- Distortion effect parameters
Engine/neo-api-openal.ads:384:6     - Unknown word (Distortion)  -- -- Distortion effect parameters
Engine/neo-api-openal.ads:385:17    - Unknown word (EDGE)        -- AL_DISTORTION_EDGE
Engine/neo-api-openal.ads:385:6     - Unknown word (DISTORTION)  -- AL_DISTORTION_EDGE
Engine/neo-api-openal.ads:386:6     - Unknown word (DISTORTION)  -- AL_DISTORTION_GAIN
Engine/neo-api-openal.ads:387:17    - Unknown word (LOWPASS)     -- AL_DISTORTION_LOWPASS_CUTOFF
Engine/neo-api-openal.ads:387:25    - Unknown word (CUTOFF)      -- AL_DISTORTION_LOWPASS_CUTOFF 0003
Engine/neo-api-openal.ads:387:6     - Unknown word (DISTORTION)  -- AL_DISTORTION_LOWPASS_CUTOFF
Engine/neo-api-openal.ads:388:17    - Unknown word (EQCENTER)    -- AL_DISTORTION_EQCENTER 0
Engine/neo-api-openal.ads:388:6     - Unknown word (DISTORTION)  -- AL_DISTORTION_EQCENTER
Engine/neo-api-openal.ads:389:17    - Unknown word (EQBANDWIDTH) -- AL_DISTORTION_EQBANDWIDTH 0005
Engine/neo-api-openal.ads:389:6     - Unknown word (DISTORTION)  -- AL_DISTORTION_EQBANDWIDTH
Engine/neo-api-openal.ads:38:27     - Unknown word (Signed)       -- ALbyte* Ptr_Int_8_Signed_C, Ptr_Array_Int
Engine/neo-api-openal.ads:38:56     - Unknown word (Signed)       -- Ptr_Array_Int_8_Signed_C
Engine/neo-api-openal.ads:38:7      - Unknown word (Lbyte)        -- -- ALbyte* Ptr_Int_8_Signed
Engine/neo-api-openal.ads:391:11    - Unknown word (effect)      -- -- Echo effect parameters
Engine/neo-api-openal.ads:391:6     - Unknown word (Echo)        -- -- Echo effect parameters
Engine/neo-api-openal.ads:392:6     - Unknown word (ECHO)        -- AL_ECHO_DELAY
Engine/neo-api-openal.ads:393:11    - Unknown word (LRDELAY)     -- AL_ECHO_LRDELAY
Engine/neo-api-openal.ads:393:6     - Unknown word (ECHO)        -- AL_ECHO_LRDELAY
Engine/neo-api-openal.ads:394:11    - Unknown word (DAMPING)     -- AL_ECHO_DAMPING
Engine/neo-api-openal.ads:394:6     - Unknown word (ECHO)        -- AL_ECHO_DAMPING
Engine/neo-api-openal.ads:396:11    - Unknown word (SPREAD)      -- AL_ECHO_SPREAD
Engine/neo-api-openal.ads:398:6     - Unknown word (Flanger)     -- -- Flanger effect parameters
Engine/neo-api-openal.ads:399:14    - Unknown word (WAVEFORM)    -- AL_FLANGER_WAVEFORM
Engine/neo-api-openal.ads:399:6     - Unknown word (FLANGER)     -- AL_FLANGER_WAVEFORM
Engine/neo-api-openal.ads:39:7      - Unknown word (Lubyte)       -- -- ALubyte* Ptr_Int_8_Unsigned
Engine/neo-api-openal.ads:400:14    - Unknown word (PHASE)       -- AL_FLANGER_PHASE
Engine/neo-api-openal.ads:400:6     - Unknown word (FLANGER)     -- AL_FLANGER_PHASE
Engine/neo-api-openal.ads:401:6     - Unknown word (FLANGER)     -- AL_FLANGER_RATE
Engine/neo-api-openal.ads:402:14    - Unknown word (DEPTH)       -- AL_FLANGER_DEPTH
Engine/neo-api-openal.ads:402:6     - Unknown word (FLANGER)     -- AL_FLANGER_DEPTH
Engine/neo-api-openal.ads:403:6     - Unknown word (FLANGER)     -- AL_FLANGER_FEEDBACK
Engine/neo-api-openal.ads:406:16    - Unknown word (shifter)     -- -- Frequency shifter effect parameters
Engine/neo-api-openal.ads:406:6     - Unknown word (Frequency)   -- -- Frequency shifter effect parameters
Engine/neo-api-openal.ads:407:16    - Unknown word (SHIFTER)     -- AL_FREQUENCY_SHIFTER_FREQUENCY
Engine/neo-api-openal.ads:407:24    - Unknown word (FREQUENCY)   -- AL_FREQUENCY_SHIFTER_FREQUENCY 0001
Engine/neo-api-openal.ads:407:6     - Unknown word (FREQUENCY)   -- AL_FREQUENCY_SHIFTER_FREQUENCY
Engine/neo-api-openal.ads:408:16    - Unknown word (SHIFTER)     -- AL_FREQUENCY_SHIFTER_LEFT_DIRECTION
Engine/neo-api-openal.ads:408:29    - Unknown word (DIRECTION)   -- FREQUENCY_SHIFTER_LEFT_DIRECTION 0002
Engine/neo-api-openal.ads:408:6     - Unknown word (FREQUENCY)   -- AL_FREQUENCY_SHIFTER_LEFT_DIRECTION
Engine/neo-api-openal.ads:409:16    - Unknown word (SHIFTER)     -- AL_FREQUENCY_SHIFTER_RIGHT_DIRECTION
Engine/neo-api-openal.ads:409:30    - Unknown word (DIRECTION)   -- FREQUENCY_SHIFTER_RIGHT_DIRECTION 0003
Engine/neo-api-openal.ads:40:28     - Unknown word (Signed)       -- ALshort* Ptr_Int_16_Signed_C, Ptr_Array_Int_
Engine/neo-api-openal.ads:40:7      - Unknown word (Lshort)       -- -- ALshort* Ptr_Int_16_Signed
Engine/neo-api-openal.ads:411:12    - Unknown word (morpher)     -- -- Vocal morpher effect parameters
Engine/neo-api-openal.ads:411:6     - Unknown word (Vocal)       -- -- Vocal morpher effect parameters
Engine/neo-api-openal.ads:412:12    - Unknown word (MORPHER)     -- AL_VOCAL_MORPHER_PHONEMEA
Engine/neo-api-openal.ads:412:20    - Unknown word (PHONEMEA)    -- AL_VOCAL_MORPHER_PHONEMEA : constant
Engine/neo-api-openal.ads:412:6     - Unknown word (VOCAL)       -- AL_VOCAL_MORPHER_PHONEMEA
Engine/neo-api-openal.ads:413:12    - Unknown word (MORPHER)     -- AL_VOCAL_MORPHER_PHONEMEA_COARSE_TUNING
Engine/neo-api-openal.ads:413:20    - Unknown word (PHONEMEA)    -- AL_VOCAL_MORPHER_PHONEMEA_COARSE_TUNING : constant
Engine/neo-api-openal.ads:413:29    - Unknown word (COARSE)      -- VOCAL_MORPHER_PHONEMEA_COARSE_TUNING : constant Int
Engine/neo-api-openal.ads:413:6     - Unknown word (VOCAL)       -- AL_VOCAL_MORPHER_PHONEMEA_COARSE
Engine/neo-api-openal.ads:414:12    - Unknown word (MORPHER)     -- AL_VOCAL_MORPHER_PHONEMEB
Engine/neo-api-openal.ads:414:20    - Unknown word (PHONEMEB)    -- AL_VOCAL_MORPHER_PHONEMEB : constant
Engine/neo-api-openal.ads:414:6     - Unknown word (VOCAL)       -- AL_VOCAL_MORPHER_PHONEMEB
Engine/neo-api-openal.ads:415:12    - Unknown word (MORPHER)     -- AL_VOCAL_MORPHER_PHONEMEB_COARSE_TUNING
Engine/neo-api-openal.ads:415:20    - Unknown word (PHONEMEB)    -- AL_VOCAL_MORPHER_PHONEMEB_COARSE_TUNING : constant
Engine/neo-api-openal.ads:415:29    - Unknown word (COARSE)      -- VOCAL_MORPHER_PHONEMEB_COARSE_TUNING : constant Int
Engine/neo-api-openal.ads:415:6     - Unknown word (VOCAL)       -- AL_VOCAL_MORPHER_PHONEMEB_COARSE
Engine/neo-api-openal.ads:416:12    - Unknown word (MORPHER)     -- AL_VOCAL_MORPHER_WAVEFORM
Engine/neo-api-openal.ads:416:20    - Unknown word (WAVEFORM)    -- AL_VOCAL_MORPHER_WAVEFORM : constant
Engine/neo-api-openal.ads:416:6     - Unknown word (VOCAL)       -- AL_VOCAL_MORPHER_WAVEFORM
Engine/neo-api-openal.ads:419:6     - Unknown word (Pitchshifter) -- -- Pitchshifter effect parameters
Engine/neo-api-openal.ads:41:7      - Unknown word (Lushort)      -- -- ALushort* Ptr_Int_16_Unsigned
Engine/neo-api-openal.ads:420:12    - Unknown word (SHIFTER)      -- AL_PITCH_SHIFTER_COARSE_TUNE
Engine/neo-api-openal.ads:420:20    - Unknown word (COARSE)       -- AL_PITCH_SHIFTER_COARSE_TUNE : constant
Engine/neo-api-openal.ads:420:27    - Unknown word (TUNE)         -- PITCH_SHIFTER_COARSE_TUNE : constant
Engine/neo-api-openal.ads:420:6     - Unknown word (PITCH)        -- AL_PITCH_SHIFTER_COARSE_TUNE
Engine/neo-api-openal.ads:421:12    - Unknown word (SHIFTER)      -- AL_PITCH_SHIFTER_FINE_TUNE
Engine/neo-api-openal.ads:421:20    - Unknown word (FINE)         -- AL_PITCH_SHIFTER_FINE_TUNE : constant
Engine/neo-api-openal.ads:421:25    - Unknown word (TUNE)         -- AL_PITCH_SHIFTER_FINE_TUNE : constant
Engine/neo-api-openal.ads:421:6     - Unknown word (PITCH)        -- AL_PITCH_SHIFTER_FINE_TUNE
Engine/neo-api-openal.ads:423:6     - Unknown word (Ringmodulator) -- -- Ringmodulator effect parameters
Engine/neo-api-openal.ads:424:11    - Unknown word (MODULATOR)     -- AL_RING_MODULATOR_FREQUENCY
Engine/neo-api-openal.ads:424:6     - Unknown word (RING)          -- AL_RING_MODULATOR_FREQUENCY
Engine/neo-api-openal.ads:425:11    - Unknown word (MODULATOR)     -- AL_RING_MODULATOR_HIGHPASS_CUTOFF
Engine/neo-api-openal.ads:425:21    - Unknown word (HIGHPASS)      -- AL_RING_MODULATOR_HIGHPASS_CUTOFF : constant
Engine/neo-api-openal.ads:425:30    - Unknown word (CUTOFF)        -- RING_MODULATOR_HIGHPASS_CUTOFF : constant Int_Unsigned
Engine/neo-api-openal.ads:425:6     - Unknown word (RING)          -- AL_RING_MODULATOR_HIGHPASS_CUTOFF
Engine/neo-api-openal.ads:426:11    - Unknown word (MODULATOR)     -- AL_RING_MODULATOR_WAVEFORM
Engine/neo-api-openal.ads:426:21    - Unknown word (WAVEFORM)      -- AL_RING_MODULATOR_WAVEFORM : constant
Engine/neo-api-openal.ads:426:6     - Unknown word (RING)          -- AL_RING_MODULATOR_WAVEFORM
Engine/neo-api-openal.ads:428:6     - Unknown word (Autowah)       -- -- Autowah effect parameters
Engine/neo-api-openal.ads:429:6     - Unknown word (AUTOWAH)       -- AL_AUTOWAH_ATTACK_TIME
Engine/neo-api-openal.ads:42:7      - Unknown word (Luint)        -- -- ALuint* Ptr_Int_32_Unsigned
Engine/neo-api-openal.ads:430:6     - Unknown word (AUTOWAH)       -- AL_AUTOWAH_RELEASE_TIME
Engine/neo-api-openal.ads:431:14    - Unknown word (RESONANCE)     -- AL_AUTOWAH_RESONANCE : constant
Engine/neo-api-openal.ads:431:6     - Unknown word (AUTOWAH)       -- AL_AUTOWAH_RESONANCE
Engine/neo-api-openal.ads:432:6     - Unknown word (AUTOWAH)       -- AL_AUTOWAH_PEAK_GAIN
Engine/neo-api-openal.ads:434:6     - Unknown word (Compressor)    -- -- Compressor effect parameters
Engine/neo-api-openal.ads:435:17    - Unknown word (ONOFF)         -- AL_COMPRESSOR_ONOFF : constant
Engine/neo-api-openal.ads:435:6     - Unknown word (COMPRESSOR)    -- AL_COMPRESSOR_ONOFF
Engine/neo-api-openal.ads:437:6     - Unknown word (Equalizer)     -- -- Equalizer effect parameters
Engine/neo-api-openal.ads:438:6     - Unknown word (EQUALIZER)     -- AL_EQUALIZER_LOW_GAIN
Engine/neo-api-openal.ads:439:20    - Unknown word (CUTOFF)        -- AL_EQUALIZER_LOW_CUTOFF : constant
Engine/neo-api-openal.ads:439:6     - Unknown word (EQUALIZER)     -- AL_EQUALIZER_LOW_CUTOFF
Engine/neo-api-openal.ads:43:7      - Unknown word (Lfloat)       -- -- ALfloat* Ptr_Real_32_C,
Engine/neo-api-openal.ads:440:6     - Unknown word (EQUALIZER)     -- AL_EQUALIZER_MID1_GAIN
Engine/neo-api-openal.ads:441:21    - Unknown word (CENTER)        -- AL_EQUALIZER_MID1_CENTER : constant Int
Engine/neo-api-openal.ads:441:6     - Unknown word (EQUALIZER)     -- AL_EQUALIZER_MID1_CENTER
Engine/neo-api-openal.ads:442:21    - Unknown word (WIDTH)         -- AL_EQUALIZER_MID1_WIDTH : constant
Engine/neo-api-openal.ads:442:6     - Unknown word (EQUALIZER)     -- AL_EQUALIZER_MID1_WIDTH
Engine/neo-api-openal.ads:444:21    - Unknown word (CENTER)        -- AL_EQUALIZER_MID2_CENTER : constant Int
Engine/neo-api-openal.ads:445:21    - Unknown word (WIDTH)         -- AL_EQUALIZER_MID2_WIDTH : constant
Engine/neo-api-openal.ads:447:21    - Unknown word (CUTOFF)        -- AL_EQUALIZER_HIGH_CUTOFF : constant Int
Engine/neo-api-openal.ads:449:6     - Unknown word (Effect)        -- -- Effect type
Engine/neo-api-openal.ads:44:7      - Unknown word (Ldouble)      -- -- ALdouble* Ptr_Real_64_C,
Engine/neo-api-openal.ads:450:6     - Unknown word (EFFECT)        -- AL_EFFECT_FIRST_PARAMETER
Engine/neo-api-openal.ads:451:6     - Unknown word (EFFECT)        -- AL_EFFECT_LAST_PARAMETER
Engine/neo-api-openal.ads:452:6     - Unknown word (EFFECT)        -- AL_EFFECT_TYPE
Engine/neo-api-openal.ads:454:37    - Unknown word (EFFECT)        -- types, used with the AL_EFFECT_TYPE property
Engine/neo-api-openal.ads:454:6     - Unknown word (Effect)        -- -- Effect types, used with the
Engine/neo-api-openal.ads:455:6     - Unknown word (EFFECT)        -- AL_EFFECT_NULL
Engine/neo-api-openal.ads:45:8      - Unknown word (Cdevice)      -- -- ALCdevice* Ptr
Engine/neo-api-openal.ads:463:13    - Unknown word (PITCH)         -- AL_EFFECT_PITCH_SHIFTER
Engine/neo-api-openal.ads:464:13    - Unknown word (RING)          -- AL_EFFECT_RING_MODULATOR
Engine/neo-api-openal.ads:464:18    - Unknown word (MODULATOR)     -- AL_EFFECT_RING_MODULATOR : constant
Engine/neo-api-openal.ads:465:13    - Unknown word (AUTOWAH)       -- AL_EFFECT_AUTOWAH : constant
Engine/neo-api-openal.ads:466:13    - Unknown word (COMPRESSOR)    -- AL_EFFECT_COMPRESSOR : constant
Engine/neo-api-openal.ads:470:16    - Unknown word (Effect)        -- -- Auxiliary Effect Slot properties
Engine/neo-api-openal.ads:470:6     - Unknown word (Auxiliary)     -- -- Auxiliary Effect Slot properties
Engine/neo-api-openal.ads:471:6     - Unknown word (EFFECTSLOT)    -- AL_EFFECTSLOT_EFFECT
Engine/neo-api-openal.ads:472:6     - Unknown word (EFFECTSLOT)    -- AL_EFFECTSLOT_GAIN
Engine/neo-api-openal.ads:473:17    - Unknown word (AUXILIARY)     -- AL_EFFECTSLOT_AUXILIARY_SEND_AUTO : constant
Engine/neo-api-openal.ads:473:6     - Unknown word (EFFECTSLOT)    -- AL_EFFECTSLOT_AUXILIARY_SEND_AUTO
Engine/neo-api-openal.ads:475:11    - Unknown word (Auxiliary)     -- -- NULL Auxiliary Slot ID to disable a
Engine/neo-api-openal.ads:476:6     - Unknown word (EFFECTSLOT)    -- AL_EFFECTSLOT_NULL
Engine/neo-api-openal.ads:481:6     - Unknown word (Lowpass)       -- -- Lowpass filter parameters
Engine/neo-api-openal.ads:482:6     - Unknown word (LOWPASS)       -- AL_LOWPASS_GAIN
Engine/neo-api-openal.ads:483:6     - Unknown word (LOWPASS)       -- AL_LOWPASS_GAINHF
Engine/neo-api-openal.ads:485:6     - Unknown word (Highpass)      -- -- Highpass filter parameters
Engine/neo-api-openal.ads:486:6     - Unknown word (HIGHPASS)      -- AL_HIGHPASS_GAIN
Engine/neo-api-openal.ads:487:15    - Unknown word (GAINLF)        -- AL_HIGHPASS_GAINLF
Engine/neo-api-openal.ads:487:6     - Unknown word (HIGHPASS)      -- AL_HIGHPASS_GAINLF
Engine/neo-api-openal.ads:489:6     - Unknown word (Bandpass)      -- -- Bandpass filter parameters
Engine/neo-api-openal.ads:48:6      - Unknown word (Constants)    -- -- Constants --
Engine/neo-api-openal.ads:490:6     - Unknown word (BANDPASS)      -- AL_BANDPASS_GAIN
Engine/neo-api-openal.ads:491:15    - Unknown word (GAINLF)        -- AL_BANDPASS_GAINLF
Engine/neo-api-openal.ads:491:6     - Unknown word (BANDPASS)      -- AL_BANDPASS_GAINLF
Engine/neo-api-openal.ads:492:6     - Unknown word (BANDPASS)      -- AL_BANDPASS_GAINHF
Engine/neo-api-openal.ads:501:13    - Unknown word (LOWPASS)       -- AL_FILTER_LOWPASS
Engine/neo-api-openal.ads:502:13    - Unknown word (HIGHPASS)      -- AL_FILTER_HIGHPASS :
Engine/neo-api-openal.ads:503:13    - Unknown word (BANDPASS)      -- AL_FILTER_BANDPASS :
Engine/neo-api-openal.ads:505:24    - Unknown word (defaults)      -- - Filter ranges and defaults
Engine/neo-api-openal.ads:507:6     - Unknown word (Lowpass)       -- -- Lowpass filter
Engine/neo-api-openal.ads:508:6     - Unknown word (LOWPASS)       -- AL_LOWPASS_MIN_GAIN
Engine/neo-api-openal.ads:516:6     - Unknown word (Highpass)      -- -- Highpass filter
Engine/neo-api-openal.ads:517:6     - Unknown word (HIGHPASS)      -- AL_HIGHPASS_MIN_GAIN
Engine/neo-api-openal.ads:51:10     - Unknown word (distance)     -- -- "no distance model" or "no buffer
Engine/neo-api-openal.ads:521:19    - Unknown word (GAINLF)        -- AL_HIGHPASS_MIN_GAINLF (
Engine/neo-api-openal.ads:522:19    - Unknown word (GAINLF)        -- AL_HIGHPASS_MAX_GAINLF (
Engine/neo-api-openal.ads:525:6     - Unknown word (Bandpass)      -- -- Bandpass filter
Engine/neo-api-openal.ads:526:6     - Unknown word (BANDPASS)      -- AL_BANDPASS_MIN_GAIN
Engine/neo-api-openal.ads:52:6      - Unknown word (NONE)         -- AL_NONE : constant Int_Unsigned
Engine/neo-api-openal.ads:539:34    - Unknown word (defaults)      -- parameter ranges and defaults
Engine/neo-api-openal.ads:539:6     - Unknown word (Effect)        -- -- Effect parameter ranges and
Engine/neo-api-openal.ads:541:15    - Unknown word (reverb)        -- -- Standard reverb effect
Engine/neo-api-openal.ads:542:17    - Unknown word (DENSITY)       -- AL_REVERB_MIN_DENSITY
Engine/neo-api-openal.ads:543:17    - Unknown word (DENSITY)       -- AL_REVERB_MAX_DENSITY
Engine/neo-api-openal.ads:544:21    - Unknown word (DENSITY)       -- AL_REVERB_DEFAULT_DENSITY (1.0
Engine/neo-api-openal.ads:546:17    - Unknown word (DIFFUSION)    -- AL_REVERB_MIN_DIFFUSION (0
Engine/neo-api-openal.ads:547:17    - Unknown word (DIFFUSION)    -- AL_REVERB_MAX_DIFFUSION (1
Engine/neo-api-openal.ads:548:21    - Unknown word (DIFFUSION)    -- AL_REVERB_DEFAULT_DIFFUSION (1.0)
Engine/neo-api-openal.ads:55:6      - Unknown word (FALSE)        -- AL_FALSE : constant Int_8_Unsigned
Engine/neo-api-openal.ads:562:23    - Unknown word (HFRATIO)      -- AL_REVERB_MIN_DECAY_HFRATIO (0.1f)
Engine/neo-api-openal.ads:563:23    - Unknown word (HFRATIO)      -- AL_REVERB_MAX_DECAY_HFRATIO (2.0)
Engine/neo-api-openal.ads:564:27    - Unknown word (HFRATIO)      -- REVERB_DEFAULT_DECAY_HFRATIO (0.83f)
Engine/neo-api-openal.ads:56:6      - Unknown word (TRUE)         -- AL_TRUE : constant Int_8_Unsigned
Engine/neo-api-openal.ads:582:21    - Unknown word (ABSORPTION)   -- AL_REVERB_MIN_AIR_ABSORPTION_GAINHF (0.892f
Engine/neo-api-openal.ads:583:21    - Unknown word (ABSORPTION)   -- AL_REVERB_MAX_AIR_ABSORPTION_GAINHF (1.0)
Engine/neo-api-openal.ads:586:22    - Unknown word (ROLLOFF)      -- AL_REVERB_MIN_ROOM_ROLLOFF_FACTOR (0.0)
Engine/neo-api-openal.ads:590:23    - Unknown word (HFLIMIT)      -- AL_REVERB_MIN_DECAY_HFLIMIT AL_FALSE
Engine/neo-api-openal.ads:590:47    - Unknown word (FALSE)        -- HFLIMIT AL_FALSE
Engine/neo-api-openal.ads:591:23    - Unknown word (HFLIMIT)      -- AL_REVERB_MAX_DECAY_HFLIMIT AL_TRUE
Engine/neo-api-openal.ads:591:47    - Unknown word (TRUE)         -- HFLIMIT AL_TRUE
Engine/neo-api-openal.ads:592:27    - Unknown word (HFLIMIT)      -- REVERB_DEFAULT_DECAY_HFLIMIT AL_TRUE
Engine/neo-api-openal.ads:592:47    - Unknown word (TRUE)         -- HFLIMIT AL_TRUE
Engine/neo-api-openal.ads:594:10    - Unknown word (reverb)       -- -- EAX reverb effect
Engine/neo-api-openal.ads:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo-api-openal.ads:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo-api-openal.ads:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo-api-openal.ads:60:6      - Unknown word (INVALID)      -- AL_INVALID_NAME : constant
Engine/neo-api-openal.ads:61:6      - Unknown word (INVALID)      -- AL_INVALID_ENUM : constant
Engine/neo-api-openal.ads:623:26    - Unknown word (LFRATIO)      -- EAXREVERB_MIN_DECAY_LFRATIO (0.1f)
Engine/neo-api-openal.ads:624:26    - Unknown word (LFRATIO)      -- EAXREVERB_MAX_DECAY_LFRATIO (2.0)
Engine/neo-api-openal.ads:625:30    - Unknown word (LFRATIO)      -- EAXREVERB_DEFAULT_DECAY_LFRATIO (1.0)
Engine/neo-api-openal.ads:62:6      - Unknown word (INVALID)      -- AL_INVALID_VALUE : constant
Engine/neo-api-openal.ads:63:6      - Unknown word (INVALID)      -- AL_INVALID_OPERATION : constant
Engine/neo-api-openal.ads:64:13     - Unknown word (MEMORY)       -- AL_OUT_OF_MEMORY : constant Int_Unsigned
Engine/neo-api-openal.ads:651:25    - Unknown word (DEPTH)        -- AL_EAXREVERB_MIN_ECHO_DEPTH (0.0)
Engine/neo-api-openal.ads:655:20    - Unknown word (MODULATION)   -- AL_EAXREVERB_MIN_MODULATION_TIME (0.04f
Engine/neo-api-openal.ads:656:20    - Unknown word (MODULATION)   -- AL_EAXREVERB_MAX_MODULATION_TIME (4.0)
Engine/neo-api-openal.ads:657:24    - Unknown word (MODULATION)   -- AL_EAXREVERB_DEFAULT_MODULATION_TIME (0.25f)
Engine/neo-api-openal.ads:667:20    - Unknown word (HFREFERENCE)  -- AL_EAXREVERB_MIN_HFREFERENCE (1000.0
Engine/neo-api-openal.ads:668:20    - Unknown word (HFREFERENCE)  -- AL_EAXREVERB_MAX_HFREFERENCE (20000.
Engine/neo-api-openal.ads:669:24    - Unknown word (HFREFERENCE)  -- AL_EAXREVERB_DEFAULT_HFREFERENCE (5000.0)
Engine/neo-api-openal.ads:66:13     - Unknown word (Simple)       -- -- 3.1.1. Simple Queries
Engine/neo-api-openal.ads:671:20    - Unknown word (LFREFERENCE)  -- AL_EAXREVERB_MIN_LFREFERENCE (20.0)
Engine/neo-api-openal.ads:672:20    - Unknown word (LFREFERENCE)  -- AL_EAXREVERB_MAX_LFREFERENCE (1000.0
Engine/neo-api-openal.ads:673:24    - Unknown word (LFREFERENCE)  -- AL_EAXREVERB_DEFAULT_LFREFERENCE (250.0)
Engine/neo-api-openal.ads:679:75    - Unknown word (FALSE)        -- Int_Unsigned_C :=  AL_FALSE
Engine/neo-api-openal.ads:67:6      - Unknown word (DOPPLER)      -- AL_DOPPLER_FACTOR : constant Int
Engine/neo-api-openal.ads:680:75    - Unknown word (TRUE)         -- Int_Unsigned_C := AL_TRUE
Engine/neo-api-openal.ads:683:6     - Unknown word (Chorus)       -- -- Chorus effect
Engine/neo-api-openal.ads:684:13    - Unknown word (WAVEFORM)     -- AL_CHORUS_WAVEFORM_SINUSOID
Engine/neo-api-openal.ads:684:22    - Unknown word (SINUSOID)     -- AL_CHORUS_WAVEFORM_SINUSOID : constant
Engine/neo-api-openal.ads:685:22    - Unknown word (TRIANGLE)     -- AL_CHORUS_WAVEFORM_TRIANGLE : constant
Engine/neo-api-openal.ads:68:15     - Unknown word (SOUND)        -- AL_SPEED_OF_SOUND : constant Int_Unsigned
Engine/neo-api-openal.ads:68:6      - Unknown word (SPEED)        -- AL_SPEED_OF_SOUND : constant
Engine/neo-api-openal.ads:691:17    - Unknown word (PHASE)        -- AL_CHORUS_MIN_PHASE
Engine/neo-api-openal.ads:692:17    - Unknown word (PHASE)        -- AL_CHORUS_MAX_PHASE :
Engine/neo-api-openal.ads:693:21    - Unknown word (PHASE)        -- AL_CHORUS_DEFAULT_PHASE : constant
Engine/neo-api-openal.ads:69:6      - Unknown word (DISTANCE)     -- AL_DISTANCE_MODEL : constant Int
Engine/neo-api-openal.ads:711:6     - Unknown word (Distortion)   -- -- Distortion effect
Engine/neo-api-openal.ads:712:21    - Unknown word (EDGE)         -- AL_DISTORTION_MIN_EDGE (
Engine/neo-api-openal.ads:713:21    - Unknown word (EDGE)         -- AL_DISTORTION_MAX_EDGE (
Engine/neo-api-openal.ads:714:25    - Unknown word (EDGE)         -- AL_DISTORTION_DEFAULT_EDGE (0.2f
Engine/neo-api-openal.ads:71:13     - Unknown word (String)       -- -- 3.1.2. String Queries
Engine/neo-api-openal.ads:720:29    - Unknown word (CUTOFF)       -- DISTORTION_MIN_LOWPASS_CUTOFF (80.0)
Engine/neo-api-openal.ads:724:21    - Unknown word (EQCENTER)     -- AL_DISTORTION_MIN_EQCENTER (80.0
Engine/neo-api-openal.ads:725:21    - Unknown word (EQCENTER)     -- AL_DISTORTION_MAX_EQCENTER (2400
Engine/neo-api-openal.ads:726:25    - Unknown word (EQCENTER)     -- AL_DISTORTION_DEFAULT_EQCENTER (3600.0)
Engine/neo-api-openal.ads:728:21    - Unknown word (EQBANDWIDTH)  -- AL_DISTORTION_MIN_EQBANDWIDTH (80.0)
Engine/neo-api-openal.ads:729:21    - Unknown word (EQBANDWIDTH)  -- AL_DISTORTION_MAX_EQBANDWIDTH (24000.0
Engine/neo-api-openal.ads:72:6      - Unknown word (VENDOR)       -- AL_VENDOR : constant Int_Unsigned
Engine/neo-api-openal.ads:730:25    - Unknown word (EQBANDWIDTH)  -- AL_DISTORTION_DEFAULT_EQBANDWIDTH (3600.0)
Engine/neo-api-openal.ads:732:6     - Unknown word (Echo)         -- -- Echo effect
Engine/neo-api-openal.ads:737:15    - Unknown word (LRDELAY)      -- AL_ECHO_MIN_LRDELAY
Engine/neo-api-openal.ads:738:15    - Unknown word (LRDELAY)      -- AL_ECHO_MAX_LRDELAY
Engine/neo-api-openal.ads:739:19    - Unknown word (LRDELAY)      -- AL_ECHO_DEFAULT_LRDELAY (0
Engine/neo-api-openal.ads:741:15    - Unknown word (DAMPING)      -- AL_ECHO_MIN_DAMPING
Engine/neo-api-openal.ads:742:15    - Unknown word (DAMPING)      -- AL_ECHO_MAX_DAMPING
Engine/neo-api-openal.ads:743:19    - Unknown word (DAMPING)      -- AL_ECHO_DEFAULT_DAMPING (0
Engine/neo-api-openal.ads:749:15    - Unknown word (SPREAD)       -- AL_ECHO_MIN_SPREAD
Engine/neo-api-openal.ads:74:6      - Unknown word (RENDERER)     -- AL_RENDERER : constant Int_Unsigned
Engine/neo-api-openal.ads:750:15    - Unknown word (SPREAD)       -- AL_ECHO_MAX_SPREAD
Engine/neo-api-openal.ads:751:19    - Unknown word (SPREAD)       -- AL_ECHO_DEFAULT_SPREAD (
Engine/neo-api-openal.ads:753:6     - Unknown word (Flanger)      -- -- Flanger effect
Engine/neo-api-openal.ads:754:23    - Unknown word (SINUSOID)     -- AL_FLANGER_WAVEFORM_SINUSOID (0)
Engine/neo-api-openal.ads:755:23    - Unknown word (TRIANGLE)     -- AL_FLANGER_WAVEFORM_TRIANGLE (1)
Engine/neo-api-openal.ads:77:11     - Unknown word (Attenuation)  -- -- 3.4. Attenuation By Distance
Engine/neo-api-openal.ads:77:26     - Unknown word (Distance)     -- 3.4. Attenuation By Distance
Engine/neo-api-openal.ads:781:16    - Unknown word (shifter)      -- -- Frequency shifter effect
Engine/neo-api-openal.ads:781:6     - Unknown word (Frequency)    -- -- Frequency shifter effect
Engine/neo-api-openal.ads:786:33    - Unknown word (DIRECTION)    -- FREQUENCY_SHIFTER_MIN_LEFT_DIRECTION : constant Int_Unsigned
Engine/neo-api-openal.ads:787:33    - Unknown word (DIRECTION)    -- FREQUENCY_SHIFTER_MAX_LEFT_DIRECTION : constant Int_Unsigned
Engine/neo-api-openal.ads:78:14     - Unknown word (DISTANCE)     -- AL_INVERSE_DISTANCE : constant
Engine/neo-api-openal.ads:78:6      - Unknown word (INVERSE)      -- AL_INVERSE_DISTANCE :
Engine/neo-api-openal.ads:798:12    - Unknown word (morpher)      -- -- Vocal morpher effect
Engine/neo-api-openal.ads:798:6     - Unknown word (Vocal)        -- -- Vocal morpher effect
Engine/neo-api-openal.ads:799:24    - Unknown word (PHONEMEA)     -- AL_VOCAL_MORPHER_MIN_PHONEMEA : constant Int
Engine/neo-api-openal.ads:79:14     - Unknown word (DISTANCE)     -- AL_INVERSE_DISTANCE_CLAMPED : constant
Engine/neo-api-openal.ads:79:23     - Unknown word (CLAMPED)      -- AL_INVERSE_DISTANCE_CLAMPED : constant Int_Unsigned
Engine/neo-api-openal.ads:79:6      - Unknown word (INVERSE)      -- AL_INVERSE_DISTANCE_CLAMPED :
Engine/neo-api-openal.ads:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-api-openal.ads:800:24    - Unknown word (PHONEMEA)     -- AL_VOCAL_MORPHER_MAX_PHONEMEA : constant Int
Engine/neo-api-openal.ads:801:28    - Unknown word (PHONEMEA)     -- VOCAL_MORPHER_DEFAULT_PHONEMEA : constant Int_Unsigned
Engine/neo-api-openal.ads:803:33    - Unknown word (COARSE)       -- MORPHER_MIN_PHONEMEA_COARSE_TUNING : constant Int
Engine/neo-api-openal.ads:804:33    - Unknown word (COARSE)       -- MORPHER_MAX_PHONEMEA_COARSE_TUNING : constant Int
Engine/neo-api-openal.ads:807:24    - Unknown word (PHONEMEB)     -- AL_VOCAL_MORPHER_MIN_PHONEMEB : constant
Engine/neo-api-openal.ads:808:24    - Unknown word (PHONEMEB)     -- AL_VOCAL_MORPHER_MAX_PHONEMEB : constant
Engine/neo-api-openal.ads:809:28    - Unknown word (PHONEMEB)     -- VOCAL_MORPHER_DEFAULT_PHONEMEB : constant Int
Engine/neo-api-openal.ads:80:13     - Unknown word (DISTANCE)     -- AL_LINEAR_DISTANCE : constant
Engine/neo-api-openal.ads:80:6      - Unknown word (LINEAR)       -- AL_LINEAR_DISTANCE
Engine/neo-api-openal.ads:815:20    - Unknown word (PHONEME)      -- AL_VOCAL_MORPHER_PHONEME_A : constant
Engine/neo-api-openal.ads:816:20    - Unknown word (PHONEME)      -- AL_VOCAL_MORPHER_PHONEME_E : constant
Engine/neo-api-openal.ads:817:20    - Unknown word (PHONEME)      -- AL_VOCAL_MORPHER_PHONEME_I : constant
Engine/neo-api-openal.ads:818:20    - Unknown word (PHONEME)      -- AL_VOCAL_MORPHER_PHONEME_O : constant
Engine/neo-api-openal.ads:819:20    - Unknown word (PHONEME)      -- AL_VOCAL_MORPHER_PHONEME_U : constant
Engine/neo-api-openal.ads:81:13     - Unknown word (DISTANCE)     -- AL_LINEAR_DISTANCE_CLAMPED : constant
Engine/neo-api-openal.ads:81:22     - Unknown word (CLAMPED)      -- AL_LINEAR_DISTANCE_CLAMPED : constant Int_Unsigned
Engine/neo-api-openal.ads:81:6      - Unknown word (LINEAR)       -- AL_LINEAR_DISTANCE_CLAMPED
Engine/neo-api-openal.ads:82:6      - Unknown word (EXPONENT)     -- AL_EXPONENT_DISTANCE : constant
Engine/neo-api-openal.ads:83:24     - Unknown word (CLAMPED)      -- AL_EXPONENT_DISTANCE_CLAMPED : constant Int_Unsigned
Engine/neo-api-openal.ads:83:6      - Unknown word (EXPONENT)     -- AL_EXPONENT_DISTANCE_CLAMPED : constant
Engine/neo-api-openal.ads:846:29    - Unknown word (SINUSOID)     -- VOCAL_MORPHER_WAVEFORM_SINUSOID : constant Int_Unsigned
Engine/neo-api-openal.ads:847:29    - Unknown word (TRIANGLE)     -- VOCAL_MORPHER_WAVEFORM_TRIANGLE : constant Int_Unsigned
Engine/neo-api-openal.ads:848:29    - Unknown word (SAWTOOTH)     -- VOCAL_MORPHER_WAVEFORM_SAWTOOTH : constant Int_Unsigned
Engine/neo-api-openal.ads:858:12    - Unknown word (shifter)      -- -- Pitch shifter effect
Engine/neo-api-openal.ads:858:6     - Unknown word (Pitch)        -- -- Pitch shifter effect
Engine/neo-api-openal.ads:859:31    - Unknown word (TUNE)        -- PITCH_SHIFTER_MIN_COARSE_TUNE : constant Int
Engine/neo-api-openal.ads:859:6     - Unknown word (PITCH)       -- AL_PITCH_SHIFTER_MIN_COARSE_TUNE
Engine/neo-api-openal.ads:860:31    - Unknown word (TUNE)        -- PITCH_SHIFTER_MAX_COARSE_TUNE : constant Int
Engine/neo-api-openal.ads:861:35    - Unknown word (TUNE)        -- SHIFTER_DEFAULT_COARSE_TUNE : constant Int_Unsigned
Engine/neo-api-openal.ads:863:24    - Unknown word (FINE)        -- AL_PITCH_SHIFTER_MIN_FINE_TUNE : constant
Engine/neo-api-openal.ads:864:24    - Unknown word (FINE)        -- AL_PITCH_SHIFTER_MAX_FINE_TUNE : constant
Engine/neo-api-openal.ads:865:28    - Unknown word (FINE)        -- PITCH_SHIFTER_DEFAULT_FINE_TUNE : constant
Engine/neo-api-openal.ads:867:11    - Unknown word (modulator)   -- -- Ring modulator effect
Engine/neo-api-openal.ads:867:6     - Unknown word (Ring)        -- -- Ring modulator effect
Engine/neo-api-openal.ads:868:11    - Unknown word (MODULATOR)   -- AL_RING_MODULATOR_MIN_FREQUENCY
Engine/neo-api-openal.ads:868:6     - Unknown word (RING)        -- AL_RING_MODULATOR_MIN_FREQUENCY
Engine/neo-api-openal.ads:876:21    - Unknown word (SINUSOID)    -- AL_RING_MODULATOR_SINUSOID : constant
Engine/neo-api-openal.ads:877:21    - Unknown word (SAWTOOTH)    -- AL_RING_MODULATOR_SAWTOOTH : constant
Engine/neo-api-openal.ads:87:6      - Unknown word (VELOCITY)     -- AL_VELOCITY : constant Int_Unsigned
Engine/neo-api-openal.ads:884:6     - Unknown word (Autowah)     -- -- Autowah effect
Engine/neo-api-openal.ads:88:6      - Unknown word (GAIN)        -- AL_GAIN : constant Int_Unsigned
Engine/neo-api-openal.ads:893:18    - Unknown word (RESONANCE)   -- AL_AUTOWAH_MIN_RESONANCE (2.
Engine/neo-api-openal.ads:894:18    - Unknown word (RESONANCE)   -- AL_AUTOWAH_MAX_RESONANCE (10
Engine/neo-api-openal.ads:895:22    - Unknown word (RESONANCE)   -- AL_AUTOWAH_DEFAULT_RESONANCE (1000.0
Engine/neo-api-openal.ads:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-api-openal.ads:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-api-openal.ads:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo-api-openal.ads:901:6     - Unknown word (Compressor)  -- -- Compressor effect
Engine/neo-api-openal.ads:902:21    - Unknown word (ONOFF)       -- AL_COMPRESSOR_MIN_ONOFF : constant
Engine/neo-api-openal.ads:902:6     - Unknown word (COMPRESSOR)  -- AL_COMPRESSOR_MIN_ONOFF
Engine/neo-api-openal.ads:903:21    - Unknown word (ONOFF)       -- AL_COMPRESSOR_MAX_ONOFF : constant
Engine/neo-api-openal.ads:903:6     - Unknown word (COMPRESSOR)  -- AL_COMPRESSOR_MAX_ONOFF
Engine/neo-api-openal.ads:904:25    - Unknown word (ONOFF)       -- AL_COMPRESSOR_DEFAULT_ONOFF : constant
Engine/neo-api-openal.ads:904:6     - Unknown word (COMPRESSOR)  -- AL_COMPRESSOR_DEFAULT_ONOFF
Engine/neo-api-openal.ads:906:6     - Unknown word (Equalizer)   -- -- Equalizer effect
Engine/neo-api-openal.ads:919:25    - Unknown word (CENTER)      -- AL_EQUALIZER_MIN_MID1_CENTER (200.0)
Engine/neo-api-openal.ads:91:6      - Unknown word (ORIENTATION) -- AL_ORIENTATION : constant Int_Unsigned
Engine/neo-api-openal.ads:920:25    - Unknown word (CENTER)      -- AL_EQUALIZER_MAX_MID1_CENTER (3000.0
Engine/neo-api-openal.ads:921:29    - Unknown word (CENTER)      -- EQUALIZER_DEFAULT_MID1_CENTER (500.0)
Engine/neo-api-openal.ads:923:25    - Unknown word (WIDTH)       -- AL_EQUALIZER_MIN_MID1_WIDTH (0.01f
Engine/neo-api-openal.ads:924:25    - Unknown word (WIDTH)       -- AL_EQUALIZER_MAX_MID1_WIDTH (1.0)
Engine/neo-api-openal.ads:925:29    - Unknown word (WIDTH)       -- EQUALIZER_DEFAULT_MID1_WIDTH (1.0)
Engine/neo-api-openal.ads:948:40    - Unknown word (defaults)    -- parameter value ranges and defaults
Engine/neo-api-openal.ads:94:13     - Unknown word (RELATIVE)    -- AL_SOURCE_RELATIVE : constant Int_Unsigned
Engine/neo-api-openal.ads:957:10    - Unknown word (CONE)        -- AL_MIN_CONE_OUTER_GAINHF
Engine/neo-api-openal.ads:957:15    - Unknown word (OUTER)       -- AL_MIN_CONE_OUTER_GAINHF
Engine/neo-api-openal.ads:958:15    - Unknown word (OUTER)       -- AL_MAX_CONE_OUTER_GAINHF
Engine/neo-api-openal.ads:961:75    - Unknown word (FALSE)       -- Int_Unsigned_C :=  AL_FALSE
Engine/neo-api-openal.ads:96:6      - Unknown word (UNDETERMINED) -- AL_UNDETERMINED : constant Int
Engine/neo-api-openal.ads:973:42    - Unknown word (defaults)    -- parameter value ranges and defaults
Engine/neo-api-openal.ads:974:10    - Unknown word (METERS)      -- AL_MIN_METERS_PER_UNIT
Engine/neo-api-openal.ads:975:10    - Unknown word (METERS)      -- AL_MAX_METERS_PER_UNIT
Engine/neo-api-openal.ads:976:14    - Unknown word (METERS)      -- AL_DEFAULT_METERS_PER_UNIT
Engine/neo-api-openal.ads:982:8     - Unknown word (EFXEAXREVERBPROPERTIES) -- type EFXEAXREVERBPROPERTIES is record
Engine/neo-api-openal.ads:983:9     - Unknown word (Density)                -- flDensity : Real_
Engine/neo-api-openal.ads:984:9     - Unknown word (Diffusion)              -- flDiffusion : Real_32
Engine/neo-api-openal.ads:985:9     - Unknown word (Gain)                   -- flGain : Real
Engine/neo-api-openal.ads:986:9     - Unknown word (Gain)                   -- flGainHF : Real
Engine/neo-api-openal.ads:987:9     - Unknown word (Gain)                   -- flGainLF : Real
Engine/neo-api-openal.ads:988:9     - Unknown word (Decay)                  -- flDecayTime : Real
Engine/neo-api-openal.ads:989:16    - Unknown word (Ratio)                  -- flDecayHFRatio : Real_32_C
Engine/neo-api-openal.ads:989:9     - Unknown word (Decay)                  -- flDecayHFRatio : Real
Engine/neo-api-openal.ads:990:16    - Unknown word (Ratio)                  -- flDecayLFRatio : Real_32_C
Engine/neo-api-openal.ads:990:9     - Unknown word (Decay)                  -- flDecayLFRatio : Real
Engine/neo-api-openal.ads:991:20    - Unknown word (Gain)                   -- flReflectionsGain : Real_32_C
Engine/neo-api-openal.ads:991:9     - Unknown word (Reflections)            -- flReflectionsGain : Real_32_C
Engine/neo-api-openal.ads:992:9     - Unknown word (Reflections)            -- flReflectionsDelay : Real_32_C
Engine/neo-api-openal.ads:993:9     - Unknown word (Reflections)            -- flReflectionsPan : Array_Real
Engine/neo-api-openal.ads:994:13    - Unknown word (Reverb)                 -- flLateReverbGain : Real_32_C
Engine/neo-api-openal.ads:994:19    - Unknown word (Gain)                   -- flLateReverbGain : Real_32_C
Engine/neo-api-openal.ads:994:9     - Unknown word (Late)                   -- flLateReverbGain : Real
Engine/neo-api-openal.ads:995:13    - Unknown word (Reverb)                 -- flLateReverbDelay : Real_32_C
Engine/neo-api-openal.ads:995:9     - Unknown word (Late)                   -- flLateReverbDelay : Real
Engine/neo-api-openal.ads:996:13    - Unknown word (Reverb)                 -- flLateReverbPan : Array_Real
Engine/neo-api-openal.ads:996:9     - Unknown word (Late)                   -- flLateReverbPan : Array
Engine/neo-api-openal.ads:997:9     - Unknown word (Echo)                   -- flEchoTime : Real
Engine/neo-api-openal.ads:998:13    - Unknown word (Depth)                  -- flEchoDepth : Real_32
Engine/neo-api-openal.ads:998:9     - Unknown word (Echo)                   -- flEchoDepth : Real
Engine/neo-api-openal.ads:999:9     - Unknown word (Modulation)             -- flModulationTime : Real_32_C
Engine/neo-api-openal.ads:99:6      - Unknown word (LOOPING)      -- AL_LOOPING : constant
Engine/neo-api-opus.ads:102:58    - Unknown word (True)         -- with Import => True, Convention => StdCall
Engine/neo-api-opus.ads:102:64    - Unknown word (Convention)   -- with Import => True, Convention => StdCall, External
Engine/neo-api-opus.ads:105:29    - Unknown word (surround)     -- function opus_multistream_surround_encoder_init (st
Engine/neo-api-opus.ads:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-api-opus.ads:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-api-opus.ads:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo-api-opus.ads:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-api-opus.ads:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-api-opus.ads:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-api-opus.ads:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-api-opus.ads:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-api-opus.ads:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-api-opus.ads:110:52    - Unknown word (coupled)      -- coupled_streams : Ptr_Int_C
Engine/neo-api-opus.ads:111:97    - Unknown word (char)         -- -- Int_Unsigned char*
Engine/neo-api-opus.ads:117:29    - Unknown word (encode)       -- function opus_multistream_encode (st             : Ptr
Engine/neo-api-opus.ads:118:65    - Unknown word (Signed)       -- : Ptr_Int_16_Signed_C; -- const opus_int
Engine/neo-api-opus.ads:119:37    - Unknown word (frame)        -- frame_size : Int_C;
Engine/neo-api-opus.ads:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-api-opus.ads:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-api-opus.ads:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-api-opus.ads:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-api-opus.ads:120:91    - Unknown word (char)         -- -- Int_Unsigned char*
Engine/neo-api-opus.ads:121:46    - Unknown word (bytes)        -- max_data_bytes : Int_C)
Engine/neo-api-opus.ads:123:116   - Unknown word (encode)       -- > "opus_multistream_encode";
Engine/neo-api-opus.ads:126:29    - Unknown word (encode)       -- function opus_multistream_encode_float (st
Engine/neo-api-opus.ads:128:43    - Unknown word (frame)        -- frame_size : Int_C;
Engine/neo-api-opus.ads:130:52    - Unknown word (bytes)        -- max_data_bytes : Int_C)         --
Engine/neo-api-opus.ads:132:122   - Unknown word (encode)       -- > "opus_multistream_encode_float";
Engine/neo-api-opus.ads:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-api-opus.ads:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-api-opus.ads:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-api-opus.ads:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-api-opus.ads:146:29    - Unknown word (decoder)      -- function opus_multistream_decoder_get_size (streams
Engine/neo-api-opus.ads:151:29    - Unknown word (decoder)      -- function opus_multistream_decoder_create (Fs
Engine/neo-api-opus.ads:157:83    - Unknown word (Decoder)      -- -- OpusMSDecoder*
Engine/neo-api-opus.ads:158:124   - Unknown word (decoder)      -- > "opus_multistream_decoder_create";
Engine/neo-api-opus.ads:161:29    - Unknown word (decoder)      -- function opus_multistream_decoder_init (st
Engine/neo-api-opus.ads:161:77    - Unknown word (Decoder)      -- : Ptr;   -- OpusMSDecoder*
Engine/neo-api-opus.ads:168:122   - Unknown word (decoder)      -- > "opus_multistream_decoder_init";
Engine/neo-api-opus.ads:16:11     - Unknown word (binding)      -- -- Custom binding to the Opus codec API
Engine/neo-api-opus.ads:16:26     - Unknown word (Opus)         -- Custom binding to the Opus codec API: https://web
Engine/neo-api-opus.ads:174:61    - Unknown word (Signed)       -- : Ptr_Int_16_Signed_C; -- opus_int16*
Engine/neo-api-opus.ads:175:37    - Unknown word (frame)        -- frame_size : Int_C;
Engine/neo-api-opus.ads:17:17     - Unknown word (Opus)         -- package Neo.API.Opus is
Engine/neo-api-opus.ads:185:43    - Unknown word (frame)        -- frame_size : Int_C;
Engine/neo-api-opus.ads:223:17    - Unknown word (encode)       -- function opus_encode (st             : Ptr
Engine/neo-api-opus.ads:224:53    - Unknown word (Signed)       -- : Ptr_Int_16_Signed_C; -- const opus_int
Engine/neo-api-opus.ads:225:25    - Unknown word (frame)        -- frame_size : Int_C;
Engine/neo-api-opus.ads:227:34    - Unknown word (bytes)       -- max_data_bytes : Int_C)
Engine/neo-api-opus.ads:236:40    - Unknown word (bytes)       -- max_data_bytes : Int_C)         --
Engine/neo-api-opus.ads:23:31     - Unknown word (Unsigned)     -- uint16 Int_16_Unsigned_C
Engine/neo-api-opus.ads:23:6      - Unknown word (opus)         -- -- opus_uint16 Int_16
Engine/neo-api-opus.ads:24:31     - Unknown word (Signed)       -- int16 Int_16_Signed_C
Engine/neo-api-opus.ads:24:6      - Unknown word (opus)         -- -- opus_int16 Int_16
Engine/neo-api-opus.ads:25:28     - Unknown word (Unsigned)     -- opus_uint32 Int_Unsigned_C
Engine/neo-api-opus.ads:25:6      - Unknown word (opus)         -- -- opus_uint32 Int_Unsigned
Engine/neo-api-opus.ads:26:6      - Unknown word (opus)         -- -- opus_int32 Int_C
Engine/neo-api-opus.ads:274:49    - Unknown word (Signed)      -- : Ptr_Int_16_Signed_C; -- opus_int16*
Engine/neo-api-opus.ads:27:10     - Unknown word (Encoder)      -- -- OpusEncoder* Ptr
Engine/neo-api-opus.ads:27:6      - Unknown word (Opus)         -- -- OpusEncoder* Ptr
Engine/neo-api-opus.ads:28:10     - Unknown word (Decoder)      -- -- OpusDecoder* Ptr
Engine/neo-api-opus.ads:28:6      - Unknown word (Opus)         -- -- OpusDecoder* Ptr
Engine/neo-api-opus.ads:29:12     - Unknown word (Encoder)      -- -- OpusMSEncoder* Ptr
Engine/neo-api-opus.ads:29:6      - Unknown word (Opus)         -- -- OpusMSEncoder* Ptr
Engine/neo-api-opus.ads:302:17    - Unknown word (packet)      -- function opus_packet_parse (data
Engine/neo-api-opus.ads:302:24    - Unknown word (parse)       -- function opus_packet_parse (data           : Ptr
Engine/neo-api-opus.ads:305:31    - Unknown word (frames)      -- frames : Ptr;
Engine/neo-api-opus.ads:307:31    - Unknown word (payload)     -- payload_offset : Ptr_Int_C)
Engine/neo-api-opus.ads:307:39    - Unknown word (offset)      -- payload_offset : Ptr_Int_C)
Engine/neo-api-opus.ads:309:105   - Unknown word (parse)       -- Name => "opus_packet_parse";
Engine/neo-api-opus.ads:309:98    - Unknown word (packet)      -- External_Name => "opus_packet_parse";
Engine/neo-api-opus.ads:30:12     - Unknown word (Decoder)      -- -- OpusMSDecoder* Ptr
Engine/neo-api-opus.ads:312:17    - Unknown word (packet)      -- function opus_packet_get_bandwidth (data
Engine/neo-api-opus.ads:314:106   - Unknown word (packet)      -- External_Name => "opus_packet_get_bandwidth";
Engine/neo-api-opus.ads:317:17    - Unknown word (packet)      -- function opus_packet_get_samples_per_frame
Engine/neo-api-opus.ads:31:10     - Unknown word (Repacketizer) -- -- OpusRepacketizer* Ptr
Engine/neo-api-opus.ads:328:31    - Unknown word (frames)      -- function opus_packet_get_nb_frames (packet : Ptr;   --
Engine/neo-api-opus.ads:331:120   - Unknown word (frames)      -- "opus_packet_get_nb_frames";
Engine/neo-api-opus.ads:348:22    - Unknown word (soft)        -- procedure opus_pcm_soft_clip (pcm
Engine/neo-api-opus.ads:348:27    - Unknown word (clip)        -- procedure opus_pcm_soft_clip (pcm          : Ptr
Engine/neo-api-opus.ads:34:6      - Unknown word (Constants)    -- -- Constants --
Engine/neo-api-opus.ads:351:33    - Unknown word (softclip)    -- softclip_mem : Ptr_Real_32_C
Engine/neo-api-opus.ads:352:104   - Unknown word (soft)        -- External_Name => "opus_pcm_soft_clip";
Engine/neo-api-opus.ads:352:109   - Unknown word (clip)        -- Name => "opus_pcm_soft_clip";
Engine/neo-api-opus.ads:355:17    - Unknown word (repacketizer) -- function opus_repacketizer_get_size return Int
Engine/neo-api-opus.ads:356:106   - Unknown word (repacketizer) -- External_Name => "opus_repacketizer_get_size";
Engine/neo-api-opus.ads:359:17    - Unknown word (repacketizer) -- function opus_repacketizer_init (rp : Ptr)  --
Engine/neo-api-opus.ads:359:54    - Unknown word (Repacketizer) -- init (rp : Ptr)  -- OpusRepacketizer*
Engine/neo-api-opus.ads:360:54    - Unknown word (Repacketizer) -- return Ptr -- OpusRepacketizer*
Engine/neo-api-opus.ads:361:103   - Unknown word (repacketizer) -- External_Name => "opus_repacketizer_init";
Engine/neo-api-opus.ads:364:17    - Unknown word (repacketizer) -- function opus_repacketizer_create return Ptr -
Engine/neo-api-opus.ads:364:55    - Unknown word (Repacketizer) -- create return Ptr -- OpusRepacketizer*
Engine/neo-api-opus.ads:368:57    - Unknown word (Repacketizer) -- destroy (rp : Ptr) -- OpusRepacketizer*
Engine/neo-api-opus.ads:37:24     - Unknown word (ENCODER)      -- OPUS_MULTISTREAM_GET_ENCODER_STATE_REQUEST : constant
Engine/neo-api-opus.ads:37:3      - Unknown word (OPUS)         -- OPUS_MULTISTREAM_GET_ENCODER
Engine/neo-api-opus.ads:37:61     - Unknown word (Unsigned)     -- REQUEST : constant Int_Unsigned_C := 5120; -- 0
Engine/neo-api-opus.ads:37:8      - Unknown word (MULTISTREAM)  -- OPUS_MULTISTREAM_GET_ENCODER_STATE_REQUEST
Engine/neo-api-opus.ads:380:41    - Unknown word (beginning)    -- beginning : Int_C; -- int
Engine/neo-api-opus.ads:381:41    - Unknown word (ending)       -- ending : Int_C; -- int
Engine/neo-api-opus.ads:383:41    - Unknown word (maxlen)       -- maxlen : Int_C) -- opus
Engine/neo-api-opus.ads:388:37    - Unknown word (frames)       -- repacketizer_get_nb_frames (rp : Ptr)    -- OpusRepacket
Engine/neo-api-opus.ads:38:24     - Unknown word (DECODER)      -- OPUS_MULTISTREAM_GET_DECODER_STATE_REQUEST : constant
Engine/neo-api-opus.ads:38:3      - Unknown word (OPUS)         -- OPUS_MULTISTREAM_GET_DECODER
Engine/neo-api-opus.ads:38:61     - Unknown word (Unsigned)     -- REQUEST : constant Int_Unsigned_C := 5122; -- 0
Engine/neo-api-opus.ads:38:8      - Unknown word (MULTISTREAM)  -- OPUS_MULTISTREAM_GET_DECODER_STATE_REQUEST
Engine/neo-api-opus.ads:390:132   - Unknown word (frames)       -- repacketizer_get_nb_frames";
Engine/neo-api-opus.ads:395:35    - Unknown word (maxlen)       -- maxlen : Int_C) -- opus_int
Engine/neo-api-opus.ads:407:24    - Unknown word (unpad)        -- function opus_packet_unpad (data : Ptr;   -- Int
Engine/neo-api-opus.ads:410:105   - Unknown word (unpad)        -- Name => "opus_packet_unpad";
Engine/neo-api-opus.ads:41:6      - Unknown word (Macros)       -- -- Macros --
Engine/neo-api-opus.ads:421:36    - Unknown word (unpad)        -- opus_multistream_packet_unpad (data       : Ptr;
Engine/neo-api-opus.ads:425:129   - Unknown word (unpad)        -- opus_multistream_packet_unpad";
Engine/neo-api-opus.ads:44:14     - Unknown word (OPUS)         -- -- #define OPUS_MULTISTREAM_GET_ENCODER
Engine/neo-api-opus.ads:44:19     - Unknown word (MULTISTREAM)  -- -- #define OPUS_MULTISTREAM_GET_ENCODER_STATE (x
Engine/neo-api-opus.ads:44:35     - Unknown word (ENCODER)      -- OPUS_MULTISTREAM_GET_ENCODER_STATE (x,y) OPUS_MULTISTREAM
Engine/neo-api-opus.ads:44:55     - Unknown word (OPUS)         -- ENCODER_STATE (x,y) OPUS_MULTISTREAM_GET_ENCODER
Engine/neo-api-opus.ads:44:60     - Unknown word (MULTISTREAM)  -- ENCODER_STATE (x,y) OPUS_MULTISTREAM_GET_ENCODER_STATE_REQUEST
Engine/neo-api-opus.ads:44:76     - Unknown word (ENCODER)      -- OPUS_MULTISTREAM_GET_ENCODER_STATE_REQUEST,
Engine/neo-api-opus.ads:45:58     - Unknown word (void)         -- (((void)((x) == (opus_int32
Engine/neo-api-opus.ads:45:72     - Unknown word (opus)         -- (((void)((x) == (opus_int32)0)),
Engine/neo-api-opus.ads:47:74     - Unknown word (Encoder)      -- ((y) + ((y) - (OpusEncoder**)(y)))
Engine/neo-api-opus.ads:49:18     - Unknown word (MULTISTREAM)  -- -- #define PUS_MULTISTREAM_GET_DECODER_STATE (x
Engine/neo-api-opus.ads:49:34     - Unknown word (DECODER)      -- PUS_MULTISTREAM_GET_DECODER_STATE (x,y) OPUS_MULTISTREAM
Engine/neo-api-opus.ads:49:54     - Unknown word (OPUS)         -- DECODER_STATE (x,y) OPUS_MULTISTREAM_GET_DECODER
Engine/neo-api-opus.ads:49:75     - Unknown word (DECODER)      -- OPUS_MULTISTREAM_GET_DECODER_STATE_REQUEST,
Engine/neo-api-opus.ads:50:57     - Unknown word (void)         -- (((void)((x) == (opus_int32
Engine/neo-api-opus.ads:52:73     - Unknown word (Decoder)      -- ((y) + ((y) - (OpusDecoder**)(y)))
Engine/neo-api-opus.ads:55:6      - Unknown word (Subprograms)  -- -- Subprograms --
Engine/neo-api-opus.ads:59:17     - Unknown word (multistream)  -- function opus_multistream_encoder_get_size (streams
Engine/neo-api-opus.ads:59:29     - Unknown word (encoder)      -- function opus_multistream_encoder_get_size (streams
Engine/neo-api-opus.ads:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo-api-opus.ads:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo-api-opus.ads:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo-api-opus.ads:60:47     - Unknown word (coupled)      -- coupled_streams : Int_C) --
Engine/neo-api-opus.ads:62:114    - Unknown word (multistream)  -- External_Name => "opus_multistream_encoder_get_size";
Engine/neo-api-opus.ads:62:126    - Unknown word (encoder)      -- > "opus_multistream_encoder_get_size";
Engine/neo-api-opus.ads:62:62     - Unknown word (True)         -- with Import => True, Convention => StdCall
Engine/neo-api-opus.ads:62:68     - Unknown word (Convention)   -- with Import => True, Convention => StdCall, External
Engine/neo-api-opus.ads:65:17     - Unknown word (multistream)  -- function opus_multistream_surround_encoder_get
Engine/neo-api-opus.ads:65:29     - Unknown word (surround)     -- function opus_multistream_surround_encoder_get_size (channels
Engine/neo-api-opus.ads:65:38     - Unknown word (encoder)      -- multistream_surround_encoder_get_size (channels
Engine/neo-api-opus.ads:68:123    - Unknown word (multistream)  -- External_Name => "opus_multistream_surround_encoder_get
Engine/neo-api-opus.ads:68:135    - Unknown word (surround)     -- > "opus_multistream_surround_encoder_get_size";
Engine/neo-api-opus.ads:68:144    - Unknown word (encoder)      -- multistream_surround_encoder_get_size";
Engine/neo-api-opus.ads:68:71     - Unknown word (True)         -- with Import => True, Convention => StdCall
Engine/neo-api-opus.ads:68:77     - Unknown word (Convention)   -- with Import => True, Convention => StdCall, External
Engine/neo-api-opus.ads:71:17     - Unknown word (multistream)  -- function opus_multistream_encoder_create (Fs
Engine/neo-api-opus.ads:71:29     - Unknown word (encoder)      -- function opus_multistream_encoder_create (Fs
Engine/neo-api-opus.ads:74:45     - Unknown word (coupled)      -- coupled_streams : Int_C; --
Engine/neo-api-opus.ads:75:83     - Unknown word (Unsigned)     -- Ptr; -- const Int_Unsigned char*
Engine/neo-api-opus.ads:75:92     - Unknown word (char)         -- const Int_Unsigned char*
Engine/neo-api-opus.ads:78:79     - Unknown word (Encoder)      -- -- OpusMSEncoder*
Engine/neo-api-opus.ads:79:60     - Unknown word (True)         -- with Import => True, Convention => StdCall
Engine/neo-api-opus.ads:79:66     - Unknown word (Convention)   -- with Import => True, Convention => StdCall, External
Engine/neo-api-opus.ads:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-api-opus.ads:82:29     - Unknown word (surround)     -- function opus_multistream_surround_encoder_create (Fs
Engine/neo-api-opus.ads:86:54     - Unknown word (coupled)      -- coupled_streams : Ptr_Int_C
Engine/neo-api-opus.ads:87:99     - Unknown word (char)         -- -- Int_Unsigned char*
Engine/neo-api-opus.ads:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-api-opus.ads:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-api-opus.ads:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo-api-opus.ads:90:92     - Unknown word (Encoder)      -- -- OpusMSEncoder*
Engine/neo-api-opus.ads:91:133    - Unknown word (surround)     -- > "opus_multistream_surround_encoder_create";
Engine/neo-api-opus.ads:91:69     - Unknown word (True)         -- with Import => True, Convention => StdCall
Engine/neo-api-opus.ads:91:75     - Unknown word (Convention)   -- with Import => True, Convention => StdCall, External
Engine/neo-api-opus.ads:98:43     - Unknown word (coupled)      -- coupled_streams : Int_C; --
Engine/neo-api-opus.ads:99:90     - Unknown word (char)         -- const Int_Unsigned char*
Engine/neo-api-physx.ads:1000:51   - Unknown word (PINT)                  -- CreateMaterial(const PINT_MATERIAL_CREATE& desc
Engine/neo-api-physx.ads:1003:18   - Unknown word (Shortest)              -- -- PxQuat q = PxShortestRotation(PxVec3(0.0f
Engine/neo-api-physx.ads:1004:44   - Unknown word (Handle)                -- RigidActor = GetActorFromHandle(handle);
Engine/neo-api-physx.ads:1004:51   - Unknown word (handle)                -- GetActorFromHandle(handle);
Engine/neo-api-physx.ads:1005:34   - Unknown word (Handle)               -- Shape = GetShapeFromHandle(handle);
Engine/neo-api-physx.ads:1005:41   - Unknown word (handle)               -- GetShapeFromHandle(handle);
Engine/neo-api-physx.ads:1006:22   - Unknown word (RIGID)                -- - PxConcreteType::eRIGID_DYNAMIC)
Engine/neo-api-physx.ads:1006:7    - Unknown word (Concrete)             -- -- PxConcreteType::eRIGID_DYNAMIC
Engine/neo-api-physx.ads:1007:43   - Unknown word (cast)                 -- RigidDynamic = static_cast<PxRigidDynamic*>(RigidActor
Engine/neo-api-physx.ads:1008:65   - Unknown word (KINEMATIC)            -- PxRigidDynamicFlag::eKINEMATIC)
Engine/neo-api-physx.ads:1009:56   - Unknown word (KINEMATIC)            -- & PxRigidBodyFlag::eKINEMATIC)
Engine/neo-api-physx.ads:1010:24   - Unknown word (Mass)                 -- PxRigidBodyExt::setMassAndUpdateInertia(rigid
Engine/neo-api-physx.ads:1010:37   - Unknown word (Inertia)              -- RigidBodyExt::setMassAndUpdateInertia(rigid_body, desc.mMass
Engine/neo-api-physx.ads:1010:45   - Unknown word (rigid)                -- setMassAndUpdateInertia(rigid_body, desc.mMass);
Engine/neo-api-physx.ads:1010:63   - Unknown word (Mass)                 -- dateInertia(rigid_body, desc.mMass);
Engine/neo-api-physx.ads:1011:37   - Unknown word (Inertia)              -- RigidBodyExt::setMassAndUpdateInertia(rigid_body, desc.mMassForIner
Engine/neo-api-physx.ads:1011:45   - Unknown word (rigid)                -- setMassAndUpdateInertia(rigid_body, desc.mMassForInertia
Engine/neo-api-physx.ads:1011:70   - Unknown word (Inertia)              -- rigid_body, desc.mMassForInertia);
Engine/neo-api-physx.ads:1012:25   - Unknown word (rigid)                -- PxTransform Pose = rigid_body.getCMassLocalPose
Engine/neo-api-physx.ads:1014:19   - Unknown word (Vectors)              -- -- PxU32 gNbLocalVectors = 0;
Engine/neo-api-physx.ads:1015:18   - Unknown word (Vectors)              -- -- PxVec3 gLocalVectors[256];
Engine/neo-api-physx.ads:1017:102  - Unknown word (Anchor)               -- transformInv(*wsAnchor) : *wsAnchor;
Engine/neo-api-physx.ads:1017:34   - Unknown word (actors)               -- localPose[i].p = actors[i] ? actors[i]->getGlobalPose
Engine/neo-api-physx.ads:1017:46   - Unknown word (actors)               -- localPose[i].p = actors[i] ? actors[i]->getGlobalPose()
Engine/neo-api-physx.ads:1017:89   - Unknown word (Anchor)               -- tGlobalPose().transformInv(*wsAnchor) : *wsAnchor;
Engine/neo-api-physx.ads:1019:27   - Unknown word (Shortest)             -- const PxQuat q0 = PxShortestRotation(PxVec3(1.0f
Engine/neo-api-physx.ads:1019:74   - Unknown word (column)               -- f, 0.0f, 0.0f), rot.column0);
Engine/neo-api-physx.ads:101:29    - Unknown word (concrete)      -- function New_PxActor (concreteType : PxBase_h.PxType
Engine/neo-api-physx.ads:1022:31   - Unknown word (mode)                 -- PxForceMode::Enum mode;
Engine/neo-api-physx.ads:1023:23   - Unknown word (Collision)            -- PxSetGroupCollisionFlag(groups[i].mGroup
Engine/neo-api-physx.ads:1023:75   - Unknown word (false)                -- groups[i].mGroup1, false);
Engine/neo-api-physx.ads:1025:88   - Unknown word (mode)                 -- action), ToPxVec3(pos), mode);
Engine/neo-api-physx.ads:1026:41   - Unknown word (pose)                 -- PxTransform Pose(ToPxVec3(pose.mPos), ToPxQuat(pose
Engine/neo-api-physx.ads:1026:62   - Unknown word (pose)                 -- pose.mPos), ToPxQuat(pose.mRot));
Engine/neo-api-physx.ads:1027:70   - Unknown word (pose)                 -- mPhysics->createRigidStatic(pose);
Engine/neo-api-physx.ads:1028:23   - Unknown word (actor)                -- PxRigidActor* actor0 = (PxRigidActor*)desc
Engine/neo-api-physx.ads:1029:132  - Unknown word (Pivot)                -- PxTransform(ToPxVec3(jc.mLocalPivot0)), actor1, PxTransform
Engine/neo-api-physx.ads:1029:180  - Unknown word (Pivot)                -- PxTransform(ToPxVec3(jc.mLocalPivot1)));
Engine/neo-api-physx.ads:102:18    - Unknown word (Constructor)   -- pragma CPP_Constructor (New_PxActor, "_ZN5physx
Engine/neo-api-physx.ads:1030:21   - Unknown word (ASSERT)               -- -- ASSERT(j);
Engine/neo-api-physx.ads:1032:31   - Unknown word (Prismatic)            -- j->setPrismaticJointFlag(PxPrismaticJointFlag
Engine/neo-api-physx.ads:1032:52   - Unknown word (Prismatic)            -- setPrismaticJointFlag(PxPrismaticJointFlag::eLIMIT_ENABLED
Engine/neo-api-physx.ads:1032:88   - Unknown word (false)                -- ticJointFlag::eLIMIT_ENABLED, false);
Engine/neo-api-physx.ads:1033:21   - Unknown word (Setup)                -- -- SetupD6Projection(j, enable
Engine/neo-api-physx.ads:1033:28   - Unknown word (Projection)           -- SetupD6Projection(j, enable_projection
Engine/neo-api-physx.ads:1033:49   - Unknown word (projection)           -- Projection(j, enable_projection, projection_linear_tolerance
Engine/neo-api-physx.ads:1033:61   - Unknown word (projection)           -- enable_projection, projection_linear_tolerance,
Engine/neo-api-physx.ads:1033:72   - Unknown word (linear)               -- projection, projection_linear_tolerance,
Engine/neo-api-physx.ads:1033:79   - Unknown word (tolerance)            -- projection, projection_linear_tolerance,
Engine/neo-api-physx.ads:1034:27   - Unknown word (Motion)               -- j->setMotion(PxD6Axis::eX, PxD6Motion
Engine/neo-api-physx.ads:1034:38   - Unknown word (Axis)                 -- j->setMotion(PxD6Axis::eX, PxD6Motion::eFREE
Engine/neo-api-physx.ads:1034:52   - Unknown word (Motion)               -- setMotion(PxD6Axis::eX, PxD6Motion::eFREE);
Engine/neo-api-physx.ads:1035:143  - Unknown word (EDGES)                -- ocessingFlag::eDISABLE_ACTIVE_EDGES_PRECOMPUTE;
Engine/neo-api-physx.ads:1035:64   - Unknown word (Edges)                -- mParams.mPrecomputeActiveEdges ? PxMeshPreprocessingFlags
Engine/neo-api-physx.ads:1037:50   - Unknown word (MANUAL)               -- PxSceneFlag::eENABLE_MANUAL_QUERY_UPDATE, gSQManualFlushU
Engine/neo-api-physx.ads:1037:74   - Unknown word (Manual)               -- MANUAL_QUERY_UPDATE, gSQManualFlushUpdates);
Engine/neo-api-physx.ads:1037:80   - Unknown word (Flush)                -- QUERY_UPDATE, gSQManualFlushUpdates);
Engine/neo-api-physx.ads:1038:47   - Unknown word (Torque)              -- RigidBody->addTorque(GlobalTorque, PxForceMode
Engine/neo-api-physx.ads:1038:60   - Unknown word (Torque)              -- RigidBody->addTorque(GlobalTorque, PxForceMode::eFORCE
Engine/neo-api-physx.ads:1038:89   - Unknown word (true)                -- PxForceMode::eFORCE, true);
Engine/neo-api-physx.ads:1039:47   - Unknown word (Torque)              -- RigidBody->addTorque(GlobalTorque, PxForceMode
Engine/neo-api-physx.ads:1039:60   - Unknown word (Torque)              -- RigidBody->addTorque(GlobalTorque, PxForceMode::eACCELERATION
Engine/neo-api-physx.ads:1039:82   - Unknown word (ACCELERATION)        -- GlobalTorque, PxForceMode::eACCELERATION, true);
Engine/neo-api-physx.ads:1039:96   - Unknown word (true)                -- PxForceMode::eACCELERATION, true);
Engine/neo-api-physx.ads:1041:49   - Unknown word (KINEMATIC)           -- gidBodyFlag(PxRigidBodyFlag::eKINEMATIC, desc.mKinematic);
Engine/neo-api-physx.ads:1041:66   - Unknown word (Kinematic)           -- idBodyFlag::eKINEMATIC, desc.mKinematic);
Engine/neo-api-physx.ads:1042:17   - Unknown word (udword)              -- -- udword Nb = mScene->getActors
Engine/neo-api-physx.ads:1042:40   - Unknown word (Actors)              -- udword Nb = mScene->getActors(PxActorTypeFlag::eRIGID
Engine/neo-api-physx.ads:1042:65   - Unknown word (RIGID)               -- getActors(PxActorTypeFlag::eRIGID_DYNAMIC, Actors, 20
Engine/neo-api-physx.ads:1042:80   - Unknown word (Actors)              -- ctorTypeFlag::eRIGID_DYNAMIC, Actors, 2048);
Engine/neo-api-physx.ads:1043:63   - Unknown word (KINEMATIC)           -- PxRigidDynamicFlag::eKINEMATIC, desc.mKinematic);
Engine/neo-api-physx.ads:1043:80   - Unknown word (Kinematic)           -- ynamicFlag::eKINEMATIC, desc.mKinematic);
Engine/neo-api-physx.ads:1045:10   - Unknown word (Cooking)             -- -- mCooking = PxCreateCooking(PX
Engine/neo-api-physx.ads:1045:28   - Unknown word (Cooking)             -- mCooking = PxCreateCooking(PX_PHYSICS_VERSION,
Engine/neo-api-physx.ads:1046:11   - Unknown word (Cooking)             -- -- PxCookingParams Params(scale)
Engine/neo-api-physx.ads:1047:29   - Unknown word (Frame)               -- PxSetJointGlobalFrame(*rv, &globalAnchor,
Engine/neo-api-physx.ads:1047:47   - Unknown word (Anchor)              -- tJointGlobalFrame(*rv, &globalAnchor, &globalAxis);
Engine/neo-api-physx.ads:1047:62   - Unknown word (Axis)                -- globalAnchor, &globalAxis);
Engine/neo-api-physx.ads:1049:55   - Unknown word (PROJECTION)          -- raintFlags(PxConstraintFlag::ePROJECTION);
Engine/neo-api-physx.ads:1050:24   - Unknown word (Revolute)            -- rv->setRevoluteJointFlags(PxRevoluteJointFlag
Engine/neo-api-physx.ads:1050:45   - Unknown word (Revolute)            -- setRevoluteJointFlags(PxRevoluteJointFlag::eLIMIT_ENABLED
Engine/neo-api-physx.ads:1051:15   - Unknown word (Revolute)            -- -- PxRevoluteJoint* rv = PxRevoluteJointCre
Engine/neo-api-physx.ads:1052:27   - Unknown word (Projection)          -- j->setProjectionLinearTolerance(projection
Engine/neo-api-physx.ads:1052:37   - Unknown word (Linear)              -- j->setProjectionLinearTolerance(projection
Engine/neo-api-physx.ads:1052:43   - Unknown word (Tolerance)           -- >setProjectionLinearTolerance(projection_linear_tolerance
Engine/neo-api-physx.ads:1052:53   - Unknown word (projection)          -- setProjectionLinearTolerance(projection_linear_tolerance);
Engine/neo-api-physx.ads:1052:64   - Unknown word (linear)              -- ionLinearTolerance(projection_linear_tolerance);
Engine/neo-api-physx.ads:1052:71   - Unknown word (tolerance)           -- arTolerance(projection_linear_tolerance);
Engine/neo-api-physx.ads:1053:27   - Unknown word (Projection)          -- j->setProjectionAngularTolerance(projection
Engine/neo-api-physx.ads:1053:37   - Unknown word (Angular)             -- j->setProjectionAngularTolerance(projection
Engine/neo-api-physx.ads:1053:44   - Unknown word (Tolerance)           -- setProjectionAngularTolerance(projection_angular_tolerance
Engine/neo-api-physx.ads:1053:54   - Unknown word (projection)          -- setProjectionAngularTolerance(projection_angular_tolerance);
Engine/neo-api-physx.ads:1053:65   - Unknown word (angular)             -- onAngularTolerance(projection_angular_tolerance);
Engine/neo-api-physx.ads:1053:73   - Unknown word (tolerance)           -- rTolerance(projection_angular_tolerance);
Engine/neo-api-physx.ads:1054:82   - Unknown word (true)                -- uteJointFlag::eLIMIT_ENABLED, true);
Engine/neo-api-physx.ads:1055:28   - Unknown word (Angular)             -- PxJointAngularLimitPair limit(0.0f
Engine/neo-api-physx.ads:1055:75   - Unknown word (Distance)            -- f, 0.0f, limitContactDistance);
Engine/neo-api-physx.ads:1056:37   - Unknown word (Frame)               -- PxSetJointGlobalFrame(*j, &GlobalAnchor,
Engine/neo-api-physx.ads:1056:54   - Unknown word (Anchor)              -- etJointGlobalFrame(*j, &GlobalAnchor, &GlobalAxis);
Engine/neo-api-physx.ads:1056:69   - Unknown word (Axis)                -- GlobalAnchor, &GlobalAxis);
Engine/neo-api-physx.ads:1057:100  - Unknown word (Axis)                -- , ToPxVec3(jc.mLocalAxis0), 0);
Engine/neo-api-physx.ads:1057:37   - Unknown word (Frame)               -- PxSetJointGlobalFrame(*j, actor0, ToPxVec
Engine/neo-api-physx.ads:1057:73   - Unknown word (Pivot)               -- , ToPxVec3(jc.mLocalPivot0), ToPxVec3(jc.mLocalAxis
Engine/neo-api-physx.ads:1059:27   - Unknown word (Motion)              -- j->setMotion(PxD6Axis::eTWIST, PxD
Engine/neo-api-physx.ads:1059:45   - Unknown word (TWIST)               -- setMotion(PxD6Axis::eTWIST, PxD6Motion::eFREE)
Engine/neo-api-physx.ads:1059:56   - Unknown word (Motion)              -- PxD6Axis::eTWIST, PxD6Motion::eFREE);
Engine/neo-api-physx.ads:105:18    - Unknown word (Constructor)   -- pragma CPP_Constructor (New_PxActor, "_ZN5physx
Engine/neo-api-physx.ads:1060:27   - Unknown word (Motion)              -- j->setMotion(PxD6Axis::eSWING1, PxD
Engine/neo-api-physx.ads:1060:45   - Unknown word (SWING)               -- setMotion(PxD6Axis::eSWING1, PxD6Motion::eFREE
Engine/neo-api-physx.ads:1061:28   - Unknown word (Angular)             -- PxJointAngularLimitPair limit(0.0f
Engine/neo-api-physx.ads:1061:75   - Unknown word (Distance)            -- f, 0.0f, limitContactDistance);
Engine/neo-api-physx.ads:1063:35   - Unknown word (Frame)               -- PxSetJointGlobalFrame(*j, actor1, ToPxVec
Engine/neo-api-physx.ads:1063:71   - Unknown word (Pivot)              -- , ToPxVec3(jc.mLocalPivot1), ToPxVec3(jc.mLocalAxis
Engine/neo-api-physx.ads:108:22    - Unknown word (True)          -- with Import => True,
Engine/neo-api-physx.ads:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-api-physx.ads:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-api-physx.ads:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo-api-physx.ads:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-api-physx.ads:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-api-physx.ads:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-api-physx.ads:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-api-physx.ads:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-api-physx.ads:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-api-physx.ads:117:18    - Unknown word (Kind)          -- function isKindOf (this : access constant
Engine/neo-api-physx.ads:117:78    - Unknown word (Strings)       -- name : Interfaces.C.Strings.chars_ptr) return Extensions
Engine/neo-api-physx.ads:117:86    - Unknown word (chars)         -- Interfaces.C.Strings.chars_ptr) return Extensions
Engine/neo-api-physx.ads:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-api-physx.ads:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-api-physx.ads:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-api-physx.ads:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-api-physx.ads:120:51    - Unknown word (Kind)         -- ZNK5physx7PxActor8isKindOfEPKc";
Engine/neo-api-physx.ads:125:6     - Unknown word (Math)         -- -- Math --
Engine/neo-api-physx.ads:128:100   - Unknown word (pxmath)       -- physx\include\foundation\pxmath.h:58
Engine/neo-api-physx.ads:133:104   - Unknown word (pxmath)       -- physx\include\foundation\pxmath.h:59
Engine/neo-api-physx.ads:138:103   - Unknown word (pxmath)       -- physx\include\foundation\pxmath.h:60
Engine/neo-api-physx.ads:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-api-physx.ads:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-api-physx.ads:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-api-physx.ads:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-api-physx.ads:143:103   - Unknown word (pxmath)       -- physx\include\foundation\pxmath.h:61
Engine/neo-api-physx.ads:148:106   - Unknown word (pxmath)       -- physx\include\foundation\pxmath.h:62
Engine/neo-api-physx.ads:158:11    - Unknown word (Four)         -- PxPiDivFour : aliased constant float
Engine/neo-api-physx.ads:161:46    - Unknown word (Four)         -- "_ZN5physxL11PxPiDivFourE";
Engine/neo-api-physx.ads:168:15    - Unknown word (Equals)       -- function PxEquals
Engine/neo-api-physx.ads:16:17     - Unknown word (Phys)         -- package Neo.API.PhysX is
Engine/neo-api-physx.ads:174:39    - Unknown word (Equals)       -- Name => "_ZN5physx8PxEqualsEfff";
Engine/neo-api-physx.ads:174:45    - Unknown word (Efff)         -- "_ZN5physx8PxEqualsEfff";
Engine/neo-api-physx.ads:181:24    - Unknown word (stdint)       -- function PxAbs (a : stdint_h.int32_t) return stdint
Engine/neo-api-physx.ads:181:49    - Unknown word (stdint)       -- stdint_h.int32_t) return stdint_h.int32_t -- c:\users
Engine/neo-api-physx.ads:196:15    - Unknown word (Recip)        -- function PxRecipSqrt (a : float) return
Engine/neo-api-physx.ads:199:40    - Unknown word (Recip)        -- Name => "_ZN5physx11PxRecipSqrtEf";
Engine/neo-api-physx.ads:19:6      - Unknown word (Actor)        -- -- Actor --
Engine/neo-api-physx.ads:201:15    - Unknown word (Recip)        -- function PxRecipSqrt (a : double) return
Engine/neo-api-physx.ads:204:40    - Unknown word (Recip)        -- Name => "_ZN5physx11PxRecipSqrtEd";
Engine/neo-api-physx.ads:22:111    - Unknown word (Actor)         -- 4.1\physx\include\PxActor.h:57
Engine/neo-api-physx.ads:22:14     - Unknown word (Dominance)    -- subtype PxDominanceGroup is pxsimpletypes
Engine/neo-api-physx.ads:22:32     - Unknown word (pxsimpletypes) -- PxDominanceGroup is pxsimpletypes_h.PxU8; -- C:\Users
Engine/neo-api-physx.ads:22:67     - Unknown word (exitcode)      -- h.PxU8; -- C:\Users\exitcode0\Desktop\PhysX-4.1\physx
Engine/neo-api-physx.ads:22:85     - Unknown word (Phys)          -- Users\exitcode0\Desktop\PhysX-4.1\physx\include\PxActor
Engine/neo-api-physx.ads:22:95     - Unknown word (physx)         -- exitcode0\Desktop\PhysX-4.1\physx\include\PxActor.h:5
Engine/neo-api-physx.ads:24:20     - Unknown word (unsigned)      -- subtype Enum is unsigned;
Engine/neo-api-physx.ads:25:30     - Unknown word (unsigned)      -- eVISUALIZATION : constant unsigned := 1;
Engine/neo-api-physx.ads:25:5      - Unknown word (VISUALIZATION) -- eVISUALIZATION : constant unsigned
Engine/neo-api-physx.ads:26:13     - Unknown word (GRAVITY)       -- eDISABLE_GRAVITY : constant unsigned
Engine/neo-api-physx.ads:26:32     - Unknown word (unsigned)      -- eDISABLE_GRAVITY : constant unsigned := 2;
Engine/neo-api-physx.ads:276:17    - Unknown word (Finite)       -- function PxIsFinite (f : float) return Extensions
Engine/neo-api-physx.ads:279:42    - Unknown word (Finite)       -- Name => "_ZN5physx10PxIsFiniteEf";
Engine/neo-api-physx.ads:27:10     - Unknown word (SLEEP)         -- eSEND_SLEEP_NOTIFIES : constant
Engine/neo-api-physx.ads:27:16     - Unknown word (NOTIFIES)      -- eSEND_SLEEP_NOTIFIES : constant unsigned
Engine/neo-api-physx.ads:27:36     - Unknown word (unsigned)      -- NOTIFIES : constant unsigned := 4;
Engine/neo-api-physx.ads:281:17    - Unknown word (Finite)       -- function PxIsFinite (f : double) return
Engine/neo-api-physx.ads:284:42    - Unknown word (Finite)       -- Name => "_ZN5physx10PxIsFiniteEd";
Engine/neo-api-physx.ads:286:15    - Unknown word (Floor)        -- function PxFloor (a : float) return float
Engine/neo-api-physx.ads:289:39    - Unknown word (Floor)        -- Name => "_ZN5physx7PxFloorEf";
Engine/neo-api-physx.ads:28:35     - Unknown word (unsigned)      -- SIMULATION : constant unsigned := 8;
Engine/neo-api-physx.ads:296:15    - Unknown word (Ceil)         -- function PxCeil (a : float) return float
Engine/neo-api-physx.ads:299:39    - Unknown word (Ceil)         -- Name => "_ZN5physx6PxCeilEf";
Engine/neo-api-physx.ads:29:11     - Unknown word (Actor)         -- type PxActorFlag is record
Engine/neo-api-physx.ads:29:16     - Unknown word (Flag)          -- type PxActorFlag is record
Engine/neo-api-physx.ads:322:118   - Unknown word (pxtransform)  -- physx\include\foundation\pxtransform.h:51
Engine/neo-api-physx.ads:322:22    - Unknown word (pxquat)       -- q : aliased pxquat_h.Class_PxQuat.PxQuat
Engine/neo-api-physx.ads:322:39    - Unknown word (Quat)         -- aliased pxquat_h.Class_PxQuat.PxQuat; -- c:\users
Engine/neo-api-physx.ads:322:46    - Unknown word (Quat)         -- pxquat_h.Class_PxQuat.PxQuat; -- c:\users\exitcode
Engine/neo-api-physx.ads:323:118   - Unknown word (pxtransform)  -- physx\include\foundation\pxtransform.h:52
Engine/neo-api-physx.ads:323:22    - Unknown word (pxvec)        -- p : aliased pxvec3_h.Class_PxVec3.PxVec
Engine/neo-api-physx.ads:328:118   - Unknown word (pxtransform)  -- physx\include\foundation\pxtransform.h:54
Engine/neo-api-physx.ads:329:18    - Unknown word (Constructor)  -- pragma CPP_Constructor (New_PxTransform, "
Engine/neo-api-physx.ads:32:52     - Unknown word (exitcode)      -- By_Copy; -- C:\Users\exitcode0\Desktop\PhysX-4.1\physx
Engine/neo-api-physx.ads:32:70     - Unknown word (Phys)          -- Users\exitcode0\Desktop\PhysX-4.1\physx\include\PxActor
Engine/neo-api-physx.ads:32:80     - Unknown word (physx)         -- exitcode0\Desktop\PhysX-4.1\physx\include\PxActor.h:6
Engine/neo-api-physx.ads:32:9      - Unknown word (Convention)    -- with Convention => C_Pass_By_Copy;
Engine/neo-api-physx.ads:32:96     - Unknown word (Actor)         -- 4.1\physx\include\PxActor.h:64
Engine/neo-api-physx.ads:331:176   - Unknown word (pxtransform)  -- physx\include\foundation\pxtransform.h:58
Engine/neo-api-physx.ads:331:60    - Unknown word (pxvec)        -- position : access constant pxvec3_h.Class_PxVec3.PxVec
Engine/neo-api-physx.ads:332:18    - Unknown word (Constructor)  -- pragma CPP_Constructor (New_PxTransform, "
Engine/neo-api-physx.ads:332:73    - Unknown word (ERKNS)        -- physx11PxTransformC1ERKNS_6PxVec3E");
Engine/neo-api-physx.ads:334:140   - Unknown word (pxtransform)  -- physx\include\foundation\pxtransform.h:62
Engine/neo-api-physx.ads:335:18    - Unknown word (Constructor)  -- pragma CPP_Constructor (New_PxTransform, "
Engine/neo-api-physx.ads:335:81    - Unknown word (IDENTITYE)    -- PxTransformC1ENS_10PxIDENTITYE");
Engine/neo-api-physx.ads:337:33    - Unknown word (orientation)  -- function New_PxTransform (orientation : access constant pxquat
Engine/neo-api-physx.ads:337:63    - Unknown word (pxquat)       -- orientation : access constant pxquat_h.Class_PxQuat.PxQuat
Engine/neo-api-physx.ads:337:80    - Unknown word (Quat)         -- constant pxquat_h.Class_PxQuat.PxQuat) return PxTransform
Engine/neo-api-physx.ads:337:87    - Unknown word (Quat)         -- pxquat_h.Class_PxQuat.PxQuat) return PxTransform
Engine/neo-api-physx.ads:338:73    - Unknown word (ERKNS)        -- physx11PxTransformC1ERKNS_6PxQuatE");
Engine/neo-api-physx.ads:338:82    - Unknown word (Quat)         -- PxTransformC1ERKNS_6PxQuatE");
Engine/neo-api-physx.ads:344:22    - Unknown word (pxquat)       -- aQ : access pxquat_h.Class_PxQuat.PxQuat
Engine/neo-api-physx.ads:345:73    - Unknown word (Efff)         -- physx11PxTransformC1EfffNS_6PxQuatE");
Engine/neo-api-physx.ads:347:105   - Unknown word (pxquat)       -- q0 : access constant pxquat_h.Class_PxQuat.PxQuat
Engine/neo-api-physx.ads:347:54    - Unknown word (pxvec)        -- p0 : access constant pxvec3_h.Class_PxVec3.PxVec
Engine/neo-api-physx.ads:348:73    - Unknown word (ERKNS)        -- physx11PxTransformC1ERKNS_6PxVec3ERKNS_6PxQuatE
Engine/neo-api-physx.ads:348:86    - Unknown word (ERKNS)        -- PxTransformC1ERKNS_6PxVec3ERKNS_6PxQuatE");
Engine/neo-api-physx.ads:34:102    - Unknown word (physx)         -- exitcode0\Desktop\PhysX-4.1\physx\include\PxActor.h:1
Engine/neo-api-physx.ads:34:14     - Unknown word (Actor)         -- subtype PxActorFlags is PxFlags_h.Class
Engine/neo-api-physx.ads:34:19     - Unknown word (Flags)         -- subtype PxActorFlags is PxFlags_h.Class_PxFlags
Engine/neo-api-physx.ads:34:30     - Unknown word (Flags)         -- subtype PxActorFlags is PxFlags_h.Class_PxFlags.PxFlags
Engine/neo-api-physx.ads:34:46     - Unknown word (Flags)         -- is PxFlags_h.Class_PxFlags.PxFlags; -- C:\Users
Engine/neo-api-physx.ads:34:54     - Unknown word (Flags)         -- PxFlags_h.Class_PxFlags.PxFlags; -- C:\Users\exitcode
Engine/neo-api-physx.ads:34:74     - Unknown word (exitcode)      -- PxFlags; -- C:\Users\exitcode0\Desktop\PhysX-4.1\physx
Engine/neo-api-physx.ads:34:92     - Unknown word (Phys)          -- Users\exitcode0\Desktop\PhysX-4.1\physx\include\PxActor
Engine/neo-api-physx.ads:351:73    - Unknown word (ERKNS)        -- physx11PxTransformC1ERKNS_7PxMat44E");
Engine/neo-api-physx.ads:353:16    - Unknown word (operator)     -- function operator_eq (this : access constant
Engine/neo-api-physx.ads:356:44    - Unknown word (Transformeq)  -- Name => "_ZNK5physx11PxTransformeqERKS0_";
Engine/neo-api-physx.ads:356:55    - Unknown word (ERKS)         -- physx11PxTransformeqERKS0_";
Engine/neo-api-physx.ads:358:16    - Unknown word (operator)     -- function operator_t (this : access constant
Engine/neo-api-physx.ads:361:44    - Unknown word (Transformml)  -- Name => "_ZNK5physx11PxTransformmlERKS0_";
Engine/neo-api-physx.ads:361:55    - Unknown word (ERKS)         -- physx11PxTransformmlERKS0_";
Engine/neo-api-physx.ads:363:63    - Unknown word (other)        -- access PxTransform; other : access PxTransform
Engine/neo-api-physx.ads:366:43    - Unknown word (Transformm)   -- Name => "_ZN5physx11PxTransformmLERS0_";
Engine/neo-api-physx.ads:366:53    - Unknown word (LERS)         -- ZN5physx11PxTransformmLERS0_";
Engine/neo-api-physx.ads:368:19    - Unknown word (Inverse)      -- function getInverse (this : access constant
Engine/neo-api-physx.ads:371:58    - Unknown word (Inverse)      -- physx11PxTransform10getInverseEv";
Engine/neo-api-physx.ads:373:124   - Unknown word (pxvec)        -- PxVec3.PxVec3) return pxvec3_h.Class_PxVec3.PxVec
Engine/neo-api-physx.ads:373:87    - Unknown word (pxvec)        -- input : access constant pxvec3_h.Class_PxVec3.PxVec
Engine/neo-api-physx.ads:37:115    - Unknown word (Phys)          -- Users\exitcode0\Desktop\PhysX-4.1\physx\include\PxActor
Engine/neo-api-physx.ads:37:125    - Unknown word (physx)         -- exitcode0\Desktop\PhysX-4.1\physx\include\PxActor.h:1
Engine/neo-api-physx.ads:37:13     - Unknown word (operator)      -- function operator_a (a : Enum; b : Enum
Engine/neo-api-physx.ads:37:54     - Unknown word (Flags)         -- b : Enum) return PxFlags_h.Class_PxFlags.PxFlags
Engine/neo-api-physx.ads:37:97     - Unknown word (exitcode)      -- PxFlags -- C:\Users\exitcode0\Desktop\PhysX-4.1\physx
Engine/neo-api-physx.ads:38:19     - Unknown word (True)          -- with Import => True,
Engine/neo-api-physx.ads:396:63    - Unknown word (ERKS)         -- PxTransform9transformERKS0_";
Engine/neo-api-physx.ads:39:9      - Unknown word (Convention)    -- Convention => CPP,
Engine/neo-api-physx.ads:403:18    - Unknown word (Sane)         -- function isSane (this : access constant
Engine/neo-api-physx.ads:406:56    - Unknown word (Sane)         -- physx11PxTransform6isSaneEv";
Engine/neo-api-physx.ads:408:18    - Unknown word (Finite)       -- function isFinite (this : access constant
Engine/neo-api-physx.ads:40:31     - Unknown word (physxan)       -- External_Name => "_ZN5physxanENS_11PxActorFlag4EnumES
Engine/neo-api-physx.ads:40:51     - Unknown word (Flag)          -- physxanENS_11PxActorFlag4EnumES1_";
Engine/neo-api-physx.ads:416:67    - Unknown word (ERKS)         -- PxTransform12transformInvERKS0_";
Engine/neo-api-physx.ads:418:127   - Unknown word (pxplane)      -- PxPlane.PxPlane) return pxplane_h.Class_PxPlane.PxPlane
Engine/neo-api-physx.ads:418:87    - Unknown word (pxplane)      -- plane : access constant pxplane_h.Class_PxPlane.PxPlane
Engine/neo-api-physx.ads:423:134   - Unknown word (pxplane)      -- PxPlane.PxPlane) return pxplane_h.Class_PxPlane.PxPlane
Engine/neo-api-physx.ads:423:16    - Unknown word (inverse)      -- function inverseTransform (this : access
Engine/neo-api-physx.ads:423:94    - Unknown word (pxplane)      -- plane : access constant pxplane_h.Class_PxPlane.PxPlane
Engine/neo-api-physx.ads:426:55    - Unknown word (inverse)      -- physx11PxTransform16inverseTransformERKNS_7PxPlaneE
Engine/neo-api-physx.ads:428:19    - Unknown word (Normalized)   -- function getNormalized (this : access constant
Engine/neo-api-physx.ads:42:116    - Unknown word (physx)         -- exitcode0\Desktop\PhysX-4.1\physx\include\PxActor.h:1
Engine/neo-api-physx.ads:42:13     - Unknown word (operator)      -- function operator_ti (a : Enum) return
Engine/neo-api-physx.ads:42:88     - Unknown word (exitcode)      -- PxFlags -- C:\Users\exitcode0\Desktop\PhysX-4.1\physx
Engine/neo-api-physx.ads:431:58    - Unknown word (Normalized)   -- physx11PxTransform13getNormalizedEv";
Engine/neo-api-physx.ads:43:19     - Unknown word (True)          -- with Import => True,
Engine/neo-api-physx.ads:441:118   - Unknown word (pxplane)      -- physx\include\foundation\pxplane.h:136
Engine/neo-api-physx.ads:44:9      - Unknown word (Convention)    -- Convention => CPP,
Engine/neo-api-physx.ads:454:10    - Unknown word (distance)     -- distance : float) return PxPlane
Engine/neo-api-physx.ads:455:64    - Unknown word (Effff)        -- "_ZN5physx7PxPlaneC1Effff");
Engine/neo-api-physx.ads:457:84    - Unknown word (distance)     -- Class_PxVec3.PxVec3; distance : float) return PxPlane
Engine/neo-api-physx.ads:45:31     - Unknown word (physxco)       -- External_Name => "_ZN5physxcoENS_11PxActorFlag4EnumE
Engine/neo-api-physx.ads:45:51     - Unknown word (Flag)          -- physxcoENS_11PxActorFlag4EnumE";
Engine/neo-api-physx.ads:472:43    - Unknown word (Planeeq)      -- Name => "_ZNK5physx7PxPlaneeqERKS0_";
Engine/neo-api-physx.ads:472:50    - Unknown word (ERKS)         -- _ZNK5physx7PxPlaneeqERKS0_";
Engine/neo-api-physx.ads:474:16    - Unknown word (distance)    -- function distance (this : access constant
Engine/neo-api-physx.ads:477:49    - Unknown word (distance)    -- "_ZNK5physx7PxPlane8distanceERKNS_6PxVec3E";
Engine/neo-api-physx.ads:479:16    - Unknown word (contains)    -- function contains (this : access constant
Engine/neo-api-physx.ads:47:13     - Unknown word (operator)      -- function operator_o (a : Enum; b : Enum
Engine/neo-api-physx.ads:482:49    - Unknown word (contains)    -- "_ZNK5physx7PxPlane8containsERKNS_6PxVec3E";
Engine/neo-api-physx.ads:48:19     - Unknown word (True)          -- with Import => True,
Engine/neo-api-physx.ads:494:17    - Unknown word (normalize)   -- procedure normalize (this : access PxPlane
Engine/neo-api-physx.ads:497:48    - Unknown word (normalize)   -- "_ZN5physx7PxPlane9normalizeEv";
Engine/neo-api-physx.ads:49:9      - Unknown word (Convention)    -- Convention => CPP,
Engine/neo-api-physx.ads:501:6     - Unknown word (Shape)       -- -- Shape --
Engine/neo-api-physx.ads:504:43    - Unknown word (incomplete)  -- is null record;   -- incomplete struct
Engine/neo-api-physx.ads:506:43    - Unknown word (incomplete)  -- is null record;   -- incomplete struct
Engine/neo-api-physx.ads:508:11    - Unknown word (Sweep)       -- type PxSweepHit is null record;
Engine/neo-api-physx.ads:508:41    - Unknown word (incomplete)  -- is null record;   -- incomplete struct
Engine/neo-api-physx.ads:50:31     - Unknown word (physxor)       -- External_Name => "_ZN5physxorENS_11PxActorFlag4EnumES
Engine/neo-api-physx.ads:50:51     - Unknown word (Flag)          -- physxorENS_11PxActorFlag4EnumES1_";
Engine/neo-api-physx.ads:511:16    - Unknown word (SHAPE)       -- eSIMULATION_SHAPE : constant unsigned
Engine/neo-api-physx.ads:512:17    - Unknown word (SHAPE)       -- eSCENE_QUERY_SHAPE : constant unsigned
Engine/neo-api-physx.ads:512:5     - Unknown word (SCENE)       -- eSCENE_QUERY_SHAPE : constant
Engine/neo-api-physx.ads:513:13    - Unknown word (SHAPE)       -- eTRIGGER_SHAPE : constant unsigned
Engine/neo-api-physx.ads:514:5     - Unknown word (VISUALIZATION) -- eVISUALIZATION : constant unsigned
Engine/neo-api-physx.ads:515:11    - Unknown word (Shape)         -- type PxShapeFlag is record
Engine/neo-api-physx.ads:518:96    - Unknown word (Shape)         -- 4.1\physx\include\PxShape.h:63
Engine/neo-api-physx.ads:520:118   - Unknown word (Shape)         -- 4.1\physx\include\PxShape.h:122
Engine/neo-api-physx.ads:520:14    - Unknown word (Shape)         -- subtype PxShapeFlags is PxFlags_h.Class
Engine/neo-api-physx.ads:526:31    - Unknown word (physxan)       -- External_Name => "_ZN5physxanENS_11PxShapeFlag4EnumES
Engine/neo-api-physx.ads:531:31    - Unknown word (physxco)       -- External_Name => "_ZN5physxcoENS_11PxShapeFlag4EnumE
Engine/neo-api-physx.ads:536:31    - Unknown word (physxor)       -- External_Name => "_ZN5physxorENS_11PxShapeFlag4EnumES
Engine/neo-api-physx.ads:53:5      - Unknown word (RIGID)         -- eRIGID_STATIC : constant unsigned
Engine/neo-api-physx.ads:549:17    - Unknown word (acquire)       -- procedure acquireReference (this : access
Engine/neo-api-physx.ads:54:5      - Unknown word (RIGID)         -- eRIGID_DYNAMIC : constant unsigned
Engine/neo-api-physx.ads:551:19    - Unknown word (Geometry)      -- function getGeometryType (this : access constant
Engine/neo-api-physx.ads:551:74    - Unknown word (Geometry)      -- constant PxShape) return PxGeometry_h.Enum is abstract;
Engine/neo-api-physx.ads:553:101   - Unknown word (Geometry)      -- PxGeometry_h.Class_PxGeometry.PxGeometry) is abstract
Engine/neo-api-physx.ads:553:20    - Unknown word (Geometry)      -- procedure setGeometry (this : access PxShape
Engine/neo-api-physx.ads:553:53    - Unknown word (geometry)      -- this : access PxShape; geometry : access constant PxGeometry
Engine/neo-api-physx.ads:553:82    - Unknown word (Geometry)      -- : access constant PxGeometry_h.Class_PxGeometry.PxGeometry
Engine/neo-api-physx.ads:555:104   - Unknown word (Holder)        -- etryHelpers_h.Class_PxGeometryHolder.PxGeometryHolder is
Engine/neo-api-physx.ads:555:121   - Unknown word (Holder)        -- PxGeometryHolder.PxGeometryHolder is abstract;  -- C:
Engine/neo-api-physx.ads:555:78    - Unknown word (Helpers)       -- PxShape) return PxGeometryHelpers_h.Class_PxGeometryHolder
Engine/neo-api-physx.ads:557:64    - Unknown word (geometry)      -- access constant PxShape; geometry : access pxboxgeometry
Engine/neo-api-physx.ads:557:82    - Unknown word (pxboxgeometry) -- PxShape; geometry : access pxboxgeometry_h.Class_PxBoxGeometry
Engine/neo-api-physx.ads:559:112   - Unknown word (Sphere)           -- pxspheregeometry_h.Class_PxSphereGeometry.PxSphereGeometry
Engine/neo-api-physx.ads:559:129   - Unknown word (Sphere)           -- Class_PxSphereGeometry.PxSphereGeometry) return Extensions
Engine/neo-api-physx.ads:559:19    - Unknown word (Sphere)        -- function getSphereGeometry (this : access
Engine/neo-api-physx.ads:559:67    - Unknown word (geometry)      -- access constant PxShape; geometry : access pxspheregeometry
Engine/neo-api-physx.ads:559:85    - Unknown word (pxspheregeometry) -- PxShape; geometry : access pxspheregeometry_h.Class_PxSphereGeometry
Engine/neo-api-physx.ads:55:5      - Unknown word (ARTICULATION)  -- eARTICULATION_LINK : constant unsigned
Engine/neo-api-physx.ads:561:114   - Unknown word (Capsule)           -- pxcapsulegeometry_h.Class_PxCapsuleGeometry.PxCapsuleGeometry
Engine/neo-api-physx.ads:561:132   - Unknown word (Capsule)           -- PxCapsuleGeometry.PxCapsuleGeometry) return Extensions
Engine/neo-api-physx.ads:561:19    - Unknown word (Capsule)          -- function getCapsuleGeometry (this : access
Engine/neo-api-physx.ads:561:68    - Unknown word (geometry)         -- access constant PxShape; geometry : access pxcapsulegeometry
Engine/neo-api-physx.ads:561:86    - Unknown word (pxcapsulegeometry) -- PxShape; geometry : access pxcapsulegeometry_h.Class_PxCapsuleGeometry
Engine/neo-api-physx.ads:563:66    - Unknown word (geometry)          -- access constant PxShape; geometry : access pxplanegeometry
Engine/neo-api-physx.ads:563:84    - Unknown word (pxplanegeometry)   -- PxShape; geometry : access pxplanegeometry_h.Class_PxPlaneGeometry
Engine/neo-api-physx.ads:565:120   - Unknown word (Convex)               -- xconvexmeshgeometry_h.Class_PxConvexMeshGeometry.PxConvexMeshGeome
Engine/neo-api-physx.ads:565:141   - Unknown word (Convex)               -- PxConvexMeshGeometry.PxConvexMeshGeometry) return
Engine/neo-api-physx.ads:565:19    - Unknown word (Convex)            -- function getConvexMeshGeometry (this :
Engine/neo-api-physx.ads:565:89    - Unknown word (pxconvexmeshgeometry) -- PxShape; geometry : access pxconvexmeshgeometry_h.Class_PxConvexMeshGeometry
Engine/neo-api-physx.ads:567:124   - Unknown word (Triangle)               -- rianglemeshgeometry_h.Class_PxTriangleMeshGeometry.PxTriangleMeshGeo
Engine/neo-api-physx.ads:567:147   - Unknown word (Triangle)               -- PxTriangleMeshGeometry.PxTriangleMeshGeometry) return
Engine/neo-api-physx.ads:567:19    - Unknown word (Triangle)             -- function getTriangleMeshGeometry (this :
Engine/neo-api-physx.ads:567:91    - Unknown word (pxtrianglemeshgeometry) -- PxShape; geometry : access pxtrianglemeshgeometry_h.Class_PxTriangleMeshGeometr
Engine/neo-api-physx.ads:569:122   - Unknown word (Height)                 -- heightfieldgeometry_h.Class_PxHeightFieldGeometry.PxHeightFieldGeo
Engine/neo-api-physx.ads:569:144   - Unknown word (Height)                 -- PxHeightFieldGeometry.PxHeightFieldGeometry) return
Engine/neo-api-physx.ads:569:19    - Unknown word (Height)                 -- function getHeightFieldGeometry (this
Engine/neo-api-physx.ads:569:90    - Unknown word (pxheightfieldgeometry)  -- PxShape; geometry : access pxheightfieldgeometry_h.Class_PxHeightFieldGeometry
Engine/neo-api-physx.ads:56:5      - Unknown word (ACTOR)         -- eACTOR_COUNT : constant unsigned
Engine/neo-api-physx.ads:571:108   - Unknown word (Rigid)                  -- Class_PxRigidActor.PxRigidActor is abstract;
Engine/neo-api-physx.ads:571:74    - Unknown word (Rigid)                  -- PxShape) return access PxRigidActor_h.Class_PxRigidActor
Engine/neo-api-physx.ads:571:95    - Unknown word (Rigid)                  -- PxRigidActor_h.Class_PxRigidActor.PxRigidActor is
Engine/neo-api-physx.ads:573:25    - Unknown word (Pose)                   -- procedure setLocalPose (this : access PxShape
Engine/neo-api-physx.ads:573:54    - Unknown word (pose)                   -- this : access PxShape; pose : access constant pxtransform
Engine/neo-api-physx.ads:575:24    - Unknown word (Pose)                   -- function getLocalPose (this : access constant
Engine/neo-api-physx.ads:57:5      - Unknown word (ACTOR)         -- eACTOR_FORCE_DWORD : constant
Engine/neo-api-physx.ads:588:26    - Unknown word (pxsimpletypes)          -- materialCount : pxsimpletypes_h.PxU16) is abstract
Engine/neo-api-physx.ads:590:71    - Unknown word (pxsimpletypes)          -- constant PxShape) return pxsimpletypes_h.PxU16 is abstract
Engine/neo-api-physx.ads:598:31    - Unknown word (Internal)               -- function getMaterialFromInternalFaceIndex (this : access
Engine/neo-api-physx.ads:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo-api-physx.ads:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo-api-physx.ads:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo-api-physx.ads:600:27    - Unknown word (Offset)                 -- procedure setContactOffset (this : access PxShape
Engine/neo-api-physx.ads:600:65    - Unknown word (Offset)                 -- access PxShape; contactOffset : pxsimpletypes_h.PxReal
Engine/neo-api-physx.ads:600:74    - Unknown word (pxsimpletypes)          -- PxShape; contactOffset : pxsimpletypes_h.PxReal) is abstract
Engine/neo-api-physx.ads:602:26    - Unknown word (Offset)                 -- function getContactOffset (this : access constant
Engine/neo-api-physx.ads:602:73    - Unknown word (pxsimpletypes)          -- constant PxShape) return pxsimpletypes_h.PxReal is abstract
Engine/neo-api-physx.ads:604:24    - Unknown word (Offset)                 -- procedure setRestOffset (this : access PxShape
Engine/neo-api-physx.ads:604:59    - Unknown word (Offset)                 -- access PxShape; restOffset : pxsimpletypes_h.PxReal
Engine/neo-api-physx.ads:608:20    - Unknown word (Torsional)              -- procedure setTorsionalPatchRadius (this : access
Engine/neo-api-physx.ads:610:19    - Unknown word (Torsional)              -- function getTorsionalPatchRadius (this : access
Engine/neo-api-physx.ads:612:23    - Unknown word (Torsional)              -- procedure setMinTorsionalPatchRadius (this : access
Engine/neo-api-physx.ads:614:22    - Unknown word (Torsional)              -- function getMinTorsionalPatchRadius (this : access
Engine/neo-api-physx.ads:618:10    - Unknown word (flag)                   -- flag : Enum;
Engine/neo-api-physx.ads:61:9      - Unknown word (Convention)    -- with Convention => C_Pass_By_Copy;
Engine/neo-api-physx.ads:625:18    - Unknown word (Exclusive)              -- function isExclusive (this : access constant
Engine/neo-api-physx.ads:627:69    - Unknown word (Strings)                -- name : Interfaces.C.Strings.chars_ptr) is abstract
Engine/neo-api-physx.ads:627:77    - Unknown word (chars)                  -- Interfaces.C.Strings.chars_ptr) is abstract;
Engine/neo-api-physx.ads:629:77    - Unknown word (Strings)                -- return Interfaces.C.Strings.chars_ptr is abstract
Engine/neo-api-physx.ads:629:85    - Unknown word (chars)                  -- Interfaces.C.Strings.chars_ptr is abstract;  -
Engine/neo-api-physx.ads:631:19    - Unknown word (Concrete)               -- function getConcreteTypeName (this : access
Engine/neo-api-physx.ads:634:53    - Unknown word (Concrete)               -- ZNK5physx7PxShape19getConcreteTypeNameEv";
Engine/neo-api-physx.ads:639:29    - Unknown word (concrete)               -- function New_PxShape (concreteType : PxBase_h.PxType
Engine/neo-api-physx.ads:652:18    - Unknown word (Kind)                   -- function isKindOf (this : access constant
Engine/neo-api-physx.ads:655:51    - Unknown word (Kind)                   -- ZNK5physx7PxShape8isKindOfEPKc";
Engine/neo-api-physx.ads:660:6     - Unknown word (Rigid)                  -- -- Rigid_Actor --
Engine/neo-api-physx.ads:663:14    - Unknown word (Structure)              -- type PxBVHStructure is null record;   -
Engine/neo-api-physx.ads:663:45    - Unknown word (incomplete)             -- is null record;   -- incomplete struct
Engine/neo-api-physx.ads:665:20    - Unknown word (Rigid)                  -- package Class_PxRigidActor is
Engine/neo-api-physx.ads:674:25    - Unknown word (Pose)                   -- function getGlobalPose (this : access constant
Engine/neo-api-physx.ads:676:26    - Unknown word (Pose)                   -- procedure setGlobalPose
Engine/neo-api-physx.ads:678:10    - Unknown word (pose)                   -- pose : access constant pxtransform
Engine/neo-api-physx.ads:679:10    - Unknown word (autowake)               -- autowake : Extensions.bool) is
Engine/neo-api-physx.ads:67:22     - Unknown word (True)          -- with Import => True,
Engine/neo-api-physx.ads:681:57    - Unknown word (shape)                  -- access PxRigidActor; shape : access PxShape_h.Class
Engine/neo-api-physx.ads:685:10    - Unknown word (shape)                 -- shape : access PxShape_h.Class
Engine/neo-api-physx.ads:686:10    - Unknown word (wake)                  -- wakeOnLostTouch : Extensions
Engine/neo-api-physx.ads:686:16    - Unknown word (Lost)                  -- wakeOnLostTouch : Extensions.bool
Engine/neo-api-physx.ads:686:20    - Unknown word (Touch)                 -- wakeOnLostTouch : Extensions.bool) is
Engine/neo-api-physx.ads:688:21    - Unknown word (Shapes)                -- function getNbShapes (this : access constant
Engine/neo-api-physx.ads:690:19    - Unknown word (Shapes)                -- function getShapes
Engine/neo-api-physx.ads:704:34    - Unknown word (concrete)              -- function New_PxRigidActor (concreteType : PxBase_h.PxType
Engine/neo-api-physx.ads:70:26     - Unknown word (this)          -- procedure release (this : access PxActor) is
Engine/neo-api-physx.ads:720:18    - Unknown word (Kind)                  -- function isKindOf (this : access constant
Engine/neo-api-physx.ads:72:25     - Unknown word (this)          -- function getType (this : access constant PxActor
Engine/neo-api-physx.ads:732:5     - Unknown word (SPHERE)                -- eSPHERE : constant int := 0
Engine/neo-api-physx.ads:734:5     - Unknown word (CAPSULE)               -- eCAPSULE : constant int := 2
Engine/neo-api-physx.ads:736:5     - Unknown word (CONVEXMESH)            -- eCONVEXMESH : constant int := 4
Engine/neo-api-physx.ads:737:5     - Unknown word (TRIANGLEMESH)          -- eTRIANGLEMESH : constant int := 5
Engine/neo-api-physx.ads:738:5     - Unknown word (HEIGHTFIELD)           -- eHEIGHTFIELD : constant int := 6
Engine/neo-api-physx.ads:739:5     - Unknown word (GEOMETRY)              -- eGEOMETRY_COUNT : constant int
Engine/neo-api-physx.ads:740:5     - Unknown word (INVALID)               -- eINVALID : constant int := -
Engine/neo-api-physx.ads:74:19     - Unknown word (Scene)         -- function getScene (this : access constant
Engine/neo-api-physx.ads:74:26     - Unknown word (this)          -- function getScene (this : access constant PxActor
Engine/neo-api-physx.ads:74:90     - Unknown word (Scene)         -- access PxPhysXConfig_h.PxScene is abstract;  -- C:
Engine/neo-api-physx.ads:764:6     - Unknown word (Sphere)                -- -- Sphere_Geometry --
Engine/neo-api-physx.ads:767:22    - Unknown word (Sphere)                -- package Class_PxSphereGeometry is
Engine/neo-api-physx.ads:76:26     - Unknown word (this)          -- procedure setName (this : access PxActor; name
Engine/neo-api-physx.ads:76:69     - Unknown word (Strings)       -- name : Interfaces.C.Strings.chars_ptr) is abstract
Engine/neo-api-physx.ads:76:77     - Unknown word (chars)         -- Interfaces.C.Strings.chars_ptr) is abstract;
Engine/neo-api-physx.ads:770:115   - Unknown word (pxspheregeometry)      -- physx\include\geometry\pxspheregeometry.h:72
Engine/neo-api-physx.ads:775:126   - Unknown word (pxspheregeometry)      -- physx\include\geometry\pxspheregeometry.h:52
Engine/neo-api-physx.ads:778:156   - Unknown word (pxspheregeometry)      -- physx\include\geometry\pxspheregeometry.h:53
Engine/neo-api-physx.ads:781:153   - Unknown word (pxspheregeometry)      -- physx\include\geometry\pxspheregeometry.h:76
Engine/neo-api-physx.ads:789:6     - Unknown word (Convex)                -- -- Convex_Mesh --
Engine/neo-api-physx.ads:78:25     - Unknown word (this)          -- function getName (this : access constant PxActor
Engine/neo-api-physx.ads:78:77     - Unknown word (Strings)       -- return Interfaces.C.Strings.chars_ptr is abstract
Engine/neo-api-physx.ads:78:85     - Unknown word (chars)         -- Interfaces.C.Strings.chars_ptr is abstract;  -
Engine/neo-api-physx.ads:792:11    - Unknown word (Hull)                  -- type PxHullPolygon_mPlane_array
Engine/neo-api-physx.ads:793:11    - Unknown word (Hull)                  -- type PxHullPolygon is record
Engine/neo-api-physx.ads:794:116   - Unknown word (pxconvexmesh)          -- physx\include\geometry\pxconvexmesh.h:53
Engine/neo-api-physx.ads:794:26    - Unknown word (Hull)                  -- mPlane : aliased PxHullPolygon_mPlane_array
Engine/neo-api-physx.ads:795:10    - Unknown word (Verts)                 -- mNbVerts : aliased pxsimpletypes
Engine/neo-api-physx.ads:795:113   - Unknown word (pxconvexmesh)          -- physx\include\geometry\pxconvexmesh.h:54
Engine/neo-api-physx.ads:796:115   - Unknown word (pxconvexmesh)          -- physx\include\geometry\pxconvexmesh.h:55
Engine/neo-api-physx.ads:798:103   - Unknown word (pxconvexmesh)          -- physx\include\geometry\pxconvexmesh.h:51
Engine/neo-api-physx.ads:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-api-physx.ads:800:20    - Unknown word (Convex)                -- package Class_PxConvexMesh is
Engine/neo-api-physx.ads:807:163   - Unknown word (pxconvexmesh)          -- physx\include\geometry\pxconvexmesh.h:93
Engine/neo-api-physx.ads:807:21    - Unknown word (Vertices)              -- function getNbVertices (this : access constant
Engine/neo-api-physx.ads:809:19    - Unknown word (Vertices)              -- function getVertices (this : access constant
Engine/neo-api-physx.ads:80:110    - Unknown word (Bounds)        -- PxBounds3_h.Class_PxBounds3.PxBounds3 is abstract
Engine/neo-api-physx.ads:80:120    - Unknown word (Bounds)        -- h.Class_PxBounds3.PxBounds3 is abstract;  -- C
Engine/neo-api-physx.ads:80:24     - Unknown word (Bounds)        -- function getWorldBounds (this : access constant
Engine/neo-api-physx.ads:80:64     - Unknown word (inflation)     -- access constant PxActor; inflation : float) return PxBounds
Engine/neo-api-physx.ads:80:92     - Unknown word (Bounds)        -- inflation : float) return PxBounds3_h.Class_PxBounds3.PxBounds
Engine/neo-api-physx.ads:813:21    - Unknown word (Polygons)              -- function getNbPolygons (this : access constant
Engine/neo-api-physx.ads:818:26    - Unknown word (Hull)                  -- data : access PxHullPolygon) return Extensions
Engine/neo-api-physx.ads:824:17    - Unknown word (acquire)               -- procedure acquireReference (this : access
Engine/neo-api-physx.ads:826:20    - Unknown word (Mass)                  -- procedure getMassInformation
Engine/neo-api-physx.ads:828:10    - Unknown word (mass)                  -- mass : access pxsimpletypes
Engine/neo-api-physx.ads:829:15    - Unknown word (Inertia)               -- localInertia : access pxmat33_h.Class
Engine/neo-api-physx.ads:829:32    - Unknown word (pxmat)                 -- localInertia : access pxmat33_h.Class_PxMat33.PxMat
Engine/neo-api-physx.ads:82:25     - Unknown word (Flag)          -- procedure setActorFlag
Engine/neo-api-physx.ads:830:15    - Unknown word (Center)                -- localCenterOfMass : access pxvec
Engine/neo-api-physx.ads:830:23    - Unknown word (Mass)                  -- localCenterOfMass : access pxvec3_h.Class
Engine/neo-api-physx.ads:832:24    - Unknown word (Bounds)                -- function getLocalBounds (this : access constant
Engine/neo-api-physx.ads:834:19    - Unknown word (Concrete)              -- function getConcreteTypeName (this : access
Engine/neo-api-physx.ads:837:59    - Unknown word (Concrete)              -- physx12PxConvexMesh19getConcreteTypeNameEv";
Engine/neo-api-physx.ads:841:34    - Unknown word (concrete)              -- function New_PxConvexMesh (concreteType : PxBase_h.PxType
Engine/neo-api-physx.ads:84:10     - Unknown word (flag)          -- flag : Enum;
Engine/neo-api-physx.ads:865:6     - Unknown word (Capsule)               -- -- Capsule_Geometry --
Engine/neo-api-physx.ads:868:22    - Unknown word (Capsule)               -- package Class_PxCapsuleGeometry is
Engine/neo-api-physx.ads:871:115   - Unknown word (pxcapsulegeometry)    -- physx\include\geometry\pxcapsulegeometry.h:84
Engine/neo-api-physx.ads:872:119   - Unknown word (pxcapsulegeometry)    -- physx\include\geometry\pxcapsulegeometry.h:89
Engine/neo-api-physx.ads:872:14    - Unknown word (Height)               -- halfHeight : aliased pxsimpletypes
Engine/neo-api-physx.ads:877:128   - Unknown word (pxcapsulegeometry)    -- physx\include\geometry\pxcapsulegeometry.h:61
Engine/neo-api-physx.ads:880:203   - Unknown word (pxcapsulegeometry)    -- physx\include\geometry\pxcapsulegeometry.h:66
Engine/neo-api-physx.ads:880:78    - Unknown word (Height)               -- pxsimpletypes_h.PxReal; halfHeight_u : pxsimpletypes_h
Engine/neo-api-physx.ads:898:6     - Unknown word (Triangle)             -- -- Triangle_Mesh --
Engine/neo-api-physx.ads:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-api-physx.ads:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-api-physx.ads:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo-api-physx.ads:902:12    - Unknown word (SIDED)                -- eDOUBLE_SIDED : constant unsigned
Engine/neo-api-physx.ads:906:103   - Unknown word (pxtrianglemeshgeometry) -- physx\include\geometry\pxtrianglemeshgeometry.h:53
Engine/neo-api-physx.ads:908:132   - Unknown word (pxtrianglemeshgeometry) -- physx\include\geometry\pxtrianglemeshgeometry.h:68
Engine/neo-api-physx.ads:911:148   - Unknown word (pxtrianglemeshgeometry) -- physx\include\geometry\pxtrianglemeshgeometry.h:69
Engine/neo-api-physx.ads:914:31    - Unknown word (physxor)                -- External_Name => "_ZN5physxorENS_18PxMeshGeometryFlag
Engine/neo-api-physx.ads:916:148   - Unknown word (pxtrianglemeshgeometry) -- physx\include\geometry\pxtrianglemeshgeometry.h:69
Engine/neo-api-physx.ads:919:31    - Unknown word (physxan)                -- External_Name => "_ZN5physxanENS_18PxMeshGeometryFlag
Engine/neo-api-physx.ads:91:20     - Unknown word (Dominance)     -- procedure setDominanceGroup (this : access
Engine/neo-api-physx.ads:91:59     - Unknown word (dominance)     -- this : access PxActor; dominanceGroup : PxDominanceGroup
Engine/neo-api-physx.ads:91:78     - Unknown word (Dominance)     -- dominanceGroup : PxDominanceGroup) is abstract;
Engine/neo-api-physx.ads:924:31    - Unknown word (physxco)                -- External_Name => "_ZN5physxcoENS_18PxMeshGeometryFlag
Engine/neo-api-physx.ads:926:20    - Unknown word (Triangle)               -- package Class_PxTriangleMeshGeometry is
Engine/neo-api-physx.ads:929:26    - Unknown word (pxmeshscale)            -- scale : aliased pxmeshscale_h.Class_PxMeshScale
Engine/neo-api-physx.ads:931:10    - Unknown word (padding)                -- paddingFromFlags : aliased pxcoreutil
Engine/neo-api-physx.ads:931:37    - Unknown word (pxcoreutilitytypes)     -- paddingFromFlags : aliased pxcoreutilitytypes_h.Class_PxPadding.PxPadding
Engine/neo-api-physx.ads:931:66    - Unknown word (Padding)                -- pxcoreutilitytypes_h.Class_PxPadding.PxPadding; -- c:\users
Engine/neo-api-physx.ads:931:76    - Unknown word (Padding)                -- h.Class_PxPadding.PxPadding; -- c:\users\exitcode
Engine/neo-api-physx.ads:932:10    - Unknown word (triangle)               -- triangleMesh : access PxPhysXCommonCon
Engine/neo-api-physx.ads:93:19     - Unknown word (Dominance)     -- function getDominanceGroup (this : access
Engine/neo-api-physx.ads:93:76     - Unknown word (Dominance)     -- constant PxActor) return PxDominanceGroup is abstract;
Engine/neo-api-physx.ads:942:36    - Unknown word (pxmeshscale)            -- scaling : access constant pxmeshscale_h.Class_PxMeshScale
Engine/neo-api-physx.ads:943:10    - Unknown word (flags)                  -- flags : access PxMeshGeometryFlags
Engine/neo-api-physx.ads:944:95    - Unknown word (EPNS)                   -- PxTriangleMeshGeometryC1EPNS_14PxTriangleMeshERKNS
Engine/neo-api-physx.ads:959:11    - Unknown word (Scene)                  -- PxScene* mScene;
Engine/neo-api-physx.ads:959:28    - Unknown word (Scene)                  -- PxScene* mScene;
Engine/neo-api-physx.ads:960:11    - Unknown word (Cooking)                -- PxCooking* mCooking;
Engine/neo-api-physx.ads:960:30    - Unknown word (Cooking)                -- PxCooking* mCooking;
Engine/neo-api-physx.ads:962:14    - Unknown word (vector)                 -- std::vector<PxConvexMesh*> mConvexObject
Engine/neo-api-physx.ads:963:53    - Unknown word (PINT)                   -- CreateMaterial(const PINT_MATERIAL_CREATE& desc
Engine/neo-api-physx.ads:964:106   - Unknown word (Pint)                   -- PxConvexFlags flags, PintShapeRenderer* renderer
Engine/neo-api-physx.ads:964:115   - Unknown word (Renderer)               -- PxConvexFlags flags, PintShapeRenderer* renderer);
Engine/neo-api-physx.ads:964:125   - Unknown word (renderer)               -- PintShapeRenderer* renderer);
Engine/neo-api-physx.ads:964:60    - Unknown word (verts)                  -- CreateConvexMesh(const Point* verts, udword vertCount, PxConvexFl
Engine/neo-api-physx.ads:964:67    - Unknown word (udword)                 -- const Point* verts, udword vertCount, PxConvexFlags
Engine/neo-api-physx.ads:964:74    - Unknown word (vert)                   -- Point* verts, udword vertCount, PxConvexFlags
Engine/neo-api-physx.ads:964:99    - Unknown word (flags)                  -- vertCount, PxConvexFlags flags, PintShapeRenderer*
Engine/neo-api-physx.ads:965:103   - Unknown word (renderer)               -- PintShapeRenderer* renderer);
Engine/neo-api-physx.ads:965:57    - Unknown word (Surface)                -- CreateTriangleMesh(const SurfaceInterface& surface, PintShapeR
Engine/neo-api-physx.ads:965:75    - Unknown word (surface)                -- const SurfaceInterface& surface, PintShapeRenderer*
Engine/neo-api-physx.ads:965:84    - Unknown word (Pint)                   -- SurfaceInterface& surface, PintShapeRenderer* renderer
Engine/neo-api-physx.ads:965:93    - Unknown word (Renderer)               -- eInterface& surface, PintShapeRenderer* renderer);
Engine/neo-api-physx.ads:967:38    - Unknown word (Handle)                 -- Shape = GetShapeFromHandle(handle);
Engine/neo-api-physx.ads:967:45    - Unknown word (handle)                 -- GetShapeFromHandle(handle);
Engine/neo-api-physx.ads:968:36    - Unknown word (handle)                 -- PxShape* Shape = (PxShape*)handle;
Engine/neo-api-physx.ads:969:41    - Unknown word (Pose)                   -- lp = Shape->getLocalPose();
Engine/neo-api-physx.ads:971:27    - Unknown word (Articulations)          -- const PxU32 NbArticulations = mScene->getNbArticulations
Engine/neo-api-physx.ads:971:44    - Unknown word (Scene)                  -- NbArticulations = mScene->getNbArticulations
Engine/neo-api-physx.ads:971:56    - Unknown word (Articulations)          -- bArticulations = mScene->getNbArticulations();
Engine/neo-api-physx.ads:972:31    - Unknown word (Articulations)          -- for(PxU32 i=0;i<NbArticulations;i++)
Engine/neo-api-physx.ads:974:19    - Unknown word (Articulation)           -- -- PxArticulation* Articulation;
Engine/neo-api-physx.ads:974:33    - Unknown word (Articulation)           -- PxArticulation* Articulation;
Engine/neo-api-physx.ads:975:28    - Unknown word (Articulations)          -- mScene->getArticulations(&Articulation, 1, i
Engine/neo-api-physx.ads:975:43    - Unknown word (Articulation)           -- mScene->getArticulations(&Articulation, 1, i);
Engine/neo-api-physx.ads:976:39    - Unknown word (Articulation)           -- const PxU32 NbLinks = Articulation->getNbLinks();
Engine/neo-api-physx.ads:977:19    - Unknown word (Articulation)           -- -- PxArticulationLink* Links[256];
Engine/neo-api-physx.ads:980:33    - Unknown word (Shapes)                 -- PxU32 nbShapes = rigidActor->getNbShapes
Engine/neo-api-physx.ads:980:42    - Unknown word (rigid)                  -- PxU32 nbShapes = rigidActor->getNbShapes()
Engine/neo-api-physx.ads:980:59    - Unknown word (Shapes)                -- nbShapes = rigidActor->getNbShapes();
Engine/neo-api-physx.ads:981:43    - Unknown word (Shapes)                -- for(PxU32 j=0;j<nbShapes;j++)
Engine/neo-api-physx.ads:985:41    - Unknown word (geom)                  -- else if(geomType==PxGeometryType
Engine/neo-api-physx.ads:985:68    - Unknown word (CONVEXMESH)            -- geomType==PxGeometryType::eCONVEXMESH)
Engine/neo-api-physx.ads:986:56    - Unknown word (Shortest)              -- const PxQuat q = PxShortestRotation(PxVec3(0.0f
Engine/neo-api-physx.ads:988:101   - Unknown word (flags)                 -- vertCount, PxConvexFlags flags,
Engine/neo-api-physx.ads:988:62    - Unknown word (verts)                 -- CreateConvexMesh(const Point* verts, udword vertCount, PxConvexFl
Engine/neo-api-physx.ads:988:69    - Unknown word (udword)                -- const Point* verts, udword vertCount, PxConvexFlags
Engine/neo-api-physx.ads:988:76    - Unknown word (vert)                  -- Point* verts, udword vertCount, PxConvexFlags
Engine/neo-api-physx.ads:989:15    - Unknown word (Friction)              -- -- //  M->setFrictionCombineMode(PxCombineMode
Engine/neo-api-physx.ads:989:23    - Unknown word (Combine)               -- // M->setFrictionCombineMode(PxCombineMode::eMIN
Engine/neo-api-physx.ads:989:30    - Unknown word (Mode)                  -- M->setFrictionCombineMode(PxCombineMode::eMIN
Engine/neo-api-physx.ads:989:37    - Unknown word (Combine)               -- setFrictionCombineMode(PxCombineMode::eMIN);
Engine/neo-api-physx.ads:989:44    - Unknown word (Mode)                  -- tFrictionCombineMode(PxCombineMode::eMIN);
Engine/neo-api-physx.ads:990:23    - Unknown word (actor)                 -- PxRigidActor* actor;
Engine/neo-api-physx.ads:991:25    - Unknown word (rigid)                 -- PxRigidDynamic* rigidDynamic = null;
Engine/neo-api-physx.ads:992:18    - Unknown word (Joint)                 -- -- PxSetJointGlobalFrame(*rv, &globalAnchor
Engine/neo-api-physx.ads:992:29    - Unknown word (Frame)                 -- PxSetJointGlobalFrame(*rv, &globalAnchor,
Engine/neo-api-physx.ads:992:47    - Unknown word (Anchor)                -- tJointGlobalFrame(*rv, &globalAnchor, &globalAxis);
Engine/neo-api-physx.ads:992:62    - Unknown word (Axis)                  -- globalAnchor, &globalAxis);
Engine/neo-api-physx.ads:993:18    - Unknown word (Mass)                  -- -- if(desc.mMass!=0.0f)
Engine/neo-api-physx.ads:994:109   - Unknown word (actor)                 -- (jc.mLocalPivot0)), actor1,
Engine/neo-api-physx.ads:994:25    - Unknown word (Joint)                 -- PxD6Joint* j = PxD6JointCreate
Engine/neo-api-physx.ads:994:40    - Unknown word (Joint)                 -- PxD6Joint* j = PxD6JointCreate(physics, actor
Engine/neo-api-physx.ads:994:61    - Unknown word (actor)                 -- JointCreate(physics, actor0, PxTransform(ToPxVec
Engine/neo-api-physx.ads:994:99    - Unknown word (Pivot)                 -- PxTransform(ToPxVec3(jc.mLocalPivot0)), actor1,
Engine/neo-api-physx.ads:995:35    - Unknown word (Joint)                 -- j->setLimit(PxJointLimitPair(jc.mMinLimitAngle
Engine/neo-api-physx.ads:995:62    - Unknown word (Angle)                 -- PxJointLimitPair(jc.mMinLimitAngle, jc.mMaxLimitAngle,
Engine/neo-api-physx.ads:995:81    - Unknown word (Angle)                 -- mMinLimitAngle, jc.mMaxLimitAngle, TWOPI));
Engine/neo-api-physx.ads:995:88    - Unknown word (TWOPI)                 -- jc.mMaxLimitAngle, TWOPI));
Engine/neo-api-physx.ads:996:27    - Unknown word (Revolute)              -- j->setRevoluteJointFlag(PxRevoluteJointFlag
Engine/neo-api-physx.ads:996:35    - Unknown word (Joint)                 -- j->setRevoluteJointFlag(PxRevoluteJointFlag
Engine/neo-api-physx.ads:996:47    - Unknown word (Revolute)              -- setRevoluteJointFlag(PxRevoluteJointFlag::eLIMIT_ENABLED
Engine/neo-api-physx.ads:996:82    - Unknown word (true)                  -- uteJointFlag::eLIMIT_ENABLED, true);
Engine/neo-api-physx.ads:997:15    - Unknown word (Restitution)           -- -- //  M->setRestitutionCombineMode(PxCombineMode
Engine/neo-api-physx.ads:997:26    - Unknown word (Combine)               -- / M->setRestitutionCombineMode(PxCombineMode::eMIN
Engine/neo-api-physx.ads:997:33    - Unknown word (Mode)                  -- setRestitutionCombineMode(PxCombineMode::eMIN
Engine/neo-api-physx.ads:997:40    - Unknown word (Combine)               -- setRestitutionCombineMode(PxCombineMode::eMIN);
Engine/neo-api-physx.ads:997:47    - Unknown word (Mode)                  -- stitutionCombineMode(PxCombineMode::eMIN);
Engine/neo-api-physx.ads:998:23    - Unknown word (Spherical)             -- PxSphericalJoint* j = PxSphericalJointCre
Engine/neo-api-physx.ads:998:45    - Unknown word (Spherical)             -- PxSphericalJoint* j = PxSphericalJointCreate(physics,
Engine/neo-api-physx.ads:998:75    - Unknown word (actor)                 -- SphericalJointCreate(physics, actor0, PxTransform(
Engine/neo-api-physx.ads:999:11    - Unknown word (Combine)               -- -- PxCombineMode::Enum defMode =
Engine/neo-api-physx.ads:999:18    - Unknown word (Mode)                  -- -- PxCombineMode::Enum defMode = M->getFrictio
Engine/neo-api-physx.ads:999:45    - Unknown word (Friction)              -- Enum defMode = M->getFrictionCombineMode();
Engine/neo-api-sdl.ads:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-api-sdl.ads:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-api-sdl.ads:10:110    - Unknown word (warranty)     -- without even the implied warranty of                -
Engine/neo-api-sdl.ads:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-api-sdl.ads:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-api-sdl.ads:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-api-sdl.ads:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-api-sdl.ads:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-api-sdl.ads:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-api-sdl.ads:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-api-sdl.ads:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-api-sdl.ads:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-api-sdl.ads:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-api-sdl.ads:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-api-sdl.ads:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-api-sdl.ads:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-api-sdl.ads:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-api-sdl.ads:16:11     - Unknown word (binding)      -- -- Custom binding to the SDL API: https
Engine/neo-api-sdl.ads:24:6      - Unknown word (Structures)   -- -- Structures --
Engine/neo-api-sdl.ads:28:6      - Unknown word (Subprograms)  -- -- Subprograms --
Engine/neo-api-sdl.ads:5:52      - Unknown word (Copyright)  -- Copyright (C) 2016 Justin Squirek
Engine/neo-api-sdl.ads:5:71      - Unknown word (Justin)     -- Copyright (C) 2016 Justin Squirek
Engine/neo-api-sdl.ads:5:78      - Unknown word (Squirek)    -- Copyright (C) 2016 Justin Squirek
Engine/neo-api-sdl.ads:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-api-sdl.ads:8:30      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-api-sdl.ads:8:70      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-api-sdl.ads:8:87      - Unknown word (later)        -- at your option) any later version.
Engine/neo-api-vulkan.adb:101:12    - Unknown word (Draw)          -- vkCmdDraw
Engine/neo-api-vulkan.adb:101:123   - Unknown word (Draw)          -- (Get ("vkCmdDraw"));
Engine/neo-api-vulkan.adb:101:69    - Unknown word (Draw)          -- := To_Ptr_vkCmdDraw
Engine/neo-api-vulkan.adb:103:132   - Unknown word (Module)        -- Get ("vkCreateShaderModule"));
Engine/neo-api-vulkan.adb:103:15    - Unknown word (Shader)        -- vkCreateShaderModule
Engine/neo-api-vulkan.adb:103:21    - Unknown word (Module)        -- vkCreateShaderModule
Engine/neo-api-vulkan.adb:103:72    - Unknown word (Shader)        -- := To_Ptr_vkCreateShaderModule
Engine/neo-api-vulkan.adb:103:78    - Unknown word (Module)        -- To_Ptr_vkCreateShaderModule
Engine/neo-api-vulkan.adb:107:128   - Unknown word (Subresource)   -- (Get ("vkGetImageSubresourceLayout"));
Engine/neo-api-vulkan.adb:107:17    - Unknown word (Subresource)   -- vkGetImageSubresourceLayout
Engine/neo-api-vulkan.adb:107:74    - Unknown word (Subresource)   -- := To_Ptr_vkGetImageSubresourceLayout
Engine/neo-api-vulkan.adb:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-api-vulkan.adb:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-api-vulkan.adb:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo-api-vulkan.adb:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-api-vulkan.adb:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-api-vulkan.adb:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-api-vulkan.adb:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-api-vulkan.adb:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-api-vulkan.adb:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-api-vulkan.adb:110:24    - Unknown word (Requirements)  -- vkGetBufferMemoryRequirements :=
Engine/neo-api-vulkan.adb:110:81    - Unknown word (Requirements)  -- Ptr_vkGetBufferMemoryRequirements (Get
Engine/neo-api-vulkan.adb:112:66    - Unknown word (Bind)          -- := To_Ptr_vkBindBufferMemory
Engine/neo-api-vulkan.adb:112:9     - Unknown word (Bind)          -- vkBindBufferMemory
Engine/neo-api-vulkan.adb:113:12    - Unknown word (Physical)      -- vkGetPhysicalDeviceProperties
Engine/neo-api-vulkan.adb:113:69    - Unknown word (Physical)      -- := To_Ptr_vkGetPhysicalDeviceProperties
Engine/neo-api-vulkan.adb:118:120   - Unknown word (Enumerate)     -- (Get ("vkEnumeratePhysicalDevices"));
Engine/neo-api-vulkan.adb:118:66    - Unknown word (Enumerate)     -- := To_Ptr_vkEnumeratePhysicalDevices
Engine/neo-api-vulkan.adb:118:9     - Unknown word (Enumerate)     -- vkEnumeratePhysicalDevices
Engine/neo-api-vulkan.adb:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-api-vulkan.adb:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-api-vulkan.adb:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-api-vulkan.adb:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-api-vulkan.adb:121:26    - Unknown word (Surface)       -- vkGetPhysicalDeviceSurfaceSupportKHR
Engine/neo-api-vulkan.adb:121:83    - Unknown word (Surface)       -- Ptr_vkGetPhysicalDeviceSurfaceSupportKHR
Engine/neo-api-vulkan.adb:122:144   - Unknown word (Formats)       -- vkGetPhysicalDeviceSurfaceFormatsKHR"));
Engine/neo-api-vulkan.adb:122:33    - Unknown word (Formats)       -- vkGetPhysicalDeviceSurfaceFormatsKHR := To_Ptr
Engine/neo-api-vulkan.adb:122:90    - Unknown word (Formats)       -- vkGetPhysicalDeviceSurfaceFormatsKHR (Get (
Engine/neo-api-vulkan.adb:123:144   - Unknown word (Capabilities)  -- vkGetPhysicalDeviceSurfaceCapabilitiesKHR"));
Engine/neo-api-vulkan.adb:123:33    - Unknown word (Capabilities)  -- vkGetPhysicalDeviceSurfaceCapabilitiesKHR := To_Ptr_vkGetPhysic
Engine/neo-api-vulkan.adb:123:90    - Unknown word (Capabilities)  -- vkGetPhysicalDeviceSurfaceCapabilitiesKHR (Get ("vkGetPhysicalD
Engine/neo-api-vulkan.adb:124:144   - Unknown word (Present)       -- vkGetPhysicalDeviceSurfacePresentModesKHR"));
Engine/neo-api-vulkan.adb:124:151   - Unknown word (Modes)         -- etPhysicalDeviceSurfacePresentModesKHR"));
Engine/neo-api-vulkan.adb:124:33    - Unknown word (Present)       -- vkGetPhysicalDeviceSurfacePresentModesKHR := To_Ptr
Engine/neo-api-vulkan.adb:124:40    - Unknown word (Modes)         -- etPhysicalDeviceSurfacePresentModesKHR := To_Ptr_vkGetPhysic
Engine/neo-api-vulkan.adb:124:90    - Unknown word (Present)       -- vkGetPhysicalDeviceSurfacePresentModesKHR (Get (
Engine/neo-api-vulkan.adb:124:97    - Unknown word (Modes)         -- etPhysicalDeviceSurfacePresentModesKHR (Get ("vkGetPhysicalD
Engine/neo-api-vulkan.adb:125:126   - Unknown word (Swapchain)     -- (Get ("vkCreateSwapchainKHR"));
Engine/neo-api-vulkan.adb:125:15    - Unknown word (Swapchain)     -- vkCreateSwapchainKHR
Engine/neo-api-vulkan.adb:125:72    - Unknown word (Swapchain)     -- := To_Ptr_vkCreateSwapchainKHR
Engine/neo-api-vulkan.adb:126:12    - Unknown word (Swapchain)     -- vkGetSwapchainImagesKHR
Engine/neo-api-vulkan.adb:126:69    - Unknown word (Swapchain)     -- := To_Ptr_vkGetSwapchainImagesKHR
Engine/neo-api-vulkan.adb:129:131   - Unknown word (Barrier)       -- (Get ("vkCmdPipelineBarrier"));
Engine/neo-api-vulkan.adb:129:20    - Unknown word (Barrier)       -- vkCmdPipelineBarrier
Engine/neo-api-vulkan.adb:129:77    - Unknown word (Barrier)       -- To_Ptr_vkCmdPipelineBarrier
Engine/neo-api-vulkan.adb:132:125   - Unknown word (Wait)          -- (Get ("vkQueueWaitIdle"));
Engine/neo-api-vulkan.adb:132:129   - Unknown word (Idle)          -- (Get ("vkQueueWaitIdle"));
Engine/neo-api-vulkan.adb:132:14    - Unknown word (Wait)          -- vkQueueWaitIdle
Engine/neo-api-vulkan.adb:132:18    - Unknown word (Idle)          -- vkQueueWaitIdle
Engine/neo-api-vulkan.adb:132:71    - Unknown word (Wait)          -- := To_Ptr_vkQueueWaitIdle
Engine/neo-api-vulkan.adb:132:75    - Unknown word (Idle)          -- = To_Ptr_vkQueueWaitIdle
Engine/neo-api-vulkan.adb:135:15    - Unknown word (Wait)          -- vkDeviceWaitIdle
Engine/neo-api-vulkan.adb:135:19    - Unknown word (Idle)          -- vkDeviceWaitIdle
Engine/neo-api-vulkan.adb:135:72    - Unknown word (Wait)          -- := To_Ptr_vkDeviceWaitIdle
Engine/neo-api-vulkan.adb:135:76    - Unknown word (Idle)          -- To_Ptr_vkDeviceWaitIdle
Engine/neo-api-vulkan.adb:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-api-vulkan.adb:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-api-vulkan.adb:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-api-vulkan.adb:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-api-vulkan.adb:141:120   - Unknown word (Acquire)       -- (Get ("vkAcquireNextImageKHR"));
Engine/neo-api-vulkan.adb:141:66    - Unknown word (Acquire)       -- := To_Ptr_vkAcquireNextImageKHR
Engine/neo-api-vulkan.adb:141:9     - Unknown word (Acquire)       -- vkAcquireNextImageKHR
Engine/neo-api-vulkan.adb:142:14    - Unknown word (Present)       -- vkQueuePresentKHR
Engine/neo-api-vulkan.adb:142:71    - Unknown word (Present)      -- := To_Ptr_vkQueuePresentKHR
Engine/neo-api-vulkan.adb:143:127   - Unknown word (Fences)       -- (Get ("vkWaitForFences"));
Engine/neo-api-vulkan.adb:143:16    - Unknown word (Fences)       -- vkWaitForFences
Engine/neo-api-vulkan.adb:143:73    - Unknown word (Fences)       -- := To_Ptr_vkWaitForFences
Engine/neo-api-vulkan.adb:144:14    - Unknown word (Fences)       -- vkResetFences
Engine/neo-api-vulkan.adb:144:71    - Unknown word (Fences)       -- := To_Ptr_vkResetFences
Engine/neo-api-vulkan.adb:145:12    - Unknown word (Fence)        -- vkGetFenceStatus
Engine/neo-api-vulkan.adb:145:123   - Unknown word (Fence)        -- (Get ("vkGetFenceStatus"));
Engine/neo-api-vulkan.adb:145:69    - Unknown word (Fence)        -- := To_Ptr_vkGetFenceStatus
Engine/neo-api-vulkan.adb:146:16    - Unknown word (Fence)        -- vkDestroyFence
Engine/neo-api-vulkan.adb:146:73    - Unknown word (Fence)        -- := To_Ptr_vkDestroyFence
Engine/neo-api-vulkan.adb:148:12    - Unknown word (Draw)         -- vkCmdDrawIndexed
Engine/neo-api-vulkan.adb:148:127   - Unknown word (Indexed)      -- (Get ("vkCmdDrawIndexed"));
Engine/neo-api-vulkan.adb:148:16    - Unknown word (Indexed)      -- vkCmdDrawIndexed
Engine/neo-api-vulkan.adb:148:69    - Unknown word (Draw)         -- := To_Ptr_vkCmdDrawIndexed
Engine/neo-api-vulkan.adb:148:73    - Unknown word (Indexed)      -- := To_Ptr_vkCmdDrawIndexed
Engine/neo-api-vulkan.adb:164:126   - Unknown word (Graphics)     -- (Get ("vkCreateGraphicsPipelines"));
Engine/neo-api-vulkan.adb:164:15    - Unknown word (Graphics)     -- vkCreateGraphicsPipelines
Engine/neo-api-vulkan.adb:164:72    - Unknown word (Graphics)     -- := To_Ptr_vkCreateGraphicsPipelines
Engine/neo-api-vulkan.adb:171:66    - Unknown word (Enumerate)    -- := To_Ptr_vkEnumerateDeviceExtensionProperties
Engine/neo-api-vulkan.adb:171:9     - Unknown word (Enumerate)    -- vkEnumerateDeviceExtensionProperties
Engine/neo-api-vulkan.adb:17:15     - Unknown word (Strings)      -- with Neo.Core.Strings; use Neo.Core.Strings
Engine/neo-api-vulkan.adb:17:37     - Unknown word (Strings)      -- Strings; use Neo.Core.Strings;
Engine/neo-api-vulkan.adb:21:16     - Unknown word (actual)       -- -- Print the actual, readable error from
Engine/neo-api-vulkan.adb:21:24     - Unknown word (readable)     -- - Print the actual, readable error from a VkResult
Engine/neo-api-vulkan.adb:21:6      - Unknown word (Print)        -- -- Print the actual, readable
Engine/neo-api-vulkan.adb:22:15     - Unknown word (Assert)       -- procedure VkAssert (Result : Int_Unsigned
Engine/neo-api-vulkan.adb:22:36     - Unknown word (Unsigned)     -- VkAssert (Result : Int_Unsigned_C) is
Engine/neo-api-vulkan.adb:26:39     - Unknown word (DATE)         -- when VK_ERROR_OUT_OF_DATE_KHR => "VK
Engine/neo-api-vulkan.adb:26:77     - Unknown word (DATE)         -- => "VK_ERROR_OUT_OF_DATE_KHR",
Engine/neo-api-vulkan.adb:27:32     - Unknown word (SURFACE)      -- when VK_ERROR_SURFACE_LOST_KHR =>
Engine/neo-api-vulkan.adb:27:40     - Unknown word (LOST)         -- when VK_ERROR_SURFACE_LOST_KHR => "VK_ERROR
Engine/neo-api-vulkan.adb:27:70     - Unknown word (SURFACE)      -- => "VK_ERROR_SURFACE_LOST_KHR",
Engine/neo-api-vulkan.adb:27:78     - Unknown word (LOST)         -- > "VK_ERROR_SURFACE_LOST_KHR",
Engine/neo-api-vulkan.adb:28:32     - Unknown word (NATIVE)       -- when VK_ERROR_NATIVE_WINDOW_IN_USE_KHR =
Engine/neo-api-vulkan.adb:28:70     - Unknown word (NATIVE)       -- USE_KHR => "VK_ERROR_NATIVE_WINDOW_IN_USE_KHR",
Engine/neo-api-vulkan.adb:29:32     - Unknown word (INCOMPATIBLE) -- when VK_ERROR_INCOMPATIBLE_DISPLAY_KHR => "VK_ERROR
Engine/neo-api-vulkan.adb:29:70     - Unknown word (INCOMPATIBLE) -- DISPLAY_KHR => "VK_ERROR_INCOMPATIBLE_DISPLAY_KHR",
Engine/neo-api-vulkan.adb:31:32     - Unknown word (INVALID)      -- when VK_ERROR_INVALID_SHADER_NV =>
Engine/neo-api-vulkan.adb:31:40     - Unknown word (SHADER)       -- when VK_ERROR_INVALID_SHADER_NV => "VK_ERROR
Engine/neo-api-vulkan.adb:31:70     - Unknown word (INVALID)      -- => "VK_ERROR_INVALID_SHADER_NV",
Engine/neo-api-vulkan.adb:31:78     - Unknown word (SHADER)       -- > "VK_ERROR_INVALID_SHADER_NV",
Engine/neo-api-vulkan.adb:32:44     - Unknown word (MEMORY)       -- VK_ERROR_OUT_OF_HOST_MEMORY => "VK_ERROR_OUT
Engine/neo-api-vulkan.adb:32:82     - Unknown word (MEMORY)       -- VK_ERROR_OUT_OF_HOST_MEMORY",
Engine/neo-api-vulkan.adb:33:46     - Unknown word (MEMORY)       -- ERROR_OUT_OF_DEVICE_MEMORY => "VK_ERROR_OUT
Engine/neo-api-vulkan.adb:33:84     - Unknown word (MEMORY)       -- ERROR_OUT_OF_DEVICE_MEMORY",
Engine/neo-api-vulkan.adb:34:32     - Unknown word (INITIALIZATION) -- when VK_ERROR_INITIALIZATION_FAILED => "VK_ERROR
Engine/neo-api-vulkan.adb:34:70     - Unknown word (INITIALIZATION) -- FAILED => "VK_ERROR_INITIALIZATION_FAILED",
Engine/neo-api-vulkan.adb:35:39     - Unknown word (LOST)           -- when VK_ERROR_DEVICE_LOST => "VK
Engine/neo-api-vulkan.adb:35:77     - Unknown word (LOST)           -- => "VK_ERROR_DEVICE_LOST.. :[",
Engine/neo-api-vulkan.adb:36:32     - Unknown word (MEMORY)         -- when VK_ERROR_MEMORY_MAP_FAILED =
Engine/neo-api-vulkan.adb:37:42     - Unknown word (PRESENT)        -- when VK_ERROR_LAYER_NOT_PRESENT => "VK_ERROR
Engine/neo-api-vulkan.adb:37:80     - Unknown word (PRESENT)        -- "VK_ERROR_LAYER_NOT_PRESENT",
Engine/neo-api-vulkan.adb:38:46     - Unknown word (PRESENT)        -- ERROR_EXTENSION_NOT_PRESENT => "VK_ERROR_EXTENSION
Engine/neo-api-vulkan.adb:38:84     - Unknown word (PRESENT)        -- ERROR_EXTENSION_NOT_PRESENT",
Engine/neo-api-vulkan.adb:39:44     - Unknown word (PRESENT)        -- VK_ERROR_FEATURE_NOT_PRESENT => "VK_ERROR_FEATURE
Engine/neo-api-vulkan.adb:40:32     - Unknown word (INCOMPATIBLE)   -- when VK_ERROR_INCOMPATIBLE_DRIVER => "VK_ERROR
Engine/neo-api-vulkan.adb:40:45     - Unknown word (DRIVER)         -- VK_ERROR_INCOMPATIBLE_DRIVER => "VK_ERROR_INCOMPATIBL
Engine/neo-api-vulkan.adb:40:70     - Unknown word (INCOMPATIBLE)   -- DRIVER => "VK_ERROR_INCOMPATIBLE_DRIVER",
Engine/neo-api-vulkan.adb:40:83     - Unknown word (DRIVER)         -- VK_ERROR_INCOMPATIBLE_DRIVER",
Engine/neo-api-vulkan.adb:41:36     - Unknown word (MANY)           -- when VK_ERROR_TOO_MANY_OBJECTS =>
Engine/neo-api-vulkan.adb:41:74     - Unknown word (MANY)           -- => "VK_ERROR_TOO_MANY_OBJECTS",
Engine/neo-api-vulkan.adb:44:34     - Unknown word (FRAGMENTED)     -- --when VK_ERROR_FRAGMENTED_POOL => "VK
Engine/neo-api-vulkan.adb:44:72     - Unknown word (FRAGMENTED)     -- => "VK_ERROR_FRAGMENTED_POOL",
Engine/neo-api-vulkan.adb:45:34     - Unknown word (INVALID)        -- --when VK_ERROR_INVALID_EXTERNAL_HANDLE =>
Engine/neo-api-vulkan.adb:45:51     - Unknown word (HANDLE)         -- ERROR_INVALID_EXTERNAL_HANDLE => "VK_ERROR_INVALID
Engine/neo-api-vulkan.adb:45:72     - Unknown word (INVALID)        -- HANDLE => "VK_ERROR_INVALID_EXTERNAL_HANDLE",
Engine/neo-api-vulkan.adb:45:89     - Unknown word (HANDLE)         -- ERROR_INVALID_EXTERNAL_HANDLE",
Engine/neo-api-vulkan.adb:47:38     - Unknown word (PERMITTED)      -- --when VK_ERROR_NOT_PERMITTED_EXT => "VK_ERROR
Engine/neo-api-vulkan.adb:47:76     - Unknown word (PERMITTED)      -- => "VK_ERROR_NOT_PERMITTED_EXT",
Engine/neo-api-vulkan.adb:49:10     - Unknown word (Assert)         -- Assert (False);
Engine/neo-api-vulkan.adb:49:18     - Unknown word (False)          -- Assert (False);
Engine/neo-api-vulkan.adb:53:37     - Unknown word (string)         -- version integer from a string
Engine/neo-api-vulkan.adb:54:51     - Unknown word (Unsigned)       -- Val : Str) return Int_Unsigned_C is
Engine/neo-api-vulkan.adb:55:18     - Unknown word (Unsigned)       -- Result : Int_Unsigned := 0;
Engine/neo-api-vulkan.adb:59:10     - Unknown word (Major)          -- -- Major
Engine/neo-api-vulkan.adb:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo-api-vulkan.adb:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo-api-vulkan.adb:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo-api-vulkan.adb:60:77     - Unknown word (Unsigned)       -- Last then return Int_Unsigned_C (Result); end if;
Engine/neo-api-vulkan.adb:61:17     - Unknown word (Shift)          -- Result := Shift_Left (Int_Unsigned'Wide
Engine/neo-api-vulkan.adb:61:33     - Unknown word (Unsigned)       -- Result := Shift_Left (Int_Unsigned'Wide_Value (Val (Val
Engine/neo-api-vulkan.adb:61:42     - Unknown word (Wide)           -- Shift_Left (Int_Unsigned'Wide_Value (Val (Val'First
Engine/neo-api-vulkan.adb:69:40     - Unknown word (Shift)          -- Unsigned_C (Result or Shift_Left (Int_Unsigned'Wide
Engine/neo-api-vulkan.adb:69:65     - Unknown word (Wide)           -- Shift_Left (Int_Unsigned'Wide_Value (Val (J..I -
Engine/neo-api-vulkan.adb:70:45     - Unknown word (Wide)           -- Int_Unsigned'Wide_Value (Val (I + 1..Val
Engine/neo-api-vulkan.adb:73:20     - Unknown word (pointers)       -- -- Load function pointers to the Vulkan dynamic
Engine/neo-api-vulkan.adb:73:51     - Unknown word (library)        -- to the Vulkan dynamic library
Engine/neo-api-vulkan.adb:75:61     - Unknown word (Subprogram)     -- Ptr renames Get_Vulkan_Subprogram;
Engine/neo-api-vulkan.adb:77:12     - Unknown word (Acceleration)   -- vkGetAccelerationStructureMemoryRequirementsNV
Engine/neo-api-vulkan.adb:77:123    - Unknown word (Acceleration)   -- oryRequirementsNV (Get ("vkGetAccelerationStructureMemoryRequirementsNV
Engine/neo-api-vulkan.adb:77:135    - Unknown word (Structure)      -- Get ("vkGetAccelerationStructureMemoryRequirementsNV
Engine/neo-api-vulkan.adb:77:144    - Unknown word (Memory)         -- vkGetAccelerationStructureMemoryRequirementsNV"));
Engine/neo-api-vulkan.adb:77:150    - Unknown word (Requirements)   -- GetAccelerationStructureMemoryRequirementsNV"));
Engine/neo-api-vulkan.adb:77:24     - Unknown word (Structure)      -- vkGetAccelerationStructureMemoryRequirementsNV
Engine/neo-api-vulkan.adb:77:33     - Unknown word (Memory)         -- vkGetAccelerationStructureMemoryRequirementsNV := To
Engine/neo-api-vulkan.adb:77:39     - Unknown word (Requirements)   -- GetAccelerationStructureMemoryRequirementsNV := To_Ptr_vkGetAcceleration
Engine/neo-api-vulkan.adb:77:69     - Unknown word (Acceleration)   -- RequirementsNV := To_Ptr_vkGetAccelerationStructureMemoryRequirementsNV
Engine/neo-api-vulkan.adb:77:81     - Unknown word (Structure)      -- Ptr_vkGetAccelerationStructureMemoryRequirementsNV
Engine/neo-api-vulkan.adb:77:90     - Unknown word (Memory)         -- vkGetAccelerationStructureMemoryRequirementsNV (Get
Engine/neo-api-vulkan.adb:77:96     - Unknown word (Requirements)   -- GetAccelerationStructureMemoryRequirementsNV (Get ("vkGetAccelerationStr
Engine/neo-api-vulkan.adb:78:15     - Unknown word (Acceleration)   -- vkCreateAccelerationStructureNV
Engine/neo-api-vulkan.adb:78:27     - Unknown word (Structure)      -- vkCreateAccelerationStructureNV :=
Engine/neo-api-vulkan.adb:78:72     - Unknown word (Acceleration)   -- := To_Ptr_vkCreateAccelerationStructureNV
Engine/neo-api-vulkan.adb:78:84     - Unknown word (Structure)      -- vkCreateAccelerationStructureNV (Get
Engine/neo-api-vulkan.adb:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-api-vulkan.adb:80:120    - Unknown word (Bind)           -- (Get ("vkBindAccelerationStructureMemoryNV
Engine/neo-api-vulkan.adb:80:34     - Unknown word (Memory)         -- vkBindAccelerationStructureMemoryNV := To_Ptr
Engine/neo-api-vulkan.adb:80:66     - Unknown word (Bind)           -- := To_Ptr_vkBindAccelerationStructureMemoryNV
Engine/neo-api-vulkan.adb:80:9      - Unknown word (Bind)           -- vkBindAccelerationStructureMemoryNV
Engine/neo-api-vulkan.adb:80:91     - Unknown word (Memory)         -- vkBindAccelerationStructureMemoryNV (Get (
Engine/neo-api-vulkan.adb:81:144    - Unknown word (Handle)         -- vkGetAccelerationStructureHandleNV"));
Engine/neo-api-vulkan.adb:81:33     - Unknown word (Handle)         -- vkGetAccelerationStructureHandleNV := To
Engine/neo-api-vulkan.adb:81:90     - Unknown word (Handle)         -- vkGetAccelerationStructureHandleNV (Get
Engine/neo-api-vulkan.adb:83:129    - Unknown word (Tracing)        -- (Get ("vkCreateRayTracingPipelinesNV"));
Engine/neo-api-vulkan.adb:83:18     - Unknown word (Tracing)        -- vkCreateRayTracingPipelinesNV
Engine/neo-api-vulkan.adb:83:75     - Unknown word (Tracing)        -- = To_Ptr_vkCreateRayTracingPipelinesNV
Engine/neo-api-vulkan.adb:84:133    - Unknown word (Shader)         -- Get ("vkGetRayTracingShaderGroupHandlesNV"));
Engine/neo-api-vulkan.adb:84:144    - Unknown word (Handles)        -- vkGetRayTracingShaderGroupHandlesNV"));
Engine/neo-api-vulkan.adb:84:15     - Unknown word (Tracing)        -- vkGetRayTracingShaderGroupHandlesNV
Engine/neo-api-vulkan.adb:84:22     - Unknown word (Shader)         -- vkGetRayTracingShaderGroupHandlesNV
Engine/neo-api-vulkan.adb:84:33     - Unknown word (Handles)        -- vkGetRayTracingShaderGroupHandlesNV := To_Ptr
Engine/neo-api-vulkan.adb:84:72     - Unknown word (Tracing)        -- := To_Ptr_vkGetRayTracingShaderGroupHandlesNV
Engine/neo-api-vulkan.adb:84:79     - Unknown word (Shader)         -- To_Ptr_vkGetRayTracingShaderGroupHandlesNV
Engine/neo-api-vulkan.adb:84:90     - Unknown word (Handles)        -- vkGetRayTracingShaderGroupHandlesNV (Get (
Engine/neo-api-vulkan.adb:85:128    - Unknown word (Rays)          -- (Get ("vkCmdTraceRaysNV"));
Engine/neo-api-vulkan.adb:85:17     - Unknown word (Rays)           -- vkCmdTraceRaysNV
Engine/neo-api-vulkan.adb:85:74     - Unknown word (Rays)          -- := To_Ptr_vkCmdTraceRaysNV
Engine/neo-api-vulkan.adb:88:127    - Unknown word (Surface)       -- (Get ("vkDestroySurfaceKHR"));
Engine/neo-api-vulkan.adb:88:16     - Unknown word (Surface)       -- vkDestroySurfaceKHR
Engine/neo-api-vulkan.adb:88:73     - Unknown word (Surface)       -- := To_Ptr_vkDestroySurfaceKHR
Engine/neo-api-vulkan.adb:89:12     - Unknown word (Physical)      -- vkGetPhysicalDeviceImageFormatProperties
Engine/neo-api-vulkan.adb:89:123    - Unknown word (Physical)      -- tProperties (Get ("vkGetPhysicalDeviceImageFormatProperties
Engine/neo-api-vulkan.adb:89:69     - Unknown word (Physical)      -- := To_Ptr_vkGetPhysicalDeviceImageFormatProperties
Engine/neo-api-vulkan.adb:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-api-vulkan.adb:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-api-vulkan.adb:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo-api-vulkan.adb:90:120    - Unknown word (Flush)         -- (Get ("vkFlushMappedMemoryRanges")
Engine/neo-api-vulkan.adb:90:125    - Unknown word (Mapped)        -- (Get ("vkFlushMappedMemoryRanges"));
Engine/neo-api-vulkan.adb:90:14     - Unknown word (Mapped)        -- vkFlushMappedMemoryRanges
Engine/neo-api-vulkan.adb:90:66     - Unknown word (Flush)         -- := To_Ptr_vkFlushMappedMemoryRanges
Engine/neo-api-vulkan.adb:90:71     - Unknown word (Mapped)        -- := To_Ptr_vkFlushMappedMemoryRanges
Engine/neo-api-vulkan.adb:90:9      - Unknown word (Flush)         -- vkFlushMappedMemoryRanges
Engine/neo-api-vulkan.adb:91:126    - Unknown word (Sampler)       -- (Get ("vkCreateSampler"));
Engine/neo-api-vulkan.adb:91:15     - Unknown word (Sampler)       -- vkCreateSampler
Engine/neo-api-vulkan.adb:91:72     - Unknown word (Sampler)       -- := To_Ptr_vkCreateSampler
Engine/neo-api-vulkan.adb:94:16     - Unknown word (Sampler)       -- vkDestroySampler
Engine/neo-api-vulkan.adb:94:73     - Unknown word (Sampler)       -- := To_Ptr_vkDestroySampler
Engine/neo-api-vulkan.adb:96:140    - Unknown word (Layout)        -- vkDestroyDescriptorSetLayout"));
Engine/neo-api-vulkan.adb:96:29     - Unknown word (Layout)        -- vkDestroyDescriptorSetLayout :
Engine/neo-api-vulkan.adb:96:86     - Unknown word (Layout)        -- vkDestroyDescriptorSetLayout (Get
Engine/neo-api-vulkan.adb:97:24     - Unknown word (Layout)        -- vkDestroyPipelineLayout
Engine/neo-api-vulkan.adb:97:81     - Unknown word (Layout)        -- Ptr_vkDestroyPipelineLayout
Engine/neo-api-vulkan.ads:1001:69   - Unknown word (Lenum)         -- format_8h.html#; -- GLenum -- http://web.archive
Engine/neo-api-vulkan.ads:1002:6    - Unknown word (INVALID)       -- GL_INVALID_VALUE
Engine/neo-api-vulkan.ads:1002:98   - Unknown word (Lenum)         -- 16#0000_0501#; -- GLenum
Engine/neo-api-vulkan.ads:1003:98   - Unknown word (Lenum)         -- 16#0000_1903#; -- GLenum
Engine/neo-api-vulkan.ads:1004:98   - Unknown word (Lenum)         -- 16#0000_1904#; -- GLenum
Engine/neo-api-vulkan.ads:1005:6    - Unknown word (BLUE)          -- GL_BLUE
Engine/neo-api-vulkan.ads:1007:6    - Unknown word (LUMINANCE)     -- GL_LUMINANCE
Engine/neo-api-vulkan.ads:1008:6    - Unknown word (SLUMINANCE)    -- GL_SLUMINANCE
Engine/neo-api-vulkan.ads:1009:6    - Unknown word (LUMINANCE)     -- GL_LUMINANCE_ALPHA
Engine/neo-api-vulkan.ads:100:16    - Unknown word (Layout)         -- -- VkPipelineLayoutCreateFlagBits
Engine/neo-api-vulkan.ads:1010:6    - Unknown word (SLUMINANCE)    -- GL_SLUMINANCE_ALPHA
Engine/neo-api-vulkan.ads:1011:6    - Unknown word (INTENSITY)     -- GL_INTENSITY
Engine/neo-api-vulkan.ads:1016:6    - Unknown word (BGRA)          -- GL_BGRA
Engine/neo-api-vulkan.ads:1019:6    - Unknown word (BLUE)          -- GL_BLUE_INTEGER
Engine/neo-api-vulkan.ads:1021:6    - Unknown word (LUMINANCE)     -- GL_LUMINANCE_INTEGER
Engine/neo-api-vulkan.ads:1022:6    - Unknown word (LUMINANCE)     -- GL_LUMINANCE_ALPHA_INTEGER
Engine/neo-api-vulkan.ads:1027:6    - Unknown word (BGRA)          -- GL_BGRA_INTEGER
Engine/neo-api-vulkan.ads:1033:6    - Unknown word (UNSIGNED)      -- GL_UNSIGNED_BYTE
Engine/neo-api-vulkan.ads:1035:6    - Unknown word (UNSIGNED)      -- GL_UNSIGNED_SHORT
Engine/neo-api-vulkan.ads:1037:6    - Unknown word (UNSIGNED)      -- GL_UNSIGNED_INT
Engine/neo-api-vulkan.ads:1039:6    - Unknown word (UNSIGNED)      -- GL_UNSIGNED_INT64
Engine/neo-api-vulkan.ads:103:17    - Unknown word (Swizzle)        -- -- VkComponentSwizzle
Engine/neo-api-vulkan.ads:1044:6    - Unknown word (UNSIGNED)      -- GL_UNSIGNED_BYTE_3_3_2
Engine/neo-api-vulkan.ads:106:8     - Unknown word (Sampler)        -- -- VkSamplerCreateFlags
Engine/neo-api-vulkan.ads:107:14    - Unknown word (Color)          -- -- VkBorderColor
Engine/neo-api-vulkan.ads:107:8     - Unknown word (Border)         -- -- VkBorderColor
Engine/neo-api-vulkan.ads:109:22    - Unknown word (Mode)           -- -- VkSamplerAddressMode Int
Engine/neo-api-vulkan.ads:109:8     - Unknown word (Sampler)        -- -- VkSamplerAddressMode
Engine/neo-api-vulkan.ads:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-api-vulkan.ads:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-api-vulkan.ads:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo-api-vulkan.ads:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-api-vulkan.ads:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-api-vulkan.ads:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-api-vulkan.ads:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-api-vulkan.ads:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-api-vulkan.ads:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-api-vulkan.ads:110:8     - Unknown word (Sampler)        -- -- VkSamplerMipmapMode
Engine/neo-api-vulkan.ads:111:8     - Unknown word (Fence)          -- -- VkFenceCreateFlags
Engine/neo-api-vulkan.ads:112:7     - Unknown word (Lenum)          -- -- GLenum
Engine/neo-api-vulkan.ads:113:20    - Unknown word (Structure)      -- -- VkAccelerationStructureNV Ptr
Engine/neo-api-vulkan.ads:113:8     - Unknown word (Acceleration)   -- -- VkAccelerationStructureNV
Engine/neo-api-vulkan.ads:1140:6    - Unknown word (LUMINANCE)     -- GL_LUMINANCE4
Engine/neo-api-vulkan.ads:1143:6    - Unknown word (SLUMINANCE)    -- GL_SLUMINANCE8
Engine/neo-api-vulkan.ads:114:8     - Unknown word (Sampler)        -- -- VkSampler
Engine/neo-api-vulkan.ads:1159:6    - Unknown word (SLUMINANCE)    -- GL_SLUMINANCE8_ALPHA8
Engine/neo-api-vulkan.ads:115:8     - Unknown word (Fence)          -- -- VkFence
Engine/neo-api-vulkan.ads:116:14    - Unknown word (Memory)         -- -- VkDeviceMemory
Engine/neo-api-vulkan.ads:1172:6    - Unknown word (INTENSITY)     -- GL_INTENSITY4
Engine/neo-api-vulkan.ads:1173:6    - Unknown word (INTENSITY)     -- GL_INTENSITY8
Engine/neo-api-vulkan.ads:1174:6    - Unknown word (INTENSITY)     -- GL_INTENSITY8_SNORM
Engine/neo-api-vulkan.ads:1175:6    - Unknown word (INTENSITY)     -- GL_INTENSITY8UI_EXT
Engine/neo-api-vulkan.ads:1186:6    - Unknown word (COMPRESSED)    -- GL_COMPRESSED_RED
Engine/neo-api-vulkan.ads:1187:6    - Unknown word (COMPRESSED)    -- GL_COMPRESSED_ALPHA
Engine/neo-api-vulkan.ads:1188:6    - Unknown word (COMPRESSED)    -- GL_COMPRESSED_LUMINANCE
Engine/neo-api-vulkan.ads:1189:17   - Unknown word (SLUMINANCE)    -- GL_COMPRESSED_SLUMINANCE
Engine/neo-api-vulkan.ads:1189:6    - Unknown word (COMPRESSED)    -- GL_COMPRESSED_SLUMINANCE
Engine/neo-api-vulkan.ads:1190:6    - Unknown word (COMPRESSED)    -- GL_COMPRESSED_LUMINANCE_ALPHA
Engine/neo-api-vulkan.ads:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-api-vulkan.ads:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-api-vulkan.ads:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-api-vulkan.ads:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-api-vulkan.ads:1208:27   - Unknown word (LATC)          -- COMPRESSED_LUMINANCE_LATC1_EXT :
Engine/neo-api-vulkan.ads:1209:33   - Unknown word (LATC)          -- COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT : constant
Engine/neo-api-vulkan.ads:1210:17   - Unknown word (SIGNED)        -- GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT
Engine/neo-api-vulkan.ads:1210:34   - Unknown word (LATC)          -- COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT : constant
Engine/neo-api-vulkan.ads:1211:17   - Unknown word (SIGNED)        -- GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC
Engine/neo-api-vulkan.ads:1211:40   - Unknown word (LATC)          -- SIGNED_LUMINANCE_ALPHA_LATC2_EXT : constant Int
Engine/neo-api-vulkan.ads:1212:21   - Unknown word (RGTC)          -- GL_COMPRESSED_RED_RGTC1
Engine/neo-api-vulkan.ads:1213:20   - Unknown word (RGTC)          -- GL_COMPRESSED_RG_RGTC2
Engine/neo-api-vulkan.ads:1214:17   - Unknown word (SIGNED)        -- GL_COMPRESSED_SIGNED_RED_RGTC1
Engine/neo-api-vulkan.ads:1214:28   - Unknown word (RGTC)          -- COMPRESSED_SIGNED_RED_RGTC1 : constant
Engine/neo-api-vulkan.ads:1215:17   - Unknown word (SIGNED)        -- GL_COMPRESSED_SIGNED_RG_RGTC2
Engine/neo-api-vulkan.ads:1215:27   - Unknown word (RGTC)          -- COMPRESSED_SIGNED_RG_RGTC2 :
Engine/neo-api-vulkan.ads:1216:21   - Unknown word (BPTC)          -- GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT
Engine/neo-api-vulkan.ads:1216:26   - Unknown word (SIGNED)        -- COMPRESSED_RGB_BPTC_SIGNED_FLOAT : constant
Engine/neo-api-vulkan.ads:1217:21   - Unknown word (BPTC)          -- GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT
Engine/neo-api-vulkan.ads:1218:22   - Unknown word (BPTC)          -- GL_COMPRESSED_RGBA_BPTC_UNORM
Engine/neo-api-vulkan.ads:1219:28   - Unknown word (BPTC)          -- COMPRESSED_SRGB_ALPHA_BPTC_UNORM : constant
Engine/neo-api-vulkan.ads:1222:22   - Unknown word (PUNCHTHROUGH)  -- GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 : constant
Engine/neo-api-vulkan.ads:1225:23   - Unknown word (PUNCHTHROUGH)  -- GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 : constant
Engine/neo-api-vulkan.ads:1231:28   - Unknown word (BPPV)          -- COMPRESSED_RGB_PVRTC_2BPPV1_IMG : constant
Engine/neo-api-vulkan.ads:1232:28   - Unknown word (BPPV)          -- COMPRESSED_RGB_PVRTC_4BPPV1_IMG : constant
Engine/neo-api-vulkan.ads:1233:29   - Unknown word (BPPV)          -- COMPRESSED_RGBA_PVRTC_2BPPV1_IMG : constant
Engine/neo-api-vulkan.ads:1234:29   - Unknown word (BPPV)          -- COMPRESSED_RGBA_PVRTC_4BPPV1_IMG : constant
Engine/neo-api-vulkan.ads:1235:29   - Unknown word (BPPV)          -- COMPRESSED_RGBA_PVRTC_2BPPV2_IMG : constant
Engine/neo-api-vulkan.ads:123:8     - Unknown word (Surface)        -- -- VkSurfaceKHR
Engine/neo-api-vulkan.ads:124:8     - Unknown word (Swapchain)     -- -- VkSwapchainKHR
Engine/neo-api-vulkan.ads:125:8     - Unknown word (Physical)      -- -- VkPhysicalDeviceType
Engine/neo-api-vulkan.ads:128:16    - Unknown word (Layout)        -- -- VkPipelineLayout
Engine/neo-api-vulkan.ads:1292:15   - Unknown word (EXPLICIT)      -- GL_ATC_RGBA_EXPLICIT_ALPHA_AMD
Engine/neo-api-vulkan.ads:1293:15   - Unknown word (INTERPOLATED)  -- GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD
Engine/neo-api-vulkan.ads:1294:6    - Unknown word (PALETTE)       -- GL_PALETTE4_RGB8_OES
Engine/neo-api-vulkan.ads:1295:6    - Unknown word (PALETTE)       -- GL_PALETTE4_RGBA8_OES
Engine/neo-api-vulkan.ads:1296:6    - Unknown word (PALETTE)       -- GL_PALETTE4_R5_G6_B5_OES
Engine/neo-api-vulkan.ads:1297:6    - Unknown word (PALETTE)       -- GL_PALETTE4_RGBA4_OES
Engine/neo-api-vulkan.ads:1298:6    - Unknown word (PALETTE)       -- GL_PALETTE4_RGB5_A1_OES
Engine/neo-api-vulkan.ads:1324:6    - Unknown word (Macros)        -- -- Macros --
Engine/neo-api-vulkan.ads:1328:29   - Unknown word (Major)         -- function VK_MAKE_VERSION (Major, Minor, Patch : Int
Engine/neo-api-vulkan.ads:1329:22   - Unknown word (Shift)         -- (Int_Unsigned_C (Shift_Left (Major, 22) or
Engine/neo-api-vulkan.ads:1329:34   - Unknown word (Major)         -- Unsigned_C (Shift_Left (Major, 22) or Shift_Left
Engine/neo-api-vulkan.ads:1329:48   - Unknown word (Shift)         -- Left (Major, 22) or Shift_Left (Minor, 12) or
Engine/neo-api-vulkan.ads:132:14    - Unknown word (Module)        -- -- VkShaderModule
Engine/neo-api-vulkan.ads:132:8     - Unknown word (Shader)        -- -- VkShaderModule
Engine/neo-api-vulkan.ads:1331:12   - Unknown word (Shift)         -- (Trim (Shift_Right (Int_Unsigned
Engine/neo-api-vulkan.ads:1331:53   - Unknown word (Wide)          -- Unsigned (Version), 22)'Wide_Image, Both) & "."
Engine/neo-api-vulkan.ads:1331:6    - Unknown word (Trim)          -- (Trim (Shift_Right (Int_Unsigned
Engine/neo-api-vulkan.ads:1331:65   - Unknown word (Both)         -- Version), 22)'Wide_Image, Both) & "." &
Engine/neo-api-vulkan.ads:1332:12   - Unknown word (Shift)        -- Trim (Shift_Right (Shift_Left (Int
Engine/neo-api-vulkan.ads:1332:25   - Unknown word (Shift)        -- Trim (Shift_Right (Shift_Left (Int_Unsigned
Engine/neo-api-vulkan.ads:1332:6    - Unknown word (Trim)         -- Trim (Shift_Right (Shift
Engine/neo-api-vulkan.ads:1332:70   - Unknown word (Wide)         -- (Version), 10), 22)'Wide_Image, Both) & "."
Engine/neo-api-vulkan.ads:1332:82   - Unknown word (Both)         -- 0), 22)'Wide_Image, Both) & "." &
Engine/neo-api-vulkan.ads:1333:6    - Unknown word (Trim)         -- Trim (Shift_Right (Shift
Engine/neo-api-vulkan.ads:1333:70   - Unknown word (Wide)         -- (Version), 22), 22)'Wide_Image, Both));
Engine/neo-api-vulkan.ads:1333:82   - Unknown word (Both)         -- 2), 22)'Wide_Image, Both));
Engine/neo-api-vulkan.ads:1346:14   - Unknown word (Internal)     -- type Ptr_vkInternalFreeNotification is access
Engine/neo-api-vulkan.ads:1346:97   - Unknown word (void)         -- Ptr; -- void*
Engine/neo-api-vulkan.ads:1348:60   - Unknown word (allocation)   -- allocationType : Int_Unsigned
Engine/neo-api-vulkan.ads:1348:99   - Unknown word (Internal)     -- Int_Unsigned_C; -- VkInternalAllocationType
Engine/neo-api-vulkan.ads:1349:60   - Unknown word (allocation)   -- allocationScope : Int_Unsigned
Engine/neo-api-vulkan.ads:1350:65   - Unknown word (Convention)   -- with Convention => C;
Engine/neo-api-vulkan.ads:1351:21   - Unknown word (Internal)     -- function To_Ptr_vkInternalFreeNotification is new
Engine/neo-api-vulkan.ads:1355:103  - Unknown word (void)         -- Ptr; -- void*
Engine/neo-api-vulkan.ads:1357:66   - Unknown word (allocation)   -- allocationType : Int_Unsigned
Engine/neo-api-vulkan.ads:1358:66   - Unknown word (allocation)   -- allocationScope : Int_Unsigned
Engine/neo-api-vulkan.ads:1359:71   - Unknown word (Convention)   -- with Convention => C;
Engine/neo-api-vulkan.ads:135:21    - Unknown word (Layout)        -- -- VkDescriptorSetLayout Ptr
Engine/neo-api-vulkan.ads:1364:68   - Unknown word (void)         -- pUserData : Ptr; -- void*
Engine/neo-api-vulkan.ads:1365:68   - Unknown word (void)         -- pMemory : Ptr) -- void*
Engine/neo-api-vulkan.ads:1366:53   - Unknown word (Convention)   -- with Convention => C;
Engine/neo-api-vulkan.ads:1371:14   - Unknown word (Reallocation) -- type Ptr_vkReallocationFunction is access procedure
Engine/neo-api-vulkan.ads:1371:93   - Unknown word (void)         -- Ptr; -- void*
Engine/neo-api-vulkan.ads:1372:57   - Unknown word (Original)     -- pOriginal : Ptr;
Engine/neo-api-vulkan.ads:1374:56   - Unknown word (alignment)    -- alignment : Int_Size_C;
Engine/neo-api-vulkan.ads:1375:56   - Unknown word (allocation)   -- allocationScope : Int_Unsigned
Engine/neo-api-vulkan.ads:1376:61   - Unknown word (Convention)   -- with Convention => C;
Engine/neo-api-vulkan.ads:1377:21   - Unknown word (Reallocation) -- function To_Ptr_vkReallocationFunction is new Unchecked
Engine/neo-api-vulkan.ads:1377:82   - Unknown word (Reallocation) -- Conversion (Ptr, Ptr_vkReallocationFunction);
Engine/neo-api-vulkan.ads:1378:34   - Unknown word (Reallocation) -- kReallocationFunction : Ptr_vkReallocationFunction := null;
Engine/neo-api-vulkan.ads:1378:5    - Unknown word (Reallocation) -- vkReallocationFunction : Ptr_vkReallocationF
Engine/neo-api-vulkan.ads:1383:54   - Unknown word (alignment)    -- alignment : Int_Size_C;
Engine/neo-api-vulkan.ads:1385:59   - Unknown word (Convention)   -- with Convention => C;
Engine/neo-api-vulkan.ads:1390:6    - Unknown word (Structures)   -- -- Structures --
Engine/neo-api-vulkan.ads:1394:10   - Unknown word (Fence)        -- type VkFenceCreateInfo;
Engine/neo-api-vulkan.ads:1395:14   - Unknown word (Fence)        -- type Ptr_VkFenceCreateInfo is access
Engine/neo-api-vulkan.ads:1397:51   - Unknown word (FENCE)        -- = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO; -- VkStructureTy
Engine/neo-api-vulkan.ads:1399:7    - Unknown word (flags)        -- flags : Int_Unsigned_C :=
Engine/neo-api-vulkan.ads:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-api-vulkan.ads:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-api-vulkan.ads:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-api-vulkan.ads:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-api-vulkan.ads:1401:42   - Unknown word (Positive)     -- VkFenceCreateInfo is array (Positive range <>) of aliased
Engine/neo-api-vulkan.ads:1405:10   - Unknown word (Mapped)       -- type VkMappedMemoryRange;
Engine/neo-api-vulkan.ads:1406:14   - Unknown word (Mapped)       -- type Ptr_VkMappedMemoryRange is access
Engine/neo-api-vulkan.ads:1406:48   - Unknown word (Mapped)       -- edMemoryRange is access all VkMappedMemoryRange;
Engine/neo-api-vulkan.ads:1407:10   - Unknown word (Mapped)       -- type VkMappedMemoryRange is record
Engine/neo-api-vulkan.ads:1408:52   - Unknown word (MAPPED)       -- = VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE; -- VkStructureT
Engine/neo-api-vulkan.ads:1409:22   - Unknown word (Mapped)       -- pNext : Ptr_VkMappedMemoryRange := null;
Engine/neo-api-vulkan.ads:1410:7    - Unknown word (memory)       -- memory : Int_64_Unsigned_C
Engine/neo-api-vulkan.ads:1411:7    - Unknown word (offset)       -- offset : Int_64_Unsigned_C
Engine/neo-api-vulkan.ads:1414:44   - Unknown word (Positive)     -- VkMappedMemoryRange is array (Positive range <>) of aliased
Engine/neo-api-vulkan.ads:141:6     - Unknown word (Constants)     -- -- Constants --
Engine/neo-api-vulkan.ads:1423:7    - Unknown word (flags)        -- flags :
Engine/neo-api-vulkan.ads:1430:13   - Unknown word (Bias)         -- mipLodBias : Real
Engine/neo-api-vulkan.ads:1431:54   - Unknown word (FALSE)        -- Int_Unsigned_C := VK_FALSE; -- VkBool32
Engine/neo-api-vulkan.ads:1431:7    - Unknown word (anisotropy)   -- anisotropyEnable : Int_Unsigned
Engine/neo-api-vulkan.ads:1432:10   - Unknown word (Anisotropy)   -- maxAnisotropy : Real_C
Engine/neo-api-vulkan.ads:1433:54   - Unknown word (FALSE)        -- Int_Unsigned_C := VK_FALSE; -- VkBool32
Engine/neo-api-vulkan.ads:1437:7    - Unknown word (border)       -- borderColor : Int
Engine/neo-api-vulkan.ads:1438:19   - Unknown word (Coordinates)  -- unnormalizedCoordinates : Int_Unsigned_C :=
Engine/neo-api-vulkan.ads:1438:54   - Unknown word (FALSE)        -- Int_Unsigned_C := VK_FALSE; -- VkBool32
Engine/neo-api-vulkan.ads:1440:44   - Unknown word (Positive)     -- VkSamplerCreateInfo is array (Positive range <>) of aliased
Engine/neo-api-vulkan.ads:1444:10   - Unknown word (Extent)       -- type VkExtent2D;
Engine/neo-api-vulkan.ads:1445:14   - Unknown word (Extent)       -- type Ptr_VkExtent2D is access all VkExtent
Engine/neo-api-vulkan.ads:1445:39   - Unknown word (Extent)       -- VkExtent2D is access all VkExtent2D with Convention =
Engine/neo-api-vulkan.ads:1446:10   - Unknown word (Extent)       -- type VkExtent2D is record
Engine/neo-api-vulkan.ads:1447:7    - Unknown word (width)        -- width : Int_Unsigned_C :
Engine/neo-api-vulkan.ads:1448:7    - Unknown word (height)       -- height : Int_Unsigned_C :=
Engine/neo-api-vulkan.ads:144:16    - Unknown word (library)       -- -- OS driver library paths
Engine/neo-api-vulkan.ads:144:9     - Unknown word (driver)        -- -- OS driver library paths
Engine/neo-api-vulkan.ads:1450:16   - Unknown word (Extent)       -- type Array_VkExtent2D is array (Positive
Engine/neo-api-vulkan.ads:1450:35   - Unknown word (Positive)     -- VkExtent2D is array (Positive range <>) of aliased
Engine/neo-api-vulkan.ads:1457:7    - Unknown word (width)        -- width : Int_Unsigned_C :
Engine/neo-api-vulkan.ads:1458:7    - Unknown word (height)       -- height : Int_Unsigned_C :=
Engine/neo-api-vulkan.ads:1459:7    - Unknown word (depth)        -- depth : Int_Unsigned_C :
Engine/neo-api-vulkan.ads:1461:35   - Unknown word (Positive)     -- VkExtent3D is array (Positive range <>) of aliased
Engine/neo-api-vulkan.ads:1465:22   - Unknown word (Barrier)      -- type VkBufferMemoryBarrier;
Engine/neo-api-vulkan.ads:1466:26   - Unknown word (Barrier)      -- type Ptr_VkBufferMemoryBarrier is access all VkBufferMemoryB
Engine/neo-api-vulkan.ads:1466:62   - Unknown word (Barrier)      -- access all VkBufferMemoryBarrier with Convention => C
Engine/neo-api-vulkan.ads:1467:22   - Unknown word (Barrier)      -- type VkBufferMemoryBarrier is record
Engine/neo-api-vulkan.ads:1468:79   - Unknown word (BARRIER)      -- STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER; -- VkStructureType
Engine/neo-api-vulkan.ads:1469:47   - Unknown word (Barrier)      -- : Ptr_VkBufferMemoryBarrier := null;     -- const
Engine/neo-api-vulkan.ads:1475:7    - Unknown word (offset)       -- offset : Int_
Engine/neo-api-vulkan.ads:1485:66   - Unknown word (BARRIER)      -- STRUCTURE_TYPE_MEMORY_BARRIER; -- VkStructureType
Engine/neo-api-vulkan.ads:148:10    - Unknown word (MEMORY)        -- VK_MAX_MEMORY_TYPES : constant Int
Engine/neo-api-vulkan.ads:1494:15   - Unknown word (Subresource)  -- type VkImageSubresourceLayers;
Engine/neo-api-vulkan.ads:1495:19   - Unknown word (Subresource)  -- type Ptr_VkImageSubresourceLayers is access all
Engine/neo-api-vulkan.ads:1495:58   - Unknown word (Subresource)  -- is access all VkImageSubresourceLayers with Convention
Engine/neo-api-vulkan.ads:1496:15   - Unknown word (Subresource)  -- type VkImageSubresourceLayers is record
Engine/neo-api-vulkan.ads:1497:7    - Unknown word (aspect)       -- aspectMask : Int_Unsigned
Engine/neo-api-vulkan.ads:1502:21   - Unknown word (Subresource)  -- type Array_VkImageSubresourceLayers is array (Positive
Engine/neo-api-vulkan.ads:1506:10   - Unknown word (Offset)       -- type VkOffset3D;
Engine/neo-api-vulkan.ads:1507:14   - Unknown word (Offset)       -- type Ptr_VkOffset3D is access all VkOffset
Engine/neo-api-vulkan.ads:1507:39   - Unknown word (Offset)       -- VkOffset3D is access all VkOffset3D with Convention =
Engine/neo-api-vulkan.ads:1508:10   - Unknown word (Offset)       -- type VkOffset3D is record
Engine/neo-api-vulkan.ads:1513:16   - Unknown word (Offset)       -- type Array_VkOffset3D is array (Positive
Engine/neo-api-vulkan.ads:1524:7    - Unknown word (extent)       -- extent : VkExtent3D
Engine/neo-api-vulkan.ads:1535:7    - Unknown word (flags)        -- flags : Int
Engine/neo-api-vulkan.ads:1557:16   - Unknown word (Module)       -- type VkShaderModuleCreateInfo;
Engine/neo-api-vulkan.ads:1558:20   - Unknown word (Module)       -- type Ptr_VkShaderModuleCreateInfo is access
Engine/neo-api-vulkan.ads:1558:59   - Unknown word (Module)       -- is access all VkShaderModuleCreateInfo with Convention
Engine/neo-api-vulkan.ads:1559:16   - Unknown word (Module)       -- type VkShaderModuleCreateInfo is record
Engine/neo-api-vulkan.ads:1560:61   - Unknown word (MODULE)       -- STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO; -- VkStructureTy
Engine/neo-api-vulkan.ads:1562:7    - Unknown word (flags)        -- flags : Int_Unsigned_C
Engine/neo-api-vulkan.ads:1574:16   - Unknown word (Length)       -- bufferRowLength : Int_Unsigned_C
Engine/neo-api-vulkan.ads:1575:18   - Unknown word (Height)       -- bufferImageHeight : Int_Unsigned_C
Engine/neo-api-vulkan.ads:157:11    - Unknown word (HANDLE)        -- VK_NULL_HANDLE : constant Int_Unsigned
Engine/neo-api-vulkan.ads:1589:7    - Unknown word (flags)        -- flags : Int
Engine/neo-api-vulkan.ads:1592:7    - Unknown word (extent)       -- extent : VkExtent
Engine/neo-api-vulkan.ads:1596:7    - Unknown word (tiling)       -- tiling : Int
Engine/neo-api-vulkan.ads:1596:82   - Unknown word (Tiling)       -- -- VkImageTiling
Engine/neo-api-vulkan.ads:1601:7    - Unknown word (initial)      -- initialLayout : Int
Engine/neo-api-vulkan.ads:1607:20   - Unknown word (Callbacks)    -- type VkAllocationCallbacks;
Engine/neo-api-vulkan.ads:1608:24   - Unknown word (Callbacks)    -- type Ptr_VkAllocationCallbacks is access all VkAllocationCal
Engine/neo-api-vulkan.ads:1608:60   - Unknown word (Callbacks)    -- access all VkAllocationCallbacks with Convention => C
Engine/neo-api-vulkan.ads:1609:20   - Unknown word (Callbacks)    -- type VkAllocationCallbacks is record
Engine/neo-api-vulkan.ads:160:19    - Unknown word (IGNORED)       -- VK_QUEUE_FAMILY_IGNORED : constant Int_Unsigned
Engine/neo-api-vulkan.ads:1617:26   - Unknown word (Callbacks)    -- type Array_VkAllocationCallbacks is array (Positive range
Engine/neo-api-vulkan.ads:1627:67   - Unknown word (HINSTANCE)    -- := NULL_PTR; -- HINSTANCE
Engine/neo-api-vulkan.ads:1627:7    - Unknown word (hinstance)    -- hinstance : Ptr
Engine/neo-api-vulkan.ads:1634:10   - Unknown word (Swapchain)    -- type VkSwapchainCreateInfoKHR;
Engine/neo-api-vulkan.ads:1635:14   - Unknown word (Swapchain)    -- type Ptr_VkSwapchainCreateInfoKHR is access
Engine/neo-api-vulkan.ads:1635:53   - Unknown word (Swapchain)    -- CreateInfoKHR is access all VkSwapchainCreateInfoKHR with Convention
Engine/neo-api-vulkan.ads:1637:67   - Unknown word (SWAPCHAIN)    -- = VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR; --
Engine/neo-api-vulkan.ads:163:6     - Unknown word (SUBPASS)       -- VK_SUBPASS_EXTERNAL : constant
Engine/neo-api-vulkan.ads:1640:7    - Unknown word (surface)      -- surface : Ptr
Engine/neo-api-vulkan.ads:1651:7    - Unknown word (composite)    -- compositeAlpha : Int_Unsigned
Engine/neo-api-vulkan.ads:1652:7    - Unknown word (present)     -- presentMode : Int
Engine/neo-api-vulkan.ads:1653:7    - Unknown word (clipped)     -- clipped : Int
Engine/neo-api-vulkan.ads:1663:7    - Unknown word (robust)      -- robustBufferAccess
Engine/neo-api-vulkan.ads:1663:70   - Unknown word (FALSE)       -- Int_Unsigned_C := VK_FALSE; -- VkBool32
Engine/neo-api-vulkan.ads:1664:11   - Unknown word (Draw)        -- fullDrawIndexUint32
Engine/neo-api-vulkan.ads:1664:7    - Unknown word (full)        -- fullDrawIndexUint32
Engine/neo-api-vulkan.ads:1666:7    - Unknown word (independent) -- independentBlend
Engine/neo-api-vulkan.ads:1667:7    - Unknown word (geometry)    -- geometryShader
Engine/neo-api-vulkan.ads:1668:7    - Unknown word (tessellation) -- tessellationShader
Engine/neo-api-vulkan.ads:1669:17   - Unknown word (Shading)      -- sampleRateShading
Engine/neo-api-vulkan.ads:1670:7    - Unknown word (dual)         -- dualSrcBlend
Engine/neo-api-vulkan.ads:1671:7    - Unknown word (logic)        -- logicOp
Engine/neo-api-vulkan.ads:1672:12   - Unknown word (Draw)         -- multiDrawIndirect
Engine/neo-api-vulkan.ads:1672:16   - Unknown word (Indirect)     -- multiDrawIndirect
Engine/neo-api-vulkan.ads:1672:7    - Unknown word (multi)        -- multiDrawIndirect
Engine/neo-api-vulkan.ads:1673:11   - Unknown word (Indirect)     -- drawIndirectFirstInstance
Engine/neo-api-vulkan.ads:1673:7    - Unknown word (draw)         -- drawIndirectFirstInstance
Engine/neo-api-vulkan.ads:1674:12   - Unknown word (Clamp)        -- depthClamp
Engine/neo-api-vulkan.ads:1674:7    - Unknown word (depth)        -- depthClamp
Engine/neo-api-vulkan.ads:1675:12   - Unknown word (Bias)         -- depthBiasClamp
Engine/neo-api-vulkan.ads:1675:16   - Unknown word (Clamp)        -- depthBiasClamp
Engine/neo-api-vulkan.ads:1675:7    - Unknown word (depth)        -- depthBiasClamp
Engine/neo-api-vulkan.ads:1676:18   - Unknown word (Solid)        -- fillModeNonSolid
Engine/neo-api-vulkan.ads:1676:7    - Unknown word (fill)         -- fillModeNonSolid
Engine/neo-api-vulkan.ads:1677:12   - Unknown word (Bounds)       -- depthBounds
Engine/neo-api-vulkan.ads:1677:7    - Unknown word (depth)        -- depthBounds
Engine/neo-api-vulkan.ads:1678:7    - Unknown word (wide)         -- wideLines
Engine/neo-api-vulkan.ads:1679:7    - Unknown word (large)        -- largePoints
Engine/neo-api-vulkan.ads:1681:7    - Unknown word (multi)        -- multiViewport
Engine/neo-api-vulkan.ads:1682:14   - Unknown word (Anisotropy)   -- samplerAnisotropy
Engine/neo-api-vulkan.ads:1682:7    - Unknown word (sampler)      -- samplerAnisotropy
Engine/neo-api-vulkan.ads:1683:14   - Unknown word (Compression)  -- textureCompressionETC2
Engine/neo-api-vulkan.ads:1683:7    - Unknown word (texture)      -- textureCompressionETC2
Engine/neo-api-vulkan.ads:1684:14   - Unknown word (Compression)  -- textureCompressionASTC_LDR
Engine/neo-api-vulkan.ads:1684:7    - Unknown word (texture)      -- textureCompressionASTC_LDR
Engine/neo-api-vulkan.ads:1685:14   - Unknown word (Compression)  -- textureCompressionBC
Engine/neo-api-vulkan.ads:1685:7    - Unknown word (texture)      -- textureCompressionBC
Engine/neo-api-vulkan.ads:1686:21   - Unknown word (Precise)      -- occlusionQueryPrecise :
Engine/neo-api-vulkan.ads:1686:7    - Unknown word (occlusion)    -- occlusionQueryPrecise
Engine/neo-api-vulkan.ads:1688:30   - Unknown word (Atomics)      -- vertexPipelineStoresAndAtomics : Int_Unsigned
Engine/neo-api-vulkan.ads:1689:24   - Unknown word (Atomics)      -- fragmentStoresAndAtomics : Int
Engine/neo-api-vulkan.ads:1690:13   - Unknown word (Tessellation) -- shaderTessellationAndGeometryPointSize
Engine/neo-api-vulkan.ads:1690:7    - Unknown word (shader)       -- shaderTessellationAndGeometryPointSi
Engine/neo-api-vulkan.ads:1691:18   - Unknown word (Gather)       -- shaderImageGatherExtended
Engine/neo-api-vulkan.ads:1691:7    - Unknown word (shader)       -- shaderImageGatherExtended
Engine/neo-api-vulkan.ads:1692:33   - Unknown word (Formats)      -- shaderStorageImageExtendedFormats : Int_Unsigned
Engine/neo-api-vulkan.ads:1692:7    - Unknown word (shader)       -- shaderStorageImageExtendedFormats
Engine/neo-api-vulkan.ads:1693:25   - Unknown word (Multisample)  -- shaderStorageImageMultisample : Int_Unsigned
Engine/neo-api-vulkan.ads:1693:7    - Unknown word (shader)       -- shaderStorageImageMultisample
Engine/neo-api-vulkan.ads:1694:7    - Unknown word (shader)       -- shaderStorageImageReadWithoutFormat
Engine/neo-api-vulkan.ads:1696:13   - Unknown word (Uniform)      -- shaderUniformBufferArrayDynamicIndexing
Engine/neo-api-vulkan.ads:169:6     - Unknown word (DEPENDENCY)    -- VK_DEPENDENCY_BY_REGION_BIT : constant
Engine/neo-api-vulkan.ads:169:68    - Unknown word (Dependency)    -- Unsigned_C := 1; -- VkDependencyFlags
Engine/neo-api-vulkan.ads:1700:13   - Unknown word (Clip)         -- shaderClipDistance
Engine/neo-api-vulkan.ads:1700:17   - Unknown word (Distance)     -- shaderClipDistance
Engine/neo-api-vulkan.ads:1701:17   - Unknown word (Distance)     -- shaderCullDistance
Engine/neo-api-vulkan.ads:1705:21   - Unknown word (Residency)    -- shaderResourceResidency : Int
Engine/neo-api-vulkan.ads:1707:13   - Unknown word (Binding)      -- sparseBinding
Engine/neo-api-vulkan.ads:1707:7    - Unknown word (sparse)       -- sparseBinding
Engine/neo-api-vulkan.ads:1708:13   - Unknown word (Residency)    -- sparseResidencyBuffer
Engine/neo-api-vulkan.ads:1708:7    - Unknown word (sparse)       -- sparseResidencyBuffer
Engine/neo-api-vulkan.ads:1709:13   - Unknown word (Residency)    -- sparseResidencyImage2D
Engine/neo-api-vulkan.ads:1709:7    - Unknown word (sparse)       -- sparseResidencyImage2D
Engine/neo-api-vulkan.ads:1710:13   - Unknown word (Residency)    -- sparseResidencyImage3D
Engine/neo-api-vulkan.ads:1710:7    - Unknown word (sparse)       -- sparseResidencyImage3D
Engine/neo-api-vulkan.ads:1711:13   - Unknown word (Residency)    -- sparseResidency2Samples
Engine/neo-api-vulkan.ads:1711:7    - Unknown word (sparse)       -- sparseResidency2Samples
Engine/neo-api-vulkan.ads:1716:15   - Unknown word (Multisample)  -- variableMultisampleRate
Engine/neo-api-vulkan.ads:1717:7    - Unknown word (inherited)    -- inheritedQueries
Engine/neo-api-vulkan.ads:172:13    - Unknown word (HEAP)          -- VK_MEMORY_HEAP_DEVICE_LOCAL_BIT : constant
Engine/neo-api-vulkan.ads:172:6     - Unknown word (MEMORY)        -- VK_MEMORY_HEAP_DEVICE_LOCAL_BIT
Engine/neo-api-vulkan.ads:172:72    - Unknown word (Memory)        -- Unsigned_C := 1; -- VkMemoryHeapFlagBits
Engine/neo-api-vulkan.ads:172:78    - Unknown word (Heap)          -- Unsigned_C := 1; -- VkMemoryHeapFlagBits
Engine/neo-api-vulkan.ads:1731:10   - Unknown word (Texel)        -- maxTexelBufferElements
Engine/neo-api-vulkan.ads:1731:21   - Unknown word (Elements)     -- maxTexelBufferElements
Engine/neo-api-vulkan.ads:1732:10   - Unknown word (Uniform)      -- maxUniformBufferRange
Engine/neo-api-vulkan.ads:1734:14   - Unknown word (Constants)    -- maxPushConstantsSize
Engine/neo-api-vulkan.ads:1737:18   - Unknown word (Granularity)  -- bufferImageGranularity
Engine/neo-api-vulkan.ads:1739:10   - Unknown word (Bound)        -- maxBoundDescriptorSets
Engine/neo-api-vulkan.ads:1740:28   - Unknown word (Samplers)     -- maxPerStageDescriptorSamplers :
Engine/neo-api-vulkan.ads:1741:28   - Unknown word (Uniform)      -- maxPerStageDescriptorUniformBuffers
Engine/neo-api-vulkan.ads:1747:23   - Unknown word (Samplers)     -- maxDescriptorSetSamplers
Engine/neo-api-vulkan.ads:1748:23   - Unknown word (Uniform)      -- maxDescriptorSetUniformBuffers
Engine/neo-api-vulkan.ads:1749:23   - Unknown word (Uniform)      -- maxDescriptorSetUniformBuffersDynamic
Engine/neo-api-vulkan.ads:1756:21   - Unknown word (Bindings)     -- maxVertexInputBindings
Engine/neo-api-vulkan.ads:1758:21   - Unknown word (Binding)      -- maxVertexInputBindingStride
Engine/neo-api-vulkan.ads:1758:28   - Unknown word (Stride)       -- maxVertexInputBindingStride
Engine/neo-api-vulkan.ads:175:15    - Unknown word (ALLOCATION)    -- VK_INTERNAL_ALLOCATION_TYPE_EXECUTABLE : constant
Engine/neo-api-vulkan.ads:175:31    - Unknown word (EXECUTABLE)    -- INTERNAL_ALLOCATION_TYPE_EXECUTABLE : constant Int_Unsigned
Engine/neo-api-vulkan.ads:175:6     - Unknown word (INTERNAL)      -- VK_INTERNAL_ALLOCATION_TYPE_EXECUTABLE
Engine/neo-api-vulkan.ads:175:79    - Unknown word (Internal)      -- Unsigned_C := 0; -- VkInternalAllocationType
Engine/neo-api-vulkan.ads:175:87    - Unknown word (Allocation)    -- C := 0; -- VkInternalAllocationType
Engine/neo-api-vulkan.ads:1760:10   - Unknown word (Tessellation) -- maxTessellationGenerationLevel
Engine/neo-api-vulkan.ads:1760:22   - Unknown word (Generation)   -- maxTessellationGenerationLevel
Engine/neo-api-vulkan.ads:1761:10   - Unknown word (Tessellation) -- maxTessellationPatchSize
Engine/neo-api-vulkan.ads:1762:10   - Unknown word (Tessellation) -- maxTessellationControlPerVertexInputComponent
Engine/neo-api-vulkan.ads:1771:24   - Unknown word (Vertices)     -- maxGeometryOutputVertices
Engine/neo-api-vulkan.ads:1775:18   - Unknown word (Dual)         -- maxFragmentDualSrcAttachments
Engine/neo-api-vulkan.ads:1776:18   - Unknown word (Combined)     -- maxFragmentCombinedOutputResources
Engine/neo-api-vulkan.ads:1782:10   - Unknown word (Texel)        -- subTexelPrecisionBits
Engine/neo-api-vulkan.ads:1784:10   - Unknown word (Draw)         -- maxDrawIndexedIndexValue
Engine/neo-api-vulkan.ads:1784:14   - Unknown word (Indexed)      -- maxDrawIndexedIndexValue
Engine/neo-api-vulkan.ads:1785:10   - Unknown word (Draw)         -- maxDrawIndirectCount
Engine/neo-api-vulkan.ads:1785:14   - Unknown word (Indirect)     -- maxDrawIndirectCount
Engine/neo-api-vulkan.ads:1786:20   - Unknown word (Bias)         -- maxSamplerLodBias
Engine/neo-api-vulkan.ads:1787:17   - Unknown word (Anisotropy)   -- maxSamplerAnisotropy
Engine/neo-api-vulkan.ads:1788:10   - Unknown word (Viewports)    -- maxViewports
Engine/neo-api-vulkan.ads:1789:18   - Unknown word (Dimensions)   -- maxViewportDimensions
Engine/neo-api-vulkan.ads:178:18    - Unknown word (SRGB)          -- VK_COLOR_SPACE_SRGB_NONLINEAR_KHR : constant
Engine/neo-api-vulkan.ads:178:23    - Unknown word (NONLINEAR)     -- VK_COLOR_SPACE_SRGB_NONLINEAR_KHR : constant Int_Unsigned
Engine/neo-api-vulkan.ads:178:6     - Unknown word (COLOR)         -- VK_COLOR_SPACE_SRGB_NONLINEAR
Engine/neo-api-vulkan.ads:178:74    - Unknown word (Color)         -- Unsigned_C := 0; -- VkColorSpaceKHR
Engine/neo-api-vulkan.ads:1790:15   - Unknown word (Bounds)       -- viewportBoundsRange
Engine/neo-api-vulkan.ads:1792:19   - Unknown word (Alignment)    -- minMemoryMapAlignment
Engine/neo-api-vulkan.ads:1793:10   - Unknown word (Texel)        -- minTexelBufferOffsetAlignment
Engine/neo-api-vulkan.ads:1793:27   - Unknown word (Alignment)    -- minTexelBufferOffsetAlignment :
Engine/neo-api-vulkan.ads:1794:29   - Unknown word (Alignment)    -- minUniformBufferOffsetAlignment : Int
Engine/neo-api-vulkan.ads:1795:29   - Unknown word (Alignment)    -- minStorageBufferOffsetAlignment : Int
Engine/neo-api-vulkan.ads:1796:10   - Unknown word (Texel)        -- minTexelOffset
Engine/neo-api-vulkan.ads:1797:10   - Unknown word (Texel)        -- maxTexelOffset
Engine/neo-api-vulkan.ads:1798:15   - Unknown word (Gather)       -- minTexelGatherOffset
Engine/neo-api-vulkan.ads:1799:15   - Unknown word (Gather)       -- maxTexelGatherOffset
Engine/neo-api-vulkan.ads:17:15     - Unknown word (Vectors)      -- with Neo.Core.Vectors;
Engine/neo-api-vulkan.ads:1800:10   - Unknown word (Interpolation) -- minInterpolationOffset
Engine/neo-api-vulkan.ads:1801:10   - Unknown word (Interpolation) -- maxInterpolationOffset
Engine/neo-api-vulkan.ads:1802:15   - Unknown word (Interpolation) -- subPixelInterpolationOffsetBits
Engine/neo-api-vulkan.ads:1803:21   - Unknown word (Width)         -- maxFramebufferWidth
Engine/neo-api-vulkan.ads:1804:21   - Unknown word (Height)        -- maxFramebufferHeight
Engine/neo-api-vulkan.ads:1807:18   - Unknown word (Depth)         -- framebufferDepthSampleCounts
Engine/neo-api-vulkan.ads:1813:19   - Unknown word (Depth)         -- sampledImageDepthSampleCounts
Engine/neo-api-vulkan.ads:1817:26   - Unknown word (Graphics)      -- timestampComputeAndGraphics
Engine/neo-api-vulkan.ads:1819:10   - Unknown word (Clip)          -- maxClipDistances
Engine/neo-api-vulkan.ads:1819:14   - Unknown word (Distances)     -- maxClipDistances
Engine/neo-api-vulkan.ads:181:19    - Unknown word (SIGNALED)      -- VK_FENCE_CREATE_SIGNALED_BIT : constant Int_Unsigned
Engine/neo-api-vulkan.ads:181:6     - Unknown word (FENCE)         -- VK_FENCE_CREATE_SIGNALED_BIT
Engine/neo-api-vulkan.ads:181:81    - Unknown word (Fence)         -- 16#0000_0001#; -- VkFenceCreateFlagBits
Engine/neo-api-vulkan.ads:1820:14   - Unknown word (Distances)     -- maxCullDistances
Engine/neo-api-vulkan.ads:1821:10   - Unknown word (Combined)      -- maxCombinedClipAndCullDistances
Engine/neo-api-vulkan.ads:1821:18   - Unknown word (Clip)          -- maxCombinedClipAndCullDistances
Engine/neo-api-vulkan.ads:1821:29   - Unknown word (Distances)     -- maxCombinedClipAndCullDistances : Int
Engine/neo-api-vulkan.ads:1822:7    - Unknown word (discrete)      -- discreteQueuePriorities
Engine/neo-api-vulkan.ads:1825:16   - Unknown word (Granularity)   -- pointSizeGranularity
Engine/neo-api-vulkan.ads:1826:16   - Unknown word (Granularity)   -- lineWidthGranularity
Engine/neo-api-vulkan.ads:1827:7    - Unknown word (strict)        -- strictLines
Engine/neo-api-vulkan.ads:1829:30   - Unknown word (Alignment)     -- optimalBufferCopyOffsetAlignment : Int
Engine/neo-api-vulkan.ads:1829:7    - Unknown word (optimal)       -- optimalBufferCopyOffsetAlignment
Engine/neo-api-vulkan.ads:1830:27   - Unknown word (Pitch)         -- optimalBufferCopyRowPitchAlignment
Engine/neo-api-vulkan.ads:1830:7    - Unknown word (optimal)       -- optimalBufferCopyRowPitchAlignment
Engine/neo-api-vulkan.ads:1831:10   - Unknown word (Coherent)      -- nonCoherentAtomSize
Engine/neo-api-vulkan.ads:1837:24   - Unknown word (Sparse)        -- type VkPhysicalDeviceSparseProperties;
Engine/neo-api-vulkan.ads:1838:28   - Unknown word (Sparse)        -- Ptr_VkPhysicalDeviceSparseProperties is access
Engine/neo-api-vulkan.ads:1838:75   - Unknown word (Sparse)        -- all VkPhysicalDeviceSparseProperties with Convention
Engine/neo-api-vulkan.ads:1839:24   - Unknown word (Sparse)        -- type VkPhysicalDeviceSparseProperties is record
Engine/neo-api-vulkan.ads:1840:31   - Unknown word (Shape)         -- residencyStandard2DBlockShape : Int_Unsigned
Engine/neo-api-vulkan.ads:1840:7    - Unknown word (residency)     -- residencyStandard2DBlockShape
Engine/neo-api-vulkan.ads:1841:26   - Unknown word (Multisample)   -- residencyStandard2DMultisampleBlockShape : Int_Unsigned
Engine/neo-api-vulkan.ads:1841:42   - Unknown word (Shape)         -- encyStandard2DMultisampleBlockShape : Int_Unsigned_C :=
Engine/neo-api-vulkan.ads:1841:7    - Unknown word (residency)     -- residencyStandard2DMultisampleBlockShap
Engine/neo-api-vulkan.ads:1842:31   - Unknown word (Shape)         -- residencyStandard3DBlockShape : Int_Unsigned
Engine/neo-api-vulkan.ads:1842:7    - Unknown word (residency)     -- residencyStandard3DBlockShape
Engine/neo-api-vulkan.ads:1843:16   - Unknown word (Aligned)       -- residencyAlignedMipSize
Engine/neo-api-vulkan.ads:1843:7    - Unknown word (residency)     -- residencyAlignedMipSize
Engine/neo-api-vulkan.ads:1844:19   - Unknown word (Resident)      -- residencyNonResidentStrict
Engine/neo-api-vulkan.ads:1844:27   - Unknown word (Strict)        -- residencyNonResidentStrict : Int
Engine/neo-api-vulkan.ads:1844:7    - Unknown word (residency)     -- residencyNonResidentStrict
Engine/neo-api-vulkan.ads:1846:30   - Unknown word (Sparse)        -- Array_VkPhysicalDeviceSparseProperties is array
Engine/neo-api-vulkan.ads:184:6     - Unknown word (TRUE)          -- VK_TRUE : constant Int_Unsigned
Engine/neo-api-vulkan.ads:1854:7    - Unknown word (driver)        -- driverVersion : Int_Unsigned
Engine/neo-api-vulkan.ads:1855:7    - Unknown word (vendor)        -- vendorID : Int_Unsigned
Engine/neo-api-vulkan.ads:1858:79   - Unknown word (CHAR)          -- := (others => NULL_CHAR_8_C); -- char [VK_MAX
Engine/neo-api-vulkan.ads:1858:93   - Unknown word (char)          -- NULL_CHAR_8_C); -- char [VK_MAX_PHYSICAL_DEVICE
Engine/neo-api-vulkan.ads:185:6     - Unknown word (FALSE)         -- VK_FALSE : constant Int_Unsigned
Engine/neo-api-vulkan.ads:1871:7    - Unknown word (heap)          -- heapIndex : Int_Unsigned
Engine/neo-api-vulkan.ads:1877:16   - Unknown word (Heap)          -- type VkMemoryHeap;
Engine/neo-api-vulkan.ads:1878:20   - Unknown word (Heap)          -- type Ptr_VkMemoryHeap is access all VkMemoryHeap
Engine/neo-api-vulkan.ads:1878:47   - Unknown word (Heap)          -- is access all VkMemoryHeap;
Engine/neo-api-vulkan.ads:1883:92   - Unknown word (HEAPS)         -- VkMemoryHeap [VK_MAX_MEMORY_HEAPS]
Engine/neo-api-vulkan.ads:188:13    - Unknown word (NEAREST)       -- VK_FILTER_NEAREST : constant Int_Unsigned
Engine/neo-api-vulkan.ads:1890:7    - Unknown word (memory)        -- memoryTypeCount : Int_Unsigned
Engine/neo-api-vulkan.ads:1891:7    - Unknown word (memory)        -- memoryTypes : Array_VkMemoryType
Engine/neo-api-vulkan.ads:1893:107  - Unknown word (HEAPS)         -- VkMemoryHeap [VK_MAX_MEMORY_HEAPS]
Engine/neo-api-vulkan.ads:1893:13   - Unknown word (Heaps)         -- memoryHeaps : Array_VkMemoryHeap
Engine/neo-api-vulkan.ads:1899:17   - Unknown word (Capabilities)  -- type VkSurfaceCapabilitiesKHR;
Engine/neo-api-vulkan.ads:189:13    - Unknown word (LINEAR)        -- VK_FILTER_LINEAR : constant Int_Unsigned
Engine/neo-api-vulkan.ads:1900:21   - Unknown word (Capabilities)  -- type Ptr_VkSurfaceCapabilitiesKHR is access all VkSurfaceCap
Engine/neo-api-vulkan.ads:1900:60   - Unknown word (Capabilities)  -- access all VkSurfaceCapabilitiesKHR;
Engine/neo-api-vulkan.ads:1901:17   - Unknown word (Capabilities)  -- type VkSurfaceCapabilitiesKHR is record
Engine/neo-api-vulkan.ads:1908:16   - Unknown word (Transforms)    -- supportedTransforms : Int_Unsigned_C
Engine/neo-api-vulkan.ads:1913:23   - Unknown word (Capabilities)  -- type Array_VkSurfaceCapabilitiesKHR is array (Positive
Engine/neo-api-vulkan.ads:1923:8    - Unknown word (Inheritance)   -- pInheritanceInfo : Ptr
Engine/neo-api-vulkan.ads:1923:92   - Unknown word (Inheritance)   -- const VkCommandBufferInheritanceInfo*
Engine/neo-api-vulkan.ads:192:21    - Unknown word (MODE)          -- VK_SAMPLER_MIPMAP_MODE_NEAREST : constant Int
Engine/neo-api-vulkan.ads:192:26    - Unknown word (NEAREST)       -- SAMPLER_MIPMAP_MODE_NEAREST : constant Int_Unsigned
Engine/neo-api-vulkan.ads:192:6     - Unknown word (SAMPLER)       -- VK_SAMPLER_MIPMAP_MODE_NEAREST
Engine/neo-api-vulkan.ads:192:71    - Unknown word (Sampler)       -- Unsigned_C := 0; -- VkSamplerMipmapMode
Engine/neo-api-vulkan.ads:1932:7    - Unknown word (aspect)        -- aspectMask : Int_Unsigned
Engine/neo-api-vulkan.ads:193:21    - Unknown word (MODE)          -- VK_SAMPLER_MIPMAP_MODE_LINEAR : constant Int
Engine/neo-api-vulkan.ads:193:26    - Unknown word (LINEAR)        -- SAMPLER_MIPMAP_MODE_LINEAR : constant Int_Unsigned
Engine/neo-api-vulkan.ads:193:6     - Unknown word (SAMPLER)       -- VK_SAMPLER_MIPMAP_MODE_LINEAR
Engine/neo-api-vulkan.ads:1954:7    - Unknown word (subresource)   -- subresourceRange : VkImageSubresourceR
Engine/neo-api-vulkan.ads:1963:82   - Unknown word (CHAR)          -- := (others => NULL_CHAR_8_C); -- char [VK_MAX
Engine/neo-api-vulkan.ads:1963:96   - Unknown word (char)          -- NULL_CHAR_8_C); -- char [VK_MAX_EXTENSION_NAME
Engine/neo-api-vulkan.ads:1964:7    - Unknown word (spec)          -- specVersion : Int_Unsigned
Engine/neo-api-vulkan.ads:196:6     - Unknown word (COLOR)         -- VK_COLOR_COMPONENT_R_BIT : constant
Engine/neo-api-vulkan.ads:197:6     - Unknown word (COLOR)         -- VK_COLOR_COMPONENT_G_BIT : constant
Engine/neo-api-vulkan.ads:1988:7    - Unknown word (wait)          -- waitSemaphoreCount : Int
Engine/neo-api-vulkan.ads:1989:8    - Unknown word (Wait)          -- pWaitSemaphores : Ptr
Engine/neo-api-vulkan.ads:198:6     - Unknown word (COLOR)         -- VK_COLOR_COMPONENT_B_BIT : constant
Engine/neo-api-vulkan.ads:1990:8    - Unknown word (Wait)          -- pWaitDstStageMask : Ptr
Engine/neo-api-vulkan.ads:199:6     - Unknown word (COLOR)         -- VK_COLOR_COMPONENT_A_BIT : constant
Engine/neo-api-vulkan.ads:19:11     - Unknown word (binding)      -- -- Custom binding to the Vulkan API: http
Engine/neo-api-vulkan.ads:2003:7    - Unknown word (aspect)        -- aspectMask : Int_Unsigned_C
Engine/neo-api-vulkan.ads:2014:7    - Unknown word (offset)        -- offset : Int_64_Unsigned
Engine/neo-api-vulkan.ads:2016:10   - Unknown word (Pitch)         -- rowPitch : Int_64_Unsigned
Engine/neo-api-vulkan.ads:2017:12   - Unknown word (Pitch)         -- arrayPitch : Int_64_Unsigned_C
Engine/neo-api-vulkan.ads:2018:12   - Unknown word (Pitch)         -- depthPitch : Int_64_Unsigned_C
Engine/neo-api-vulkan.ads:2018:7    - Unknown word (depth)         -- depthPitch : Int_64_Unsigned
Engine/neo-api-vulkan.ads:2029:32   - Unknown word (Char)          -- pApplicationName : Ptr_Char_8_C := null
Engine/neo-api-vulkan.ads:2029:68   - Unknown word (char)          -- := null; -- const char*
Engine/neo-api-vulkan.ads:202:11    - Unknown word (MODE)          -- VK_CULL_MODE_NONE : constant
Engine/neo-api-vulkan.ads:202:16    - Unknown word (NONE)          -- VK_CULL_MODE_NONE : constant
Engine/neo-api-vulkan.ads:202:6     - Unknown word (CULL)          -- VK_CULL_MODE_NONE
Engine/neo-api-vulkan.ads:202:80    - Unknown word (Cull)          -- 16#0000_0000#; -- VkCullModeFlagBits
Engine/neo-api-vulkan.ads:2031:32   - Unknown word (Char)          -- pEngineName : Ptr_Char_8_C := null
Engine/neo-api-vulkan.ads:2031:68   - Unknown word (char)          -- := null; -- const char*
Engine/neo-api-vulkan.ads:203:11    - Unknown word (MODE)          -- VK_CULL_MODE_FRONT_BIT : constant
Engine/neo-api-vulkan.ads:203:6     - Unknown word (CULL)          -- VK_CULL_MODE_FRONT_BIT
Engine/neo-api-vulkan.ads:203:80    - Unknown word (Cull)          -- 16#0000_0001#; -- VkCullModeFlagBits
Engine/neo-api-vulkan.ads:2048:101  - Unknown word (char)          -- := null; -- const char* const* -- HACK!
Engine/neo-api-vulkan.ads:2048:117  - Unknown word (HACK)          -- const char* const* -- HACK!
Engine/neo-api-vulkan.ads:2048:61   - Unknown word (Char)          -- NULL_PTR; -- Ptr_Ptr_Char_8_C :=
Engine/neo-api-vulkan.ads:204:11    - Unknown word (MODE)          -- VK_CULL_MODE_BACK_BIT : constant
Engine/neo-api-vulkan.ads:204:16    - Unknown word (BACK)          -- VK_CULL_MODE_BACK_BIT : constant
Engine/neo-api-vulkan.ads:204:6     - Unknown word (CULL)          -- VK_CULL_MODE_BACK_BIT
Engine/neo-api-vulkan.ads:204:80    - Unknown word (Cull)          -- 16#0000_0002#; -- VkCullModeFlagBits
Engine/neo-api-vulkan.ads:2050:118  - Unknown word (HACK)         -- const char* const* -- HACK!
Engine/neo-api-vulkan.ads:2050:62   - Unknown word (Char)          -- NULL_PTR; -- Ptr_Ptr_Char_8_C :=
Engine/neo-api-vulkan.ads:205:26    - Unknown word (BACK)          -- CULL_MODE_FRONT_AND_BACK : constant Int_Unsigned
Engine/neo-api-vulkan.ads:205:6     - Unknown word (CULL)          -- VK_CULL_MODE_FRONT_AND_BACK
Engine/neo-api-vulkan.ads:205:80    - Unknown word (Cull)          -- 16#0000_0003#; -- VkCullModeFlagBits
Engine/neo-api-vulkan.ads:2088:23   - Unknown word (Granularity)  -- minImageTransferGranularity : VkExtent3D     :=
Engine/neo-api-vulkan.ads:2094:16   - Unknown word (Requirements) -- type VkMemoryRequirements;
Engine/neo-api-vulkan.ads:2098:7    - Unknown word (alignment)    -- alignment : Int_64_Unsigned
Engine/neo-api-vulkan.ads:209:26    - Unknown word (DONT)          -- ATTACHMENT_STORE_OP_DONT_CARE : constant Int
Engine/neo-api-vulkan.ads:209:31    - Unknown word (CARE)          -- ATTACHMENT_STORE_OP_DONT_CARE : constant Int_Unsigned
Engine/neo-api-vulkan.ads:2112:19   - Unknown word (Infos)        -- pQueueCreateInfos : Ptr_VkDeviceQueueCrea
Engine/neo-api-vulkan.ads:213:36    - Unknown word (AFTER)         -- DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT : constant
Engine/neo-api-vulkan.ads:213:42    - Unknown word (BIND)          -- CREATE_UPDATE_AFTER_BIND_BIT : constant Int
Engine/neo-api-vulkan.ads:214:43    - Unknown word (VALVE)         -- CREATE_HOST_ONLY_BIT_VALVE : constant Int_Unsigned
Engine/neo-api-vulkan.ads:2151:7    - Unknown word (wait)         -- waitSemaphoreCount : Int
Engine/neo-api-vulkan.ads:2152:8    - Unknown word (Wait)         -- pWaitSemaphores : Ptr_Ptr
Engine/neo-api-vulkan.ads:2153:7    - Unknown word (swapchain)    -- swapchainCount : Int_Unsigned
Engine/neo-api-vulkan.ads:2154:8    - Unknown word (Swapchains)   -- pSwapchains : Ptr_Ptr
Engine/neo-api-vulkan.ads:2166:7    - Unknown word (color)        -- colorSpace : Int_Unsigned
Engine/neo-api-vulkan.ads:2168:11   - Unknown word (Vector)       -- package Vector_VkSurfaceFormatKHR is
Engine/neo-api-vulkan.ads:2168:53   - Unknown word (Vectors)      -- faceFormatKHR is new Neo.Core.Vectors (VkSurfaceFormatKHR
Engine/neo-api-vulkan.ads:2169:39   - Unknown word (Vector)       -- VkSurfaceFormatKHR is Vector_VkSurfaceFormatKHR.Unsafe
Engine/neo-api-vulkan.ads:2169:65   - Unknown word (Unsafe)       -- Vector_VkSurfaceFormatKHR.Unsafe_Array;
Engine/neo-api-vulkan.ads:2182:10   - Unknown word (Rect)         -- type VkRect2D;
Engine/neo-api-vulkan.ads:2183:14   - Unknown word (Rect)         -- type Ptr_VkRect2D is access all VkRect
Engine/neo-api-vulkan.ads:2183:37   - Unknown word (Rect)         -- VkRect2D is access all VkRect2D with Convention =
Engine/neo-api-vulkan.ads:2184:10   - Unknown word (Rect)         -- type VkRect2D is record
Engine/neo-api-vulkan.ads:2185:7    - Unknown word (offset)       -- offset : VkOffset2D := (others
Engine/neo-api-vulkan.ads:2186:7    - Unknown word (extent)       -- extent : VkExtent2D := (others
Engine/neo-api-vulkan.ads:2188:16   - Unknown word (Rect)         -- type Array_VkRect2D is array (Positive
Engine/neo-api-vulkan.ads:219:25    - Unknown word (DONT)          -- VK_ATTACHMENT_LOAD_OP_DONT_CARE : constant Int
Engine/neo-api-vulkan.ads:219:30    - Unknown word (CARE)          -- ATTACHMENT_LOAD_OP_DONT_CARE : constant Int_Unsigned
Engine/neo-api-vulkan.ads:2207:15   - Unknown word (Depth)        -- type VkClearDepthStencilValue;
Engine/neo-api-vulkan.ads:2208:19   - Unknown word (Depth)        -- type Ptr_VkClearDepthStencilValue is access
Engine/neo-api-vulkan.ads:2211:7    - Unknown word (stencil)      -- stencil : Int_Unsigned_C :=
Engine/neo-api-vulkan.ads:2220:7    - Unknown word (color)        -- color : VkClearColorValue
Engine/neo-api-vulkan.ads:222:12    - Unknown word (TILING)        -- VK_IMAGE_TILING_OPTIMAL : constant Int
Engine/neo-api-vulkan.ads:222:19    - Unknown word (OPTIMAL)       -- VK_IMAGE_TILING_OPTIMAL : constant Int_Unsigned
Engine/neo-api-vulkan.ads:222:69    - Unknown word (Tiling)        -- Unsigned_C := 0; -- VkImageTiling
Engine/neo-api-vulkan.ads:2234:13   - Unknown word (Area)         -- renderArea : VkRect2D
Engine/neo-api-vulkan.ads:223:12    - Unknown word (TILING)        -- VK_IMAGE_TILING_LINEAR : constant Int
Engine/neo-api-vulkan.ads:223:19    - Unknown word (LINEAR)        -- VK_IMAGE_TILING_LINEAR : constant Int_Unsigned
Engine/neo-api-vulkan.ads:223:69    - Unknown word (Tiling)        -- Unsigned_C := 1; -- VkImageTiling
Engine/neo-api-vulkan.ads:2240:10   - Unknown word (Specialization) -- type VkSpecializationMapEntry;
Engine/neo-api-vulkan.ads:2241:14   - Unknown word (Specialization) -- type Ptr_VkSpecializationMapEntry is access all
Engine/neo-api-vulkan.ads:2241:53   - Unknown word (Specialization) -- ationMapEntry is access all VkSpecializationMapEntry with Convention
Engine/neo-api-vulkan.ads:2242:10   - Unknown word (Specialization) -- type VkSpecializationMapEntry is record
Engine/neo-api-vulkan.ads:2244:7    - Unknown word (offset)         -- offset : Int_Unsigned_C
Engine/neo-api-vulkan.ads:2249:10   - Unknown word (Specialization) -- type VkSpecializationInfo;
Engine/neo-api-vulkan.ads:2253:11   - Unknown word (Entries)        -- pMapEntries : Ptr_VkSpecializationMapEn
Engine/neo-api-vulkan.ads:2266:7    - Unknown word (module)         -- module : Ptr
Engine/neo-api-vulkan.ads:2267:33   - Unknown word (Char)           -- : Ptr_Char_8_C := null
Engine/neo-api-vulkan.ads:226:19    - Unknown word (EXCLUSIVE)     -- VK_SHARING_MODE_EXCLUSIVE : constant Int_Unsigned
Engine/neo-api-vulkan.ads:2270:11   - Unknown word (Vector)         -- package Vector_VkPipelineShaderStageCreateIn
Engine/neo-api-vulkan.ads:2270:66   - Unknown word (Vectors)        -- ageCreateInfo is new Neo.Core.Vectors (VkPipelineShaderStageCreateI
Engine/neo-api-vulkan.ads:2271:52   - Unknown word (Vector)         -- elineShaderStageCreateInfo is Vector_VkPipelineShaderStageCreateIn
Engine/neo-api-vulkan.ads:2271:91   - Unknown word (Unsafe)         -- PipelineShaderStageCreateInfo.Unsafe_Array;
Engine/neo-api-vulkan.ads:2275:21   - Unknown word (Binding)        -- type VkVertexInputBindingDescription;
Engine/neo-api-vulkan.ads:2276:25   - Unknown word (Binding)        -- type Ptr_VkVertexInputBindingDescription is access
Engine/neo-api-vulkan.ads:2276:71   - Unknown word (Binding)        -- access all VkVertexInputBindingDescription with Convention
Engine/neo-api-vulkan.ads:2278:7    - Unknown word (binding)        -- binding : Int_Unsigned_C
Engine/neo-api-vulkan.ads:2279:7    - Unknown word (stride)         -- stride : Int_Unsigned_C
Engine/neo-api-vulkan.ads:227:19    - Unknown word (CONCURRENT)    -- VK_SHARING_MODE_CONCURRENT : constant Int_Unsigned
Engine/neo-api-vulkan.ads:2289:7    - Unknown word (binding)        -- binding : Int_Unsigned_C :
Engine/neo-api-vulkan.ads:2293:11   - Unknown word (Vector)         -- package Vector_VkVertexInputAttributeDescrip
Engine/neo-api-vulkan.ads:2293:68   - Unknown word (Vectors)        -- teDescription is new Neo.Core.Vectors (VkVertexInputAttributeDescri
Engine/neo-api-vulkan.ads:2294:95   - Unknown word (Unsafe)         -- rtexInputAttributeDescription.Unsafe_Array;
Engine/neo-api-vulkan.ads:22:40     - Unknown word (pointers)       -- ialization of global function pointers with OS specific driver
Engine/neo-api-vulkan.ads:22:6      - Unknown word (Initialization) -- -- Initialization of global function pointers
Engine/neo-api-vulkan.ads:22:66     - Unknown word (driver)         -- pointers with OS specific driver
Engine/neo-api-vulkan.ads:2309:71   - Unknown word (Vectors)        -- ateCreateInfo is new Neo.Core.Vectors (VkPipelineVertexInputStateCr
Engine/neo-api-vulkan.ads:2310:101  - Unknown word (Unsafe)         -- ineVertexInputStateCreateInfo.Unsafe_Array;
Engine/neo-api-vulkan.ads:2320:7    - Unknown word (topology)       -- topology : Int
Engine/neo-api-vulkan.ads:2321:7    - Unknown word (primitive)      -- primitiveRestartEnable : Int_Unsigned
Engine/neo-api-vulkan.ads:2340:7    - Unknown word (width)          -- width : Real_C := 0.0;
Engine/neo-api-vulkan.ads:2341:7    - Unknown word (height)         -- height : Real_C := 0.0;
Engine/neo-api-vulkan.ads:2354:8    - Unknown word (Viewports)      -- pViewports : Ptr_VkViewport
Engine/neo-api-vulkan.ads:2355:7    - Unknown word (scissor)        -- scissorCount : Int_Unsigned
Engine/neo-api-vulkan.ads:2356:8    - Unknown word (Scissors)       -- pScissors : Ptr_VkRect2D
Engine/neo-api-vulkan.ads:235:27    - Unknown word (SECONDARY)     -- COMMAND_BUFFER_LEVEL_SECONDARY : constant Int_Unsigned
Engine/neo-api-vulkan.ads:2360:18   - Unknown word (Rasterization)  -- type VkPipelineRasterizationStateCreateInfo;
Engine/neo-api-vulkan.ads:2361:22   - Unknown word (Rasterization)  -- type Ptr_VkPipelineRasterizationStateCreateInfo is access
Engine/neo-api-vulkan.ads:2361:75   - Unknown word (Rasterization)  -- access all VkPipelineRasterizationStateCreateInfo with
Engine/neo-api-vulkan.ads:2362:18   - Unknown word (Rasterization)  -- type VkPipelineRasterizationStateCreateInfo is record
Engine/neo-api-vulkan.ads:2363:78   - Unknown word (RASTERIZATION)  -- STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO;
Engine/neo-api-vulkan.ads:2366:12   - Unknown word (Clamp)          -- depthClampEnable : Int_Unsigned
Engine/neo-api-vulkan.ads:2367:17   - Unknown word (Discard)        -- rasterizerDiscardEnable : Int_Unsigned
Engine/neo-api-vulkan.ads:2367:7    - Unknown word (rasterizer)     -- rasterizerDiscardEnable : Int_Unsigned
Engine/neo-api-vulkan.ads:2369:7    - Unknown word (cull)           -- cullMode
Engine/neo-api-vulkan.ads:2371:12   - Unknown word (Bias)           -- depthBiasEnable : Int
Engine/neo-api-vulkan.ads:2372:12   - Unknown word (Bias)           -- depthBiasConstantFactor : Real
Engine/neo-api-vulkan.ads:2373:16   - Unknown word (Clamp)          -- depthBiasClamp : Real_C
Engine/neo-api-vulkan.ads:2374:16   - Unknown word (Slope)          -- depthBiasSlopeFactor : Real_C
Engine/neo-api-vulkan.ads:2379:18   - Unknown word (Multisample)    -- type VkPipelineMultisampleStateCreateInfo;
Engine/neo-api-vulkan.ads:2382:77   - Unknown word (MULTISAMPLE)    -- STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO;
Engine/neo-api-vulkan.ads:2385:7    - Unknown word (rasterization)  -- rasterizationSamples : Int_Unsigned
Engine/neo-api-vulkan.ads:2386:13   - Unknown word (Shading)        -- sampleShadingEnable : Int_Unsigned
Engine/neo-api-vulkan.ads:2387:16   - Unknown word (Shading)        -- minSampleShading : Real_C
Engine/neo-api-vulkan.ads:238:26    - Unknown word (TRANSIENT)     -- COMMAND_POOL_CREATE_TRANSIENT_BIT : constant
Engine/neo-api-vulkan.ads:2416:12   - Unknown word (Bounds)         -- depthBoundsTestEnable : Int_Unsigned
Engine/neo-api-vulkan.ads:2417:7    - Unknown word (stencil)        -- stencilTestEnable : Int
Engine/neo-api-vulkan.ads:2419:7    - Unknown word (back)           -- back : VkStencilO
Engine/neo-api-vulkan.ads:2420:15   - Unknown word (Bounds)         -- minDepthBounds : Real_C
Engine/neo-api-vulkan.ads:2421:15   - Unknown word (Bounds)         -- maxDepthBounds : Real_C
Engine/neo-api-vulkan.ads:2428:7    - Unknown word (blend)          -- blendEnable : Int
Engine/neo-api-vulkan.ads:242:15    - Unknown word (BIND)          -- VK_PIPELINE_BIND_POINT_GRAPHICS : constant
Engine/neo-api-vulkan.ads:242:26    - Unknown word (GRAPHICS)      -- PIPELINE_BIND_POINT_GRAPHICS : constant Int_Unsigned
Engine/neo-api-vulkan.ads:242:80    - Unknown word (Bind)          -- C := 0; -- VkPipelineBindPoint
Engine/neo-api-vulkan.ads:2431:7    - Unknown word (color)          -- colorBlendOp : Int
Engine/neo-api-vulkan.ads:2435:7    - Unknown word (color)          -- colorWriteMask : Int
Engine/neo-api-vulkan.ads:243:15    - Unknown word (BIND)         -- VK_PIPELINE_BIND_POINT_COMPUTE : constant
Engine/neo-api-vulkan.ads:243:80    - Unknown word (Bind)         -- C := 1; -- VkPipelineBindPoint
Engine/neo-api-vulkan.ads:2445:7    - Unknown word (logic)          -- logicOpEnable : Int_Unsigned
Engine/neo-api-vulkan.ads:2446:7    - Unknown word (logic)          -- logicOp : Int_Unsigned
Engine/neo-api-vulkan.ads:2449:12   - Unknown word (Constants)      -- blendConstants : Array_Real_32 (1
Engine/neo-api-vulkan.ads:2449:7    - Unknown word (blend)          -- blendConstants : Array_Real
Engine/neo-api-vulkan.ads:2464:10   - Unknown word (Graphics)       -- type VkGraphicsPipelineCreateInfo;
Engine/neo-api-vulkan.ads:2465:14   - Unknown word (Graphics)       -- type Ptr_VkGraphicsPipelineCreateInfo is
Engine/neo-api-vulkan.ads:2465:57   - Unknown word (Graphics)       -- ineCreateInfo is access all VkGraphicsPipelineCreateInfo with
Engine/neo-api-vulkan.ads:2466:10   - Unknown word (Graphics)       -- type VkGraphicsPipelineCreateInfo is
Engine/neo-api-vulkan.ads:246:6     - Unknown word (SUBPASS)      -- VK_SUBPASS_CONTENTS_INLINE
Engine/neo-api-vulkan.ads:246:86    - Unknown word (Subpass)      -- Unsigned_C := 0; -- VkSubpassContents
Engine/neo-api-vulkan.ads:2471:8    - Unknown word (Stages)         -- pStages : Ptr_VkPipelineS
Engine/neo-api-vulkan.ads:247:23    - Unknown word (SECONDARY)    -- VK_SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS : constant
Engine/neo-api-vulkan.ads:247:6     - Unknown word (SUBPASS)      -- VK_SUBPASS_CONTENTS_SECONDARY_COMMAND
Engine/neo-api-vulkan.ads:247:86    - Unknown word (Subpass)      -- Unsigned_C := 1; -- VkSubpassContents
Engine/neo-api-vulkan.ads:2481:7    - Unknown word (layout)         -- layout : Ptr
Engine/neo-api-vulkan.ads:2483:7    - Unknown word (subpass)        -- subpass : Int_Unsigned
Engine/neo-api-vulkan.ads:2484:19   - Unknown word (Handle)         -- basePipelineHandle : Ptr
Engine/neo-api-vulkan.ads:2497:7    - Unknown word (stencil)        -- stencilLoadOp : Int_Unsigned
Engine/neo-api-vulkan.ads:2498:7    - Unknown word (stencil)        -- stencilStoreOp : Int_Unsigned
Engine/neo-api-vulkan.ads:2499:7    - Unknown word (initial)        -- initialLayout : Int_Unsigned
Engine/neo-api-vulkan.ads:24:30     - Unknown word (Subprogram)     -- function Get_Vulkan_Subprogram (Name : Str) return
Engine/neo-api-vulkan.ads:2500:7    - Unknown word (final)          -- finalLayout : Int_Unsigned
Engine/neo-api-vulkan.ads:2510:7    - Unknown word (layout)         -- layout : Int_Unsigned_C
Engine/neo-api-vulkan.ads:2516:10   - Unknown word (Subpass)        -- type VkSubpassDescription;
Engine/neo-api-vulkan.ads:2520:15   - Unknown word (Bind)           -- pipelineBindPoint : Int_Unsigned
Engine/neo-api-vulkan.ads:2520:81   - Unknown word (Bind)           -- 0; -- VkPipelineBindPoint
Engine/neo-api-vulkan.ads:2523:7    - Unknown word (color)          -- colorAttachmentCount :
Engine/neo-api-vulkan.ads:2527:7    - Unknown word (preserve)       -- preserveAttachmentCount : Int
Engine/neo-api-vulkan.ads:2528:8    - Unknown word (Preserve)       -- pPreserveAttachments : Ptr
Engine/neo-api-vulkan.ads:2534:17   - Unknown word (Dependency)    -- type VkSubpassDependency;
Engine/neo-api-vulkan.ads:2535:21   - Unknown word (Dependency)    -- type Ptr_VkSubpassDependency is access all VkSubpassDepend
Engine/neo-api-vulkan.ads:2535:55   - Unknown word (Dependency)    -- access all VkSubpassDependency with Convention => C
Engine/neo-api-vulkan.ads:2543:7    - Unknown word (dependency)    -- dependencyFlags : Int_Unsigned
Engine/neo-api-vulkan.ads:254:17    - Unknown word (COUNTER)      -- VK_FRONT_FACE_COUNTER_CLOCKWISE : constant
Engine/neo-api-vulkan.ads:254:25    - Unknown word (CLOCKWISE)    -- VK_FRONT_FACE_COUNTER_CLOCKWISE : constant Int_Unsigned
Engine/neo-api-vulkan.ads:2558:7    - Unknown word (width)         -- width : Int_Unsigned
Engine/neo-api-vulkan.ads:2559:7    - Unknown word (height)        -- height : Int_Unsigned
Engine/neo-api-vulkan.ads:255:17    - Unknown word (CLOCKWISE)    -- VK_FRONT_FACE_CLOCKWISE : constant Int
Engine/neo-api-vulkan.ads:2572:7    - Unknown word (subpass)       -- subpassCount : Int_Unsigned
Engine/neo-api-vulkan.ads:2573:8    - Unknown word (Subpasses)     -- pSubpasses : Ptr_VkSubpassDescripti
Engine/neo-api-vulkan.ads:2574:7    - Unknown word (dependency)    -- dependencyCount : Int_Unsigned
Engine/neo-api-vulkan.ads:2584:13   - Unknown word (Tiling)        -- linearTilingFeatures : Int_Unsigned
Engine/neo-api-vulkan.ads:2584:7    - Unknown word (linear)        -- linearTilingFeatures : Int
Engine/neo-api-vulkan.ads:2585:7    - Unknown word (optimal)       -- optimalTilingFeatures : Int
Engine/neo-api-vulkan.ads:258:20    - Unknown word (TRIANGLES)    -- VK_GEOMETRY_TYPE_TRIANGLES_NV : constant Int_Unsigned
Engine/neo-api-vulkan.ads:258:6     - Unknown word (GEOMETRY)     -- VK_GEOMETRY_TYPE_TRIANGLES_NV :
Engine/neo-api-vulkan.ads:258:82    - Unknown word (Geometry)     -- 0; -- VkGeometryTypeNV
Engine/neo-api-vulkan.ads:259:20    - Unknown word (AABBS)        -- VK_GEOMETRY_TYPE_AABBS_NV : constant Int
Engine/neo-api-vulkan.ads:259:6     - Unknown word (GEOMETRY)     -- VK_GEOMETRY_TYPE_AABBS_NV :
Engine/neo-api-vulkan.ads:259:82    - Unknown word (Geometry)     -- 1; -- VkGeometryTypeNV
Engine/neo-api-vulkan.ads:260:6     - Unknown word (GEOMETRY)     -- VK_GEOMETRY_TYPE_MAX_ENUM_NV :
Engine/neo-api-vulkan.ads:260:82    - Unknown word (Geometry)     -- 16#7FFF_FFFF#; -- VkGeometryTypeNV
Engine/neo-api-vulkan.ads:2610:12   - Unknown word (Sizes)         -- pPoolSizes : Ptr_VkDescriptorPoolSize
Engine/neo-api-vulkan.ads:2619:7    - Unknown word (binding)       -- binding : Int_Unsigned
Engine/neo-api-vulkan.ads:2623:17   - Unknown word (Samplers)      -- pImmutableSamplers : Ptr_Ptr        :=
Engine/neo-api-vulkan.ads:2626:85   - Unknown word (Unsafe)        -- VkDescriptorSetLayoutBinding.Unsafe_Array;
Engine/neo-api-vulkan.ads:2636:7    - Unknown word (binding)       -- bindingCount : Int_Unsigned
Engine/neo-api-vulkan.ads:2637:8    - Unknown word (Bindings)      -- pBindings : Ptr_VkDescriptorSetLayou
Engine/neo-api-vulkan.ads:263:15    - Unknown word (OPAQUE)       -- VK_GEOMETRY_OPAQUE_BIT_NV
Engine/neo-api-vulkan.ads:263:6     - Unknown word (GEOMETRY)     -- VK_GEOMETRY_OPAQUE_BIT_NV
Engine/neo-api-vulkan.ads:263:94    - Unknown word (Geometry)     -- 16#0000_0001#; -- VkGeometryFlagBitsNV
Engine/neo-api-vulkan.ads:2648:7    - Unknown word (rang)          -- rang : Int_64_Unsigned
Engine/neo-api-vulkan.ads:264:18    - Unknown word (DUPLICATE)    -- VK_GEOMETRY_NO_DUPLICATE_ANY_HIT_INVOCATION_BIT
Engine/neo-api-vulkan.ads:264:6     - Unknown word (GEOMETRY)     -- VK_GEOMETRY_NO_DUPLICATE_ANY_HIT
Engine/neo-api-vulkan.ads:264:94    - Unknown word (Geometry)     -- 16#0000_0002#; -- VkGeometryFlagBitsNV
Engine/neo-api-vulkan.ads:2657:7    - Unknown word (sampler)       -- sampler : Ptr
Engine/neo-api-vulkan.ads:265:15    - Unknown word (FLAG)         -- VK_GEOMETRY_FLAG_BITS_MAX_ENUM_NV
Engine/neo-api-vulkan.ads:265:20    - Unknown word (BITS)         -- VK_GEOMETRY_FLAG_BITS_MAX_ENUM_NV
Engine/neo-api-vulkan.ads:2672:11   - Unknown word (Layouts)       -- pSetLayouts : Ptr_Ptr
Engine/neo-api-vulkan.ads:2685:15   - Unknown word (Element)       -- dstArrayElement : Int_Unsigned_C
Engine/neo-api-vulkan.ads:2704:15   - Unknown word (Element)       -- srcArrayElement : Int_Unsigned_C
Engine/neo-api-vulkan.ads:2707:15   - Unknown word (Element)       -- dstArrayElement : Int_Unsigned_C
Engine/neo-api-vulkan.ads:270:27    - Unknown word (SIMULTANEOUS) -- COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT : constant
Engine/neo-api-vulkan.ads:2732:11   - Unknown word (Layouts)       -- pSetLayouts : Ptr_Ptr
Engine/neo-api-vulkan.ads:273:19    - Unknown word (FILL)         -- VK_POLYGON_MODE_FILL : constant Int_Unsigned
Engine/neo-api-vulkan.ads:2762:7    - Unknown word (subresource)   -- subresourceRange : VkImageSubresourceRang
Engine/neo-api-vulkan.ads:2781:18   - Unknown word (AABBNV)        -- type VkGeometryAABBNV;
Engine/neo-api-vulkan.ads:2782:22   - Unknown word (AABBNV)        -- type Ptr_VkGeometryAABBNV is access all VkGeometryAABBN
Engine/neo-api-vulkan.ads:2782:53   - Unknown word (AABBNV)        -- access all VkGeometryAABBNV with Convention => C
Engine/neo-api-vulkan.ads:2783:18   - Unknown word (AABBNV)        -- type VkGeometryAABBNV is record
Engine/neo-api-vulkan.ads:2784:63   - Unknown word (AABB)          -- STRUCTURE_TYPE_GEOMETRY_AABB_NV; -- VkStructureType
Engine/neo-api-vulkan.ads:2785:32   - Unknown word (AABBNV)        -- pNext : Ptr_VkGeometryAABBNV := null;     -- const
Engine/neo-api-vulkan.ads:2786:7    - Unknown word (aabb)          -- aabbData : Ptr
Engine/neo-api-vulkan.ads:2787:10   - Unknown word (AABBs)         -- numAABBs : Int_Unsigned_C
Engine/neo-api-vulkan.ads:2788:7    - Unknown word (stride)        -- stride : Int_Unsigned_C
Engine/neo-api-vulkan.ads:2795:18   - Unknown word (Triangles)     -- type VkGeometryTrianglesNV;
Engine/neo-api-vulkan.ads:2796:22   - Unknown word (Triangles)     -- type Ptr_VkGeometryTrianglesNV is access all VkGeometryAAB
Engine/neo-api-vulkan.ads:2797:18   - Unknown word (Triangles)     -- type VkGeometryTrianglesNV is record
Engine/neo-api-vulkan.ads:2798:70   - Unknown word (TRIANGLES)     -- STRUCTURE_TYPE_GEOMETRY_TRIANGLES_NV; -- VkStructureType
Engine/neo-api-vulkan.ads:2799:39   - Unknown word (Triangles)     -- : Ptr_VkGeometryTrianglesNV := null;     -- const
Engine/neo-api-vulkan.ads:2803:13   - Unknown word (Stride)        -- vertexStride : Int_64_Unsigned
Engine/neo-api-vulkan.ads:2812:24   - Unknown word (Triangles)     -- type Array_VkGeometryTrianglesNV is array (Positive
Engine/neo-api-vulkan.ads:2819:7    - Unknown word (triangles)     -- triangles : VkGeometryTrianglesNV
Engine/neo-api-vulkan.ads:2820:7    - Unknown word (aabbs)         -- aabbs : VkGeometryAABBNV
Engine/neo-api-vulkan.ads:2831:7    - Unknown word (geometry)      -- geometryType : Int_Unsigned_C
Engine/neo-api-vulkan.ads:2832:7    - Unknown word (geometry)      -- geometry : VkGeometryDataNV
Engine/neo-api-vulkan.ads:283:121   - Unknown word (Acceleration) -- 0; -- VkAccelerationStructureMemoryRequirementsTyp
Engine/neo-api-vulkan.ads:283:133   - Unknown word (Structure)    -- -- VkAccelerationStructureMemoryRequirementsTypeNV
Engine/neo-api-vulkan.ads:283:142   - Unknown word (Memory)       -- VkAccelerationStructureMemoryRequirementsTypeNV
Engine/neo-api-vulkan.ads:283:148   - Unknown word (Requirements) -- VkAccelerationStructureMemoryRequirementsTypeNV
Engine/neo-api-vulkan.ads:283:19    - Unknown word (STRUCTURE)    -- VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS
Engine/neo-api-vulkan.ads:283:29    - Unknown word (MEMORY)       -- ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_OBJECT
Engine/neo-api-vulkan.ads:283:36    - Unknown word (REQUIREMENTS) -- ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_OBJECT_NV
Engine/neo-api-vulkan.ads:283:6     - Unknown word (ACCELERATION) -- VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS
Engine/neo-api-vulkan.ads:2847:7    - Unknown word (geometry)      -- geometryCount : Int_Unsigned
Engine/neo-api-vulkan.ads:2848:8    - Unknown word (Geometries)    -- pGeometries : Ptr_VkGeometryNV
Engine/neo-api-vulkan.ads:284:121   - Unknown word (Acceleration) -- 1; -- VkAccelerationStructureMemoryRequirementsTyp
Engine/neo-api-vulkan.ads:284:133   - Unknown word (Structure)    -- -- VkAccelerationStructureMemoryRequirementsTypeNV
Engine/neo-api-vulkan.ads:284:148   - Unknown word (Requirements) -- VkAccelerationStructureMemoryRequirementsTypeNV
Engine/neo-api-vulkan.ads:284:19    - Unknown word (STRUCTURE)    -- VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS
Engine/neo-api-vulkan.ads:284:29    - Unknown word (MEMORY)       -- ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_BUILD
Engine/neo-api-vulkan.ads:284:36    - Unknown word (REQUIREMENTS) -- ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_BUILD_SCRATCH_NV
Engine/neo-api-vulkan.ads:284:6     - Unknown word (ACCELERATION) -- VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS
Engine/neo-api-vulkan.ads:284:60    - Unknown word (SCRATCH)      -- REQUIREMENTS_TYPE_BUILD_SCRATCH_NV : constant Int_Unsigned
Engine/neo-api-vulkan.ads:285:121   - Unknown word (Acceleration) -- 2; -- VkAccelerationStructureMemoryRequirementsTyp
Engine/neo-api-vulkan.ads:285:133   - Unknown word (Structure)    -- -- VkAccelerationStructureMemoryRequirementsTypeNV
Engine/neo-api-vulkan.ads:285:148   - Unknown word (Requirements) -- VkAccelerationStructureMemoryRequirementsTypeNV
Engine/neo-api-vulkan.ads:285:19    - Unknown word (STRUCTURE)    -- VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS
Engine/neo-api-vulkan.ads:285:29    - Unknown word (MEMORY)       -- ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_UPDATE
Engine/neo-api-vulkan.ads:285:36    - Unknown word (REQUIREMENTS) -- ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_UPDATE_SCRATCH
Engine/neo-api-vulkan.ads:285:6     - Unknown word (ACCELERATION) -- VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS
Engine/neo-api-vulkan.ads:285:61    - Unknown word (SCRATCH)      -- REQUIREMENTS_TYPE_UPDATE_SCRATCH_NV : constant Int_Unsigned
Engine/neo-api-vulkan.ads:2860:7    - Unknown word (acceleration)  -- accelerationStructure : Ptr
Engine/neo-api-vulkan.ads:286:121   - Unknown word (Acceleration) -- 16#7FFF_FFFF#; -- VkAccelerationStructureMemoryRequirementsTyp
Engine/neo-api-vulkan.ads:286:133   - Unknown word (Structure)    -- FFFF#; -- VkAccelerationStructureMemoryRequirementsTypeNV
Engine/neo-api-vulkan.ads:286:148   - Unknown word (Requirements) -- VkAccelerationStructureMemoryRequirementsTypeNV
Engine/neo-api-vulkan.ads:286:19    - Unknown word (STRUCTURE)    -- VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS
Engine/neo-api-vulkan.ads:286:36    - Unknown word (REQUIREMENTS) -- ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_MAX_ENUM_NV
Engine/neo-api-vulkan.ads:286:6     - Unknown word (ACCELERATION) -- VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS
Engine/neo-api-vulkan.ads:2871:7    - Unknown word (compacted)     -- compactedSize : Int_64_Unsigned
Engine/neo-api-vulkan.ads:2883:7    - Unknown word (acceleration)  -- accelerationStructure : Ptr
Engine/neo-api-vulkan.ads:2893:13   - Unknown word (Tracing)       -- type VkRayTracingShaderGroupCreateInfoNV
Engine/neo-api-vulkan.ads:289:13    - Unknown word (ALLOCATION)   -- VK_SYSTEM_ALLOCATION_SCOPE_COMMAND : constant
Engine/neo-api-vulkan.ads:289:24    - Unknown word (SCOPE)        -- VK_SYSTEM_ALLOCATION_SCOPE_COMMAND : constant
Engine/neo-api-vulkan.ads:289:82    - Unknown word (Allocation)   -- Unsigned_C := 0; -- VkSystemAllocationScope
Engine/neo-api-vulkan.ads:289:92    - Unknown word (Scope)        -- - VkSystemAllocationScope
Engine/neo-api-vulkan.ads:2900:7    - Unknown word (closest)       -- closestHitShader : Int_Unsigned
Engine/neo-api-vulkan.ads:2902:7    - Unknown word (intersection)  -- intersectionShader : Int_Unsigned
Engine/neo-api-vulkan.ads:290:13    - Unknown word (ALLOCATION)   -- VK_SYSTEM_ALLOCATION_SCOPE_OBJECT : constant
Engine/neo-api-vulkan.ads:290:24    - Unknown word (SCOPE)        -- VK_SYSTEM_ALLOCATION_SCOPE_OBJECT : constant
Engine/neo-api-vulkan.ads:290:82    - Unknown word (Allocation)   -- Unsigned_C := 1; -- VkSystemAllocationScope
Engine/neo-api-vulkan.ads:290:92    - Unknown word (Scope)        -- - VkSystemAllocationScope
Engine/neo-api-vulkan.ads:2915:8    - Unknown word (Stages)        -- pStages : Ptr_VkPipelineSh
Engine/neo-api-vulkan.ads:2918:10   - Unknown word (Recursion)     -- maxRecursionDepth : Int_Unsigned
Engine/neo-api-vulkan.ads:2919:7    - Unknown word (layout)        -- layout : Ptr
Engine/neo-api-vulkan.ads:291:13    - Unknown word (ALLOCATION)   -- VK_SYSTEM_ALLOCATION_SCOPE_CACHE : constant
Engine/neo-api-vulkan.ads:291:24    - Unknown word (SCOPE)        -- VK_SYSTEM_ALLOCATION_SCOPE_CACHE : constant
Engine/neo-api-vulkan.ads:291:82    - Unknown word (Allocation)   -- Unsigned_C := 2; -- VkSystemAllocationScope
Engine/neo-api-vulkan.ads:291:92    - Unknown word (Scope)        -- - VkSystemAllocationScope
Engine/neo-api-vulkan.ads:2920:19   - Unknown word (Handle)        -- basePipelineHandle : Ptr
Engine/neo-api-vulkan.ads:292:13    - Unknown word (ALLOCATION)   -- VK_SYSTEM_ALLOCATION_SCOPE_DEVICE : constant
Engine/neo-api-vulkan.ads:292:24    - Unknown word (SCOPE)        -- VK_SYSTEM_ALLOCATION_SCOPE_DEVICE : constant
Engine/neo-api-vulkan.ads:292:92    - Unknown word (Scope)        -- - VkSystemAllocationScope
Engine/neo-api-vulkan.ads:2930:6    - Unknown word (Convert)       -- -- Convert booleans
Engine/neo-api-vulkan.ads:2931:81   - Unknown word (TRUE)          -- C is (if Val then VK_TRUE else VK_FALSE);
Engine/neo-api-vulkan.ads:2933:23   - Unknown word (texture)       -- -- Convert a OpenGL texture format to the equivalent
Engine/neo-api-vulkan.ads:2933:45   - Unknown word (equivalent)    -- texture format to the equivalent Vulkan one
Engine/neo-api-vulkan.ads:2933:6    - Unknown word (Convert)       -- -- Convert a OpenGL texture format
Engine/neo-api-vulkan.ads:2937:13   - Unknown word (bits)          -- -- 8 bits per component
Engine/neo-api-vulkan.ads:293:24    - Unknown word (SCOPE)        -- VK_SYSTEM_ALLOCATION_SCOPE_INSTANCE : constant
Engine/neo-api-vulkan.ads:293:92    - Unknown word (Scope)        -- - VkSystemAllocationScope
Engine/neo-api-vulkan.ads:2959:14   - Unknown word (bits)          -- -- 16 bits per component
Engine/neo-api-vulkan.ads:296:6     - Unknown word (BLEND)        -- VK_BLEND_OP_ADD
Engine/neo-api-vulkan.ads:296:69    - Unknown word (Blend)        -- Unsigned_C := 0; -- VkBlendOp
Engine/neo-api-vulkan.ads:297:15    - Unknown word (SUBTRACT)     -- VK_BLEND_OP_SUBTRACT : constant Int
Engine/neo-api-vulkan.ads:297:6     - Unknown word (BLEND)        -- VK_BLEND_OP_SUBTRACT
Engine/neo-api-vulkan.ads:297:69    - Unknown word (Blend)        -- Unsigned_C := 1; -- VkBlendOp
Engine/neo-api-vulkan.ads:2981:14   - Unknown word (bits)          -- -- 32 bits per component
Engine/neo-api-vulkan.ads:298:23    - Unknown word (SUBTRACT)     -- VK_BLEND_OP_REVERSE_SUBTRACT : constant Int_Unsigned
Engine/neo-api-vulkan.ads:298:6     - Unknown word (BLEND)        -- VK_BLEND_OP_REVERSE_SUBTRACT
Engine/neo-api-vulkan.ads:298:69    - Unknown word (Blend)        -- Unsigned_C := 2; -- VkBlendOp
Engine/neo-api-vulkan.ads:2995:11   - Unknown word (Packed)        -- -- Packed
Engine/neo-api-vulkan.ads:2996:73   - Unknown word (UNDEFINED)     -- => VK_FORMAT_UNDEFINED,
Engine/neo-api-vulkan.ads:2997:73   - Unknown word (UNDEFINED)     -- => VK_FORMAT_UNDEFINED,
Engine/neo-api-vulkan.ads:299:6     - Unknown word (BLEND)        -- VK_BLEND_OP_MIN
Engine/neo-api-vulkan.ads:299:69    - Unknown word (Blend)        -- Unsigned_C := 3; -- VkBlendOp
Engine/neo-api-vulkan.ads:3001:73   - Unknown word (UNDEFINED)     -- => VK_FORMAT_UNDEFINED,
Engine/neo-api-vulkan.ads:3008:83   - Unknown word (UFLOAT)        -- VK_FORMAT_B10G11R11_UFLOAT_PACK32,
Engine/neo-api-vulkan.ads:3009:82   - Unknown word (UFLOAT)        -- VK_FORMAT_E5B9G9R9_UFLOAT_PACK32,
Engine/neo-api-vulkan.ads:300:6     - Unknown word (BLEND)        -- VK_BLEND_OP_MAX
Engine/neo-api-vulkan.ads:3020:37   - Unknown word (LATC)          -- COMPRESSED_LUMINANCE_LATC1_EXT =
Engine/neo-api-vulkan.ads:3024:31   - Unknown word (RGTC)          -- when GL_COMPRESSED_RED_RGTC1
Engine/neo-api-vulkan.ads:3028:31   - Unknown word (BPTC)          -- when GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT
Engine/neo-api-vulkan.ads:3036:32   - Unknown word (PUNCHTHROUGH)  -- when GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 => VK
Engine/neo-api-vulkan.ads:3039:33   - Unknown word (PUNCHTHROUGH)  -- GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 => VK
Engine/neo-api-vulkan.ads:303:12    - Unknown word (GRAPHICS)     -- VK_QUEUE_GRAPHICS_BIT : constant
Engine/neo-api-vulkan.ads:306:12    - Unknown word (SPARSE)       -- VK_QUEUE_SPARSE_BINDING_BIT : constant
Engine/neo-api-vulkan.ads:306:19    - Unknown word (BINDING)      -- VK_QUEUE_SPARSE_BINDING_BIT : constant Int_Unsigned
Engine/neo-api-vulkan.ads:309:10    - Unknown word (TRACING)      -- VK_RAY_TRACING_SHADER_GROUP_TYPE_GENERAL
Engine/neo-api-vulkan.ads:309:112   - Unknown word (Tracing)      -- -- VkRayTracingShaderGroupTypeNV
Engine/neo-api-vulkan.ads:309:119   - Unknown word (Shader)       -- -- VkRayTracingShaderGroupTypeNV
Engine/neo-api-vulkan.ads:309:18    - Unknown word (SHADER)       -- VK_RAY_TRACING_SHADER_GROUP_TYPE_GENERAL_NV
Engine/neo-api-vulkan.ads:310:10    - Unknown word (TRACING)      -- VK_RAY_TRACING_SHADER_GROUP_TYPE_TRIANGLES
Engine/neo-api-vulkan.ads:310:112   - Unknown word (Tracing)      -- -- VkRayTracingShaderGroupTypeNV
Engine/neo-api-vulkan.ads:310:119   - Unknown word (Shader)       -- -- VkRayTracingShaderGroupTypeNV
Engine/neo-api-vulkan.ads:310:18    - Unknown word (SHADER)       -- VK_RAY_TRACING_SHADER_GROUP_TYPE_TRIANGLES
Engine/neo-api-vulkan.ads:310:36    - Unknown word (TRIANGLES)    -- TRACING_SHADER_GROUP_TYPE_TRIANGLES_HIT_GROUP_NV : constant
Engine/neo-api-vulkan.ads:3112:25   - Unknown word (EXPLICIT)      -- when GL_ATC_RGBA_EXPLICIT_ALPHA_AMD
Engine/neo-api-vulkan.ads:3113:25   - Unknown word (INTERPOLATED)  -- when GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD
Engine/neo-api-vulkan.ads:3115:11   - Unknown word (Palletized)    -- -- Palletized
Engine/neo-api-vulkan.ads:311:10    - Unknown word (TRACING)      -- VK_RAY_TRACING_SHADER_GROUP_TYPE_PROCEDURAL
Engine/neo-api-vulkan.ads:311:112   - Unknown word (Tracing)      -- -- VkRayTracingShaderGroupTypeNV
Engine/neo-api-vulkan.ads:311:119   - Unknown word (Shader)       -- -- VkRayTracingShaderGroupTypeNV
Engine/neo-api-vulkan.ads:311:18    - Unknown word (SHADER)       -- VK_RAY_TRACING_SHADER_GROUP_TYPE_PROCEDURAL
Engine/neo-api-vulkan.ads:311:36    - Unknown word (PROCEDURAL)   -- TRACING_SHADER_GROUP_TYPE_PROCEDURAL_HIT_GROUP_NV : constant
Engine/neo-api-vulkan.ads:3127:17   - Unknown word (stencil)      -- -- Depth/stencil
Engine/neo-api-vulkan.ads:312:10    - Unknown word (TRACING)      -- VK_RAY_TRACING_SHADER_GROUP_TYPE_MAX
Engine/neo-api-vulkan.ads:312:112   - Unknown word (Tracing)      -- 7FFF_FFFF#; -- VkRayTracingShaderGroupTypeNV
Engine/neo-api-vulkan.ads:312:18    - Unknown word (SHADER)       -- VK_RAY_TRACING_SHADER_GROUP_TYPE_MAX_ENUM
Engine/neo-api-vulkan.ads:3141:11   - Unknown word (Anything)     -- -- Anything else is undefined
Engine/neo-api-vulkan.ads:3141:28   - Unknown word (undefined)    -- -- Anything else is undefined
Engine/neo-api-vulkan.ads:3144:6    - Unknown word (Assert)       -- -- Assert VK_SUCCESS
Engine/neo-api-vulkan.ads:3145:15   - Unknown word (Assert)       -- procedure vkAssert (Result : Int_Unsigned
Engine/neo-api-vulkan.ads:3159:65   - Unknown word (Allocator)    -- pAllocator : Ptr_VkAllocatio
Engine/neo-api-vulkan.ads:315:22    - Unknown word (OPAQUE)       -- VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR : constant
Engine/neo-api-vulkan.ads:315:6     - Unknown word (COMPOSITE)    -- VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR
Engine/neo-api-vulkan.ads:315:83    - Unknown word (Composite)    -- Unsigned_C := 1; -- VkCompositeAlphaFlagBitsKHR
Engine/neo-api-vulkan.ads:3168:66   - Unknown word (acceleration) -- accelerationStructure : Ptr;
Engine/neo-api-vulkan.ads:3169:67   - Unknown word (Allocator)    -- pAllocator : Ptr_VkAllocation
Engine/neo-api-vulkan.ads:316:26    - Unknown word (MULTIPLIED)   -- COMPOSITE_ALPHA_PRE_MULTIPLIED_BIT_KHR : constant
Engine/neo-api-vulkan.ads:316:6     - Unknown word (COMPOSITE)    -- VK_COMPOSITE_ALPHA_PRE_MULTIPLIED
Engine/neo-api-vulkan.ads:316:83    - Unknown word (Composite)    -- Unsigned_C := 2; -- VkCompositeAlphaFlagBitsKHR
Engine/neo-api-vulkan.ads:3176:68   - Unknown word (bind)         -- bindInfoCount : Int_Unsigned
Engine/neo-api-vulkan.ads:3177:73   - Unknown word (Infos)        -- pBindInfos : Ptr_VkBindAccelerationSt
Engine/neo-api-vulkan.ads:317:27    - Unknown word (MULTIPLIED)   -- COMPOSITE_ALPHA_POST_MULTIPLIED_BIT_KHR : constant Int
Engine/neo-api-vulkan.ads:317:6     - Unknown word (COMPOSITE)    -- VK_COMPOSITE_ALPHA_POST_MULTIPLIED
Engine/neo-api-vulkan.ads:317:83    - Unknown word (Composite)    -- Unsigned_C := 4; -- VkCompositeAlphaFlagBitsKHR
Engine/neo-api-vulkan.ads:3184:38   - Unknown word (Handle)       -- vkGetAccelerationStructureHandleNV is access function
Engine/neo-api-vulkan.ads:3185:67   - Unknown word (acceleration) -- accelerationStructure : Ptr;
Engine/neo-api-vulkan.ads:318:22    - Unknown word (INHERIT)      -- VK_COMPOSITE_ALPHA_INHERIT_BIT_KHR : constant
Engine/neo-api-vulkan.ads:318:6     - Unknown word (COMPOSITE)    -- VK_COMPOSITE_ALPHA_INHERIT_BIT_KHR
Engine/neo-api-vulkan.ads:318:83    - Unknown word (Composite)    -- Unsigned_C := 8; -- VkCompositeAlphaFlagBitsKHR
Engine/neo-api-vulkan.ads:3190:118  - Unknown word (Handle)       -- vkGetAccelerationStructureHandleNV);
Engine/neo-api-vulkan.ads:3190:45   - Unknown word (Handle)       -- vkGetAccelerationStructureHandleNV is new Unchecked_Conversion
Engine/neo-api-vulkan.ads:3201:67   - Unknown word (scratch)      -- scratch : Ptr;
Engine/neo-api-vulkan.ads:3202:67   - Unknown word (scratch)      -- scratchOffset : Int_64_Unsigned
Engine/neo-api-vulkan.ads:3211:69   - Unknown word (Infos)        -- pCreateInfos : Ptr_VkRayTracingPipeline
Engine/neo-api-vulkan.ads:3212:63   - Unknown word (Allocator)    -- pAllocator : Ptr_VkAllocationCallba
Engine/neo-api-vulkan.ads:321:12    - Unknown word (ASPECT)       -- VK_IMAGE_ASPECT_COLOR_BIT : constant
Engine/neo-api-vulkan.ads:321:86    - Unknown word (Aspect)       -- 00_0001#; -- VkImageAspectFlagBits
Engine/neo-api-vulkan.ads:3220:38   - Unknown word (Handles)      -- vkGetRayTracingShaderGroupHandlesNV is access function
Engine/neo-api-vulkan.ads:3228:119  - Unknown word (Handles)      -- vkGetRayTracingShaderGroupHandlesNV);
Engine/neo-api-vulkan.ads:3228:45   - Unknown word (Handles)      -- vkGetRayTracingShaderGroupHandlesNV is new Unchecked_Conversion
Engine/neo-api-vulkan.ads:3229:29   - Unknown word (Handles)      -- vkGetRayTracingShaderGroupHandlesNV : Ptr_vkGetRayTracingShader
Engine/neo-api-vulkan.ads:3229:71   - Unknown word (Handles)      -- vkGetRayTracingShaderGroupHandlesNV := null;
Engine/neo-api-vulkan.ads:322:12    - Unknown word (ASPECT)       -- VK_IMAGE_ASPECT_DEPTH_BIT : constant
Engine/neo-api-vulkan.ads:322:19    - Unknown word (DEPTH)        -- VK_IMAGE_ASPECT_DEPTH_BIT : constant Int
Engine/neo-api-vulkan.ads:322:86    - Unknown word (Aspect)       -- 00_0002#; -- VkImageAspectFlagBits
Engine/neo-api-vulkan.ads:3232:22   - Unknown word (Rays)         -- type Ptr_vkCmdTraceRaysNV is access procedure
Engine/neo-api-vulkan.ads:3233:50   - Unknown word (raygen)       -- raygenShaderBindingTableBuffer
Engine/neo-api-vulkan.ads:3234:50   - Unknown word (raygen)       -- raygenShaderBindingOffset
Engine/neo-api-vulkan.ads:3235:50   - Unknown word (miss)         -- missShaderBindingTableBuffer
Engine/neo-api-vulkan.ads:3236:50   - Unknown word (miss)         -- missShaderBindingOffset
Engine/neo-api-vulkan.ads:3237:50   - Unknown word (miss)         -- missShaderBindingStride
Engine/neo-api-vulkan.ads:3237:67   - Unknown word (Stride)       -- missShaderBindingStride : Int_64_Unsigned
Engine/neo-api-vulkan.ads:323:12    - Unknown word (ASPECT)       -- VK_IMAGE_ASPECT_STENCIL_BIT : constant
Engine/neo-api-vulkan.ads:323:19    - Unknown word (STENCIL)      -- VK_IMAGE_ASPECT_STENCIL_BIT : constant Int
Engine/neo-api-vulkan.ads:323:86    - Unknown word (Aspect)       -- 00_0004#; -- VkImageAspectFlagBits
Engine/neo-api-vulkan.ads:3240:66   - Unknown word (Stride)       -- hitShaderBindingStride : Int_64_Unsigned
Engine/neo-api-vulkan.ads:3241:50   - Unknown word (callable)     -- callableShaderBindingTableBuffer
Engine/neo-api-vulkan.ads:3242:50   - Unknown word (callable)     -- callableShaderBindingOffset
Engine/neo-api-vulkan.ads:3243:50   - Unknown word (callable)     -- callableShaderBindingStride
Engine/neo-api-vulkan.ads:3243:71   - Unknown word (Stride)       -- callableShaderBindingStride : Int_64_Unsigned
Engine/neo-api-vulkan.ads:3244:50   - Unknown word (width)        -- width
Engine/neo-api-vulkan.ads:3245:50   - Unknown word (height)       -- height
Engine/neo-api-vulkan.ads:3248:29   - Unknown word (Rays)         -- function To_Ptr_vkCmdTraceRaysNV is new Unchecked_Conversion
Engine/neo-api-vulkan.ads:3248:84   - Unknown word (Rays)         -- (Ptr, Ptr_vkCmdTraceRaysNV);
Engine/neo-api-vulkan.ads:3249:13   - Unknown word (Rays)         -- vkCmdTraceRaysNV : Ptr_vkCmdTraceRaysNV
Engine/neo-api-vulkan.ads:3249:36   - Unknown word (Rays)         -- mdTraceRaysNV : Ptr_vkCmdTraceRaysNV := null;
Engine/neo-api-vulkan.ads:324:12    - Unknown word (ASPECT)       -- VK_IMAGE_ASPECT_METADATA_BIT : constant
Engine/neo-api-vulkan.ads:3262:73   - Unknown word (physical)     -- is access function (physicalDevice : Ptr
Engine/neo-api-vulkan.ads:3265:73   - Unknown word (tiling)       -- tiling : Int
Engine/neo-api-vulkan.ads:3276:53   - Unknown word (surface)      -- surface : Ptr;
Engine/neo-api-vulkan.ads:3277:54   - Unknown word (Allocator)    -- pAllocator : Ptr_VkAllocationCallbacks
Engine/neo-api-vulkan.ads:327:19    - Unknown word (IMMEDIATE)    -- VK_PRESENT_MODE_IMMEDIATE_KHR : constant Int
Engine/neo-api-vulkan.ads:327:6     - Unknown word (PRESENT)      -- VK_PRESENT_MODE_IMMEDIATE_KHR
Engine/neo-api-vulkan.ads:327:73    - Unknown word (Present)      -- Unsigned_C := 0; -- VkPresentModeKHR
Engine/neo-api-vulkan.ads:3283:14   - Unknown word (Flush)        -- type Ptr_vkFlushMappedMemoryRanges is
Engine/neo-api-vulkan.ads:3288:21   - Unknown word (Flush)        -- function To_Ptr_vkFlushMappedMemoryRanges is
Engine/neo-api-vulkan.ads:3288:85   - Unknown word (Flush)        -- Conversion (Ptr, Ptr_vkFlushMappedMemoryRanges);
Engine/neo-api-vulkan.ads:3289:37   - Unknown word (Flush)        -- ushMappedMemoryRanges : Ptr_vkFlushMappedMemoryRanges :
Engine/neo-api-vulkan.ads:3289:5    - Unknown word (Flush)        -- vkFlushMappedMemoryRanges :
Engine/neo-api-vulkan.ads:328:6     - Unknown word (PRESENT)      -- VK_PRESENT_MODE_MAILBOX_KHR
Engine/neo-api-vulkan.ads:328:73    - Unknown word (Present)      -- Unsigned_C := 1; -- VkPresentModeKHR
Engine/neo-api-vulkan.ads:3294:49   - Unknown word (Allocator)    -- pAllocator : Ptr_VkAllocationCallbacks
Engine/neo-api-vulkan.ads:329:19    - Unknown word (FIFO)         -- VK_PRESENT_MODE_FIFO_KHR : constant
Engine/neo-api-vulkan.ads:329:6     - Unknown word (PRESENT)      -- VK_PRESENT_MODE_FIFO_KHR
Engine/neo-api-vulkan.ads:329:73    - Unknown word (Present)      -- Unsigned_C := 2; -- VkPresentModeKHR
Engine/neo-api-vulkan.ads:330:19    - Unknown word (FIFO)         -- VK_PRESENT_MODE_FIFO_RELAXED_KHR : constant
Engine/neo-api-vulkan.ads:330:24    - Unknown word (RELAXED)      -- VK_PRESENT_MODE_FIFO_RELAXED_KHR : constant Int_Unsigned
Engine/neo-api-vulkan.ads:330:6     - Unknown word (PRESENT)      -- VK_PRESENT_MODE_FIFO_RELAXED_KHR
Engine/neo-api-vulkan.ads:330:73    - Unknown word (Present)      -- Unsigned_C := 3; -- VkPresentModeKHR
Engine/neo-api-vulkan.ads:3319:50   - Unknown word (sampler)      -- sampler : Ptr;
Engine/neo-api-vulkan.ads:335:19    - Unknown word (UNIFORM)      -- VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT : constant
Engine/neo-api-vulkan.ads:335:27    - Unknown word (TEXEL)        -- BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT : constant
Engine/neo-api-vulkan.ads:336:27    - Unknown word (TEXEL)        -- BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT : constant
Engine/neo-api-vulkan.ads:337:19    - Unknown word (UNIFORM)      -- VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT : constant
Engine/neo-api-vulkan.ads:33:50     - Unknown word (Unsigned)       -- Int_Unsigned_C
Engine/neo-api-vulkan.ads:341:19    - Unknown word (INDIRECT)     -- VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT : constant
Engine/neo-api-vulkan.ads:344:19    - Unknown word (SPARSE)      -- VK_IMAGE_CREATE_SPARSE_BINDING_BIT : constant
Engine/neo-api-vulkan.ads:344:26    - Unknown word (BINDING)     -- IMAGE_CREATE_SPARSE_BINDING_BIT : constant Int
Engine/neo-api-vulkan.ads:345:19    - Unknown word (SPARSE)      -- VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT : constant
Engine/neo-api-vulkan.ads:345:26    - Unknown word (RESIDENCY)   -- IMAGE_CREATE_SPARSE_RESIDENCY_BIT : constant Int_Unsigned
Engine/neo-api-vulkan.ads:346:19    - Unknown word (SPARSE)      -- VK_IMAGE_CREATE_SPARSE_ALIASED_BIT : constant
Engine/neo-api-vulkan.ads:347:19    - Unknown word (MUTABLE)     -- VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT : constant
Engine/neo-api-vulkan.ads:3492:61   - Unknown word (physical)     -- is access procedure (physicalDevice : Ptr;
Engine/neo-api-vulkan.ads:34:53     - Unknown word (Unsigned)       -- Int_64_Unsigned_C
Engine/neo-api-vulkan.ads:3509:63   - Unknown word (physical)     -- is access procedure (physicalDevice : Ptr;
Engine/neo-api-vulkan.ads:3516:69   - Unknown word (physical)     -- is access procedure (physicalDevice : Ptr;
Engine/neo-api-vulkan.ads:3549:14   - Unknown word (Enumerate)    -- type Ptr_vkEnumeratePhysicalDevices is access
Engine/neo-api-vulkan.ads:3554:21   - Unknown word (Enumerate)    -- function To_Ptr_vkEnumeratePhysicalDevices is new
Engine/neo-api-vulkan.ads:3554:86   - Unknown word (Enumerate)    -- Conversion (Ptr, Ptr_vkEnumeratePhysicalDevices);
Engine/neo-api-vulkan.ads:3555:38   - Unknown word (Enumerate)    -- meratePhysicalDevices : Ptr_vkEnumeratePhysicalDevices := null
Engine/neo-api-vulkan.ads:3555:5    - Unknown word (Enumerate)    -- vkEnumeratePhysicalDevices : Ptr
Engine/neo-api-vulkan.ads:3588:38   - Unknown word (Formats)      -- vkGetPhysicalDeviceSurfaceFormatsKHR is access function
Engine/neo-api-vulkan.ads:3591:77   - Unknown word (Formats)      -- pSurfaceFormats : Ptr_VkSurfaceFormatKHR
Engine/neo-api-vulkan.ads:3594:120  - Unknown word (Formats)      -- vkGetPhysicalDeviceSurfaceFormatsKHR);
Engine/neo-api-vulkan.ads:3594:45   - Unknown word (Formats)      -- vkGetPhysicalDeviceSurfaceFormatsKHR is new Unchecked
Engine/neo-api-vulkan.ads:35:53     - Unknown word (Unsigned)       -- Int_64_Unsigned_C
Engine/neo-api-vulkan.ads:3607:45   - Unknown word (Modes)        -- etPhysicalDeviceSurfacePresentModesKHR is access function
Engine/neo-api-vulkan.ads:360:6     - Unknown word (BORDER)      -- VK_BORDER_COLOR_FLOAT_TRANSPARENT
Engine/neo-api-vulkan.ads:360:80    - Unknown word (Border)      -- Unsigned_C := 0; -- VkBorderColor
Engine/neo-api-vulkan.ads:3610:82   - Unknown word (Modes)        -- pPresentModes : Ptr_Array_Int
Engine/neo-api-vulkan.ads:3613:132  - Unknown word (Modes)        -- etPhysicalDeviceSurfacePresentModesKHR);
Engine/neo-api-vulkan.ads:3613:52   - Unknown word (Modes)        -- etPhysicalDeviceSurfacePresentModesKHR is new Unchecked
Engine/neo-api-vulkan.ads:3614:36   - Unknown word (Modes)        -- etPhysicalDeviceSurfacePresentModesKHR : Ptr_vkGetPhysicalDeviceS
Engine/neo-api-vulkan.ads:361:6     - Unknown word (BORDER)      -- VK_BORDER_COLOR_INT_TRANSPARENT
Engine/neo-api-vulkan.ads:361:80    - Unknown word (Border)      -- Unsigned_C := 1; -- VkBorderColor
Engine/neo-api-vulkan.ads:3628:56   - Unknown word (swapchain)    -- swapchain : Ptr;
Engine/neo-api-vulkan.ads:362:25    - Unknown word (OPAQUE)      -- VK_BORDER_COLOR_FLOAT_OPAQUE_BLACK : constant
Engine/neo-api-vulkan.ads:362:6     - Unknown word (BORDER)      -- VK_BORDER_COLOR_FLOAT_OPAQUE_BLACK
Engine/neo-api-vulkan.ads:362:80    - Unknown word (Border)      -- Unsigned_C := 2; -- VkBorderColor
Engine/neo-api-vulkan.ads:363:23    - Unknown word (OPAQUE)      -- VK_BORDER_COLOR_INT_OPAQUE_BLACK : constant
Engine/neo-api-vulkan.ads:363:6     - Unknown word (BORDER)      -- VK_BORDER_COLOR_INT_OPAQUE_BLACK
Engine/neo-api-vulkan.ads:363:80    - Unknown word (Border)      -- Unsigned_C := 3; -- VkBorderColor
Engine/neo-api-vulkan.ads:364:25    - Unknown word (OPAQUE)      -- VK_BORDER_COLOR_FLOAT_OPAQUE_WHITE : constant
Engine/neo-api-vulkan.ads:364:32    - Unknown word (WHITE)       -- BORDER_COLOR_FLOAT_OPAQUE_WHITE : constant Int
Engine/neo-api-vulkan.ads:364:6     - Unknown word (BORDER)      -- VK_BORDER_COLOR_FLOAT_OPAQUE_WHITE
Engine/neo-api-vulkan.ads:3657:54   - Unknown word (dependency)   -- dependencyFlags : Int
Engine/neo-api-vulkan.ads:3659:61   - Unknown word (Barriers)     -- pMemoryBarriers : Ptr_VkMemoryBarrie
Engine/neo-api-vulkan.ads:365:30    - Unknown word (WHITE)       -- BORDER_COLOR_INT_OPAQUE_WHITE : constant Int
Engine/neo-api-vulkan.ads:3661:67   - Unknown word (Barriers)     -- pBufferMemoryBarriers : Ptr_VkBufferMemoryBarrie
Engine/neo-api-vulkan.ads:3663:66   - Unknown word (Barriers)     -- pImageMemoryBarriers : Ptr_VkImageMemoryBarrie
Engine/neo-api-vulkan.ads:3678:47   - Unknown word (Submits)      -- pSubmits : Ptr_VkSubmitInfo
Engine/neo-api-vulkan.ads:3679:46   - Unknown word (fence)        -- fence : Ptr)
Engine/neo-api-vulkan.ads:3686:19   - Unknown word (Wait)         -- type Ptr_vkQueueWaitIdle is access function
Engine/neo-api-vulkan.ads:3686:23   - Unknown word (Idle)         -- type Ptr_vkQueueWaitIdle is access function
Engine/neo-api-vulkan.ads:3689:26   - Unknown word (Wait)         -- function To_Ptr_vkQueueWaitIdle is new Unchecked
Engine/neo-api-vulkan.ads:3689:30   - Unknown word (Idle)         -- function To_Ptr_vkQueueWaitIdle is new Unchecked_Conversion
Engine/neo-api-vulkan.ads:3689:84   - Unknown word (Idle)         -- Ptr, Ptr_vkQueueWaitIdle);
Engine/neo-api-vulkan.ads:368:22    - Unknown word (SAMPLER)     -- VK_DESCRIPTOR_TYPE_SAMPLER : constant
Engine/neo-api-vulkan.ads:3690:14   - Unknown word (Idle)         -- vkQueueWaitIdle : Ptr_vkQueueWaitIdle
Engine/neo-api-vulkan.ads:3690:36   - Unknown word (Idle)         -- ueueWaitIdle : Ptr_vkQueueWaitIdle := null;
Engine/neo-api-vulkan.ads:369:22    - Unknown word (COMBINED)    -- VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER : constant
Engine/neo-api-vulkan.ads:369:37    - Unknown word (SAMPLER)     -- TYPE_COMBINED_IMAGE_SAMPLER : constant Int_Unsigned
Engine/neo-api-vulkan.ads:36:50     - Unknown word (Unsigned)       -- Int_Unsigned_C
Engine/neo-api-vulkan.ads:372:22    - Unknown word (UNIFORM)     -- VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER : constant
Engine/neo-api-vulkan.ads:372:30    - Unknown word (TEXEL)       -- DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER : constant
Engine/neo-api-vulkan.ads:3735:55   - Unknown word (swapchain)    -- swapchain : Ptr;
Engine/neo-api-vulkan.ads:373:30    - Unknown word (TEXEL)       -- DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER : constant
Engine/neo-api-vulkan.ads:374:22    - Unknown word (UNIFORM)     -- VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER : constant
Engine/neo-api-vulkan.ads:3756:14   - Unknown word (Acquire)      -- type Ptr_vkAcquireNextImageKHR is access
Engine/neo-api-vulkan.ads:3758:54   - Unknown word (timeout)      -- timeout : Int_64_Unsigned
Engine/neo-api-vulkan.ads:3760:54   - Unknown word (fence)        -- fence : Ptr;
Engine/neo-api-vulkan.ads:3764:21   - Unknown word (Acquire)      -- function To_Ptr_vkAcquireNextImageKHR is new Unchecked
Engine/neo-api-vulkan.ads:3764:81   - Unknown word (Acquire)      -- Conversion (Ptr, Ptr_vkAcquireNextImageKHR);
Engine/neo-api-vulkan.ads:3765:33   - Unknown word (Acquire)      -- vkAcquireNextImageKHR : Ptr_vkAcquireNextImageKHR := null
Engine/neo-api-vulkan.ads:3765:5    - Unknown word (Acquire)      -- vkAcquireNextImageKHR : Ptr_vkAcquireNe
Engine/neo-api-vulkan.ads:376:22    - Unknown word (UNIFORM)     -- VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC : constant
Engine/neo-api-vulkan.ads:3776:21   - Unknown word (Fences)       -- type Ptr_vkWaitForFences is access function
Engine/neo-api-vulkan.ads:3777:48   - Unknown word (fence)        -- fenceCount : Int_Unsigned
Engine/neo-api-vulkan.ads:3778:49   - Unknown word (Fences)       -- pFences : Ptr_Ptr;
Engine/neo-api-vulkan.ads:3779:48   - Unknown word (wait)         -- waitAll : Int_Unsigned
Engine/neo-api-vulkan.ads:3780:48   - Unknown word (timeout)      -- timeout : Int_64_Unsigned
Engine/neo-api-vulkan.ads:3783:28   - Unknown word (Fences)       -- function To_Ptr_vkWaitForFences is new Unchecked_Conversion
Engine/neo-api-vulkan.ads:3783:82   - Unknown word (Fences)       -- Conversion (Ptr, Ptr_vkWaitForFences);
Engine/neo-api-vulkan.ads:3784:12   - Unknown word (Fences)      -- vkWaitForFences : Ptr_vkWaitForFences
Engine/neo-api-vulkan.ads:3788:46   - Unknown word (fence)       -- fenceCount : Int_Unsigned
Engine/neo-api-vulkan.ads:3790:80   - Unknown word (Resul)       -- Unsigned_C -- VkResul
Engine/neo-api-vulkan.ads:3797:49   - Unknown word (fence)       -- fence : Ptr)         -- VkFence
Engine/neo-api-vulkan.ads:37:50     - Unknown word (Unsigned)       -- Int_Unsigned_C
Engine/neo-api-vulkan.ads:381:12    - Unknown word (KHRONOS)     -- VK_LAYER_KHRONOS_VALIDATION
Engine/neo-api-vulkan.ads:381:73    - Unknown word (KHRONOS)     -- Str_8_C := "VK_LAYER_KHRONOS_validation";
Engine/neo-api-vulkan.ads:3822:17   - Unknown word (Draw)        -- type Ptr_vkCmdDraw is access procedure
Engine/neo-api-vulkan.ads:382:12    - Unknown word (LUNARG)      -- VK_LAYER_LUNARG_IMAGE
Engine/neo-api-vulkan.ads:382:73    - Unknown word (LUNARG)      -- Str_8_C := "VK_LAYER_LUNARG_image";
Engine/neo-api-vulkan.ads:3838:21   - Unknown word (Indexed)     -- type Ptr_vkCmdDrawIndexed is access procedure
Engine/neo-api-vulkan.ads:383:12    - Unknown word (LUNARG)      -- VK_LAYER_LUNARG_OBJECT_TRACKER
Engine/neo-api-vulkan.ads:383:73    - Unknown word (LUNARG)      -- Str_8_C := "VK_LAYER_LUNARG_object_tracker";
Engine/neo-api-vulkan.ads:3845:28   - Unknown word (Indexed)     -- function To_Ptr_vkCmdDrawIndexed is new Unchecked_Conversion
Engine/neo-api-vulkan.ads:3845:82   - Unknown word (Indexed)     -- Conversion(Ptr, Ptr_vkCmdDrawIndexed);
Engine/neo-api-vulkan.ads:3846:12   - Unknown word (Indexed)     -- vkCmdDrawIndexed : Ptr_vkCmdDrawIndexed
Engine/neo-api-vulkan.ads:384:12    - Unknown word (LUNARG)      -- VK_LAYER_LUNARG_PARAMETER_VALIDATION
Engine/neo-api-vulkan.ads:3851:57   - Unknown word (layout)      -- layout : Ptr;
Engine/neo-api-vulkan.ads:3856:65   - Unknown word (Offsets)     -- pDynamicOffsets : Ptr_Int_Unsigned
Engine/neo-api-vulkan.ads:385:23    - Unknown word (DUMP)        -- VK_LAYER_LUNARG_API_DUMP_EXTENSION : aliased
Engine/neo-api-vulkan.ads:385:84    - Unknown word (dump)        -- VK_LAYER_LUNARG_api_dump";
Engine/neo-api-vulkan.ads:3875:57   - Unknown word (Offsets)     -- pOffsets : Ptr)
Engine/neo-api-vulkan.ads:388:19    - Unknown word (SWAPCHAIN)   -- VK_LAYER_LUNARG_SWAPCHAIN : aliased
Engine/neo-api-vulkan.ads:388:80    - Unknown word (swapchain)   -- := "VK_LAYER_LUNARG_swapchain";
Engine/neo-api-vulkan.ads:392:10    - Unknown word (SWAPCHAIN)   -- VK_KHR_SWAPCHAIN_EXTENSION
Engine/neo-api-vulkan.ads:392:71    - Unknown word (swapchain)   -- aliased Str_8_C := "VK_KHR_swapchain";
Engine/neo-api-vulkan.ads:393:10    - Unknown word (SURFACE)     -- VK_KHR_SURFACE_EXTENSION
Engine/neo-api-vulkan.ads:393:71    - Unknown word (surface)     -- aliased Str_8_C := "VK_KHR_surface";
Engine/neo-api-vulkan.ads:394:16    - Unknown word (SURFACE)     -- VK_KHR_WIN32_SURFACE_EXTENSION :
Engine/neo-api-vulkan.ads:394:77    - Unknown word (surface)     -- _C := "VK_KHR_win32_surface";
Engine/neo-api-vulkan.ads:3984:65   - Unknown word (Infos)       -- pCreateInfos : Ptr_VkGraphicsPipelineCr
Engine/neo-api-vulkan.ads:398:10    - Unknown word (BIND)        -- VK_KHR_BIND_MEMORY2
Engine/neo-api-vulkan.ads:398:71    - Unknown word (bind)        -- aliased Str_8_C := "VK_KHR_bind_memory2";
Engine/neo-api-vulkan.ads:398:76    - Unknown word (memory)      -- 8_C := "VK_KHR_bind_memory2";
Engine/neo-api-vulkan.ads:39:24     - Unknown word (Flag)           -- - VkSurfaceTransformFlagBitsKHR Int
Engine/neo-api-vulkan.ads:39:28     - Unknown word (Bits)           -- VkSurfaceTransformFlagBitsKHR Int_Unsigned
Engine/neo-api-vulkan.ads:39:8      - Unknown word (Surface)        -- -- VkSurfaceTransformFlagBitsKHR
Engine/neo-api-vulkan.ads:400:21    - Unknown word (REQUIREMENTS) -- VK_KHR_GET_MEMORY_REQUIREMENTS2 : aliased Str
Engine/neo-api-vulkan.ads:400:75    - Unknown word (memory)       -- Str_8_C := "VK_KHR_get_memory_requirements2";
Engine/neo-api-vulkan.ads:400:82    - Unknown word (requirements) -- "VK_KHR_get_memory_requirements2";
Engine/neo-api-vulkan.ads:401:14    - Unknown word (SURFACE)      -- VK_KHR_GET_SURFACE_CAPABILITIES2
Engine/neo-api-vulkan.ads:401:22    - Unknown word (CAPABILITIES) -- VK_KHR_GET_SURFACE_CAPABILITIES2 : aliased Str
Engine/neo-api-vulkan.ads:401:75    - Unknown word (surface)      -- Str_8_C := "VK_KHR_get_surface_capabilities2";
Engine/neo-api-vulkan.ads:401:83    - Unknown word (capabilities) -- "VK_KHR_get_surface_capabilities2";
Engine/neo-api-vulkan.ads:4024:67   - Unknown word (Writes)      -- pDescriptorWrites : Ptr_VkWriteDescriptorSet
Engine/neo-api-vulkan.ads:4026:67   - Unknown word (Copies)      -- pDescriptorCopies : Ptr_VkCopyDescriptorSet
Engine/neo-api-vulkan.ads:402:14    - Unknown word (PHYSICAL)     -- VK_KHR_GET_PHYSICAL_DEVICE_PROPERTIES2
Engine/neo-api-vulkan.ads:402:75    - Unknown word (physical)     -- Str_8_C := "VK_KHR_get_physical_device_properties2"
Engine/neo-api-vulkan.ads:405:27    - Unknown word (REPEAT)       -- SAMPLER_ADDRESS_MODE_REPEAT : constant
Engine/neo-api-vulkan.ads:405:6     - Unknown word (SAMPLER)      -- VK_SAMPLER_ADDRESS_MODE_REPEAT
Engine/neo-api-vulkan.ads:406:27    - Unknown word (MIRRORED)     -- SAMPLER_ADDRESS_MODE_MIRRORED_REPEAT : constant
Engine/neo-api-vulkan.ads:406:36    - Unknown word (REPEAT)       -- ADDRESS_MODE_MIRRORED_REPEAT : constant Int
Engine/neo-api-vulkan.ads:407:27    - Unknown word (CLAMP)        -- SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE : constant
Engine/neo-api-vulkan.ads:407:36    - Unknown word (EDGE)         -- ADDRESS_MODE_CLAMP_TO_EDGE : constant Int
Engine/neo-api-vulkan.ads:408:27    - Unknown word (CLAMP)        -- SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER : constant
Engine/neo-api-vulkan.ads:409:27    - Unknown word (MIRROR)       -- SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE : constant
Engine/neo-api-vulkan.ads:409:34    - Unknown word (CLAMP)        -- ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE : constant Int
Engine/neo-api-vulkan.ads:409:43    - Unknown word (EDGE)         -- MODE_MIRROR_CLAMP_TO_EDGE : constant Int_Unsigned
Engine/neo-api-vulkan.ads:40:24     - Unknown word (Flags)          -- - VkSurfaceTransformFlagsKHR Int
Engine/neo-api-vulkan.ads:40:8      - Unknown word (Surface)        -- -- VkSurfaceTransformFlagsKHR
Engine/neo-api-vulkan.ads:41:23     - Unknown word (Flag)           -- -- VkSemaphoreCreateFlagBits Int
Engine/neo-api-vulkan.ads:41:27     - Unknown word (Bits)           -- VkSemaphoreCreateFlagBits Int_Unsigned
Engine/neo-api-vulkan.ads:421:27    - Unknown word (OTHER)        -- PHYSICAL_DEVICE_TYPE_OTHER : constant
Engine/neo-api-vulkan.ads:421:6     - Unknown word (PHYSICAL)     -- VK_PHYSICAL_DEVICE_TYPE_OTHER
Engine/neo-api-vulkan.ads:421:79    - Unknown word (Physical)     -- Unsigned_C := 0; -- VkPhysicalDeviceType
Engine/neo-api-vulkan.ads:422:6     - Unknown word (PHYSICAL)     -- VK_PHYSICAL_DEVICE_TYPE_INTEGRATED
Engine/neo-api-vulkan.ads:422:79    - Unknown word (Physical)     -- Unsigned_C := 1; -- VkPhysicalDeviceType
Engine/neo-api-vulkan.ads:423:27    - Unknown word (DISCRETE)     -- PHYSICAL_DEVICE_TYPE_DISCRETE_GPU : constant Int
Engine/neo-api-vulkan.ads:423:6     - Unknown word (PHYSICAL)     -- VK_PHYSICAL_DEVICE_TYPE_DISCRETE
Engine/neo-api-vulkan.ads:423:79    - Unknown word (Physical)     -- Unsigned_C := 2; -- VkPhysicalDeviceType
Engine/neo-api-vulkan.ads:424:6     - Unknown word (PHYSICAL)     -- VK_PHYSICAL_DEVICE_TYPE_VIRTUAL
Engine/neo-api-vulkan.ads:424:79    - Unknown word (Physical)     -- Unsigned_C := 3; -- VkPhysicalDeviceType
Engine/neo-api-vulkan.ads:429:27    - Unknown word (VISIBLE)      -- MEMORY_PROPERTY_HOST_VISIBLE_BIT : constant Int
Engine/neo-api-vulkan.ads:42:25     - Unknown word (Flags)          -- VkCommandPoolCreateFlags Int_Unsigned
Engine/neo-api-vulkan.ads:430:27    - Unknown word (COHERENT)     -- MEMORY_PROPERTY_HOST_COHERENT_BIT : constant Int
Engine/neo-api-vulkan.ads:431:27    - Unknown word (CACHED)       -- MEMORY_PROPERTY_HOST_CACHED_BIT : constant
Engine/neo-api-vulkan.ads:432:22    - Unknown word (LAZILY)       -- VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT : constant
Engine/neo-api-vulkan.ads:432:29    - Unknown word (ALLOCATED)    -- MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT : constant Int_Unsigned
Engine/neo-api-vulkan.ads:435:16    - Unknown word (SWIZZLE)      -- VK_COMPONENT_SWIZZLE_IDENTITY : constant
Engine/neo-api-vulkan.ads:435:79    - Unknown word (Swizzle)      -- := 0; -- VkComponentSwizzle
Engine/neo-api-vulkan.ads:436:16    - Unknown word (SWIZZLE)      -- VK_COMPONENT_SWIZZLE_ZERO : constant
Engine/neo-api-vulkan.ads:436:79    - Unknown word (Swizzle)      -- := 1; -- VkComponentSwizzle
Engine/neo-api-vulkan.ads:437:16    - Unknown word (SWIZZLE)      -- VK_COMPONENT_SWIZZLE_ONE : constant
Engine/neo-api-vulkan.ads:437:79    - Unknown word (Swizzle)      -- := 2; -- VkComponentSwizzle
Engine/neo-api-vulkan.ads:438:16    - Unknown word (SWIZZLE)      -- VK_COMPONENT_SWIZZLE_R : constant
Engine/neo-api-vulkan.ads:438:79    - Unknown word (Swizzle)      -- := 3; -- VkComponentSwizzle
Engine/neo-api-vulkan.ads:439:16    - Unknown word (SWIZZLE)      -- VK_COMPONENT_SWIZZLE_G : constant
Engine/neo-api-vulkan.ads:43:25     - Unknown word (Flags)          -- VkDeviceQueueCreateFlags Int_Unsigned
Engine/neo-api-vulkan.ads:449:18    - Unknown word (DEPTH)        -- VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT
Engine/neo-api-vulkan.ads:449:24    - Unknown word (STENCIL)      -- VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT : constant
Engine/neo-api-vulkan.ads:44:13     - Unknown word (Flags)          -- -- VkQueueFlags
Engine/neo-api-vulkan.ads:450:18    - Unknown word (TRANSIENT)    -- VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT
Engine/neo-api-vulkan.ads:454:12    - Unknown word (LAYOUT)       -- VK_IMAGE_LAYOUT_UNDEFINED
Engine/neo-api-vulkan.ads:454:19    - Unknown word (UNDEFINED)    -- VK_IMAGE_LAYOUT_UNDEFINED
Engine/neo-api-vulkan.ads:455:12    - Unknown word (LAYOUT)       -- VK_IMAGE_LAYOUT_GENERAL
Engine/neo-api-vulkan.ads:456:12    - Unknown word (LAYOUT)       -- VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL
Engine/neo-api-vulkan.ads:456:36    - Unknown word (OPTIMAL)      -- LAYOUT_COLOR_ATTACHMENT_OPTIMAL : constant Int
Engine/neo-api-vulkan.ads:457:12    - Unknown word (LAYOUT)       -- VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT
Engine/neo-api-vulkan.ads:457:19    - Unknown word (DEPTH)        -- VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL
Engine/neo-api-vulkan.ads:457:25    - Unknown word (STENCIL)      -- VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL
Engine/neo-api-vulkan.ads:457:44    - Unknown word (OPTIMAL)      -- DEPTH_STENCIL_ATTACHMENT_OPTIMAL : constant Int_Unsigned
Engine/neo-api-vulkan.ads:458:12    - Unknown word (LAYOUT)       -- VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY
Engine/neo-api-vulkan.ads:458:19    - Unknown word (DEPTH)        -- VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL
Engine/neo-api-vulkan.ads:458:25    - Unknown word (STENCIL)      -- VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL
Engine/neo-api-vulkan.ads:458:43    - Unknown word (OPTIMAL)      -- DEPTH_STENCIL_READ_ONLY_OPTIMAL : constant Int_Unsigned
Engine/neo-api-vulkan.ads:459:19    - Unknown word (SHADER)       -- VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL
Engine/neo-api-vulkan.ads:459:36    - Unknown word (OPTIMAL)      -- LAYOUT_SHADER_READ_ONLY_OPTIMAL : constant Int
Engine/neo-api-vulkan.ads:45:22     - Unknown word (Flags)          -- -- VkInstanceCreateFlags Int
Engine/neo-api-vulkan.ads:462:19    - Unknown word (PREINITIALIZED) -- VK_IMAGE_LAYOUT_PREINITIALIZED :
Engine/neo-api-vulkan.ads:463:19    - Unknown word (PRESENT)        -- VK_IMAGE_LAYOUT_PRESENT_SRC_KHR
Engine/neo-api-vulkan.ads:466:100   - Unknown word (Surface)        -- Unsigned_C := 1;   -- VkSurfaceTransformFlagBitsKHR
Engine/neo-api-vulkan.ads:466:6     - Unknown word (SURFACE)        -- VK_SURFACE_TRANSFORM_IDENTITY_BIT
Engine/neo-api-vulkan.ads:467:6     - Unknown word (SURFACE)        -- VK_SURFACE_TRANSFORM_ROTATE_90
Engine/neo-api-vulkan.ads:470:24    - Unknown word (HORIZONTAL)     -- VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_BIT_KHR
Engine/neo-api-vulkan.ads:470:35    - Unknown word (MIRROR)         -- TRANSFORM_HORIZONTAL_MIRROR_BIT_KHR
Engine/neo-api-vulkan.ads:471:24    - Unknown word (HORIZONTAL)     -- VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_90_BIT
Engine/neo-api-vulkan.ads:471:35    - Unknown word (MIRROR)         -- TRANSFORM_HORIZONTAL_MIRROR_ROTATE_90_BIT_KHR
Engine/neo-api-vulkan.ads:472:24    - Unknown word (HORIZONTAL)     -- VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_180_BIT
Engine/neo-api-vulkan.ads:472:35    - Unknown word (MIRROR)         -- TRANSFORM_HORIZONTAL_MIRROR_ROTATE_180_BIT_KHR
Engine/neo-api-vulkan.ads:473:24    - Unknown word (HORIZONTAL)     -- VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_270_BIT
Engine/neo-api-vulkan.ads:473:35    - Unknown word (MIRROR)         -- TRANSFORM_HORIZONTAL_MIRROR_ROTATE_270_BIT_KHR
Engine/neo-api-vulkan.ads:474:24    - Unknown word (INHERIT)        -- VK_SURFACE_TRANSFORM_INHERIT_BIT_KHR
Engine/neo-api-vulkan.ads:477:13    - Unknown word (INDIRECT)       -- VK_ACCESS_INDIRECT_COMMAND_READ_BIT
Engine/neo-api-vulkan.ads:486:13    - Unknown word (DEPTH)          -- VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ
Engine/neo-api-vulkan.ads:486:19    - Unknown word (STENCIL)        -- VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT
Engine/neo-api-vulkan.ads:497:20    - Unknown word (SCISSOR)        -- VK_DYNAMIC_STATE_SCISSOR : constant
Engine/neo-api-vulkan.ads:498:25    - Unknown word (WIDTH)          -- VK_DYNAMIC_STATE_LINE_WIDTH : constant
Engine/neo-api-vulkan.ads:499:26    - Unknown word (BIAS)           -- DYNAMIC_STATE_DEPTH_BIAS : constant
Engine/neo-api-vulkan.ads:49:8      - Unknown word (Memory)         -- -- VkMemoryPropertyFlags
Engine/neo-api-vulkan.ads:500:26    - Unknown word (CONSTANTS)      -- DYNAMIC_STATE_BLEND_CONSTANTS : constant Int
Engine/neo-api-vulkan.ads:501:26    - Unknown word (BOUNDS)         -- DYNAMIC_STATE_DEPTH_BOUNDS : constant Int
Engine/neo-api-vulkan.ads:507:17    - Unknown word (NEVER)          -- VK_COMPARE_OP_NEVER : constant
Engine/neo-api-vulkan.ads:509:17    - Unknown word (EQUAL)          -- VK_COMPARE_OP_EQUAL : constant
Engine/neo-api-vulkan.ads:50:14     - Unknown word (Heap)           -- -- VkMemoryHeapFlags
Engine/neo-api-vulkan.ads:50:8      - Unknown word (Memory)         -- -- VkMemoryHeapFlags
Engine/neo-api-vulkan.ads:510:25    - Unknown word (EQUAL)          -- VK_COMPARE_OP_LESS_OR_EQUAL : constant Int_Unsigned
Engine/neo-api-vulkan.ads:511:17    - Unknown word (GREATER)        -- VK_COMPARE_OP_GREATER : constant
Engine/neo-api-vulkan.ads:512:21    - Unknown word (EQUAL)          -- VK_COMPARE_OP_NOT_EQUAL : constant Int
Engine/neo-api-vulkan.ads:513:17    - Unknown word (GREATER)        -- VK_COMPARE_OP_GREATER_OR_EQUAL : constant
Engine/neo-api-vulkan.ads:513:28    - Unknown word (EQUAL)          -- COMPARE_OP_GREATER_OR_EQUAL : constant Int_Unsigned
Engine/neo-api-vulkan.ads:514:17    - Unknown word (ALWAYS)         -- VK_COMPARE_OP_ALWAYS : constant
Engine/neo-api-vulkan.ads:517:17    - Unknown word (KEEP)           -- VK_STENCIL_OP_KEEP : constant
Engine/neo-api-vulkan.ads:517:74    - Unknown word (Stencil)        -- Unsigned_C := 0; -- VkStencilOp
Engine/neo-api-vulkan.ads:518:74    - Unknown word (Stencil)        -- Unsigned_C := 1; -- VkStencilOp
Engine/neo-api-vulkan.ads:519:74    - Unknown word (Stencil)        -- Unsigned_C := 2; -- VkStencilOp
Engine/neo-api-vulkan.ads:520:17    - Unknown word (INCREMENT)      -- VK_STENCIL_OP_INCREMENT_AND_CLAMP : constant
Engine/neo-api-vulkan.ads:520:31    - Unknown word (CLAMP)          -- STENCIL_OP_INCREMENT_AND_CLAMP : constant Int_Unsigned
Engine/neo-api-vulkan.ads:520:74    - Unknown word (Stencil)        -- Unsigned_C := 3; -- VkStencilOp
Engine/neo-api-vulkan.ads:521:17    - Unknown word (DECREMENT)      -- VK_STENCIL_OP_DECREMENT_AND_CLAMP : constant
Engine/neo-api-vulkan.ads:521:31    - Unknown word (CLAMP)          -- STENCIL_OP_DECREMENT_AND_CLAMP : constant Int_Unsigned
Engine/neo-api-vulkan.ads:522:17    - Unknown word (INVERT)         -- VK_STENCIL_OP_INVERT : constant
Engine/neo-api-vulkan.ads:523:17    - Unknown word (INCREMENT)      -- VK_STENCIL_OP_INCREMENT_AND_WRAP : constant
Engine/neo-api-vulkan.ads:523:31    - Unknown word (WRAP)           -- STENCIL_OP_INCREMENT_AND_WRAP : constant Int_Unsigned
Engine/neo-api-vulkan.ads:524:17    - Unknown word (DECREMENT)      -- VK_STENCIL_OP_DECREMENT_AND_WRAP : constant
Engine/neo-api-vulkan.ads:524:31    - Unknown word (WRAP)           -- STENCIL_OP_DECREMENT_AND_WRAP : constant Int_Unsigned
Engine/neo-api-vulkan.ads:528:19    - Unknown word (TESSELLATION)   -- VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT : constant
Engine/neo-api-vulkan.ads:529:19    - Unknown word (TESSELLATION)   -- VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT : constant
Engine/neo-api-vulkan.ads:533:23    - Unknown word (GRAPHICS)       -- VK_SHADER_STAGE_ALL_GRAPHICS : constant
Engine/neo-api-vulkan.ads:537:102   - Unknown word (Topology)       -- = 0;  -- VkPrimitiveTopology
Engine/neo-api-vulkan.ads:537:16    - Unknown word (TOPOLOGY)       -- VK_PRIMITIVE_TOPOLOGY_POINT_LIST
Engine/neo-api-vulkan.ads:537:6     - Unknown word (PRIMITIVE)      -- VK_PRIMITIVE_TOPOLOGY_POINT_LIST
Engine/neo-api-vulkan.ads:537:93    - Unknown word (Primitive)      -- Unsigned_C := 0;  -- VkPrimitiveTopology
Engine/neo-api-vulkan.ads:538:102   - Unknown word (Topology)       -- = 1;  -- VkPrimitiveTopology
Engine/neo-api-vulkan.ads:538:16    - Unknown word (TOPOLOGY)       -- VK_PRIMITIVE_TOPOLOGY_LINE_LIST
Engine/neo-api-vulkan.ads:538:6     - Unknown word (PRIMITIVE)      -- VK_PRIMITIVE_TOPOLOGY_LINE_LIST
Engine/neo-api-vulkan.ads:538:93    - Unknown word (Primitive)      -- Unsigned_C := 1;  -- VkPrimitiveTopology
Engine/neo-api-vulkan.ads:539:102   - Unknown word (Topology)       -- = 2;  -- VkPrimitiveTopology
Engine/neo-api-vulkan.ads:539:16    - Unknown word (TOPOLOGY)       -- VK_PRIMITIVE_TOPOLOGY_LINE_STRIP
Engine/neo-api-vulkan.ads:539:30    - Unknown word (STRIP)          -- PRIMITIVE_TOPOLOGY_LINE_STRIP
Engine/neo-api-vulkan.ads:539:6     - Unknown word (PRIMITIVE)      -- VK_PRIMITIVE_TOPOLOGY_LINE_STRIP
Engine/neo-api-vulkan.ads:539:93    - Unknown word (Primitive)      -- Unsigned_C := 2;  -- VkPrimitiveTopology
Engine/neo-api-vulkan.ads:53:13     - Unknown word (Aspect)         -- -- VkImageAspectFlagBits
Engine/neo-api-vulkan.ads:53:19     - Unknown word (Flag)           -- -- VkImageAspectFlagBits
Engine/neo-api-vulkan.ads:53:23     - Unknown word (Bits)           -- -- VkImageAspectFlagBits Int
Engine/neo-api-vulkan.ads:540:102   - Unknown word (Topology)       -- = 3;  -- VkPrimitiveTopology
Engine/neo-api-vulkan.ads:540:16    - Unknown word (TOPOLOGY)       -- VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST
Engine/neo-api-vulkan.ads:540:25    - Unknown word (TRIANGLE)       -- VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST
Engine/neo-api-vulkan.ads:540:6     - Unknown word (PRIMITIVE)      -- VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST
Engine/neo-api-vulkan.ads:540:93    - Unknown word (Primitive)      -- Unsigned_C := 3;  -- VkPrimitiveTopology
Engine/neo-api-vulkan.ads:541:102   - Unknown word (Topology)       -- = 4;  -- VkPrimitiveTopology
Engine/neo-api-vulkan.ads:541:16    - Unknown word (TOPOLOGY)       -- VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP
Engine/neo-api-vulkan.ads:541:25    - Unknown word (TRIANGLE)       -- VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP
Engine/neo-api-vulkan.ads:541:34    - Unknown word (STRIP)          -- PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP : constant
Engine/neo-api-vulkan.ads:541:6     - Unknown word (PRIMITIVE)      -- VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP
Engine/neo-api-vulkan.ads:541:93    - Unknown word (Primitive)      -- Unsigned_C := 4;  -- VkPrimitiveTopology
Engine/neo-api-vulkan.ads:542:25    - Unknown word (TRIANGLE)       -- VK_PRIMITIVE_TOPOLOGY_TRIANGLE_FAN
Engine/neo-api-vulkan.ads:543:40    - Unknown word (ADJACENCY)      -- TOPOLOGY_LINE_LIST_WITH_ADJACENCY : constant Int
Engine/neo-api-vulkan.ads:544:30    - Unknown word (STRIP)          -- PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY
Engine/neo-api-vulkan.ads:544:41    - Unknown word (ADJACENCY)      -- TOPOLOGY_LINE_STRIP_WITH_ADJACENCY : constant Int_Unsigned
Engine/neo-api-vulkan.ads:545:25    - Unknown word (TRIANGLE)      -- VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY
Engine/neo-api-vulkan.ads:545:44    - Unknown word (ADJACENCY)     -- TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY : constant Int_Unsigned
Engine/neo-api-vulkan.ads:546:25    - Unknown word (TRIANGLE)      -- VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY
Engine/neo-api-vulkan.ads:546:34    - Unknown word (STRIP)         -- PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY : constant
Engine/neo-api-vulkan.ads:546:45    - Unknown word (ADJACENCY)     -- TRIANGLE_STRIP_WITH_ADJACENCY : constant Int_Unsigned
Engine/neo-api-vulkan.ads:552:35    - Unknown word (ATOMIC)        -- FEATURE_STORAGE_IMAGE_ATOMIC_BIT : constant
Engine/neo-api-vulkan.ads:553:29    - Unknown word (TEXEL)         -- FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT
Engine/neo-api-vulkan.ads:555:42    - Unknown word (ATOMIC)        -- STORAGE_TEXEL_BUFFER_ATOMIC_BIT : constant Int
Engine/neo-api-vulkan.ads:55:13     - Unknown word (Layout)         -- -- VkImageLayout
Engine/neo-api-vulkan.ads:560:21    - Unknown word (BLIT)          -- VK_FORMAT_FEATURE_BLIT_SRC_BIT
Engine/neo-api-vulkan.ads:561:21    - Unknown word (BLIT)          -- VK_FORMAT_FEATURE_BLIT_DST_BIT
Engine/neo-api-vulkan.ads:562:42    - Unknown word (LINEAR)        -- SAMPLED_IMAGE_FILTER_LINEAR_BIT : constant Int
Engine/neo-api-vulkan.ads:565:6     - Unknown word (LOGIC)         -- VK_LOGIC_OP_CLEAR : constant
Engine/neo-api-vulkan.ads:565:67    - Unknown word (Logic)         -- Unsigned_C := 0;  -- VkLogicOp
Engine/neo-api-vulkan.ads:566:6     - Unknown word (LOGIC)         -- VK_LOGIC_OP_AND : constant
Engine/neo-api-vulkan.ads:566:67    - Unknown word (Logic)         -- Unsigned_C := 1;  -- VkLogicOp
Engine/neo-api-vulkan.ads:567:6     - Unknown word (LOGIC)         -- VK_LOGIC_OP_AND_REVERSE : constant
Engine/neo-api-vulkan.ads:567:67    - Unknown word (Logic)         -- Unsigned_C := 2;  -- VkLogicOp
Engine/neo-api-vulkan.ads:568:6     - Unknown word (LOGIC)         -- VK_LOGIC_OP_COPY : constant
Engine/neo-api-vulkan.ads:568:67    - Unknown word (Logic)         -- Unsigned_C := 3;  -- VkLogicOp
Engine/neo-api-vulkan.ads:569:19    - Unknown word (INVERTED)      -- VK_LOGIC_OP_AND_INVERTED : constant Int_Unsigned
Engine/neo-api-vulkan.ads:569:6     - Unknown word (LOGIC)         -- VK_LOGIC_OP_AND_INVERTED : constant
Engine/neo-api-vulkan.ads:569:67    - Unknown word (Logic)         -- Unsigned_C := 4;  -- VkLogicOp
Engine/neo-api-vulkan.ads:56:8      - Unknown word (Dependency)     -- -- vkDependencyFlags
Engine/neo-api-vulkan.ads:574:15    - Unknown word (EQUIVALENT)    -- VK_LOGIC_OP_EQUIVALENT : constant Int_Unsigned
Engine/neo-api-vulkan.ads:575:15    - Unknown word (INVERT)        -- VK_LOGIC_OP_INVERT : constant Int
Engine/neo-api-vulkan.ads:577:20    - Unknown word (INVERTED)      -- VK_LOGIC_OP_COPY_INVERTED : constant Int_Unsigned
Engine/neo-api-vulkan.ads:578:18    - Unknown word (INVERTED)      -- VK_LOGIC_OP_OR_INVERTED : constant Int_Unsigned
Engine/neo-api-vulkan.ads:579:15    - Unknown word (NAND)          -- VK_LOGIC_OP_NAND : constant
Engine/neo-api-vulkan.ads:57:22     - Unknown word (Flag)           -- -- VkCompositeAlphaFlagBitsKHR Int
Engine/neo-api-vulkan.ads:57:26     - Unknown word (Bits)           -- VkCompositeAlphaFlagBitsKHR Int_Unsigned
Engine/neo-api-vulkan.ads:57:8      - Unknown word (Composite)      -- -- VkCompositeAlphaFlagBitsKHR
Engine/neo-api-vulkan.ads:586:23    - Unknown word (MINUS)         -- VK_BLEND_FACTOR_ONE_MINUS_SRC_COLOR : constant
Engine/neo-api-vulkan.ads:588:23    - Unknown word (MINUS)         -- VK_BLEND_FACTOR_ONE_MINUS_DST_COLOR : constant
Engine/neo-api-vulkan.ads:58:15     - Unknown word (Mode)           -- -- VkSharingMode
Engine/neo-api-vulkan.ads:590:23    - Unknown word (MINUS)         -- VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA : constant
Engine/neo-api-vulkan.ads:592:23    - Unknown word (MINUS)         -- VK_BLEND_FACTOR_ONE_MINUS_DST_ALPHA : constant
Engine/neo-api-vulkan.ads:594:23    - Unknown word (MINUS)         -- VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_COLOR : constant
Engine/neo-api-vulkan.ads:597:29    - Unknown word (SATURATE)      -- BLEND_FACTOR_SRC_ALPHA_SATURATE : constant Int
Engine/neo-api-vulkan.ads:59:8      - Unknown word (Color)          -- -- VkColorSpaceKHR
Engine/neo-api-vulkan.ads:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo-api-vulkan.ads:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo-api-vulkan.ads:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo-api-vulkan.ads:604:28    - Unknown word (PIPE)          -- PIPELINE_STAGE_TOP_OF_PIPE_BIT
Engine/neo-api-vulkan.ads:605:21    - Unknown word (DRAW)          -- VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT
Engine/neo-api-vulkan.ads:605:26    - Unknown word (INDIRECT)      -- PIPELINE_STAGE_DRAW_INDIRECT_BIT
Engine/neo-api-vulkan.ads:608:21    - Unknown word (TESSELLATION)  -- VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT
Engine/neo-api-vulkan.ads:609:21    - Unknown word (TESSELLATION)  -- VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT
Engine/neo-api-vulkan.ads:60:8      - Unknown word (Swapchain)      -- -- VkSwapchainCreateFlagsKHR
Engine/neo-api-vulkan.ads:612:21    - Unknown word (EARLY)         -- VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT
Engine/neo-api-vulkan.ads:613:21    - Unknown word (LATE)          -- VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT
Engine/neo-api-vulkan.ads:617:21    - Unknown word (BOTTOM)        -- VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT
Engine/neo-api-vulkan.ads:617:31    - Unknown word (PIPE)          -- PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT
Engine/neo-api-vulkan.ads:619:25    - Unknown word (GRAPHICS)      -- VK_PIPELINE_STAGE_ALL_GRAPHICS_BIT
Engine/neo-api-vulkan.ads:61:15     - Unknown word (Mode)           -- -- VkPresentModeKHR
Engine/neo-api-vulkan.ads:61:8      - Unknown word (Present)        -- -- VkPresentModeKHR
Engine/neo-api-vulkan.ads:624:10    - Unknown word (READY)         -- VK_NOT_READY
Engine/neo-api-vulkan.ads:625:6     - Unknown word (TIMEOUT)       -- VK_TIMEOUT
Engine/neo-api-vulkan.ads:628:6     - Unknown word (INCOMPLETE)    -- VK_INCOMPLETE
Engine/neo-api-vulkan.ads:629:6     - Unknown word (SUBOPTIMAL)    -- VK_SUBOPTIMAL_KHR
Engine/neo-api-vulkan.ads:62:13     - Unknown word (Surface)        -- -- VkWin32SurfaceCreateFlagsKHR
Engine/neo-api-vulkan.ads:630:19    - Unknown word (DATE)          -- VK_ERROR_OUT_OF_DATE_KHR : constant
Engine/neo-api-vulkan.ads:632:20    - Unknown word (LOST)          -- VK_ERROR_SURFACE_LOST_KHR : constant
Engine/neo-api-vulkan.ads:633:12    - Unknown word (NATIVE)        -- VK_ERROR_NATIVE_WINDOW_IN_USE_KHR :
Engine/neo-api-vulkan.ads:634:12    - Unknown word (INCOMPATIBLE)  -- VK_ERROR_INCOMPATIBLE_DISPLAY_KHR : constant
Engine/neo-api-vulkan.ads:636:12    - Unknown word (INVALID)       -- VK_ERROR_INVALID_SHADER_NV : constant
Engine/neo-api-vulkan.ads:637:14    - Unknown word (INVALID)       -- --VK_ERROR_INVALID_EXTERNAL_HANDLE : constant
Engine/neo-api-vulkan.ads:637:31    - Unknown word (HANDLE)        -- ERROR_INVALID_EXTERNAL_HANDLE : constant Int_Unsigned
Engine/neo-api-vulkan.ads:639:18    - Unknown word (PERMITTED)     -- --VK_ERROR_NOT_PERMITTED_EXT : constant
Engine/neo-api-vulkan.ads:63:13     - Unknown word (Flag)           -- -- VkQueueFlagBits
Engine/neo-api-vulkan.ads:63:17     - Unknown word (Bits)           -- -- VkQueueFlagBits
Engine/neo-api-vulkan.ads:641:74    - Unknown word (FFFE)          -- Unsigned_C := 16#FFFF_FFFE#; -- To_Int_32_Unsigned
Engine/neo-api-vulkan.ads:642:12    - Unknown word (INITIALIZATION) -- VK_ERROR_INITIALIZATION_FAILED : constant
Engine/neo-api-vulkan.ads:642:74    - Unknown word (FFFD)           -- Unsigned_C := 16#FFFF_FFFD#; -- To_Int_32_Unsigned
Engine/neo-api-vulkan.ads:643:19    - Unknown word (LOST)           -- VK_ERROR_DEVICE_LOST : constant
Engine/neo-api-vulkan.ads:643:74    - Unknown word (FFFC)           -- Unsigned_C := 16#FFFF_FFFC#; -- To_Int_32_Unsigned
Engine/neo-api-vulkan.ads:644:74    - Unknown word (FFFB)           -- Unsigned_C := 16#FFFF_FFFB#; -- To_Int_32_Unsigned
Engine/neo-api-vulkan.ads:645:74    - Unknown word (FFFA)           -- Unsigned_C := 16#FFFF_FFFA#; -- To_Int_32_Unsigned
Engine/neo-api-vulkan.ads:648:12    - Unknown word (INCOMPATIBLE)   -- VK_ERROR_INCOMPATIBLE_DRIVER : constant
Engine/neo-api-vulkan.ads:648:25    - Unknown word (DRIVER)         -- VK_ERROR_INCOMPATIBLE_DRIVER : constant Int
Engine/neo-api-vulkan.ads:649:16    - Unknown word (MANY)           -- VK_ERROR_TOO_MANY_OBJECTS : constant
Engine/neo-api-vulkan.ads:64:16     - Unknown word (Bind)           -- -- VkPipelineBindPoint
Engine/neo-api-vulkan.ads:651:14    - Unknown word (FRAGMENTED)     -- --VK_ERROR_FRAGMENTED_POOL : constant
Engine/neo-api-vulkan.ads:654:6     - Unknown word (STRUCTURE)      -- VK_STRUCTURE_TYPE_APPLICATION_INFO
Engine/neo-api-vulkan.ads:65:8      - Unknown word (Subpass)        -- -- VkSubpassContents
Engine/neo-api-vulkan.ads:660:21    - Unknown word (MAPPED)         -- VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE
Engine/neo-api-vulkan.ads:661:21    - Unknown word (BIND)           -- VK_STRUCTURE_TYPE_BIND_SPARSE_INFO
Engine/neo-api-vulkan.ads:661:26    - Unknown word (SPARSE)         -- STRUCTURE_TYPE_BIND_SPARSE_INFO
Engine/neo-api-vulkan.ads:662:21    - Unknown word (FENCE)          -- VK_STRUCTURE_TYPE_FENCE_CREATE_INFO
Engine/neo-api-vulkan.ads:670:28    - Unknown word (MODULE)         -- STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO
Engine/neo-api-vulkan.ads:675:30    - Unknown word (TESSELLATION)   -- STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO
Engine/neo-api-vulkan.ads:677:30    - Unknown word (RASTERIZATION)  -- STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO
Engine/neo-api-vulkan.ads:678:30    - Unknown word (MULTISAMPLE)    -- STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO
Engine/neo-api-vulkan.ads:682:21    - Unknown word (GRAPHICS)       -- VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO
Engine/neo-api-vulkan.ads:695:36    - Unknown word (INHERITANCE)    -- TYPE_COMMAND_BUFFER_INHERITANCE_INFO
Engine/neo-api-vulkan.ads:698:35    - Unknown word (BARRIER)        -- STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER
Engine/neo-api-vulkan.ads:699:34    - Unknown word (BARRIER)        -- STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER
Engine/neo-api-vulkan.ads:69:16     - Unknown word (Shader)         -- -- VkPipelineShaderStageCreateFlags
Engine/neo-api-vulkan.ads:700:28    - Unknown word (BARRIER)        -- STRUCTURE_TYPE_MEMORY_BARRIER
Engine/neo-api-vulkan.ads:701:21    - Unknown word (LOADER)         -- VK_STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO
Engine/neo-api-vulkan.ads:702:21    - Unknown word (LOADER)         -- VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO
Engine/neo-api-vulkan.ads:703:21    - Unknown word (SWAPCHAIN)      -- VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR
Engine/neo-api-vulkan.ads:708:21    - Unknown word (XLIB)           -- VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO
Engine/neo-api-vulkan.ads:710:21    - Unknown word (WAYLAND)        -- VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO
Engine/neo-api-vulkan.ads:714:34    - Unknown word (CALLBACK)       -- STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT
Engine/neo-api-vulkan.ads:715:30    - Unknown word (AABB)           -- STRUCTURE_TYPE_GEOMETRY_AABB_NV
Engine/neo-api-vulkan.ads:716:25    - Unknown word (TRACING)        -- VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO
Engine/neo-api-vulkan.ads:718:26    - Unknown word (ACCELERATION)   -- STRUCTURE_TYPE_BIND_ACCELERATION_STRUCTURE_MEMORY_INFO
Engine/neo-api-vulkan.ads:722:30    - Unknown word (TRIANGLES)      -- STRUCTURE_TYPE_GEOMETRY_TRIANGLES_NV
Engine/neo-api-vulkan.ads:725:13    - Unknown word (UNDEFINED)      -- VK_FORMAT_UNDEFINED
Engine/neo-api-vulkan.ads:726:18    - Unknown word (UNORM)          -- VK_FORMAT_R4G4_UNORM_PACK8
Engine/neo-api-vulkan.ads:726:24    - Unknown word (PACK)           -- VK_FORMAT_R4G4_UNORM_PACK8
Engine/neo-api-vulkan.ads:727:22    - Unknown word (UNORM)          -- VK_FORMAT_R4G4B4A4_UNORM_PACK16
Engine/neo-api-vulkan.ads:727:28    - Unknown word (PACK)           -- FORMAT_R4G4B4A4_UNORM_PACK16
Engine/neo-api-vulkan.ads:728:22    - Unknown word (UNORM)          -- VK_FORMAT_B4G4R4A4_UNORM_PACK16
Engine/neo-api-vulkan.ads:728:28    - Unknown word (PACK)           -- FORMAT_B4G4R4A4_UNORM_PACK16
Engine/neo-api-vulkan.ads:729:20    - Unknown word (UNORM)          -- VK_FORMAT_R5G6B5_UNORM_PACK16
Engine/neo-api-vulkan.ads:729:26    - Unknown word (PACK)           -- FORMAT_R5G6B5_UNORM_PACK16
Engine/neo-api-vulkan.ads:730:20    - Unknown word (UNORM)          -- VK_FORMAT_B5G6R5_UNORM_PACK16
Engine/neo-api-vulkan.ads:730:26    - Unknown word (PACK)           -- FORMAT_B5G6R5_UNORM_PACK16
Engine/neo-api-vulkan.ads:735:16    - Unknown word (SNORM)          -- VK_FORMAT_R8_SNORM
Engine/neo-api-vulkan.ads:736:16    - Unknown word (USCALED)        -- VK_FORMAT_R8_USCALED
Engine/neo-api-vulkan.ads:737:16    - Unknown word (SSCALED)        -- VK_FORMAT_R8_SSCALED
Engine/neo-api-vulkan.ads:73:16     - Unknown word (Tessellation)   -- -- VkPipelineTessellationStateCreateFlags Int
Engine/neo-api-vulkan.ads:740:16    - Unknown word (SRGB)           -- VK_FORMAT_R8_SRGB
Engine/neo-api-vulkan.ads:742:18    - Unknown word (SNORM)          -- VK_FORMAT_R8G8_SNORM
Engine/neo-api-vulkan.ads:743:18    - Unknown word (USCALED)        -- VK_FORMAT_R8G8_USCALED
Engine/neo-api-vulkan.ads:744:18    - Unknown word (SSCALED)        -- VK_FORMAT_R8G8_SSCALED
Engine/neo-api-vulkan.ads:747:18    - Unknown word (SRGB)           -- VK_FORMAT_R8G8_SRGB
Engine/neo-api-vulkan.ads:749:20    - Unknown word (SNORM)          -- VK_FORMAT_R8G8B8_SNORM
Engine/neo-api-vulkan.ads:750:20    - Unknown word (USCALED)        -- VK_FORMAT_R8G8B8_USCALED
Engine/neo-api-vulkan.ads:751:20    - Unknown word (SSCALED)        -- VK_FORMAT_R8G8B8_SSCALED
Engine/neo-api-vulkan.ads:754:20    - Unknown word (SRGB)           -- VK_FORMAT_R8G8B8_SRGB
Engine/neo-api-vulkan.ads:756:20    - Unknown word (SNORM)          -- VK_FORMAT_B8G8R8_SNORM
Engine/neo-api-vulkan.ads:757:20    - Unknown word (USCALED)        -- VK_FORMAT_B8G8R8_USCALED
Engine/neo-api-vulkan.ads:758:20    - Unknown word (SSCALED)        -- VK_FORMAT_B8G8R8_SSCALED
Engine/neo-api-vulkan.ads:75:16     - Unknown word (Rasterization)  -- -- VkPipelineRasterizationStateCreateFlags Int
Engine/neo-api-vulkan.ads:761:20    - Unknown word (SRGB)           -- VK_FORMAT_B8G8R8_SRGB
Engine/neo-api-vulkan.ads:763:22    - Unknown word (SNORM)          -- VK_FORMAT_R8G8B8A8_SNORM
Engine/neo-api-vulkan.ads:764:22    - Unknown word (USCALED)        -- VK_FORMAT_R8G8B8A8_USCALED
Engine/neo-api-vulkan.ads:765:22    - Unknown word (SSCALED)        -- VK_FORMAT_R8G8B8A8_SSCALED
Engine/neo-api-vulkan.ads:76:12     - Unknown word (Mode)           -- -- VkCullModeFlags
Engine/neo-api-vulkan.ads:76:8      - Unknown word (Cull)           -- -- VkCullModeFlags
Engine/neo-api-vulkan.ads:77:16     - Unknown word (Multisample)    -- -- VkPipelineMultisampleStateCreateFlags Int
Engine/neo-api-vulkan.ads:78:16     - Unknown word (Depth)          -- -- VkPipelineDepthStencilStateCreateFlags
Engine/neo-api-vulkan.ads:78:21     - Unknown word (Stencil)        -- -- VkPipelineDepthStencilStateCreateFlags Int
Engine/neo-api-vulkan.ads:79:16     - Unknown word (Color)          -- -- VkPipelineColorBlendStateCreateFlags
Engine/neo-api-vulkan.ads:79:21     - Unknown word (Blend)          -- -- VkPipelineColorBlendStateCreateFlags Int
Engine/neo-api-vulkan.ads:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-api-vulkan.ads:801:17    - Unknown word (SFLOAT)         -- VK_FORMAT_R16_SFLOAT
Engine/neo-api-vulkan.ads:808:20    - Unknown word (SFLOAT)         -- VK_FORMAT_R16G16_SFLOAT
Engine/neo-api-vulkan.ads:80:8      - Unknown word (Color)          -- -- VkColorComponentFlags
Engine/neo-api-vulkan.ads:815:23    - Unknown word (SFLOAT)         -- VK_FORMAT_R16G16B16_SFLOAT
Engine/neo-api-vulkan.ads:822:26    - Unknown word (SFLOAT)         -- FORMAT_R16G16B16A16_SFLOAT
Engine/neo-api-vulkan.ads:825:17    - Unknown word (SFLOAT)         -- VK_FORMAT_R32_SFLOAT
Engine/neo-api-vulkan.ads:83:13     - Unknown word (Aspect)         -- -- VkImageAspectFlags
Engine/neo-api-vulkan.ads:847:23    - Unknown word (UFLOAT)         -- VK_FORMAT_B10G11R11_UFLOAT_PACK32
Engine/neo-api-vulkan.ads:848:22    - Unknown word (UFLOAT)         -- VK_FORMAT_E5B9G9R9_UFLOAT_PACK32
Engine/neo-api-vulkan.ads:868:18    - Unknown word (UFLOAT)         -- VK_FORMAT_BC6H_UFLOAT_BLOCK
Engine/neo-api-vulkan.ads:86:15     - Unknown word (Mode)           -- -- VkSharingMode
Engine/neo-api-vulkan.ads:882:13    - Unknown word (ASTC)           -- VK_FORMAT_ASTC_4x4_UNORM_BLOCK
Engine/neo-api-vulkan.ads:883:13    - Unknown word (ASTC)           -- VK_FORMAT_ASTC_4x4_SRGB_BLOCK
Engine/neo-api-vulkan.ads:884:13    - Unknown word (ASTC)           -- VK_FORMAT_ASTC_5x4_UNORM_BLOCK
Engine/neo-api-vulkan.ads:885:13    - Unknown word (ASTC)          -- VK_FORMAT_ASTC_5x4_SRGB_BLOCK
Engine/neo-api-vulkan.ads:886:13    - Unknown word (ASTC)          -- VK_FORMAT_ASTC_5x5_UNORM_BLOCK
Engine/neo-api-vulkan.ads:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-api-vulkan.ads:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-api-vulkan.ads:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo-api-vulkan.ads:91:13     - Unknown word (Tiling)         -- -- VkImageTiling
Engine/neo-api-vulkan.ads:93:16     - Unknown word (Allocation)     -- -- VkInternalAllocationType Int
Engine/neo-api-vulkan.ads:93:8      - Unknown word (Internal)       -- -- VkInternalAllocationType
Engine/neo-api-vulkan.ads:944:13    - Unknown word (PVRTC)         -- VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG
Engine/neo-api-vulkan.ads:945:13    - Unknown word (PVRTC)         -- VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG
Engine/neo-api-vulkan.ads:946:13    - Unknown word (PVRTC)         -- VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG
Engine/neo-api-vulkan.ads:947:13    - Unknown word (PVRTC)         -- VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG
Engine/neo-api-vulkan.ads:948:13    - Unknown word (PVRTC)         -- VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG
Engine/neo-api-vulkan.ads:95:8      - Unknown word (Subpass)        -- -- VkSubpassDescriptionFlags
Engine/neo-api-vulkan.ads:99:21     - Unknown word (Layout)         -- -- VkDescriptorSetLayoutCreateFlags Int
Engine/neo-api-windows.ads:1000:70   - Unknown word (HRAWINPUT)       -- -- HRAWINPUT
Engine/neo-api-windows.ads:1003:70   - Unknown word (PUINT)           -- Int_32_Unsigned_C; -- PUINT
Engine/neo-api-windows.ads:1009:75   - Unknown word (PCRAWINPUTDEVICE) -- Ptr; -- PCRAWINPUTDEVICE
Engine/neo-api-windows.ads:1016:80   - Unknown word (PRAWINPUTDEVICELIST) -- Ptr; -- PRAWINPUTDEVICELIST
Engine/neo-api-windows.ads:1017:80   - Unknown word (PUINT)               -- Ptr_Int_Unsigned_C; -- PUINT
Engine/neo-api-windows.ads:1025:27   - Unknown word (lpsi)                -- lpsi : access SCROLLINFO
Engine/neo-api-windows.ads:1025:57   - Unknown word (LPSCROLLINFO)        -- access SCROLLINFO) -- LPSCROLLINFO
Engine/neo-api-windows.ads:1040:26   - Unknown word (Escapement)          -- nEscapement : Int_C;
Engine/neo-api-windows.ads:1041:26   - Unknown word (Orientation)         -- nOrientation : Int_C;
Engine/neo-api-windows.ads:1042:27   - Unknown word (Weight)              -- fnWeight : Int_C;
Engine/neo-api-windows.ads:1043:28   - Unknown word (Italic)              -- fdwItalic : Int_Unsigned
Engine/neo-api-windows.ads:1044:28   - Unknown word (Underline)           -- fdwUnderline : Int_Unsigned
Engine/neo-api-windows.ads:1045:28   - Unknown word (Strike)              -- fdwStrikeOut : Int_Unsigned
Engine/neo-api-windows.ads:1048:28   - Unknown word (Clip)                -- fdwClipPrecision : Int_Unsigned
Engine/neo-api-windows.ads:1049:28   - Unknown word (Quality)             -- fdwQuality : Int_Unsigned
Engine/neo-api-windows.ads:1050:28   - Unknown word (Pitch)               -- fdwPitchAndFamily : Int_Unsigned
Engine/neo-api-windows.ads:1051:25   - Unknown word (lpsz)                -- lpszFace : Ptr
Engine/neo-api-windows.ads:1051:65   - Unknown word (lpsz)                -- Ptr_Str_16_C) -- lpszFace
Engine/neo-api-windows.ads:1052:65   - Unknown word (HFONT)               -- -- HFONT
Engine/neo-api-windows.ads:1056:22   - Unknown word (Indirect)            -- function CreateFontIndirectW (lplf : access LOGFONT
Engine/neo-api-windows.ads:1056:33   - Unknown word (lplf)                -- CreateFontIndirectW (lplf : access LOGFONT) -
Engine/neo-api-windows.ads:1057:59   - Unknown word (HFONT)               -- return Ptr             -- HFONT
Engine/neo-api-windows.ads:1058:105  - Unknown word (Indirect)            -- External_Name => "CreateFontIndirectW";
Engine/neo-api-windows.ads:1062:29   - Unknown word (lptm)                -- lptm : access TEXTMETRIC
Engine/neo-api-windows.ads:1062:43   - Unknown word (TEXTMETRIC)          -- lptm : access TEXTMETRIC) -- LPTEXTMETRIC
Engine/neo-api-windows.ads:1062:58   - Unknown word (LPTEXTMETRIC)        -- access TEXTMETRIC) -- LPTEXTMETRIC
Engine/neo-api-windows.ads:1068:26   - Unknown word (hgdiobj)             -- hgdiobj : Ptr) -- HGDIOBJ
Engine/neo-api-windows.ads:1068:44   - Unknown word (HGDIOBJ)             -- hgdiobj : Ptr) -- HGDIOBJ
Engine/neo-api-windows.ads:1069:44   - Unknown word (HGDIOBJ)             -- return Ptr     -- HGDIOBJ
Engine/neo-api-windows.ads:1073:19   - Unknown word (Extent)              -- function GetTextExtentPoint32W (hdc      :
Engine/neo-api-windows.ads:1074:37   - Unknown word (String)              -- lpString :        Ptr_Char_1
Engine/neo-api-windows.ads:1076:71   - Unknown word (LPSIZE)              -- access SIZE)          -- LPSIZE
Engine/neo-api-windows.ads:1078:104  - Unknown word (Extent)              -- External_Name => "GetTextExtentPoint32W";
Engine/neo-api-windows.ads:1081:19   - Unknown word (Color)               -- function SetTextColor (hdc     : Ptr;
Engine/neo-api-windows.ads:1082:28   - Unknown word (Color)               -- crColor : Int_Unsigned_C) -
Engine/neo-api-windows.ads:1084:95   - Unknown word (Color)               -- External_Name => "SetTextColor";
Engine/neo-api-windows.ads:1087:17   - Unknown word (Color)               -- function SetBkColor (hdc     : Ptr;
Engine/neo-api-windows.ads:1088:26   - Unknown word (Color)               -- crColor : Int_Unsigned_C) -
Engine/neo-api-windows.ads:1093:18   - Unknown word (Solid)               -- function CreateSolidBrush (crColor : Int
Engine/neo-api-windows.ads:1093:23   - Unknown word (Brush)               -- function CreateSolidBrush (crColor : Int_Unsigned
Engine/neo-api-windows.ads:1095:103  - Unknown word (Brush)               -- Name => "CreateSolidBrush";
Engine/neo-api-windows.ads:1095:98   - Unknown word (Solid)               -- External_Name => "CreateSolidBrush";
Engine/neo-api-windows.ads:1098:12   - Unknown word (Peek)                -- function PeekMessageW (lpMsg
Engine/neo-api-windows.ads:1098:68   - Unknown word (LPMSG)               -- access MSG;            -- LPMSG
Engine/neo-api-windows.ads:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-api-windows.ads:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-api-windows.ads:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo-api-windows.ads:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-api-windows.ads:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-api-windows.ads:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-api-windows.ads:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-api-windows.ads:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-api-windows.ads:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-api-windows.ads:1104:88   - Unknown word (Peek)                -- Stdcall, External_Name => "PeekMessageW";
Engine/neo-api-windows.ads:1114:12   - Unknown word (Call)                -- function CallNextHookEx (hhk    :
Engine/neo-api-windows.ads:1114:49   - Unknown word (HHOOK)               -- hhk : Ptr;     -- HHOOK
Engine/neo-api-windows.ads:1119:90   - Unknown word (Call)                -- StdCall, External_Name => "CallNextHookEx";
Engine/neo-api-windows.ads:1128:26   - Unknown word (Rect)                -- function ClipCursor (lpRect : Ptr_RECT) -- const
Engine/neo-api-windows.ads:1154:12   - Unknown word (Dispatch)            -- function DispatchMessageW (lpmsg : Ptr
Engine/neo-api-windows.ads:1154:30   - Unknown word (lpmsg)               -- function DispatchMessageW (lpmsg : Ptr_MSG) -- const
Engine/neo-api-windows.ads:1156:92   - Unknown word (Dispatch)            -- StdCall, External_Name => "DispatchMessageW";
Engine/neo-api-windows.ads:1159:15   - Unknown word (Focus)               -- function GetFocus return Ptr  -- HWND
Engine/neo-api-windows.ads:1160:86   - Unknown word (Focus)               -- External_Name => "GetFocus";
Engine/neo-api-windows.ads:1164:53   - Unknown word (WNDENUMPROC)         -- lpEnumFunc : Ptr;   -- WNDENUMPROC
Engine/neo-api-windows.ads:118:3     - Unknown word (HCBT)                -- HCBT_ACTIVATE : constant
Engine/neo-api-windows.ads:1190:16   - Unknown word (Library)             -- function LoadLibraryW (lpFileName : Ptr_Char
Engine/neo-api-windows.ads:1191:57   - Unknown word (LPCTSTRHMODULE)      -- -- LPCTSTRHMODULE
Engine/neo-api-windows.ads:1192:91   - Unknown word (Library)             -- External_Name => "LoadLibraryW";
Engine/neo-api-windows.ads:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-api-windows.ads:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-api-windows.ads:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-api-windows.ads:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-api-windows.ads:121:3     - Unknown word (COLOR)               -- COLOR_WINDOW : constant
Engine/neo-api-windows.ads:122:3     - Unknown word (COLOR)               -- COLOR_GRAYTEXT : constant
Engine/neo-api-windows.ads:125:8     - Unknown word (MAXIMIZED)           -- SIZE_MAXIMIZED : constant Int_Ptr
Engine/neo-api-windows.ads:126:8     - Unknown word (MINIMIZED)           -- SIZE_MINIMIZED : constant Int_Ptr
Engine/neo-api-windows.ads:129:6     - Unknown word (SCREENSAVE)          -- SC_SCREENSAVE : constant Int_Ptr
Engine/neo-api-windows.ads:133:7     - Unknown word (TYPEKEYBOARD)        -- RIM_TYPEKEYBOARD : constant Int_Unsigned
Engine/neo-api-windows.ads:134:7     - Unknown word (TYPEMOUSE)           -- RIM_TYPEMOUSE : constant Int_Unsigned
Engine/neo-api-windows.ads:137:3     - Unknown word (FLASHW)              -- FLASHW_TIMER : constant
Engine/neo-api-windows.ads:138:10    - Unknown word (TIMERNOFG)           -- FLASHW_TIMERNOFG : constant Int_Unsigned
Engine/neo-api-windows.ads:138:3     - Unknown word (FLASHW)              -- FLASHW_TIMERNOFG : constant
Engine/neo-api-windows.ads:139:3     - Unknown word (FLASHW)              -- FLASHW_ALL : constant
Engine/neo-api-windows.ads:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-api-windows.ads:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-api-windows.ads:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-api-windows.ads:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-api-windows.ads:140:3     - Unknown word (FLASHW)              -- FLASHW_STOP : constant
Engine/neo-api-windows.ads:149:8     - Unknown word (EXISTING)            -- OPEN_EXISTING : constant Int_Unsigned
Engine/neo-api-windows.ads:152:3     - Unknown word (RIDI)                -- RIDI_DEVICENAME : constant
Engine/neo-api-windows.ads:153:3     - Unknown word (RIDI)                -- RIDI_DEVICEINFO : constant
Engine/neo-api-windows.ads:154:3     - Unknown word (RIDI)                -- RIDI_PREPARSEDDATA : constant
Engine/neo-api-windows.ads:154:8     - Unknown word (PREPARSEDDATA)       -- RIDI_PREPARSEDDATA : constant Int_Unsigned
Engine/neo-api-windows.ads:159:6     - Unknown word (GETFIRSTVISIBLELINE) -- EM_GETFIRSTVISIBLELINE : constant Int_Unsigned
Engine/neo-api-windows.ads:162:6     - Unknown word (SHOWNORMAL)          -- SW_SHOWNORMAL : constant Int_C
Engine/neo-api-windows.ads:163:6     - Unknown word (HIDE)                -- SW_HIDE : constant
Engine/neo-api-windows.ads:164:6     - Unknown word (SHOWMINIMIZED)       -- SW_SHOWMINIMIZED : constant Int_C :=
Engine/neo-api-windows.ads:174:6     - Unknown word (LOADFROMFILE)        -- LR_LOADFROMFILE : constant Int_Unsigned
Engine/neo-api-windows.ads:175:6     - Unknown word (DEFAULTSIZE)         -- LR_DEFAULTSIZE : constant Int_Unsigned
Engine/neo-api-windows.ads:176:9     - Unknown word (CURSOR)              -- IMAGE_CURSOR : constant Int_Unsigned
Engine/neo-api-windows.ads:177:9     - Unknown word (ICON)                -- IMAGE_ICON : constant Int
Engine/neo-api-windows.ads:180:6     - Unknown word (CYDLGFRAME)          -- SM_CYDLGFRAME : constant Int_C :=
Engine/neo-api-windows.ads:181:6     - Unknown word (CYVTHUMB)            -- SM_CYVTHUMB : constant Int_C
Engine/neo-api-windows.ads:182:6     - Unknown word (CXHTHUMB)            -- SM_CXHTHUMB : constant Int_C
Engine/neo-api-windows.ads:183:6     - Unknown word (CYSIZE)              -- SM_CYSIZE : constant Int_C
Engine/neo-api-windows.ads:184:6     - Unknown word (CXFRAME)             -- SM_CXFRAME : constant Int_C
Engine/neo-api-windows.ads:185:6     - Unknown word (CYFRAME)             -- SM_CYFRAME : constant Int_C
Engine/neo-api-windows.ads:188:6     - Unknown word (MODERN)              -- FF_MODERN : constant
Engine/neo-api-windows.ads:18:4      - Unknown word (Binding)      -- -- Binding to the Win32 API: http
Engine/neo-api-windows.ads:190:11    - Unknown word (QUALITY)             -- DEFAULT_QUALITY : constant Int_Unsigned
Engine/neo-api-windows.ads:191:15    - Unknown word (PRECIS)              -- OUT_DEFAULT_PRECIS : constant Int_Unsigned
Engine/neo-api-windows.ads:192:16    - Unknown word (PRECIS)              -- CLIP_DEFAULT_PRECIS : constant Int_Unsigned
Engine/neo-api-windows.ads:192:3     - Unknown word (CLIP)                -- CLIP_DEFAULT_PRECIS : constant
Engine/neo-api-windows.ads:195:3     - Unknown word (WMSZ)                -- WMSZ_BOTTOMRIGHT : constant
Engine/neo-api-windows.ads:196:3     - Unknown word (WMSZ)                -- WMSZ_BOTTOMLEFT : constant
Engine/neo-api-windows.ads:197:3     - Unknown word (WMSZ)                -- WMSZ_TOPRIGHT : constant
Engine/neo-api-windows.ads:198:3     - Unknown word (WMSZ)                -- WMSZ_TOPLEFT : constant
Engine/neo-api-windows.ads:199:3     - Unknown word (WMSZ)                -- WMSZ_BOTTOM : constant
Engine/neo-api-windows.ads:199:8     - Unknown word (BOTTOM)              -- WMSZ_BOTTOM : constant Int
Engine/neo-api-windows.ads:205:3     - Unknown word (RIDEV)               -- RIDEV_INPUTSINK
Engine/neo-api-windows.ads:205:9     - Unknown word (INPUTSINK)           -- RIDEV_INPUTSINK : constant
Engine/neo-api-windows.ads:207:11    - Unknown word (KEYBOARD)            -- USE_RAW_KEYBOARD : constant
Engine/neo-api-windows.ads:213:16    - Unknown word (SIDED)               -- KEY_IS_RIGHT_SIDED : constant
Engine/neo-api-windows.ads:214:52    - Unknown word (Signed)              -- : constant Int_16_Signed := 120;
Engine/neo-api-windows.ads:214:9     - Unknown word (WHEEL)               -- MOUSE_WHEEL_DELTA
Engine/neo-api-windows.ads:217:6     - Unknown word (SYSTEMMODAL)         -- MB_SYSTEMMODAL : constant Int_Unsigned
Engine/neo-api-windows.ads:218:6     - Unknown word (ICONINFORMATION)     -- MB_ICONINFORMATION : constant Int_Unsigned
Engine/neo-api-windows.ads:219:6     - Unknown word (ICONWARNING)         -- MB_ICONWARNING : constant Int_Unsigned
Engine/neo-api-windows.ads:220:6     - Unknown word (ICONERROR)           -- MB_ICONERROR : constant Int
Engine/neo-api-windows.ads:225:3     - Unknown word (IDOK)                -- IDOK : constant
Engine/neo-api-windows.ads:226:3     - Unknown word (IDRETRY)             -- IDRETRY : constant
Engine/neo-api-windows.ads:227:3     - Unknown word (IDYES)               -- IDYES : constant
Engine/neo-api-windows.ads:230:6     - Unknown word (TOPMOST)             -- WS_TOPMOST : constant Int
Engine/neo-api-windows.ads:232:6     - Unknown word (CAPTION)             -- WS_CAPTION : constant Int
Engine/neo-api-windows.ads:234:9     - Unknown word (COMPOSITED)          -- WS_EX_COMPOSITED : constant Int_Unsigned
Engine/neo-api-windows.ads:235:6     - Unknown word (MAXIMIZEBOX)         -- WS_MAXIMIZEBOX : constant Int_Unsigned
Engine/neo-api-windows.ads:236:6     - Unknown word (SYSMENU)             -- WS_SYSMENU : constant Int
Engine/neo-api-windows.ads:237:6     - Unknown word (BORDER)              -- WS_BORDER : constant Int
Engine/neo-api-windows.ads:238:6     - Unknown word (MINIMIZEBOX)         -- WS_MINIMIZEBOX : constant Int_Unsigned
Engine/neo-api-windows.ads:240:6     - Unknown word (DISABLED)            -- WS_DISABLED : constant Int
Engine/neo-api-windows.ads:241:6     - Unknown word (MINIMIZE)            -- WS_MINIMIZE : constant Int
Engine/neo-api-windows.ads:242:6     - Unknown word (VISIBLE)             -- WS_VISIBLE : constant Int
Engine/neo-api-windows.ads:243:6     - Unknown word (SIZEBOX)             -- WS_SIZEBOX : constant Int
Engine/neo-api-windows.ads:250:12    - Unknown word (MIDDLE)              -- RI_MOUSE_MIDDLE_BUTTON_UP : constant
Engine/neo-api-windows.ads:251:12    - Unknown word (MIDDLE)              -- RI_MOUSE_MIDDLE_BUTTON_DOWN : constant
Engine/neo-api-windows.ads:252:12    - Unknown word (HORIZONTAL)          -- RI_MOUSE_HORIZONTAL_WHEEL : constant Int
Engine/neo-api-windows.ads:252:23    - Unknown word (WHEEL)               -- RI_MOUSE_HORIZONTAL_WHEEL : constant Int_Unsigned
Engine/neo-api-windows.ads:253:12    - Unknown word (VERTICAL)            -- RI_MOUSE_VERTICAL_WHEEL : constant
Engine/neo-api-windows.ads:253:21    - Unknown word (WHEEL)               -- RI_MOUSE_VERTICAL_WHEEL : constant Int_Unsigned
Engine/neo-api-windows.ads:265:18    - Unknown word (BACK)               -- XINPUT_GAMEPAD_BACK : constant
Engine/neo-api-windows.ads:266:23    - Unknown word (THUMB)              -- XINPUT_GAMEPAD_LEFT_THUMB : constant Int_
Engine/neo-api-windows.ads:267:24    - Unknown word (THUMB)              -- XINPUT_GAMEPAD_RIGHT_THUMB : constant Int_1
Engine/neo-api-windows.ads:268:23    - Unknown word (SHOULDER)           -- XINPUT_GAMEPAD_LEFT_SHOULDER : constant Int_16_Unsigned
Engine/neo-api-windows.ads:269:24    - Unknown word (SHOULDER)           -- XINPUT_GAMEPAD_RIGHT_SHOULDER : constant Int_16_Unsigned
Engine/neo-api-windows.ads:26:6      - Unknown word (HGLOBAL)      -- -- HGLOBAL Ptr
Engine/neo-api-windows.ads:276:6     - Unknown word (SIZING)             -- WM_SIZING : constant Int
Engine/neo-api-windows.ads:278:6     - Unknown word (CHAR)               -- WM_CHAR : constant
Engine/neo-api-windows.ads:280:6     - Unknown word (CTLCOLORSTATIC)     -- WM_CTLCOLORSTATIC : constant Int_Unsigned
Engine/neo-api-windows.ads:281:6     - Unknown word (GETMINMAXINFO)      -- WM_GETMINMAXINFO : constant Int_Unsigned
Engine/neo-api-windows.ads:283:6     - Unknown word (QUIT)               -- WM_QUIT : constant
Engine/neo-api-windows.ads:28:6      - Unknown word (HANDLE)       -- -- HANDLE Ptr
Engine/neo-api-windows.ads:295:6     - Unknown word (SYSCOMMAND)         -- WM_SYSCOMMAND : constant Int_Unsigned
Engine/neo-api-windows.ads:296:6     - Unknown word (CTLCOLOREDIT)       -- WM_CTLCOLOREDIT : constant Int_Unsigned
Engine/neo-api-windows.ads:297:6     - Unknown word (SETICON)            -- WM_SETICON : constant Int
Engine/neo-api-windows.ads:299:6     - Unknown word (DEVICECHANGE)       -- WM_DEVICECHANGE : constant Int_Unsigned
Engine/neo-api-windows.ads:303:6     - Unknown word (Callbacks)          -- -- Callbacks --
Engine/neo-api-windows.ads:307:8     - Unknown word (HOOKPROC)           -- type HOOKPROC is access function
Engine/neo-api-windows.ads:30:6      - Unknown word (HINSTANCE)    -- -- HINSTANCE Ptr
Engine/neo-api-windows.ads:311:42    - Unknown word (Convention)         -- with Convention => Stdcall;
Engine/neo-api-windows.ads:314:8     - Unknown word (WNDPROC)            -- type WNDPROC is access function
Engine/neo-api-windows.ads:319:41    - Unknown word (Convention)         -- with Convention => Stdcall;
Engine/neo-api-windows.ads:31:6      - Unknown word (HHOOK)        -- -- HHOOK Ptr
Engine/neo-api-windows.ads:322:8     - Unknown word (WNDENUMPROC)        -- type WNDENUMPROC is access function
Engine/neo-api-windows.ads:325:45    - Unknown word (Convention)         -- with Convention => Stdcall;
Engine/neo-api-windows.ads:328:12    - Unknown word (RECT)               -- type Ptr_RECT;
Engine/neo-api-windows.ads:329:71    - Unknown word (HMONITOR)           -- hMonitor : Ptr;      -- HMONITOR
Engine/neo-api-windows.ads:329:8     - Unknown word (MONITORENUMPROC)    -- type MONITORENUMPROC is access function
Engine/neo-api-windows.ads:331:44    - Unknown word (lprc)               -- lprcMonitor : Ptr_RECT;
Engine/neo-api-windows.ads:331:62    - Unknown word (RECT)               -- lprcMonitor : Ptr_RECT; -- LPRECT
Engine/neo-api-windows.ads:331:71    - Unknown word (LPRECT)             -- lprcMonitor : Ptr_RECT; -- LPRECT
Engine/neo-api-windows.ads:334:49    - Unknown word (Convention)         -- with Convention => Stdcall;
Engine/neo-api-windows.ads:337:6     - Unknown word (Structures)         -- -- Structures --
Engine/neo-api-windows.ads:33:20     - Unknown word (Char)         -- -- LPTSTR    Ptr_Char_16_C
Engine/neo-api-windows.ads:342:9     - Unknown word (Length)             -- nLength : Int_Unsigned
Engine/neo-api-windows.ads:344:16    - Unknown word (Handle)             -- bInheritHandle : Int_C
Engine/neo-api-windows.ads:344:9     - Unknown word (Inherit)            -- bInheritHandle : Int_C
Engine/neo-api-windows.ads:345:21    - Unknown word (Convention)         -- end record with Convention => C;
Engine/neo-api-windows.ads:348:8     - Unknown word (FLASHWINFO)         -- type FLASHWINFO is record
Engine/neo-api-windows.ads:349:37    - Unknown word (FLASHWINFO)         -- : Int_Unsigned_C := FLASHWINFO'Size / Byte'Object_Size
Engine/neo-api-windows.ads:34:20     - Unknown word (Char)         -- -- LPCTSTR   Ptr_Char_16_C
Engine/neo-api-windows.ads:351:9     - Unknown word (Flags)              -- dwFlags : Int_Unsigned_C
Engine/neo-api-windows.ads:353:9     - Unknown word (Timeout)            -- dwTimeout : Int_Unsigned_C :=
Engine/neo-api-windows.ads:357:8     - Unknown word (STARTUPINFO)        -- type STARTUPINFO is record
Engine/neo-api-windows.ads:358:49    - Unknown word (STARTUPINFO)        -- Unsigned_C := STARTUPINFO'Size / Byte'Object_Size
Engine/neo-api-windows.ads:359:29    - Unknown word (Char)               -- lpReserved : Ptr_Char_16_C := null
Engine/neo-api-windows.ads:360:29    - Unknown word (Char)               -- lpDesktop : Ptr_Char_16_C := null
Engine/neo-api-windows.ads:361:29    - Unknown word (Char)               -- lpTitle : Ptr_Char_16_C := null
Engine/neo-api-windows.ads:366:15    - Unknown word (Chars)              -- dwXCountChars : Int_Unsigned_C
Engine/neo-api-windows.ads:367:15    - Unknown word (Chars)              -- dwYCountChars : Int_Unsigned_C
Engine/neo-api-windows.ads:368:9     - Unknown word (Fill)               -- dwFillAttribute : Int_Unsigned
Engine/neo-api-windows.ads:369:9     - Unknown word (Flags)              -- dwFlags : Int_Unsigned
Engine/neo-api-windows.ads:372:62    - Unknown word (LPBYTE)             -- Unsigned_C := null;     -- LPBYTE
Engine/neo-api-windows.ads:373:62    - Unknown word (HANDLE)             -- := NULL_PTR; -- HANDLE
Engine/neo-api-windows.ads:374:62    - Unknown word (HANDLE)             -- := NULL_PTR; -- HANDLE
Engine/neo-api-windows.ads:375:62    - Unknown word (HANDLE)             -- := NULL_PTR; -- HANDLE
Engine/neo-api-windows.ads:380:52    - Unknown word (HANDLE)             -- := NULL_PTR; -- HANDLE
Engine/neo-api-windows.ads:387:8     - Unknown word (RECT)               -- type RECT is record
Engine/neo-api-windows.ads:391:7     - Unknown word (bottom)             -- bottom : Int_C := 0; -- LONG
Engine/neo-api-windows.ads:393:12    - Unknown word (RECT)               -- type Ptr_RECT is access all RECT;
Engine/neo-api-windows.ads:393:31    - Unknown word (RECT)               -- Ptr_RECT is access all RECT;
Engine/neo-api-windows.ads:397:8     - Unknown word (MONITORINFO)        -- type MONITORINFO is record
Engine/neo-api-windows.ads:398:37    - Unknown word (MONITORINFO)        -- : Int_Unsigned_C := MONITORINFO'Size / Byte'Object_Size
Engine/neo-api-windows.ads:39:20     - Unknown word (Unsigned)     -- -- UINT      Int_Unsigned_C
Engine/neo-api-windows.ads:401:9     - Unknown word (Flags)             -- dwFlags : Int_Unsigned_C
Engine/neo-api-windows.ads:40:20     - Unknown word (Unsigned)     -- -- DWORD     Int_Unsigned_C
Engine/neo-api-windows.ads:41:22     - Unknown word (Unsigned)     -- -- BYTE      Int_8_Unsigned_C
Engine/neo-api-windows.ads:422:8     - Unknown word (WNDCLASSEX)        -- type WNDCLASSEX is record
Engine/neo-api-windows.ads:423:41    - Unknown word (WNDCLASSEX)        -- : Int_Unsigned_C := WNDCLASSEX'Size / Byte'Object_Size
Engine/neo-api-windows.ads:424:7     - Unknown word (style)             -- style : Int_Unsigned
Engine/neo-api-windows.ads:425:14    - Unknown word (Proc)              -- lpfnWndProc : Address
Engine/neo-api-windows.ads:425:54    - Unknown word (WNDPROC)           -- := NULL_PTR; -- WNDPROC
Engine/neo-api-windows.ads:425:7     - Unknown word (lpfn)              -- lpfnWndProc : Address
Engine/neo-api-windows.ads:428:54    - Unknown word (HINSTANCE)         -- := NULL_PTR; -- HINSTANCE
Engine/neo-api-windows.ads:42:23     - Unknown word (Signed)       -- -- SHORT     Int_16_Signed_C
Engine/neo-api-windows.ads:431:10    - Unknown word (Background)        -- hbrBackground : Int_Ptr        :=
Engine/neo-api-windows.ads:432:7     - Unknown word (lpsz)              -- lpszMenuName : Ptr_Char
Engine/neo-api-windows.ads:433:7     - Unknown word (lpsz)              -- lpszClassName : Ptr_Char
Engine/neo-api-windows.ads:434:8     - Unknown word (Icon)              -- hIconSm : Ptr
Engine/neo-api-windows.ads:442:30    - Unknown word (Signed)            -- sThumbLX : Int_16_Signed_C := 0; -- SHORT
Engine/neo-api-windows.ads:442:8     - Unknown word (Thumb)             -- sThumbLX : Int_16_Signed
Engine/neo-api-windows.ads:443:30    - Unknown word (Signed)            -- sThumbLY : Int_16_Signed_C := 0; -- SHORT
Engine/neo-api-windows.ads:443:8     - Unknown word (Thumb)             -- sThumbLY : Int_16_Signed
Engine/neo-api-windows.ads:444:30    - Unknown word (Signed)            -- sThumbRX : Int_16_Signed_C := 0; -- SHORT
Engine/neo-api-windows.ads:444:8     - Unknown word (Thumb)             -- sThumbRX : Int_16_Signed
Engine/neo-api-windows.ads:445:8     - Unknown word (Thumb)             -- sThumbRY : Int_16_Signed
Engine/neo-api-windows.ads:450:9     - Unknown word (Packet)            -- dwPacketNumber : Int_Unsigned
Engine/neo-api-windows.ads:455:15    - Unknown word (VIBRATION)         -- type XINPUT_VIBRATION is record
Engine/neo-api-windows.ads:456:17    - Unknown word (Speed)             -- wLeftMotorSpeed : Int_16_Unsigned_C
Engine/neo-api-windows.ads:457:18    - Unknown word (Speed)             -- wRightMotorSpeed : Int_16_Unsigned_C
Engine/neo-api-windows.ads:461:7     - Unknown word (RAWINPUTDEVICE)    -- type RAWINPUTDEVICE is record
Engine/neo-api-windows.ads:464:9     - Unknown word (Flags)             -- dwFlags : Int_Unsigned_C
Engine/neo-api-windows.ads:469:8     - Unknown word (RAWINPUTDEVICELIST) -- type RAWINPUTDEVICELIST is record
Engine/neo-api-windows.ads:46:6      - Unknown word (Flags)        -- -- Flags --
Engine/neo-api-windows.ads:475:8     - Unknown word (RAWINPUTHEADER)     -- type RAWINPUTHEADER is record
Engine/neo-api-windows.ads:483:8     - Unknown word (RAWKEYBOARD)        -- type RAWKEYBOARD is record
Engine/neo-api-windows.ads:484:26    - Unknown word (RAWINPUTHEADER)     -- Header : RAWINPUTHEADER := (others => <>
Engine/neo-api-windows.ads:484:66    - Unknown word (RAWINPUTHEADER)     -- (others => <>); -- RAWINPUTHEADER
Engine/neo-api-windows.ads:494:8     - Unknown word (RAWMOUSE)           -- type RAWMOUSE is record
Engine/neo-api-windows.ads:495:28    - Unknown word (RAWINPUTHEADER)     -- Header : RAWINPUTHEADER := (others => <>
Engine/neo-api-windows.ads:495:68    - Unknown word (RAWINPUTHEADER)     -- (others => <>); -- RAWINPUTHEADER
Engine/neo-api-windows.ads:518:8     - Unknown word (Track)              -- nTrackPos : Int_C
Engine/neo-api-windows.ads:526:12    - Unknown word (Track)              -- ptMinTrackSize : POINT := (others
Engine/neo-api-windows.ads:527:12    - Unknown word (Track)              -- ptMaxTrackSize : POINT := (others
Engine/neo-api-windows.ads:533:8     - Unknown word (LOGFONT)            -- type LOGFONT is record
Engine/neo-api-windows.ads:534:9     - Unknown word (Height)             -- lfHeight : Int_C
Engine/neo-api-windows.ads:535:9     - Unknown word (Width)              -- lfWidth : Int_C
Engine/neo-api-windows.ads:536:9     - Unknown word (Escapement)         -- lfEscapement : Int_C
Engine/neo-api-windows.ads:537:9     - Unknown word (Orientation)        -- lfOrientation : Int_C
Engine/neo-api-windows.ads:538:9     - Unknown word (Weight)             -- lfWeight : Int_C
Engine/neo-api-windows.ads:539:9     - Unknown word (Italic)             -- lfItalic : Int_8_Unsigned
Engine/neo-api-windows.ads:53:7      - Unknown word (STYLE)        -- GWL_STYLE : constant Int_C :=
Engine/neo-api-windows.ads:540:9     - Unknown word (Underline)          -- lfUnderline : Int_8_Unsigned
Engine/neo-api-windows.ads:541:9     - Unknown word (Strike)             -- lfStrikeOut : Int_8_Unsigned
Engine/neo-api-windows.ads:544:9     - Unknown word (Clip)               -- lfClipPrecision : Int_8_Unsigned
Engine/neo-api-windows.ads:545:9     - Unknown word (Quality)            -- lfQuality : Int_8_Unsigned
Engine/neo-api-windows.ads:546:9     - Unknown word (Pitch)              -- lfPitchAndFamily : Int_8_Unsigned
Engine/neo-api-windows.ads:547:62    - Unknown word (CHAR)               -- := (others => NULL_CHAR_16_C); -- TCHAR [LF
Engine/neo-api-windows.ads:547:87    - Unknown word (FACESIZE)           -- 16_C); -- TCHAR [LF_FACESIZE]
Engine/neo-api-windows.ads:551:8     - Unknown word (NONCLIENTMETRICS)   -- type NONCLIENTMETRICS is record
Engine/neo-api-windows.ads:552:54    - Unknown word (NONCLIENTMETRICS)   -- Int_Unsigned_C := NONCLIENTMETRICS'Size / Byte'Object_Size
Engine/neo-api-windows.ads:553:14    - Unknown word (Width)              -- iBorderWidth :         Int
Engine/neo-api-windows.ads:553:8     - Unknown word (Border)             -- iBorderWidth :
Engine/neo-api-windows.ads:554:14    - Unknown word (Width)              -- iScrollWidth :         Int
Engine/neo-api-windows.ads:554:8     - Unknown word (Scroll)             -- iScrollWidth :
Engine/neo-api-windows.ads:555:14    - Unknown word (Height)             -- iScrollHeight :         Int_C
Engine/neo-api-windows.ads:555:8     - Unknown word (Scroll)             -- iScrollHeight :
Engine/neo-api-windows.ads:556:15    - Unknown word (Width)              -- iCaptionWidth :         Int_C
Engine/neo-api-windows.ads:556:8     - Unknown word (Caption)            -- iCaptionWidth :
Engine/neo-api-windows.ads:557:15    - Unknown word (Height)             -- iCaptionHeight :         Int_C
Engine/neo-api-windows.ads:557:8     - Unknown word (Caption)            -- iCaptionHeight :
Engine/neo-api-windows.ads:558:16    - Unknown word (Font)               -- lfCaptionFont : aliased LOGFONT
Engine/neo-api-windows.ads:558:36    - Unknown word (LOGFONT)            -- lfCaptionFont : aliased LOGFONT := (others => <>);
Engine/neo-api-windows.ads:558:66    - Unknown word (LOGFONT)            -- (others => <>); -- LOGFONT
Engine/neo-api-windows.ads:558:9     - Unknown word (Caption)            -- lfCaptionFont : aliased LOGFONT
Engine/neo-api-windows.ads:559:10    - Unknown word (Caption)            -- iSmCaptionWidth :         Int
Engine/neo-api-windows.ads:559:17    - Unknown word (Width)              -- iSmCaptionWidth :         Int_C
Engine/neo-api-windows.ads:560:10    - Unknown word (Caption)            -- iSmCaptionHeight :         Int
Engine/neo-api-windows.ads:560:17    - Unknown word (Height)             -- iSmCaptionHeight :         Int_C
Engine/neo-api-windows.ads:561:18    - Unknown word (Font)               -- lfSmCaptionFont : aliased LOGFONT
Engine/neo-api-windows.ads:561:36    - Unknown word (LOGFONT)            -- lfSmCaptionFont : aliased LOGFONT := (others => <>);
Engine/neo-api-windows.ads:561:66    - Unknown word (LOGFONT)            -- (others => <>); -- LOGFONT
Engine/neo-api-windows.ads:563:12    - Unknown word (Height)             -- iMenuHeight :         Int
Engine/neo-api-windows.ads:564:13    - Unknown word (Font)               -- lfMenuFont : aliased LOGFONT
Engine/neo-api-windows.ads:565:15    - Unknown word (Font)               -- lfStatusFont : aliased LOGFONT
Engine/neo-api-windows.ads:566:16    - Unknown word (Font)               -- lfMessageFont : aliased LOGFONT
Engine/neo-api-windows.ads:567:14    - Unknown word (Border)             -- iPaddedBorderWidth :         Int_C
Engine/neo-api-windows.ads:567:8     - Unknown word (Padded)             -- iPaddedBorderWidth :
Engine/neo-api-windows.ads:56:7      - Unknown word (EXSTYLE)      -- GWL_EXSTYLE : constant Int_C :=
Engine/neo-api-windows.ads:571:8     - Unknown word (TEXTMETRIC)         -- type TEXTMETRIC is record
Engine/neo-api-windows.ads:573:9     - Unknown word (Ascent)             -- tmAscent : Int_C
Engine/neo-api-windows.ads:574:9     - Unknown word (Descent)            -- tmDescent : Int_C
Engine/neo-api-windows.ads:575:17    - Unknown word (Leading)           -- tmInternalLeading : Int_C
Engine/neo-api-windows.ads:575:9     - Unknown word (Internal)           -- tmInternalLeading : Int_C
Engine/neo-api-windows.ads:576:17    - Unknown word (Leading)           -- tmExternalLeading : Int_C
Engine/neo-api-windows.ads:579:9     - Unknown word (Weight)            -- tmWeight : Int_C
Engine/neo-api-windows.ads:580:9     - Unknown word (Overhang)          -- tmOverhang : Int_C
Engine/neo-api-windows.ads:581:18    - Unknown word (Aspect)            -- tmDigitizedAspectX : Int_C
Engine/neo-api-windows.ads:581:9     - Unknown word (Digitized)         -- tmDigitizedAspectX : Int_C
Engine/neo-api-windows.ads:582:18    - Unknown word (Aspect)            -- tmDigitizedAspectY : Int_C
Engine/neo-api-windows.ads:582:9     - Unknown word (Digitized)         -- tmDigitizedAspectY : Int_C
Engine/neo-api-windows.ads:583:53    - Unknown word (CHAR)              -- 16_C := NULL_CHAR_16_C; -- TCHAR
Engine/neo-api-windows.ads:584:53    - Unknown word (CHAR)              -- 16_C := NULL_CHAR_16_C; -- TCHAR
Engine/neo-api-windows.ads:585:53    - Unknown word (CHAR)              -- 16_C := NULL_CHAR_16_C; -- TCHAR
Engine/neo-api-windows.ads:586:9     - Unknown word (Break)             -- tmBreakChar : Char_1
Engine/neo-api-windows.ads:587:9     - Unknown word (Italic)            -- tmItalic : Int_8_Unsigned
Engine/neo-api-windows.ads:588:9     - Unknown word (Underlined)        -- tmUnderlined : Int_8_Unsigned
Engine/neo-api-windows.ads:589:9     - Unknown word (Struck)            -- tmStruckOut : Int_8_Unsigned
Engine/neo-api-windows.ads:590:9     - Unknown word (Pitch)             -- tmPitchAndFamily : Int_8_Unsigned
Engine/neo-api-windows.ads:595:6     - Unknown word (Subprograms)       -- -- Subprograms --
Engine/neo-api-windows.ads:59:3      - Unknown word (GCLP)         -- GCLP_HCURSOR : constant Int
Engine/neo-api-windows.ads:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo-api-windows.ads:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo-api-windows.ads:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo-api-windows.ads:602:59    - Unknown word (REGSAM)            -- Int_Unsigned_C; -- REGSAM
Engine/neo-api-windows.ads:603:59    - Unknown word (PHKEY)             -- Ptr_Ptr) -- PHKEY
Engine/neo-api-windows.ads:605:42    - Unknown word (True)              -- with Import => True, Convention => StdCall
Engine/neo-api-windows.ads:610:40    - Unknown word (True)              -- with Import => True, Convention => StdCall
Engine/neo-api-windows.ads:617:67    - Unknown word (LPBYTE)            -- Ptr; -- LPBYTE
Engine/neo-api-windows.ads:618:30    - Unknown word (lpcb)              -- lpcbData : Ptr_Int_Unsigned
Engine/neo-api-windows.ads:620:45    - Unknown word (True)              -- with Import => True, Convention => StdCall
Engine/neo-api-windows.ads:625:32    - Unknown word (Mode)              -- dwShareMode :        Int
Engine/neo-api-windows.ads:626:80    - Unknown word (LPSECURITY)        -- SECURITY_ATTRIBUTES; -- LPSECURITY_ATTRIBUTES
Engine/neo-api-windows.ads:627:35    - Unknown word (Disposition)       -- dwCreationDisposition :        Int_Unsigned
Engine/neo-api-windows.ads:62:3      - Unknown word (DIALOG)       -- DIALOG_CLASS : constant Str
Engine/neo-api-windows.ads:631:40    - Unknown word (True)              -- with Import => True, Convention => StdCall
Engine/neo-api-windows.ads:634:27    - Unknown word (String)            -- function HidD_GetProductString (HidDeviceObject : Ptr
Engine/neo-api-windows.ads:636:41    - Unknown word (Length)            -- BufferLength : Int_Unsigned_C
Engine/neo-api-windows.ads:638:112   - Unknown word (String)            -- Name => "HidD_GetProductString";
Engine/neo-api-windows.ads:638:50    - Unknown word (True)              -- with Import => True, Convention => StdCall
Engine/neo-api-windows.ads:641:20    - Unknown word (Manufacturer)      -- function HidD_GetManufacturerString (HidDeviceObject
Engine/neo-api-windows.ads:641:32    - Unknown word (String)            -- HidD_GetManufacturerString (HidDeviceObject : Ptr
Engine/neo-api-windows.ads:643:46    - Unknown word (Length)            -- BufferLength : Int_Unsigned_C
Engine/neo-api-windows.ads:645:110   - Unknown word (Manufacturer)      -- External_Name => "HidD_GetManufacturerString";
Engine/neo-api-windows.ads:645:122   - Unknown word (String)            -- HidD_GetManufacturerString";
Engine/neo-api-windows.ads:651:67    - Unknown word (PUINT)             -- Ptr) -- PUINT
Engine/neo-api-windows.ads:656:15    - Unknown word (Proc)              -- function GetProcAddress (hModule
Engine/neo-api-windows.ads:657:30    - Unknown word (Proc)              -- lpProcName : Str_8_C) -- LPCSTR
Engine/neo-api-windows.ads:657:53    - Unknown word (LPCSTR)            -- lpProcName : Str_8_C) -- LPCSTR
Engine/neo-api-windows.ads:658:53    - Unknown word (FARPROC)           -- return Ptr            -- FARPROC
Engine/neo-api-windows.ads:659:93    - Unknown word (Proc)              -- External_Name => "GetProcAddress";
Engine/neo-api-windows.ads:65:6      - Unknown word (CLICKACTIVE)  -- WA_CLICKACTIVE : constant Int_Ptr
Engine/neo-api-windows.ads:662:16    - Unknown word (Library)           -- function FreeLibrary (hModule : Ptr) -- HMODULE
Engine/neo-api-windows.ads:664:91    - Unknown word (Library)           -- External_Name => "FreeLibrary";
Engine/neo-api-windows.ads:667:17    - Unknown word (Quit)              -- procedure PostQuitMessage (nExitCode :
Engine/neo-api-windows.ads:668:96    - Unknown word (Quit)              -- External_Name => "PostQuitMessage";
Engine/neo-api-windows.ads:681:15    - Unknown word (Module)            -- function GetModuleFileNameW (hModule
Engine/neo-api-windows.ads:685:97    - Unknown word (Module)            -- External_Name => "GetModuleFileNameW";
Engine/neo-api-windows.ads:68:28     - Unknown word (Unsigned)     -- REMOVE : constant Int_Unsigned_C := 16#0000_0001#;
Engine/neo-api-windows.ads:700:12    - Unknown word (Hide)              -- function HideCaret (hWnd : Ptr) -
Engine/neo-api-windows.ads:700:16    - Unknown word (Caret)             -- function HideCaret (hWnd : Ptr) -- HWND
Engine/neo-api-windows.ads:702:84    - Unknown word (Hide)              -- StdCall, External_Name => "HideCaret";
Engine/neo-api-windows.ads:702:88    - Unknown word (Caret)             -- External_Name => "HideCaret";
Engine/neo-api-windows.ads:706:27    - Unknown word (Bytes)             -- dwBytes : Int_Size_C)     -
Engine/neo-api-windows.ads:707:54    - Unknown word (HGLOBAL)           -- Ptr -- HGLOBAL
Engine/neo-api-windows.ads:711:39    - Unknown word (HGLOBAL)           -- GlobalLock (hMem : Ptr) -- HGLOBAL
Engine/neo-api-windows.ads:716:42    - Unknown word (HGLOBAL)           -- GlobalUnlock (hMem : Ptr)  -- HGLOBAL
Engine/neo-api-windows.ads:71:54     - Unknown word (MAKEINTRESOURCE) -- Ptr := 16#7F00#; -- MAKEINTRESOURCE (0)
Engine/neo-api-windows.ads:721:16    - Unknown word (Clipboard)         -- function OpenClipboard (hWndNewOwner : Ptr
Engine/neo-api-windows.ads:723:93    - Unknown word (Clipboard)         -- External_Name => "OpenClipboard";
Engine/neo-api-windows.ads:726:39    - Unknown word (HGLOBAL)           -- GlobalFree (hMem : Ptr) -- HGLOBAL
Engine/neo-api-windows.ads:731:12    - Unknown word (Empty)            -- function EmptyClipboard return Int
Engine/neo-api-windows.ads:731:17    - Unknown word (Clipboard)        -- function EmptyClipboard return Int_C -- BOOL
Engine/neo-api-windows.ads:732:89    - Unknown word (Empty)            -- StdCall, External_Name => "EmptyClipboard";
Engine/neo-api-windows.ads:732:94    - Unknown word (Clipboard)        -- External_Name => "EmptyClipboard";
Engine/neo-api-windows.ads:735:15    - Unknown word (Clipboard)        -- function SetClipboardData (uFormat : Int_Unsigned
Engine/neo-api-windows.ads:74:54     - Unknown word (MAKEINTRESOURCE) -- Ptr := 16#7F00#; -- MAKEINTRESOURCE (0)
Engine/neo-api-windows.ads:74:7      - Unknown word (APPSTARTING)     -- IDC_APPSTARTING : constant Int_Ptr
Engine/neo-api-windows.ads:750:12    - Unknown word (Flash)            -- function FlashWindowEx (pfwi : access
Engine/neo-api-windows.ads:750:27    - Unknown word (pfwi)             -- function FlashWindowEx (pfwi : access FLASHWINFO
Engine/neo-api-windows.ads:750:41    - Unknown word (FLASHWINFO)       -- FlashWindowEx (pfwi : access FLASHWINFO) -- PFLASHWINFO
Engine/neo-api-windows.ads:750:56    - Unknown word (PFLASHWINFO)      -- access FLASHWINFO) -- PFLASHWINFO
Engine/neo-api-windows.ads:752:89    - Unknown word (Flash)            -- StdCall, External_Name => "FlashWindowEx";
Engine/neo-api-windows.ads:757:82    - Unknown word (LPSECURITY)       -- SECURITY_ATTRIBUTES; -- LPSECURITY_ATTRIBUTES
Engine/neo-api-windows.ads:758:82    - Unknown word (LPSECURITY)       -- SECURITY_ATTRIBUTES; -- LPSECURITY_ATTRIBUTES
Engine/neo-api-windows.ads:759:29    - Unknown word (Inherit)          -- bInheritHandles :
Engine/neo-api-windows.ads:759:36    - Unknown word (Handles)          -- bInheritHandles :        Int_C
Engine/neo-api-windows.ads:763:30    - Unknown word (Startup)          -- lpStartupInfo : access
Engine/neo-api-windows.ads:763:58    - Unknown word (STARTUPINFO)      -- lpStartupInfo : access STARTUPINFO; -- LPSTARTUPINFO
Engine/neo-api-windows.ads:763:82    - Unknown word (LPSTARTUPINFO)    -- STARTUPINFO; -- LPSTARTUPINFO
Engine/neo-api-windows.ads:764:82    - Unknown word (LPPROCESS)        -- PROCESS_INFORMATION) -- LPPROCESS_INFORMATION
Engine/neo-api-windows.ads:770:60    - Unknown word (PBOOL)            -- Process : access Int_C) -- PBOOL
Engine/neo-api-windows.ads:77:30     - Unknown word (Unsigned)        -- INVALID : constant Int_Unsigned_C := 16#FFFF_FFFF#;
Engine/neo-api-windows.ads:77:7      - Unknown word (INVALID)         -- CLR_INVALID : constant Int_Unsigned
Engine/neo-api-windows.ads:786:24    - Unknown word (hinst)            -- function LoadImageW (hinst : Ptr;
Engine/neo-api-windows.ads:786:55    - Unknown word (HINSTANCE)        -- Ptr; -- HINSTANCE
Engine/neo-api-windows.ads:787:24    - Unknown word (lpsz)             -- lpszName : Ptr_Char_16_C
Engine/neo-api-windows.ads:796:16    - Unknown word (Icon)             -- function LoadIconW (hInstance  : Ptr;
Engine/neo-api-windows.ads:796:48    - Unknown word (HINSTANCE)        -- hInstance : Ptr;     -- HINSTANCE
Engine/neo-api-windows.ads:797:25    - Unknown word (Icon)             -- lpIconName : Int_Ptr) -- LPCTSTR
Engine/neo-api-windows.ads:799:89    - Unknown word (Icon)             -- External_Name => "LoadIconW";
Engine/neo-api-windows.ads:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-api-windows.ads:802:16    - Unknown word (Cursor)           -- function LoadCursorW (hInstance    : Ptr
Engine/neo-api-windows.ads:802:52    - Unknown word (HINSTANCE)        -- hInstance : Ptr;     -- HINSTANCE
Engine/neo-api-windows.ads:803:27    - Unknown word (Cursor)           -- lpCursorName : Int_Ptr) -- LPCTSTR
Engine/neo-api-windows.ads:805:91    - Unknown word (Cursor)           -- External_Name => "LoadCursorW";
Engine/neo-api-windows.ads:808:15    - Unknown word (Focus)            -- function SetFocus (hWnd : Ptr) -- HWND
Engine/neo-api-windows.ads:80:6      - Unknown word (UNICODETEXT)     -- CF_UNICODETEXT : constant Int_Unsigned
Engine/neo-api-windows.ads:810:87    - Unknown word (Focus)            -- External_Name => "SetFocus";
Engine/neo-api-windows.ads:813:16    - Unknown word (Cursor)           -- function ShowCursor (bShow : Int_C) -- BOOL
Engine/neo-api-windows.ads:815:90    - Unknown word (Cursor)           -- External_Name => "ShowCursor";
Engine/neo-api-windows.ads:818:15    - Unknown word (Clip)             -- function GetClipCursor (lpRect : Ptr
Engine/neo-api-windows.ads:818:29    - Unknown word (Rect)             -- function GetClipCursor (lpRect : Ptr_RECT) -- LPRECT
Engine/neo-api-windows.ads:818:49    - Unknown word (LPRECT)           -- lpRect : Ptr_RECT) -- LPRECT
Engine/neo-api-windows.ads:820:92    - Unknown word (Clip)             -- External_Name => "GetClipCursor";
Engine/neo-api-windows.ads:823:53    - Unknown word (LPPOINT)          -- lpPoint : access POINT) -- LPPOINT
Engine/neo-api-windows.ads:828:15    - Unknown word (Module)           -- function GetModuleHandleW (lpModuleName
Engine/neo-api-windows.ads:828:21    - Unknown word (Handle)           -- function GetModuleHandleW (lpModuleName : Ptr
Engine/neo-api-windows.ads:828:32    - Unknown word (Module)           -- GetModuleHandleW (lpModuleName : Ptr_Char_16_C
Engine/neo-api-windows.ads:830:101   - Unknown word (Handle)           -- External_Name => "GetModuleHandleW";
Engine/neo-api-windows.ads:830:95    - Unknown word (Module)           -- External_Name => "GetModuleHandleW";
Engine/neo-api-windows.ads:833:12    - Unknown word (Unhook)           -- function UnhookWindowsHookEx (hhk :
Engine/neo-api-windows.ads:833:49    - Unknown word (HHOOK)            -- indowsHookEx (hhk : Ptr)   -- HHOOK
Engine/neo-api-windows.ads:835:95    - Unknown word (Unhook)           -- StdCall, External_Name => "UnhookWindowsHookEx";
Engine/neo-api-windows.ads:839:31    - Unknown word (lpfn)             -- lpfn : Ptr;
Engine/neo-api-windows.ads:839:63    - Unknown word (HOOKPROC)         -- Ptr; -- HOOKPROC
Engine/neo-api-windows.ads:83:3      - Unknown word (GMEM)            -- GMEM_MOVEABLE : constant
Engine/neo-api-windows.ads:83:8      - Unknown word (MOVEABLE)        -- GMEM_MOVEABLE : constant Int_Unsigned
Engine/neo-api-windows.ads:842:63    - Unknown word (HHOOK)            -- -- HHOOK
Engine/neo-api-windows.ads:854:33    - Unknown word (Style)            -- CreateWindowExW (dwExStyle : Int_Unsigned_C
Engine/neo-api-windows.ads:857:31    - Unknown word (Style)            -- dwStyle : Int_Unsigned
Engine/neo-api-windows.ads:863:63    - Unknown word (HMENU)            -- Int_Ptr; -- HMENU
Engine/neo-api-windows.ads:86:7      - Unknown word (GETNONCLIENTMETRICS) -- SPI_GETNONCLIENTMETRICS : constant Int_Unsigned
Engine/neo-api-windows.ads:875:77    - Unknown word (LPSECURITY)       -- SECURITY_ATTRIBUTES; -- LPSECURITY_ATTRIBUTES
Engine/neo-api-windows.ads:876:27    - Unknown word (Initial)          -- bInitialOwner :        Int
Engine/neo-api-windows.ads:887:12    - Unknown word (Find)             -- function FindWindowW (lpClassName
Engine/neo-api-windows.ads:890:87    - Unknown word (Find)             -- StdCall, External_Name => "FindWindowW";
Engine/neo-api-windows.ads:894:36    - Unknown word (After)            -- hWndInsertAfter : Ptr;            -
Engine/neo-api-windows.ads:89:9      - Unknown word (INSUFFICIENT)        -- ERROR_INSUFFICIENT_BUFFER : constant Int
Engine/neo-api-windows.ads:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-api-windows.ads:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-api-windows.ads:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo-api-windows.ads:904:63    - Unknown word (HMONITOR)         -- Ptr; -- HMONITOR
Engine/neo-api-windows.ads:905:29    - Unknown word (lpmi)             -- lpmi : access MONITORINFO
Engine/neo-api-windows.ads:905:47    - Unknown word (MONITORINFO)      -- lpmi : access MONITORINFO) -- LPMONITORINFO
Engine/neo-api-windows.ads:905:63    - Unknown word (LPMONITORINFO)    -- access MONITORINFO) -- LPMONITORINFO
Engine/neo-api-windows.ads:910:23    - Unknown word (Monitors)         -- function EnumDisplayMonitors (hdc      : Ptr;
Engine/neo-api-windows.ads:911:33    - Unknown word (lprc)             -- lprcClip : Ptr_RECT; -- LPCRECT
Engine/neo-api-windows.ads:911:37    - Unknown word (Clip)             -- lprcClip : Ptr_RECT; -- LPCRECT
Engine/neo-api-windows.ads:911:57    - Unknown word (LPCRECT)         -- lprcClip : Ptr_RECT; -- LPCRECT
Engine/neo-api-windows.ads:912:33    - Unknown word (lpfn)            -- lpfnEnum : Ptr;      -- MONITORENU
Engine/neo-api-windows.ads:912:57    - Unknown word (MONITORENUMPROC) -- lpfnEnum : Ptr;      -- MONITORENUMPROC
Engine/neo-api-windows.ads:915:106   - Unknown word (Monitors)        -- Name => "EnumDisplayMonitors";
Engine/neo-api-windows.ads:918:21    - Unknown word (Rect)            -- function GetWindowRect (hWnd   : Ptr;
Engine/neo-api-windows.ads:919:29    - Unknown word (Rect)            -- lpRect : Ptr_RECT) -- LPRECT
Engine/neo-api-windows.ads:919:49    - Unknown word (LPRECT)          -- lpRect : Ptr_RECT) -- LPRECT
Engine/neo-api-windows.ads:921:98    - Unknown word (Rect)            -- External_Name => "GetWindowRect";
Engine/neo-api-windows.ads:935:21    - Unknown word (Proc)            -- function DefWindowProcW (hWnd   : Ptr;
Engine/neo-api-windows.ads:943:15    - Unknown word (Foreground)      -- function SetForegroundWindow (hWnd : Ptr)
Engine/neo-api-windows.ads:945:98    - Unknown word (Foreground)      -- External_Name => "SetForegroundWindow";
Engine/neo-api-windows.ads:953:12    - Unknown word (Redraw)          -- function RedrawWindow (hWnd       :
Engine/neo-api-windows.ads:954:26    - Unknown word (lprc)            -- lprcUpdate : Ptr_RECT;
Engine/neo-api-windows.ads:955:26    - Unknown word (hrgn)            -- hrgnUpdate : Ptr;
Engine/neo-api-windows.ads:955:58    - Unknown word (HRGN)            -- Ptr; -- HRGN
Engine/neo-api-windows.ads:956:26    - Unknown word (flags)           -- flags : Int_Unsigned
Engine/neo-api-windows.ads:958:88    - Unknown word (Redraw)          -- StdCall, External_Name => "RedrawWindow";
Engine/neo-api-windows.ads:972:21    - Unknown word (Caps)            -- function GetDeviceCaps (hdc    : Ptr;   --
Engine/neo-api-windows.ads:975:98    - Unknown word (Caps)            -- External_Name => "GetDeviceCaps";
Engine/neo-api-windows.ads:978:26    - Unknown word (Virt)            -- function GetKeyState (nVirtKey : Int_C)
Engine/neo-api-windows.ads:983:30    - Unknown word (lpwcx)           -- function RegisterClassExW (lpwcx : access WNDCLASSEX
Engine/neo-api-windows.ads:983:45    - Unknown word (WNDCLASSEX)      -- isterClassExW (lpwcx : access WNDCLASSEX) -- const WNDCLASSEX
Engine/neo-api-windows.ads:983:66    - Unknown word (WNDCLASSEX)      -- WNDCLASSEX) -- const WNDCLASSEX*
Engine/neo-api-windows.ads:989:29    - Unknown word (Vibration)       -- pVibration : Ptr) -- access XINPUT
Engine/neo-api-windows.ads:989:64    - Unknown word (VIBRATION)       -- Ptr) -- access XINPUT_VIBRATION) -- XINPUT_VIBRATION
Engine/neo-api-windows.ads:989:85    - Unknown word (VIBRATION)       -- VIBRATION) -- XINPUT_VIBRATION*
Engine/neo-api-windows.ads:98:6      - Unknown word (VERT)                -- SB_VERT : constant Int_C :=
Engine/neo-api-zdelta.ads:104:29    - Unknown word (Bytef)        -- next_in :  := ; -- Bytef*
Engine/neo-api-zdelta.ads:105:7     - Unknown word (avail)        -- avail_in :  := ; -- uInt
Engine/neo-api-zdelta.ads:107:29    - Unknown word (Bytef)        -- next_out :  := ; -- Bytef*
Engine/neo-api-zdelta.ads:108:7     - Unknown word (avail)        -- avail_out :  := ; -- uInt
Engine/neo-api-zdelta.ads:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-api-zdelta.ads:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-api-zdelta.ads:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo-api-zdelta.ads:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-api-zdelta.ads:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-api-zdelta.ads:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-api-zdelta.ads:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-api-zdelta.ads:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-api-zdelta.ads:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-api-zdelta.ads:110:29    - Unknown word (Bytef)        -- base :  := ; -- Bytef*[REFNUM]
Engine/neo-api-zdelta.ads:112:12    - Unknown word (avail)        -- base_avail :  := ; -- uLong[REFNUM
Engine/neo-api-zdelta.ads:114:29    - Unknown word (char)         -- msg :  := ; -- char*
Engine/neo-api-zdelta.ads:115:39    - Unknown word (internal)     -- := ; -- struct zd_internal_state FAR*
Engine/neo-api-zdelta.ads:116:7     - Unknown word (zalloc)       -- zalloc :  := ; -- alloc
Engine/neo-api-zdelta.ads:117:7     - Unknown word (zfree)        -- zfree :  := ; -- free
Engine/neo-api-zdelta.ads:118:7     - Unknown word (opaque)       -- opaque :  := ; -- voidpf
Engine/neo-api-zdelta.ads:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-api-zdelta.ads:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-api-zdelta.ads:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-api-zdelta.ads:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-api-zdelta.ads:120:7     - Unknown word (adler)        -- adler :  := ; -- uLong
Engine/neo-api-zdelta.ads:122:21    - Unknown word (Convention)   -- end record with Convention => C;
Engine/neo-api-zdelta.ads:125:6     - Unknown word (Subprograms)  -- -- Subprograms --
Engine/neo-api-zdelta.ads:129:12    - Unknown word (zdlib)        -- function zdlibVersion return Ptr_Char
Engine/neo-api-zdelta.ads:129:36    - Unknown word (Char)         -- zdlibVersion return Ptr_Char_8_C -- const char*
Engine/neo-api-zdelta.ads:129:54    - Unknown word (char)         -- Ptr_Char_8_C -- const char*
Engine/neo-api-zdelta.ads:130:40    - Unknown word (True)         -- with Import => True, Convention => StdCall
Engine/neo-api-zdelta.ads:130:46    - Unknown word (Convention)   -- with Import => True, Convention => StdCall, External
Engine/neo-api-zdelta.ads:130:87    - Unknown word (zdlib)        -- StdCall, External_Name => "zdlibVersion";
Engine/neo-api-zdelta.ads:133:24    - Unknown word (strm)        -- function zd_deflate (strm : access zd_stream
Engine/neo-api-zdelta.ads:133:56    - Unknown word (streamp)     -- access zd_stream; -- zd_streamp
Engine/neo-api-zdelta.ads:134:24    - Unknown word (flush)       -- flush :        Int_C)
Engine/neo-api-zdelta.ads:136:39    - Unknown word (True)        -- with Import => True, Convention => StdCall
Engine/neo-api-zdelta.ads:136:45    - Unknown word (Convention)  -- with Import => True, Convention => StdCall, External
Engine/neo-api-zdelta.ads:136:89    - Unknown word (inflate)     -- External_Name => "zd_inflate";
Engine/neo-api-zdelta.ads:139:27    - Unknown word (strm)        -- function zd_deflateEnd (strm : access zd_stream
Engine/neo-api-zdelta.ads:139:59    - Unknown word (streamp)     -- access zd_stream) -- zd_streamp
Engine/neo-api-zdelta.ads:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-api-zdelta.ads:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-api-zdelta.ads:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-api-zdelta.ads:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-api-zdelta.ads:141:42    - Unknown word (True)        -- with Import => True, Convention => StdCall
Engine/neo-api-zdelta.ads:145:15    - Unknown word (inflate)     -- function zd_inflate (strm  : access zd_stream
Engine/neo-api-zdelta.ads:145:24    - Unknown word (strm)        -- function zd_inflate (strm : access zd_stream
Engine/neo-api-zdelta.ads:145:56    - Unknown word (streamp)     -- access zd_stream; -- zd_streamp
Engine/neo-api-zdelta.ads:146:24    - Unknown word (flush)       -- flush :        Int_C)
Engine/neo-api-zdelta.ads:148:39    - Unknown word (True)        -- with Import => True, Convention => StdCall
Engine/neo-api-zdelta.ads:148:89    - Unknown word (inflate)     -- External_Name => "zd_inflate";
Engine/neo-api-zdelta.ads:152:15    - Unknown word (inflate)     -- function zd_inflateEnd (strm  : access zd
Engine/neo-api-zdelta.ads:152:27    - Unknown word (strm)        -- function zd_inflateEnd (strm : access zd_stream
Engine/neo-api-zdelta.ads:152:59    - Unknown word (streamp)     -- access zd_stream) -- zd_streamp
Engine/neo-api-zdelta.ads:154:42    - Unknown word (True)        -- with Import => True, Convention => StdCall
Engine/neo-api-zdelta.ads:154:92    - Unknown word (inflate)     -- External_Name => "zd_inflateEnd";
Engine/neo-api-zdelta.ads:157:29    - Unknown word (strm)        -- function zd_deflateReset (strm : access zd_stream)
Engine/neo-api-zdelta.ads:157:60    - Unknown word (streamp)     -- access zd_stream) -- zd_streamp
Engine/neo-api-zdelta.ads:164:30    - Unknown word (strategy)    -- strategy : Int_C)
Engine/neo-api-zdelta.ads:16:11     - Unknown word (binding)      -- -- Custom binding to the ZDelta API: https
Engine/neo-api-zdelta.ads:179:44    - Unknown word (Bytef)       -- (ref : ; -- const Bytef*
Engine/neo-api-zdelta.ads:181:44    - Unknown word (Bytef)       -- tar : ; -- const Bytef*
Engine/neo-api-zdelta.ads:184:39    - Unknown word (Longf)       -- dsize : ) -- uLongf*
Engine/neo-api-zdelta.ads:194:40    - Unknown word (Longf)       -- dsize : ) -- uLongf*
Engine/neo-api-zdelta.ads:205:40    - Unknown word (Longf)       -- dsize : ) -- uLongf*
Engine/neo-api-zdelta.ads:215:41    - Unknown word (Longf)       -- dsize : ) -- uLongf*
Engine/neo-api-zdelta.ads:23:14     - Unknown word (char)         -- -- typedef char charf;
Engine/neo-api-zdelta.ads:23:19     - Unknown word (charf)        -- -- typedef char charf;
Engine/neo-api-zdelta.ads:24:18     - Unknown word (intf)         -- -- typedef int intf;
Engine/neo-api-zdelta.ads:253:15    - Unknown word (adler)       -- function zd_adler32 (adler : Int_Ptr;
Engine/neo-api-zdelta.ads:253:24    - Unknown word (adler)       -- function zd_adler32 (adler : Int_Ptr; -- uLong
Engine/neo-api-zdelta.ads:257:89    - Unknown word (adler)       -- External_Name => "zd_adler32";
Engine/neo-api-zdelta.ads:25:14     - Unknown word (void)         -- -- typedef void *voidpf;
Engine/neo-api-zdelta.ads:25:20     - Unknown word (voidpf)       -- -- typedef void *voidpf;
Engine/neo-api-zdelta.ads:26:18     - Unknown word (Unsigned)     -- -- uInt    Int_Unsigned_C
Engine/neo-api-zdelta.ads:28:7      - Unknown word (Longf)        -- -- uLongf Int_Ptr
Engine/neo-api-zdelta.ads:29:14     - Unknown word (void)         -- -- typedef void *voidp;
Engine/neo-api-zdelta.ads:29:20     - Unknown word (voidp)        -- -- typedef void *voidp;
Engine/neo-api-zdelta.ads:30:18     - Unknown word (Unsigned)     -- -- typedef Int_Unsigned char Byte;
Engine/neo-api-zdelta.ads:30:27     - Unknown word (char)         -- typedef Int_Unsigned char Byte;
Engine/neo-api-zdelta.ads:32:14     - Unknown word (void)         -- -- typedef void *const voidpc;
Engine/neo-api-zdelta.ads:32:26     - Unknown word (voidpc)       -- typedef void *const voidpc;
Engine/neo-api-zdelta.ads:35:6      - Unknown word (Constants)    -- -- Constants --
Engine/neo-api-zdelta.ads:39:8      - Unknown word (FLUSH)        -- Z_NO_FLUSH : constant Int
Engine/neo-api-zdelta.ads:40:13     - Unknown word (FLUSH)        -- Z_PARTIAL_FLUSH : constant Int_C :=
Engine/neo-api-zdelta.ads:40:5      - Unknown word (PARTIAL)      -- Z_PARTIAL_FLUSH : constant Int
Engine/neo-api-zdelta.ads:43:11     - Unknown word (FLUSH)        -- ZD_SYNC_FLUSH : constant Int_C :=
Engine/neo-api-zdelta.ads:44:11     - Unknown word (FLUSH)        -- ZD_FULL_FLUSH : constant Int_C :=
Engine/neo-api-zdelta.ads:44:6      - Unknown word (FULL)         -- ZD_FULL_FLUSH : constant Int
Engine/neo-api-zdelta.ads:45:6      - Unknown word (FINISH)       -- ZD_FINISH : constant Int_C
Engine/neo-api-zdelta.ads:48:6      - Unknown word (HUFFMAN)      -- ZD_HUFFMAN_ONLY : constant
Engine/neo-api-zdelta.ads:49:6      - Unknown word (FILTERED)     -- ZD_FILTERED : constant Int
Engine/neo-api-zdelta.ads:50:14     - Unknown word (STRATEGY)     -- ZD_DEFAULT_STRATEGY : constant Int_C :=
Engine/neo-api-zdelta.ads:53:9      - Unknown word (COMPRESSION)  -- ZD_NO_COMPRESSION : constant Int
Engine/neo-api-zdelta.ads:54:11     - Unknown word (SPEED)        -- ZD_BEST_SPEED : constant
Engine/neo-api-zdelta.ads:55:11     - Unknown word (COMPRESSION)  -- ZD_BEST_COMPRESSION : constant Int_C
Engine/neo-api-zdelta.ads:56:14     - Unknown word (COMPRESSION)  -- ZD_DEFAULT_COMPRESSION : constant Int_C :=
Engine/neo-api-zdelta.ads:59:5      - Unknown word (BINARY)       -- Z_BINARY : constant Int_C :
Engine/neo-api-zdelta.ads:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo-api-zdelta.ads:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo-api-zdelta.ads:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo-api-zdelta.ads:60:5      - Unknown word (ASCII)        -- Z_ASCII : constant Int_C
Engine/neo-api-zdelta.ads:61:5      - Unknown word (UNKNOWN)      -- Z_UNKNOWN : constant Int_C :=
Engine/neo-api-zdelta.ads:64:6      - Unknown word (DEFLATED)     -- ZD_DEFLATED : constant Int_C :=
Engine/neo-api-zdelta.ads:72:6      - Unknown word (ERRNO)        -- ZD_ERRNO : constant Int
Engine/neo-api-zdelta.ads:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-api-zdelta.ads:80:28     - Unknown word (String)       -- ZDLIB_VERSION : constant String_C := "2.1";
Engine/neo-api-zdelta.ads:80:3      - Unknown word (ZDLIB)        -- ZDLIB_VERSION : constant String
Engine/neo-api-zdelta.ads:83:6      - Unknown word (Accessors)    -- -- Accessors --
Engine/neo-api-zdelta.ads:87:39     - Unknown word (opaque)       -- is access function (opaque : ; -- voidpf
Engine/neo-api-zdelta.ads:87:53     - Unknown word (voidpf)       -- function (opaque : ; -- voidpf
Engine/neo-api-zdelta.ads:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-api-zdelta.ads:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-api-zdelta.ads:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo-api-zdelta.ads:90:50     - Unknown word (voidpf)       -- return -- voidpf
Engine/neo-api-zdelta.ads:91:44     - Unknown word (Convention)   -- with Convention => C;
Engine/neo-api-zdelta.ads:94:39     - Unknown word (opaque)       -- is access procedure (opaque : ; -- voidpf
Engine/neo-api-zdelta.ads:94:54     - Unknown word (voidpf)       -- procedure (opaque  : ; -- voidpf
Engine/neo-api-zdelta.ads:95:54     - Unknown word (voidpf)       -- address : ) -- voidpf
Engine/neo-api-zdelta.ads:96:44     - Unknown word (Convention)   -- with Convention => C;
Engine/neo-api-zdelta.ads:99:6      - Unknown word (Structures)   -- -- Structures --
Engine/neo-api-zstandard.ads:106:27    - Unknown word (dctx)         -- function ZSTD_freeDCtx (dctx : Ptr) --
Engine/neo-api-zstandard.ads:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-api-zstandard.ads:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-api-zstandard.ads:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo-api-zstandard.ads:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-api-zstandard.ads:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-api-zstandard.ads:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-api-zstandard.ads:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-api-zstandard.ads:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-api-zstandard.ads:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-api-zstandard.ads:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-api-zstandard.ads:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-api-zstandard.ads:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-api-zstandard.ads:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-api-zstandard.ads:126:30    - Unknown word (compression)  -- compressionLevel : int) --
Engine/neo-api-zstandard.ads:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-api-zstandard.ads:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-api-zstandard.ads:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-api-zstandard.ads:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-api-zstandard.ads:142:17    - Unknown word (flush)        -- function ZSTD_flushStream (zcs    : Ptr
Engine/neo-api-zstandard.ads:145:91    - Unknown word (flush)        -- External_Name => "ZSTD_flushStream";
Engine/neo-api-zstandard.ads:16:11     - Unknown word (binding)      -- -- Custom binding to the ZStandard API
Engine/neo-api-zstandard.ads:175:20    - Unknown word (using)        -- -- Compression using a predefined Dictionary
Engine/neo-api-zstandard.ads:175:28    - Unknown word (predefined)   -- Compression using a predefined Dictionary (see dictBuilder
Engine/neo-api-zstandard.ads:175:39    - Unknown word (Dictionary)   -- ompression using a predefined Dictionary (see dictBuilder/zdict
Engine/neo-api-zstandard.ads:175:67    - Unknown word (zdict)        -- Dictionary (see dictBuilder/zdict.h).
Engine/neo-api-zstandard.ads:175:8     - Unknown word (Compression)  -- -- Compression using a predefined Dictionary
Engine/neo-api-zstandard.ads:176:15    - Unknown word (This)         -- -- Note : This function load the dictionary
Engine/neo-api-zstandard.ads:176:38    - Unknown word (dictionary)   -- This function load the dictionary, resulting in a significant
Engine/neo-api-zstandard.ads:176:50    - Unknown word (resulting)    -- load the dictionary, resulting in a significant startup
Engine/neo-api-zstandard.ads:176:65    - Unknown word (significant)  -- dictionary, resulting in a significant startup time.
Engine/neo-api-zstandard.ads:176:77    - Unknown word (startup)      -- resulting in a significant startup time.
Engine/neo-api-zstandard.ads:177:27    - Unknown word (using)        -- function ZSTD_compress_usingDict
Engine/neo-api-zstandard.ads:182:7     - Unknown word (compression)  -- compressionLevel : IC.int) return
Engine/neo-api-zstandard.ads:183:36    - Unknown word (using)        -- Import (C, ZSTD_compress_usingDict, "ZSTD_compress
Engine/neo-api-zstandard.ads:183:62    - Unknown word (using)        -- usingDict, "ZSTD_compress_usingDict");
Engine/neo-api-zstandard.ads:185:22    - Unknown word (using)         -- -- Decompression using a predefined Dictionary
Engine/neo-api-zstandard.ads:185:30    - Unknown word (predefined)    -- Decompression using a predefined Dictionary (see dictBuilder
Engine/neo-api-zstandard.ads:185:41    - Unknown word (Dictionary)    -- ompression using a predefined Dictionary (see dictBuilder/zdict
Engine/neo-api-zstandard.ads:185:69    - Unknown word (zdict)         -- Dictionary (see dictBuilder/zdict.h).
Engine/neo-api-zstandard.ads:185:8     - Unknown word (Decompression) -- -- Decompression using a predefined Dictionary
Engine/neo-api-zstandard.ads:186:19    - Unknown word (must)          -- -- Dictionary must be identical to the
Engine/neo-api-zstandard.ads:186:27    - Unknown word (identical)     -- Dictionary must be identical to the one used during
Engine/neo-api-zstandard.ads:186:53    - Unknown word (during)        -- identical to the one used during compression.
Engine/neo-api-zstandard.ads:186:60    - Unknown word (compression)   -- the one used during compression.
Engine/neo-api-zstandard.ads:186:8     - Unknown word (Dictionary)    -- -- Dictionary must be identical to
Engine/neo-api-zstandard.ads:187:15    - Unknown word (This)          -- -- Note : This function load the dictionary
Engine/neo-api-zstandard.ads:187:38    - Unknown word (dictionary)    -- This function load the dictionary, resulting in a significant
Engine/neo-api-zstandard.ads:187:50    - Unknown word (resulting)     -- load the dictionary, resulting in a significant startup
Engine/neo-api-zstandard.ads:187:65    - Unknown word (significant)   -- dictionary, resulting in a significant startup time
Engine/neo-api-zstandard.ads:187:77    - Unknown word (startup)       -- resulting in a significant startup time
Engine/neo-api-zstandard.ads:189:7     - Unknown word (dctx)          -- (dctx : ZSTD_DCtx_ptr;
Engine/neo-api-zstandard.ads:196:13    - Unknown word (Dictionary)    -- -- Fast Dictionary API  --
Engine/neo-api-zstandard.ads:199:17    - Unknown word (digested)      -- -- Create a digested dictionary, ready to
Engine/neo-api-zstandard.ads:199:26    - Unknown word (dictionary)    -- Create a digested dictionary, ready to start compression
Engine/neo-api-zstandard.ads:199:38    - Unknown word (ready)         -- digested dictionary, ready to start compression
Engine/neo-api-zstandard.ads:199:83    - Unknown word (startup)       -- compression operation without startup delay.
Engine/neo-api-zstandard.ads:200:22    - Unknown word (released)      -- -- `dict` can be released after creation
Engine/neo-api-zstandard.ads:200:31    - Unknown word (after)         -- dict` can be released after creation
Engine/neo-api-zstandard.ads:209:32    - Unknown word (digested)      -- Compression using a pre-digested Dictionary.
Engine/neo-api-zstandard.ads:209:41    - Unknown word (Dictionary)    -- using a pre-digested Dictionary.
Engine/neo-api-zstandard.ads:209:8     - Unknown word (Compression)   -- -- Compression using a pre-digested
Engine/neo-api-zstandard.ads:210:15    - Unknown word (startup)       -- -- Faster startup than ZSTD_compress_usingDict
Engine/neo-api-zstandard.ads:210:23    - Unknown word (than)          -- -- Faster startup than ZSTD_compress_usingDict
Engine/neo-api-zstandard.ads:210:55    - Unknown word (recommended)   -- compress_usingDict(), recommended when same dictionary
Engine/neo-api-zstandard.ads:210:72    - Unknown word (same)          -- ), recommended when same dictionary is
Engine/neo-api-zstandard.ads:210:77    - Unknown word (dictionary)    -- recommended when same dictionary is
Engine/neo-api-zstandard.ads:210:8     - Unknown word (Faster)        -- -- Faster startup than ZSTD_compress
Engine/neo-api-zstandard.ads:211:13    - Unknown word (multiple)      -- -- used multiple times.  Note that compression
Engine/neo-api-zstandard.ads:211:22    - Unknown word (times)         -- -- used multiple times. Note that compression
Engine/neo-api-zstandard.ads:211:35    - Unknown word (that)          -- multiple times.  Note that compression level is
Engine/neo-api-zstandard.ads:211:61    - Unknown word (decided)       -- compression level is decided during dictionary creation
Engine/neo-api-zstandard.ads:211:69    - Unknown word (during)        -- compression level is decided during dictionary creation
Engine/neo-api-zstandard.ads:211:76    - Unknown word (dictionary)    -- level is decided during dictionary creation.
Engine/neo-api-zstandard.ads:219:17    - Unknown word (digested)      -- -- Create a digested dictionary, ready to
Engine/neo-api-zstandard.ads:219:38    - Unknown word (ready)         -- digested dictionary, ready to start decompression
Engine/neo-api-zstandard.ads:219:53    - Unknown word (decompression) -- dictionary, ready to start decompression operation without startup
Engine/neo-api-zstandard.ads:219:85    - Unknown word (startup)       -- compression operation without startup delay.
Engine/neo-api-zstandard.ads:220:22    - Unknown word (released)      -- -- `dict` can be released after creation
Engine/neo-api-zstandard.ads:220:31    - Unknown word (after)         -- dict` can be released after creation
Engine/neo-api-zstandard.ads:224:29    - Unknown word (ddict)         -- function ZSTD_freeDDict (ddict : ZSTD_DDict_ptr) return
Engine/neo-api-zstandard.ads:227:30    - Unknown word (digested)      -- Decompression using a digested Dictionary
Engine/neo-api-zstandard.ads:227:8     - Unknown word (Decompression) -- -- Decompression using a digested Dictionary
Engine/neo-api-zstandard.ads:228:23    - Unknown word (than)          -- -- Faster startup than ZSTD_decompress_usingDict
Engine/neo-api-zstandard.ads:228:57    - Unknown word (recommended)   -- decompress_usingDict(), recommended when same dictionary
Engine/neo-api-zstandard.ads:228:74    - Unknown word (same)          -- ), recommended when same dictionary is
Engine/neo-api-zstandard.ads:228:8     - Unknown word (Faster)        -- -- Faster startup than ZSTD_decompress
Engine/neo-api-zstandard.ads:229:13    - Unknown word (multiple)      -- -- used multiple times.
Engine/neo-api-zstandard.ads:229:22    - Unknown word (times)         -- -- used multiple times.
Engine/neo-api-zstandard.ads:231:7     - Unknown word (dctx)          -- (dctx : ZSTD_DCtx_ptr;
Engine/neo-api-zstandard.ads:234:7     - Unknown word (ddict)         -- ddict : ZSTD_DDict_ptr) return
Engine/neo-api-zstandard.ads:24:10     - Unknown word (Unsigned)     -- -- Int_Unsigned
Engine/neo-api-zstandard.ads:26:6      - Unknown word (void)         -- -- void*
Engine/neo-api-zstandard.ads:27:12     - Unknown word (char)         -- -- const char*
Engine/neo-api-zstandard.ads:30:6      - Unknown word (Structures)   -- -- Structures --
Engine/neo-api-zstandard.ads:34:14     - Unknown word (chars)        -- src : chars_ptr;
Engine/neo-api-zstandard.ads:37:21     - Unknown word (Convention)   -- end record with Convention => C;
Engine/neo-api-zstandard.ads:40:14     - Unknown word (chars)        -- dst : chars_ptr;
Engine/neo-api-zstandard.ads:43:21     - Unknown word (Convention)   -- end record with Convention => C;
Engine/neo-api-zstandard.ads:46:6      - Unknown word (Subprograms)  -- -- Subprograms --
Engine/neo-api-zstandard.ads:49:42     - Unknown word (Unsigned)     -- versionNumber return Int_Unsigned_C --
Engine/neo-api-zstandard.ads:50:46     - Unknown word (True)         -- with Import => True, Convention => C, External
Engine/neo-api-zstandard.ads:50:52     - Unknown word (Convention)   -- with Import => True, Convention => C, External_Name
Engine/neo-api-zstandard.ads:53:37     - Unknown word (Unsigned)     -- return Int_Unsigned_C -- Int_Unsigned_C
Engine/neo-api-zstandard.ads:53:55     - Unknown word (Unsigned)     -- Int_Unsigned_C -- Int_Unsigned_C
Engine/neo-api-zstandard.ads:54:41     - Unknown word (True)         -- with Import => True, Convention => C, External
Engine/neo-api-zstandard.ads:54:47     - Unknown word (Convention)   -- with Import => True, Convention => C, External_Name
Engine/neo-api-zstandard.ads:57:38     - Unknown word (chars)        -- return chars_ptr -- const char*
Engine/neo-api-zstandard.ads:57:57     - Unknown word (char)         -- return chars_ptr -- const char*
Engine/neo-api-zstandard.ads:58:46     - Unknown word (True)         -- with Import => True, Convention => C, External
Engine/neo-api-zstandard.ads:58:52     - Unknown word (Convention)   -- with Import => True, Convention => C, External_Name
Engine/neo-api-zstandard.ads:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo-api-zstandard.ads:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo-api-zstandard.ads:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo-api-zstandard.ads:60:25     - Unknown word (Bound)        -- function ZSTD_compressBound (srcSize : size_t)
Engine/neo-api-zstandard.ads:62:101    - Unknown word (Bound)        -- Name => "ZSTD_compressBound";
Engine/neo-api-zstandard.ads:62:47     - Unknown word (True)         -- with Import => True, Convention => C, External
Engine/neo-api-zstandard.ads:65:42     - Unknown word (True)         -- with Import => True, Convention => C, External
Engine/neo-api-zstandard.ads:67:61     - Unknown word (void)         -- : Ptr;        -- void*
Engine/neo-api-zstandard.ads:69:61     - Unknown word (void)         -- : Ptr;        -- void*
Engine/neo-api-zstandard.ads:71:27     - Unknown word (compression)  -- compressionLevel : Int_C)
Engine/neo-api-zstandard.ads:75:48     - Unknown word (chars)        -- etDecompressedSize (src     : chars_ptr; --
Engine/neo-api-zstandard.ads:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-api-zstandard.ads:80:46     - Unknown word (chars)        -- decompress (dst            : chars_ptr; --
Engine/neo-api-zstandard.ads:83:29     - Unknown word (compressed)   -- compressedSize : size_t) --
Engine/neo-api-zstandard.ads:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-api-zstandard.ads:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-api-zstandard.ads:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo-api-zstandard.ads:90:27     - Unknown word (cctx)         -- function ZSTD_freeCCtx (cctx : Ptr) --
Engine/neo-api-zstandard.ads:99:31     - Unknown word (compression)  -- compressionLevel : int) --
Engine/neo-api.ads:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-api.ads:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-api.ads:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo-api.ads:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-api.ads:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-api.ads:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-api.ads:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-api.ads:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-api.ads:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-api.ads:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-api.ads:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-api.ads:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-api.ads:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-api.ads:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-api.ads:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-api.ads:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-api.ads:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-api.ads:16:32     - Unknown word (consisting)   -- Separator for the API layer consisting of thin bindings to
Engine/neo-api.ads:16:4      - Unknown word (Separator)    -- -- Separator for the API layer consisting
Engine/neo-api.ads:16:46     - Unknown word (thin)         -- layer consisting of thin bindings to foreign
Engine/neo-api.ads:16:51     - Unknown word (bindings)     -- layer consisting of thin bindings to foreign or dynamic
Engine/neo-api.ads:16:63     - Unknown word (foreign)      -- of thin bindings to foreign or dynamic C libraries
Engine/neo-api.ads:16:84     - Unknown word (libraries)    -- foreign or dynamic C libraries
Engine/neo-api.ads:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo-api.ads:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo-api.ads:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo-api.ads:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-api.ads:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-api.ads:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-api.ads:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo-core-arrays.adb:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-core-arrays.adb:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-core-arrays.adb:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo-core-arrays.adb:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-core-arrays.adb:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-core-arrays.adb:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-core-arrays.adb:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-core-arrays.adb:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-core-arrays.adb:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-core-arrays.adb:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-core-arrays.adb:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-core-arrays.adb:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-core-arrays.adb:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-core-arrays.adb:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-core-arrays.adb:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-core-arrays.adb:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-core-arrays.adb:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-core-arrays.adb:19:6      - Unknown word (Sorting)      -- -- Sorting --
Engine/neo-core-arrays.adb:22:43     - Unknown word (Unbound)      -- Item : in out Array_Str_Unbound) is procedure Internal
Engine/neo-core-arrays.adb:22:65     - Unknown word (Internal)     -- Unbound) is procedure Internal_Sort
Engine/neo-core-arrays.adb:23:101    - Unknown word (Internal)     -- Unbound, "<"); begin Internal_Sort (Item); end;
Engine/neo-core-arrays.adb:23:47     - Unknown word (Positive)     -- Generic_Array_Sort (Positive, Str_Unbound, Array
Engine/neo-core-arrays.adb:23:61     - Unknown word (Unbound)      -- Sort (Positive, Str_Unbound, Array_Str_Unbound,
Engine/neo-core-arrays.adb:23:80     - Unknown word (Unbound)      -- Str_Unbound, Array_Str_Unbound, "<"); begin Internal
Engine/neo-core-arrays.adb:24:57     - Unknown word (Internal)     -- Array_Int) is procedure Internal_Sort
Engine/neo-core-arrays.adb:25:101    - Unknown word (Internal)     -- "<"); begin Internal_Sort (Item); end;
Engine/neo-core-arrays.adb:25:47     - Unknown word (Positive)     -- Generic_Array_Sort (Positive, Int,         Array
Engine/neo-core-arrays.adb:26:60     - Unknown word (Internal)     -- Int_64) is procedure Internal_Sort
Engine/neo-core-arrays.adb:27:47     - Unknown word (Positive)     -- Generic_Array_Sort (Positive, Int_64,      Array
Engine/neo-core-arrays.adb:29:47     - Unknown word (Positive)     -- Generic_Array_Sort (Positive, Real,        Array
Engine/neo-core-arrays.adb:31:47     - Unknown word (Positive)     -- Generic_Array_Sort (Positive, Real_64,     Array
Engine/neo-core-arrays.adb:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo-core-arrays.adb:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo-core-arrays.adb:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo-core-arrays.adb:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-core-arrays.adb:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-core-arrays.adb:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-core-arrays.adb:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo-core-arrays.ads:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-core-arrays.ads:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-core-arrays.ads:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo-core-arrays.ads:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-core-arrays.ads:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-core-arrays.ads:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-core-arrays.ads:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-core-arrays.ads:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-core-arrays.ads:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-core-arrays.ads:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-core-arrays.ads:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-core-arrays.ads:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-core-arrays.ads:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-core-arrays.ads:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-core-arrays.ads:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-core-arrays.ads:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-core-arrays.ads:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-core-arrays.ads:143:25    - Unknown word (Percent)      -- subtype Array_Real_64_Percent is Vector_Real
Engine/neo-core-arrays.ads:144:25    - Unknown word (Degree)       -- subtype Array_Real_64_Degree is Vector_Real
Engine/neo-core-arrays.ads:17:15     - Unknown word (Vectors)      -- with Neo.Core.Vectors;
Engine/neo-core-arrays.ads:18:15     - Unknown word (Math)         -- with Neo.Core.Math; use Neo.Core.Math;
Engine/neo-core-arrays.ads:18:34     - Unknown word (Math)         -- Core.Math; use Neo.Core.Math;
Engine/neo-core-arrays.ads:203:6     - Unknown word (Multi)        -- -- Multi Dimension --
Engine/neo-core-arrays.ads:207:17    - Unknown word (Duration)     -- type Array_x2_Duration is array (Positive
Engine/neo-core-arrays.ads:23:6      - Unknown word (Single)       -- -- Single Dimension --
Engine/neo-core-arrays.ads:25:25     - Unknown word (tied)         -- Set of array types tied to vectors for easy
Engine/neo-core-arrays.ads:25:33     - Unknown word (vectors)      -- array types tied to vectors for easy back-and-forth
Engine/neo-core-arrays.ads:25:45     - Unknown word (easy)         -- tied to vectors for easy back-and-forth translation
Engine/neo-core-arrays.ads:25:50     - Unknown word (back)         -- to vectors for easy back-and-forth translation
Engine/neo-core-arrays.ads:25:65     - Unknown word (translation)  -- easy back-and-forth translation
Engine/neo-core-arrays.ads:273:6     - Unknown word (Sorting)      -- -- Sorting --
Engine/neo-core-arrays.ads:27:11     - Unknown word (Vector)       -- package Vector_Vector_2D
Engine/neo-core-arrays.ads:27:18     - Unknown word (Vector)       -- package Vector_Vector_2D is new
Engine/neo-core-arrays.ads:27:46     - Unknown word (Vectors)      -- D is new Vectors (Vector_2D);
Engine/neo-core-arrays.ads:27:55     - Unknown word (Vector)       -- is new Vectors (Vector_2D);
Engine/neo-core-arrays.ads:28:11     - Unknown word (Vector)       -- package Vector_Vector_3D
Engine/neo-core-arrays.ads:28:18     - Unknown word (Vector)       -- package Vector_Vector_3D is new
Engine/neo-core-arrays.ads:28:46     - Unknown word (Vectors)      -- D is new Vectors (Vector_3D);
Engine/neo-core-arrays.ads:29:46     - Unknown word (Vectors)      -- D is new Vectors (Vector_4D);
Engine/neo-core-arrays.ads:30:46     - Unknown word (Vectors)      -- is new Vectors (Bool);
Engine/neo-core-arrays.ads:31:18     - Unknown word (Duration)     -- package Vector_Duration is new Vectors
Engine/neo-core-arrays.ads:31:55     - Unknown word (Duration)     -- is new Vectors (Duration);
Engine/neo-core-arrays.ads:33:24     - Unknown word (Unbound)      -- package Vector_Str_8_Unbound is new Vectors
Engine/neo-core-arrays.ads:33:61     - Unknown word (Unbound)      -- is new Vectors (Str_8_Unbound);
Engine/neo-core-arrays.ads:34:25     - Unknown word (Unbound)      -- package Vector_Str_16_Unbound is new Vectors
Engine/neo-core-arrays.ads:34:62     - Unknown word (Unbound)      -- new Vectors (Str_16_Unbound);
Engine/neo-core-arrays.ads:35:22     - Unknown word (Unbound)      -- package Vector_Str_Unbound renames Vector
Engine/neo-core-arrays.ads:39:22     - Unknown word (Char)         -- package Vector_Ptr_Char_8_C is new Vectors
Engine/neo-core-arrays.ads:39:59     - Unknown word (Char)         -- is new Vectors (Ptr_Char_8_C);
Engine/neo-core-arrays.ads:40:18     - Unknown word (Char)         -- package Vector_Char_8_C is new
Engine/neo-core-arrays.ads:40:55     - Unknown word (Char)         -- is new Vectors (Char_8_C);
Engine/neo-core-arrays.ads:41:18     - Unknown word (Char)         -- package Vector_Char_8 is new
Engine/neo-core-arrays.ads:45:24     - Unknown word (Unsigned)     -- package Vector_Int_8_Unsigned_C is new Vectors
Engine/neo-core-arrays.ads:45:61     - Unknown word (Unsigned)     -- is new Vectors (Int_8_Unsigned_C);
Engine/neo-core-arrays.ads:46:24     - Unknown word (Unsigned)     -- package Vector_Int_8_Unsigned is new Vectors
Engine/neo-core-arrays.ads:46:61     - Unknown word (Unsigned)     -- is new Vectors (Int_8_Unsigned);
Engine/neo-core-arrays.ads:47:24     - Unknown word (Signed)       -- package Vector_Int_8_Signed_C is new Vectors
Engine/neo-core-arrays.ads:47:61     - Unknown word (Signed)       -- is new Vectors (Int_8_Signed_C);
Engine/neo-core-arrays.ads:48:24     - Unknown word (Signed)       -- package Vector_Int_8_Signed is new Vectors
Engine/neo-core-arrays.ads:48:61     - Unknown word (Signed)       -- is new Vectors (Int_8_Signed);
Engine/neo-core-arrays.ads:50:24     - Unknown word (Positive)     -- package Vector_Int_8_Positive is new Vectors
Engine/neo-core-arrays.ads:50:61     - Unknown word (Positive)     -- is new Vectors (Int_8_Positive);
Engine/neo-core-arrays.ads:51:25     - Unknown word (Unsigned)     -- package Vector_Int_16_Unsigned_C is new Vectors
Engine/neo-core-arrays.ads:53:25     - Unknown word (Signed)       -- package Vector_Int_16_Signed_C is new Vectors
Engine/neo-core-arrays.ads:56:25     - Unknown word (Positive)     -- package Vector_Int_16_Positive is new Vectors
Engine/neo-core-arrays.ads:56:62     - Unknown word (Positive)     -- new Vectors (Int_16_Positive);
Engine/neo-core-arrays.ads:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo-core-arrays.ads:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo-core-arrays.ads:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo-core-arrays.ads:62:25     - Unknown word (Positive)     -- package Vector_Int_32_Positive is new Vectors
Engine/neo-core-arrays.ads:77:26     - Unknown word (Percent)      -- package Vector_Real_64_Percent is new Vectors
Engine/neo-core-arrays.ads:77:63     - Unknown word (Percent)      -- new Vectors (Real_64_Percent);
Engine/neo-core-arrays.ads:78:26     - Unknown word (Degree)       -- package Vector_Real_64_Degree is new Vectors
Engine/neo-core-arrays.ads:78:63     - Unknown word (Degree)       -- new Vectors (Real_64_Degree);
Engine/neo-core-arrays.ads:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-core-arrays.ads:85:26     - Unknown word (Percent)      -- package Vector_Real_32_Percent is new Vectors
Engine/neo-core-arrays.ads:85:63     - Unknown word (Percent)      -- new Vectors (Real_32_Percent);
Engine/neo-core-arrays.ads:86:26     - Unknown word (Degree)       -- package Vector_Real_32_Degree is new Vectors
Engine/neo-core-arrays.ads:86:63     - Unknown word (Degree)       -- new Vectors (Real_32_Degree);
Engine/neo-core-arrays.ads:87:59     - Unknown word (Unsafe)       -- is Vector_Vector_2D.Unsafe_Array;
Engine/neo-core-arrays.ads:88:59     - Unknown word (Unsafe)       -- is Vector_Vector_3D.Unsafe_Array;
Engine/neo-core-arrays.ads:89:59     - Unknown word (Unsafe)       -- is Vector_Vector_4D.Unsafe_Array;
Engine/neo-core-arrays.ads:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-core-arrays.ads:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-core-arrays.ads:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo-core-arrays.ads:90:54     - Unknown word (Unsafe)       -- is Vector_Bool.Unsafe_Array;
Engine/neo-core-arrays.ads:91:17     - Unknown word (Duration)     -- subtype Array_Duration is Vector
Engine/neo-core-arrays.ads:91:49     - Unknown word (Duration)     -- is Vector_Duration.Unsafe_Array;
Engine/neo-core-arrays.ads:91:58     - Unknown word (Unsafe)       -- is Vector_Duration.Unsafe_Array;
Engine/neo-core-compression.adb:102:12    - Unknown word (element)        -- last_element := Natural (outbuffer
Engine/neo-core-compression.adb:103:36    - Unknown word (Element)        -- data (1 .. STR.Stream_Element_Offset (last_element
Engine/neo-core-compression.adb:103:44    - Unknown word (Offset)         -- STR.Stream_Element_Offset (last_element)) :=
Engine/neo-core-compression.adb:103:57    - Unknown word (element)        -- Element_Offset (last_element)) :=
Engine/neo-core-compression.adb:104:9     - Unknown word (convert)        -- convert_to_stream_array (data
Engine/neo-core-compression.adb:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-core-compression.adb:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-core-compression.adb:10:110    - Unknown word (warranty)     -- without even the implied warranty of                -
Engine/neo-core-compression.adb:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-core-compression.adb:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-core-compression.adb:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-core-compression.adb:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-core-compression.adb:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-core-compression.adb:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-core-compression.adb:110:8     - Unknown word (convert)        -- -- convert_to_stream_array --
Engine/neo-core-compression.adb:113:13    - Unknown word (convert)        -- function convert_to_stream_array
Engine/neo-core-compression.adb:114:35    - Unknown word (char)           -- data : Thin.IC.char_array;
Engine/neo-core-compression.adb:114:7     - Unknown word (char)           -- (char_data : Thin
Engine/neo-core-compression.adb:115:14    - Unknown word (characters)     -- number_characters : Thin.IC.size_t) return
Engine/neo-core-compression.adb:117:67    - Unknown word (Offset)         -- STR.Stream_Element_Offset (number_characters)
Engine/neo-core-compression.adb:117:82    - Unknown word (characters)     -- Element_Offset (number_characters));
Engine/neo-core-compression.adb:118:7     - Unknown word (dondx)          -- dondx : Thin.IC.size_t;
Engine/neo-core-compression.adb:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-core-compression.adb:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-core-compression.adb:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-core-compression.adb:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-core-compression.adb:121:10    - Unknown word (dondx)          -- dondx := Thin.IC.size_t (z
Engine/neo-core-compression.adb:122:45    - Unknown word (Character)      -- STR.Stream_Element (Character'Pos (Thin.IC.To_Ada
Engine/neo-core-compression.adb:122:87    - Unknown word (dondx)          -- IC.To_Ada (char_data (dondx))));
Engine/neo-core-compression.adb:125:8     - Unknown word (convert)        -- end convert_to_stream_array;
Engine/neo-core-compression.adb:139:7     - Unknown word (dondx)          -- dondx : Thin.IC.size_t
Engine/neo-core-compression.adb:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-core-compression.adb:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-core-compression.adb:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-core-compression.adb:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-core-compression.adb:142:19    - Unknown word (dondx)          -- product (dondx) := Thin.IC.To_C (Character
Engine/neo-core-compression.adb:142:43    - Unknown word (Character)      -- dondx) := Thin.IC.To_C (Character'Val (stream_data (z
Engine/neo-core-compression.adb:153:27    - Unknown word (Compressor)     -- mechanism : out Compressor;
Engine/neo-core-compression.adb:155:23    - Unknown word (Compression)    -- quality : Compression_Level := Default_Compression
Engine/neo-core-compression.adb:155:52    - Unknown word (Compression)    -- Compression_Level := Default_Compression)
Engine/neo-core-compression.adb:155:7     - Unknown word (quality)        -- quality : Compression
Engine/neo-core-compression.adb:162:52    - Unknown word (pointer)        -- = Thin.Null_CStream_pointer then
Engine/neo-core-compression.adb:163:26    - Unknown word (compression)    -- raise streaming_compression_initialization with
Engine/neo-core-compression.adb:163:38    - Unknown word (initialization) -- streaming_compression_initialization with "ZSTD_createCStream
Engine/neo-core-compression.adb:166:44    - Unknown word (compression)    -- compressionLevel => Thin.IC.int
Engine/neo-core-compression.adb:166:77    - Unknown word (quality)        -- pressionLevel => Thin.IC.int (quality));
Engine/neo-core-compression.adb:168:26    - Unknown word (compression)    -- raise streaming_compression_initialization with
Engine/neo-core-compression.adb:168:38    - Unknown word (initialization) -- streaming_compression_initialization with "ZSTD_initCStream
Engine/neo-core-compression.adb:177:45    - Unknown word (Compressor)     -- Data (mechanism : out Compressor;
Engine/neo-core-compression.adb:183:60    - Unknown word (Length)         -- array := (1 .. data'Length => Thin.IC.nul);
Engine/neo-core-compression.adb:187:48    - Unknown word (Chars)          -- src => Thin.ICS.To_Chars_Ptr (data_in'Unchecked
Engine/neo-core-compression.adb:188:41    - Unknown word (Length)         -- size => data'Length,
Engine/neo-core-compression.adb:18:9      - Unknown word (Compressor)   -- type Compressor is tagged private;
Engine/neo-core-compression.adb:191:48    - Unknown word (Chars)          -- dst => Thin.ICS.To_Chars_Ptr (data_out'Unchecked
Engine/neo-core-compression.adb:196:26    - Unknown word (compression)    -- raise streaming_compression_error with "Run initialize
Engine/neo-core-compression.adb:199:43    - Unknown word (Character)      -- index) := Thin.IC.To_C (Character'Val (data (z)));
Engine/neo-core-compression.adb:205:30    - Unknown word (hint)           -- mechanism.data_size_hint :=
Engine/neo-core-compression.adb:215:17    - Unknown word (Compression)    -- -- Finalize_Compression_Frame --
Engine/neo-core-compression.adb:215:29    - Unknown word (Frame)          -- Finalize_Compression_Frame --
Engine/neo-core-compression.adb:218:23    - Unknown word (Compression)    -- procedure Finalize_Compression_Frame (mechanism : Compressor
Engine/neo-core-compression.adb:218:35    - Unknown word (Frame)          -- Finalize_Compression_Frame (mechanism : Compressor
Engine/neo-core-compression.adb:218:54    - Unknown word (Compressor)     -- ompression_Frame (mechanism : Compressor)
Engine/neo-core-compression.adb:222:48    - Unknown word (Chars)          -- dst => Thin.ICS.To_Chars_Ptr (data_out'Unchecked
Engine/neo-core-compression.adb:225:7     - Unknown word (remaining)      -- remaining : Thin.IC.size_t;
Engine/neo-core-compression.adb:227:7     - Unknown word (remaining)      -- remaining := Thin.ZSTD_endStream
Engine/neo-core-compression.adb:229:19    - Unknown word (remaining)      -- if Natural (remaining) > 0 then
Engine/neo-core-compression.adb:22:29     - Unknown word (Thin)         -- zstd_stream : Thin.ZSTD_DStream_ptr :=
Engine/neo-core-compression.adb:22:54     - Unknown word (Thin)         -- ZSTD_DStream_ptr := Thin.Null_DStream_pointer
Engine/neo-core-compression.adb:22:72     - Unknown word (pointer)      -- = Thin.Null_DStream_pointer;
Engine/neo-core-compression.adb:230:26    - Unknown word (compression)    -- raise streaming_compression_finalization with "not
Engine/neo-core-compression.adb:230:38    - Unknown word (finalization)   -- streaming_compression_finalization with "not fully flushed
Engine/neo-core-compression.adb:230:61    - Unknown word (fully)          -- finalization with "not fully flushed";
Engine/neo-core-compression.adb:230:67    - Unknown word (flushed)        -- finalization with "not fully flushed";
Engine/neo-core-compression.adb:233:17    - Unknown word (Compression)    -- end Finalize_Compression_Frame;
Engine/neo-core-compression.adb:233:29    - Unknown word (Frame)          -- Finalize_Compression_Frame;
Engine/neo-core-compression.adb:240:75    - Unknown word (Positive)       -- Compressor) return Positive is
Engine/neo-core-compression.adb:242:14    - Unknown word (Positive)       -- return Positive (mechanism.data_size
Engine/neo-core-compression.adb:242:44    - Unknown word (hint)           -- mechanism.data_size_hint);
Engine/neo-core-compression.adb:24:9      - Unknown word (Compressor)   -- type Compressor is tagged record
Engine/neo-core-compression.adb:252:14    - Unknown word (characters)     -- number_characters : Thin.IC.size_t) return
Engine/neo-core-compression.adb:254:82    - Unknown word (characters)     -- Element_Offset (number_characters));
Engine/neo-core-compression.adb:259:45    - Unknown word (Character)      -- STR.Stream_Element (Character'Pos (Thin.IC.To_Ada
Engine/neo-core-compression.adb:26:27     - Unknown word (Thin)         -- zstd_stream : Thin.ZSTD_CStream_ptr :=
Engine/neo-core-compression.adb:26:52     - Unknown word (Thin)         -- ZSTD_CStream_ptr := Thin.Null_CStream_pointer
Engine/neo-core-compression.adb:26:70     - Unknown word (pointer)      -- = Thin.Null_CStream_pointer;
Engine/neo-core-compression.adb:27:20     - Unknown word (hint)         -- data_size_hint : Thin.IC.size_t :=
Engine/neo-core-compression.adb:27:27     - Unknown word (Thin)         -- data_size_hint : Thin.IC.size_t := Buffer
Engine/neo-core-compression.adb:35:7      - Unknown word (mechanism)    -- (mechanism : out Decompressor
Engine/neo-core-compression.adb:41:7      - Unknown word (mechanism)    -- mechanism.source_stream := input
Engine/neo-core-compression.adb:42:7      - Unknown word (mechanism)    -- mechanism.zstd_stream := Thin
Engine/neo-core-compression.adb:44:10     - Unknown word (mechanism)    -- if mechanism.zstd_stream = Thin.Null
Engine/neo-core-compression.adb:44:52     - Unknown word (pointer)      -- = Thin.Null_DStream_pointer then
Engine/neo-core-compression.adb:45:26     - Unknown word (decompression) -- raise streaming_decompression_initialization with
Engine/neo-core-compression.adb:45:40     - Unknown word (initialization) -- streaming_decompression_initialization with "ZSTD_createDStream
Engine/neo-core-compression.adb:48:51     - Unknown word (mechanism)      -- initDStream (zds => mechanism.zstd_stream);
Engine/neo-core-compression.adb:50:26     - Unknown word (decompression)  -- raise streaming_decompression_initialization with
Engine/neo-core-compression.adb:50:40     - Unknown word (initialization) -- streaming_decompression_initialization with "ZSTD_initDStream
Engine/neo-core-compression.adb:5:52      - Unknown word (Copyright)  -- Copyright (C) 2016 Justin Squirek
Engine/neo-core-compression.adb:5:71      - Unknown word (Justin)     -- Copyright (C) 2016 Justin Squirek
Engine/neo-core-compression.adb:5:78      - Unknown word (Squirek)    -- Copyright (C) 2016 Justin Squirek
Engine/neo-core-compression.adb:62:12     - Unknown word (element)        -- last_element : out Natural)
Engine/neo-core-compression.adb:66:30     - Unknown word (Element)        -- sin_last : STR.Stream_Element_Offset := STR.Stream
Engine/neo-core-compression.adb:66:38     - Unknown word (Offset)         -- STR.Stream_Element_Offset := STR.Stream_Element
Engine/neo-core-compression.adb:66:59     - Unknown word (Element)        -- Offset := STR.Stream_Element_Offset (Recommended
Engine/neo-core-compression.adb:66:67     - Unknown word (Offset)         -- STR.Stream_Element_Offset (Recommended_Chunk_Size
Engine/neo-core-compression.adb:66:75     - Unknown word (Recommended)    -- Stream_Element_Offset (Recommended_Chunk_Size);
Engine/neo-core-compression.adb:66:87     - Unknown word (Chunk)          -- Offset (Recommended_Chunk_Size);
Engine/neo-core-compression.adb:67:30     - Unknown word (Element)        -- Last : STR.Stream_Element_Offset;
Engine/neo-core-compression.adb:67:38     - Unknown word (Offset)         -- STR.Stream_Element_Offset;
Engine/neo-core-compression.adb:69:35     - Unknown word (char)           -- : aliased Thin.IC.char_array := (1 .. Recommended
Engine/neo-core-compression.adb:69:55     - Unknown word (Recommended)    -- char_array := (1 .. Recommended_Chunk_Size => Thin.IC
Engine/neo-core-compression.adb:69:67     - Unknown word (Chunk)          -- = (1 .. Recommended_Chunk_Size => Thin.IC.nul
Engine/neo-core-compression.adb:70:35     - Unknown word (char)           -- out : aliased Thin.IC.char_array := (1 .. Output
Engine/neo-core-compression.adb:71:30     - Unknown word (Element)        -- data_sin : STR.Stream_Element_Array (1 .. sin_last
Engine/neo-core-compression.adb:73:12     - Unknown word (hint)           -- size_hint : Thin.IC.size_t;
Engine/neo-core-compression.adb:75:48     - Unknown word (Chars)          -- src => Thin.ICS.To_Chars_Ptr (data_in'Unchecked
Engine/neo-core-compression.adb:76:36     - Unknown word (Recommended)    -- size => Recommended_Chunk_Size,
Engine/neo-core-compression.adb:76:48     - Unknown word (Chunk)          -- size => Recommended_Chunk_Size,
Engine/neo-core-compression.adb:79:48     - Unknown word (Chars)          -- dst => Thin.ICS.To_Chars_Ptr (data_out'Unchecked
Engine/neo-core-compression.adb:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-core-compression.adb:83:52     - Unknown word (pointer)        -- = Thin.Null_DStream_pointer then
Engine/neo-core-compression.adb:84:26     - Unknown word (decompression)  -- raise streaming_decompression_error with "Run initialize
Engine/neo-core-compression.adb:8:30      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-core-compression.adb:8:70      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-core-compression.adb:8:87      - Unknown word (later)        -- at your option) any later version.
Engine/neo-core-compression.adb:90:15     - Unknown word (element)        -- last_element := 0;
Engine/neo-core-compression.adb:91:22     - Unknown word (True)           -- complete := True;
Engine/neo-core-compression.adb:95:18     - Unknown word (convert)        -- data_in := convert_to_char_array (data
Engine/neo-core-compression.adb:95:29     - Unknown word (char)           -- data_in := convert_to_char_array (data_sin (1
Engine/neo-core-compression.adb:95:63     - Unknown word (Recommended)    -- data_sin (1 .. Last), Recommended_Chunk_Size);
Engine/neo-core-compression.adb:95:75     - Unknown word (Chunk)          -- Last), Recommended_Chunk_Size);
Engine/neo-core-compression.adb:96:47     - Unknown word (Recommended)    -- Natural (Last) /= Natural (Recommended_Chunk_Size));
Engine/neo-core-compression.adb:96:59     - Unknown word (Chunk)          -- Natural (Recommended_Chunk_Size));
Engine/neo-core-compression.adb:98:12     - Unknown word (hint)           -- size_hint := Thin.ZSTD_decompressStream
Engine/neo-core-compression.ads:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-core-compression.ads:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-core-compression.ads:10:110    - Unknown word (warranty)     -- without even the implied warranty of                -
Engine/neo-core-compression.ads:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-core-compression.ads:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-core-compression.ads:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-core-compression.ads:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-core-compression.ads:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-core-compression.ads:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-core-compression.ads:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-core-compression.ads:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-core-compression.ads:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-core-compression.ads:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-core-compression.ads:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-core-compression.ads:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-core-compression.ads:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-core-compression.ads:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-core-compression.ads:19:18     - Unknown word (Compression)  -- package Neo.Core.Compression is
Engine/neo-core-compression.ads:22:6      - Unknown word (Compression)  -- -- Compression --
Engine/neo-core-compression.ads:29:12     - Unknown word (compression)  -- -- Delta compression --
Engine/neo-core-compression.ads:5:52      - Unknown word (Copyright)  -- Copyright (C) 2016 Justin Squirek
Engine/neo-core-compression.ads:5:71      - Unknown word (Justin)     -- Copyright (C) 2016 Justin Squirek
Engine/neo-core-compression.ads:5:78      - Unknown word (Squirek)    -- Copyright (C) 2016 Justin Squirek
Engine/neo-core-compression.ads:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-core-compression.ads:8:30      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-core-compression.ads:8:70      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-core-compression.ads:8:87      - Unknown word (later)        -- at your option) any later version.
Engine/neo-core-console.adb:101:50    - Unknown word (True)         -- := True;
Engine/neo-core-console.adb:101:7     - Unknown word (Settable)     -- Settable : Bool
Engine/neo-core-console.adb:102:108   - Unknown word (forgotten)    -- out of scope is not forgotten
Engine/neo-core-console.adb:102:59    - Unknown word (UNBOUND)      -- := NULL_STR_UNBOUND; -- A cvar that goes
Engine/neo-core-console.adb:102:78    - Unknown word (that)         -- STR_UNBOUND; -- A cvar that goes out of scope is
Engine/neo-core-console.adb:102:83    - Unknown word (goes)         -- UNBOUND; -- A cvar that goes out of scope is not
Engine/neo-core-console.adb:102:95    - Unknown word (scope)        -- cvar that goes out of scope is not forgotten
Engine/neo-core-console.adb:109:11    - Unknown word (Hashed)       -- package Hashed_CVar is new Neo.Core
Engine/neo-core-console.adb:109:42    - Unknown word (Hashed)       -- CVar is new Neo.Core.Hashed (CVar_State);    use
Engine/neo-core-console.adb:109:70    - Unknown word (Hashed)       -- CVar_State); use Hashed_CVar.Unsafe;
Engine/neo-core-console.adb:109:82    - Unknown word (Unsafe)       -- use Hashed_CVar.Unsafe;
Engine/neo-core-console.adb:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-core-console.adb:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-core-console.adb:10:110    - Unknown word (warranty)     -- without even the implied warranty of                -
Engine/neo-core-console.adb:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-core-console.adb:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-core-console.adb:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-core-console.adb:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-core-console.adb:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-core-console.adb:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-core-console.adb:110:11    - Unknown word (Hashed)       -- package Hashed_Command is new Neo.Core
Engine/neo-core-console.adb:110:42    - Unknown word (Hashed)       -- Command is new Neo.Core.Hashed (Command_State); use
Engine/neo-core-console.adb:110:85    - Unknown word (Unsafe)       -- use Hashed_Command.Unsafe;
Engine/neo-core-console.adb:112:13    - Unknown word (maps)         -- -- Global maps
Engine/neo-core-console.adb:117:6     - Unknown word (Internal)     -- -- Internal CVar --
Engine/neo-core-console.adb:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-core-console.adb:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-core-console.adb:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-core-console.adb:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-core-console.adb:120:13    - Unknown word (functionality) -- -- Common functionality shared between different
Engine/neo-core-console.adb:120:34    - Unknown word (between)       -- functionality shared between different CVar kinds
Engine/neo-core-console.adb:120:42    - Unknown word (different)     -- functionality shared between different CVar kinds - registration
Engine/neo-core-console.adb:120:57    - Unknown word (kinds)         -- between different CVar kinds - registration and deletion
Engine/neo-core-console.adb:126:24    - Unknown word (True)          -- Settable : Bool := True;
Engine/neo-core-console.adb:126:5     - Unknown word (Settable)      -- Settable : Bool := True;
Engine/neo-core-console.adb:129:20    - Unknown word (Handle)        -- with procedure Handle_Set (Val : Str);
Engine/neo-core-console.adb:130:19    - Unknown word (Handle)        -- with function Handle_Get return Str;
Engine/neo-core-console.adb:131:19    - Unknown word (Handle)        -- with function Handle_Get_Val return Str;
Engine/neo-core-console.adb:133:16    - Unknown word (Internal)      -- package CVar_Internal is
Engine/neo-core-console.adb:135:41    - Unknown word (Controlled)    -- State is new Limited_Controlled with null record;
Engine/neo-core-console.adb:138:11    - Unknown word (Controller)    -- Ptr_Controller : Ptr_Control_State
Engine/neo-core-console.adb:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-core-console.adb:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-core-console.adb:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-core-console.adb:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-core-console.adb:142:7     - Unknown word (Duplicate)     -- Duplicate : Exception;
Engine/neo-core-console.adb:144:19    - Unknown word (workaround)    -- --! Part of workaround
Engine/neo-core-console.adb:145:32    - Unknown word (False)         -- Finalize : Boolean := False;
Engine/neo-core-console.adb:147:10    - Unknown word (Accessors)     -- -- Accessors
Engine/neo-core-console.adb:148:16    - Unknown word (Informal)      -- function Informal_Handle_Get_Val return
Engine/neo-core-console.adb:148:25    - Unknown word (Handle)        -- function Informal_Handle_Get_Val return Str is
Engine/neo-core-console.adb:148:55    - Unknown word (Handle)        -- Get_Val return Str is (Handle_Get_Val);
Engine/neo-core-console.adb:149:16    - Unknown word (Informal)      -- function Informal_Handle_Get return
Engine/neo-core-console.adb:150:17    - Unknown word (Informal)      -- procedure Informal_Handle_Set (Val : Str
Engine/neo-core-console.adb:152:18    - Unknown word (Settable)      -- if not Settable then
Engine/neo-core-console.adb:153:35    - Unknown word (settable)      -- Line (Name & " is not settable!");
Engine/neo-core-console.adb:159:10    - Unknown word (Controller)    -- -- Controller
Engine/neo-core-console.adb:164:24    - Unknown word (hacks)         -- -- Stacks of hacks :(
Engine/neo-core-console.adb:166:16    - Unknown word (Settable)      -- if Settable then CVars.Replace
Engine/neo-core-console.adb:166:52    - Unknown word (True)          -- CVars.Replace (Name, (True, U (Handle_Get), null
Engine/neo-core-console.adb:169:25    - Unknown word (workaround)    -- --! Part of workaround
Engine/neo-core-console.adb:16:19     - Unknown word (string)       -- -- TODO: Optimize string stuff, perserve config
Engine/neo-core-console.adb:16:26     - Unknown word (stuff)        -- TODO: Optimize string stuff, perserve config comments
Engine/neo-core-console.adb:16:33     - Unknown word (perserve)     -- Optimize string stuff, perserve config comments, and
Engine/neo-core-console.adb:16:63     - Unknown word (localization) -- config comments, and localization
Engine/neo-core-console.adb:170:28    - Unknown word (True)          -- In_Finalize := True;
Engine/neo-core-console.adb:171:23    - Unknown word (Controller)    -- Free (Ptr_Controller);
Engine/neo-core-console.adb:175:8     - Unknown word (Executable)    -- -- Executable section
Engine/neo-core-console.adb:178:84    - Unknown word (Duplicate)     -- Get /= null then raise Duplicate; end if;
Engine/neo-core-console.adb:180:43    - Unknown word (Informal)      -- Get_Val => Informal_Handle_Get_Val'Unrestricted
Engine/neo-core-console.adb:180:67    - Unknown word (Unrestricted)  -- Informal_Handle_Get_Val'Unrestricted_Access,
Engine/neo-core-console.adb:181:43    - Unknown word (Informal)      -- Get => Informal_Handle_Get'Unrestricted
Engine/neo-core-console.adb:181:63    - Unknown word (Unrestricted)  -- Informal_Handle_Get'Unrestricted_Access,
Engine/neo-core-console.adb:182:63    - Unknown word (Unrestricted)  -- Informal_Handle_Set'Unrestricted_Access,
Engine/neo-core-console.adb:183:31    - Unknown word (Settable)      -- Settable => Settable));
Engine/neo-core-console.adb:186:51    - Unknown word (UNBOUND)       -- Val => NULL_STR_UNBOUND,
Engine/neo-core-console.adb:187:66    - Unknown word (Unrestricted)  -- Informal_Handle_Get_Val'Unrestricted_Access,
Engine/neo-core-console.adb:188:62    - Unknown word (Unrestricted)  -- Informal_Handle_Get'Unrestricted_Access,
Engine/neo-core-console.adb:193:23    - Unknown word (workaround)    -- --! Part of the workaround
Engine/neo-core-console.adb:194:11    - Unknown word (Controller)    -- Ptr_Controller := new Control_State
Engine/neo-core-console.adb:201:26    - Unknown word (displayable)   -- Maximum cvar values displayable after query
Engine/neo-core-console.adb:201:38    - Unknown word (after)         -- cvar values displayable after query
Engine/neo-core-console.adb:201:6     - Unknown word (Maximum)       -- -- Maximum cvar values displayable
Engine/neo-core-console.adb:202:14    - Unknown word (DISPLAYABLE)   -- MAX_VALUES_DISPLAYABLE : constant Positive
Engine/neo-core-console.adb:205:52    - Unknown word (Trim)          -- Var_T) return Str is (Trim (Get'Wide_Image, Both
Engine/neo-core-console.adb:205:62    - Unknown word (Wide)          -- return Str is (Trim (Get'Wide_Image, Both));
Engine/neo-core-console.adb:205:74    - Unknown word (Both)          -- Trim (Get'Wide_Image, Both));
Engine/neo-core-console.adb:208:41    - Unknown word (Discrete)      -- Internal is new Safe_Discrete (Var_T, Initial);
Engine/neo-core-console.adb:208:58    - Unknown word (Initial)       -- Safe_Discrete (Var_T, Initial);
Engine/neo-core-console.adb:211:10    - Unknown word (Accessors)     -- -- Accessors
Engine/neo-core-console.adb:215:22    - Unknown word (interaction)   -- -- Commandline interaction
Engine/neo-core-console.adb:217:40    - Unknown word (UNBOUND)       -- Unbound := NULL_STR_UNBOUND;
Engine/neo-core-console.adb:219:76    - Unknown word (DISPLAYABLE)   -- First) > MAX_VALUES_DISPLAYABLE then
Engine/neo-core-console.adb:220:36    - Unknown word (Wide)          -- Vals := U (Var_T'First'Wide_Image & " .." & Var
Engine/neo-core-console.adb:220:68    - Unknown word (Wide)          -- " .." & Var_T'Last'Wide_Image);
Engine/neo-core-console.adb:223:66    - Unknown word (Wide)          -- then Vals := " " & U (I'Wide_Image);
Engine/neo-core-console.adb:224:47    - Unknown word (Wide)          -- Vals & ", " & U (I'Wide_Image); end if;
Engine/neo-core-console.adb:227:18    - Unknown word (Help)          -- return Help & EOL & "Current value
Engine/neo-core-console.adb:227:73    - Unknown word (Possible)      -- To_Str (Get) & EOL & "Possible values:" & S (Vals)
Engine/neo-core-console.adb:238:22    - Unknown word (Incorrect)     -- Line ("Incorrect parameter for cvar
Engine/neo-core-console.adb:23:25     - Unknown word (structure)    -- Internal protected structure of task-safe output
Engine/neo-core-console.adb:23:43     - Unknown word (safe)         -- protected structure of task-safe output
Engine/neo-core-console.adb:23:6      - Unknown word (Internal)     -- -- Internal protected structure
Engine/neo-core-console.adb:24:13     - Unknown word (Safe)         -- protected Safe_IO is
Engine/neo-core-console.adb:257:56    - Unknown word (Initial)       -- Safe_Digits (Var_T, Initial);
Engine/neo-core-console.adb:25:40     - Unknown word (Unbound)      -- return Str_Unbound;
Engine/neo-core-console.adb:260:10    - Unknown word (Accessors)     -- -- Accessors
Engine/neo-core-console.adb:264:22    - Unknown word (interaction)   -- -- Commandline interaction
Engine/neo-core-console.adb:266:10    - Unknown word (Help)          -- (Help & EOL & "Current value
Engine/neo-core-console.adb:266:65    - Unknown word (Possible)      -- To_Str (Get) & EOL & "Possible values: " & To_Str
Engine/neo-core-console.adb:26:40     - Unknown word (Unbound)      -- Input_Entry return Str_Unbound;
Engine/neo-core-console.adb:271:18    - Unknown word (Incorrect)     -- Line ("Incorrect parameter for cvar
Engine/neo-core-console.adb:27:36     - Unknown word (Positive)     -- Line_Size return Positive;
Engine/neo-core-console.adb:287:58    - Unknown word (Initial)       -- Safe (Str_Unbound, U (Initial));
Engine/neo-core-console.adb:290:10    - Unknown word (Accessors)     -- -- Accessors
Engine/neo-core-console.adb:296:22    - Unknown word (interaction)   -- -- Commandline interaction
Engine/neo-core-console.adb:297:42    - Unknown word (Help)          -- Handle_Get return Str is (Help & EOL & "Current value
Engine/neo-core-console.adb:299:36    - Unknown word (call)          -- Warnings (Off); -- warning: call to "Set" may occur before
Engine/neo-core-console.adb:299:54    - Unknown word (occur)         -- warning: call to "Set" may occur before body is seen
Engine/neo-core-console.adb:299:60    - Unknown word (before)        -- call to "Set" may occur before body is seen
Engine/neo-core-console.adb:299:75    - Unknown word (seen)          -- occur before body is seen
Engine/neo-core-console.adb:299:8     - Unknown word (Warnings)      -- pragma Warnings (Off); -- warning: call
Engine/neo-core-console.adb:301:8     - Unknown word (Warnings)      -- pragma Warnings (On);
Engine/neo-core-console.adb:30:37     - Unknown word (Positive)     -- Line_Size (Val  : Positive);
Engine/neo-core-console.adb:314:18    - Unknown word (Parse)         -- Duplicate, Parse : Exception;
Engine/neo-core-console.adb:314:7     - Unknown word (Duplicate)     -- Duplicate, Parse : Exception;
Engine/neo-core-console.adb:316:10    - Unknown word (Callback)     -- -- Callback is a generic formal
Engine/neo-core-console.adb:316:32    - Unknown word (formal)       -- Callback is a generic formal so a rename needs to
Engine/neo-core-console.adb:316:51    - Unknown word (needs)        -- generic formal so a rename needs to be present to pass
Engine/neo-core-console.adb:316:63    - Unknown word (present)      -- a rename needs to be present to pass out function
Engine/neo-core-console.adb:316:92    - Unknown word (pointers)     -- to pass out function pointers
Engine/neo-core-console.adb:317:26    - Unknown word (Callback)     -- procedure Informal_Callback (Args : Array_Str_Unbound
Engine/neo-core-console.adb:317:71    - Unknown word (Callback)     -- Str_Unbound) is begin Callback (Args); end;
Engine/neo-core-console.adb:319:10    - Unknown word (Controller)   -- -- Controller
Engine/neo-core-console.adb:31:41     - Unknown word (Unbound)      -- Input_Entry (Val  : Str_Unbound);
Engine/neo-core-console.adb:320:33    - Unknown word (Controlled)   -- Control_State is new Controlled with null record;
Engine/neo-core-console.adb:325:41    - Unknown word (Duplicate)    -- Has (Name) then raise Duplicate; end if;
Engine/neo-core-console.adb:326:46    - Unknown word (Callback)     -- Name, (Save, Informal_Callback'Unrestricted_Access
Engine/neo-core-console.adb:329:18    - Unknown word (parsing)      -- -- Input entry parsing
Engine/neo-core-console.adb:334:85    - Unknown word (Length)       -- All (Tokens (2..Tokens'Length));
Engine/neo-core-console.adb:336:19    - Unknown word (Length)       -- if Tokens'Length = 1 then
Engine/neo-core-console.adb:340:53    - Unknown word (such)         -- Line (Text); Line ("No such cvar or command!");
Engine/neo-core-console.adb:352:14    - Unknown word (Vector)       -- Result : Vector_Str_Unbound.Unsafe.Vector
Engine/neo-core-console.adb:352:33    - Unknown word (Unsafe)       -- Vector_Str_Unbound.Unsafe.Vector;
Engine/neo-core-console.adb:352:40    - Unknown word (Vector)       -- Vector_Str_Unbound.Unsafe.Vector;
Engine/neo-core-console.adb:355:30    - Unknown word (Length)       -- if S (CVar) (1..Text'Length) = Text then Result
Engine/neo-core-console.adb:357:14    - Unknown word (Vector)       -- return Vector_Str_Unbound.To_Unsafe
Engine/neo-core-console.adb:357:36    - Unknown word (Unsafe)       -- Vector_Str_Unbound.To_Unsafe_Array (Result);
Engine/neo-core-console.adb:35:33     - Unknown word (Unbound)      -- Current_Log : Str_Unbound := NULL_STR_UNBOUND
Engine/neo-core-console.adb:35:59     - Unknown word (UNBOUND)      -- Unbound := NULL_STR_UNBOUND;
Engine/neo-core-console.adb:361:6     - Unknown word (Localization) -- -- Localization --
Engine/neo-core-console.adb:365:100   - Unknown word (Unsafe)       -- use Hashed_Language.Unsafe;
Engine/neo-core-console.adb:368:6     - Unknown word (Initalized)   -- -- Initalized data
Engine/neo-core-console.adb:369:3     - Unknown word (Locales)      -- Locales : Hashed_Locale.Unsafe
Engine/neo-core-console.adb:369:57    - Unknown word (Localization) -- Map; --  := Initialize_Localization;
Engine/neo-core-console.adb:36:33     - Unknown word (Unbound)      -- Current_Input_Entry : Str_Unbound := NULL_STR_UNBOUND
Engine/neo-core-console.adb:36:59     - Unknown word (UNBOUND)      -- Unbound := NULL_STR_UNBOUND;
Engine/neo-core-console.adb:371:6     - Unknown word (Initialization) -- -- Initialization
Engine/neo-core-console.adb:372:24    - Unknown word (Localization)   -- procedure Initialize_Localization (Path : Str) is
Engine/neo-core-console.adb:373:20    - Unknown word (Columns)        -- function Split_Columns (Text : Str) return
Engine/neo-core-console.adb:373:48    - Unknown word (Vector)         -- (Text : Str) return Vector_Str_Unbound.Unsafe.Vector
Engine/neo-core-console.adb:373:74    - Unknown word (Vector)         -- Vector_Str_Unbound.Unsafe.Vector is
Engine/neo-core-console.adb:379:25    - Unknown word (True)           -- In_Column : Bool := True;
Engine/neo-core-console.adb:379:8     - Unknown word (Column)         -- In_Column : Bool := True;
Engine/neo-core-console.adb:380:25    - Unknown word (False)          -- In_Quote : Bool := False;
Engine/neo-core-console.adb:381:5     - Unknown word (Column)         -- Column : Str_Unbound;
Engine/neo-core-console.adb:383:5     - Unknown word (Indexes)        -- Indexes : Hashed_Positive
Engine/neo-core-console.adb:385:5     - Unknown word (Entries)        -- Entries : Vector_Str_Unbound
Engine/neo-core-console.adb:38:29     - Unknown word (Positive)     -- Current_Tasks : Positive := 1;
Engine/neo-core-console.adb:390:9     - Unknown word (Indexes)        -- Indexes.Insert (I, J);
Engine/neo-core-console.adb:391:9     - Unknown word (Locales)        -- Locales.Insert (I, Language
Engine/neo-core-console.adb:399:17    - Unknown word (Column)         -- Column := NULL_STR_UNBOUND
Engine/neo-core-console.adb:39:29     - Unknown word (Positive)     -- Current_Line_Size : Positive := 80;
Engine/neo-core-console.adb:402:17    - Unknown word (Entries)        -- Entries.Append (Column);
Engine/neo-core-console.adb:402:33    - Unknown word (Column)         -- Entries.Append (Column);
Engine/neo-core-console.adb:403:17    - Unknown word (Column)         -- Column := NULL_STR_UNBOUND
Engine/neo-core-console.adb:404:30    - Unknown word (False)          -- In_Quote := False;
Engine/neo-core-console.adb:405:30    - Unknown word (False)          -- In_Column := False;
Engine/neo-core-console.adb:411:17    - Unknown word (Entries)        -- Entries.Append (Trim (Column
Engine/neo-core-console.adb:411:33    - Unknown word (Trim)           -- Entries.Append (Trim (Column, Both));
Engine/neo-core-console.adb:411:47    - Unknown word (Both)           -- Append (Trim (Column, Both));
Engine/neo-core-console.adb:417:12    - Unknown word (Trim)           -- if Trim (Column, Both) /= NULL
Engine/neo-core-console.adb:417:26    - Unknown word (Both)           -- if Trim (Column, Both) /= NULL_STR_UNBOUND
Engine/neo-core-console.adb:417:57    - Unknown word (Entries)        -- NULL_STR_UNBOUND then Entries.Append (Trim (Column
Engine/neo-core-console.adb:417:73    - Unknown word (Trim)           -- then Entries.Append (Trim (Column, Both)); end
Engine/neo-core-console.adb:417:87    - Unknown word (Both)           -- Append (Trim (Column, Both)); end if;
Engine/neo-core-console.adb:418:18    - Unknown word (Locales)        -- for I in Locales.Iterate loop
Engine/neo-core-console.adb:419:23    - Unknown word (Element)        -- Language := Element (I);
Engine/neo-core-console.adb:41:18     - Unknown word (Safe)         -- protected body Safe_IO is
Engine/neo-core-console.adb:420:28    - Unknown word (Entries)        -- Language.Insert (Entries (Indexes.Element (ENG
Engine/neo-core-console.adb:420:37    - Unknown word (Indexes)        -- Language.Insert (Entries (Indexes.Element (ENG)), (if
Engine/neo-core-console.adb:420:45    - Unknown word (Element)        -- Insert (Entries (Indexes.Element (ENG)), (if Int (Entries
Engine/neo-core-console.adb:420:78    - Unknown word (Length)         -- ), (if Int (Entries.Length) >= Indexes.Element
Engine/neo-core-console.adb:420:89    - Unknown word (Indexes)        -- (Entries.Length) >= Indexes.Element (Key (I)) then
Engine/neo-core-console.adb:420:97    - Unknown word (Element)        -- Entries.Length) >= Indexes.Element (Key (I)) then
Engine/neo-core-console.adb:421:73    - Unknown word (Indexes)        -- Entries (Indexes.Element (Key (I))) else
Engine/neo-core-console.adb:421:81    - Unknown word (Element)        -- Entries (Indexes.Element (Key (I))) else NULL
Engine/neo-core-console.adb:422:11    - Unknown word (Locales)        -- Locales.Replace (Key (I), Language
Engine/neo-core-console.adb:426:40    - Unknown word (localization)   -- others => Line ("No localization found... using English
Engine/neo-core-console.adb:426:53    - Unknown word (found)          -- Line ("No localization found... using English");
Engine/neo-core-console.adb:426:62    - Unknown word (using)          -- localization found... using English"); end;
Engine/neo-core-console.adb:426:68    - Unknown word (English)        -- localization found... using English"); end;
Engine/neo-core-console.adb:429:12    - Unknown word (Localize)       -- function Localize (Item : Str) return
Engine/neo-core-console.adb:431:90    - Unknown word (This)           -- (2) & CODE (3)); -- This is stupid...
Engine/neo-core-console.adb:431:98    - Unknown word (stupid)         -- CODE (3)); -- This is stupid...
Engine/neo-core-console.adb:434:26    - Unknown word (Locales)        -- and then Locales.Contains (LANG)
Engine/neo-core-console.adb:434:34    - Unknown word (Contains)       -- and then Locales.Contains (LANG)
Engine/neo-core-console.adb:435:34    - Unknown word (Element)        -- and then Locales.Element (LANG).Contains (To
Engine/neo-core-console.adb:435:49    - Unknown word (Contains)       -- Locales.Element (LANG).Contains (To_Str_Unbound (Item
Engine/neo-core-console.adb:44:36     - Unknown word (Positive)     -- Line_Size return Positive is (Current
Engine/neo-core-console.adb:450:61    - Unknown word (finalization)   -- UNBOUND then Line ("Config finalization without initialization
Engine/neo-core-console.adb:450:82    - Unknown word (initialization) -- finalization without initialization!"); return; end if;
Engine/neo-core-console.adb:451:10    - Unknown word (Exists)         -- if Exists (To_Str_8 (Path)) then
Engine/neo-core-console.adb:456:60    - Unknown word (simply)         -- restore default values simply delete this file.")
Engine/neo-core-console.adb:456:74    - Unknown word (this)           -- values simply delete this file.");
Engine/neo-core-console.adb:460:22    - Unknown word (This)           -- -- CVars NOTE: This fails due to finalization
Engine/neo-core-console.adb:460:27    - Unknown word (fails)          -- -- CVars NOTE: This fails due to finalization
Engine/neo-core-console.adb:460:40    - Unknown word (finalization)   -- NOTE: This fails due to finalization bug!
Engine/neo-core-console.adb:486:14    - Unknown word (Exists)         -- if not Exists (To_Str_8 (Path)) then
Engine/neo-core-console.adb:487:33    - Unknown word (found)          -- Line ("No configuration found... using defaults")
Engine/neo-core-console.adb:487:42    - Unknown word (using)          -- configuration found... using defaults");
Engine/neo-core-console.adb:487:48    - Unknown word (defaults)       -- configuration found... using defaults");
Engine/neo-core-console.adb:494:9     - Unknown word (Trim)           -- Trim (Text);
Engine/neo-core-console.adb:495:12    - Unknown word (Length)         -- if Length (Text) > 0 then
Engine/neo-core-console.adb:56:23     - Unknown word (Char)         -- if I = To_Char_16 (ASCII.CR) then Current
Engine/neo-core-console.adb:56:32     - Unknown word (ASCII)        -- if I = To_Char_16 (ASCII.CR) then Current_Lines
Engine/neo-core-console.adb:5:52      - Unknown word (Copyright)  -- Copyright (C) 2016 Justin Squirek
Engine/neo-core-console.adb:5:71      - Unknown word (Justin)     -- Copyright (C) 2016 Justin Squirek
Engine/neo-core-console.adb:5:78      - Unknown word (Squirek)    -- Copyright (C) 2016 Justin Squirek
Engine/neo-core-console.adb:61:13     - Unknown word (Safe)         -- -- Public Safe_IO interface to wrap
Engine/neo-core-console.adb:61:34     - Unknown word (wrap)         -- Safe_IO interface to wrap the protected type
Engine/neo-core-console.adb:63:69     - Unknown word (Safe)         -- is begin Safe_IO.Input_Entry (U (Val
Engine/neo-core-console.adb:64:69     - Unknown word (Safe)         -- is begin Safe_IO.Line_Size (Val);
Engine/neo-core-console.adb:67:33     - Unknown word (Char)         -- Put (Item : Char)
Engine/neo-core-console.adb:69:33     - Unknown word (Char)         -- Line (Item : Char)
Engine/neo-core-console.adb:73:13     - Unknown word (Warn)         -- procedure Warn (Item : Str)
Engine/neo-core-console.adb:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-core-console.adb:85:17     - Unknown word (Upper)        -- Put (To_Upper (C) & " ");
Engine/neo-core-console.adb:8:30      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-core-console.adb:8:70      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-core-console.adb:8:87      - Unknown word (later)        -- at your option) any later version.
Engine/neo-core-console.adb:92:6      - Unknown word (Internal)     -- -- Internal State --
Engine/neo-core-console.adb:95:20     - Unknown word (structures)   -- -- Internal data structures
Engine/neo-core-console.adb:95:6      - Unknown word (Internal)     -- -- Internal data structures
Engine/neo-core-console.adb:98:7      - Unknown word (Callback)     -- Callback : access procedure
Engine/neo-core-console.ads:100:59    - Unknown word (Graphics)      -- Var_T => Graphics_Kind,
Engine/neo-core-console.ads:100:68    - Unknown word (Kind)          -- Var_T => Graphics_Kind,
Engine/neo-core-console.ads:101:47    - Unknown word (Initial)       -- Initial => Medium_Quanlity
Engine/neo-core-console.ads:101:59    - Unknown word (Medium)        -- Initial => Medium_Quanlity,
Engine/neo-core-console.ads:101:66    - Unknown word (Quanlity)      -- Initial => Medium_Quanlity,
Engine/neo-core-console.ads:102:47    - Unknown word (Settable)      -- Settable => True);
Engine/neo-core-console.ads:102:59    - Unknown word (True)          -- Settable => True);
Engine/neo-core-console.ads:104:31    - Unknown word (Ultra)         -- Graphics_Settings.Set (Ultra_Quality);
Engine/neo-core-console.ads:104:37    - Unknown word (Quality)       -- Settings.Set (Ultra_Quality);
Engine/neo-core-console.ads:104:8     - Unknown word (Graphics)      -- -- Graphics_Settings.Set (Ultra
Engine/neo-core-console.ads:106:11    - Unknown word (Graphics)      -- -- if Graphics_Settings.Get = Low_Quality
Engine/neo-core-console.ads:108:17    - Unknown word (vidquality)    -- -- Submit ("vidquality low_quality");
Engine/neo-core-console.ads:108:32    - Unknown word (quality)       -- Submit ("vidquality low_quality");
Engine/neo-core-console.ads:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-core-console.ads:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-core-console.ads:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo-core-console.ads:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-core-console.ads:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-core-console.ads:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-core-console.ads:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-core-console.ads:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-core-console.ads:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-core-console.ads:113:5     - Unknown word (Help)          -- Help : Str;
Engine/neo-core-console.ads:115:5     - Unknown word (Initial)       -- Initial : Var_T := Var_T'First
Engine/neo-core-console.ads:116:25    - Unknown word (True)          -- Settable : Bool  := True;
Engine/neo-core-console.ads:116:5     - Unknown word (Settable)      -- Settable : Bool  := True;
Engine/neo-core-console.ads:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-core-console.ads:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-core-console.ads:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-core-console.ads:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-core-console.ads:124:5     - Unknown word (Help)          -- Help : Str;
Engine/neo-core-console.ads:126:5     - Unknown word (Initial)       -- Initial : Var_T := 0.0;
Engine/neo-core-console.ads:127:25    - Unknown word (True)          -- Settable : Bool  := True;
Engine/neo-core-console.ads:127:5     - Unknown word (Settable)      -- Settable : Bool  := True;
Engine/neo-core-console.ads:135:5     - Unknown word (Help)          -- Help : Str;
Engine/neo-core-console.ads:136:5     - Unknown word (Initial)       -- Initial : Str  := "?";
Engine/neo-core-console.ads:137:24    - Unknown word (True)          -- Settable : Bool := True;
Engine/neo-core-console.ads:137:5     - Unknown word (Settable)      -- Settable : Bool := True;
Engine/neo-core-console.ads:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-core-console.ads:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-core-console.ads:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-core-console.ads:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-core-console.ads:16:10     - Unknown word (Locales)      -- with Ada.Locales; use Ada.Locales
Engine/neo-core-console.ads:16:32     - Unknown word (Locales)      -- Locales; use Ada.Locales;
Engine/neo-core-console.ads:17:15     - Unknown word (Strings)      -- with Neo.Core.Strings; use Neo.Core.Strings
Engine/neo-core-console.ads:17:37     - Unknown word (Strings)      -- Strings; use Neo.Core.Strings;
Engine/neo-core-console.ads:19:15     - Unknown word (Maps)         -- with Neo.Core.Maps; use Neo.Core.Maps
Engine/neo-core-console.ads:19:37     - Unknown word (Maps)         -- Maps; use Neo.Core.Maps;
Engine/neo-core-console.ads:20:15     - Unknown word (Hashed)       -- with Neo.Core.Hashed;
Engine/neo-core-console.ads:22:29     - Unknown word (interfacing)  -- safe IO and console interfacing types
Engine/neo-core-console.ads:22:9      - Unknown word (safe)         -- -- Task safe IO and console interfacing
Engine/neo-core-console.ads:25:6      - Unknown word (Submission)   -- -- Submission and query of commands
Engine/neo-core-console.ads:28:55     - Unknown word (Unbound)      -- Str) return Array_Str_Unbound;
Engine/neo-core-console.ads:30:24     - Unknown word (localization) -- - Configuration and localization
Engine/neo-core-console.ads:33:24     - Unknown word (Localization) -- procedure Initialize_Localization (Path : Str);
Engine/neo-core-console.ads:34:12     - Unknown word (Localize)     -- function Localize (Item : Str) return
Engine/neo-core-console.ads:34:52     - Unknown word (english)      -- Str) return Str; -- An english text string acts as
Engine/neo-core-console.ads:34:65     - Unknown word (string)       -- -- An english text string acts as a key to other
Engine/neo-core-console.ads:34:72     - Unknown word (acts)         -- english text string acts as a key to other languages
Engine/neo-core-console.ads:34:89     - Unknown word (other)        -- string acts as a key to other languages
Engine/neo-core-console.ads:34:95     - Unknown word (languages)    -- acts as a key to other languages
Engine/neo-core-console.ads:40:39     - Unknown word (Unsigned)     -- return Int_64_Unsigned;
Engine/neo-core-console.ads:41:36     - Unknown word (Unbound)      -- return Str_Unbound;
Engine/neo-core-console.ads:44:32     - Unknown word (Positive)     -- Line_Size return Positive;
Engine/neo-core-console.ads:45:37     - Unknown word (Unbound)      -- (Item : Str_Unbound);
Engine/neo-core-console.ads:46:33     - Unknown word (Char)         -- Put (Item : Char);
Engine/neo-core-console.ads:48:33     - Unknown word (Char)         -- Line (Item : Char);
Engine/neo-core-console.ads:51:13     - Unknown word (Warn)         -- procedure Warn (Item : Str)
Engine/neo-core-console.ads:54:37     - Unknown word (Unbound)      -- Line (Item : Str_Unbound);
Engine/neo-core-console.ads:55:33     - Unknown word (Positive)     -- Line_Size (Val  : Positive);
Engine/neo-core-console.ads:58:103    - Unknown word (mode)         -- compiled in non-debugging mode
Engine/neo-core-console.ads:58:43     - Unknown word (purposes)     -- Put; -- For debugging purposes, using this may crash
Engine/neo-core-console.ads:58:53     - Unknown word (using)        -- debugging purposes, using this may crash if compiled
Engine/neo-core-console.ads:58:59     - Unknown word (this)         -- debugging purposes, using this may crash if compiled
Engine/neo-core-console.ads:58:68     - Unknown word (crash)        -- purposes, using this may crash if compiled in non-debugging
Engine/neo-core-console.ads:58:77     - Unknown word (compiled)     -- using this may crash if compiled in non-debugging mode
Engine/neo-core-console.ads:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo-core-console.ads:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo-core-console.ads:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo-core-console.ads:64:26     - Unknown word (creates)      -- The command package creates an interface to a procedure
Engine/neo-core-console.ads:64:67     - Unknown word (arguments)    -- to a procedure with arguments accessable to a user
Engine/neo-core-console.ads:64:77     - Unknown word (accessable)   -- procedure with arguments accessable to a user through the
Engine/neo-core-console.ads:64:98     - Unknown word (through)      -- accessable to a user through the command line (Submit
Engine/neo-core-console.ads:65:116    - Unknown word (binding)      -- internal state (e.g. binding a
Engine/neo-core-console.ads:65:22     - Unknown word (callback)     -- -- procedure). The callback for this command takes
Engine/neo-core-console.ads:65:35     - Unknown word (this)         -- procedure). The callback for this command takes strings
Engine/neo-core-console.ads:65:48     - Unknown word (takes)        -- callback for this command takes strings as arguments
Engine/neo-core-console.ads:65:54     - Unknown word (strings)      -- for this command takes strings as arguments and may
Engine/neo-core-console.ads:65:65     - Unknown word (arguments)    -- command takes strings as arguments and may change some
Engine/neo-core-console.ads:65:90     - Unknown word (some)         -- arguments and may change some internal state (e.g
Engine/neo-core-console.ads:65:95     - Unknown word (internal)     -- and may change some internal state (e.g. binding
Engine/neo-core-console.ads:66:125    - Unknown word (will)         -- state used by a command will be
Engine/neo-core-console.ads:66:35     - Unknown word (like)         -- controls to actions like jump or crouch). The
Engine/neo-core-console.ads:66:40     - Unknown word (jump)         -- controls to actions like jump or crouch). The Save
Engine/neo-core-console.ads:66:48     - Unknown word (crouch)       -- actions like jump or crouch). The Save parameter
Engine/neo-core-console.ads:66:92     - Unknown word (internal)     -- parameter controls how an internal state used by a command
Engine/neo-core-console.ads:67:6      - Unknown word (stored)       -- -- stored in a configuration file
Engine/neo-core-console.ads:70:18     - Unknown word (Callback)     -- -- procedure Callback_Bind (Args : Array_Str
Engine/neo-core-console.ads:70:27     - Unknown word (Bind)         -- procedure Callback_Bind (Args : Array_Str_Unbound
Engine/neo-core-console.ads:70:50     - Unknown word (Unbound)      -- Bind (Args : Array_Str_Unbound);
Engine/neo-core-console.ads:71:22     - Unknown word (Binds)        -- -- function Save_Binds return Str;
Engine/neo-core-console.ads:72:16     - Unknown word (Bind)         -- -- package Bind is new Command ("bind
Engine/neo-core-console.ads:72:38     - Unknown word (bind)         -- Bind is new Command ("bind", Callback_Bind, Save
Engine/neo-core-console.ads:72:45     - Unknown word (Callback)     -- new Command ("bind", Callback_Bind, Save_Binds'Access
Engine/neo-core-console.ads:72:54     - Unknown word (Bind)         -- Command ("bind", Callback_Bind, Save_Binds'Access)
Engine/neo-core-console.ads:72:65     - Unknown word (Binds)        -- Callback_Bind, Save_Binds'Access);
Engine/neo-core-console.ads:74:17     - Unknown word (bind)         -- -- Submit ("bind right_mouse_button jump
Engine/neo-core-console.ads:74:41     - Unknown word (jump)         -- bind right_mouse_button jump");
Engine/neo-core-console.ads:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-core-console.ads:83:20     - Unknown word (Callback)     -- with procedure Callback (Args : Array_Str_Unbound
Engine/neo-core-console.ads:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-core-console.ads:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-core-console.ads:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo-core-console.ads:91:109    - Unknown word (that)         -- a changable setting that can be loaded
Engine/neo-core-console.ads:91:121    - Unknown word (loaded)       -- setting that can be loaded
Engine/neo-core-console.ads:91:78     - Unknown word (represents)   -- of a game engine. It represents a changable setting
Engine/neo-core-console.ads:91:91     - Unknown word (changable)    -- engine. It represents a changable setting that can be
Engine/neo-core-console.ads:92:100    - Unknown word (this)         -- window. In the Neo engine this package allows
Engine/neo-core-console.ads:92:113    - Unknown word (allows)       -- engine this package allows
Engine/neo-core-console.ads:93:20     - Unknown word (between)       -- -- communication between between tasks (Set and
Engine/neo-core-console.ads:93:28     - Unknown word (between)       -- communication between between tasks (Set and Get)
Engine/neo-core-console.ads:93:6      - Unknown word (communication) -- -- communication between between tasks
Engine/neo-core-console.ads:94:28     - Unknown word (discrete)      -- It is limited to only discrete types (integers and
Engine/neo-core-console.ads:94:57     - Unknown word (enumerations)  -- types (integers and enumerations).
Engine/neo-core-console.ads:97:13     - Unknown word (Graphics)      -- -- type Graphics_Kind is (Low_Quality
Engine/neo-core-console.ads:97:22     - Unknown word (Kind)          -- -- type Graphics_Kind is (Low_Quality, Medium
Engine/neo-core-console.ads:97:35     - Unknown word (Quality)       -- Graphics_Kind is (Low_Quality, Medium_Quanlity, High
Engine/neo-core-console.ads:97:44     - Unknown word (Medium)        -- Kind is (Low_Quality, Medium_Quanlity, High_Quality
Engine/neo-core-console.ads:97:51     - Unknown word (Quanlity)      -- Low_Quality, Medium_Quanlity, High_Quality, Ultra
Engine/neo-core-console.ads:97:66     - Unknown word (Quality)       -- Medium_Quanlity, High_Quality, Ultra_Quality);
Engine/neo-core-console.ads:97:75     - Unknown word (Ultra)         -- Quanlity, High_Quality, Ultra_Quality);
Engine/neo-core-console.ads:97:81     - Unknown word (Quality)       -- High_Quality, Ultra_Quality);
Engine/neo-core-console.ads:98:16     - Unknown word (Graphics)      -- -- package Graphics_Settings is new CVar
Engine/neo-core-console.ads:98:60     - Unknown word (vidquality)    -- new CVar (Name     => "vidquality",
Engine/neo-core-console.ads:99:47     - Unknown word (Help)          -- Help => "Quality of graphics
Engine/neo-core-console.ads:99:60     - Unknown word (Quality)       -- Help => "Quality of graphics",
Engine/neo-core-console.ads:99:71     - Unknown word (graphics)      -- Help => "Quality of graphics",
Engine/neo-core-hashed.adb:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-core-hashed.adb:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-core-hashed.adb:10:110    - Unknown word (warranty)     -- without even the implied warranty of                -
Engine/neo-core-hashed.adb:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-core-hashed.adb:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-core-hashed.adb:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-core-hashed.adb:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-core-hashed.adb:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-core-hashed.adb:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-core-hashed.adb:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-core-hashed.adb:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-core-hashed.adb:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-core-hashed.adb:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-core-hashed.adb:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-core-hashed.adb:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-core-hashed.adb:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-core-hashed.adb:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-core-hashed.adb:16:23     - Unknown word (Hashed)       -- package body Neo.Core.Hashed is
Engine/neo-core-hashed.adb:17:18     - Unknown word (Safe)         -- protected body Safe_Map is
Engine/neo-core-hashed.adb:18:32     - Unknown word (Unsafe)       -- procedure Set     (Val : Unsafe.Map)
Engine/neo-core-hashed.adb:18:79     - Unknown word (This)         -- is begin This := Val;
Engine/neo-core-hashed.adb:19:79     - Unknown word (This)         -- is begin This.Clear;
Engine/neo-core-hashed.adb:20:39     - Unknown word (Cursor)       -- Next (Pos : in out Cursor)
Engine/neo-core-hashed.adb:20:79     - Unknown word (Unsafe)       -- is begin Unsafe.Next (Pos)
Engine/neo-core-hashed.adb:21:39     - Unknown word (Cursor)       -- Delete (Pos : in out Cursor)
Engine/neo-core-hashed.adb:21:79     - Unknown word (This)         -- is begin This.Delete (Pos
Engine/neo-core-hashed.adb:22:108    - Unknown word (Unbound)      -- Delete (To_Str_Unbound (Key));       end;
Engine/neo-core-hashed.adb:22:79     - Unknown word (This)         -- is begin This.Delete (To
Engine/neo-core-hashed.adb:23:36     - Unknown word (Unbound)      -- procedure Delete  (Key : Str_Unbound)
Engine/neo-core-hashed.adb:23:79     - Unknown word (This)         -- is begin This.Delete (Key
Engine/neo-core-hashed.adb:24:32     - Unknown word (Cursor)       -- procedure Replace (Pos : Cursor; Item : Map_T)
Engine/neo-core-hashed.adb:24:92     - Unknown word (Element)      -- is begin This.Replace_Element (Pos, Item);
Engine/neo-core-hashed.adb:25:108    - Unknown word (Unbound)      -- Replace (To_Str_Unbound (Key), Item); end;
Engine/neo-core-hashed.adb:26:36     - Unknown word (Unbound)      -- procedure Replace (Key : Str_Unbound; Item : Map_T)
Engine/neo-core-hashed.adb:27:108    - Unknown word (Unbound)      -- Insert (To_Str_Unbound (Key), Item); end;
Engine/neo-core-hashed.adb:29:79     - Unknown word (Contains)     -- is (This.Contains (To_Str
Engine/neo-core-hashed.adb:30:79     - Unknown word (Contains)     -- is (This.Contains (Key));
Engine/neo-core-hashed.adb:31:32     - Unknown word (Cursor)       -- function Has      (Pos : Cursor) return Bool
Engine/neo-core-hashed.adb:31:74     - Unknown word (Unsafe)       -- Bool is (Unsafe.Has_Element
Engine/neo-core-hashed.adb:31:85     - Unknown word (Element)      -- is (Unsafe.Has_Element (Pos));
Engine/neo-core-hashed.adb:32:32     - Unknown word (Cursor)       -- function Key      (Pos : Cursor) return Str
Engine/neo-core-hashed.adb:32:77     - Unknown word (Unsafe)       -- is (S (Unsafe.Key (Pos
Engine/neo-core-hashed.adb:35:74     - Unknown word (Unsafe)       -- Map_T is (Unsafe.Element
Engine/neo-core-hashed.adb:35:81     - Unknown word (Element)      -- is (Unsafe.Element (Pos));
Engine/neo-core-hashed.adb:39:16     - Unknown word (Length)       -- function Length
Engine/neo-core-hashed.adb:39:88     - Unknown word (Length)       -- is (Natural (This.Length));
Engine/neo-core-hashed.adb:42:17     - Unknown word (conversions)  -- -- Sorted key conversions
Engine/neo-core-hashed.adb:44:45     - Unknown word (Length)       -- Unbound (1..Int (Val.Length));
Engine/neo-core-hashed.adb:5:52      - Unknown word (Copyright)  -- Copyright (C) 2016 Justin Squirek
Engine/neo-core-hashed.adb:5:71      - Unknown word (Justin)     -- Copyright (C) 2016 Justin Squirek
Engine/neo-core-hashed.adb:5:78      - Unknown word (Squirek)    -- Copyright (C) 2016 Justin Squirek
Engine/neo-core-hashed.adb:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-core-hashed.adb:8:30      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-core-hashed.adb:8:70      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-core-hashed.adb:8:87      - Unknown word (later)        -- at your option) any later version.
Engine/neo-core-hashed.ads:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-core-hashed.ads:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-core-hashed.ads:10:110    - Unknown word (warranty)     -- without even the implied warranty of                -
Engine/neo-core-hashed.ads:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-core-hashed.ads:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-core-hashed.ads:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-core-hashed.ads:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-core-hashed.ads:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-core-hashed.ads:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-core-hashed.ads:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-core-hashed.ads:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-core-hashed.ads:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-core-hashed.ads:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-core-hashed.ads:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-core-hashed.ads:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-core-hashed.ads:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-core-hashed.ads:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-core-hashed.ads:16:21     - Unknown word (Hashed)       -- with Ada.Containers.Hashed_Maps;
Engine/neo-core-hashed.ads:16:28     - Unknown word (Maps)         -- Ada.Containers.Hashed_Maps;
Engine/neo-core-hashed.ads:17:10     - Unknown word (Strings)      -- with Ada.Strings.Wide_Unbounded.Wide
Engine/neo-core-hashed.ads:17:18     - Unknown word (Wide)         -- with Ada.Strings.Wide_Unbounded.Wide_Hash
Engine/neo-core-hashed.ads:17:23     - Unknown word (Unbounded)    -- with Ada.Strings.Wide_Unbounded.Wide_Hash;
Engine/neo-core-hashed.ads:17:33     - Unknown word (Wide)         -- Strings.Wide_Unbounded.Wide_Hash;
Engine/neo-core-hashed.ads:22:18     - Unknown word (Hashed)       -- package Neo.Core.Hashed is
Engine/neo-core-hashed.ads:25:13     - Unknown word (Maps)         -- -- Hashed Maps --
Engine/neo-core-hashed.ads:25:6      - Unknown word (Hashed)       -- -- Hashed Maps --
Engine/neo-core-hashed.ads:29:11     - Unknown word (Unsafe)       -- package Unsafe is new Ada.Containers
Engine/neo-core-hashed.ads:29:40     - Unknown word (Hashed)       -- is new Ada.Containers.Hashed_Maps (Str_Unbound, Map
Engine/neo-core-hashed.ads:29:47     - Unknown word (Maps)         -- Ada.Containers.Hashed_Maps (Str_Unbound, Map_T
Engine/neo-core-hashed.ads:29:57     - Unknown word (Unbound)      -- Containers.Hashed_Maps (Str_Unbound, Map_T, Wide_Hash,
Engine/neo-core-hashed.ads:29:73     - Unknown word (Wide)         -- Str_Unbound, Map_T, Wide_Hash, "=");
Engine/neo-core-hashed.ads:30:11     - Unknown word (Cursor)       -- subtype Cursor is Unsafe.Cursor;
Engine/neo-core-hashed.ads:30:21     - Unknown word (Unsafe)       -- subtype Cursor is Unsafe.Cursor;
Engine/neo-core-hashed.ads:30:28     - Unknown word (Cursor)       -- subtype Cursor is Unsafe.Cursor;
Engine/neo-core-hashed.ads:31:25     - Unknown word (Cursor)       -- NO_ELEMENT : constant Cursor := Unsafe.NO_ELEMENT
Engine/neo-core-hashed.ads:31:39     - Unknown word (Unsafe)       -- constant Cursor     := Unsafe.NO_ELEMENT;
Engine/neo-core-hashed.ads:31:49     - Unknown word (ELEMENT)      -- Cursor := Unsafe.NO_ELEMENT;
Engine/neo-core-hashed.ads:31:6      - Unknown word (ELEMENT)      -- NO_ELEMENT : constant Cursor
Engine/neo-core-hashed.ads:32:25     - Unknown word (Unsafe)       -- EMPTY_MAP : constant Unsafe.Map := Unsafe.EMPTY
Engine/neo-core-hashed.ads:32:3      - Unknown word (EMPTY)        -- EMPTY_MAP : constant Unsafe
Engine/neo-core-hashed.ads:32:39     - Unknown word (Unsafe)       -- constant Unsafe.Map := Unsafe.EMPTY_MAP;
Engine/neo-core-hashed.ads:32:46     - Unknown word (EMPTY)        -- Unsafe.Map := Unsafe.EMPTY_MAP;
Engine/neo-core-hashed.ads:41:53     - Unknown word (Unbound)      -- Map) return Array_Str_Unbound;
Engine/neo-core-hashed.ads:43:6      - Unknown word (Wrapped)      -- -- Wrapped type
Engine/neo-core-hashed.ads:44:18     - Unknown word (Safe)         -- protected type Safe_Map is
Engine/neo-core-hashed.ads:47:39     - Unknown word (Cursor)       -- Next (Pos : in out Cursor);
Engine/neo-core-hashed.ads:48:39     - Unknown word (Cursor)       -- Delete (Pos : in out Cursor);
Engine/neo-core-hashed.ads:50:36     - Unknown word (Unbound)      -- procedure Delete  (Key : Str_Unbound);
Engine/neo-core-hashed.ads:53:36     - Unknown word (Unbound)      -- procedure Replace (Key : Str_Unbound; Item : Map_T);
Engine/neo-core-hashed.ads:55:36     - Unknown word (Unbound)      -- procedure Insert  (Key : Str_Unbound; Item : Map_T);
Engine/neo-core-hashed.ads:5:52      - Unknown word (Copyright)  -- Copyright (C) 2016 Justin Squirek
Engine/neo-core-hashed.ads:5:71      - Unknown word (Justin)     -- Copyright (C) 2016 Justin Squirek
Engine/neo-core-hashed.ads:5:78      - Unknown word (Squirek)    -- Copyright (C) 2016 Justin Squirek
Engine/neo-core-hashed.ads:66:16     - Unknown word (Length)       -- function Length
Engine/neo-core-hashed.ads:68:7      - Unknown word (This)         -- This : Unsafe.Map;
Engine/neo-core-hashed.ads:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-core-hashed.ads:8:30      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-core-hashed.ads:8:70      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-core-hashed.ads:8:87      - Unknown word (later)        -- at your option) any later version.
Engine/neo-core-hashed_Indefinite.ads:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-core-hashed_Indefinite.ads:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-core-hashed_Indefinite.ads:10:110    - Unknown word (warranty)     -- without even the implied warranty of                -
Engine/neo-core-hashed_Indefinite.ads:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-core-hashed_Indefinite.ads:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-core-hashed_Indefinite.ads:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-core-hashed_Indefinite.ads:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-core-hashed_Indefinite.ads:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-core-hashed_Indefinite.ads:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-core-hashed_Indefinite.ads:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-core-hashed_Indefinite.ads:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-core-hashed_Indefinite.ads:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-core-hashed_Indefinite.ads:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-core-hashed_Indefinite.ads:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-core-hashed_Indefinite.ads:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-core-hashed_Indefinite.ads:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-core-hashed_Indefinite.ads:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-core-hashed_Indefinite.ads:16:21     - Unknown word (Indefinite)   -- with Ada.Containers.Indefinite_Hashed_Maps;
Engine/neo-core-hashed_Indefinite.ads:16:32     - Unknown word (Hashed)       -- Containers.Indefinite_Hashed_Maps;
Engine/neo-core-hashed_Indefinite.ads:16:39     - Unknown word (Maps)         -- Containers.Indefinite_Hashed_Maps;
Engine/neo-core-hashed_Indefinite.ads:17:10     - Unknown word (Strings)      -- with Ada.Strings.Wide_Unbounded.Wide
Engine/neo-core-hashed_Indefinite.ads:17:18     - Unknown word (Wide)         -- with Ada.Strings.Wide_Unbounded.Wide_Hash
Engine/neo-core-hashed_Indefinite.ads:17:23     - Unknown word (Unbounded)    -- with Ada.Strings.Wide_Unbounded.Wide_Hash;
Engine/neo-core-hashed_Indefinite.ads:17:33     - Unknown word (Wide)         -- Strings.Wide_Unbounded.Wide_Hash;
Engine/neo-core-hashed_Indefinite.ads:22:18     - Unknown word (Hashed)       -- package Neo.Core.Hashed_Indefinite is
Engine/neo-core-hashed_Indefinite.ads:22:25     - Unknown word (Indefinite)   -- package Neo.Core.Hashed_Indefinite is
Engine/neo-core-hashed_Indefinite.ads:25:13     - Unknown word (Maps)         -- -- Hashed Maps --
Engine/neo-core-hashed_Indefinite.ads:25:6      - Unknown word (Hashed)       -- -- Hashed Maps --
Engine/neo-core-hashed_Indefinite.ads:29:11     - Unknown word (Unsafe)       -- package Unsafe is new Ada.Containers
Engine/neo-core-hashed_Indefinite.ads:29:40     - Unknown word (Indefinite)   -- is new Ada.Containers.Indefinite_Hashed_Maps (Str_Unbound
Engine/neo-core-hashed_Indefinite.ads:29:51     - Unknown word (Hashed)       -- Containers.Indefinite_Hashed_Maps (Str_Unbound, Map
Engine/neo-core-hashed_Indefinite.ads:29:58     - Unknown word (Maps)         -- Containers.Indefinite_Hashed_Maps (Str_Unbound, Map_T
Engine/neo-core-hashed_Indefinite.ads:29:68     - Unknown word (Unbound)      -- Indefinite_Hashed_Maps (Str_Unbound, Map_T, Wide_Hash,
Engine/neo-core-hashed_Indefinite.ads:29:84     - Unknown word (Wide)         -- Str_Unbound, Map_T, Wide_Hash, "=");
Engine/neo-core-hashed_Indefinite.ads:30:11     - Unknown word (Cursor)       -- subtype Cursor is Unsafe.Cursor;
Engine/neo-core-hashed_Indefinite.ads:30:21     - Unknown word (Unsafe)       -- subtype Cursor is Unsafe.Cursor;
Engine/neo-core-hashed_Indefinite.ads:30:28     - Unknown word (Cursor)       -- subtype Cursor is Unsafe.Cursor;
Engine/neo-core-hashed_Indefinite.ads:31:12     - Unknown word (Unsafe)       -- type Ptr_Unsafe_Map is access all Unsafe
Engine/neo-core-hashed_Indefinite.ads:31:37     - Unknown word (Unsafe)       -- Unsafe_Map is access all Unsafe.Map;
Engine/neo-core-hashed_Indefinite.ads:32:25     - Unknown word (Cursor)       -- NO_ELEMENT : constant Cursor := Unsafe.NO_ELEMENT
Engine/neo-core-hashed_Indefinite.ads:32:39     - Unknown word (Unsafe)       -- constant Cursor     := Unsafe.NO_ELEMENT;
Engine/neo-core-hashed_Indefinite.ads:32:49     - Unknown word (ELEMENT)      -- Cursor := Unsafe.NO_ELEMENT;
Engine/neo-core-hashed_Indefinite.ads:32:6      - Unknown word (ELEMENT)      -- NO_ELEMENT : constant Cursor
Engine/neo-core-hashed_Indefinite.ads:33:3      - Unknown word (EMPTY)        -- EMPTY_MAP : constant Unsafe
Engine/neo-core-hashed_Indefinite.ads:33:46     - Unknown word (EMPTY)        -- Unsafe.Map := Unsafe.EMPTY_MAP;
Engine/neo-core-hashed_Indefinite.ads:36:53     - Unknown word (Unbound)      -- Map) return Array_Str_Unbound;
Engine/neo-core-hashed_Indefinite.ads:38:6      - Unknown word (Wrapped)      -- -- Wrapped type
Engine/neo-core-hashed_Indefinite.ads:39:18     - Unknown word (Safe)         -- protected type Safe_Map is
Engine/neo-core-hashed_Indefinite.ads:42:39     - Unknown word (Cursor)       -- Next (Pos : in out Cursor);
Engine/neo-core-hashed_Indefinite.ads:43:39     - Unknown word (Cursor)       -- Delete (Pos : in out Cursor);
Engine/neo-core-hashed_Indefinite.ads:45:36     - Unknown word (Unbound)      -- procedure Delete  (Key : Str_Unbound);
Engine/neo-core-hashed_Indefinite.ads:48:36     - Unknown word (Unbound)      -- procedure Replace (Key : Str_Unbound; Item : Map_T);
Engine/neo-core-hashed_Indefinite.ads:50:36     - Unknown word (Unbound)      -- procedure Insert  (Key : Str_Unbound; Item : Map_T);
Engine/neo-core-hashed_Indefinite.ads:5:52      - Unknown word (Copyright)  -- Copyright (C) 2016 Justin Squirek
Engine/neo-core-hashed_Indefinite.ads:5:71      - Unknown word (Justin)     -- Copyright (C) 2016 Justin Squirek
Engine/neo-core-hashed_Indefinite.ads:5:78      - Unknown word (Squirek)    -- Copyright (C) 2016 Justin Squirek
Engine/neo-core-hashed_Indefinite.ads:61:16     - Unknown word (Length)       -- function Length
Engine/neo-core-hashed_Indefinite.ads:63:7      - Unknown word (This)         -- This : Unsafe.Map;
Engine/neo-core-hashed_Indefinite.ads:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-core-hashed_Indefinite.ads:8:30      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-core-hashed_Indefinite.ads:8:70      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-core-hashed_Indefinite.ads:8:87      - Unknown word (later)        -- at your option) any later version.
Engine/neo-core-hashed_indefinite.adb:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-core-hashed_indefinite.adb:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-core-hashed_indefinite.adb:10:110    - Unknown word (warranty)     -- without even the implied warranty of                -
Engine/neo-core-hashed_indefinite.adb:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-core-hashed_indefinite.adb:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-core-hashed_indefinite.adb:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-core-hashed_indefinite.adb:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-core-hashed_indefinite.adb:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-core-hashed_indefinite.adb:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-core-hashed_indefinite.adb:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-core-hashed_indefinite.adb:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-core-hashed_indefinite.adb:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-core-hashed_indefinite.adb:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-core-hashed_indefinite.adb:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-core-hashed_indefinite.adb:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-core-hashed_indefinite.adb:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-core-hashed_indefinite.adb:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-core-hashed_indefinite.adb:16:23     - Unknown word (Hashed)       -- package body Neo.Core.Hashed_Indefinite is
Engine/neo-core-hashed_indefinite.adb:16:30     - Unknown word (Indefinite)   -- body Neo.Core.Hashed_Indefinite is
Engine/neo-core-hashed_indefinite.adb:17:18     - Unknown word (Safe)         -- protected body Safe_Map is
Engine/neo-core-hashed_indefinite.adb:18:32     - Unknown word (Unsafe)       -- procedure Set     (Val : Unsafe.Map)
Engine/neo-core-hashed_indefinite.adb:18:79     - Unknown word (This)         -- is begin This := Val;
Engine/neo-core-hashed_indefinite.adb:19:79     - Unknown word (This)         -- is begin This.Clear;
Engine/neo-core-hashed_indefinite.adb:20:39     - Unknown word (Cursor)       -- Next (Pos : in out Cursor)
Engine/neo-core-hashed_indefinite.adb:20:79     - Unknown word (Unsafe)       -- is begin Unsafe.Next (Pos)
Engine/neo-core-hashed_indefinite.adb:21:39     - Unknown word (Cursor)       -- Delete (Pos : in out Cursor)
Engine/neo-core-hashed_indefinite.adb:21:79     - Unknown word (This)         -- is begin This.Delete (Pos
Engine/neo-core-hashed_indefinite.adb:22:108    - Unknown word (Unbound)      -- Delete (To_Str_Unbound (Key));       end;
Engine/neo-core-hashed_indefinite.adb:22:79     - Unknown word (This)         -- is begin This.Delete (To
Engine/neo-core-hashed_indefinite.adb:23:36     - Unknown word (Unbound)      -- procedure Delete  (Key : Str_Unbound)
Engine/neo-core-hashed_indefinite.adb:23:79     - Unknown word (This)         -- is begin This.Delete (Key
Engine/neo-core-hashed_indefinite.adb:24:32     - Unknown word (Cursor)       -- procedure Replace (Pos : Cursor; Item : Map_T)
Engine/neo-core-hashed_indefinite.adb:24:92     - Unknown word (Element)      -- is begin This.Replace_Element (Pos, Item);
Engine/neo-core-hashed_indefinite.adb:25:108    - Unknown word (Unbound)      -- Replace (To_Str_Unbound (Key), Item); end;
Engine/neo-core-hashed_indefinite.adb:26:36     - Unknown word (Unbound)      -- procedure Replace (Key : Str_Unbound; Item : Map_T)
Engine/neo-core-hashed_indefinite.adb:27:108    - Unknown word (Unbound)      -- Insert (To_Str_Unbound (Key), Item); end;
Engine/neo-core-hashed_indefinite.adb:29:79     - Unknown word (Contains)     -- is (This.Contains (To_Str
Engine/neo-core-hashed_indefinite.adb:30:79     - Unknown word (Contains)     -- is (This.Contains (Key));
Engine/neo-core-hashed_indefinite.adb:31:32     - Unknown word (Cursor)       -- function Has      (Pos : Cursor) return Bool
Engine/neo-core-hashed_indefinite.adb:31:74     - Unknown word (Unsafe)       -- Bool is (Unsafe.Has_Element
Engine/neo-core-hashed_indefinite.adb:31:85     - Unknown word (Element)      -- is (Unsafe.Has_Element (Pos));
Engine/neo-core-hashed_indefinite.adb:32:32     - Unknown word (Cursor)       -- function Key      (Pos : Cursor) return Str
Engine/neo-core-hashed_indefinite.adb:32:77     - Unknown word (Unsafe)       -- is (S (Unsafe.Key (Pos
Engine/neo-core-hashed_indefinite.adb:35:74     - Unknown word (Unsafe)       -- Map_T is (Unsafe.Element
Engine/neo-core-hashed_indefinite.adb:35:81     - Unknown word (Element)      -- is (Unsafe.Element (Pos));
Engine/neo-core-hashed_indefinite.adb:39:16     - Unknown word (Length)       -- function Length
Engine/neo-core-hashed_indefinite.adb:39:88     - Unknown word (Length)       -- is (Natural (This.Length));
Engine/neo-core-hashed_indefinite.adb:42:17     - Unknown word (conversions)  -- -- Sorted key conversions
Engine/neo-core-hashed_indefinite.adb:44:45     - Unknown word (Length)       -- Unbound (1..Int (Val.Length));
Engine/neo-core-hashed_indefinite.adb:5:52      - Unknown word (Copyright)  -- Copyright (C) 2016 Justin Squirek
Engine/neo-core-hashed_indefinite.adb:5:71      - Unknown word (Justin)     -- Copyright (C) 2016 Justin Squirek
Engine/neo-core-hashed_indefinite.adb:5:78      - Unknown word (Squirek)    -- Copyright (C) 2016 Justin Squirek
Engine/neo-core-hashed_indefinite.adb:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-core-hashed_indefinite.adb:8:30      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-core-hashed_indefinite.adb:8:70      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-core-hashed_indefinite.adb:8:87      - Unknown word (later)        -- at your option) any later version.
Engine/neo-core-maps.ads:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-core-maps.ads:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-core-maps.ads:10:110    - Unknown word (warranty)     -- without even the implied warranty of                -
Engine/neo-core-maps.ads:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-core-maps.ads:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-core-maps.ads:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-core-maps.ads:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-core-maps.ads:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-core-maps.ads:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-core-maps.ads:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-core-maps.ads:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-core-maps.ads:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-core-maps.ads:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-core-maps.ads:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-core-maps.ads:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-core-maps.ads:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-core-maps.ads:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-core-maps.ads:16:15     - Unknown word (Ordered)      -- with Neo.Core.Ordered;
Engine/neo-core-maps.ads:17:15     - Unknown word (Hashed)       -- with Neo.Core.Hashed;
Engine/neo-core-maps.ads:19:18     - Unknown word (Maps)         -- package Neo.Core.Maps is
Engine/neo-core-maps.ads:22:6      - Unknown word (Maps)         -- -- Maps --
Engine/neo-core-maps.ads:25:11     - Unknown word (Hashed)       -- package Hashed_Bool is new Neo
Engine/neo-core-maps.ads:25:46     - Unknown word (Hashed)       -- is new Neo.Core.Hashed (Bool);
Engine/neo-core-maps.ads:26:11     - Unknown word (Hashed)       -- package Hashed_Positive is new Neo
Engine/neo-core-maps.ads:26:18     - Unknown word (Positive)     -- package Hashed_Positive is new Neo.Core.Hashed
Engine/neo-core-maps.ads:26:46     - Unknown word (Hashed)       -- Positive is new Neo.Core.Hashed (Positive);
Engine/neo-core-maps.ads:26:54     - Unknown word (Positive)     -- new Neo.Core.Hashed (Positive);
Engine/neo-core-maps.ads:27:22     - Unknown word (Unbound)      -- package Hashed_Str_Unbound is new Neo.Core.Hashed
Engine/neo-core-maps.ads:27:58     - Unknown word (Unbound)      -- Neo.Core.Hashed (Str_Unbound);
Engine/neo-core-maps.ads:5:52      - Unknown word (Copyright)  -- Copyright (C) 2016 Justin Squirek
Engine/neo-core-maps.ads:5:71      - Unknown word (Justin)     -- Copyright (C) 2016 Justin Squirek
Engine/neo-core-maps.ads:5:78      - Unknown word (Squirek)    -- Copyright (C) 2016 Justin Squirek
Engine/neo-core-maps.ads:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-core-maps.ads:8:30      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-core-maps.ads:8:70      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-core-maps.ads:8:87      - Unknown word (later)        -- at your option) any later version.
Engine/neo-core-math.adb:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-core-math.adb:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-core-math.adb:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo-core-math.adb:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-core-math.adb:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-core-math.adb:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-core-math.adb:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-core-math.adb:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-core-math.adb:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-core-math.adb:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-core-math.adb:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-core-math.adb:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-core-math.adb:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-core-math.adb:128:15    - Unknown word (Quaternion)   -- function To_Quaternion_4D (V : Vector_3D) return
Engine/neo-core-math.adb:135:5     - Unknown word (CPCY)         -- CPCY : constant Real_32
Engine/neo-core-math.adb:136:5     - Unknown word (SPCY)         -- SPCY : constant Real_32
Engine/neo-core-math.adb:137:5     - Unknown word (CPSY)         -- CPSY : constant Real_32
Engine/neo-core-math.adb:138:5     - Unknown word (SPSY)         -- SPSY : constant Real_32
Engine/neo-core-math.adb:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-core-math.adb:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-core-math.adb:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-core-math.adb:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-core-math.adb:140:28    - Unknown word (CPCY)         -- return Normal ((SR * CPCY - CR * SPSY,
Engine/neo-core-math.adb:140:40    - Unknown word (SPSY)         -- Normal ((SR * CPCY - CR * SPSY,
Engine/neo-core-math.adb:141:28    - Unknown word (SPCY)         -- CR * SPCY + SR * CPSY,
Engine/neo-core-math.adb:141:40    - Unknown word (CPSY)         -- CR * SPCY + SR * CPSY,
Engine/neo-core-math.adb:142:28    - Unknown word (CPSY)         -- CR * CPSY - SR * SPCY,
Engine/neo-core-math.adb:142:40    - Unknown word (SPCY)         -- CR * CPSY - SR * SPCY,
Engine/neo-core-math.adb:143:28    - Unknown word (CPCY)         -- CR * CPCY + SR * SPCY));
Engine/neo-core-math.adb:143:40    - Unknown word (SPCY)         -- CR * CPCY + SR * SPCY));
Engine/neo-core-math.adb:157:6     - Unknown word (Inverse)      -- -- Inverse
Engine/neo-core-math.adb:158:12    - Unknown word (Inverse)      -- function Inverse (H : Transform_4D) return
Engine/neo-core-math.adb:16:23     - Unknown word (Math)         -- package body Neo.Core.Math is
Engine/neo-core-math.adb:177:6     - Unknown word (Rotations)    -- -- Rotations
Engine/neo-core-math.adb:178:20    - Unknown word (Angle)        -- function Rotate (Angle : Real_32; Kind : Dimension
Engine/neo-core-math.adb:178:37    - Unknown word (Kind)         -- Rotate (Angle : Real_32; Kind : Dimension_Kind) return
Engine/neo-core-math.adb:178:54    - Unknown word (Kind)         -- 2; Kind : Dimension_Kind) return Matrix_3D is
Engine/neo-core-math.adb:179:34    - Unknown word (Angle)        -- constant Real_32 := Cos (Angle);
Engine/neo-core-math.adb:180:34    - Unknown word (Angle)        -- constant Real_32 := Sin (Angle);
Engine/neo-core-math.adb:182:20    - Unknown word (Kind)         -- return (case Kind is
Engine/neo-core-math.adb:187:20    - Unknown word (Angle)        -- function Rotate (Angle : Real_32; Axis : Vector
Engine/neo-core-math.adb:187:37    - Unknown word (Axis)         -- Rotate (Angle : Real_32; Axis : Vector_3D) return
Engine/neo-core-math.adb:188:37    - Unknown word (Angle)        -- constant Real_32   := Cos (Angle);
Engine/neo-core-math.adb:190:32    - Unknown word (Axis)         -- constant Vector_3D := Axis * (1.0 - C);
Engine/neo-core-math.adb:191:32    - Unknown word (Axis)         -- constant Real_32   := Axis.Y * Axis.X;
Engine/neo-core-math.adb:191:41    - Unknown word (Axis)         -- Real_32 := Axis.Y * Axis.X;
Engine/neo-core-math.adb:192:32    - Unknown word (Axis)         -- constant Real_32   := Axis.Z * Axis.X;
Engine/neo-core-math.adb:19:6      - Unknown word (Matrix)       -- -- Matrix --
Engine/neo-core-math.adb:200:6     - Unknown word (Reflections)  -- -- Reflections
Engine/neo-core-math.adb:201:12    - Unknown word (Reflect)      -- function Reflect (A : Vector_3D) return
Engine/neo-core-math.adb:211:12    - Unknown word (Reflect)      -- function Reflect (F : Plane_4D) return
Engine/neo-core-math.adb:222:6     - Unknown word (Scalers)      -- -- Scalers
Engine/neo-core-math.adb:23:17     - Unknown word (Matrix)       -- procedure Set_Matrix_3D_X (M : in out Matrix
Engine/neo-core-math.adb:23:41     - Unknown word (Matrix)       -- Matrix_3D_X (M : in out Matrix_3D; V : Vector_3D) is
Engine/neo-core-math.adb:23:56     - Unknown word (Vector)       -- in out Matrix_3D; V : Vector_3D) is begin M.XX :
Engine/neo-core-math.adb:241:6     - Unknown word (Involution)   -- -- Involution
Engine/neo-core-math.adb:242:12    - Unknown word (Involution)   -- function Involution (A : Vector_3D) return
Engine/neo-core-math.adb:24:17     - Unknown word (Matrix)       -- procedure Set_Matrix_3D_Y (M : in out Matrix
Engine/neo-core-math.adb:24:41     - Unknown word (Matrix)       -- Matrix_3D_Y (M : in out Matrix_3D; V : Vector_3D) is
Engine/neo-core-math.adb:24:56     - Unknown word (Vector)       -- in out Matrix_3D; V : Vector_3D) is begin M.YX :
Engine/neo-core-math.adb:253:6     - Unknown word (Skew)         -- -- Skew
Engine/neo-core-math.adb:254:12    - Unknown word (Skew)         -- function Skew (Angle : Real_32; A
Engine/neo-core-math.adb:25:56     - Unknown word (Vector)       -- in out Matrix_3D; V : Vector_3D) is begin M.ZX :
Engine/neo-core-math.adb:268:37    - Unknown word (Direction)    -- constant Vector_3D := H * L.Direction;
Engine/neo-core-math.adb:272:92    - Unknown word (Moment)       -- Transform_4D_Y (H))) * L.Moment + Cross (T, V));
Engine/neo-core-math.adb:276:6     - Unknown word (Scene)        -- -- Scene --
Engine/neo-core-math.adb:279:12    - Unknown word (Perspective)  -- function Perspective (FOV_Y, Aspect, Z_Near
Engine/neo-core-math.adb:279:32    - Unknown word (Aspect)       -- Perspective (FOV_Y, Aspect, Z_Near, Z_Far : Real
Engine/neo-core-math.adb:282:28    - Unknown word (Aspect)       -- return (XX => 1.0 / (Aspect * Half_FOV_Y),
Engine/neo-core-math.adb:289:12    - Unknown word (Look)         -- function Look_At (Eye, Center, Up
Engine/neo-core-math.adb:289:26    - Unknown word (Center)       -- function Look_At (Eye, Center, Up : Vector_3D) return
Engine/neo-core-math.adb:28:56     - Unknown word (Vector)       -- in out Matrix_4D; V : Vector_4D) is begin M.XX :
Engine/neo-core-math.adb:290:51    - Unknown word (Center)       -- D := -Normal (Eye - Center); -- Camera direction
Engine/neo-core-math.adb:290:68    - Unknown word (Camera)       -- Eye - Center);      -- Camera direction
Engine/neo-core-math.adb:290:75    - Unknown word (direction)    -- Center); -- Camera direction
Engine/neo-core-math.adb:291:68    - Unknown word (Positive)    -- Cross (Z_Axis, Up)); -- Positive right axis vector
Engine/neo-core-math.adb:291:83    - Unknown word (axis)        -- ; -- Positive right axis vector
Engine/neo-core-math.adb:291:88    - Unknown word (vector)      -- Positive right axis vector
Engine/neo-core-math.adb:292:68    - Unknown word (Camera)      -- Axis, Z_Axis);      -- Camera up vector
Engine/neo-core-math.adb:292:78    - Unknown word (vector)      -- ; -- Camera up vector
Engine/neo-core-math.adb:29:56     - Unknown word (Vector)       -- in out Matrix_4D; V : Vector_4D) is begin M.YX :
Engine/neo-core-math.adb:33:6      - Unknown word (Inverse)      -- -- Inverse
Engine/neo-core-math.adb:34:12     - Unknown word (Inverse)      -- function Inverse (M : Matrix_3D) return
Engine/neo-core-math.adb:47:12     - Unknown word (Inverse)      -- function Inverse (M : Matrix_4D) return
Engine/neo-core-math.adb:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo-core-math.adb:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo-core-math.adb:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo-core-math.adb:74:6      - Unknown word (Quaternion)   -- -- Quaternion --
Engine/neo-core-math.adb:77:27     - Unknown word (Quaternion)   -- function Transform (Q : Quaternion_4D; V : Vector_3D) return
Engine/neo-core-math.adb:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-core-math.adb:83:26     - Unknown word (Quaternion)   -- function Rotation (Q : Quaternion_4D) return Matrix_3D
Engine/neo-core-math.adb:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-core-math.adb:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-core-math.adb:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo-core-math.adb:98:32     - Unknown word (Quaternion)   -- procedure Rotate (Q : in out Quaternion_4D; M : Matrix_3D) is
Engine/neo-core-math.ads:101:8     - Unknown word (Matrix)       -- type Matrix_2D is record
Engine/neo-core-math.ads:105:8     - Unknown word (Matrix)       -- type Matrix_3D is record -- Listing
Engine/neo-core-math.ads:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-core-math.ads:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-core-math.ads:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo-core-math.ads:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-core-math.ads:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-core-math.ads:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-core-math.ads:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-core-math.ads:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-core-math.ads:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-core-math.ads:110:8     - Unknown word (Matrix)       -- type Matrix_4D is record
Engine/neo-core-math.ads:117:18    - Unknown word (Matrix)       -- package Vector_Matrix_2D is new Neo.Core.Vectors
Engine/neo-core-math.ads:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-core-math.ads:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-core-math.ads:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-core-math.ads:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-core-math.ads:121:8     - Unknown word (MATRIX)       -- ZERO_MATRIX_2D : constant Matrix
Engine/neo-core-math.ads:122:8     - Unknown word (MATRIX)       -- ZERO_MATRIX_3D : constant Matrix
Engine/neo-core-math.ads:123:8     - Unknown word (MATRIX)       -- ZERO_MATRIX_4D : constant Matrix
Engine/neo-core-math.ads:125:12    - Unknown word (MATRIX)       -- IDENTITY_MATRIX_4D : constant Matrix
Engine/neo-core-math.ads:130:9     - Unknown word (Conversions)  -- -- 3D Conversions
Engine/neo-core-math.ads:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-core-math.ads:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-core-math.ads:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-core-math.ads:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-core-math.ads:142:12    - Unknown word (Inverse)      -- function Inverse (M : Matrix_3D)
Engine/neo-core-math.ads:143:12    - Unknown word (Determinant)  -- function Determinant (M : Matrix_3D) return
Engine/neo-core-math.ads:159:9     - Unknown word (Conversions)  -- -- 4D Conversions
Engine/neo-core-math.ads:16:10     - Unknown word (Numerics)     -- with Ada.Numerics.Generic_Elementary_Functions
Engine/neo-core-math.ads:16:27     - Unknown word (Elementary)   -- Ada.Numerics.Generic_Elementary_Functions;
Engine/neo-core-math.ads:178:12    - Unknown word (Inverse)      -- function Inverse (M : Matrix_4D) return
Engine/neo-core-math.ads:17:15     - Unknown word (Vectors)      -- with Neo.Core.Vectors;
Engine/neo-core-math.ads:19:13     - Unknown word (Foundations)  -- -- Based on Foundations of Game Engine Development
Engine/neo-core-math.ads:20:18     - Unknown word (Math)         -- package Neo.Core.Math is
Engine/neo-core-math.ads:223:6     - Unknown word (Conversions)  -- -- Conversions
Engine/neo-core-math.ads:22:18     - Unknown word (Kind)         -- type Dimension_Kind is (X_Dimension, Y_Dimension
Engine/neo-core-math.ads:23:30     - Unknown word (Numerics)     -- package Calc_64 is new Ada.Numerics.Generic_Elementary_Functions
Engine/neo-core-math.ads:23:47     - Unknown word (Elementary)   -- Ada.Numerics.Generic_Elementary_Functions (Real_64)
Engine/neo-core-math.ads:246:15    - Unknown word (Transpose)    -- -- function Transpose () return Matrix_3D
Engine/neo-core-math.ads:247:24    - Unknown word (Angle)        -- function Rotate     (Angle : Real_32; Kind : Dimension
Engine/neo-core-math.ads:247:41    - Unknown word (Kind)         -- (Angle : Real_32; Kind : Dimension_Kind) return
Engine/neo-core-math.ads:247:58    - Unknown word (Kind)         -- 2; Kind : Dimension_Kind) return Matrix_3D;
Engine/neo-core-math.ads:248:24    - Unknown word (Angle)        -- function Rotate     (Angle : Real_32; Axis : Vector
Engine/neo-core-math.ads:248:41    - Unknown word (Axis)         -- (Angle : Real_32; Axis : Vector_3D)      return
Engine/neo-core-math.ads:249:12    - Unknown word (Reflect)      -- function Reflect (A : Vector_3D)
Engine/neo-core-math.ads:24:30     - Unknown word (Numerics)     -- package Calc_32 is new Ada.Numerics.Generic_Elementary_Functions
Engine/neo-core-math.ads:24:47     - Unknown word (Elementary)   -- Ada.Numerics.Generic_Elementary_Functions (Real_32)
Engine/neo-core-math.ads:250:12    - Unknown word (Involution)   -- function Involution (A : Vector_3D)
Engine/neo-core-math.ads:253:12    - Unknown word (Skew)         -- function Skew (Angle      :
Engine/neo-core-math.ads:253:24    - Unknown word (Angle)        -- function Skew       (Angle : Real_32; A, B
Engine/neo-core-math.ads:254:12    - Unknown word (Inverse)      -- function Inverse (H : Transform_4D
Engine/neo-core-math.ads:278:6     - Unknown word (Quaternion)   -- -- Quaternion --
Engine/neo-core-math.ads:282:8     - Unknown word (Quaternion)   -- type Quaternion_4D is new Vector_4D
Engine/neo-core-math.ads:283:18    - Unknown word (Quaternion)   -- package Vector_Quaternion_4D is new Neo.Core.Vectors
Engine/neo-core-math.ads:283:57    - Unknown word (Quaternion)   -- new Neo.Core.Vectors (Quaternion_4D);
Engine/neo-core-math.ads:284:33    - Unknown word (Quaternion)   -- QUATERNION_4D : constant Quaternion_4D := (others => 0.
Engine/neo-core-math.ads:284:8     - Unknown word (QUATERNION)   -- ZERO_QUATERNION_4D : constant Quaternion
Engine/neo-core-math.ads:286:6     - Unknown word (Conversions)  -- -- Conversions
Engine/neo-core-math.ads:310:12    - Unknown word (Reflect)      -- function Reflect (F : Plane_4D)
Engine/neo-core-math.ads:325:7     - Unknown word (Direction)    -- Direction : Vector_3D := (others
Engine/neo-core-math.ads:326:7     - Unknown word (Moment)       -- Moment : Vector_3D := (others
Engine/neo-core-math.ads:333:6     - Unknown word (Frustum)      -- -- Frustum --
Engine/neo-core-math.ads:336:8     - Unknown word (Frustum)      -- type Frustum_State is record
Engine/neo-core-math.ads:337:26    - Unknown word (Beginning)    -- Target, Right, Up, Beginning, Ending : Vector_3D
Engine/neo-core-math.ads:337:37    - Unknown word (Ending)      -- Right, Up, Beginning, Ending : Vector_3D := (others
Engine/neo-core-math.ads:341:6     - Unknown word (Algebra)     -- -- Algebra -- Listing 4.1 and Table
Engine/neo-core-math.ads:344:27    - Unknown word (coincident)  -- 0|0} if p and q are coincident
Engine/neo-core-math.ads:345:12    - Unknown word (Contain)     -- function Contain (P, Q : Point_3D) return
Engine/neo-core-math.ads:352:17    - Unknown word (lies)        -- -- [0|0] if p lies on line L
Engine/neo-core-math.ads:353:115   - Unknown word (Moment)      -- Direction.Z * P.Y + L.Moment.X,
Engine/neo-core-math.ads:353:12    - Unknown word (Contain)     -- function Contain (L : Line_3D; P : Point
Engine/neo-core-math.ads:353:71    - Unknown word (Direction)   -- return Plane_4D is ((L.Direction.Y * P.Z - L.Direction
Engine/neo-core-math.ads:353:93    - Unknown word (Direction)   -- Direction.Y * P.Z - L.Direction.Z * P.Y + L.Moment.X
Engine/neo-core-math.ads:354:115   - Unknown word (Moment)      -- Direction.X * P.Z + L.Moment.Y,
Engine/neo-core-math.ads:354:71    - Unknown word (Direction)   -- L.Direction.Z * P.X - L.Direction
Engine/neo-core-math.ads:354:93    - Unknown word (Direction)   -- Direction.Z * P.X - L.Direction.X * P.Z + L.Moment.Y
Engine/neo-core-math.ads:355:115   - Unknown word (Moment)      -- Direction.Y * P.X + L.Moment.Z,
Engine/neo-core-math.ads:356:71    - Unknown word (Moment)      -- -L.Moment.X * P.X - L.Moment
Engine/neo-core-math.ads:358:36    - Unknown word (collinear)   -- all three points are collinear
Engine/neo-core-math.ads:359:12    - Unknown word (Contain)     -- function Contain (P, Q, R : Point_3D
Engine/neo-core-math.ads:359:61    - Unknown word (Contain)     -- return Plane_4D is (Contain (Contain (P, Q), R)
Engine/neo-core-math.ads:359:70    - Unknown word (Contain)     -- Plane_4D is (Contain (Contain (P, Q), R));
Engine/neo-core-math.ads:35:11     - Unknown word (Vector)       -- package Vector_Point_2D is new Neo
Engine/neo-core-math.ads:35:43     - Unknown word (Vectors)      -- Point_2D is new Neo.Core.Vectors (Point_2D);
Engine/neo-core-math.ads:361:27    - Unknown word (coincident)  -- 0|0} if f and a are coincident, {0|m} if f and g are
Engine/neo-core-math.ads:361:60    - Unknown word (parallel)    -- 0|m} if f and g are parallel but not coincident
Engine/neo-core-math.ads:361:77    - Unknown word (coincident)  -- are parallel but not coincident
Engine/neo-core-math.ads:362:12    - Unknown word (Intersect)   -- function Intersect (F, G : Plane_4D) return
Engine/neo-core-math.ads:369:17    - Unknown word (lies)        -- -- (0|0) if L lies in the plane f, (p|
Engine/neo-core-math.ads:369:52    - Unknown word (parallel)    -- plane f, (p|0) if L is parallel to f but does not lie
Engine/neo-core-math.ads:369:70    - Unknown word (does)        -- is parallel to f but does not lie in f
Engine/neo-core-math.ads:36:11     - Unknown word (Vector)       -- package Vector_Point_3D is new Neo
Engine/neo-core-math.ads:36:43     - Unknown word (Vectors)      -- Point_3D is new Neo.Core.Vectors (Point_3D);
Engine/neo-core-math.ads:370:12    - Unknown word (Intersect)   -- function Intersect (L : Line_3D; F : Plane
Engine/neo-core-math.ads:375:112   - Unknown word (parallel)    -- planes all intersect at parallel lines
Engine/neo-core-math.ads:375:23    - Unknown word (planes)      -- -- (0|0) if any two planes are coincident or all
Engine/neo-core-math.ads:375:34    - Unknown word (coincident)  -- if any two planes are coincident or all three planes
Engine/neo-core-math.ads:375:58    - Unknown word (planes)      -- coincident or all three planes are parallel, (p|0)
Engine/neo-core-math.ads:375:69    - Unknown word (parallel)    -- all three planes are parallel, (p|0) if planes all
Engine/neo-core-math.ads:375:88    - Unknown word (planes)      -- are parallel, (p|0) if planes all intersect at parallel
Engine/neo-core-math.ads:375:99    - Unknown word (intersect)   -- (p|0) if planes all intersect at parallel lines
Engine/neo-core-math.ads:376:12    - Unknown word (Intersect)   -- function Intersect (F, G, H : Plane_4D
Engine/neo-core-math.ads:376:64    - Unknown word (Intersect)   -- return Vector_4D is (Intersect (Intersect (F, G), H
Engine/neo-core-math.ads:376:75    - Unknown word (Intersect)   -- Vector_4D is (Intersect (Intersect (F, G), H));
Engine/neo-core-math.ads:378:25    - Unknown word (coplanar)    -- 0 if L1 and L2 are coplanar
Engine/neo-core-math.ads:379:12    - Unknown word (Distance)    -- function Distance (L1, L2 : Line_3D) return
Engine/neo-core-math.ads:37:11     - Unknown word (Vector)       -- package Vector_Point_4D is new Neo
Engine/neo-core-math.ads:37:43     - Unknown word (Vectors)      -- Point_4D is new Neo.Core.Vectors (Point_4D);
Engine/neo-core-math.ads:381:13    - Unknown word (lies)        -- -- 0 if p lies in the plane f
Engine/neo-core-math.ads:382:12    - Unknown word (Distance)    -- function Distance (P : Point_3D; F : Plane
Engine/neo-core-math.ads:385:6     - Unknown word (Scene)       -- -- Scene --
Engine/neo-core-math.ads:388:12    - Unknown word (Look)        -- function Look_At (Eye, Center, Up
Engine/neo-core-math.ads:388:26    - Unknown word (Center)      -- function Look_At (Eye, Center, Up : Vector_3D) return
Engine/neo-core-math.ads:389:12    - Unknown word (Perspective) -- function Perspective (FOV_Y, Aspect, Z_Near
Engine/neo-core-math.ads:389:32    - Unknown word (Aspect)      -- Perspective (FOV_Y, Aspect, Z_Near, Z_Far : Real
Engine/neo-core-math.ads:48:6      - Unknown word (Vector)       -- -- Vector --
Engine/neo-core-math.ads:52:8      - Unknown word (Vector)       -- type Vector_2D is record X, Y
Engine/neo-core-math.ads:56:44     - Unknown word (Vectors)      -- Vector_2D is new Neo.Core.Vectors (Vector_2D);
Engine/neo-core-math.ads:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo-core-math.ads:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo-core-math.ads:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo-core-math.ads:60:8      - Unknown word (VECTOR)       -- ZERO_VECTOR_2D : constant Vector
Engine/neo-core-math.ads:61:8      - Unknown word (VECTOR)       -- ZERO_VECTOR_3D : constant Vector
Engine/neo-core-math.ads:62:8      - Unknown word (VECTOR)       -- ZERO_VECTOR_4D : constant Vector
Engine/neo-core-math.ads:64:6      - Unknown word (Conversions)  -- -- Conversions
Engine/neo-core-math.ads:75:12     - Unknown word (Magnitude)    -- function Magnitude (V    : Vector_3D)
Engine/neo-core-math.ads:76:79     - Unknown word (Magnitude)    -- return Vector_3D is (V / Magnitude (V));
Engine/neo-core-math.ads:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-core-math.ads:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-core-math.ads:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-core-math.ads:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo-core-math.ads:90:12     - Unknown word (Magnitude)    -- function Magnitude (V    : Vector_4D)
Engine/neo-core-math.ads:91:79     - Unknown word (Magnitude)    -- return Vector_4D is (V / Magnitude (V));
Engine/neo-core-math.ads:97:6      - Unknown word (Matrix)       -- -- Matrix --
Engine/neo-core-ordered.adb:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-core-ordered.adb:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-core-ordered.adb:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo-core-ordered.adb:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-core-ordered.adb:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-core-ordered.adb:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-core-ordered.adb:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-core-ordered.adb:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-core-ordered.adb:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-core-ordered.adb:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-core-ordered.adb:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-core-ordered.adb:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-core-ordered.adb:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-core-ordered.adb:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-core-ordered.adb:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-core-ordered.adb:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-core-ordered.adb:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-core-ordered.adb:16:23     - Unknown word (Ordered)      -- package body Neo.Core.Ordered is
Engine/neo-core-ordered.adb:17:18     - Unknown word (Safe)         -- protected body Safe_Map is
Engine/neo-core-ordered.adb:18:32     - Unknown word (Unsafe)       -- procedure Set     (Val : Unsafe.Map) is
Engine/neo-core-ordered.adb:18:67     - Unknown word (This)         -- is begin This := Val;
Engine/neo-core-ordered.adb:19:67     - Unknown word (This)         -- is begin This.Clear;
Engine/neo-core-ordered.adb:20:39     - Unknown word (Cursor)       -- Next (Pos : in out Cursor) is begin
Engine/neo-core-ordered.adb:20:67     - Unknown word (Unsafe)       -- is begin Unsafe.Next (Pos)
Engine/neo-core-ordered.adb:21:39     - Unknown word (Cursor)       -- Delete (Pos : in out Cursor) is begin
Engine/neo-core-ordered.adb:21:67     - Unknown word (This)         -- is begin This.Delete (Pos
Engine/neo-core-ordered.adb:22:67     - Unknown word (This)         -- is begin This.Delete (Key
Engine/neo-core-ordered.adb:23:32     - Unknown word (Cursor)       -- procedure Replace (Pos : Cursor; Item : Map_T)     is
Engine/neo-core-ordered.adb:23:67     - Unknown word (This)         -- Map_T) is begin This.Replace_Element (Pos
Engine/neo-core-ordered.adb:23:80     - Unknown word (Element)      -- is begin This.Replace_Element (Pos, Item); end;
Engine/neo-core-ordered.adb:26:67     - Unknown word (Contains)     -- Bool is (This.Contains (Key));
Engine/neo-core-ordered.adb:27:32     - Unknown word (Cursor)       -- function Has      (Pos : Cursor) return Bool       is
Engine/neo-core-ordered.adb:27:62     - Unknown word (Unsafe)       -- return Bool       is (Unsafe.Has_Element
Engine/neo-core-ordered.adb:27:73     - Unknown word (Element)      -- is (Unsafe.Has_Element (Pos));
Engine/neo-core-ordered.adb:28:32     - Unknown word (Cursor)       -- function Key      (Pos : Cursor) return Key_T      is
Engine/neo-core-ordered.adb:28:62     - Unknown word (Unsafe)       -- return Key_T      is (Unsafe.Key
Engine/neo-core-ordered.adb:29:62     - Unknown word (Unsafe)       -- return Map_T      is (Unsafe.Element
Engine/neo-core-ordered.adb:29:69     - Unknown word (Element)      -- Map_T is (Unsafe.Element (Pos));
Engine/neo-core-ordered.adb:33:16     - Unknown word (Length)       -- function Length return
Engine/neo-core-ordered.adb:33:76     - Unknown word (Length)       -- is (Natural (This.Length));
Engine/neo-core-ordered.adb:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo-core-ordered.adb:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo-core-ordered.adb:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo-core-ordered.adb:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-core-ordered.adb:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-core-ordered.adb:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-core-ordered.adb:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo-core-ordered.ads:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-core-ordered.ads:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-core-ordered.ads:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo-core-ordered.ads:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-core-ordered.ads:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-core-ordered.ads:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-core-ordered.ads:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-core-ordered.ads:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-core-ordered.ads:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-core-ordered.ads:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-core-ordered.ads:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-core-ordered.ads:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-core-ordered.ads:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-core-ordered.ads:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-core-ordered.ads:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-core-ordered.ads:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-core-ordered.ads:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-core-ordered.ads:16:21     - Unknown word (Ordered)      -- with Ada.Containers.Ordered_Maps;
Engine/neo-core-ordered.ads:16:29     - Unknown word (Maps)         -- Ada.Containers.Ordered_Maps;
Engine/neo-core-ordered.ads:21:18     - Unknown word (Ordered)      -- package Neo.Core.Ordered is
Engine/neo-core-ordered.ads:24:11     - Unknown word (Unsafe)       -- package Unsafe is new Ada.Containers
Engine/neo-core-ordered.ads:24:40     - Unknown word (Ordered)      -- is new Ada.Containers.Ordered_Maps (Key_T, Map_T,
Engine/neo-core-ordered.ads:24:48     - Unknown word (Maps)         -- Ada.Containers.Ordered_Maps (Key_T, Map_T, "<",
Engine/neo-core-ordered.ads:24:83     - Unknown word (Unsafe)       -- Map_T, "<", "="); use Unsafe;
Engine/neo-core-ordered.ads:25:11     - Unknown word (Cursor)       -- subtype Cursor is Unsafe.Cursor;
Engine/neo-core-ordered.ads:25:21     - Unknown word (Unsafe)       -- subtype Cursor is Unsafe.Cursor;
Engine/neo-core-ordered.ads:25:28     - Unknown word (Cursor)       -- subtype Cursor is Unsafe.Cursor;
Engine/neo-core-ordered.ads:26:16     - Unknown word (Cursor)       -- NO_ELEMENT : Cursor := Unsafe.NO_ELEMENT
Engine/neo-core-ordered.ads:26:26     - Unknown word (Unsafe)       -- ELEMENT : Cursor := Unsafe.NO_ELEMENT;
Engine/neo-core-ordered.ads:26:36     - Unknown word (ELEMENT)      -- Cursor := Unsafe.NO_ELEMENT;
Engine/neo-core-ordered.ads:26:6      - Unknown word (ELEMENT)      -- NO_ELEMENT : Cursor := Unsafe.NO
Engine/neo-core-ordered.ads:28:6      - Unknown word (Wrapped)      -- -- Wrapped type
Engine/neo-core-ordered.ads:29:18     - Unknown word (Safe)         -- protected type Safe_Map is
Engine/neo-core-ordered.ads:31:32     - Unknown word (Unsafe)       -- procedure Set     (Val : Unsafe.Map);
Engine/neo-core-ordered.ads:32:39     - Unknown word (Cursor)       -- Next (Pos : in out Cursor);
Engine/neo-core-ordered.ads:33:39     - Unknown word (Cursor)       -- Delete (Pos : in out Cursor);
Engine/neo-core-ordered.ads:45:16     - Unknown word (Length)       -- function Length return
Engine/neo-core-ordered.ads:47:7      - Unknown word (This)         -- This : Unsafe.Map;
Engine/neo-core-ordered.ads:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo-core-ordered.ads:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo-core-ordered.ads:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo-core-ordered.ads:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-core-ordered.ads:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-core-ordered.ads:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-core-ordered.ads:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo-core-strings.adb:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-core-strings.adb:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-core-strings.adb:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo-core-strings.adb:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-core-strings.adb:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-core-strings.adb:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-core-strings.adb:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-core-strings.adb:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-core-strings.adb:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-core-strings.adb:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-core-strings.adb:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-core-strings.adb:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-core-strings.adb:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-core-strings.adb:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-core-strings.adb:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-core-strings.adb:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-core-strings.adb:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-core-strings.adb:16:10     - Unknown word (cleanup)      -- -- Needs cleanup...
Engine/neo-core-strings.adb:16:4      - Unknown word (Needs)        -- -- Needs cleanup...
Engine/neo-core-strings.adb:17:23     - Unknown word (Strings)      -- package body Neo.Core.Strings is
Engine/neo-core-strings.adb:23:12     - Unknown word (this)         -- -- Could this be done cleanly without
Engine/neo-core-strings.adb:23:20     - Unknown word (done)         -- -- Could this be done cleanly without vectors
Engine/neo-core-strings.adb:23:25     - Unknown word (cleanly)      -- Could this be done cleanly without vectors ???
Engine/neo-core-strings.adb:23:41     - Unknown word (vectors)      -- done cleanly without vectors ???
Engine/neo-core-strings.adb:23:6      - Unknown word (Could)        -- -- Could this be done cleanly
Engine/neo-core-strings.adb:24:52     - Unknown word (Vector)       -- Str; On : Str) return Vector_Str_16_Unbound.Unsafe
Engine/neo-core-strings.adb:24:66     - Unknown word (Unbound)      -- return Vector_Str_16_Unbound.Unsafe.Vector is
Engine/neo-core-strings.adb:24:74     - Unknown word (Unsafe)       -- Vector_Str_16_Unbound.Unsafe.Vector is
Engine/neo-core-strings.adb:24:81     - Unknown word (Vector)       -- Str_16_Unbound.Unsafe.Vector is
Engine/neo-core-strings.adb:25:17     - Unknown word (Vector)       -- Result : Vector_Str_16_Unbound.Unsafe
Engine/neo-core-strings.adb:25:31     - Unknown word (Unbound)      -- Result : Vector_Str_16_Unbound.Unsafe.Vector; use Vector
Engine/neo-core-strings.adb:25:39     - Unknown word (Unsafe)       -- Vector_Str_16_Unbound.Unsafe.Vector; use Vector_Str
Engine/neo-core-strings.adb:25:46     - Unknown word (Vector)       -- Str_16_Unbound.Unsafe.Vector; use Vector_Str_16_Unbound
Engine/neo-core-strings.adb:25:58     - Unknown word (Vector)       -- Unbound.Unsafe.Vector; use Vector_Str_16_Unbound.Unsafe
Engine/neo-core-strings.adb:25:72     - Unknown word (Unbound)      -- Vector; use Vector_Str_16_Unbound.Unsafe;
Engine/neo-core-strings.adb:25:80     - Unknown word (Unsafe)       -- Vector_Str_16_Unbound.Unsafe;
Engine/neo-core-strings.adb:26:37     - Unknown word (Trim)         -- constant Str     := Trim (Item, Both);
Engine/neo-core-strings.adb:26:49     - Unknown word (Both)         -- Str := Trim (Item, Both);
Engine/neo-core-strings.adb:26:5      - Unknown word (TRIMMED)      -- TRIMMED : constant Str
Engine/neo-core-strings.adb:27:5      - Unknown word (REMAINDER)    -- REMAINDER : constant Natural
Engine/neo-core-strings.adb:29:10     - Unknown word (REMAINDER)    -- if REMAINDER = 0 then return Result
Engine/neo-core-strings.adb:29:52     - Unknown word (Unbound)      -- return Result & To_Str_Unbound (Item);
Engine/neo-core-strings.adb:30:34     - Unknown word (Unbound)      -- Result.Append (To_Str_Unbound (Trim (TRIMMED (TRIMMED
Engine/neo-core-strings.adb:30:43     - Unknown word (Trim)         -- Append (To_Str_Unbound (Trim (TRIMMED (TRIMMED'First
Engine/neo-core-strings.adb:30:49     - Unknown word (TRIMMED)      -- To_Str_Unbound (Trim (TRIMMED (TRIMMED'First..REMAINDER
Engine/neo-core-strings.adb:30:58     - Unknown word (TRIMMED)      -- Unbound (Trim (TRIMMED (TRIMMED'First..REMAINDER -
Engine/neo-core-strings.adb:30:73     - Unknown word (REMAINDER)    -- TRIMMED (TRIMMED'First..REMAINDER - 1), Both))); end if
Engine/neo-core-strings.adb:30:89     - Unknown word (Both)         -- First..REMAINDER - 1), Both))); end if;
Engine/neo-core-strings.adb:31:35     - Unknown word (TRIMMED)      -- Result & (Split_Vec (TRIMMED (REMAINDER + 1..TRIMMED
Engine/neo-core-strings.adb:31:44     - Unknown word (REMAINDER)    -- Split_Vec (TRIMMED (REMAINDER + 1..TRIMMED'Last),
Engine/neo-core-strings.adb:31:59     - Unknown word (TRIMMED)      -- TRIMMED (REMAINDER + 1..TRIMMED'Last), On));
Engine/neo-core-strings.adb:34:6      - Unknown word (This)         -- -- This is sh!t
Engine/neo-core-strings.adb:35:78     - Unknown word (Unsafe)       -- Vector_Str_16_Unbound.Unsafe.Vector is
Engine/neo-core-strings.adb:36:29     - Unknown word (Characters)   -- package WL1 renames Ada.Characters.Wide_Latin_1;
Engine/neo-core-strings.adb:36:40     - Unknown word (Wide)         -- renames Ada.Characters.Wide_Latin_1;
Engine/neo-core-strings.adb:36:45     - Unknown word (Latin)        -- Ada.Characters.Wide_Latin_1;
Engine/neo-core-strings.adb:37:39     - Unknown word (Unsafe)       -- Vector_Str_16_Unbound.Unsafe.Vector; use Vector_Str
Engine/neo-core-strings.adb:38:16     - Unknown word (CHARS)        -- WHITESPACE_CHARS : constant array (1
Engine/neo-core-strings.adb:38:49     - Unknown word (Char)         -- constant array (1..5) of Char := (' ', WL1.HT, WL
Engine/neo-core-strings.adb:39:37     - Unknown word (Trim)         -- constant Str     := Trim (Item, Both);
Engine/neo-core-strings.adb:39:49     - Unknown word (Both)         -- Str := Trim (Item, Both);
Engine/neo-core-strings.adb:43:11     - Unknown word (Char)         -- for Char of WHITESPACE_CHARS
Engine/neo-core-strings.adb:43:30     - Unknown word (CHARS)        -- for Char of WHITESPACE_CHARS loop
Engine/neo-core-strings.adb:44:41     - Unknown word (Char)         -- Index (TRIMMED, To_Str (Char));
Engine/neo-core-strings.adb:48:43     - Unknown word (Trim)         -- Append (To_Str_Unbound (Trim (TRIMMED (TRIMMED'First
Engine/neo-core-strings.adb:48:87     - Unknown word (Both)         -- First..Current - 1), Both))); end if;
Engine/neo-core-strings.adb:53:6      - Unknown word (Trim)         -- -- Trim --
Engine/neo-core-strings.adb:57:29     - Unknown word (Characters)   -- package WL1 renames Ada.Characters.Wide_Latin_1;
Engine/neo-core-strings.adb:57:40     - Unknown word (Wide)         -- renames Ada.Characters.Wide_Latin_1;
Engine/neo-core-strings.adb:57:45     - Unknown word (Latin)        -- Ada.Characters.Wide_Latin_1;
Engine/neo-core-strings.adb:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo-core-strings.adb:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo-core-strings.adb:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo-core-strings.adb:60:18     - Unknown word (Length)       -- while I <= Length (Item) and then Element
Engine/neo-core-strings.adb:60:41     - Unknown word (Element)      -- Length (Item) and then Element (Item, I) in ' ' | WL
Engine/neo-core-strings.adb:63:22     - Unknown word (Tail)         -- if I /= 1 then Tail (Item, Length (Item
Engine/neo-core-strings.adb:63:34     - Unknown word (Length)       -- 1 then Tail (Item, Length (Item) - I); end if
Engine/neo-core-strings.adb:64:12     - Unknown word (Length)       -- I := Length (Item);
Engine/neo-core-strings.adb:65:28     - Unknown word (Element)      -- while I > 0 and then Element (Item, I) in ' ' | WL
Engine/neo-core-strings.adb:68:15     - Unknown word (Length)       -- if I /= Length (Item) then Head (Item
Engine/neo-core-strings.adb:68:46     - Unknown word (Length)       -- Item) then Head (Item, Length (Item) - I); end if
Engine/neo-core-strings.adb:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-core-strings.adb:83:9      - Unknown word (Overwrite)    -- Overwrite (Result, I, To);
Engine/neo-core-strings.adb:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-core-strings.adb:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-core-strings.adb:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo-core-strings.ads:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-core-strings.ads:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-core-strings.ads:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo-core-strings.ads:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-core-strings.ads:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-core-strings.ads:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-core-strings.ads:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-core-strings.ads:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-core-strings.ads:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-core-strings.ads:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-core-strings.ads:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-core-strings.ads:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-core-strings.ads:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-core-strings.ads:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-core-strings.ads:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-core-strings.ads:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-core-strings.ads:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-core-strings.ads:18:18     - Unknown word (string)        -- -- Miscellaneous string utilities
Engine/neo-core-strings.ads:18:4      - Unknown word (Miscellaneous) -- -- Miscellaneous string utilities
Engine/neo-core-strings.ads:19:18     - Unknown word (Strings)       -- package Neo.Core.Strings is
Engine/neo-core-strings.ads:25:52     - Unknown word (Vector)        -- Str; On : Str) return Vector_Str_16_Unbound.Unsafe
Engine/neo-core-strings.ads:25:66     - Unknown word (Unbound)       -- return Vector_Str_16_Unbound.Unsafe.Vector;
Engine/neo-core-strings.ads:25:74     - Unknown word (Unsafe)        -- Vector_Str_16_Unbound.Unsafe.Vector;
Engine/neo-core-strings.ads:25:81     - Unknown word (Vector)        -- Str_16_Unbound.Unsafe.Vector;
Engine/neo-core-strings.ads:26:62     - Unknown word (Unbound)       -- Str) return Array_Str_Unbound is
Engine/neo-core-strings.ads:27:20     - Unknown word (Unbound)       -- (Vector_Str_16_Unbound.To_Unsafe_Array (Split
Engine/neo-core-strings.ads:27:31     - Unknown word (Unsafe)        -- Vector_Str_16_Unbound.To_Unsafe_Array (Split_Vec (Item
Engine/neo-core-strings.ads:27:6      - Unknown word (Vector)        -- (Vector_Str_16_Unbound.To_Unsafe
Engine/neo-core-strings.ads:29:56     - Unknown word (Vector)        -- (Item : Str) return Vector_Str_16_Unbound.Unsafe
Engine/neo-core-strings.ads:29:70     - Unknown word (Unbound)       -- return Vector_Str_16_Unbound.Unsafe.Vector;
Engine/neo-core-strings.ads:29:78     - Unknown word (Unsafe)        -- Vector_Str_16_Unbound.Unsafe.Vector;
Engine/neo-core-strings.ads:29:85     - Unknown word (Vector)        -- Str_16_Unbound.Unsafe.Vector;
Engine/neo-core-strings.ads:30:66     - Unknown word (Unbound)       -- Str) return Array_Str_Unbound is
Engine/neo-core-strings.ads:31:31     - Unknown word (Unsafe)        -- Vector_Str_16_Unbound.To_Unsafe_Array (Split_Vec_On
Engine/neo-core-strings.ads:42:6      - Unknown word (Trim)          -- -- Trim --
Engine/neo-core-strings.ads:45:13     - Unknown word (Trim)          -- procedure Trim (Item : in out Str_Unbound
Engine/neo-core-strings.ads:48:13     - Unknown word (Conversions)   -- -- Number Conversions --
Engine/neo-core-strings.ads:52:60     - Unknown word (Unsigned)      -- Generic_To_Str_16_Int (Int_Unsigned_C);
Engine/neo-core-strings.ads:59:18     - Unknown word (Positive)      -- Max_Length : Positive;
Engine/neo-core-strings.ads:59:9      - Unknown word (Length)        -- Max_Length : Positive;
Engine/neo-core-strings.ads:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo-core-strings.ads:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo-core-strings.ads:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo-core-strings.ads:61:36     - Unknown word (Length)        -- is Str_16_Super (Max_Length);
Engine/neo-core-strings.ads:62:39     - Unknown word (String)        -- constant T := To_Super_String ("", Max_Length);
Engine/neo-core-strings.ads:62:55     - Unknown word (Length)        -- Super_String ("", Max_Length);
Engine/neo-core-strings.ads:63:28     - Unknown word (Positive)      -- type Array_T is array (Positive range <>) of T;
Engine/neo-core-strings.ads:64:71     - Unknown word (String)        -- is (To_Super_String (Val, Max_Length));
Engine/neo-core-strings.ads:64:88     - Unknown word (Length)        -- Super_String (Val, Max_Length));
Engine/neo-core-strings.ads:72:18     - Unknown word (Positive)      -- Max_Length : Positive;
Engine/neo-core-strings.ads:72:9      - Unknown word (Length)        -- Max_Length : Positive;
Engine/neo-core-strings.ads:75:39     - Unknown word (String)        -- constant T := To_Super_String ("", Max_Length);
Engine/neo-core-strings.ads:76:28     - Unknown word (Positive)      -- type Array_T is array (Positive range <>) of T;
Engine/neo-core-strings.ads:77:73     - Unknown word (String)        -- is (To_Super_String (To_Str_8 (Val), Max
Engine/neo-core-strings.ads:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-core-strings.ads:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-core-strings.ads:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-core-strings.ads:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo-core-trees.adb:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-core-trees.adb:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-core-trees.adb:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo-core-trees.adb:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-core-trees.adb:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-core-trees.adb:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-core-trees.adb:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-core-trees.adb:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-core-trees.adb:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-core-trees.adb:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-core-trees.adb:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-core-trees.adb:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-core-trees.adb:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-core-trees.adb:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-core-trees.adb:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-core-trees.adb:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-core-trees.adb:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-core-trees.adb:17:18     - Unknown word (Safe)         -- protected body Safe_Tree is
Engine/neo-core-trees.adb:18:120    - Unknown word (This)         -- is begin This := Source;
Engine/neo-core-trees.adb:18:43     - Unknown word (Unsafe)       -- (Source : Unsafe.Tree)
Engine/neo-core-trees.adb:19:120    - Unknown word (This)         -- is begin This.Clear;
Engine/neo-core-trees.adb:20:120    - Unknown word (This)         -- is begin This.Replace_Element
Engine/neo-core-trees.adb:20:133    - Unknown word (Element)      -- is begin This.Replace_Element (Pos, Item
Engine/neo-core-trees.adb:20:43     - Unknown word (Cursor)       -- Replace (Pos    : Cursor; Item : Tree_T)
Engine/neo-core-trees.adb:21:120    - Unknown word (Unsafe)       -- T)) is begin Unsafe.Query_Element
Engine/neo-core-trees.adb:21:133    - Unknown word (Element)      -- is begin Unsafe.Query_Element (Pos,
Engine/neo-core-trees.adb:21:43     - Unknown word (Cursor)       -- (Pos : Cursor; Process : not null
Engine/neo-core-trees.adb:22:120    - Unknown word (This)         -- out Tree_T)) is begin This.Update_Element
Engine/neo-core-trees.adb:22:132    - Unknown word (Element)      -- is begin This.Update_Element (Pos,
Engine/neo-core-trees.adb:22:43     - Unknown word (Cursor)       -- Update (Pos    : Cursor; Process : not null
Engine/neo-core-trees.adb:23:120    - Unknown word (Unsafe)       -- Cursor)) is begin Unsafe.Iterate_Subtree
Engine/neo-core-trees.adb:23:43     - Unknown word (Cursor)       -- Iterate_Subtree (Pos    : Cursor; Process : not null
Engine/neo-core-trees.adb:23:94     - Unknown word (Cursor)       -- access procedure (Pos : Cursor)) is begin Unsafe
Engine/neo-core-trees.adb:24:120    - Unknown word (This)         -- Cursor)) is begin This.Iterate
Engine/neo-core-trees.adb:25:120    - Unknown word (Unsafe)       -- Cursor)) is begin Unsafe.Iterate_Children
Engine/neo-core-trees.adb:26:120    - Unknown word (Unsafe)       -- Cursor)) is begin Unsafe.Reverse_Iterate_Children
Engine/neo-core-trees.adb:26:25     - Unknown word (Back)         -- procedure Iterate_Back (Parent : Cursor
Engine/neo-core-trees.adb:28:132    - Unknown word (Leaf)         -- is begin This.Delete_Leaf (Pos
Engine/neo-core-trees.adb:28:24     - Unknown word (Leaf)         -- procedure Delete_Leaf (Pos    : in out
Engine/neo-core-trees.adb:32:82     - Unknown word (Positive)     -- Item : Tree_T; Count : Positive := 1)
Engine/neo-core-trees.adb:33:82     - Unknown word (Positive)     -- Item : Tree_T; Count : Positive := 1)
Engine/neo-core-trees.adb:34:161    - Unknown word (Before)       -- (Parent, Before, Item, Count_Type (Count
Engine/neo-core-trees.adb:34:42     - Unknown word (Before)       -- Insert (Parent, Before : Cursor; Item : Tree
Engine/neo-core-trees.adb:34:82     - Unknown word (Positive)     -- Item : Tree_T; Count : Positive := 1)
Engine/neo-core-trees.adb:35:125    - Unknown word (Splice)       -- is begin This.Splice_Subtree
Engine/neo-core-trees.adb:35:161    - Unknown word (before)       -- (Parent, before, Pos);
Engine/neo-core-trees.adb:35:17     - Unknown word (Splice)       -- procedure Splice_Subtree (Parent, Before
Engine/neo-core-trees.adb:35:42     - Unknown word (Before)       -- Splice_Subtree (Parent, Before, Pos           : Cursor
Engine/neo-core-trees.adb:36:125    - Unknown word (Splice)       -- is begin This.Splice_Children
Engine/neo-core-trees.adb:36:161    - Unknown word (Before)       -- (Parent, Before, Source_Parent);
Engine/neo-core-trees.adb:36:17     - Unknown word (Splice)       -- procedure Splice_Children (Parent, Before
Engine/neo-core-trees.adb:36:42     - Unknown word (Before)       -- Splice_Children (Parent, Before, Source_Parent : Cursor
Engine/neo-core-trees.adb:38:132    - Unknown word (Sibling)      -- is begin Unsafe.Next_Sibling (Pos);
Engine/neo-core-trees.adb:39:127    - Unknown word (Previous)     -- is begin Unsafe.Previous_Sibling (Pos
Engine/neo-core-trees.adb:39:136    - Unknown word (Sibling)      -- begin Unsafe.Previous_Sibling (Pos);
Engine/neo-core-trees.adb:39:17     - Unknown word (Previous)     -- procedure Previous (Pos    : in
Engine/neo-core-trees.adb:40:115    - Unknown word (Positive)     -- is (Positive (Unsafe.Subtree_Node
Engine/neo-core-trees.adb:40:73     - Unknown word (Positive)     -- return Positive
Engine/neo-core-trees.adb:41:132    - Unknown word (Depth)        -- is (Positive (Unsafe.Depth (Pos)
Engine/neo-core-trees.adb:41:16     - Unknown word (Depth)        -- function Depth (Pos
Engine/neo-core-trees.adb:42:122    - Unknown word (Equal)        -- is (Unsafe.Equal_Subtree
Engine/neo-core-trees.adb:44:125    - Unknown word (Leaf)         -- is (Unsafe.Is_Leaf
Engine/neo-core-trees.adb:44:19     - Unknown word (Leaf)         -- function Is_Leaf (Pos    : Cursor
Engine/neo-core-trees.adb:45:126    - Unknown word (Element)      -- is (Unsafe.Has_Element (Pos
Engine/neo-core-trees.adb:46:16     - Unknown word (Equals)       -- function Equals (Item   :
Engine/neo-core-trees.adb:47:120    - Unknown word (Find)         -- is (This.Find
Engine/neo-core-trees.adb:47:16     - Unknown word (Find)         -- function Find (Item
Engine/neo-core-trees.adb:48:122    - Unknown word (Element)      -- is (Unsafe.Element
Engine/neo-core-trees.adb:49:122    - Unknown word (Find)         -- is (Unsafe.Find_In_Subtree
Engine/neo-core-trees.adb:49:16     - Unknown word (Find)         -- function Find_In_Subtree (Pos
Engine/neo-core-trees.adb:50:122    - Unknown word (Ancestor)     -- is (Unsafe.Ancestor_Find
Engine/neo-core-trees.adb:50:16     - Unknown word (Ancestor)     -- function Ancestor_Find (Pos    : Cursor
Engine/neo-core-trees.adb:50:25     - Unknown word (Find)         -- function Ancestor_Find (Pos    : Cursor
Engine/neo-core-trees.adb:52:138    - Unknown word (Depth)        -- Positive (Unsafe.Child_Depth (Parent, Child
Engine/neo-core-trees.adb:52:22     - Unknown word (Depth)        -- function Child_Depth (Parent, Child
Engine/neo-core-trees.adb:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo-core-trees.adb:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo-core-trees.adb:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo-core-trees.adb:60:123    - Unknown word (Empty)        -- is (This.Is_Empty);
Engine/neo-core-trees.adb:60:19     - Unknown word (Empty)        -- function Is_Empty
Engine/neo-core-trees.adb:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-core-trees.adb:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-core-trees.adb:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-core-trees.adb:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo-core-trees.ads:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-core-trees.ads:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-core-trees.ads:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo-core-trees.ads:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-core-trees.ads:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-core-trees.ads:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-core-trees.ads:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-core-trees.ads:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-core-trees.ads:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-core-trees.ads:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-core-trees.ads:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-core-trees.ads:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-core-trees.ads:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-core-trees.ads:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-core-trees.ads:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-core-trees.ads:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-core-trees.ads:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-core-trees.ads:16:21     - Unknown word (Multiway)     -- with Ada.Containers.Multiway_Trees;
Engine/neo-core-trees.ads:23:11     - Unknown word (Unsafe)       -- package Unsafe is new Ada.Containers
Engine/neo-core-trees.ads:23:40     - Unknown word (Multiway)     -- is new Ada.Containers.Multiway_Trees (Tree_T, "=")
Engine/neo-core-trees.ads:24:11     - Unknown word (Cursor)       -- subtype Cursor is Unsafe.Cursor;
Engine/neo-core-trees.ads:24:21     - Unknown word (Unsafe)       -- subtype Cursor is Unsafe.Cursor;
Engine/neo-core-trees.ads:24:28     - Unknown word (Cursor)       -- subtype Cursor is Unsafe.Cursor;
Engine/neo-core-trees.ads:25:16     - Unknown word (Cursor)       -- NO_ELEMENT : Cursor := Unsafe.NO_ELEMENT
Engine/neo-core-trees.ads:25:26     - Unknown word (Unsafe)       -- ELEMENT : Cursor := Unsafe.NO_ELEMENT;
Engine/neo-core-trees.ads:25:36     - Unknown word (ELEMENT)      -- Cursor := Unsafe.NO_ELEMENT;
Engine/neo-core-trees.ads:25:6      - Unknown word (ELEMENT)      -- NO_ELEMENT : Cursor := Unsafe.NO
Engine/neo-core-trees.ads:27:6      - Unknown word (Wrapped)      -- -- Wrapped type
Engine/neo-core-trees.ads:28:18     - Unknown word (Safe)         -- protected type Safe_Tree is
Engine/neo-core-trees.ads:30:43     - Unknown word (Cursor)       -- Replace (Pos    : Cursor; Item : Tree_T);
Engine/neo-core-trees.ads:31:43     - Unknown word (Cursor)       -- (Pos : Cursor; Process : not null
Engine/neo-core-trees.ads:36:25     - Unknown word (Back)         -- procedure Iterate_Back (Parent : Cursor
Engine/neo-core-trees.ads:38:43     - Unknown word (Unsafe)       -- (Source : Unsafe.Tree);
Engine/neo-core-trees.ads:39:50     - Unknown word (Unsafe)       -- (Source : in out Unsafe.Tree);
Engine/neo-core-trees.ads:40:24     - Unknown word (Leaf)         -- procedure Delete_Leaf (Pos    : in out
Engine/neo-core-trees.ads:43:82     - Unknown word (Positive)     -- Item : Tree_T; Count : Positive := 1);
Engine/neo-core-trees.ads:44:82     - Unknown word (Positive)     -- Item : Tree_T; Count : Positive := 1);
Engine/neo-core-trees.ads:45:42     - Unknown word (Before)       -- Insert (Parent, Before : Cursor; Item : Tree
Engine/neo-core-trees.ads:45:82     - Unknown word (Positive)     -- Item : Tree_T; Count : Positive := 1);
Engine/neo-core-trees.ads:46:17     - Unknown word (Splice)       -- procedure Splice_Subtree (Parent, Before
Engine/neo-core-trees.ads:46:42     - Unknown word (Before)       -- Splice_Subtree (Parent, Before, Pos           : Cursor
Engine/neo-core-trees.ads:47:17     - Unknown word (Splice)       -- procedure Splice_Children (Parent, Before
Engine/neo-core-trees.ads:47:42     - Unknown word (Before)       -- Splice_Children (Parent, Before, Source_Parent : Cursor
Engine/neo-core-trees.ads:48:42     - Unknown word (Before)       -- Subtree (Parent, Before, Source        : Cursor
Engine/neo-core-trees.ads:50:17     - Unknown word (Previous)     -- procedure Previous (Pos    : in
Engine/neo-core-trees.ads:51:73     - Unknown word (Positive)     -- return Positive;
Engine/neo-core-trees.ads:52:16     - Unknown word (Depth)        -- function Depth (Pos
Engine/neo-core-trees.ads:52:73     - Unknown word (Positive)     -- return Positive;
Engine/neo-core-trees.ads:55:19     - Unknown word (Leaf)         -- function Is_Leaf (Pos    : Cursor
Engine/neo-core-trees.ads:57:16     - Unknown word (Equals)       -- function Equals (Item   :
Engine/neo-core-trees.ads:58:16     - Unknown word (Find)         -- function Find (Item
Engine/neo-core-trees.ads:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo-core-trees.ads:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo-core-trees.ads:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo-core-trees.ads:60:16     - Unknown word (Find)         -- function Find_In_Subtree (Pos
Engine/neo-core-trees.ads:61:16     - Unknown word (Ancestor)     -- function Ancestor_Find (Pos    : Cursor
Engine/neo-core-trees.ads:61:25     - Unknown word (Find)         -- function Ancestor_Find (Pos    : Cursor
Engine/neo-core-trees.ads:63:22     - Unknown word (Depth)        -- function Child_Depth (Parent, Child
Engine/neo-core-trees.ads:69:19     - Unknown word (Empty)        -- function Is_Empty
Engine/neo-core-trees.ads:74:7      - Unknown word (This)         -- This : Unsafe.Tree;
Engine/neo-core-trees.ads:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-core-trees.ads:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-core-trees.ads:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-core-trees.ads:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo-core-vectors.adb:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-core-vectors.adb:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-core-vectors.adb:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo-core-vectors.adb:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-core-vectors.adb:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-core-vectors.adb:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-core-vectors.adb:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-core-vectors.adb:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-core-vectors.adb:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-core-vectors.adb:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-core-vectors.adb:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-core-vectors.adb:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-core-vectors.adb:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-core-vectors.adb:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-core-vectors.adb:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-core-vectors.adb:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-core-vectors.adb:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-core-vectors.adb:16:23     - Unknown word (Vectors)      -- package body Neo.Core.Vectors is
Engine/neo-core-vectors.adb:17:18     - Unknown word (Safe)         -- protected body Safe_Vector is
Engine/neo-core-vectors.adb:17:23     - Unknown word (Vector)       -- protected body Safe_Vector is
Engine/neo-core-vectors.adb:18:32     - Unknown word (Unsafe)       -- procedure Set     (Val : Unsafe.Vector)
Engine/neo-core-vectors.adb:18:39     - Unknown word (Vector)       -- Set (Val : Unsafe.Vector)
Engine/neo-core-vectors.adb:18:93     - Unknown word (This)         -- is begin This := Val;
Engine/neo-core-vectors.adb:19:101    - Unknown word (Unsafe)       -- is begin Set (To_Unsafe_Vector (Val));
Engine/neo-core-vectors.adb:19:108    - Unknown word (Vector)       -- begin Set (To_Unsafe_Vector (Val));
Engine/neo-core-vectors.adb:19:32     - Unknown word (Unsafe)       -- procedure Set     (Val : Unsafe_Array)
Engine/neo-core-vectors.adb:20:93     - Unknown word (This)         -- is begin This.Clear;
Engine/neo-core-vectors.adb:21:39     - Unknown word (Cursor)       -- Next (Pos : in out Cursor)
Engine/neo-core-vectors.adb:21:93     - Unknown word (Unsafe)       -- is begin Unsafe.Next (Pos
Engine/neo-core-vectors.adb:22:106    - Unknown word (Element)      -- is begin This.Replace_Element (Pos, Item);
Engine/neo-core-vectors.adb:22:39     - Unknown word (Cursor)       -- Replace (Pos :        Cursor; Item : Vec_T)
Engine/neo-core-vectors.adb:22:93     - Unknown word (This)         -- is begin This.Replace_Element (Pos
Engine/neo-core-vectors.adb:23:106    - Unknown word (Element)      -- is begin This.Replace_Element (Pos, Item);
Engine/neo-core-vectors.adb:23:32     - Unknown word (Positive)     -- procedure Replace (Pos : Positive; Item : Vec_T)
Engine/neo-core-vectors.adb:23:93     - Unknown word (This)         -- is begin This.Replace_Element (Pos
Engine/neo-core-vectors.adb:24:69     - Unknown word (Positive)     -- Item : Vec_T; Count : Positive := 1) is begin This
Engine/neo-core-vectors.adb:24:93     - Unknown word (This)         -- Positive := 1) is begin This.Append (Item
Engine/neo-core-vectors.adb:25:69     - Unknown word (Positive)     -- Item : Vec_T; Count : Positive := 1) is begin This
Engine/neo-core-vectors.adb:26:116    - Unknown word (Before)       -- This.Insert (Before, Item);
Engine/neo-core-vectors.adb:26:26     - Unknown word (Before)       -- procedure Insert  (Before : Positive;   Item
Engine/neo-core-vectors.adb:26:35     - Unknown word (Positive)     -- procedure Insert  (Before : Positive; Item : Vec_T; Count
Engine/neo-core-vectors.adb:26:69     - Unknown word (Positive)     -- Item : Vec_T; Count : Positive := 1) is begin This
Engine/neo-core-vectors.adb:28:35     - Unknown word (Cursor)       -- function Has      (Pos    : Cursor) return Boolean
Engine/neo-core-vectors.adb:28:88     - Unknown word (Unsafe)       -- is (Unsafe.Has_Element
Engine/neo-core-vectors.adb:28:99     - Unknown word (Element)      -- is (Unsafe.Has_Element (Pos));
Engine/neo-core-vectors.adb:29:35     - Unknown word (Cursor)       -- function Get      (Pos    : Cursor) return Vec_T
Engine/neo-core-vectors.adb:29:95     - Unknown word (Element)      -- is (Unsafe.Element (Pos));
Engine/neo-core-vectors.adb:31:60     - Unknown word (Vector)       -- return Unsafe.Vector is
Engine/neo-core-vectors.adb:32:53     - Unknown word (Cursor)       -- return Cursor
Engine/neo-core-vectors.adb:33:121    - Unknown word (Length)       -- (This.Length));
Engine/neo-core-vectors.adb:33:16     - Unknown word (Length)       -- function Length
Engine/neo-core-vectors.adb:37:23     - Unknown word (conversions)  -- -- Vector and array conversions
Engine/neo-core-vectors.adb:37:6      - Unknown word (Vector)       -- -- Vector and array conversions
Engine/neo-core-vectors.adb:45:45     - Unknown word (Length)       -- Array (1..Integer (Item.Length));
Engine/neo-core-vectors.adb:47:33     - Unknown word (Length)       -- in 1..Integer (Item.Length) loop Result (I) :=
Engine/neo-core-vectors.adb:47:65     - Unknown word (Element)      -- loop Result (I) := Item.Element (I); end loop;
Engine/neo-core-vectors.adb:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo-core-vectors.adb:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo-core-vectors.adb:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo-core-vectors.adb:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-core-vectors.adb:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-core-vectors.adb:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-core-vectors.adb:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo-core-vectors.ads:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-core-vectors.ads:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-core-vectors.ads:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo-core-vectors.ads:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-core-vectors.ads:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-core-vectors.ads:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-core-vectors.ads:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-core-vectors.ads:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-core-vectors.ads:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-core-vectors.ads:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-core-vectors.ads:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-core-vectors.ads:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-core-vectors.ads:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-core-vectors.ads:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-core-vectors.ads:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-core-vectors.ads:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-core-vectors.ads:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-core-vectors.ads:16:21     - Unknown word (Vectors)      -- with Ada.Containers.Vectors;
Engine/neo-core-vectors.ads:20:18     - Unknown word (Vectors)      -- package Neo.Core.Vectors is
Engine/neo-core-vectors.ads:23:11     - Unknown word (Unsafe)       -- package Unsafe is new Ada.Containers
Engine/neo-core-vectors.ads:23:40     - Unknown word (Vectors)      -- is new Ada.Containers.Vectors (Positive, Vec_T);
Engine/neo-core-vectors.ads:23:49     - Unknown word (Positive)     -- Containers.Vectors (Positive, Vec_T);
Engine/neo-core-vectors.ads:24:11     - Unknown word (Cursor)       -- subtype Cursor is Unsafe.Cursor;
Engine/neo-core-vectors.ads:24:21     - Unknown word (Unsafe)       -- subtype Cursor is Unsafe.Cursor;
Engine/neo-core-vectors.ads:24:28     - Unknown word (Cursor)       -- subtype Cursor is Unsafe.Cursor;
Engine/neo-core-vectors.ads:25:16     - Unknown word (Cursor)       -- NO_ELEMENT : Cursor := Unsafe.NO_ELEMENT
Engine/neo-core-vectors.ads:25:26     - Unknown word (Unsafe)       -- ELEMENT : Cursor := Unsafe.NO_ELEMENT;
Engine/neo-core-vectors.ads:25:36     - Unknown word (ELEMENT)      -- Cursor := Unsafe.NO_ELEMENT;
Engine/neo-core-vectors.ads:25:6      - Unknown word (ELEMENT)      -- NO_ELEMENT : Cursor := Unsafe.NO
Engine/neo-core-vectors.ads:27:12     - Unknown word (conversions)  -- -- Array conversions
Engine/neo-core-vectors.ads:28:31     - Unknown word (Positive)     -- Unsafe_Array is array (Positive range <>) of aliased
Engine/neo-core-vectors.ads:28:72     - Unknown word (Convention)   -- of aliased Vec_T with Convention => C;
Engine/neo-core-vectors.ads:28:8      - Unknown word (Unsafe)       -- type Unsafe_Array is array (Positive
Engine/neo-core-vectors.ads:29:12     - Unknown word (Unsafe)       -- type Ptr_Unsafe_Array is access all
Engine/neo-core-vectors.ads:30:22     - Unknown word (Vector)       -- function To_Unsafe_Vector (Item : Unsafe_Array
Engine/neo-core-vectors.ads:30:66     - Unknown word (Vector)       -- Array) return Unsafe.Vector;
Engine/neo-core-vectors.ads:31:44     - Unknown word (Vector)       -- Array (Item : Unsafe.Vector) return Unsafe_Array
Engine/neo-core-vectors.ads:34:14     - Unknown word (conversions)  -- -- Pointer conversions
Engine/neo-core-vectors.ads:34:6      - Unknown word (Pointer)      -- -- Pointer conversions
Engine/neo-core-vectors.ads:35:19     - Unknown word (Vector)       -- type Ptr_Unsafe_Vector is access all Unsafe
Engine/neo-core-vectors.ads:35:47     - Unknown word (Vector)       -- is access all Unsafe.Vector;
Engine/neo-core-vectors.ads:39:13     - Unknown word (incompatible) -- -- warning: incompatible types in conversion
Engine/neo-core-vectors.ads:40:8      - Unknown word (Warnings)     -- pragma Warnings (Off);
Engine/neo-core-vectors.ads:41:84     - Unknown word (Just)         -- Unsafe_Array, Ptr); -- Just hack it
Engine/neo-core-vectors.ads:41:89     - Unknown word (hack)         -- Array, Ptr); -- Just hack it
Engine/neo-core-vectors.ads:42:84     - Unknown word (Just)         -- Ptr_Unsafe_Array); -- Just hack it
Engine/neo-core-vectors.ads:42:89     - Unknown word (hack)         -- Unsafe_Array); -- Just hack it
Engine/neo-core-vectors.ads:43:8      - Unknown word (Warnings)     -- Pragma Warnings (On);
Engine/neo-core-vectors.ads:47:6      - Unknown word (Wrapped)      -- -- Wrapped type
Engine/neo-core-vectors.ads:48:18     - Unknown word (Safe)         -- protected type Safe_Vector is
Engine/neo-core-vectors.ads:52:39     - Unknown word (Cursor)       -- Next (Pos : in out Cursor);
Engine/neo-core-vectors.ads:53:39     - Unknown word (Cursor)       -- Replace (Pos :        Cursor; Item : Vec_T);
Engine/neo-core-vectors.ads:54:32     - Unknown word (Positive)     -- procedure Replace (Pos : Positive; Item : Vec_T)
Engine/neo-core-vectors.ads:55:69     - Unknown word (Positive)     -- Item : Vec_T; Count : Positive := 1);
Engine/neo-core-vectors.ads:56:69     - Unknown word (Positive)     -- Item : Vec_T; Count : Positive := 1);
Engine/neo-core-vectors.ads:57:26     - Unknown word (Before)       -- procedure Insert  (Before : Positive;   Item
Engine/neo-core-vectors.ads:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo-core-vectors.ads:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo-core-vectors.ads:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo-core-vectors.ads:65:16     - Unknown word (Length)       -- function Length
Engine/neo-core-vectors.ads:67:7      - Unknown word (This)         -- This : Unsafe.Vector;
Engine/neo-core-vectors.ads:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-core-vectors.ads:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-core-vectors.ads:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-core-vectors.ads:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo-core.ads:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-core.ads:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-core.ads:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo-core.ads:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-core.ads:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-core.ads:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-core.ads:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-core.ads:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-core.ads:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-core.ads:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-core.ads:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-core.ads:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-core.ads:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-core.ads:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-core.ads:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-core.ads:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-core.ads:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-core.ads:16:35     - Unknown word (consisting)   -- for the "Core" layer consisting of system and data format
Engine/neo-core.ads:16:4      - Unknown word (Separator)    -- -- Separator for the "Core" layer
Engine/neo-core.ads:16:72     - Unknown word (independant)  -- system and data format independant functionality
Engine/neo-core.ads:16:84     - Unknown word (functionality) -- data format independant functionality
Engine/neo-core.ads:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo-core.ads:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo-core.ads:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo-core.ads:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-core.ads:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-core.ads:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-core.ads:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo-data-audio.adb:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-data-audio.adb:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-data-audio.adb:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo-data-audio.adb:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-data-audio.adb:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-data-audio.adb:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-data-audio.adb:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-data-audio.adb:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-data-audio.adb:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-data-audio.adb:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-data-audio.adb:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-data-audio.adb:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-data-audio.adb:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-data-audio.adb:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-data-audio.adb:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-data-audio.adb:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-data-audio.adb:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-data-audio.adb:16:12     - Unknown word (texture)      -- -- Unified texture type definitions
Engine/neo-data-audio.adb:16:4      - Unknown word (Unified)      -- -- Unified texture type definitions
Engine/neo-data-audio.adb:18:14     - Unknown word (OPUS)         -- with Neo.API.OPUS; use Neo.API.OPUS;
Engine/neo-data-audio.adb:18:32     - Unknown word (OPUS)         -- API.OPUS; use Neo.API.OPUS;
Engine/neo-data-audio.adb:20:12     - Unknown word (texture)      -- -- Unified texture type definitions
Engine/neo-data-audio.adb:20:4      - Unknown word (Unified)      -- -- Unified texture type definitions
Engine/neo-data-audio.adb:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo-data-audio.adb:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo-data-audio.adb:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo-data-audio.adb:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-data-audio.adb:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-data-audio.adb:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-data-audio.adb:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo-data-audio.ads:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-data-audio.ads:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-data-audio.ads:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo-data-audio.ads:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-data-audio.ads:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-data-audio.ads:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-data-audio.ads:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-data-audio.ads:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-data-audio.ads:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-data-audio.ads:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-data-audio.ads:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-data-audio.ads:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-data-audio.ads:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-data-audio.ads:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-data-audio.ads:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-data-audio.ads:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-data-audio.ads:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-data-audio.ads:16:12     - Unknown word (texture)      -- -- Unified texture type definitions
Engine/neo-data-audio.ads:16:4      - Unknown word (Unified)      -- -- Unified texture type definitions
Engine/neo-data-audio.ads:20:6      - Unknown word (Formats)      -- -- Formats --
Engine/neo-data-audio.ads:23:15     - Unknown word (Kind)         -- type Format_Kind is (OPUS_Format); -
Engine/neo-data-audio.ads:23:24     - Unknown word (OPUS)         -- type Format_Kind is (OPUS_Format); -- http://web
Engine/neo-data-audio.ads:26:6      - Unknown word (Clip)         -- -- Clip --
Engine/neo-data-audio.ads:29:13     - Unknown word (Kind)         -- type Clip_Kind (Foreground_Clip, Background
Engine/neo-data-audio.ads:29:19     - Unknown word (Foreground)   -- type Clip_Kind (Foreground_Clip, Background_Clip
Engine/neo-data-audio.ads:29:30     - Unknown word (Clip)         -- Clip_Kind (Foreground_Clip, Background_Clip, Music
Engine/neo-data-audio.ads:29:36     - Unknown word (Background)   -- Kind (Foreground_Clip, Background_Clip, Music_Clip, Cinematic
Engine/neo-data-audio.ads:29:47     - Unknown word (Clip)         -- Foreground_Clip, Background_Clip, Music_Clip, Cinematic
Engine/neo-data-audio.ads:29:59     - Unknown word (Clip)         -- Background_Clip, Music_Clip, Cinematic_Clip, Dialog
Engine/neo-data-audio.ads:29:65     - Unknown word (Cinematic)    -- Background_Clip, Music_Clip, Cinematic_Clip, Dialog_Clip);
Engine/neo-data-audio.ads:29:8      - Unknown word (Clip)         -- type Clip_Kind (Foreground_Clip
Engine/neo-data-audio.ads:29:81     - Unknown word (Dialog)       -- Clip, Cinematic_Clip, Dialog_Clip);
Engine/neo-data-audio.ads:31:20     - Unknown word (Kind)         -- type Clip_State (Kind : Clip_Kind := Foreground
Engine/neo-data-audio.ads:31:32     - Unknown word (Kind)         -- Clip_State (Kind : Clip_Kind := Foreground_Clip;
Engine/neo-data-audio.ads:31:40     - Unknown word (Foreground)   -- Kind : Clip_Kind := Foreground_Clip; Do_Loop : Bool
Engine/neo-data-audio.ads:31:75     - Unknown word (False)        -- Clip; Do_Loop : Bool := False) is record
Engine/neo-data-audio.ads:32:29     - Unknown word (Unbound)      -- Lead_In_Sample : Str_Unbound := NULL_STR_UNBOUND
Engine/neo-data-audio.ads:32:49     - Unknown word (UNBOUND)      -- Unbound := NULL_STR_UNBOUND;
Engine/neo-data-audio.ads:32:7      - Unknown word (Lead)         -- Lead_In_Sample : Str_Unbound
Engine/neo-data-audio.ads:33:7      - Unknown word (Lead)         -- Lead_In_Volume,
Engine/neo-data-audio.ads:34:30     - Unknown word (Percent)      -- Max_Volume : Real_Percent := 100.0;
Engine/neo-data-audio.ads:35:14     - Unknown word (Shake)        -- Screen_Shake : Real_Percent :
Engine/neo-data-audio.ads:35:30     - Unknown word (Percent)      -- Screen_Shake : Real_Percent := 10.0;
Engine/neo-data-audio.ads:35:7      - Unknown word (Screen)       -- Screen_Shake : Real_Percent
Engine/neo-data-audio.ads:36:7      - Unknown word (Fade)         -- Fade_Radius_Min : Real
Engine/neo-data-audio.ads:37:7      - Unknown word (Fade)         -- Fade_Radius_Max : Real
Engine/neo-data-audio.ads:38:7      - Unknown word (Omnidirectional) -- Omnidirectional,
Engine/neo-data-audio.ads:39:10     - Unknown word (Occlusion)       -- No_Occlusion : Bool := False;
Engine/neo-data-audio.ads:39:30     - Unknown word (False)           -- Occlusion : Bool := False;
Engine/neo-data-audio.ads:42:11     - Unknown word (Center)          -- Use_Center,
Engine/neo-data-audio.ads:45:11     - Unknown word (Back)            -- Use_Back_Left,
Engine/neo-data-audio.ads:46:11     - Unknown word (Back)            -- Use_Back_Right,
Engine/neo-data-audio.ads:47:11     - Unknown word (Subwoofer)       -- Use_Subwoofer : Bool := True;
Engine/neo-data-audio.ads:47:31     - Unknown word (True)            -- Subwoofer : Bool := True;
Engine/neo-data-audio.ads:49:14     - Unknown word (False)           -- when False =>
Engine/neo-data-audio.ads:50:24     - Unknown word (Unbound)         -- Sample : Str_Unbound := NULL_STR_UNBOUND
Engine/neo-data-audio.ads:50:44     - Unknown word (UNBOUND)         -- Unbound := NULL_STR_UNBOUND;
Engine/neo-data-audio.ads:51:14     - Unknown word (True)            -- when True =>
Engine/neo-data-audio.ads:52:27     - Unknown word (Vector)          -- Samples : Vector_Str_Unbound.Unsafe.Vector
Engine/neo-data-audio.ads:52:38     - Unknown word (Unbound)         -- Samples : Vector_Str_Unbound.Unsafe.Vector;
Engine/neo-data-audio.ads:52:46     - Unknown word (Unsafe)          -- Vector_Str_Unbound.Unsafe.Vector;
Engine/neo-data-audio.ads:52:53     - Unknown word (Vector)          -- Vector_Str_Unbound.Unsafe.Vector;
Engine/neo-data-audio.ads:53:11     - Unknown word (Same)            -- Same_Twice_OK : Bool := False
Engine/neo-data-audio.ads:53:16     - Unknown word (Twice)           -- Same_Twice_OK : Bool := False;
Engine/neo-data-audio.ads:53:35     - Unknown word (False)           -- Same_Twice_OK : Bool := False; -- Must have more than
Engine/neo-data-audio.ads:53:45     - Unknown word (Must)            -- : Bool := False; -- Must have more than 2 samples
Engine/neo-data-audio.ads:53:50     - Unknown word (have)            -- Bool := False; -- Must have more than 2 samples
Engine/neo-data-audio.ads:53:55     - Unknown word (more)            -- False; -- Must have more than 2 samples to be
Engine/neo-data-audio.ads:53:60     - Unknown word (than)            -- False; -- Must have more than 2 samples to be relevant
Engine/neo-data-audio.ads:53:81     - Unknown word (relevant)        -- than 2 samples to be relevant
Engine/neo-data-audio.ads:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo-data-audio.ads:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo-data-audio.ads:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo-data-audio.ads:61:37     - Unknown word (Compressed)      -- (Path : Str) return Compressed_Image;
Engine/neo-data-audio.ads:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-data-audio.ads:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-data-audio.ads:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-data-audio.ads:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo-data-game.adb:100:3     - Unknown word (Translation) -- Translation => (Allow_Arrays
Engine/neo-data-game.adb:105:3     - Unknown word (Structure)   -- Structure_Components => (
Engine/neo-data-game.adb:108:155   - Unknown word (None)        -- others => None),
Engine/neo-data-game.adb:108:3     - Unknown word (Morph)       -- Morph => (OpenGEX
Engine/neo-data-game.adb:109:113   - Unknown word (More)        -- => Zero_Or_More,
Engine/neo-data-game.adb:109:155   - Unknown word (None)        -- others => None),
Engine/neo-data-game.adb:109:60    - Unknown word (Movement)    -- Max_One, Node_Kind | Movement_Kind
Engine/neo-data-game.adb:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-data-game.adb:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-data-game.adb:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo-data-game.adb:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-data-game.adb:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-data-game.adb:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-data-game.adb:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-data-game.adb:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-data-game.adb:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-data-game.adb:110:113   - Unknown word (More)        -- => Zero_Or_More,
Engine/neo-data-game.adb:110:155   - Unknown word (None)        -- others => None),
Engine/neo-data-game.adb:110:60    - Unknown word (Movement)    -- Max_One, Node_Kind | Movement_Kind
Engine/neo-data-game.adb:111:113   - Unknown word (More)        -- => Zero_Or_More, ObjectRef => Exactly
Engine/neo-data-game.adb:111:132   - Unknown word (Exactly)     -- Or_More, ObjectRef => Exactly_One, others => None
Engine/neo-data-game.adb:111:155   - Unknown word (None)        -- Exactly_One, others => None),
Engine/neo-data-game.adb:111:3     - Unknown word (Camera)      -- CameraNode => (OpenGEX
Engine/neo-data-game.adb:111:60    - Unknown word (Movement)    -- Max_One, Node_Kind | Movement_Kind
Engine/neo-data-game.adb:112:113   - Unknown word (More)        -- => Zero_Or_More, ObjectRef => Exactly
Engine/neo-data-game.adb:112:132   - Unknown word (Exactly)     -- Or_More, ObjectRef => Exactly_One, others => None
Engine/neo-data-game.adb:112:155   - Unknown word (None)        -- Exactly_One, others => None),
Engine/neo-data-game.adb:112:60    - Unknown word (Movement)    -- Max_One, Node_Kind | Movement_Kind
Engine/neo-data-game.adb:113:113   - Unknown word (More)        -- MorphWeight => Zero_Or_More, ObjectRef => Exactly
Engine/neo-data-game.adb:113:132   - Unknown word (Exactly)     -- Or_More, ObjectRef => Exactly_One, others => None
Engine/neo-data-game.adb:113:3     - Unknown word (Geometry)    -- GeometryNode => (OpenGEX.Name
Engine/neo-data-game.adb:113:90    - Unknown word (Morph)       -- Kind | MaterialRef | MorphWeight => Zero_Or_More
Engine/neo-data-game.adb:113:95    - Unknown word (Weight)      -- MaterialRef | MorphWeight => Zero_Or_More, ObjectRef
Engine/neo-data-game.adb:114:3     - Unknown word (Clip)        -- Clip => (OpenGEX
Engine/neo-data-game.adb:115:56    - Unknown word (Color)       -- => Max_One, Param | Color | Texture => Zero_Or
Engine/neo-data-game.adb:115:64    - Unknown word (Texture)     -- One, Param | Color | Texture => Zero_Or_More,
Engine/neo-data-game.adb:116:23    - Unknown word (Atten)       -- LightObject => (Atten => Zero_Or_More,   Param
Engine/neo-data-game.adb:116:56    - Unknown word (Color)       -- Zero_Or_More, Param | Color | Texture => Max_One
Engine/neo-data-game.adb:116:64    - Unknown word (Texture)     -- More, Param | Color | Texture => Max_One,
Engine/neo-data-game.adb:117:3     - Unknown word (Camera)      -- CameraObject => (Param
Engine/neo-data-game.adb:118:3     - Unknown word (Atten)       -- Atten => (Param
Engine/neo-data-game.adb:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-data-game.adb:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-data-game.adb:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-data-game.adb:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-data-game.adb:120:39    - Unknown word (Four)        -- => (Key   => One_To_Four,
Engine/neo-data-game.adb:121:3     - Unknown word (Track)       -- Track => (OpenGEX
Engine/neo-data-game.adb:121:51    - Unknown word (Exactly)     -- Time | Value     => Exactly_One,
Engine/neo-data-game.adb:122:3     - Unknown word (Skeleton)    -- Skeleton => (Transform
Engine/neo-data-game.adb:122:51    - Unknown word (Exactly)     -- Transform | BoneRefArray => Exactly_One,
Engine/neo-data-game.adb:123:3     - Unknown word (Skin)        -- Skin => (Transform
Engine/neo-data-game.adb:123:53    - Unknown word (Skeleton)    -- => Zero_Or_One, Skeleton | BoneCountArray | BoneIndexA
Engine/neo-data-game.adb:125:3     - Unknown word (Texture)     -- Texture => (Movement
Engine/neo-data-game.adb:126:23    - Unknown word (Track)       -- Animation => (Track => One_Or_More
Engine/neo-data-game.adb:126:3     - Unknown word (Animation)   -- Animation => (Track
Engine/neo-data-game.adb:127:3     - Unknown word (Geometry)    -- GeometryObject => (Mesh
Engine/neo-data-game.adb:128:81    - Unknown word (Skin)        -- IndexArray => Zero_Or_More, Skin => Max_One,
Engine/neo-data-game.adb:134:3     - Unknown word (Animation)   -- Animation => ((Identifier
Engine/neo-data-game.adb:134:41    - Unknown word (clip)        -- ((Identifier => S ("clip"), Kind => Unsigned
Engine/neo-data-game.adb:134:85    - Unknown word (Defaulted)   -- Unsigned_Int32_Kind, Defaulted => True,   Default
Engine/neo-data-game.adb:135:106   - Unknown word (Overrides)   -- Defaulted => False,  Overrides_From_Ref => False),
Engine/neo-data-game.adb:135:85    - Unknown word (Defaulted)   -- Float32_Kind, Defaulted => False,  Overrides
Engine/neo-data-game.adb:136:106   - Unknown word (Overrides)   -- Defaulted => False,  Overrides_From_Ref => False),
Engine/neo-data-game.adb:136:85    - Unknown word (Defaulted)   -- Float32_Kind, Defaulted => False,  Overrides
Engine/neo-data-game.adb:137:129   - Unknown word (String)      -- Default => (String_Kind, 1, (1
Engine/neo-data-game.adb:137:163   - Unknown word (distance)    -- 1, (1 => W ("distance")))),
Engine/neo-data-game.adb:137:3     - Unknown word (Atten)       -- Atten => ((Identifier
Engine/neo-data-game.adb:137:41    - Unknown word (kind)        -- ((Identifier => S ("kind"), Kind => String
Engine/neo-data-game.adb:137:64    - Unknown word (String)      -- kind"), Kind => String_Kind, Defaulted
Engine/neo-data-game.adb:137:85    - Unknown word (Defaulted)   -- String_Kind, Defaulted => True,   Default
Engine/neo-data-game.adb:138:163   - Unknown word (linear)      -- 1, (1 => W ("linear")))), others => NULL
Engine/neo-data-game.adb:138:41    - Unknown word (curve)       -- (Identifier => S ("curve"), Kind => String
Engine/neo-data-game.adb:138:85    - Unknown word (Defaulted)   -- String_Kind, Defaulted => True,   Default
Engine/neo-data-game.adb:139:3     - Unknown word (Clip)        -- Clip => ((Identifier
Engine/neo-data-game.adb:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-data-game.adb:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-data-game.adb:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-data-game.adb:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-data-game.adb:140:106   - Unknown word (Overrides)   -- Defaulted => False,  Overrides_From_Ref => False),
Engine/neo-data-game.adb:140:3     - Unknown word (Color)       -- Color => ((Identifier
Engine/neo-data-game.adb:140:41    - Unknown word (attrib)      -- ((Identifier => S ("attrib"), Kind => String
Engine/neo-data-game.adb:141:171   - Unknown word (UNBOUND)     -- , (1 => NULL_STR_32_UNBOUND))),
Engine/neo-data-game.adb:141:41    - Unknown word (applic)      -- ((Identifier => S ("applic"), Kind => String
Engine/neo-data-game.adb:142:106   - Unknown word (Overrides)   -- Defaulted => False,  Overrides_From_Ref => False),
Engine/neo-data-game.adb:143:106   - Unknown word (Overrides)   -- Defaulted => False,  Overrides_From_Ref => True),
Engine/neo-data-game.adb:143:41    - Unknown word (visible)     -- ((Identifier => S ("visible"), Kind => Bool
Engine/neo-data-game.adb:145:41    - Unknown word (motion)      -- (Identifier => S ("motion blur"), Kind => Bool
Engine/neo-data-game.adb:146:41    - Unknown word (visible)     -- ((Identifier => S ("visible"), Kind => Bool
Engine/neo-data-game.adb:148:41    - Unknown word (motion)      -- (Identifier => S ("motion blur"), Kind => Bool
Engine/neo-data-game.adb:152:41    - Unknown word (kind)        -- ((Identifier => S ("kind"), Kind => String
Engine/neo-data-game.adb:159:163   - Unknown word (triangles)   -- 1, (1 => W ("triangles")))), others => NULL
Engine/neo-data-game.adb:159:41    - Unknown word (primitive)   -- (Identifier => S ("primitive"), Kind => String
Engine/neo-data-game.adb:164:41    - Unknown word (attrib)      -- ((Identifier => S ("attrib"), Kind => String
Engine/neo-data-game.adb:165:163   - Unknown word (axis)        -- 1, (1 => W ("axis")))),
Engine/neo-data-game.adb:165:41    - Unknown word (kind)        -- ((Identifier => S ("kind"), Kind => String
Engine/neo-data-game.adb:167:41    - Unknown word (kind)        -- ((Identifier => S ("kind"), Kind => String
Engine/neo-data-game.adb:169:41    - Unknown word (attrib)      -- ((Identifier => S ("attrib"), Kind => String
Engine/neo-data-game.adb:16:12     - Unknown word (parsers)      -- -- Isolate parsers for different model
Engine/neo-data-game.adb:16:24     - Unknown word (different)    -- Isolate parsers for different model formats into separate
Engine/neo-data-game.adb:16:4      - Unknown word (Isolate)      -- -- Isolate parsers for different
Engine/neo-data-game.adb:16:40     - Unknown word (formats)      -- for different model formats into separate packages
Engine/neo-data-game.adb:16:75     - Unknown word (consolidate)  -- separate packages and consolidate them here
Engine/neo-data-game.adb:16:87     - Unknown word (them)         -- packages and consolidate them here
Engine/neo-data-game.adb:16:92     - Unknown word (here)         -- and consolidate them here
Engine/neo-data-game.adb:171:163   - Unknown word (linear)      -- 1, (1 => W ("linear")))), others => NULL
Engine/neo-data-game.adb:171:41    - Unknown word (curve)       -- ((Identifier => S ("curve"), Kind => String
Engine/neo-data-game.adb:172:3     - Unknown word (Track)       -- Track => ((Identifier
Engine/neo-data-game.adb:174:3     - Unknown word (Translation) -- Translation => ((Identifier
Engine/neo-data-game.adb:174:41    - Unknown word (kind)        -- ((Identifier => S ("kind"), Kind => String
Engine/neo-data-game.adb:176:163   - Unknown word (linear)      -- 1, (1 => W ("linear")))), others => NULL
Engine/neo-data-game.adb:176:41    - Unknown word (curve)       -- ((Identifier => S ("curve"), Kind => String
Engine/neo-data-game.adb:177:41    - Unknown word (attrib)      -- ((Identifier => S ("attrib"), Kind => String
Engine/neo-data-game.adb:178:41    - Unknown word (morph)       -- (Identifier => S ("morph"), Kind => Unsigned
Engine/neo-data-game.adb:180:30    - Unknown word (Hashed)      -- Engine_Exchange_Format.Hashed_Ptr_Structure_State
Engine/neo-data-game.adb:198:27    - Unknown word (Calendar)    -- Start : Ada.Calendar.Time := Clock;
Engine/neo-data-game.adb:198:44    - Unknown word (Clock)       -- Ada.Calendar.Time := Clock;
Engine/neo-data-game.adb:202:45    - Unknown word (ogex)        -- Format.Load (Path & ".ogex", File);
Engine/neo-data-game.adb:204:16    - Unknown word (verticies)   -- -- Count verticies and indicies
Engine/neo-data-game.adb:204:30    - Unknown word (indicies)    -- Count verticies and indicies
Engine/neo-data-game.adb:205:29    - Unknown word (Structures)  -- for Structure of File.Structures loop
Engine/neo-data-game.adb:209:72    - Unknown word (attrib)      -- Child, VertexArray, "attrib", "position", Float
Engine/neo-data-game.adb:212:71    - Unknown word (Element)     -- Index_Array.Children.Element (1).Primitive.Len;
Engine/neo-data-game.adb:212:83    - Unknown word (Primitive)   -- Children.Element (1).Primitive.Len;
Engine/neo-data-game.adb:223:15    - Unknown word (structures)  -- -- Load structures
Engine/neo-data-game.adb:224:29    - Unknown word (Structures)  -- for Structure of File.Structures loop
Engine/neo-data-game.adb:229:65    - Unknown word (Primitive)   -- ObjectRef, Ref_Kind).Primitive.Ref_Val (1));
Engine/neo-data-game.adb:232:18    - Unknown word (Verticies)   -- -- Verticies
Engine/neo-data-game.adb:234:31    - Unknown word (Vertices)    -- for I in Result.Vertices'Range loop
Engine/neo-data-game.adb:235:24    - Unknown word (Vertices)    -- Result.Vertices (I).Position := To_Point
Engine/neo-data-game.adb:235:70    - Unknown word (Primitive)   -- To_Point_3D (Current.Primitive.Float32_x3_Val, I);
Engine/neo-data-game.adb:238:31    - Unknown word (Vertices)    -- for I in Result.Vertices'Range loop
Engine/neo-data-game.adb:239:24    - Unknown word (Vertices)    -- Result.Vertices (I).Normal := To_Point
Engine/neo-data-game.adb:239:68    - Unknown word (Primitive)   -- To_Point_3D (Current.Primitive.Float32_x3_Val, I);
Engine/neo-data-game.adb:242:31    - Unknown word (Vertices)    -- for I in Result.Vertices'Range loop
Engine/neo-data-game.adb:243:45    - Unknown word (Coordinate)  -- Vertices (I).Texture_Coordinate := To_Point_2D (Current
Engine/neo-data-game.adb:247:19    - Unknown word (Grand)       -- for Grand_Child of Get (Child
Engine/neo-data-game.adb:248:28    - Unknown word (Grand)       -- Current := Grand_Child.Children.Element
Engine/neo-data-game.adb:248:49    - Unknown word (Element)     -- Grand_Child.Children.Element (1);
Engine/neo-data-game.adb:250:22    - Unknown word (Indicies)    -- Mesh_Indicies : Array_x2_Int_32_Unsigned
Engine/neo-data-game.adb:251:26    - Unknown word (Indicies)    -- for Mesh_Indicies'Address use Result.Indices
Engine/neo-data-game.adb:254:53    - Unknown word (Grand)       -- Int_32_Unsigned := Grand_Child.Properties.Element
Engine/neo-data-game.adb:254:76    - Unknown word (Element)     -- Grand_Child.Properties.Element
Engine/neo-data-game.adb:258:24    - Unknown word (Indicies)    -- Mesh_Indicies := Current.Primitive
Engine/neo-data-game.adb:25:57     - Unknown word (Positive)     -- Array_x2_Real_32; I : Positive := 1) return Transform
Engine/neo-data-game.adb:260:39    - Unknown word (something)   -- -- Get the material something
Engine/neo-data-game.adb:261:23    - Unknown word (Possible)    -- for Possible_Match of Get (Structure
Engine/neo-data-game.adb:262:24    - Unknown word (Possible)    -- if Possible_Match.Properties /=
Engine/neo-data-game.adb:262:67    - Unknown word (Possible)    -- Properties /= null and then Possible_Match.Properties.Contains
Engine/neo-data-game.adb:262:93    - Unknown word (Contains)    -- Possible_Match.Properties.Contains (U ("index"))
Engine/neo-data-game.adb:263:32    - Unknown word (Possible)    -- and then Possible_Match.Properties.Element
Engine/neo-data-game.adb:263:58    - Unknown word (Element)     -- Possible_Match.Properties.Element (U ("index")).Primitive
Engine/neo-data-game.adb:265:33    - Unknown word (Possible)    -- A := Ref (Possible_Match.Children.Element
Engine/neo-data-game.adb:265:57    - Unknown word (Element)     -- Possible_Match.Children.Element (1).Primitive.Ref_Val
Engine/neo-data-game.adb:274:86    - Unknown word (Wide)        -- & Current_Mesh'Wide_Image),
Engine/neo-data-game.adb:290:10    - Unknown word (Dump)        -- -- Dump timing
Engine/neo-data-game.adb:290:15    - Unknown word (timing)      -- -- Dump timing
Engine/neo-data-game.adb:291:14    - Unknown word (Loaded)      -- Line ("Loaded " & To_Str_16 (Base
Engine/neo-data-game.adb:291:75    - Unknown word (Duration)    -- (Path))) & " in" & Duration'Wide_Image (Clock -
Engine/neo-data-game.adb:291:84    - Unknown word (Wide)        -- & " in" & Duration'Wide_Image (Clock - Start
Engine/neo-data-game.adb:291:96    - Unknown word (Clock)       -- Duration'Wide_Image (Clock - Start) & "s");
Engine/neo-data-game.adb:299:57    - Unknown word (Hashed)      -- Str; Result : in out Hashed_Material.Unsafe.Map
Engine/neo-data-game.adb:299:73    - Unknown word (Unsafe)      -- out Hashed_Material.Unsafe.Map) is
Engine/neo-data-game.adb:305:20    - Unknown word (Calendar)    -- Start : Ada.Calendar.Time := Clock;
Engine/neo-data-game.adb:305:37    - Unknown word (Clock)       -- Ada.Calendar.Time := Clock;
Engine/neo-data-game.adb:30:15     - Unknown word (Vector)       -- function To_Vector_3D (Val : Array_x2_Real
Engine/neo-data-game.adb:30:54     - Unknown word (Positive)     -- Array_x2_Real_32; I : Positive := 1) return Vector
Engine/neo-data-game.adb:30:76     - Unknown word (Vector)       -- Positive := 1) return Vector_3D is
Engine/neo-data-game.adb:311:15    - Unknown word (structures)  -- -- Load structures
Engine/neo-data-game.adb:312:21    - Unknown word (Structures)  -- for I of File.Structures loop
Engine/neo-data-game.adb:318:49    - Unknown word (specular)    -- Texture, "attrib", "specular", String_Kind);
Engine/neo-data-game.adb:320:22    - Unknown word (Specular)    -- Material.Specular := S (To_Str_16 (Get
Engine/neo-data-game.adb:320:76    - Unknown word (specular)    -- Texture, "attrib", "specular", String_Kind).Primitive
Engine/neo-data-game.adb:322:49    - Unknown word (diffuse)     -- Texture, "attrib", "diffuse", String_Kind);
Engine/neo-data-game.adb:324:78    - Unknown word (diffuse)     -- Texture, "attrib", "diffuse", String_Kind).Primitive
Engine/neo-data-game.adb:335:25    - Unknown word (Contains)    -- if not Result.Contains (U (To_Lower (To_Str
Engine/neo-data-game.adb:335:41    - Unknown word (Lower)       -- Result.Contains (U (To_Lower (To_Str_16 (Get (I,
Engine/neo-data-game.adb:336:34    - Unknown word (Lower)       -- Result.Insert (U (To_Lower (To_Str_16 (Get (I,
Engine/neo-data-game.adb:339:24    - Unknown word (Duplicate)   -- -- Line ("Duplicate material definition
Engine/neo-data-game.adb:33:15     - Unknown word (Vector)       -- function To_Vector_2D (Val : Array_x2_Real
Engine/neo-data-game.adb:33:54     - Unknown word (Positive)     -- Array_x2_Real_32; I : Positive := 1) return Vector
Engine/neo-data-game.adb:33:76     - Unknown word (Vector)       -- Positive := 1) return Vector_2D is
Engine/neo-data-game.adb:343:14    - Unknown word (Loaded)      -- Line ("Loaded " & To_Str_16 (Base
Engine/neo-data-game.adb:343:75    - Unknown word (Duration)    -- (Path))) & " in" & Duration'Wide_Image (Clock -
Engine/neo-data-game.adb:343:84    - Unknown word (Wide)        -- & " in" & Duration'Wide_Image (Clock - Start
Engine/neo-data-game.adb:343:96    - Unknown word (Clock)       -- Duration'Wide_Image (Clock - Start) & "s");
Engine/neo-data-game.adb:353:15    - Unknown word (string)      -- -- Class {string {"light"}}
Engine/neo-data-game.adb:354:14    - Unknown word (string)      -- -- Name {string {"light_5538"}}
Engine/neo-data-game.adb:356:11    - Unknown word (Uknown)      -- -- // Uknown attribute: "noshadows
Engine/neo-data-game.adb:356:30    - Unknown word (noshadows)   -- Uknown attribute: "noshadows" "0"
Engine/neo-data-game.adb:358:13    - Unknown word (Center)      -- -- LightCenter {float[3] {{68, 78,
Engine/neo-data-game.adb:365:26    - Unknown word (string)      -- MaterialName {string {"textures_mcity_mcitya
Engine/neo-data-game.adb:365:35    - Unknown word (textures)    -- MaterialName {string {"textures_mcity_mcitya12_2_break
Engine/neo-data-game.adb:365:44    - Unknown word (mcity)       -- terialName {string {"textures_mcity_mcitya12_2_break"}}
Engine/neo-data-game.adb:365:50    - Unknown word (mcitya)      -- string {"textures_mcity_mcitya12_2_break"}}
Engine/neo-data-game.adb:365:61    - Unknown word (break)       -- textures_mcity_mcitya12_2_break"}}
Engine/neo-data-game.adb:36:56     - Unknown word (Positive)     -- Array_x2_Real_32; I, J : Positive := 1) return Point_
Engine/neo-data-game.adb:376:15    - Unknown word (unsigned)    -- -- unsigned_int32
Engine/neo-data-game.adb:389:12    - Unknown word (unsigned)    -- -- unsigned_int[3] {{4, 2, 1}}
Engine/neo-data-game.adb:39:56     - Unknown word (Positive)     -- Array_x2_Real_32; I, J : Positive := 1) return Point_
Engine/neo-data-game.adb:402:17    - Unknown word (Areas)       -- -- ChildAreas {int32[2] {{1, 677}
Engine/neo-data-game.adb:406:21    - Unknown word (prelight)    -- -- ShadowObject $_prelight_light_5520
Engine/neo-data-game.adb:409:11    - Unknown word (Caps)        -- -- NoCaps {int32 {312}}
Engine/neo-data-game.adb:410:16    - Unknown word (Caps)        -- -- NoFrontCaps {int32 {528}}
Engine/neo-data-game.adb:412:14    - Unknown word (Bits)        -- -- PlaneBits {unsigned_int32 {63
Engine/neo-data-game.adb:412:20    - Unknown word (unsigned)    -- -- PlaneBits {unsigned_int32 {63}}
Engine/neo-data-game.adb:425:12    - Unknown word (unsigned)    -- -- unsigned_int32 {
Engine/neo-data-game.adb:434:116   - Unknown word (Caps)        -- ShadowObject, VertexCount, NoCaps,
Engine/neo-data-game.adb:435:51    - Unknown word (Caps)        -- NoFrontCaps, IndexCount,  PlaneBits
Engine/neo-data-game.adb:435:78    - Unknown word (Bits)        -- IndexCount, PlaneBits, Entity,       Class
Engine/neo-data-game.adb:436:65    - Unknown word (Center)      -- Origin, LightCenter, LightRadius,  LastCamPos
Engine/neo-data-game.adb:437:65    - Unknown word (Areas)       -- Plane, ChildAreas); end; use IdMap;
Engine/neo-data-game.adb:444:13    - Unknown word (Structures)  -- Top_Level_Structures => (
Engine/neo-data-game.adb:464:8     - Unknown word (Center)     -- LightCenter => (Allow_Arrays =
Engine/neo-data-game.adb:469:8     - Unknown word (Areas)      -- ChildAreas => (Allow_Arrays
Engine/neo-data-game.adb:471:5     - Unknown word (Caps)       -- NoCaps => (Allow_Arrays
Engine/neo-data-game.adb:474:8     - Unknown word (Bits)       -- PlaneBits => (Allow_Arrays
Engine/neo-data-game.adb:47:20     - Unknown word (possible)     -- -- Enumerate all possible structures, its wrapped
Engine/neo-data-game.adb:47:29     - Unknown word (structures)   -- Enumerate all possible structures, its wrapped in its
Engine/neo-data-game.adb:47:45     - Unknown word (wrapped)      -- possible structures, its wrapped in its own package due
Engine/neo-data-game.adb:47:6      - Unknown word (Enumerate)    -- -- Enumerate all possible structures
Engine/neo-data-game.adb:47:79     - Unknown word (naming)       -- its own package due to naming conflicts with "Time
Engine/neo-data-game.adb:485:35    - Unknown word (Areas)      -- => (Plane | ChildAreas
Engine/neo-data-game.adb:488:90    - Unknown word (Bits)       -- | IndexCount | PlaneBits | VertexArray => Exactly
Engine/neo-data-game.adb:48:27     - Unknown word (Structure)    -- package OpenGEX is type Structure_Kind is (BoneNode,
Engine/neo-data-game.adb:48:37     - Unknown word (Kind)         -- OpenGEX is type Structure_Kind is (BoneNode,     CameraNode
Engine/neo-data-game.adb:48:60     - Unknown word (Camera)       -- Kind is (BoneNode,     CameraNode, GeometryNode
Engine/neo-data-game.adb:48:76     - Unknown word (Geometry)     -- CameraNode, GeometryNode, LightNode,
Engine/neo-data-game.adb:49:46     - Unknown word (Animation)    -- Animation, Transform,
Engine/neo-data-game.adb:49:76     - Unknown word (Translation)  -- Transform, Translation, Rotation,     Scale
Engine/neo-data-game.adb:508:28    - Unknown word (Calendar)   -- Start : Ada.Calendar.Time := Clock;
Engine/neo-data-game.adb:508:45    - Unknown word (Clock)      -- Ada.Calendar.Time := Clock;
Engine/neo-data-game.adb:50:46     - Unknown word (Camera)       -- CameraObject, GeometryObject
Engine/neo-data-game.adb:50:60     - Unknown word (Geometry)     -- CameraObject, GeometryObject, LightObject,
Engine/neo-data-game.adb:512:36    - Unknown word (idmap)      -- Format.Load (Path & ".idmap", File);
Engine/neo-data-game.adb:514:10    - Unknown word (Prepare)    -- -- Prepare result
Engine/neo-data-game.adb:517:15    - Unknown word (structures) -- -- Load structures
Engine/neo-data-game.adb:51:110    - Unknown word (Weight)       -- IndexArray, BoneRefArray, BoneWeightArray,
Engine/neo-data-game.adb:521:29    - Unknown word (like)       -- -- Level entities like lights and ammo boxes
Engine/neo-data-game.adb:521:34    - Unknown word (lights)     -- Level entities like lights and ammo boxes
Engine/neo-data-game.adb:521:45    - Unknown word (ammo)       -- entities like lights and ammo boxes
Engine/neo-data-game.adb:521:50    - Unknown word (boxes)      -- like lights and ammo boxes
Engine/neo-data-game.adb:524:16    - Unknown word (Attempt)    -- -- Attempt to determine the kind
Engine/neo-data-game.adb:524:27    - Unknown word (determine)  -- -- Attempt to determine the kind
Engine/neo-data-game.adb:525:21    - Unknown word (Moveable)   -- Kind := Moveable_Entity;
Engine/neo-data-game.adb:528:13    - Unknown word (Construct)  -- Construct_Entity (Entity, Kind
Engine/neo-data-game.adb:52:46     - Unknown word (Atten)        -- Atten, Clip,
Engine/neo-data-game.adb:52:60     - Unknown word (Clip)         -- Atten, Clip, Color,
Engine/neo-data-game.adb:52:76     - Unknown word (Color)        -- Clip, Color, Extension
Engine/neo-data-game.adb:530:19    - Unknown word (found)      -- -- We found the level starting position
Engine/neo-data-game.adb:530:35    - Unknown word (starting)   -- We found the level starting position
Engine/neo-data-game.adb:53:106    - Unknown word (Morph)        -- Metric, Morph,
Engine/neo-data-game.adb:541:40    - Unknown word (Unbound)    -- Entity.Name := To_Str_16_Unbound (Get (Structure, IdMap
Engine/neo-data-game.adb:544:47    - Unknown word (Unbound)    -- Mesh_Name := To_Str_16_Unbound (Get (Structure, MeshName
Engine/neo-data-game.adb:547:20    - Unknown word (Other)      -- -- -- Other location attributes
Engine/neo-data-game.adb:548:38    - Unknown word (Angle)      -- if Structure.Counts (Angle) = 1 then
Engine/neo-data-game.adb:54:106    - Unknown word (Skin)         -- Skeleton, Skin,
Engine/neo-data-game.adb:54:46     - Unknown word (Morph)        -- MorphWeight, Name,
Engine/neo-data-game.adb:54:51     - Unknown word (Weight)       -- MorphWeight, Name,           Param
Engine/neo-data-game.adb:54:92     - Unknown word (Skeleton)     -- Param, Skeleton, Skin,
Engine/neo-data-game.adb:55:106    - Unknown word (Track)        -- VertexArray, Track); end; use OpenGEX;
Engine/neo-data-game.adb:55:46     - Unknown word (Texture)      -- Texture, Time,
Engine/neo-data-game.adb:56:16     - Unknown word (Kind)         -- subtype Node_Kind is OpenGEX.Structure
Engine/neo-data-game.adb:56:36     - Unknown word (Structure)    -- Kind is OpenGEX.Structure_Kind range BoneNode
Engine/neo-data-game.adb:56:46     - Unknown word (Kind)         -- is OpenGEX.Structure_Kind range BoneNode  .. Node
Engine/neo-data-game.adb:573:36    - Unknown word (Contains)   -- not Result.Entities.Contains (Entity.Name) then
Engine/neo-data-game.adb:577:14    - Unknown word (Precomputed) -- -- Precomputed shadow volumes
Engine/neo-data-game.adb:57:11     - Unknown word (Movement)     -- subtype Movement_Kind is OpenGEX.Structure
Engine/neo-data-game.adb:57:20     - Unknown word (Kind)         -- subtype Movement_Kind is OpenGEX.Structure
Engine/neo-data-game.adb:57:36     - Unknown word (Structure)    -- Movement_Kind is OpenGEX.Structure_Kind range Animation
Engine/neo-data-game.adb:57:46     - Unknown word (Kind)         -- is OpenGEX.Structure_Kind range Animation .. Scale
Engine/neo-data-game.adb:57:57     - Unknown word (Animation)    -- Structure_Kind range Animation .. Scale;
Engine/neo-data-game.adb:581:18    - Unknown word (geometry)    -- -- Map geometry - brush, patches, areas
Engine/neo-data-game.adb:581:29    - Unknown word (brush)       -- -- Map geometry - brush, patches, areas, etc
Engine/neo-data-game.adb:581:45    - Unknown word (areas)       -- geometry - brush, patches, areas, etc.
Engine/neo-data-game.adb:585:28    - Unknown word (Indicies)    -- -- Count the Indicies and Verticies
Engine/neo-data-game.adb:585:41    - Unknown word (Verticies)   -- Count the Indicies and Verticies
Engine/neo-data-game.adb:597:70    - Unknown word (Influence)   -- Bone_Influence_Count => 0,
Engine/neo-data-game.adb:59:82     - Unknown word (Structure)    -- Struct_Types (OpenGEX.Structure_Kind, ObjectRef); use
Engine/neo-data-game.adb:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo-data-game.adb:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo-data-game.adb:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo-data-game.adb:610:129   - Unknown word (Wide)        -- all) & Current_Mesh'Wide_Image),
Engine/neo-data-game.adb:616:25    - Unknown word (indicies)    -- -- Mesh indicies
Engine/neo-data-game.adb:623:81    - Unknown word (Length)      -- Primitive.Unsigned_Int32_Val'Length / 3;
Engine/neo-data-game.adb:625:25    - Unknown word (verticies)   -- -- Mesh verticies
Engine/neo-data-game.adb:629:45    - Unknown word (Coordinate)  -- Vertices (I).Texture_Coordinate := To_Point_2D (Current
Engine/neo-data-game.adb:632:79    - Unknown word (Length)      -- Primitive.Float32_x8_Val'Length;
Engine/neo-data-game.adb:636:14    - Unknown word (Portals)     -- -- Portals between areas
Engine/neo-data-game.adb:636:22    - Unknown word (between)     -- -- Portals between areas
Engine/neo-data-game.adb:636:30    - Unknown word (areas)       -- -- Portals between areas
Engine/neo-data-game.adb:63:13     - Unknown word (Structures)   -- Top_Level_Structures => (
Engine/neo-data-game.adb:640:22    - Unknown word (areas)       -- -- Tree of areas
Engine/neo-data-game.adb:646:10    - Unknown word (Dump)        -- -- Dump timing
Engine/neo-data-game.adb:646:15    - Unknown word (timing)      -- -- Dump timing
Engine/neo-data-game.adb:647:14    - Unknown word (Loaded)      -- Line ("Loaded " & To_Str_16 (Base
Engine/neo-data-game.adb:647:75    - Unknown word (Duration)    -- (Path))) & " in" & Duration'Wide_Image (Clock -
Engine/neo-data-game.adb:647:84    - Unknown word (Wide)        -- & " in" & Duration'Wide_Image (Clock - Start
Engine/neo-data-game.adb:652:6     - Unknown word (Construct)   -- -- Construct_Entity --
Engine/neo-data-game.adb:655:13    - Unknown word (Construct)   -- procedure Construct_Entity (Item : in out
Engine/neo-data-game.adb:658:12    - Unknown word (Character)   -- when Character_Entity => Item :=
Engine/neo-data-game.adb:658:60    - Unknown word (Character)   -- = new Entity_State'(Character_Entity, others =>
Engine/neo-data-game.adb:661:12    - Unknown word (Moveable)    -- when Moveable_Entity => Item :
Engine/neo-data-game.adb:661:60    - Unknown word (Moveable)    -- = new Entity_State'(Moveable_Entity, others =
Engine/neo-data-game.adb:663:12    - Unknown word (Hurt)        -- when Hurt_Entity => Item
Engine/neo-data-game.adb:663:60    - Unknown word (Hurt)        -- = new Entity_State'(Hurt_Entity, others
Engine/neo-data-game.adb:665:12    - Unknown word (Speaker)     -- when Speaker_Entity => Item
Engine/neo-data-game.adb:665:60    - Unknown word (Speaker)     -- = new Entity_State'(Speaker_Entity, others
Engine/neo-data-game.adb:666:12    - Unknown word (Activator)   -- when Activator_Entity => Item :=
Engine/neo-data-game.adb:666:60    - Unknown word (Activator)   -- = new Entity_State'(Activator_Entity, others =>
Engine/neo-data-game.adb:667:12    - Unknown word (Animated)    -- when Animated_Entity => Item :
Engine/neo-data-game.adb:667:60    - Unknown word (Animated)    -- = new Entity_State'(Animated_Entity, others =
Engine/neo-data-game.adb:66:6      - Unknown word (Exclusivly)   -- -- Exclusivly top-level
Engine/neo-data-game.adb:670:12    - Unknown word (Clip)        -- when Clip_Model_Entity => Item
Engine/neo-data-game.adb:671:12    - Unknown word (Door)        -- when Door_Entity => Item
Engine/neo-data-game.adb:671:60    - Unknown word (Door)        -- = new Entity_State'(Door_Entity, others
Engine/neo-data-game.adb:672:12    - Unknown word (Earthquake)  -- when Earthquake_Entity => Item := new
Engine/neo-data-game.adb:672:60    - Unknown word (Earthquake)  -- = new Entity_State'(Earthquake_Entity, others =>
Engine/neo-data-game.adb:673:12    - Unknown word (Elevator)    -- when Elevator_Entity => Item :
Engine/neo-data-game.adb:673:60    - Unknown word (Elevator)    -- = new Entity_State'(Elevator_Entity, others =
Engine/neo-data-game.adb:674:12    - Unknown word (Emitter)     -- when Emitter_Entity => Item
Engine/neo-data-game.adb:674:60    - Unknown word (Emitter)     -- = new Entity_State'(Emitter_Entity, others
Engine/neo-data-game.adb:675:12    - Unknown word (Explosion)   -- when Explosion_Entity => Item :=
Engine/neo-data-game.adb:675:60    - Unknown word (Explosion)   -- = new Entity_State'(Explosion_Entity, others =>
Engine/neo-data-game.adb:676:12    - Unknown word (Forcefield)  -- when Forcefield_Entity => Item := new
Engine/neo-data-game.adb:676:60    - Unknown word (Forcefield)  -- = new Entity_State'(Forcefield_Entity, others =>
Engine/neo-data-game.adb:677:12    - Unknown word (Fracture)    -- when Fracture_Entity => Item :
Engine/neo-data-game.adb:677:60    - Unknown word (Fracture)    -- = new Entity_State'(Fracture_Entity, others =
Engine/neo-data-game.adb:678:12    - Unknown word (Effects)     -- when Effects_Entity => Item
Engine/neo-data-game.adb:678:60    - Unknown word (Effects)     -- = new Entity_State'(Effects_Entity, others
Engine/neo-data-game.adb:67:3      - Unknown word (Clip)         -- Clip |
Engine/neo-data-game.adb:68:3      - Unknown word (Geometry)     -- GeometryObject |
Engine/neo-data-game.adb:73:6      - Unknown word (Either)       -- -- Either top-level or sub-level
Engine/neo-data-game.adb:76:19     - Unknown word (True)         -- CameraObject => True, others => False),
Engine/neo-data-game.adb:76:3      - Unknown word (Camera)       -- CameraObject => True, others
Engine/neo-data-game.adb:76:35     - Unknown word (False)        -- meraObject => True, others => False),
Engine/neo-data-game.adb:79:3      - Unknown word (Primitive)    -- Primitive_Components => (
Engine/neo-data-game.adb:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-data-game.adb:82:140    - Unknown word (True)         -- => True, others => False)),
Engine/neo-data-game.adb:82:156    - Unknown word (False)        -- => True, others => False)),
Engine/neo-data-game.adb:82:23     - Unknown word (Allow)        -- BoneRefArray => (Allow_Arrays => True,  Allowed
Engine/neo-data-game.adb:82:39     - Unknown word (True)         -- => (Allow_Arrays => True, Allowed_Primitives
Engine/neo-data-game.adb:82:54     - Unknown word (Primitives)   -- Arrays => True,  Allowed_Primitives => (Ref_Kind
Engine/neo-data-game.adb:83:140    - Unknown word (True)        -- => True, others => False)),
Engine/neo-data-game.adb:83:156    - Unknown word (False)       -- => True, others => False)),
Engine/neo-data-game.adb:83:23     - Unknown word (Allow)        -- BoneCountArray => (Allow_Arrays => True,  Allowed
Engine/neo-data-game.adb:83:39     - Unknown word (True)         -- => (Allow_Arrays => True, Allowed_Primitives
Engine/neo-data-game.adb:83:54     - Unknown word (Primitives)   -- Arrays => True,  Allowed_Primitives => (Any_Unsigned_Int
Engine/neo-data-game.adb:83:73     - Unknown word (Unsigned)    -- Allowed_Primitives => (Any_Unsigned_Int_Kind
Engine/neo-data-game.adb:84:156    - Unknown word (False)       -- => True, others => False)),
Engine/neo-data-game.adb:84:23     - Unknown word (Allow)       -- BoneIndexArray => (Allow_Arrays => True,  Allowed
Engine/neo-data-game.adb:84:54     - Unknown word (Primitives)  -- Arrays => True,  Allowed_Primitives => (Any_Unsigned_Int
Engine/neo-data-game.adb:84:73     - Unknown word (Unsigned)    -- Allowed_Primitives => (Any_Unsigned_Int_Kind
Engine/neo-data-game.adb:85:156    - Unknown word (False)       -- => True, others => False)),
Engine/neo-data-game.adb:85:23     - Unknown word (Allow)       -- BoneWeightArray => (Allow_Arrays => True,  Allowed
Engine/neo-data-game.adb:85:54     - Unknown word (Primitives)  -- Arrays => True,  Allowed_Primitives => (Float32_Kind
Engine/neo-data-game.adb:85:7      - Unknown word (Weight)      -- BoneWeightArray => (Allow_Arrays
Engine/neo-data-game.adb:86:23     - Unknown word (Allow)       -- Color => (Allow_Arrays => False, Allowed
Engine/neo-data-game.adb:86:3      - Unknown word (Color)       -- Color => (Allow
Engine/neo-data-game.adb:86:54     - Unknown word (Primitives)  -- Arrays => False, Allowed_Primitives => (Float32_x3_Kind
Engine/neo-data-game.adb:87:100    - Unknown word (Unsigned)    -- Unsigned_Int_Kind | Any_Unsigned_Int_x2_Kind |
Engine/neo-data-game.adb:87:73     - Unknown word (Unsigned)    -- Allowed_Primitives => (Any_Unsigned_Int_Kind | Any_Unsigned
Engine/neo-data-game.adb:88:73     - Unknown word (Unsigned)    -- Any_Unsigned_Int_x3_Kind | Any_Unsigned
Engine/neo-data-game.adb:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-data-game.adb:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-data-game.adb:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo-data-game.adb:91:69     - Unknown word (String)      -- Allowed_Primitives => (String_Kind | Float32_Kind
Engine/neo-data-game.adb:92:3      - Unknown word (Morph)       -- MorphWeight => (Allow
Engine/neo-data-game.adb:92:8      - Unknown word (Weight)      -- MorphWeight => (Allow_Arrays
Engine/neo-data-game.adb:93:69     - Unknown word (String)      -- Allowed_Primitives => (String_Kind
Engine/neo-data-game.adb:98:3      - Unknown word (Texture)     -- Texture => (Allow_Arrays
Engine/neo-data-game.adb:98:69     - Unknown word (String)      -- Allowed_Primitives => (String_Kind
Engine/neo-data-game.ads:102:19    - Unknown word (Geometry)      -- Name : Geometry_Name_Str.T;
Engine/neo-data-game.ads:106:19    - Unknown word (Weight)        -- type Array_Bone_Weight is array
Engine/neo-data-game.ads:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-data-game.ads:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-data-game.ads:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo-data-game.ads:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-data-game.ads:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-data-game.ads:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-data-game.ads:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-data-game.ads:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-data-game.ads:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-data-game.ads:111:19    - Unknown word (Animation)     -- type Array_Bone_Animation_Times is array (Bone
Engine/neo-data-game.ads:111:29    - Unknown word (Times)         -- Array_Bone_Animation_Times is array (Bone_Index
Engine/neo-data-game.ads:111:67    - Unknown word (Positive)      -- Bone_Index range <>, Positive range <>) of Real
Engine/neo-data-game.ads:112:19    - Unknown word (Animation)     -- type Array_Bone_Animation_Values is array (Bone
Engine/neo-data-game.ads:112:67    - Unknown word (Positive)      -- Bone_Index range <>, Positive range <>) of Transform
Engine/neo-data-game.ads:113:63    - Unknown word (Animation)     -- Children : Bone_Index; Animation_Count, Animation_Frames
Engine/neo-data-game.ads:113:8     - Unknown word (Skeleton)      -- type Skeleton_State (Bone_Count, Max
Engine/neo-data-game.ads:113:80    - Unknown word (Animation)     -- Index; Animation_Count, Animation_Frames : Positive) is
Engine/neo-data-game.ads:113:90    - Unknown word (Frames)        -- Animation_Count, Animation_Frames : Positive) is record
Engine/neo-data-game.ads:113:99    - Unknown word (Positive)      -- Animation_Frames : Positive) is record
Engine/neo-data-game.ads:114:7     - Unknown word (Pose)          -- Pose : Array
Engine/neo-data-game.ads:115:7     - Unknown word (Bones)         -- Bones : Array_Bone
Engine/neo-data-game.ads:117:17    - Unknown word (Times)         -- Animation_Times : Array_Bone_Animation
Engine/neo-data-game.ads:117:47    - Unknown word (Times)         -- Array_Bone_Animation_Times (1..Bone_Count, 1.
Engine/neo-data-game.ads:117:7     - Unknown word (Animation)     -- Animation_Times : Array_Bone
Engine/neo-data-game.ads:117:83    - Unknown word (Frames)        -- Count, 1..Animation_Frames);
Engine/neo-data-game.ads:118:83    - Unknown word (Frames)        -- Count, 1..Animation_Frames);
Engine/neo-data-game.ads:119:32    - Unknown word (Positive)      -- Animations : Array_Positive (1..Animation
Engine/neo-data-game.ads:119:7     - Unknown word (Animations)    -- Animations : Array_Positive
Engine/neo-data-game.ads:119:79    - Unknown word (Must)          -- Animation_Count); -- Must be in acending order
Engine/neo-data-game.ads:119:90    - Unknown word (acending)      -- Count); -- Must be in acending order
Engine/neo-data-game.ads:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-data-game.ads:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-data-game.ads:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-data-game.ads:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-data-game.ads:120:26    - Unknown word (Geometry)      -- Animation_Names : Geometry_Name_Str.Array_T
Engine/neo-data-game.ads:122:12    - Unknown word (Skeleton)      -- type Ptr_Skeleton_State is access all
Engine/neo-data-game.ads:122:41    - Unknown word (Skeleton)      -- State is access all Skeleton_State;
Engine/neo-data-game.ads:123:11    - Unknown word (Hashed)        -- package Hashed_Skeleton is new Neo
Engine/neo-data-game.ads:132:15    - Unknown word (Coordinate)    -- Texture_Coordinate : Point_2D;
Engine/neo-data-game.ads:133:21    - Unknown word (Pack)          -- end record with Pack;
Engine/neo-data-game.ads:136:18    - Unknown word (Geometry)      -- Name : Geometry_Name_Str.T;
Engine/neo-data-game.ads:138:46    - Unknown word (Indicies)      -- Positive; -- Index into the Indicies array for each segment
Engine/neo-data-game.ads:138:65    - Unknown word (each)          -- the Indicies array for each segment
Engine/neo-data-game.ads:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-data-game.ads:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-data-game.ads:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-data-game.ads:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-data-game.ads:143:25    - Unknown word (Influence)     -- Bone_Influence_Count, Bone_Weight_Count
Engine/neo-data-game.ads:143:47    - Unknown word (Weight)        -- Influence_Count, Bone_Weight_Count : Bone_Index
Engine/neo-data-game.ads:146:7     - Unknown word (Visible)       -- Visible : Bool;
Engine/neo-data-game.ads:148:7     - Unknown word (Motion)        -- Motion_Blur : Bool;
Engine/neo-data-game.ads:149:12    - Unknown word (Influences)    -- Bone_Influences : Array_Bone_Index
Engine/neo-data-game.ads:149:59    - Unknown word (Influence)     -- Index (1..Bone_Influence_Count);
Engine/neo-data-game.ads:150:12    - Unknown word (Indicies)      -- Bone_Indicies : Array_Bone_Index
Engine/neo-data-game.ads:150:59    - Unknown word (Weight)        -- Index (1..Bone_Weight_Count);
Engine/neo-data-game.ads:151:36    - Unknown word (Weight)        -- Weights : Array_Bone_Weight (1..Bone_Weight
Engine/neo-data-game.ads:151:59    - Unknown word (Weight)        -- Weight (1..Bone_Weight_Count);
Engine/neo-data-game.ads:152:7     - Unknown word (Vertices)      -- Vertices : Array_Vertex
Engine/neo-data-game.ads:153:41    - Unknown word (Unsigned)     -- : Array_x2_Int_32_Unsigned (1..Index_Count, 1.
Engine/neo-data-game.ads:166:24    - Unknown word (Character)    -- type Entity_Kind is (Character_Entity,
Engine/neo-data-game.ads:167:24    - Unknown word (Camera)       -- Camera_Entity,
Engine/neo-data-game.ads:169:24    - Unknown word (Moveable)     -- Moveable_Entity,
Engine/neo-data-game.ads:16:22     - Unknown word (shader)       -- - Unified 3D model, shader, and surface type definitions
Engine/neo-data-game.ads:16:34     - Unknown word (surface)      -- D model, shader, and surface type definitions
Engine/neo-data-game.ads:16:4      - Unknown word (Unified)      -- -- Unified 3D model, shader, and
Engine/neo-data-game.ads:171:24    - Unknown word (Hurt)         -- Hurt_Entity,
Engine/neo-data-game.ads:173:24    - Unknown word (Speaker)      -- Speaker_Entity,
Engine/neo-data-game.ads:174:24    - Unknown word (Activator)    -- Activator_Entity,
Engine/neo-data-game.ads:175:24    - Unknown word (Animated)     -- Animated_Entity,
Engine/neo-data-game.ads:177:24    - Unknown word (Camera)       -- Camera_View_Entity,
Engine/neo-data-game.ads:178:24    - Unknown word (Clip)         -- Clip_Model_Entity,
Engine/neo-data-game.ads:179:24    - Unknown word (Door)         -- Door_Entity,
Engine/neo-data-game.ads:180:24    - Unknown word (Earthquake)   -- Earthquake_Entity,
Engine/neo-data-game.ads:181:24    - Unknown word (Elevator)     -- Elevator_Entity,
Engine/neo-data-game.ads:183:24    - Unknown word (Explosion)    -- Explosion_Entity,
Engine/neo-data-game.ads:184:24    - Unknown word (Forcefield)   -- Forcefield_Entity,
Engine/neo-data-game.ads:185:24    - Unknown word (Fracture)     -- Fracture_Entity,
Engine/neo-data-game.ads:186:24    - Unknown word (Effects)      -- Effects_Entity,
Engine/neo-data-game.ads:196:19    - Unknown word (Color)        -- Color : Color_State;
Engine/neo-data-game.ads:196:7     - Unknown word (Color)        -- Color : Color_State;
Engine/neo-data-game.ads:202:29    - Unknown word (False)        -- Visible : Bool   := False;
Engine/neo-data-game.ads:202:7     - Unknown word (Visible)      -- Visible : Bool   := False
Engine/neo-data-game.ads:206:14    - Unknown word (Moveable)     -- when Moveable_Entity | Item_Entity
Engine/neo-data-game.ads:207:11    - Unknown word (Broken)       -- Broken_Model : Str_Unbound
Engine/neo-data-game.ads:209:18    - Unknown word (Moveable)     -- when Moveable_Entity | Item_Entity
Engine/neo-data-game.ads:210:15    - Unknown word (Velocity)     -- Velocity : Vector
Engine/neo-data-game.ads:211:15    - Unknown word (Angular)      -- Angular_Velocity : Vector
Engine/neo-data-game.ads:211:23    - Unknown word (Velocity)     -- Angular_Velocity : Vector_3D;
Engine/neo-data-game.ads:212:15    - Unknown word (Density)      -- Density : Integer
Engine/neo-data-game.ads:213:15    - Unknown word (Friction)     -- Friction : Integer
Engine/neo-data-game.ads:214:15    - Unknown word (Bouncyness)   -- Bouncyness : Integer
Engine/neo-data-game.ads:215:15    - Unknown word (Mass)         -- Mass
Engine/neo-data-game.ads:216:15    - Unknown word (Velocity)     -- Velocity_Delay : Integer
Engine/neo-data-game.ads:217:15    - Unknown word (Angular)      -- Angular_Velocity_Delay : Integer
Engine/neo-data-game.ads:217:23    - Unknown word (Velocity)     -- Angular_Velocity_Delay : Integer;
Engine/neo-data-game.ads:218:21    - Unknown word (Spline)       -- Start_Spline_Time : Integer
Engine/neo-data-game.ads:219:15    - Unknown word (Collision)    -- Collision_Damage : Integer
Engine/neo-data-game.ads:219:25    - Unknown word (Damage)       -- Collision_Damage : Integer;
Engine/neo-data-game.ads:220:15    - Unknown word (Clip)         -- Clip_Shrink
Engine/neo-data-game.ads:220:20    - Unknown word (Shrink)       -- Clip_Shrink : Bool
Engine/neo-data-game.ads:220:56    - Unknown word (False)        -- : Bool        := False;
Engine/neo-data-game.ads:221:15    - Unknown word (Allow)        -- Allow_Step :
Engine/neo-data-game.ads:221:56    - Unknown word (False)        -- : Bool        := False;
Engine/neo-data-game.ads:222:19    - Unknown word (Solid)        -- Non_Solid : Bool
Engine/neo-data-game.ads:222:56    - Unknown word (False)        -- : Bool        := False;
Engine/neo-data-game.ads:223:18    - Unknown word (Drop)         -- No_Drop : Bool
Engine/neo-data-game.ads:224:32    - Unknown word (Impact)       -- No_Activation_On_Impact : Bool        := False
Engine/neo-data-game.ads:225:19    - Unknown word (Pushable)     -- Non_Pushable : Bool
Engine/neo-data-game.ads:226:15    - Unknown word (Unbind)       -- Unbind_On_Death : Bool
Engine/neo-data-game.ads:226:25    - Unknown word (Death)        -- Unbind_On_Death : Bool
Engine/neo-data-game.ads:227:15    - Unknown word (Explode)      -- Explode_On_Death : Bool
Engine/neo-data-game.ads:227:26    - Unknown word (Death)        -- Explode_On_Death : Bool
Engine/neo-data-game.ads:228:15    - Unknown word (Collision)    -- Collision_Sound : Str
Engine/neo-data-game.ads:228:25    - Unknown word (Sound)        -- Collision_Sound : Str_Unbound
Engine/neo-data-game.ads:229:15    - Unknown word (Bound)        -- Bound_Sound :
Engine/neo-data-game.ads:229:21    - Unknown word (Sound)        -- Bound_Sound : Str_Unbound
Engine/neo-data-game.ads:230:15    - Unknown word (Clip)         -- Clip_Model
Engine/neo-data-game.ads:234:19    - Unknown word (Acquire)      -- Acquire_Sound : Str_Unbound
Engine/neo-data-game.ads:234:27    - Unknown word (Sound)        -- Acquire_Sound : Str_Unbound
Engine/neo-data-game.ads:235:19    - Unknown word (Respawn)      -- Respawn_Sound : Str_Unbound
Engine/neo-data-game.ads:235:27    - Unknown word (Sound)        -- Respawn_Sound : Str_Unbound
Engine/neo-data-game.ads:237:19    - Unknown word (Icon)         -- Icon : Str
Engine/neo-data-game.ads:238:24    - Unknown word (Acquisition)  -- Show_Acquisition : Bool        :=
Engine/neo-data-game.ads:239:22    - Unknown word (Carrable)     -- Is_Carrable : Bool
Engine/neo-data-game.ads:23:105    - Unknown word (decal)        -- what a given entity, decal, or map element will
Engine/neo-data-game.ads:23:119    - Unknown word (element)      -- entity, decal, or map element will
Engine/neo-data-game.ads:23:127    - Unknown word (will)         -- decal, or map element will
Engine/neo-data-game.ads:23:21     - Unknown word (shader)       -- -- A Material or "shader" is a grouping of texture
Engine/neo-data-game.ads:23:34     - Unknown word (grouping)     -- Material or "shader" is a grouping of texture maps and
Engine/neo-data-game.ads:23:46     - Unknown word (texture)      -- shader" is a grouping of texture maps and settings that
Engine/neo-data-game.ads:23:54     - Unknown word (maps)         -- grouping of texture maps and settings that define
Engine/neo-data-game.ads:23:72     - Unknown word (that)         -- texture maps and settings that define what a given
Engine/neo-data-game.ads:23:84     - Unknown word (what)         -- settings that define what a given entity, decal
Engine/neo-data-game.ads:23:91     - Unknown word (given)        -- settings that define what a given entity, decal, or map
Engine/neo-data-game.ads:240:22    - Unknown word (Touchable)    -- Is_Touchable : Bool
Engine/neo-data-game.ads:241:19    - Unknown word (Easy)         -- Easy_Mode_Spawn : Bool
Engine/neo-data-game.ads:241:24    - Unknown word (Mode)         -- Easy_Mode_Spawn : Bool
Engine/neo-data-game.ads:241:29    - Unknown word (Spawn)        -- Easy_Mode_Spawn : Bool        :
Engine/neo-data-game.ads:242:19    - Unknown word (Medium)       -- Medium_Mode_Spawn : Bool
Engine/neo-data-game.ads:242:26    - Unknown word (Mode)         -- Medium_Mode_Spawn : Bool
Engine/neo-data-game.ads:242:31    - Unknown word (Spawn)        -- Medium_Mode_Spawn : Bool        := False
Engine/neo-data-game.ads:243:19    - Unknown word (Hard)         -- Hard_Mode_Spawn : Bool
Engine/neo-data-game.ads:243:24    - Unknown word (Mode)         -- Hard_Mode_Spawn : Bool
Engine/neo-data-game.ads:243:29    - Unknown word (Spawn)        -- Hard_Mode_Spawn : Bool        :
Engine/neo-data-game.ads:244:24    - Unknown word (Objective)    -- Show_Objective : Bool
Engine/neo-data-game.ads:247:18    - Unknown word (Broken)       -- Is_Broken : Bool
Engine/neo-data-game.ads:248:15    - Unknown word (Hide)         -- Hide_On_Break : Bool
Engine/neo-data-game.ads:248:23    - Unknown word (Break)        -- Hide_On_Break : Bool          :=
Engine/neo-data-game.ads:249:15    - Unknown word (Frustum)      -- Frustum : Frustum_State
Engine/neo-data-game.ads:249:32    - Unknown word (Frustum)      -- Frustum : Frustum_State := (others =>
Engine/neo-data-game.ads:24:11     - Unknown word (like)         -- -- look like and how it might be
Engine/neo-data-game.ads:24:27     - Unknown word (might)        -- look like and how it might be affected by light
Engine/neo-data-game.ads:24:57     - Unknown word (camera)       -- affected by light or camera position.
Engine/neo-data-game.ads:24:6      - Unknown word (look)         -- -- look like and how it might
Engine/neo-data-game.ads:250:15    - Unknown word (Glare)        -- Glare_Material : Str_Unbound
Engine/neo-data-game.ads:251:60    - Unknown word (many)         -- := 0; -- "how many times light must be
Engine/neo-data-game.ads:251:65    - Unknown word (times)        -- := 0; -- "how many times light must be triggered
Engine/neo-data-game.ads:251:77    - Unknown word (must)         -- how many times light must be triggered to toggle
Engine/neo-data-game.ads:251:98    - Unknown word (toggle)       -- must be triggered to toggle."
Engine/neo-data-game.ads:254:14    - Unknown word (Character)    -- when Character_Entity =>
Engine/neo-data-game.ads:255:18    - Unknown word (Frustum)      -- View : Frustum_State := (others =>
Engine/neo-data-game.ads:257:14    - Unknown word (Speaker)      -- when Speaker_Entity =>
Engine/neo-data-game.ads:258:11    - Unknown word (Clip)        -- Clip : Str_Unbound
Engine/neo-data-game.ads:259:14    - Unknown word (Mute)        -- Is_Mute : Bool
Engine/neo-data-game.ads:260:14    - Unknown word (Paused)      -- Is_Paused : Bool
Engine/neo-data-game.ads:261:14    - Unknown word (Playing)     -- Is_Playing : Bool
Engine/neo-data-game.ads:262:14    - Unknown word (Occluded)    -- Is_Occluded : Bool         :
Engine/neo-data-game.ads:263:15    - Unknown word (Distance)    -- Min_Distance : Real         :=
Engine/neo-data-game.ads:264:15    - Unknown word (Distance)    -- Max_Distance : Real         :=
Engine/neo-data-game.ads:265:19    - Unknown word (Wait)        -- Trigger_Wait : Duration     :=
Engine/neo-data-game.ads:265:28    - Unknown word (Duration)    -- Trigger_Wait : Duration := 0.0;
Engine/neo-data-game.ads:267:19    - Unknown word (Shake)       -- Current_Shake : Real_Percent :=
Engine/neo-data-game.ads:269:14    - Unknown word (Door)        -- when Door_Entity =>
Engine/neo-data-game.ads:26:100    - Unknown word (logic)          -- shader programs so no logic has to be contained
Engine/neo-data-game.ads:26:11     - Unknown word (implementation) -- -- This implementation of materials offloads
Engine/neo-data-game.ads:26:116    - Unknown word (contained)      -- so no logic has to be contained within
Engine/neo-data-game.ads:26:126    - Unknown word (within)         -- has to be contained within
Engine/neo-data-game.ads:26:39     - Unknown word (offloads)       -- implementation of materials offloads all of the work into
Engine/neo-data-game.ads:26:6      - Unknown word (This)         -- -- This implementation of materials
Engine/neo-data-game.ads:26:78     - Unknown word (shader)         -- the work into separate shader programs so no logic
Engine/neo-data-game.ads:26:85     - Unknown word (programs)       -- into separate shader programs so no logic has to be
Engine/neo-data-game.ads:272:11    - Unknown word (Speed)       -- Speed : Real
Engine/neo-data-game.ads:273:16    - Unknown word (Orientation) -- Move_Orientation : Quaternion_4D :=
Engine/neo-data-game.ads:273:30    - Unknown word (Quaternion)  -- Move_Orientation : Quaternion_4D := (others => <>
Engine/neo-data-game.ads:274:17    - Unknown word (Sound)       -- Close_Sound : Str_Unbound
Engine/neo-data-game.ads:278:14    - Unknown word (Hurt)        -- when Hurt_Entity =>
Engine/neo-data-game.ads:279:11    - Unknown word (Kick)        -- Kick_Direction : Vector
Engine/neo-data-game.ads:279:16    - Unknown word (Direction)   -- Kick_Direction : Vector_3D := ZERO
Engine/neo-data-game.ads:279:47    - Unknown word (VECTOR)      -- : Vector_3D := ZERO_VECTOR_3D;
Engine/neo-data-game.ads:27:10     - Unknown word (actual)         -- -- the actual material record.
Engine/neo-data-game.ads:280:11    - Unknown word (Damage)      -- Damage_To_Apply : Natural
Engine/neo-data-game.ads:283:16    - Unknown word (Offset)      -- Blob_Offset_X : Natural   :=
Engine/neo-data-game.ads:288:13    - Unknown word (Construct)   -- procedure Construct_Entity (Item : in out
Engine/neo-data-game.ads:298:7     - Unknown word (Areas)       -- Areas : Array_Mesh (1
Engine/neo-data-game.ads:300:11    - Unknown word (Safe)        -- package Safe_Map is new Safe (Ptr
Engine/neo-data-game.ads:300:27    - Unknown word (Safe)        -- package Safe_Map is new Safe (Ptr_Map_State, null
Engine/neo-data-game.ads:307:26    - Unknown word (scene)       -- Load any type of 3D scene data - animations, materials
Engine/neo-data-game.ads:307:39    - Unknown word (animations)  -- type of 3D scene data - animations, materials, you name
Engine/neo-data-game.ads:33:105    - Unknown word (footsteps)      -- game engine including footsteps and grenade and
Engine/neo-data-game.ads:33:119    - Unknown word (grenade)        -- including footsteps and grenade and
Engine/neo-data-game.ads:33:16     - Unknown word (defines)        -- -- A Surface defines how materials interact
Engine/neo-data-game.ads:33:38     - Unknown word (interact)       -- defines how materials interact with all of the other
Engine/neo-data-game.ads:33:63     - Unknown word (other)          -- interact with all of the other portions of a game engine
Engine/neo-data-game.ads:33:69     - Unknown word (portions)       -- with all of the other portions of a game engine including
Engine/neo-data-game.ads:33:8      - Unknown word (Surface)        -- -- A Surface defines how materials
Engine/neo-data-game.ads:33:95     - Unknown word (including)      -- portions of a game engine including footsteps and grenade
Engine/neo-data-game.ads:34:100    - Unknown word (addition)       -- sounds are generated. In addition, physical properties
Engine/neo-data-game.ads:34:110    - Unknown word (physical)       -- generated. In addition, physical properties
Engine/neo-data-game.ads:34:13     - Unknown word (damage)         -- -- bullet damage - what decals are applied
Engine/neo-data-game.ads:34:22     - Unknown word (what)           -- -- bullet damage - what decals are applied at
Engine/neo-data-game.ads:34:27     - Unknown word (decals)         -- bullet damage - what decals are applied at points
Engine/neo-data-game.ads:34:59     - Unknown word (impact)         -- applied at points of impact and what sounds are
Engine/neo-data-game.ads:34:6      - Unknown word (bullet)         -- -- bullet damage - what decals
Engine/neo-data-game.ads:34:70     - Unknown word (what)           -- points of impact and what sounds are generated
Engine/neo-data-game.ads:34:75     - Unknown word (sounds)         -- points of impact and what sounds are generated. In addition
Engine/neo-data-game.ads:34:86     - Unknown word (generated)      -- and what sounds are generated. In addition, physical
Engine/neo-data-game.ads:35:11     - Unknown word (friction)       -- -- like friction and sound reverb are
Engine/neo-data-game.ads:35:24     - Unknown word (sound)          -- - like friction and sound reverb are included
Engine/neo-data-game.ads:35:30     - Unknown word (reverb)         -- like friction and sound reverb are included.
Engine/neo-data-game.ads:35:41     - Unknown word (included)       -- and sound reverb are included.
Engine/neo-data-game.ads:35:6      - Unknown word (like)           -- -- like friction and sound reverb
Engine/neo-data-game.ads:37:25     - Unknown word (surface)        -- Each property of a surface can take any number
Engine/neo-data-game.ads:37:37     - Unknown word (take)           -- property of a surface can take any number of variations
Engine/neo-data-game.ads:37:56     - Unknown word (variations)     -- can take any number of variations (thus the use of a vector
Engine/neo-data-game.ads:37:6      - Unknown word (Each)           -- -- Each property of a surface
Engine/neo-data-game.ads:37:68     - Unknown word (thus)           -- number of variations (thus the use of a vector
Engine/neo-data-game.ads:37:86     - Unknown word (vector)         -- variations (thus the use of a vector instead of an array
Engine/neo-data-game.ads:37:93     - Unknown word (instead)        -- the use of a vector instead of an array).
Engine/neo-data-game.ads:40:8      - Unknown word (Surface)        -- type Surface_State is record
Engine/neo-data-game.ads:41:16     - Unknown word (Cubic)          -- Mass_Per_Cubic_Unit : Real_Percent
Engine/neo-data-game.ads:41:36     - Unknown word (Percent)        -- Cubic_Unit : Real_Percent := 0.0;
Engine/neo-data-game.ads:41:7      - Unknown word (Mass)           -- Mass_Per_Cubic_Unit : Real
Engine/neo-data-game.ads:42:36     - Unknown word (Percent)        -- Dynamic : Real_Percent := 0.0;
Engine/neo-data-game.ads:42:7      - Unknown word (Friction)       -- Friction_Dynamic : Real
Engine/neo-data-game.ads:43:36     - Unknown word (Percent)        -- Static : Real_Percent := 0.0;
Engine/neo-data-game.ads:43:7      - Unknown word (Friction)       -- Friction_Static : Real
Engine/neo-data-game.ads:44:36     - Unknown word (Percent)        -- Restitution : Real_Percent := 0.0;
Engine/neo-data-game.ads:44:7      - Unknown word (Restitution)    -- Restitution : Real_Percent
Engine/neo-data-game.ads:45:113    - Unknown word (acoustics)      -- architectural-concepts/acoustics.html
Engine/neo-data-game.ads:45:13     - Unknown word (Reduction)      -- Noise_Reduction : Real_Percent
Engine/neo-data-game.ads:45:36     - Unknown word (Percent)        -- Reduction : Real_Percent := 0.0; -- www.archtoolbox
Engine/neo-data-game.ads:45:59     - Unknown word (archtoolbox)    -- Percent := 0.0; -- www.archtoolbox.com/representation/architectu
Engine/neo-data-game.ads:45:7      - Unknown word (Noise)          -- Noise_Reduction : Real
Engine/neo-data-game.ads:45:75     - Unknown word (representation) -- www.archtoolbox.com/representation/architectural-concepts
Engine/neo-data-game.ads:45:90     - Unknown word (architectural)  -- rchtoolbox.com/representation/architectural-concepts/acoustics.html
Engine/neo-data-game.ads:46:19     - Unknown word (Emitter)        -- Physics_Hit_Emitter : Str_Unbound  :=
Engine/neo-data-game.ads:46:35     - Unknown word (Unbound)        -- Hit_Emitter : Str_Unbound := NULL_STR_UNBOUND
Engine/neo-data-game.ads:46:56     - Unknown word (UNBOUND)        -- Unbound := NULL_STR_UNBOUND;
Engine/neo-data-game.ads:47:14     - Unknown word (Hole)           -- Bullet_Hole_Emitter : Str_Unbound
Engine/neo-data-game.ads:47:19     - Unknown word (Emitter)        -- Bullet_Hole_Emitter : Str_Unbound  :=
Engine/neo-data-game.ads:47:35     - Unknown word (Unbound)        -- Hole_Emitter : Str_Unbound := NULL_STR_UNBOUND
Engine/neo-data-game.ads:47:56     - Unknown word (UNBOUND)        -- Unbound := NULL_STR_UNBOUND;
Engine/neo-data-game.ads:47:7      - Unknown word (Bullet)         -- Bullet_Hole_Emitter : Str
Engine/neo-data-game.ads:48:13     - Unknown word (Slash)          -- Knife_Slash_Emitter : Str_Unbound
Engine/neo-data-game.ads:48:19     - Unknown word (Emitter)        -- Knife_Slash_Emitter : Str_Unbound  :=
Engine/neo-data-game.ads:48:35     - Unknown word (Unbound)        -- Slash_Emitter : Str_Unbound := NULL_STR_UNBOUND
Engine/neo-data-game.ads:48:56     - Unknown word (UNBOUND)        -- Unbound := NULL_STR_UNBOUND;
Engine/neo-data-game.ads:48:7      - Unknown word (Knife)          -- Knife_Slash_Emitter : Str
Engine/neo-data-game.ads:49:18     - Unknown word (Emitter)        -- Walk_Light_Emitter : Str_Unbound  :
Engine/neo-data-game.ads:49:35     - Unknown word (Unbound)        -- Light_Emitter : Str_Unbound := NULL_STR_UNBOUND
Engine/neo-data-game.ads:49:56     - Unknown word (UNBOUND)        -- Unbound := NULL_STR_UNBOUND;
Engine/neo-data-game.ads:49:7      - Unknown word (Walk)           -- Walk_Light_Emitter : Str
Engine/neo-data-game.ads:50:17     - Unknown word (Emitter)        -- Explosion_Emitter : Str_Unbound
Engine/neo-data-game.ads:50:35     - Unknown word (Unbound)        -- Explosion_Emitter : Str_Unbound := NULL_STR_UNBOUND
Engine/neo-data-game.ads:50:56     - Unknown word (UNBOUND)        -- Unbound := NULL_STR_UNBOUND;
Engine/neo-data-game.ads:50:7      - Unknown word (Explosion)      -- Explosion_Emitter : Str_Unbound
Engine/neo-data-game.ads:51:12     - Unknown word (Hard)           -- Walk_Hard_Emitter : Str_Unbound
Engine/neo-data-game.ads:51:7      - Unknown word (Walk)           -- Walk_Hard_Emitter : Str
Engine/neo-data-game.ads:52:31     - Unknown word (Vector)         -- Explosion_Materials : Vector_Str_Unbound.Unsafe.Vector
Engine/neo-data-game.ads:52:50     - Unknown word (Unsafe)         -- Vector_Str_Unbound.Unsafe.Vector;
Engine/neo-data-game.ads:52:57     - Unknown word (Vector)         -- Vector_Str_Unbound.Unsafe.Vector;
Engine/neo-data-game.ads:52:7      - Unknown word (Explosion)      -- Explosion_Materials : Vector
Engine/neo-data-game.ads:53:14     - Unknown word (Hole)           -- Bullet_Hole_Materials : Vector_Str
Engine/neo-data-game.ads:53:31     - Unknown word (Vector)         -- Bullet_Hole_Materials : Vector_Str_Unbound.Unsafe.Vector
Engine/neo-data-game.ads:53:50     - Unknown word (Unsafe)         -- Vector_Str_Unbound.Unsafe.Vector;
Engine/neo-data-game.ads:53:57     - Unknown word (Vector)         -- Vector_Str_Unbound.Unsafe.Vector;
Engine/neo-data-game.ads:53:7      - Unknown word (Bullet)         -- Bullet_Hole_Materials : Vector
Engine/neo-data-game.ads:54:13     - Unknown word (Slash)          -- Knife_Slash_Materials : Vector_Str
Engine/neo-data-game.ads:54:31     - Unknown word (Vector)         -- Knife_Slash_Materials : Vector_Str_Unbound.Unsafe.Vector
Engine/neo-data-game.ads:54:50     - Unknown word (Unsafe)         -- Vector_Str_Unbound.Unsafe.Vector;
Engine/neo-data-game.ads:54:7      - Unknown word (Knife)          -- Knife_Slash_Materials : Vector
Engine/neo-data-game.ads:55:50     - Unknown word (Unsafe)         -- Vector_Str_Unbound.Unsafe.Vector;
Engine/neo-data-game.ads:56:12     - Unknown word (Hard)           -- Land_Hard_Materials : Vector
Engine/neo-data-game.ads:56:50     - Unknown word (Unsafe)         -- Vector_Str_Unbound.Unsafe.Vector;
Engine/neo-data-game.ads:57:7      - Unknown word (Footstep)       -- Footstep_Materials : Vector
Engine/neo-data-game.ads:57:77     - Unknown word (feet)           -- Vector; -- Scale to feet of model ???
Engine/neo-data-game.ads:59:11     - Unknown word (Hashed)         -- package Hashed_Surface is new Neo.Core
Engine/neo-data-game.ads:59:18     - Unknown word (Surface)        -- package Hashed_Surface is new Neo.Core.Hashed
Engine/neo-data-game.ads:59:42     - Unknown word (Hashed)         -- Surface is new Neo.Core.Hashed (Surface_State);
Engine/neo-data-game.ads:59:50     - Unknown word (Surface)        -- new Neo.Core.Hashed (Surface_State);
Engine/neo-data-game.ads:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo-data-game.ads:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo-data-game.ads:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo-data-game.ads:61:15     - Unknown word (Kind)           -- type Filter_Kind is (Linear_Filter,
Engine/neo-data-game.ads:61:25     - Unknown word (Linear)         -- type Filter_Kind  is (Linear_Filter, Nearest_Filter
Engine/neo-data-game.ads:61:41     - Unknown word (Nearest)        -- is (Linear_Filter,  Nearest_Filter);
Engine/neo-data-game.ads:62:14     - Unknown word (Kind)           -- type Clamp_Kind is (No_Clamp,
Engine/neo-data-game.ads:62:28     - Unknown word (Clamp)          -- Clamp_Kind is (No_Clamp, Zero_Clamp,
Engine/neo-data-game.ads:62:46     - Unknown word (Clamp)          -- No_Clamp, Zero_Clamp, Normal_Clamp,
Engine/neo-data-game.ads:62:65     - Unknown word (Clamp)          -- Zero_Clamp, Normal_Clamp, Zero_Alpha
Engine/neo-data-game.ads:62:8      - Unknown word (Clamp)          -- type Clamp_Kind is (No_Clamp
Engine/neo-data-game.ads:62:92     - Unknown word (Clamp)          -- Zero_Alpha_Clamp);
Engine/neo-data-game.ads:63:100    - Unknown word (Expand)         -- Flare_Deform, Expand_Deform, Move_Deform
Engine/neo-data-game.ads:63:15     - Unknown word (Kind)           -- type Deform_Kind is (No_Deform,
Engine/neo-data-game.ads:63:28     - Unknown word (Deform)         -- Deform_Kind is (No_Deform, Sprite_Deform
Engine/neo-data-game.ads:63:41     - Unknown word (Sprite)         -- is (No_Deform,      Sprite_Deform, Tube_Deform
Engine/neo-data-game.ads:63:48     - Unknown word (Deform)         -- Deform, Sprite_Deform, Tube_Deform,
Engine/neo-data-game.ads:63:58     - Unknown word (Tube)           -- Sprite_Deform, Tube_Deform, Flare
Engine/neo-data-game.ads:63:63     - Unknown word (Deform)         -- Sprite_Deform, Tube_Deform, Flare_Deform
Engine/neo-data-game.ads:63:8      - Unknown word (Deform)         -- type Deform_Kind is (No_Deform
Engine/neo-data-game.ads:63:81     - Unknown word (Flare)          -- Tube_Deform, Flare_Deform, Expand
Engine/neo-data-game.ads:63:87     - Unknown word (Deform)         -- Deform, Flare_Deform, Expand_Deform
Engine/neo-data-game.ads:64:41     - Unknown word (Particle)       -- Eye_Deform, Particle_Deform, Small_Particle
Engine/neo-data-game.ads:64:58     - Unknown word (Small)          -- Particle_Deform, Small_Particle_Deform, Turbulent
Engine/neo-data-game.ads:64:64     - Unknown word (Particle)       -- Particle_Deform, Small_Particle_Deform, Turbulent_Deform
Engine/neo-data-game.ads:64:81     - Unknown word (Turbulent)      -- Small_Particle_Deform, Turbulent_Deform);
Engine/neo-data-game.ads:65:100    - Unknown word (Decal)          -- Sky_Sort, Decal_Sort, Far_Sort,
Engine/neo-data-game.ads:65:13     - Unknown word (Kind)           -- type Sort_Kind is (Subview_Sort
Engine/neo-data-game.ads:65:25     - Unknown word (Subview)        -- type Sort_Kind    is (Subview_Sort, GUI_Sort,
Engine/neo-data-game.ads:65:58     - Unknown word (Opaque)         -- GUI_Sort, Opaque_Sort, Sky
Engine/neo-data-game.ads:66:25     - Unknown word (Medium)        -- Medium_Sort, Close_Sort
Engine/neo-data-game.ads:66:58     - Unknown word (Almost)        -- Close_Sort, Almost_Near_Sort, Nearest
Engine/neo-data-game.ads:66:81     - Unknown word (Nearest)       -- Almost_Near_Sort, Nearest_Sort, Post_Sort
Engine/neo-data-game.ads:68:11     - Unknown word (Texture)       -- package Texture_Name_Str is new Util
Engine/neo-data-game.ads:68:61     - Unknown word (Texture)       -- Str_Super (256); use Texture_Name_Str;
Engine/neo-data-game.ads:70:26     - Unknown word (Texture)       -- Name : Texture_Name_Str.T;
Engine/neo-data-game.ads:71:33     - Unknown word (Kind)          -- Filter : Filter_Kind := Linear_Filter;
Engine/neo-data-game.ads:71:41     - Unknown word (Linear)        -- : Filter_Kind := Linear_Filter;
Engine/neo-data-game.ads:74:7      - Unknown word (Friction)      -- Friction_Static : Real;
Engine/neo-data-game.ads:75:7      - Unknown word (Friction)      -- Friction_Dynamic : Real;
Engine/neo-data-game.ads:76:7      - Unknown word (Restitution)   -- Restitution : Real;
Engine/neo-data-game.ads:77:108    - Unknown word (convention)    -- _nx, _ny, _nz name convention
Engine/neo-data-game.ads:77:34     - Unknown word (False)         -- Cube : Bool := False; -- Cube map textures
Engine/neo-data-game.ads:77:58     - Unknown word (textures)      -- False; -- Cube map textures assume _px, _py, _pz
Engine/neo-data-game.ads:78:12     - Unknown word (Color)         -- Base_Color : Texture_Name
Engine/neo-data-game.ads:78:26     - Unknown word (Texture)       -- Base_Color : Texture_Name_Str.T; -- RGBA
Engine/neo-data-game.ads:79:26     - Unknown word (Texture)       -- Prefilter : Texture_Name_Str.T; -- Single
Engine/neo-data-game.ads:79:49     - Unknown word (Single)        -- Texture_Name_Str.T; -- Single channel
Engine/neo-data-game.ads:79:7      - Unknown word (Prefilter)     -- Prefilter : Texture_Name
Engine/neo-data-game.ads:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-data-game.ads:80:7      - Unknown word (Irradiance)    -- Irradiance : Texture_Name
Engine/neo-data-game.ads:81:7      - Unknown word (Specular)      -- Specular : Texture_Name
Engine/neo-data-game.ads:82:49     - Unknown word (Single)        -- Texture_Name_Str.T; -- Single channel
Engine/neo-data-game.ads:83:49     - Unknown word (Single)        -- Texture_Name_Str.T; -- Single channel
Engine/neo-data-game.ads:83:7      - Unknown word (Displacement)  -- Displacement : Texture_Name_Str
Engine/neo-data-game.ads:84:49     - Unknown word (Single)        -- Texture_Name_Str.T; -- Single channel
Engine/neo-data-game.ads:84:7      - Unknown word (Metallic)      -- Metallic : Texture_Name
Engine/neo-data-game.ads:85:49     - Unknown word (Single)        -- Texture_Name_Str.T; -- Single channel
Engine/neo-data-game.ads:85:7      - Unknown word (Roughness)     -- Roughness : Texture_Name
Engine/neo-data-game.ads:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-data-game.ads:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-data-game.ads:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo-data-game.ads:90:11     - Unknown word (Hashed)        -- package Hashed_Material is new Neo
Engine/neo-data-game.ads:90:43     - Unknown word (Hashed)        -- Material is new Neo.Core.Hashed (Material_State);
Engine/neo-data-game.ads:91:14     - Unknown word (Surface)       -- type Array_Surface_Materials is array
Engine/neo-data-game.ads:91:42     - Unknown word (Positive)      -- Materials is array (Positive range <>) of Material
Engine/neo-data-game.ads:94:6      - Unknown word (Skeleton)      -- -- Skeleton --
Engine/neo-data-game.ads:97:6      - Unknown word (Skeleton)      -- -- Skeleton
Engine/neo-data-game.ads:98:11     - Unknown word (Geometry)      -- package Geometry_Name_Str is new Util
Engine/neo-data-game.ads:98:66     - Unknown word (Geometry)      -- Super (64); use type Geometry_Name_Str.T;
Engine/neo-data-game.ads:99:32     - Unknown word (Unsigned)      -- Bone_Index is Int_16_Unsigned;
Engine/neo-data-texture.adb:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-data-texture.adb:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-data-texture.adb:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo-data-texture.adb:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-data-texture.adb:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-data-texture.adb:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-data-texture.adb:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-data-texture.adb:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-data-texture.adb:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-data-texture.adb:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-data-texture.adb:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-data-texture.adb:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-data-texture.adb:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-data-texture.adb:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-data-texture.adb:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-data-texture.adb:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-data-texture.adb:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-data-texture.adb:16:23     - Unknown word (Texture)      -- package body Neo.Data.Texture is
Engine/neo-data-texture.adb:27:9      - Unknown word (Kind)         -- Kind,
Engine/neo-data-texture.adb:28:9      - Unknown word (Kind)         -- Kind_Size,
Engine/neo-data-texture.adb:30:9      - Unknown word (Internal)     -- Internal_Format,
Engine/neo-data-texture.adb:32:9      - Unknown word (Width)        -- Width,
Engine/neo-data-texture.adb:33:9      - Unknown word (Height)       -- Height,
Engine/neo-data-texture.adb:34:9      - Unknown word (Depth)        -- Depth,
Engine/neo-data-texture.adb:35:15     - Unknown word (Length)       -- Array_Length,
Engine/neo-data-texture.adb:38:19     - Unknown word (Bytes)        -- Key_Value_Bytes : Int_Unsigned_C :=
Engine/neo-data-texture.adb:38:31     - Unknown word (Unsigned)     -- Key_Value_Bytes : Int_Unsigned_C := 0;
Engine/neo-data-texture.adb:39:23     - Unknown word (Pack)         -- end record with Pack;
Engine/neo-data-texture.adb:41:23     - Unknown word (Unsigned)     -- Data_Size : Int_Unsigned_C;
Engine/neo-data-texture.adb:52:32     - Unknown word (according)    -- Fixup mipmap values - according to the spec zero mipmaps
Engine/neo-data-texture.adb:52:49     - Unknown word (spec)         -- values - according to the spec zero mipmaps also happens
Engine/neo-data-texture.adb:52:67     - Unknown word (also)         -- the spec zero mipmaps also happens to mean one
Engine/neo-data-texture.adb:52:72     - Unknown word (happens)      -- spec zero mipmaps also happens to mean one mipmap
Engine/neo-data-texture.adb:52:83     - Unknown word (mean)         -- mipmaps also happens to mean one mipmap
Engine/neo-data-texture.adb:55:10     - Unknown word (Inspect)      -- -- Inspect the header for �KTX
Engine/neo-data-texture.adb:55:50     - Unknown word (sure)         -- for �KTX 11� to make sure we are working with
Engine/neo-data-texture.adb:56:23     - Unknown word (Char)         -- if Header.Id /= Char_8'Val (16#AB#) & "KTX
Engine/neo-data-texture.adb:56:56     - Unknown word (Char)         -- 6#AB#) & "KTX 11" & Char_8'Val (16#BB#) & EOL
Engine/neo-data-texture.adb:57:15     - Unknown word (Unsupported)  -- raise Unsupported_Version;
Engine/neo-data-texture.adb:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo-data-texture.adb:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo-data-texture.adb:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo-data-texture.adb:60:20     - Unknown word (orientation)  -- -- Check the orientation
Engine/neo-data-texture.adb:62:52     - Unknown word (Bytes)        -- Int (Header.Key_Value_Bytes)) := (others => NULL
Engine/neo-data-texture.adb:62:79     - Unknown word (CHAR)         -- := (others => NULL_CHAR_8);
Engine/neo-data-texture.adb:65:61     - Unknown word (Unsupported)  -- R=i") = 0 then raise Unsupported_Orientation; end if
Engine/neo-data-texture.adb:65:73     - Unknown word (Orientation)  -- then raise Unsupported_Orientation; end if;
Engine/neo-data-texture.adb:69:11     - Unknown word (Unsigned)     -- Int_Unsigned_C'Read (Data_Stream
Engine/neo-data-texture.adb:71:103    - Unknown word (Otherwise)    -- assume GL_RGBA8UI. Otherwise, map it from OpenGL
Engine/neo-data-texture.adb:71:40     - Unknown word (incorrectly)  -- PVRTexToolCLI sets the format incorrectly to 0 for uncompressed
Engine/neo-data-texture.adb:71:74     - Unknown word (layouts)      -- to 0 for uncompressed layouts - assume GL_RGBA8UI
Engine/neo-data-texture.adb:72:14     - Unknown word (Internal)     -- Header.Internal_Format := (if Header
Engine/neo-data-texture.adb:72:44     - Unknown word (Internal)     -- Format := (if Header.Internal_Format = 0 then VK_FORMAT
Engine/neo-data-texture.adb:72:88     - Unknown word (UNORM)        -- then VK_FORMAT_R8G8B8A8_UNORM
Engine/neo-data-texture.adb:73:89     - Unknown word (Internal)     -- To_VkFormat (Header.Internal_Format));
Engine/neo-data-texture.adb:74:17     - Unknown word (Internal)     -- if Header.Internal_Format = VK_FORMAT_UNDEFINED
Engine/neo-data-texture.adb:74:45     - Unknown word (UNDEFINED)    -- Internal_Format = VK_FORMAT_UNDEFINED then raise Unsupported
Engine/neo-data-texture.adb:74:66     - Unknown word (Unsupported)  -- UNDEFINED then raise Unsupported_Compression_Format;
Engine/neo-data-texture.adb:74:78     - Unknown word (Compression)  -- then raise Unsupported_Compression_Format; end if;
Engine/neo-data-texture.adb:76:10     - Unknown word (Grab)         -- -- Grab the image in a single
Engine/neo-data-texture.adb:76:30     - Unknown word (single)       -- Grab the image in a single go - no reason for special
Engine/neo-data-texture.adb:76:56     - Unknown word (special)      -- single go - no reason for special loops...
Engine/neo-data-texture.adb:76:64     - Unknown word (loops)        -- no reason for special loops...
Engine/neo-data-texture.adb:77:101    - Unknown word (Height)       -- Header.Width, Header.Height, Header.Internal_Format
Engine/neo-data-texture.adb:77:87     - Unknown word (Width)        -- Header.Faces, Header.Width, Header.Height, Header
Engine/neo-data-texture.adb:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-data-texture.adb:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-data-texture.adb:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-data-texture.adb:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo-data-texture.ads:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-data-texture.ads:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-data-texture.ads:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo-data-texture.ads:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-data-texture.ads:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-data-texture.ads:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-data-texture.ads:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-data-texture.ads:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-data-texture.ads:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-data-texture.ads:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-data-texture.ads:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-data-texture.ads:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-data-texture.ads:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-data-texture.ads:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-data-texture.ads:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-data-texture.ads:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-data-texture.ads:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-data-texture.ads:18:12     - Unknown word (texture)      -- -- Unified texture type definition
Engine/neo-data-texture.ads:18:4      - Unknown word (Unified)      -- -- Unified texture type definition
Engine/neo-data-texture.ads:19:18     - Unknown word (Texture)      -- package Neo.Data.Texture is
Engine/neo-data-texture.ads:21:3      - Unknown word (Unsupported)  -- Unsupported_Version,
Engine/neo-data-texture.ads:22:15     - Unknown word (Orientation)  -- Unsupported_Orientation,
Engine/neo-data-texture.ads:22:3      - Unknown word (Unsupported)  -- Unsupported_Orientation,
Engine/neo-data-texture.ads:23:15     - Unknown word (Compression)  -- Unsupported_Compression_Format : Exception;
Engine/neo-data-texture.ads:23:3      - Unknown word (Unsupported)  -- Unsupported_Compression_Format
Engine/neo-data-texture.ads:26:11     - Unknown word (Exporting)    -- -- KTX1 Exporting instructions
Engine/neo-data-texture.ads:26:21     - Unknown word (instructions) -- -- KTX1 Exporting instructions
Engine/neo-data-texture.ads:28:22     - Unknown word (textures)     -- -- We only support textures through KTX1 (preferribly
Engine/neo-data-texture.ads:28:31     - Unknown word (through)      -- only support textures through KTX1 (preferribly generated
Engine/neo-data-texture.ads:28:45     - Unknown word (preferribly)  -- textures through KTX1 (preferribly generated through PVRTexTool
Engine/neo-data-texture.ads:28:57     - Unknown word (generated)    -- through KTX1 (preferribly generated through PVRTexTool)
Engine/neo-data-texture.ads:28:67     - Unknown word (through)      -- preferribly generated through PVRTexTool)
Engine/neo-data-texture.ads:29:102    - Unknown word (Orienation)   -- have the correct KTXOrienation of "S=r,T=u,R=i"
Engine/neo-data-texture.ads:29:17     - Unknown word (using)        -- -- NOTE: When using PVRTexTool the texture
Engine/neo-data-texture.ads:29:38     - Unknown word (texture)      -- using PVRTexTool the texture needs to be horizontally
Engine/neo-data-texture.ads:29:46     - Unknown word (needs)        -- PVRTexTool the texture needs to be horizontally flipped
Engine/neo-data-texture.ads:29:58     - Unknown word (horizontally) -- texture needs to be horizontally flipped to have the
Engine/neo-data-texture.ads:29:71     - Unknown word (flipped)      -- needs to be horizontally flipped to have the correct
Engine/neo-data-texture.ads:29:82     - Unknown word (have)         -- horizontally flipped to have the correct KTXOrienation
Engine/neo-data-texture.ads:29:91     - Unknown word (correct)      -- flipped to have the correct KTXOrienation of "S
Engine/neo-data-texture.ads:33:18     - Unknown word (textures)     -- -- To generate textures from images with PVRTexToolCL
Engine/neo-data-texture.ads:33:66     - Unknown word (following)    -- PVRTexToolCLI use the following command:
Engine/neo-data-texture.ads:35:59     - Unknown word (flip)         -- tga" -o "./out.ktx" -flip y -f <FORMAT>
Engine/neo-data-texture.ads:37:6      - Unknown word (Where)        -- -- Where <FORMAT> can be:
Engine/neo-data-texture.ads:42:22     - Unknown word (PVRTC)        -- -- PVRTC1_4_RGB, PVRTC1_2_RGB, PVRTC1_2,
Engine/neo-data-texture.ads:42:36     - Unknown word (PVRTC)        -- _RGB, PVRTC1_2_RGB, PVRTC1_2, PVRTC1_4,   PVRTC
Engine/neo-data-texture.ads:42:48     - Unknown word (PVRTC)        -- _2_RGB, PVRTC1_2,   PVRTC1_4, PVRTC2_2,   PVRTC
Engine/neo-data-texture.ads:42:60     - Unknown word (PVRTC)        -- PVRTC1_2, PVRTC1_4,   PVRTC2_2, PVRTC2_4,
Engine/neo-data-texture.ads:42:8      - Unknown word (PVRTC)        -- -- PVRTC1_4_RGB, PVRTC1_2_RGB
Engine/neo-data-texture.ads:43:22     - Unknown word (ASTC)         -- -- ASTC_4x4,     ASTC_5x4, ASTC_5x5,
Engine/neo-data-texture.ads:43:36     - Unknown word (ASTC)         -- , ASTC_5x4,     ASTC_5x5, ASTC_6x5,   ASTC
Engine/neo-data-texture.ads:43:48     - Unknown word (ASTC)         -- x4, ASTC_5x5,   ASTC_6x5, ASTC_6x6,   ASTC
Engine/neo-data-texture.ads:43:60     - Unknown word (ASTC)         -- ASTC_5x5, ASTC_6x5,   ASTC_6x6, ASTC_8x5,   ASTC
Engine/neo-data-texture.ads:43:8      - Unknown word (ASTC)         -- -- ASTC_4x4, ASTC_5x4,
Engine/neo-data-texture.ads:55:7      - Unknown word (Height)       -- Height,
Engine/neo-data-texture.ads:56:7      - Unknown word (Width)        -- Width,
Engine/neo-data-texture.ads:57:20     - Unknown word (Unsigned)     -- Format : Int_Unsigned_C;
Engine/neo-data-texture.ads:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo-data-texture.ads:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo-data-texture.ads:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo-data-texture.ads:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-data-texture.ads:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-data-texture.ads:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-data-texture.ads:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo-data.adb:1000:23   - Unknown word (Dimensional)  -- if Is_Dimensional_Primitive (Primitive
Engine/neo-data.adb:1019:25   - Unknown word (structure)    -- -- Create the structure node
Engine/neo-data.adb:1022:14   - Unknown word (Optional)     -- -- Optional name
Engine/neo-data.adb:1030:18   - Unknown word (primitive)    -- -- Non-primitive type
Engine/neo-data.adb:1033:16   - Unknown word (Setup)        -- -- Setup the local map and link
Engine/neo-data.adb:1036:44   - Unknown word (Scope)        -- Local_Name_In_Global_Scope with Structure.Name
Engine/neo-data.adb:1052:108  - Unknown word (Unsafe)       -- Ptr_Structure_State.Unsafe.Map; end if;
Engine/neo-data.adb:1052:81   - Unknown word (Hashed)       -- Structure.Properties := new Hashed_Ptr_Structure_State
Engine/neo-data.adb:1063:22   - Unknown word (Grab)         -- -- Grab the property value according
Engine/neo-data.adb:1063:46   - Unknown word (according)    -- Grab the property value according to the rule-set determining
Engine/neo-data.adb:1063:72   - Unknown word (determining)  -- according to the rule-set determining its type via linear
Engine/neo-data.adb:1063:97   - Unknown word (linear)       -- determining its type via linear search
Engine/neo-data.adb:1073:6    - Unknown word (Found)        -- goto Found_Property;
Engine/neo-data.adb:1076:25   - Unknown word (Undefined)    -- raise Undefined_Property with To_Str
Engine/neo-data.adb:1077:3    - Unknown word (Found)        -- <<Found_Property>>
Engine/neo-data.adb:1087:20   - Unknown word (defaulted)    -- -- Add defaulted properties
Engine/neo-data.adb:1090:42   - Unknown word (Defaulted)    -- then Struct_Property.Defaulted
Engine/neo-data.adb:1092:61   - Unknown word (Contains)     -- Structure.Properties.Contains (To_Str_Unbound (Struct
Engine/neo-data.adb:1094:108  - Unknown word (Unsafe)       -- Ptr_Structure_State.Unsafe.Map; end if;
Engine/neo-data.adb:1094:81   - Unknown word (Hashed)       -- Structure.Properties := new Hashed_Ptr_Structure_State
Engine/neo-data.adb:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-data.adb:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-data.adb:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo-data.adb:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-data.adb:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-data.adb:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-data.adb:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-data.adb:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-data.adb:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-data.adb:1115:57   - Unknown word (Mismatch)     -- raise Component_Mismatch with Struct_Kind'Image
Engine/neo-data.adb:1115:93   - Unknown word (must)         -- Struct_Kind'Image & " must have 0 or 1 " & I'Image
Engine/neo-data.adb:1115:98   - Unknown word (have)         -- Kind'Image & " must have 0 or 1 " & I'Image;
Engine/neo-data.adb:1118:57   - Unknown word (Mismatch)     -- raise Component_Mismatch with Struct_Kind'Image
Engine/neo-data.adb:1118:93   - Unknown word (must)         -- Struct_Kind'Image & " must have 0 to 2 " & I'Image
Engine/neo-data.adb:1118:98   - Unknown word (have)         -- Kind'Image & " must have 0 to 2 " & I'Image;
Engine/neo-data.adb:111:17    - Unknown word (Positive)     -- Current : Positive := 1;
Engine/neo-data.adb:1121:57   - Unknown word (Mismatch)     -- raise Component_Mismatch with Struct_Kind'Image
Engine/neo-data.adb:1121:93   - Unknown word (must)         -- Struct_Kind'Image & " must have 0 to 3 " & I'Image
Engine/neo-data.adb:1121:98   - Unknown word (have)         -- Kind'Image & " must have 0 to 3 " & I'Image;
Engine/neo-data.adb:1123:30   - Unknown word (Four)         -- when Zero_To_Four => if Structure.Counts
Engine/neo-data.adb:1124:57   - Unknown word (Mismatch)     -- raise Component_Mismatch with Struct_Kind'Image
Engine/neo-data.adb:1124:93   - Unknown word (must)         -- Struct_Kind'Image & " must have 0 to 4 " & I'Image
Engine/neo-data.adb:1126:22   - Unknown word (Exactly)      -- when Exactly_One => if Structure
Engine/neo-data.adb:1127:103  - Unknown word (exactly)      -- Image & " must have exactly one " & I'Image;
Engine/neo-data.adb:1127:57   - Unknown word (Mismatch)     -- raise Component_Mismatch with Struct_Kind'Image
Engine/neo-data.adb:1127:93   - Unknown word (must)         -- Struct_Kind'Image & " must have exactly one "
Engine/neo-data.adb:1135:29   - Unknown word (Four)         -- when One_To_Four => if Structure.Counts
Engine/neo-data.adb:1138:29   - Unknown word (More)         -- when One_Or_More => if Structure.Counts
Engine/neo-data.adb:1139:106  - Unknown word (least)        -- Image & " must have at least one " & I'Image;
Engine/neo-data.adb:1144:22   - Unknown word (None)         -- when None => if Structure
Engine/neo-data.adb:1150:20   - Unknown word (primitive)    -- -- Parse primitive type
Engine/neo-data.adb:1153:31   - Unknown word (structures)   -- -- Only top-level structures get their own local
Engine/neo-data.adb:1153:46   - Unknown word (their)        -- level structures get their own local maps, otherwise
Engine/neo-data.adb:1153:62   - Unknown word (maps)         -- get their own local maps, otherwise link the
Engine/neo-data.adb:1153:68   - Unknown word (otherwise)    -- their own local maps, otherwise link the parent
Engine/neo-data.adb:1162:64   - Unknown word (Primitives)   -- Parent.Class).Allowed_Primitives (Primitive) then
Engine/neo-data.adb:1163:25   - Unknown word (Hierarchy)    -- raise Bad_Hierarchy with Primitive'Image
Engine/neo-data.adb:1163:60   - Unknown word (cannot)       -- Primitive'Image & " cannot be a component of a
Engine/neo-data.adb:1166:54   - Unknown word (length)       -- is allowed to have a length more than one
Engine/neo-data.adb:1166:61   - Unknown word (more)         -- allowed to have a length more than one
Engine/neo-data.adb:1166:66   - Unknown word (than)         -- to have a length more than one
Engine/neo-data.adb:1167:56   - Unknown word (Allow)        -- Components (Parent.Class).Allow_Arrays and Len > 1 then
Engine/neo-data.adb:1168:21   - Unknown word (Unexpected)   -- raise Unexpected_Primitive_Array with
Engine/neo-data.adb:1168:73   - Unknown word (cannot)       -- Primitive'Image & " cannot be an array component
Engine/neo-data.adb:1171:60   - Unknown word (threshold)    -- if we are over our threshold we deploy all the CPUs
Engine/neo-data.adb:1171:96   - Unknown word (speed)        -- deploy all the CPUs to speed things up
Engine/neo-data.adb:1174:30   - Unknown word (THRESHOLD)    -- if Len < WORKERS_THRESHOLD then
Engine/neo-data.adb:1175:76   - Unknown word (threaded)     -- Structure.Len); -- Single threaded parsing
Engine/neo-data.adb:1175:85   - Unknown word (parsing)      -- -- Single threaded parsing
Engine/neo-data.adb:1178:18   - Unknown word (Divide)       -- -- Divide up the work and send
Engine/neo-data.adb:1178:46   - Unknown word (them)         -- up the work and send them on their way
Engine/neo-data.adb:1178:54   - Unknown word (their)        -- work and send them on their way
Engine/neo-data.adb:1181:20   - Unknown word (AMOUNT)       -- WORK_AMOUNT : constant Positive
Engine/neo-data.adb:1181:64   - Unknown word (Length)       -- Positive := Len / Workers'Length;
Engine/neo-data.adb:1186:30   - Unknown word (multi)        -- -- Parse multi-dimensinal
Engine/neo-data.adb:1186:36   - Unknown word (dimensinal)   -- -- Parse multi-dimensinal
Engine/neo-data.adb:1187:27   - Unknown word (Dimensional)  -- if Is_Dimensional_Primitive (Structure
Engine/neo-data.adb:1189:26   - Unknown word (Jump)         -- -- Jump over the curlies
Engine/neo-data.adb:1189:40   - Unknown word (curlies)      -- -- Jump over the curlies
Engine/neo-data.adb:1190:40   - Unknown word (AMOUNT)       -- for J in 1..WORK_AMOUNT loop
Engine/neo-data.adb:1195:34   - Unknown word (comma)       -- -- Now the comma
Engine/neo-data.adb:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-data.adb:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-data.adb:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-data.adb:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-data.adb:1200:30   - Unknown word (single)      -- -- Parse single-dimensional
Engine/neo-data.adb:1200:37   - Unknown word (dimensional) -- -- Parse single-dimensional
Engine/neo-data.adb:1203:26   - Unknown word (Jump)        -- -- Jump over the commas
Engine/neo-data.adb:1203:40   - Unknown word (commas)      -- -- Jump over the commas
Engine/neo-data.adb:1204:40   - Unknown word (AMOUNT)      -- for J in 1..WORK_AMOUNT loop
Engine/neo-data.adb:1212:22   - Unknown word (Dispatch)    -- -- Dispatch the work load
Engine/neo-data.adb:1213:66   - Unknown word (AMOUNT)      -- Index => (I - 1) * WORK_AMOUNT + 1,
Engine/neo-data.adb:1214:56   - Unknown word (AMOUNT)      -- Work_Amount => WORK_AMOUNT,
Engine/neo-data.adb:1221:50   - Unknown word (indicated)   -- global top-level list as indicated by the null parent
Engine/neo-data.adb:1224:23   - Unknown word (loaded)      -- -- Verify loaded structure is not allowed
Engine/neo-data.adb:1224:30   - Unknown word (structure)   -- -- Verify loaded structure is not allowed to be
Engine/neo-data.adb:1225:61   - Unknown word (Structures)  -- Kind or not Top_Level_Structures (Struct_Kind) then
Engine/neo-data.adb:1226:21   - Unknown word (Disallowed)  -- raise Disallowed_Structure_At_Top_Level
Engine/neo-data.adb:1229:30   - Unknown word (signifies)   -- -- An identifier signifies
Engine/neo-data.adb:1230:18   - Unknown word (Structures)  -- File.Structures.Append (Structure);
Engine/neo-data.adb:1232:74   - Unknown word (Scope)       -- Local_Name_In_Global_Scope; end if;
Engine/neo-data.adb:1234:26   - Unknown word (Structures)  -- File.Named_Structures.Insert (To_Str_Unbound
Engine/neo-data.adb:1237:23   - Unknown word (substructure) -- -- Add to a substructure
Engine/neo-data.adb:1240:16   - Unknown word (Unnamed)      -- -- Unnamed structures get added
Engine/neo-data.adb:1240:24   - Unknown word (structures)   -- -- Unnamed structures get added to the children
Engine/neo-data.adb:1240:39   - Unknown word (added)        -- Unnamed structures get added to the children of the
Engine/neo-data.adb:1242:94   - Unknown word (Unsafe)       -- Ptr_Structure_State.Unsafe.Vector; end if;
Engine/neo-data.adb:1245:22   - Unknown word (structures)   -- -- Named structures get added to the parent
Engine/neo-data.adb:1245:37   - Unknown word (added)        -- Named structures get added to the parent's "Local
Engine/neo-data.adb:1247:81   - Unknown word (Hashed)       -- Named_Children := new Hashed_Ptr_Structure_State
Engine/neo-data.adb:1250:18   - Unknown word (Also)         -- -- Also register it in the global
Engine/neo-data.adb:1255:33   - Unknown word (brace)        -- Skip over the last brace
Engine/neo-data.adb:1263:10   - Unknown word (Locals)       -- -- Locals for property reconciliation
Engine/neo-data.adb:1263:30   - Unknown word (reconciliation) -- Locals for property reconciliation
Engine/neo-data.adb:1264:40   - Unknown word (Sibling)        -- Property, New_Property, Sibling_Parent : Ptr_Structure
Engine/neo-data.adb:1278:27   - Unknown word (Safe)           -- Skip_Whitespace_Safe (Text_Index);
Engine/neo-data.adb:1286:14   - Unknown word (Find)           -- -- Find the first element in
Engine/neo-data.adb:1286:29   - Unknown word (element)        -- -- Find the first element in the reference chain
Engine/neo-data.adb:1286:54   - Unknown word (chain)          -- element in the reference chain - its easy if its global
Engine/neo-data.adb:1286:66   - Unknown word (easy)           -- reference chain - its easy if its global
Engine/neo-data.adb:1287:116  - Unknown word (Element)        -- Element (Reference.Names.Element (1)));
Engine/neo-data.adb:1287:24   - Unknown word (Starts)         -- if Reference.Starts_With_Global then Reference
Engine/neo-data.adb:1287:91   - Unknown word (Element)        -- To_Ptr (File.Globals.Element (Reference.Names.Element
Engine/neo-data.adb:1289:46   - Unknown word (mean)           -- local" reference the mean of which is vague in
Engine/neo-data.adb:1289:54   - Unknown word (which)          -- reference the mean of which is vague in the docs
Engine/neo-data.adb:1289:63   - Unknown word (vague)          -- the mean of which is vague in the docs and it could
Engine/neo-data.adb:1289:76   - Unknown word (docs)           -- which is vague in the docs and it could come from
Engine/neo-data.adb:1289:88   - Unknown word (could)          -- vague in the docs and it could come from any parent
Engine/neo-data.adb:1289:94   - Unknown word (come)           -- the docs and it could come from any parent
Engine/neo-data.adb:1291:13   - Unknown word (Sibling)        -- Sibling_Parent := Reference
Engine/neo-data.adb:1294:18   - Unknown word (Either)         -- -- Either we've reached the top
Engine/neo-data.adb:1294:31   - Unknown word (reached)        -- -- Either we've reached the top without a hit
Engine/neo-data.adb:1294:71   - Unknown word (keep)           -- without a hit or we can keep going
Engine/neo-data.adb:1294:76   - Unknown word (going)          -- a hit or we can keep going
Engine/neo-data.adb:1295:18   - Unknown word (Sibling)        -- if Sibling_Parent = null then raise
Engine/neo-data.adb:1296:15   - Unknown word (Sibling)        -- Sibling_Parent := Sibling_Parent
Engine/neo-data.adb:1296:33   - Unknown word (Sibling)        -- Sibling_Parent := Sibling_Parent.Parent;
Engine/neo-data.adb:1298:18   - Unknown word (This)           -- -- This is the reference we
Engine/neo-data.adb:1298:47   - Unknown word (looking)        -- the reference we are looking for
Engine/neo-data.adb:1300:56   - Unknown word (Contains)       -- Parent.Named_Children.Contains (Reference.Names.Element
Engine/neo-data.adb:1300:82   - Unknown word (Element)        -- Contains (Reference.Names.Element (1))
Engine/neo-data.adb:1302:77   - Unknown word (Element)        -- Parent.Named_Children.Element (Reference.Names.Element
Engine/neo-data.adb:1308:26   - Unknown word (chain)          -- -- Go down the chain
Engine/neo-data.adb:1315:46   - Unknown word (structure)      -- an override reference structure and add property overrides
Engine/neo-data.adb:1315:73   - Unknown word (overrides)      -- structure and add property overrides
Engine/neo-data.adb:1318:19   - Unknown word (through)        -- -- Go through the structure type's
Engine/neo-data.adb:1321:21   - Unknown word (found)          -- -- We found an override-from-reference
Engine/neo-data.adb:1321:71   - Unknown word (referenced)     -- reference property and the referenced object has it!
Engine/neo-data.adb:1323:39   - Unknown word (Defaulted)      -- and then not Property.Defaulted
Engine/neo-data.adb:1324:35   - Unknown word (Overrides)      -- and then Property.Overrides_From_Ref
Engine/neo-data.adb:1325:85   - Unknown word (Contains)       -- Val (1)).Properties.Contains (To_Str_Unbound (Property
Engine/neo-data.adb:1330:20   - Unknown word (This)           -- -- This override property needs
Engine/neo-data.adb:1330:43   - Unknown word (needs)          -- This override property needs to exist so create the
Engine/neo-data.adb:1330:52   - Unknown word (exist)          -- override property needs to exist so create the property
Engine/neo-data.adb:1330:91   - Unknown word (doesn't)        -- the property map if it doesn't exist
Engine/neo-data.adb:1330:99   - Unknown word (exist)          -- property map if it doesn't exist
Engine/neo-data.adb:1332:71   - Unknown word (Hashed)         -- Parent.Properties := new Hashed_Ptr_Structure_State
Engine/neo-data.adb:1335:26   - Unknown word (overrode)       -- -- If we overrode it already we are fine
Engine/neo-data.adb:1335:38   - Unknown word (already)        -- - If we overrode it already we are fine, if not
Engine/neo-data.adb:1335:53   - Unknown word (fine)           -- overrode it already we are fine, if not it inherits
Engine/neo-data.adb:1335:69   - Unknown word (inherits)       -- are fine, if not it inherits from the reference
Engine/neo-data.adb:1336:69   - Unknown word (Contains)       -- Parent.Parent.Properties.Contains (To_Str_Unbound (Property
Engine/neo-data.adb:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-data.adb:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-data.adb:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-data.adb:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-data.adb:146:11    - Unknown word (Dimensional)  -- -- Is_Dimensional_Primitive --
Engine/neo-data.adb:149:17    - Unknown word (Dimensional)  -- function Is_Dimensional_Primitive (Kind : Primitive
Engine/neo-data.adb:150:105   - Unknown word (Unsigned)     -- Any_Int_Kind | Any_Unsigned_Int_Kind);
Engine/neo-data.adb:150:32    - Unknown word (String)       -- Kind not in Bool_Kind | String_Kind | Ref_Kind | Type
Engine/neo-data.adb:158:10    - Unknown word (Recursive)    -- -- Recursive deletion
Engine/neo-data.adb:165:38    - Unknown word (looking)      -- Free children if we are looking at a non-primitive
Engine/neo-data.adb:165:55    - Unknown word (primitive)    -- are looking at a non-primitive
Engine/neo-data.adb:168:16    - Unknown word (Kill)         -- -- Kill children
Engine/neo-data.adb:174:16    - Unknown word (Kill)         -- -- Kill properties
Engine/neo-data.adb:180:16    - Unknown word (Kill)         -- -- Kill locals
Engine/neo-data.adb:180:21    - Unknown word (locals)       -- -- Kill locals
Engine/neo-data.adb:187:23    - Unknown word (structure)    -- -- Free the structure itself
Engine/neo-data.adb:187:33    - Unknown word (itself)       -- Free the structure itself
Engine/neo-data.adb:192:29    - Unknown word (Structures)  -- for I of File.Named_Structures loop Finalize (I); end
Engine/neo-data.adb:19:6      - Unknown word (Binary)       -- -- Binary --
Engine/neo-data.adb:202:10    - Unknown word (Character)   -- -- Character Lookup Tables --
Engine/neo-data.adb:205:10    - Unknown word (Rough)       -- -- Rough "catagory" tables for
Engine/neo-data.adb:205:101   - Unknown word (parsing)     -- removing whitespace or parsing identifiers
Engine/neo-data.adb:205:109   - Unknown word (identifiers) -- whitespace or parsing identifiers
Engine/neo-data.adb:205:17    - Unknown word (catagory)    -- -- Rough "catagory" tables for characters
Engine/neo-data.adb:205:38    - Unknown word (characters)  -- catagory" tables for characters to enable quick lookups
Engine/neo-data.adb:205:65    - Unknown word (lookups)     -- characters to enable quick lookups when removing whitespace
Engine/neo-data.adb:205:78    - Unknown word (removing)    -- enable quick lookups when removing whitespace or parsing
Engine/neo-data.adb:206:12    - Unknown word (Character)   -- type Character_Kind is (Identifier
Engine/neo-data.adb:206:42    - Unknown word (Catagory)    -- Kind is (Identifier_Catagory, Whitespace_Catagory
Engine/neo-data.adb:206:63    - Unknown word (Catagory)    -- Catagory, Whitespace_Catagory, Other_Catagory);
Engine/neo-data.adb:206:73    - Unknown word (Other)       -- Whitespace_Catagory, Other_Catagory);
Engine/neo-data.adb:206:79    - Unknown word (Catagory)    -- Whitespace_Catagory, Other_Catagory);
Engine/neo-data.adb:207:25    - Unknown word (Char)        -- CATAGORY : array (Char_8'First..Char_8'Val
Engine/neo-data.adb:207:39    - Unknown word (Char)        -- array (Char_8'First..Char_8'Val (127)) of Character
Engine/neo-data.adb:207:60    - Unknown word (Character)   -- Char_8'Val (127)) of Character_Kind :=
Engine/neo-data.adb:207:7     - Unknown word (CATAGORY)    -- CATAGORY : array (Char_8'First
Engine/neo-data.adb:208:109   - Unknown word (Catagory)    -- CR | VT => Whitespace_Catagory,
Engine/neo-data.adb:208:61    - Unknown word (Catagory)    -- ..'9' => Identifier_Catagory, ' ' | HT | LF | CR
Engine/neo-data.adb:209:20    - Unknown word (Other)       -- others => Other_Catagory);
Engine/neo-data.adb:211:10    - Unknown word (Valued)      -- -- Valued character based value
Engine/neo-data.adb:211:17    - Unknown word (character)   -- -- Valued character based value lookups
Engine/neo-data.adb:211:39    - Unknown word (lookups)     -- character based value lookups
Engine/neo-data.adb:212:41    - Unknown word (Char)        -- Lookup_Value is array (Char_8'First..Char_8'Val
Engine/neo-data.adb:212:55    - Unknown word (Char)        -- array (Char_8'First..Char_8'Val (127)) of Int
Engine/neo-data.adb:212:83    - Unknown word (Unsigned)    -- Val (127)) of Int_64_Unsigned;
Engine/neo-data.adb:213:41    - Unknown word (Unsigned)    -- : constant Int_64_Unsigned := Int_64_Unsigned'Last
Engine/neo-data.adb:213:60    - Unknown word (Unsigned)    -- _Unsigned := Int_64_Unsigned'Last;
Engine/neo-data.adb:213:7     - Unknown word (INVALID)     -- INVALID_VALUE : constant Int
Engine/neo-data.adb:214:7     - Unknown word (SEPORATOR)   -- SEPORATOR_VALUE : constant Int
Engine/neo-data.adb:218:17    - Unknown word (SEPORATOR)   -- '_' => SEPORATOR_VALUE, others => INVALID
Engine/neo-data.adb:218:44    - Unknown word (INVALID)     -- SEPORATOR_VALUE, others => INVALID_VALUE);
Engine/neo-data.adb:219:7     - Unknown word (DECIMAL)     -- DECIMAL_VALUE : constant Array
Engine/neo-data.adb:221:17    - Unknown word (SEPORATOR)   -- '_' => SEPORATOR_VALUE, others => INVALID
Engine/neo-data.adb:221:44    - Unknown word (INVALID)     -- SEPORATOR_VALUE, others => INVALID_VALUE);
Engine/neo-data.adb:222:7     - Unknown word (OCTAL)       -- OCTAL_VALUE : constant
Engine/neo-data.adb:224:17    - Unknown word (SEPORATOR)   -- '_' => SEPORATOR_VALUE, others => INVALID
Engine/neo-data.adb:224:44    - Unknown word (INVALID)     -- SEPORATOR_VALUE, others => INVALID_VALUE);
Engine/neo-data.adb:225:7     - Unknown word (BINARY)      -- BINARY_VALUE : constant
Engine/neo-data.adb:226:37    - Unknown word (SEPORATOR)   -- 0, '1' => 1, '_' => SEPORATOR_VALUE, others => INVALID
Engine/neo-data.adb:226:64    - Unknown word (INVALID)     -- SEPORATOR_VALUE, others => INVALID_VALUE);
Engine/neo-data.adb:22:25     - Unknown word (binary)       -- Load a file into a binary buffer
Engine/neo-data.adb:234:10    - Unknown word (Prepare)     -- -- Prepare to load the textual
Engine/neo-data.adb:234:30    - Unknown word (textual)     -- Prepare to load the textual data into a buffer
Engine/neo-data.adb:235:20    - Unknown word (String)      -- subtype File_String is Str_8 (1..Natural
Engine/neo-data.adb:236:20    - Unknown word (String)      -- package File_String_IO is new Ada.Direct
Engine/neo-data.adb:236:57    - Unknown word (String)      -- Ada.Direct_IO (File_String); use File_String_IO
Engine/neo-data.adb:239:28    - Unknown word (Positive)    -- Text_Index : aliased Positive := 1;
Engine/neo-data.adb:23:30     - Unknown word (Padding)      -- function Load (Path : Str; Padding : Positive := 1) return
Engine/neo-data.adb:23:40     - Unknown word (Positive)     -- Path : Str; Padding : Positive := 1) return Array_Byte
Engine/neo-data.adb:245:60    - Unknown word (have)        -- are allowed - so we have some overhead associated
Engine/neo-data.adb:245:65    - Unknown word (some)        -- allowed - so we have some overhead associated
Engine/neo-data.adb:245:70    - Unknown word (overhead)    -- allowed - so we have some overhead associated with a double
Engine/neo-data.adb:247:11    - Unknown word (Starts)      -- Starts_With_Global : Bool
Engine/neo-data.adb:247:40    - Unknown word (False)       -- With_Global : Bool := False;
Engine/neo-data.adb:24:22     - Unknown word (Unsigned)     -- use Vector_Int_8_Unsigned; -- For "&"
Engine/neo-data.adb:24:9      - Unknown word (Vector)       -- use Vector_Int_8_Unsigned; -- For
Engine/neo-data.adb:250:32    - Unknown word (Vector)      -- Names : Vector_Str_Unbound.Unsafe.Vector
Engine/neo-data.adb:250:43    - Unknown word (Unbound)     -- : Vector_Str_Unbound.Unsafe.Vector;
Engine/neo-data.adb:250:51    - Unknown word (Unsafe)      -- Vector_Str_Unbound.Unsafe.Vector;
Engine/neo-data.adb:250:58    - Unknown word (Vector)      -- Vector_Str_Unbound.Unsafe.Vector;
Engine/neo-data.adb:252:15    - Unknown word (Vector)      -- package Vector_Reference_State is new
Engine/neo-data.adb:252:54    - Unknown word (Vectors)     -- State is new Neo.Core.Vectors (Reference_State);
Engine/neo-data.adb:253:20    - Unknown word (Vector)      -- References : Vector_Reference_State.Unsafe
Engine/neo-data.adb:253:43    - Unknown word (Unsafe)      -- Vector_Reference_State.Unsafe.Vector;
Engine/neo-data.adb:256:10    - Unknown word (Assert)      -- -- Assert_Next --
Engine/neo-data.adb:259:17    - Unknown word (Assert)      -- procedure Assert_Next (C : in out Positive
Engine/neo-data.adb:259:41    - Unknown word (Positive)    -- Assert_Next (C : in out Positive; Val : Char_8) with
Engine/neo-data.adb:259:57    - Unknown word (Char)        -- out Positive; Val : Char_8) with Inline is
Engine/neo-data.adb:265:36    - Unknown word (expected)    -- raise Syntax_Error with "expected " & Val & " but found
Engine/neo-data.adb:265:61    - Unknown word (found)       -- expected " & Val & " but found " & Text(C) & " as part
Engine/neo-data.adb:269:10    - Unknown word (Skip)        -- -- Skip_Whitespace --
Engine/neo-data.adb:26:8      - Unknown word (Setup)        -- -- Setup IO
Engine/neo-data.adb:272:17    - Unknown word (Skip)        -- procedure Skip_Whitespace_Safe (C
Engine/neo-data.adb:272:33    - Unknown word (Safe)        -- procedure Skip_Whitespace_Safe (C : in out Positive
Engine/neo-data.adb:272:60    - Unknown word (Skip)        -- C : in out Positive; Skip_Single_Line_Comments
Engine/neo-data.adb:272:65    - Unknown word (Single)      -- in out Positive; Skip_Single_Line_Comments : Bool
Engine/neo-data.adb:272:96    - Unknown word (True)        -- Line_Comments : Bool := True) with Inline is
Engine/neo-data.adb:275:19    - Unknown word (CATAGORY)    -- while CATAGORY (Text (C)) = Whitespace
Engine/neo-data.adb:280:41    - Unknown word (Skip)        -- Text (C + 1) = '/' and Skip_Single_Line_Comments
Engine/neo-data.adb:280:46    - Unknown word (Single)      -- + 1) = '/' and Skip_Single_Line_Comments then
Engine/neo-data.adb:282:35    - Unknown word (ASCII)       -- while Text (C) /= ASCII.LF loop C := C + 1;
Engine/neo-data.adb:293:60    - Unknown word (Single)      -- in out Positive; Skip_Single_Line_Comments : Bool
Engine/neo-data.adb:293:91    - Unknown word (True)        -- Line_Comments : Bool := True) with Inline is
Engine/neo-data.adb:296:19    - Unknown word (CATAGORY)    -- while CATAGORY (Text (C)) = Whitespace
Engine/neo-data.adb:298:46    - Unknown word (Single)      -- + 1) = '/' and Skip_Single_Line_Comments then
Engine/neo-data.adb:300:35    - Unknown word (ASCII)       -- while Text (C) /= ASCII.LF loop C := C + 1;
Engine/neo-data.adb:318:19    - Unknown word (CATAGORY)    -- while CATAGORY (Text (C)) = Whitespace
Engine/neo-data.adb:322:35    - Unknown word (ASCII)       -- while Text (C) /= ASCII.LF loop C := C + 1;
Engine/neo-data.adb:340:19    - Unknown word (CATAGORY)    -- while CATAGORY (Text (C)) = Whitespace
Engine/neo-data.adb:344:35    - Unknown word (ASCII)       -- while Text (C) /= ASCII.LF loop C := C + 1;
Engine/neo-data.adb:358:10    - Unknown word (Parse)       -- -- Parse_Character --
Engine/neo-data.adb:358:16    - Unknown word (Character)   -- -- Parse_Character --
Engine/neo-data.adb:361:17    - Unknown word (Parse)       -- procedure Parse_Character (C : in out
Engine/neo-data.adb:361:23    - Unknown word (Character)   -- procedure Parse_Character (C : in out Positive
Engine/neo-data.adb:364:20    - Unknown word (Internal)    -- function Internal is new Unchecked_Conversion
Engine/neo-data.adb:366:20    - Unknown word (Internal)    -- return Internal (Text (C));
Engine/neo-data.adb:369:12    - Unknown word (Parse)       -- -- Parse a string of characters
Engine/neo-data.adb:369:20    - Unknown word (string)      -- -- Parse a string of characters representing
Engine/neo-data.adb:369:30    - Unknown word (characters)  -- - Parse a string of characters representing a hex encoded
Engine/neo-data.adb:369:41    - Unknown word (representing) -- string of characters representing a hex encoded number
Engine/neo-data.adb:369:60    - Unknown word (encoded)      -- characters representing a hex encoded number
Engine/neo-data.adb:36:23     - Unknown word (Length)       -- return (if Blob'Length mod Padding = 0 then
Engine/neo-data.adb:36:34     - Unknown word (Padding)      -- (if Blob'Length mod Padding = 0 then Result else
Engine/neo-data.adb:36:83     - Unknown word (Length)       -- Result & (1..Result'Length mod Padding => 0));
Engine/neo-data.adb:36:94     - Unknown word (Padding)      -- ..Result'Length mod Padding => 0));
Engine/neo-data.adb:370:19    - Unknown word (Parse)        -- procedure Parse_Valued_Character (Hex
Engine/neo-data.adb:370:25    - Unknown word (Valued)       -- procedure Parse_Valued_Character (Hex_Char
Engine/neo-data.adb:374:70    - Unknown word (Invalid)      -- INVALID_VALUE then raise Invalid_Hex_In_Valued_Character
Engine/neo-data.adb:374:85    - Unknown word (Valued)       -- raise Invalid_Hex_In_Valued_Character; end if;
Engine/neo-data.adb:375:38    - Unknown word (Shift)        -- Result := Char_32'Val (Shift_Left (HEX_VALUE (Text
Engine/neo-data.adb:379:21    - Unknown word (Parse)        -- -- Start of Parse_Character
Engine/neo-data.adb:383:16    - Unknown word (Escape)       -- -- Escape sequence
Engine/neo-data.adb:383:23    - Unknown word (sequence)     -- -- Escape sequence
Engine/neo-data.adb:388:57    - Unknown word (Latin)        -- => Result := Latin_32.BEL;
Engine/neo-data.adb:389:57    - Unknown word (Latin)        -- => Result := Latin_32.BS;
Engine/neo-data.adb:390:57    - Unknown word (Latin)        -- => Result := Latin_32.FF;
Engine/neo-data.adb:391:57    - Unknown word (Latin)        -- => Result := Latin_32.LF;
Engine/neo-data.adb:392:57    - Unknown word (Latin)        -- => Result := Latin_32.CR;
Engine/neo-data.adb:395:53    - Unknown word (Valued)       -- => Parse_Valued_Character (2); C :=
Engine/neo-data.adb:396:53    - Unknown word (Valued)       -- => Parse_Valued_Character (4); C :=
Engine/neo-data.adb:398:53    - Unknown word (Invalid)      -- => raise Invalid_Escape_Character;
Engine/neo-data.adb:398:61    - Unknown word (Escape)       -- => raise Invalid_Escape_Character;
Engine/neo-data.adb:39:13     - Unknown word (Skip)         -- procedure Skip (File : in out Ada.Streams
Engine/neo-data.adb:39:66     - Unknown word (Bytes)        -- Stream_IO.File_Type; Bytes : Positive) is
Engine/neo-data.adb:39:74     - Unknown word (Positive)     -- IO.File_Type; Bytes : Positive) is
Engine/neo-data.adb:402:23    - Unknown word (ASCII)        -- -- Normal ASCII
Engine/neo-data.adb:404:68    - Unknown word (Invalid)      -- C) >= 127 then raise Invalid_Character; end if;
Engine/neo-data.adb:409:20    - Unknown word (higher)       -- -- UTF-8 higher code-points
Engine/neo-data.adb:40:5      - Unknown word (Junk)         -- Junk : Byte := 0;
Engine/neo-data.adb:410:79    - Unknown word (Shift)        -- Result := Char_32'Val (Shift_Left (To_Byte (C)
Engine/neo-data.adb:412:79    - Unknown word (Shift)        -- Result := Char_32'Val (Shift_Left (To_Byte (C)
Engine/neo-data.adb:413:79    - Unknown word (Shift)        -- or Shift_Left (To_Byte (C +
Engine/neo-data.adb:415:79    - Unknown word (Shift)        -- Result := Char_32'Val (Shift_Left (To_Byte (C)
Engine/neo-data.adb:419:22    - Unknown word (Invalid)      -- else raise Invalid_Character_Literal; end
Engine/neo-data.adb:419:40    - Unknown word (Literal)      -- raise Invalid_Character_Literal; end if;
Engine/neo-data.adb:41:23     - Unknown word (Bytes)        -- begin for I in 1..Bytes loop Byte'Read (Ada
Engine/neo-data.adb:41:82     - Unknown word (Junk)         -- Stream_IO.Stream (File), Junk); end loop; end;
Engine/neo-data.adb:423:26    - Unknown word (Literal)      -- -- Parse_Character_Literal --
Engine/neo-data.adb:426:33    - Unknown word (Literal)      -- procedure Parse_Character_Literal (C : in out Positive
Engine/neo-data.adb:428:11    - Unknown word (Assert)       -- Assert_Next (C, ''');
Engine/neo-data.adb:430:11    - Unknown word (Assert)       -- Assert_Next (C, ''');
Engine/neo-data.adb:434:23    - Unknown word (Literal)      -- -- Parse_String_Literal --
Engine/neo-data.adb:437:30    - Unknown word (Literal)      -- procedure Parse_String_Literal (C : in out Positive
Engine/neo-data.adb:437:80    - Unknown word (Unbound)      -- Result : out Str_32_Unbound) with Inline is
Engine/neo-data.adb:438:9     - Unknown word (Temp)         -- Temp : Char_32;
Engine/neo-data.adb:440:11    - Unknown word (Assert)       -- Assert_Next (C, '"');
Engine/neo-data.adb:442:33    - Unknown word (Temp)         -- Parse_Character (C, Temp);
Engine/neo-data.adb:443:23    - Unknown word (Temp)         -- exit when Temp = '"';
Engine/neo-data.adb:444:29    - Unknown word (Temp)         -- Append (Result, Temp);
Engine/neo-data.adb:454:36    - Unknown word (false)        -- Text (C..C + 4) = "false" then Result := False
Engine/neo-data.adb:454:58    - Unknown word (False)        -- false" then Result := False; C := C + 5;
Engine/neo-data.adb:455:36    - Unknown word (true)         -- elsif Text (C..C + 3) = "true" then Result := True
Engine/neo-data.adb:455:58    - Unknown word (True)         -- true" then Result := True; C := C + 4;
Engine/neo-data.adb:456:22    - Unknown word (Invalid)      -- else raise Invalid_Float_Literal; end if
Engine/neo-data.adb:467:9     - Unknown word (Temp)         -- Temp_Result : Int_64_Unsigned
Engine/neo-data.adb:469:47    - Unknown word (bits)         -- warning: high order bits will be ignored
Engine/neo-data.adb:469:52    - Unknown word (will)         -- warning: high order bits will be ignored
Engine/neo-data.adb:469:60    - Unknown word (ignored)      -- high order bits will be ignored
Engine/neo-data.adb:469:8     - Unknown word (Warnings)     -- pragma Warnings (Off); -- warning: high
Engine/neo-data.adb:471:8     - Unknown word (Warnings)     -- pragma Warnings (On);
Engine/neo-data.adb:473:58    - Unknown word (Amount)       -- Base : Positive; Shift_Amount : Natural; Lookup_Table
Engine/neo-data.adb:479:28    - Unknown word (separators)   -- -- Skip over separators if present
Engine/neo-data.adb:479:42    - Unknown word (present)      -- Skip over separators if present
Engine/neo-data.adb:481:63    - Unknown word (Amount)       -- (Temp_Result, Shift_Amount) or Lookup_Table (Text
Engine/neo-data.adb:491:26    - Unknown word (different)    -- -- Check for a different base notation
Engine/neo-data.adb:491:41    - Unknown word (notation)     -- for a different base notation
Engine/neo-data.adb:498:50    - Unknown word (OCTAL)        -- Parse_For_Base (4,  2, OCTAL_VALUE);
Engine/neo-data.adb:499:50    - Unknown word (BINARY)       -- Parse_For_Base (2,  1, BINARY_VALUE);
Engine/neo-data.adb:503:20    - Unknown word (True)         -- return True;
Engine/neo-data.adb:506:14    - Unknown word (This)         -- -- This is not a based literal
Engine/neo-data.adb:506:34    - Unknown word (literal)      -- This is not a based literal
Engine/neo-data.adb:507:18    - Unknown word (False)        -- return False;
Engine/neo-data.adb:521:14    - Unknown word (Handle)       -- -- Handle hex, octal, or binary
Engine/neo-data.adb:521:26    - Unknown word (octal)        -- -- Handle hex, octal, or binary literal
Engine/neo-data.adb:521:36    - Unknown word (binary)       -- Handle hex, octal, or binary literal
Engine/neo-data.adb:521:43    - Unknown word (literal)      -- hex, octal, or binary literal
Engine/neo-data.adb:524:18    - Unknown word (decimal)      -- -- Non-decimal integer, load character
Engine/neo-data.adb:524:40    - Unknown word (character)    -- decimal integer, load character-based number
Engine/neo-data.adb:531:26    - Unknown word (decimal)      -- -- Load normal decimal number
Engine/neo-data.adb:535:16    - Unknown word (Negative)     -- Is_Negative : Bool;
Engine/neo-data.adb:539:53    - Unknown word (Negative)     -- then C := C + 1; Is_Negative := True;
Engine/neo-data.adb:539:65    - Unknown word (True)         -- + 1; Is_Negative := True;
Engine/neo-data.adb:53:19     - Unknown word (Possible)     -- function Get (Possible_Matches : Array_Ptr
Engine/neo-data.adb:53:28     - Unknown word (Matches)      -- function Get (Possible_Matches : Array_Ptr_Structure
Engine/neo-data.adb:53:48     - Unknown word (Structure)    -- Matches : Array_Ptr_Structure_State; Prop, Val : Str
Engine/neo-data.adb:53:65     - Unknown word (Prop)         -- Ptr_Structure_State; Prop, Val : Str_32) return
Engine/neo-data.adb:53:96     - Unknown word (Structure)    -- Str_32) return Ptr_Structure_State is
Engine/neo-data.adb:541:21    - Unknown word (Negative)     -- Is_Negative := False;
Engine/neo-data.adb:541:33    - Unknown word (False)        -- Is_Negative := False;
Engine/neo-data.adb:546:21    - Unknown word (DECIMAL)      -- while DECIMAL_VALUE (Text (C)) /=
Engine/neo-data.adb:548:30    - Unknown word (separators)   -- -- Skip over separators if present
Engine/neo-data.adb:548:44    - Unknown word (present)      -- Skip over separators if present
Engine/neo-data.adb:549:20    - Unknown word (DECIMAL)      -- if DECIMAL_VALUE (Text (C)) /=
Engine/neo-data.adb:54:20     - Unknown word (Structure)    -- Result : Ptr_Structure_State := null;
Engine/neo-data.adb:550:53    - Unknown word (DECIMAL)      -- Temp_Result * 10 + DECIMAL_VALUE (Text (C));
Engine/neo-data.adb:556:33    - Unknown word (accordingly)  -- -- Set the result accordingly
Engine/neo-data.adb:557:21    - Unknown word (Negative)     -- if Is_Negative then Result := Int_T
Engine/neo-data.adb:56:13     - Unknown word (Possible)     -- for Possible_Match of Possible_Matches
Engine/neo-data.adb:56:31     - Unknown word (Possible)     -- for Possible_Match of Possible_Matches loop
Engine/neo-data.adb:56:40     - Unknown word (Matches)      -- Possible_Match of Possible_Matches loop
Engine/neo-data.adb:577:32    - Unknown word (parsing)      -- General procedure for parsing floating point literals
Engine/neo-data.adb:577:55    - Unknown word (literals)     -- parsing floating point literals
Engine/neo-data.adb:57:107    - Unknown word (Prop)         -- Contains (U (To_Str_16 (Prop)))
Engine/neo-data.adb:57:14     - Unknown word (Possible)     -- if Possible_Match.Properties /=
Engine/neo-data.adb:57:57     - Unknown word (Possible)     -- Properties /= null and then Possible_Match.Properties.Contains
Engine/neo-data.adb:57:83     - Unknown word (Contains)     -- Possible_Match.Properties.Contains (U (To_Str_16 (Prop
Engine/neo-data.adb:585:9     - Unknown word (Decimal)      -- Decimal :          Real
Engine/neo-data.adb:586:9     - Unknown word (Exponent)     -- Exponent :          Int
Engine/neo-data.adb:587:12    - Unknown word (Negative)     -- Is_Negative :          Bool;
Engine/neo-data.adb:589:38    - Unknown word (Before)      -- procedure Parse_Real_Digits (Before_Deciaml_Point : Bool
Engine/neo-data.adb:589:45    - Unknown word (Deciaml)     -- Real_Digits (Before_Deciaml_Point : Bool) is
Engine/neo-data.adb:58:116    - Unknown word (Unbound)      -- Val (1) = To_Str_32_Unbound (Val)
Engine/neo-data.adb:58:48     - Unknown word (Element)      -- Possible_Match.Properties.Element (U (To_Str_16 (Prop
Engine/neo-data.adb:58:71     - Unknown word (Prop)         -- Element (U (To_Str_16 (Prop))).Primitive.String
Engine/neo-data.adb:58:79     - Unknown word (Primitive)    -- (To_Str_16 (Prop))).Primitive.String_Val (1) = To
Engine/neo-data.adb:58:89     - Unknown word (String)       -- (Prop))).Primitive.String_Val (1) = To_Str_32
Engine/neo-data.adb:593:19    - Unknown word (DECIMAL)     -- while DECIMAL_VALUE (Text (C)) /=
Engine/neo-data.adb:595:28    - Unknown word (separators)  -- -- Skip over separators if present
Engine/neo-data.adb:595:42    - Unknown word (present)     -- Skip over separators if present
Engine/neo-data.adb:597:20    - Unknown word (Before)      -- if Before_Deciaml_Point then
Engine/neo-data.adb:597:27    - Unknown word (Deciaml)     -- if Before_Deciaml_Point then
Engine/neo-data.adb:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo-data.adb:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo-data.adb:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo-data.adb:600:77    - Unknown word (Decimal)     -- VALUE (Text (C))) / Decimal);
Engine/neo-data.adb:601:19    - Unknown word (Decimal)     -- Decimal := Decimal * 10.0;
Engine/neo-data.adb:601:30    - Unknown word (Decimal)     -- Decimal := Decimal * 10.0;
Engine/neo-data.adb:612:32    - Unknown word (specified)   -- - Check for a float specified in hex
Engine/neo-data.adb:618:28    - Unknown word (False)       -- Is_Negative := False;
Engine/neo-data.adb:61:39     - Unknown word (duplicate)    -- null; --Line ("Possible duplicate of " & To_Str_16 (Attrib
Engine/neo-data.adb:61:67     - Unknown word (Attrib)       -- duplicate of " & To_Str_16 (Attrib));
Engine/neo-data.adb:624:30    - Unknown word (Before)      -- Parse_Real_Digits (Before_Deciaml_Point => True
Engine/neo-data.adb:624:37    - Unknown word (Deciaml)     -- Real_Digits (Before_Deciaml_Point => True);
Engine/neo-data.adb:627:32    - Unknown word (Before)      -- Parse_Real_Digits (Before_Deciaml_Point => False
Engine/neo-data.adb:627:39    - Unknown word (Deciaml)     -- Real_Digits (Before_Deciaml_Point => False);
Engine/neo-data.adb:62:23     - Unknown word (Program)      -- --raise Program_Error; -- Return the
Engine/neo-data.adb:630:14    - Unknown word (Negate)      -- -- Negate if necessary
Engine/neo-data.adb:630:24    - Unknown word (necessary)   -- -- Negate if necessary
Engine/neo-data.adb:633:14    - Unknown word (Exponent)    -- -- Exponent notation
Engine/neo-data.adb:633:23    - Unknown word (notation)    -- -- Exponent notation
Engine/neo-data.adb:636:37    - Unknown word (Exponent)    -- Parse_Int32_Literal (C, Exponent);
Engine/neo-data.adb:637:62    - Unknown word (Exponent)    -- Calc_64.Exp (Real_64 (Exponent) * LOG_10));
Engine/neo-data.adb:647:16    - Unknown word (Indentifier) -- -- Parse_Indentifier --
Engine/neo-data.adb:653:19    - Unknown word (sure)        -- -- Make sure we are dealing with
Engine/neo-data.adb:653:31    - Unknown word (dealing)     -- -- Make sure we are dealing with a character which
Engine/neo-data.adb:653:46    - Unknown word (character)   -- we are dealing with a character which is allowed within
Engine/neo-data.adb:653:56    - Unknown word (which)       -- dealing with a character which is allowed within an
Engine/neo-data.adb:653:73    - Unknown word (within)      -- character which is allowed within an identifier
Engine/neo-data.adb:655:18    - Unknown word (Other)       -- when Other_Catagory => raise
Engine/neo-data.adb:655:55    - Unknown word (Characters)  -- => raise Invalid_Characters_In_Identifier;
Engine/neo-data.adb:656:58    - Unknown word (Expected)    -- => raise Identifier_Expected;
Engine/neo-data.adb:659:29    - Unknown word (character)   -- -- Append the character and continue
Engine/neo-data.adb:699:45    - Unknown word (possible)    -- first reference in a possible list
Engine/neo-data.adb:702:48    - Unknown word (Starts)      -- Identifier, Reference.Starts_With_Global);
Engine/neo-data.adb:703:42    - Unknown word (Unbound)     -- Names.Append (To_Str_Unbound (Identifier));
Engine/neo-data.adb:706:19    - Unknown word (along)       -- -- Move along a possible string of
Engine/neo-data.adb:706:27    - Unknown word (possible)    -- -- Move along a possible string of local names
Engine/neo-data.adb:706:36    - Unknown word (string)      -- Move along a possible string of local names
Engine/neo-data.adb:70:19     - Unknown word (Structure)    -- function Get (Structure : Ptr_Structure_State
Engine/neo-data.adb:70:35     - Unknown word (Structure)    -- Get (Structure : Ptr_Structure_State; Class : Struct
Engine/neo-data.adb:70:70     - Unknown word (Prop)         -- State; Class : Struct_T; Prop, Val : Str_32) return
Engine/neo-data.adb:710:44    - Unknown word (Unbound)     -- Names.Append (To_Str_Unbound (Identifier));
Engine/neo-data.adb:71:37     - Unknown word (Prop)         -- (Structure, Class), Prop, Val));
Engine/neo-data.adb:723:31    - Unknown word (parsing)     -- Temporary used for parsing structure identifiers
Engine/neo-data.adb:723:39    - Unknown word (structure)   -- Temporary used for parsing structure identifiers
Engine/neo-data.adb:723:49    - Unknown word (identifiers) -- for parsing structure identifiers
Engine/neo-data.adb:726:22    - Unknown word (remaining)   -- -- Parse the remaining characters of a primitive
Engine/neo-data.adb:726:32    - Unknown word (characters)  -- Parse the remaining characters of a primitive identifier
Engine/neo-data.adb:726:48    - Unknown word (primitive)   -- remaining characters of a primitive identifier based off
Engine/neo-data.adb:726:82    - Unknown word (several)     -- identifier based off of several hints
Engine/neo-data.adb:726:90    - Unknown word (hints)       -- based off of several hints
Engine/neo-data.adb:727:98    - Unknown word (Disble)      -- Bitsize : Bool := False; Disble_8_Bit : Bool := False
Engine/neo-data.adb:732:32    - Unknown word (dealing)     -- -- Check if we are dealing with abbreviated primitives
Engine/neo-data.adb:732:45    - Unknown word (abbreviated) -- we are dealing with abbreviated primitives (e.g. u8
Engine/neo-data.adb:732:57    - Unknown word (primitives)  -- dealing with abbreviated primitives (e.g. u8, i64, f32)
Engine/neo-data.adb:733:34    - Unknown word (Length)      -- if Text (C..C + Rest'Length - 1) = Rest then C
Engine/neo-data.adb:733:72    - Unknown word (Length)      -- Rest then C := C + Rest'Length; end if;
Engine/neo-data.adb:735:25    - Unknown word (optional)    -- -- Load the optional bitsize
Engine/neo-data.adb:741:112   - Unknown word (Disble)      -- C := C + 1; if Disble_8_Bit then raise
Engine/neo-data.adb:74:107    - Unknown word (Kind)         -- 2; Kind : Primitive_Kind)
Engine/neo-data.adb:74:90     - Unknown word (Kind)         -- Prop, Val : Str_32; Kind : Primitive_Kind)
Engine/neo-data.adb:74:97     - Unknown word (Primitive)    -- Val : Str_32; Kind : Primitive_Kind)
Engine/neo-data.adb:750:16    - Unknown word (Handle)      -- -- Handle possible array types
Engine/neo-data.adb:750:23    - Unknown word (possible)    -- -- Handle possible array types
Engine/neo-data.adb:754:20    - Unknown word (Traverse)    -- Enum_Traverse_Multiplier : Positive
Engine/neo-data.adb:754:29    - Unknown word (Multiplier)  -- Enum_Traverse_Multiplier : Positive;
Engine/neo-data.adb:757:79    - Unknown word (Traverse)    -- => Enum_Traverse_Multiplier := 3;
Engine/neo-data.adb:757:88    - Unknown word (Multiplier)  -- => Enum_Traverse_Multiplier := 3;
Engine/neo-data.adb:758:79    - Unknown word (Traverse)    -- Kind => Enum_Traverse_Multiplier := 4;
Engine/neo-data.adb:758:88    - Unknown word (Multiplier)  -- => Enum_Traverse_Multiplier := 4;
Engine/neo-data.adb:759:79    - Unknown word (Traverse)    -- | Type_Kind => Enum_Traverse_Multiplier := 1;
Engine/neo-data.adb:759:88    - Unknown word (Multiplier)  -- Kind => Enum_Traverse_Multiplier := 1;
Engine/neo-data.adb:760:40    - Unknown word (Program)     -- when others => raise Program_Error;
Engine/neo-data.adb:763:109   - Unknown word (Traverse)    -- Primitive) + 4 * Enum_Traverse_Multiplier); C := C
Engine/neo-data.adb:763:118   - Unknown word (Multiplier)  -- + 4 * Enum_Traverse_Multiplier); C := C + 1;
Engine/neo-data.adb:76:54     - Unknown word (Kind)         -- Class), Prop, Val), Kind));
Engine/neo-data.adb:77:101    - Unknown word (Kind)         -- Prop, Val : Str_32; Kind : Primitive_Kind)
Engine/neo-data.adb:77:108    - Unknown word (Primitive)    -- Val : Str_32; Kind : Primitive_Kind)
Engine/neo-data.adb:77:118    - Unknown word (Kind)         -- 2; Kind : Primitive_Kind)
Engine/neo-data.adb:780:41    - Unknown word (nsigned)     -- => Parse_Rest ("nsigned_int", Unsigned_Int8
Engine/neo-data.adb:781:123   - Unknown word (Hack)        -- Disble_8_Bit => True); -- Hack
Engine/neo-data.adb:781:41    - Unknown word (loat)        -- => Parse_Rest ("loat", Type_x16_Kind
Engine/neo-data.adb:781:97    - Unknown word (Disble)      -- Test_Bitsize => True, Disble_8_Bit => True); -- Hack
Engine/neo-data.adb:784:41    - Unknown word (ouble)       -- => Parse_Rest ("ouble", Float64_Kind
Engine/neo-data.adb:785:41    - Unknown word (tring)       -- => Parse_Rest ("tring", String_Kind
Engine/neo-data.adb:792:111   - Unknown word (could)       -- uses hash tables and it could be much better...
Engine/neo-data.adb:792:120   - Unknown word (much)        -- tables and it could be much better...
Engine/neo-data.adb:792:125   - Unknown word (better)      -- and it could be much better...
Engine/neo-data.adb:792:87    - Unknown word (uses)        -- Identifier)); -- 'Value uses hash tables and it could
Engine/neo-data.adb:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-data.adb:810:25    - Unknown word (typing)      -- -- Cost of static typing, totally worth
Engine/neo-data.adb:810:33    - Unknown word (totally)     -- Cost of static typing, totally worth
Engine/neo-data.adb:810:41    - Unknown word (worth)       -- static typing, totally worth
Engine/neo-data.adb:814:9     - Unknown word (Junk)        -- Junk : Struct_T;
Engine/neo-data.adb:81:70     - Unknown word (Primitive)    -- State; Class : Struct_T; Primitive : Primitive_Kind) return
Engine/neo-data.adb:81:82     - Unknown word (Primitive)    -- Struct_T; Primitive : Primitive_Kind) return Ptr_Structure
Engine/neo-data.adb:835:131   - Unknown word (Junk)        -- (I), Junk);
Engine/neo-data.adb:836:131   - Unknown word (Junk)        -- Val (I, J), Junk); L (C, J, 2);  end
Engine/neo-data.adb:88:52     - Unknown word (Program)      -- Kind) /= 1 then raise Program_Error; end if;
Engine/neo-data.adb:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-data.adb:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-data.adb:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo-data.adb:907:51    - Unknown word (Program)     -- Kind => raise Program_Error;
Engine/neo-data.adb:915:14    - Unknown word (Handle)      -- -- Handle multi-dimension
Engine/neo-data.adb:915:21    - Unknown word (multi)       -- -- Handle multi-dimension
Engine/neo-data.adb:916:17    - Unknown word (Dimensional) -- if Is_Dimensional_Primitive (Structure
Engine/neo-data.adb:919:18    - Unknown word (Multi)       -- -- Multi-dimensionals are wrapped
Engine/neo-data.adb:919:24    - Unknown word (dimensionals) -- -- Multi-dimensionals are wrapped in curlies
Engine/neo-data.adb:919:41    - Unknown word (wrapped)      -- Multi-dimensionals are wrapped in curlies
Engine/neo-data.adb:919:52    - Unknown word (curlies)      -- dimensionals are wrapped in curlies
Engine/neo-data.adb:927:14    - Unknown word (Single)       -- -- Single dimensional
Engine/neo-data.adb:927:21    - Unknown word (dimensional)  -- -- Single dimensional
Engine/neo-data.adb:953:42    - Unknown word (Amount)       -- Run (Start_Index, Work_Amount : Positive; Is_Last
Engine/neo-data.adb:962:24    - Unknown word (locals)       -- -- Set the locals via a rendevous
Engine/neo-data.adb:962:37    - Unknown word (rendevous)    -- Set the locals via a rendevous
Engine/neo-data.adb:963:43    - Unknown word (Amount)       -- Run (Start_Index, Work_Amount : Positive; Is_Last
Engine/neo-data.adb:968:59    - Unknown word (Amount)       -- Start_Index - 1 + Work_Amount;
Engine/neo-data.adb:983:14    - Unknown word (Probe)        -- -- Probe for primitive count
Engine/neo-data.adb:983:24    - Unknown word (primitive)    -- -- Probe for primitive count hinting
Engine/neo-data.adb:983:40    - Unknown word (hinting)      -- for primitive count hinting
Engine/neo-data.adb:989:50    - Unknown word (character)    -- next non-whitespace character on the current line
Engine/neo-data.adb:997:19    - Unknown word (hinting)      -- -- No hinting... ugh - count them
Engine/neo-data.adb:997:42    - Unknown word (them)         -- hinting... ugh - count them manually
Engine/neo-data.adb:997:47    - Unknown word (manually)     -- .. ugh - count them manually
Engine/neo-data.ads:101:103   - Unknown word (None)         -- Four, Zero_Or_More, None,
Engine/neo-data.ads:101:18    - Unknown word (Amount)       -- type Component_Amount_Kind is (Zero_Or_One
Engine/neo-data.ads:101:25    - Unknown word (Kind)         -- type Component_Amount_Kind is (Zero_Or_One, Zero
Engine/neo-data.ads:101:83    - Unknown word (Four)         -- Zero_To_Three, Zero_To_Four, Zero_Or_More, None
Engine/neo-data.ads:101:97    - Unknown word (More)         -- Zero_To_Four, Zero_Or_More, None,
Engine/neo-data.ads:102:34    - Unknown word (Exactly)      -- Exactly_One, One_Or_Two,  One
Engine/neo-data.ads:102:82    - Unknown word (Four)         -- One_To_Three, One_To_Four, One_Or_More,  Max
Engine/neo-data.ads:102:96    - Unknown word (More)         -- One_To_Four, One_Or_More, Max_One);
Engine/neo-data.ads:104:18    - Unknown word (Kind)         -- type Primitive_Kind is (Bool_Kind,
Engine/neo-data.ads:104:32    - Unknown word (Kind)         -- Primitive_Kind is (Bool_Kind, Bool_x
Engine/neo-data.ads:104:59    - Unknown word (Kind)         -- Bool_x2_Kind, Bool_x3
Engine/neo-data.ads:104:8     - Unknown word (Primitive)    -- type Primitive_Kind is (Bool_Kind,
Engine/neo-data.ads:104:84    - Unknown word (Kind)         -- Bool_x3_Kind,
Engine/neo-data.ads:106:27    - Unknown word (String)       -- String_Kind, String
Engine/neo-data.ads:106:51    - Unknown word (String)       -- String_Kind, String_x2_Kind, String
Engine/neo-data.ads:106:76    - Unknown word (String)       -- String_x2_Kind, String_x3_Kind,
Engine/neo-data.ads:107:27    - Unknown word (String)       -- String_x4_Kind, String
Engine/neo-data.ads:107:51    - Unknown word (String)       -- String_x4_Kind, String_x8_Kind, String
Engine/neo-data.ads:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-data.ads:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-data.ads:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo-data.ads:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-data.ads:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-data.ads:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-data.ads:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-data.ads:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-data.ads:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-data.ads:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-data.ads:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-data.ads:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-data.ads:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-data.ads:124:101   - Unknown word (Unsigned)     -- Unsigned_Int32_Kind, Unsigned_Int64_Kind,
Engine/neo-data.ads:124:27    - Unknown word (Unsigned)     -- Unsigned_Int8_Kind, Unsigned
Engine/neo-data.ads:124:51    - Unknown word (Unsigned)     -- Unsigned_Int8_Kind, Unsigned_Int16_Kind, Unsigned
Engine/neo-data.ads:124:76    - Unknown word (Unsigned)     -- Unsigned_Int16_Kind, Unsigned_Int32_Kind, Unsigned
Engine/neo-data.ads:125:27    - Unknown word (Unsigned)     -- Unsigned_Int8_x2_Kind, Unsigned
Engine/neo-data.ads:130:27    - Unknown word (Structure)    -- Structure_Kind);
Engine/neo-data.ads:132:40    - Unknown word (Primitive)    -- Float_Kind is Primitive_Kind range Float16_Kind
Engine/neo-data.ads:133:40    - Unknown word (Primitive)    -- Float_x2_Kind is Primitive_Kind range Float16_x
Engine/neo-data.ads:134:40    - Unknown word (Primitive)    -- Float_x3_Kind is Primitive_Kind range Float16_x
Engine/neo-data.ads:135:40    - Unknown word (Primitive)    -- Float_x4_Kind is Primitive_Kind range Float16_x
Engine/neo-data.ads:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-data.ads:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-data.ads:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-data.ads:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-data.ads:152:42    - Unknown word (Positive)     -- Primitive_Kind is array (Positive range <>)
Engine/neo-data.ads:155:10    - Unknown word (discriminated) -- -- One discriminated record to rule them
Engine/neo-data.ads:155:39    - Unknown word (them)          -- discriminated record to rule them all...
Engine/neo-data.ads:164:79    - Unknown word (Unbound)       -- : Array_Str_32_Unbound (1..Len);
Engine/neo-data.ads:165:82    - Unknown word (Unbound)       -- : Array_x2_Str_32_Unbound (1..Len, 1..2);
Engine/neo-data.ads:166:82    - Unknown word (Unbound)       -- : Array_x2_Str_32_Unbound (1..Len, 1..3);
Engine/neo-data.ads:167:82    - Unknown word (Unbound)       -- : Array_x2_Str_32_Unbound (1..Len, 1..4);
Engine/neo-data.ads:168:82    - Unknown word (Unbound)       -- : Array_x2_Str_32_Unbound (1..Len, 1..8);
Engine/neo-data.ads:170:115   - Unknown word (Structure)     -- Len); -- Ptr_Structure_State
Engine/neo-data.ads:171:115   - Unknown word (Structure)     -- Len, 1..2);  -- Ptr_Structure_State
Engine/neo-data.ads:172:115   - Unknown word (Structure)     -- Len, 1..3);  -- Ptr_Structure_State
Engine/neo-data.ads:173:115   - Unknown word (Structure)     -- Len, 1..4);  -- Ptr_Structure_State
Engine/neo-data.ads:17:15     - Unknown word (Maps)         -- with Neo.Core.Maps; use Neo.Core
Engine/neo-data.ads:17:42     - Unknown word (Maps)         -- use Neo.Core.Maps;
Engine/neo-data.ads:18:15     - Unknown word (Math)         -- with Neo.Core.Math; use Neo.Core
Engine/neo-data.ads:18:42     - Unknown word (Math)         -- use Neo.Core.Math;
Engine/neo-data.ads:20:15     - Unknown word (Strings)      -- with Neo.Core.Strings; use Neo.Core.Strings
Engine/neo-data.ads:20:42     - Unknown word (Strings)      -- Strings; use Neo.Core.Strings;
Engine/neo-data.ads:22:15     - Unknown word (Vectors)      -- with Neo.Core.Vectors;
Engine/neo-data.ads:23:15     - Unknown word (Ordered)      -- with Neo.Core.Ordered;
Engine/neo-data.ads:24:15     - Unknown word (Hashed)       -- with Neo.Core.Hashed;
Engine/neo-data.ads:252:6     - Unknown word (Represents)    -- -- Represents a property as part of
Engine/neo-data.ads:253:62    - Unknown word (Defaulted)     -- Kind := String_Kind; Defaulted : Bool := False) is
Engine/neo-data.ads:253:82    - Unknown word (False)         -- Defaulted : Bool := False) is record
Engine/neo-data.ads:255:12    - Unknown word (Defaulted)     -- case Defaulted is
Engine/neo-data.ads:256:14    - Unknown word (True)          -- when True => Default
Engine/neo-data.ads:257:14    - Unknown word (False)         -- when False => Overrides_From_Ref
Engine/neo-data.ads:257:23    - Unknown word (Overrides)     -- when False => Overrides_From_Ref : Bool;
Engine/neo-data.ads:25:15     - Unknown word (Hashed)       -- with Neo.Core.Hashed_Indefinite;
Engine/neo-data.ads:25:22     - Unknown word (Indefinite)   -- with Neo.Core.Hashed_Indefinite;
Engine/neo-data.ads:260:58    - Unknown word (False)         -- State := (Bool_Kind, False, Identifier_Str.NULL
Engine/neo-data.ads:260:90    - Unknown word (False)         -- Identifier_Str.NULL_STR, False);
Engine/neo-data.ads:265:7     - Unknown word (Allow)         -- Allow_Arrays : Bool
Engine/neo-data.ads:266:15    - Unknown word (Primitives)    -- Allowed_Primitives : Array_Primitive_Set
Engine/neo-data.ads:278:28    - Unknown word (Amount)        -- type Array_Component_Amount is array (Struct
Engine/neo-data.ads:278:71    - Unknown word (Amount)        -- Struct_T) of Component_Amount_Kind;
Engine/neo-data.ads:279:77    - Unknown word (Amount)        -- of Array_Component_Amount;
Engine/neo-data.ads:286:15    - Unknown word (Structures)    -- Top_Level_Structures : Struct_Types.Array
Engine/neo-data.ads:28:35     - Unknown word (consisting)   -- for the "Data" layer consisting of packages for loading
Engine/neo-data.ads:28:4      - Unknown word (Separator)    -- -- Separator for the "Data" layer
Engine/neo-data.ads:28:62     - Unknown word (loading)      -- consisting of packages for loading and understanding file
Engine/neo-data.ads:28:74     - Unknown word (understanding) -- packages for loading and understanding file formats
Engine/neo-data.ads:28:93     - Unknown word (formats)       -- and understanding file formats
Engine/neo-data.ads:293:17    - Unknown word (Mismatch)      -- Component_Mismatch,
Engine/neo-data.ads:294:11    - Unknown word (Hierarchy)     -- Bad_Hierarchy,
Engine/neo-data.ads:297:7     - Unknown word (Unexpected)    -- Unexpected_Primitive_Array,
Engine/neo-data.ads:298:25    - Unknown word (Literal)       -- Invalid_Data_Type_Literal,
Engine/neo-data.ads:298:7     - Unknown word (Invalid)       -- Invalid_Data_Type_Literal,
Engine/neo-data.ads:299:25    - Unknown word (Literal)       -- Invalid_Structure_Literal,
Engine/neo-data.ads:299:7     - Unknown word (Invalid)       -- Invalid_Structure_Literal,
Engine/neo-data.ads:300:15    - Unknown word (Escape)        -- Invalid_Escape_Character,
Engine/neo-data.ads:300:22    - Unknown word (Character)     -- Invalid_Escape_Character,
Engine/neo-data.ads:300:7     - Unknown word (Invalid)       -- Invalid_Escape_Character,
Engine/neo-data.ads:301:22    - Unknown word (Valued)        -- Invalid_Hex_In_Valued_Character,
Engine/neo-data.ads:301:29    - Unknown word (Character)     -- Invalid_Hex_In_Valued_Character,
Engine/neo-data.ads:301:7     - Unknown word (Invalid)       -- Invalid_Hex_In_Valued_Character
Engine/neo-data.ads:302:15    - Unknown word (Character)     -- Invalid_Character,
Engine/neo-data.ads:302:7     - Unknown word (Invalid)       -- Invalid_Character,
Engine/neo-data.ads:303:21    - Unknown word (Literal)       -- Invalid_Float_Literal,
Engine/neo-data.ads:304:15    - Unknown word (Character)     -- Invalid_Character_Literal,
Engine/neo-data.ads:304:25    - Unknown word (Literal)       -- Invalid_Character_Literal,
Engine/neo-data.ads:306:11    - Unknown word (Overflow)      -- Int_Overflow,
Engine/neo-data.ads:307:7     - Unknown word (Undefined)     -- Undefined_Property,
Engine/neo-data.ads:308:18    - Unknown word (Expected)      -- Identifier_Expected,
Engine/neo-data.ads:309:28    - Unknown word (Scope)         -- Local_Name_In_Global_Scope,
Engine/neo-data.ads:311:29    - Unknown word (Present)       -- Required_Property_Not_Present,
Engine/neo-data.ads:311:7     - Unknown word (Required)      -- Required_Property_Not_Present
Engine/neo-data.ads:313:15    - Unknown word (Characters)    -- Invalid_Characters_In_Identifier,
Engine/neo-data.ads:314:7     - Unknown word (Disallowed)    -- Disallowed_Structure_At_Top_Level
Engine/neo-data.ads:316:10    - Unknown word (Recursive)     -- -- Recursive structure optimized
Engine/neo-data.ads:316:20    - Unknown word (structure)     -- -- Recursive structure optimized for external
Engine/neo-data.ads:316:30    - Unknown word (optimized)     -- Recursive structure optimized for external parsing
Engine/neo-data.ads:316:53    - Unknown word (parsing)       -- optimized for external parsing of the OpenDDL tree
Engine/neo-data.ads:316:81    - Unknown word (structure)     -- of the OpenDDL tree structure
Engine/neo-data.ads:320:15    - Unknown word (Hashed)        -- package Hashed_Ptr_Structure_State
Engine/neo-data.ads:320:58    - Unknown word (Hashed)        -- State is new Neo.Core.Hashed (Ptr_Structure_State
Engine/neo-data.ads:320:93    - Unknown word (Hashed)        -- Structure_State); use Hashed_Ptr_Structure_State
Engine/neo-data.ads:321:15    - Unknown word (Vector)        -- package Vector_Ptr_Structure_State
Engine/neo-data.ads:321:58    - Unknown word (Vectors)       -- State is new Neo.Core.Vectors (Ptr_Structure_State
Engine/neo-data.ads:321:93    - Unknown word (Vector)        -- Structure_State); use Vector_Ptr_Structure_State
Engine/neo-data.ads:323:46    - Unknown word (False)         -- Bool := False;
Engine/neo-data.ads:329:84    - Unknown word (Unsafe)        -- Structure_State.Ptr_Unsafe_Map := null;
Engine/neo-data.ads:32:6      - Unknown word (Binary)        -- -- Binary --
Engine/neo-data.ads:330:84    - Unknown word (Unsafe)        -- Structure_State.Ptr_Unsafe_Map := null;
Engine/neo-data.ads:331:53    - Unknown word (Vector)        -- Children : Vector_Ptr_Structure_State
Engine/neo-data.ads:331:84    - Unknown word (Unsafe)        -- Structure_State.Ptr_Unsafe_Vector := null;
Engine/neo-data.ads:331:91    - Unknown word (Vector)        -- Structure_State.Ptr_Unsafe_Vector := null;
Engine/neo-data.ads:337:20    - Unknown word (conversions)   -- -- Reference conversions
Engine/neo-data.ads:341:14    - Unknown word (actual)        -- -- The actual file result type and
Engine/neo-data.ads:342:30    - Unknown word (Controlled)    -- type File_State is new Controlled with record
Engine/neo-data.ads:345:11    - Unknown word (Structures)    -- Structures : Vector_Ptr_Structure
Engine/neo-data.ads:345:30    - Unknown word (Vector)        -- Structures : Vector_Ptr_Structure_State
Engine/neo-data.ads:345:57    - Unknown word (Unsafe)        -- Ptr_Structure_State.Unsafe.Vector;
Engine/neo-data.ads:346:17    - Unknown word (Structures)    -- Named_Structures : Hashed_Ptr_Structure
Engine/neo-data.ads:346:57    - Unknown word (Unsafe)        -- Ptr_Structure_State.Unsafe.Map;
Engine/neo-data.ads:352:10    - Unknown word (Getters)       -- -- Getters
Engine/neo-data.ads:353:21    - Unknown word (Possible)      -- function Get (Possible_Matches : Array_Ptr
Engine/neo-data.ads:353:30    - Unknown word (Matches)       -- function Get (Possible_Matches : Array_Ptr_Structure
Engine/neo-data.ads:353:83    - Unknown word (Prop)          -- State; Prop, Val : Str_32) return
Engine/neo-data.ads:354:83    - Unknown word (Prop)         -- : Struct_T;       Prop, Val : Str_32) return
Engine/neo-data.ads:355:83    - Unknown word (Prop)         -- Path : Array_Struct_T; Prop, Val : Str_32) return
Engine/neo-data.ads:356:83    - Unknown word (Prop)         -- : Struct_T;       Prop, Val : Str_32; Kind
Engine/neo-data.ads:357:83    - Unknown word (Prop)         -- Path : Array_Struct_T; Prop, Val : Str_32; Kind
Engine/neo-data.ads:35:13     - Unknown word (binary)        -- -- Load a binary file with optional padding
Engine/neo-data.ads:35:30     - Unknown word (optional)      -- Load a binary file with optional padding specified in
Engine/neo-data.ads:35:39     - Unknown word (padding)       -- binary file with optional padding specified in bytes
Engine/neo-data.ads:35:47     - Unknown word (specified)     -- with optional padding specified in bytes (needed for
Engine/neo-data.ads:35:60     - Unknown word (bytes)         -- padding specified in bytes (needed for SPIR-V shaders
Engine/neo-data.ads:35:67     - Unknown word (needed)        -- specified in bytes (needed for SPIR-V shaders among
Engine/neo-data.ads:35:78     - Unknown word (SPIR)          -- in bytes (needed for SPIR-V shaders among other
Engine/neo-data.ads:35:85     - Unknown word (shaders)       -- bytes (needed for SPIR-V shaders among other things)
Engine/neo-data.ads:35:93     - Unknown word (among)         -- needed for SPIR-V shaders among other things)
Engine/neo-data.ads:35:99     - Unknown word (other)         -- SPIR-V shaders among other things)
Engine/neo-data.ads:36:30     - Unknown word (Padding)       -- function Load (Path : Str; Padding : Positive := 1) return
Engine/neo-data.ads:36:40     - Unknown word (Positive)      -- Path : Str; Padding : Positive := 1) return Array_Byte
Engine/neo-data.ads:38:11     - Unknown word (through)       -- -- Seek through a file by a certain
Engine/neo-data.ads:38:31     - Unknown word (certain)       -- through a file by a certain number of bytes
Engine/neo-data.ads:38:49     - Unknown word (bytes)         -- a certain number of bytes
Engine/neo-data.ads:38:6      - Unknown word (Seek)          -- -- Seek through a file by a
Engine/neo-data.ads:39:13     - Unknown word (Skip)          -- procedure Skip (File : in out Ada.Streams
Engine/neo-data.ads:39:66     - Unknown word (Bytes)         -- Stream_IO.File_Type; Bytes : Positive);
Engine/neo-data.ads:39:74     - Unknown word (Positive)      -- IO.File_Type; Bytes : Positive);
Engine/neo-data.ads:45:108    - Unknown word (grouping)      -- rounded braces for grouping, quotes for
Engine/neo-data.ads:45:36     - Unknown word (Added)         -- ARM BNF for OpenDDL. Added conventions are "to
Engine/neo-data.ads:45:42     - Unknown word (conventions)   -- BNF for OpenDDL. Added conventions are "to" for range between
Engine/neo-data.ads:45:6      - Unknown word (Modified)      -- -- Modified ARM BNF for OpenDDL
Engine/neo-data.ads:45:73     - Unknown word (between)       -- onventions are "to" for range between digits, rounded braces
Engine/neo-data.ads:45:89     - Unknown word (rounded)       -- range between digits, rounded braces for grouping
Engine/neo-data.ads:45:97     - Unknown word (braces)        -- between digits, rounded braces for grouping, quotes
Engine/neo-data.ads:46:19     - Unknown word (various)       -- -- escaping the various braces (e.g. "{" for
Engine/neo-data.ads:46:27     - Unknown word (braces)        -- escaping the various braces (e.g. "{" for {, "[
Engine/neo-data.ads:46:6      - Unknown word (escaping)      -- -- escaping the various braces
Engine/neo-data.ads:46:65     - Unknown word (cetera)        -- for {, "[" for [, et cetera), and "* #" for repetative
Engine/neo-data.ads:46:88     - Unknown word (repetative)    -- cetera), and "* #" for repetative items.
Engine/neo-data.ads:52:30     - Unknown word (ascii)         -- identifier ::= ascii-letter | {[_] (ascii
Engine/neo-data.ads:52:51     - Unknown word (ascii)         -- ascii-letter | {[_] (ascii-letter | digit)}
Engine/neo-data.ads:52:66     - Unknown word (digit)         -- [_] (ascii-letter | digit)}
Engine/neo-data.ads:58:12     - Unknown word (digit)         -- -- hex-digit ::= digit |
Engine/neo-data.ads:58:30     - Unknown word (digit)         -- hex-digit ::= digit | A to F | a to f
Engine/neo-data.ads:59:14     - Unknown word (digit)         -- -- octal-digit ::= 0 to 7
Engine/neo-data.ads:59:8      - Unknown word (octal)         -- -- octal-digit ::= 0 to
Engine/neo-data.ads:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo-data.ads:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo-data.ads:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo-data.ads:60:15     - Unknown word (digit)         -- -- binary-digit ::= 0 | 1
Engine/neo-data.ads:60:8      - Unknown word (binary)        -- -- binary-digit ::= 0 |
Engine/neo-data.ads:62:6      - Unknown word (Characters)    -- -- Characters:
Engine/neo-data.ads:64:15     - Unknown word (character)     -- -- escape-character ::= \ (" | ' | ? |
Engine/neo-data.ads:64:8      - Unknown word (escape)        -- -- escape-character ::= \ ("
Engine/neo-data.ads:65:30     - Unknown word (escape)        -- character ::= escape-character | visible
Engine/neo-data.ads:65:37     - Unknown word (character)     -- character ::= escape-character | visible-ascii-character
Engine/neo-data.ads:65:49     - Unknown word (visible)       -- escape-character | visible-ascii-character
Engine/neo-data.ads:65:57     - Unknown word (ascii)         -- character | visible-ascii-character
Engine/neo-data.ads:65:63     - Unknown word (character)     -- character | visible-ascii-character
Engine/neo-data.ads:65:8      - Unknown word (character)     -- -- character ::= escape-character
Engine/neo-data.ads:67:6      - Unknown word (Literals)      -- -- Literals:
Engine/neo-data.ads:69:16     - Unknown word (literal)       -- -- boolean-literal ::= false | true
Engine/neo-data.ads:69:30     - Unknown word (false)         -- boolean-literal ::= false | true
Engine/neo-data.ads:69:38     - Unknown word (true)          -- literal ::= false | true
Engine/neo-data.ads:70:16     - Unknown word (literal)       -- -- decimal-literal ::= digit {[_] digit
Engine/neo-data.ads:70:8      - Unknown word (decimal)       -- -- decimal-literal ::= digit
Engine/neo-data.ads:71:12     - Unknown word (literal)       -- -- hex-literal ::= 0 (x | X)
Engine/neo-data.ads:72:14     - Unknown word (literal)       -- -- octal-literal ::= 0 (o | O) octal
Engine/neo-data.ads:72:40     - Unknown word (octal)         -- literal ::= 0 (o | O) octal-digit {[_] octal-digit
Engine/neo-data.ads:72:57     - Unknown word (octal)         -- O) octal-digit {[_] octal-digit}
Engine/neo-data.ads:72:8      - Unknown word (octal)         -- -- octal-literal ::= 0 (o
Engine/neo-data.ads:73:15     - Unknown word (literal)       -- -- binary-literal ::= 0 (b | B) binary
Engine/neo-data.ads:73:40     - Unknown word (binary)        -- literal ::= 0 (b | B) binary-digit {[_] binary-digit
Engine/neo-data.ads:73:58     - Unknown word (binary)        -- B) binary-digit {[_] binary-digit}
Engine/neo-data.ads:73:8      - Unknown word (binary)        -- -- binary-literal ::= 0 (b
Engine/neo-data.ads:74:8      - Unknown word (character)     -- -- character-literal ::= 'character
Engine/neo-data.ads:75:38     - Unknown word (decimal)       -- literal ::= [+ | -] decimal-literal | (hex-literal
Engine/neo-data.ads:75:71     - Unknown word (octal)         -- literal | (hex-literal | octal-literal | binary-literal
Engine/neo-data.ads:76:38     - Unknown word (decimal)       -- literal ::= [+ | -] decimal-literal [. decimal-literal
Engine/neo-data.ads:76:57     - Unknown word (decimal)       -- decimal-literal [. decimal-literal] [(E | e) integer
Engine/neo-data.ads:77:8      - Unknown word (string)        -- -- string-literal ::= "{character
Engine/neo-data.ads:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-data.ads:81:101    - Unknown word (unsigned)      -- | unsigned_int16 | unsigned_int32 | unsigned_int
Engine/neo-data.ads:81:118    - Unknown word (unsigned)      -- | unsigned_int32 | unsigned_int64
Engine/neo-data.ads:81:68     - Unknown word (unsigned)      -- 6 | int32 | int64 | unsigned_int8 | unsigned_int
Engine/neo-data.ads:81:84     - Unknown word (unsigned)      -- 4 | unsigned_int8 | unsigned_int16 | unsigned_int
Engine/neo-data.ads:82:58     - Unknown word (string)        -- half | float | double | string | ref | type | float
Engine/neo-data.ads:84:82     - Unknown word (string)        -- literal | float-literal | string-literal | reference
Engine/neo-data.ads:88:8      - Unknown word (structure)     -- -- structure ::= (data-type
Engine/neo-data.ads:88:82     - Unknown word (listeral)      -- list] "}" | "[" integer-listeral "]" [name] "{" data
Engine/neo-data.ads:89:35     - Unknown word (indentifier)  -- | (indentifier [name] ["(" [property
Engine/neo-data.ads:89:93     - Unknown word (structure)    -- property}] ")"] "{" {structure} "}")
Engine/neo-data.ads:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-data.ads:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-data.ads:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo-data.ads:90:31     - Unknown word (structure)    -- file ::= {structure}
Engine/neo-data.ads:93:118    - Unknown word (large)        -- multithreading for the extra large ones,
Engine/neo-data.ads:93:124    - Unknown word (ones)         -- for the extra large ones,
Engine/neo-data.ads:93:13     - Unknown word (parsing)      -- -- During parsing we encounter arrays
Engine/neo-data.ads:93:24     - Unknown word (encounter)    -- - During parsing we encounter arrays of things (mostly
Engine/neo-data.ads:93:52     - Unknown word (mostly)       -- encounter arrays of things (mostly floating point), so
Engine/neo-data.ads:93:6      - Unknown word (During)       -- -- During parsing we encounter
Engine/neo-data.ads:94:101    - Unknown word (which)        -- length of arrays at which this behavior gets
Engine/neo-data.ads:94:107    - Unknown word (this)         -- length of arrays at which this behavior gets
Engine/neo-data.ads:94:112    - Unknown word (behavior)     -- arrays at which this behavior gets
Engine/neo-data.ads:94:121    - Unknown word (gets)         -- which this behavior gets
Engine/neo-data.ads:94:24     - Unknown word (parsing)      -- - which, can reduce parsing time in half. The WORKERS
Engine/neo-data.ads:94:58     - Unknown word (THRESHOLD)    -- in half. The WORKERS_THRESHOLD controls the length
Engine/neo-data.ads:94:6      - Unknown word (which)        -- -- which, can reduce parsing
Engine/neo-data.ads:94:81     - Unknown word (length)       -- THRESHOLD controls the length of arrays at which this
Engine/neo-data.ads:96:11     - Unknown word (THRESHOLD)    -- WORKERS_THRESHOLD : Positive := 7_500
Engine/neo-data.ads:96:23     - Unknown word (Positive)     -- WORKERS_THRESHOLD : Positive := 7_500;
Engine/neo-data.ads:97:23     - Unknown word (Positive)     -- WORKER_COUNT : Positive := 8;
Engine/neo-engine.adb:101:6     - Unknown word (Clipboard)    -- -- Clipboard --
Engine/neo-engine.adb:104:12    - Unknown word (Paste)        -- function Paste return Str renames System
Engine/neo-engine.adb:104:44    - Unknown word (Paste)        -- return Str renames System.Paste;
Engine/neo-engine.adb:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-engine.adb:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-engine.adb:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo-engine.adb:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-engine.adb:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-engine.adb:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-engine.adb:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-engine.adb:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-engine.adb:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-engine.adb:111:31    - Unknown word (Library)      -- procedure Initialize_Vulkan_Library
Engine/neo-engine.adb:111:95    - Unknown word (Library)      -- System.Initialize_Vulkan_Library;
Engine/neo-engine.adb:112:29    - Unknown word (Library)      -- procedure Finalize_Vulkan_Library
Engine/neo-engine.adb:113:26    - Unknown word (Surface)      -- function Create_Vulkan_Surface (Instance : Ptr) return
Engine/neo-engine.adb:113:91    - Unknown word (Surface)      -- System.Create_Vulkan_Surface;
Engine/neo-engine.adb:114:23    - Unknown word (Subprogram)   -- function Get_Vulkan_Subprogram (Name     : Str) return
Engine/neo-engine.adb:114:88    - Unknown word (Subprogram)   -- renames System.Get_Vulkan_Subprogram;
Engine/neo-engine.adb:115:44    - Unknown word (Char)         -- Extension return Ptr_Char_8_C renames
Engine/neo-engine.adb:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-engine.adb:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-engine.adb:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-engine.adb:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-engine.adb:122:62    - Unknown word (Unsafe)       -- Unchecked_Deallocation (Task_Unsafe, Task_Unsafe_Ptr);
Engine/neo-engine.adb:122:75    - Unknown word (Unsafe)       -- allocation (Task_Unsafe, Task_Unsafe_Ptr);
Engine/neo-engine.adb:123:22    - Unknown word (Unsafe)       -- task body Task_Unsafe is
Engine/neo-engine.adb:126:37    - Unknown word (Occurrence)   -- Run; exception when Occurrence: others => Handle (Occurrence
Engine/neo-engine.adb:126:59    - Unknown word (Handle)       -- Occurrence: others => Handle (Occurrence); end;
Engine/neo-engine.adb:126:67    - Unknown word (Occurrence)   -- Occurrence: others => Handle (Occurrence); end;
Engine/neo-engine.adb:129:22    - Unknown word (Safe)         -- protected body Safe_Task is
Engine/neo-engine.adb:132:61    - Unknown word (Terminated)   -- TASK_ID and then not Is_Terminated (Current_id) then return
Engine/neo-engine.adb:133:40    - Unknown word (Unsafe)       -- Current_Task := new Task_Unsafe;
Engine/neo-engine.adb:135:13    - Unknown word (potentially)  -- -- warning: potentially blocking operation in
Engine/neo-engine.adb:135:25    - Unknown word (blocking)     -- warning: potentially blocking operation in protected
Engine/neo-engine.adb:136:8     - Unknown word (Warnings)     -- pragma Warnings (Off);
Engine/neo-engine.adb:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-engine.adb:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-engine.adb:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-engine.adb:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-engine.adb:142:55    - Unknown word (Terminated)   -- NULL_TASK_ID or else Is_Terminated (Current_id) then return
Engine/neo-engine.adb:144:8     - Unknown word (Warnings)     -- pragma Warnings (On);
Engine/neo-engine.adb:152:54    - Unknown word (Terminated)   -- Task /= null and not Is_Terminated (Current_Id);
Engine/neo-engine.adb:153:45    - Unknown word (False)        -- when others => return False; end;
Engine/neo-engine.adb:158:12    - Unknown word (Handing)      -- -- Error Handing --
Engine/neo-engine.adb:163:32    - Unknown word (Safe)         -- Task : Console_Tasks.Safe_Task;
Engine/neo-engine.adb:167:124   - Unknown word (appear)       -- for console window to appear
Engine/neo-engine.adb:167:97    - Unknown word (wait)         -- end; -- We delay to wait for console window to
Engine/neo-engine.adb:171:43    - Unknown word (Webpage)      -- is begin System.Open_Webpage (CONSOLE_ERROR_REPORTING
Engine/neo-engine.adb:171:66    - Unknown word (REPORTING)   -- Webpage (CONSOLE_ERROR_REPORTING_URL); end;
Engine/neo-engine.adb:180:11    - Unknown word (Element)     -- for Element of Log loop Char'Write
Engine/neo-engine.adb:180:31    - Unknown word (Char)        -- Element of Log loop Char'Write (File_Stream,
Engine/neo-engine.adb:180:56    - Unknown word (Element)     -- Write (File_Stream, Element); end loop;
Engine/neo-engine.adb:185:28    - Unknown word (prompt)      -- Display a message-box prompt, if this fails we have
Engine/neo-engine.adb:185:39    - Unknown word (this)        -- message-box prompt, if this fails we have serious
Engine/neo-engine.adb:185:44    - Unknown word (fails)       -- box prompt, if this fails we have serious problems
Engine/neo-engine.adb:185:53    - Unknown word (have)        -- prompt, if this fails we have serious problems
Engine/neo-engine.adb:185:58    - Unknown word (serious)     -- if this fails we have serious problems
Engine/neo-engine.adb:186:57    - Unknown word (Okay)        -- Buttons : Buttons_Kind := Okay_Button; Icon : Icon
Engine/neo-engine.adb:186:70    - Unknown word (Icon)        -- Kind := Okay_Button; Icon : Icon_Kind := No_Icon
Engine/neo-engine.adb:186:77    - Unknown word (Icon)        -- Okay_Button; Icon : Icon_Kind := No_Icon) return
Engine/neo-engine.adb:186:93    - Unknown word (Icon)        -- Icon : Icon_Kind := No_Icon) return Bool renames
Engine/neo-engine.adb:188:27    - Unknown word (including)   -- Called by all tasks (including the main execution)
Engine/neo-engine.adb:188:41    - Unknown word (main)        -- tasks (including the main execution) during an
Engine/neo-engine.adb:188:57    - Unknown word (during)      -- the main execution) during an error to report exception
Engine/neo-engine.adb:188:6     - Unknown word (Called)      -- -- Called by all tasks (including
Engine/neo-engine.adb:189:13    - Unknown word (Handle)      -- procedure Handle (Occurrence : Exception
Engine/neo-engine.adb:189:21    - Unknown word (Occurrence)  -- procedure Handle (Occurrence : Exception_Occurrence
Engine/neo-engine.adb:189:44    - Unknown word (Occurrence)  -- Occurrence : Exception_Occurrence) is
Engine/neo-engine.adb:192:40    - Unknown word (Occurrence)  -- (Exception_Name (Occurrence)));
Engine/neo-engine.adb:194:50    - Unknown word (Wide)        -- & System.Last_Error'Wide_Image);
Engine/neo-engine.adb:204:19    - Unknown word (Exceptions)  -- procedure Check_Exceptions
Engine/neo-engine.adb:204:68    - Unknown word (Exceptions)  -- renames CPU.Check_Exceptions;
Engine/neo-engine.adb:205:17    - Unknown word (Rounding)    -- procedure Set_Rounding (Val : Rounding_Kind
Engine/neo-engine.adb:205:34    - Unknown word (Rounding)    -- Set_Rounding (Val : Rounding_Kind) renames CPU.Set
Engine/neo-engine.adb:205:66    - Unknown word (Rounding)    -- Kind) renames CPU.Set_Rounding;
Engine/neo-engine.adb:207:21    - Unknown word (Empty)       -- function Is_Stack_Empty return Bool
Engine/neo-engine.adb:207:71    - Unknown word (Empty)       -- renames CPU.Is_Stack_Empty;
Engine/neo-engine.adb:20:26     - Unknown word (Border)       -- procedure Resize (To : Border_State) is begin null
Engine/neo-engine.adb:210:15    - Unknown word (comma)       -- -- Return a comma-separated string with
Engine/neo-engine.adb:210:21    - Unknown word (separated)   -- -- Return a comma-separated string with all of the
Engine/neo-engine.adb:210:31    - Unknown word (string)      -- Return a comma-separated string with all of the CPU
Engine/neo-engine.adb:210:69    - Unknown word (listed)      -- of the CPU extensions listed
Engine/neo-engine.adb:213:25    - Unknown word (helper)      -- -- Result state and helper function to make it
Engine/neo-engine.adb:213:56    - Unknown word (pretty)      -- function to make it all pretty
Engine/neo-engine.adb:214:18    - Unknown word (Unbound)     -- Result : Str_Unbound := NULL_STR_UNBOUND
Engine/neo-engine.adb:214:38    - Unknown word (UNBOUND)     -- Unbound := NULL_STR_UNBOUND;
Engine/neo-engine.adb:225:16    - Unknown word (Vendor)      -- case CPU.Vendor is
Engine/neo-engine.adb:226:23    - Unknown word (RISC)        -- when Advanced_RISC_Machines_Vendor =>
Engine/neo-engine.adb:226:37    - Unknown word (Vendor)      -- Advanced_RISC_Machines_Vendor =>
Engine/neo-engine.adb:228:22    - Unknown word (Vector)      -- if CPU.Has_Vector_Floating_Point
Engine/neo-engine.adb:229:33    - Unknown word (Vendor)      -- when Apple_IBM_Motorola_Vendor =>
Engine/neo-engine.adb:230:22    - Unknown word (Vector)      -- if CPU.Has_Vector_Multimedia_Instructions
Engine/neo-engine.adb:230:29    - Unknown word (Multimedia)  -- if CPU.Has_Vector_Multimedia_Instructions
Engine/neo-engine.adb:230:40    - Unknown word (Instructions) -- Has_Vector_Multimedia_Instructions then Put
Engine/neo-engine.adb:231:22    - Unknown word (Vector)       -- if CPU.Has_Vector_Scalar_Instructions
Engine/neo-engine.adb:231:29    - Unknown word (Scalar)       -- if CPU.Has_Vector_Scalar_Instructions
Engine/neo-engine.adb:231:36    - Unknown word (Instructions) -- CPU.Has_Vector_Scalar_Instructions then
Engine/neo-engine.adb:232:22    - Unknown word (Altivec)      -- if CPU.Has_Altivec_Additional_Registers
Engine/neo-engine.adb:232:30    - Unknown word (Additional)   -- if CPU.Has_Altivec_Additional_Registers
Engine/neo-engine.adb:232:41    - Unknown word (Registers)    -- Has_Altivec_Additional_Registers then Put
Engine/neo-engine.adb:233:22    - Unknown word (Altivec)      -- if CPU.Has_Altivec
Engine/neo-engine.adb:233:88    - Unknown word (Altivec)      -- then Put_Into_Result ("Altivec"); end if;
Engine/neo-engine.adb:234:20    - Unknown word (Vendor)       -- when Intel_Vendor | Advanced_Micro_Devices
Engine/neo-engine.adb:234:52    - Unknown word (Vendor)       -- Advanced_Micro_Devices_Vendor =>
Engine/neo-engine.adb:235:22    - Unknown word (Multi)        -- if CPU.Has_Multi_Media_Extensions
Engine/neo-engine.adb:239:50    - Unknown word (Supplement)   -- Streaming_SIMD_Extensions_3_Supplement then Put_Into_Result
Engine/neo-engine.adb:239:88    - Unknown word (SSSE)         -- then Put_Into_Result ("SSSE3"); end if;
Engine/neo-engine.adb:23:6      - Unknown word (Subunits)     -- -- Subunits --
Engine/neo-engine.adb:242:22    - Unknown word (Carryless)    -- if CPU.Has_Carryless_Multiplication_Of_Two
Engine/neo-engine.adb:242:32    - Unknown word (Multiplication) -- if CPU.Has_Carryless_Multiplication_Of_Two_64_Bit then
Engine/neo-engine.adb:242:88    - Unknown word (PCLMULQDQ)      -- then Put_Into_Result ("PCLMULQDQ"); end if;
Engine/neo-engine.adb:243:31    - Unknown word (Vector)         -- if CPU.Has_Advanced_Vector_Extensions_Enabled
Engine/neo-engine.adb:246:88    - Unknown word (FXSR)           -- then Put_Into_Result ("FXSR"); end if;
Engine/neo-engine.adb:247:26    - Unknown word (Manipulation)   -- if CPU.Has_Bit_Manipulation_Extensions_1
Engine/neo-engine.adb:248:26    - Unknown word (Manipulation)   -- if CPU.Has_Bit_Manipulation_Extensions_2
Engine/neo-engine.adb:249:22    - Unknown word (Fused)          -- if CPU.Has_Fused_Multiply_Add_3
Engine/neo-engine.adb:249:28    - Unknown word (Multiply)       -- if CPU.Has_Fused_Multiply_Add_3
Engine/neo-engine.adb:250:22    - Unknown word (Fused)          -- if CPU.Has_Fused_Multiply_Add_4
Engine/neo-engine.adb:250:28    - Unknown word (Multiply)       -- if CPU.Has_Fused_Multiply_Add_4
Engine/neo-engine.adb:251:22    - Unknown word (Hyperthreading) -- if CPU.Has_Hyperthreading
Engine/neo-engine.adb:252:37    - Unknown word (Convert)        -- CPU.Has_High_Precision_Convert
Engine/neo-engine.adb:253:52    - Unknown word (Convert)        -- Precision_Floating_Point_Convert then Put_Into_Result
Engine/neo-engine.adb:254:88    - Unknown word (OSXSAVE)        -- then Put_Into_Result ("OSXSAVE"); end if;
Engine/neo-engine.adb:255:22    - Unknown word (Population)     -- if CPU.Has_Population_Count
Engine/neo-engine.adb:255:88    - Unknown word (POPCNT)         -- then Put_Into_Result ("POPCNT"); end if;
Engine/neo-engine.adb:256:88    - Unknown word (INVPCID)        -- then Put_Into_Result ("INVPCID"); end if;
Engine/neo-engine.adb:257:88    - Unknown word (CMOV)           -- then Put_Into_Result ("CMOV"); end if;
Engine/neo-engine.adb:258:22    - Unknown word (Leading)        -- if CPU.Has_Leading_Zero_Count
Engine/neo-engine.adb:258:88    - Unknown word (LZCNT)          -- then Put_Into_Result ("LZCNT"); end if;
Engine/neo-engine.adb:262:54    - Unknown word (Supplement)     -- Streaming_SIMD_Extensions_4_Supplement then Put_Into_Result
Engine/neo-engine.adb:264:32    - Unknown word (Supplement)     -- if CPU.Has_3DNow_Supplement
Engine/neo-engine.adb:265:26    - Unknown word (Multi)          -- if CPU.Has_Multi_Media_Extensions_Supplement
Engine/neo-engine.adb:265:49    - Unknown word (Supplement)     -- Multi_Media_Extensions_Supplement then Put_Into_Result
Engine/neo-engine.adb:26:19     - Unknown word (dependant)    -- -- Architecture dependant subprograms
Engine/neo-engine.adb:26:29     - Unknown word (subprograms)  -- Architecture dependant subprograms
Engine/neo-engine.adb:26:6      - Unknown word (Architecture) -- -- Architecture dependant subprograms
Engine/neo-engine.adb:273:6     - Unknown word (Windowing)      -- -- Windowing --
Engine/neo-engine.adb:277:43    - Unknown word (Border)         -- Windows return Vector_Border.Unsafe_Array renames
Engine/neo-engine.adb:282:24    - Unknown word (Multi)          -- procedure Initialize_Multi_Monitor
Engine/neo-engine.adb:284:13    - Unknown word (Minimize)       -- procedure Minimize
Engine/neo-engine.adb:284:78    - Unknown word (Minimize)       -- renames System.Minimize;
Engine/neo-engine.adb:285:13    - Unknown word (Maximize)       -- procedure Maximize
Engine/neo-engine.adb:285:78    - Unknown word (Maximize)       -- renames System.Maximize;
Engine/neo-engine.adb:288:20    - Unknown word (respecting)     -- -- Resize window respecting minimum narrow and wide
Engine/neo-engine.adb:288:31    - Unknown word (minimum)        -- Resize window respecting minimum narrow and wide aspect
Engine/neo-engine.adb:288:39    - Unknown word (narrow)         -- window respecting minimum narrow and wide aspect ratios
Engine/neo-engine.adb:288:50    - Unknown word (wide)           -- respecting minimum narrow and wide aspect ratios
Engine/neo-engine.adb:288:55    - Unknown word (aspect)         -- minimum narrow and wide aspect ratios
Engine/neo-engine.adb:288:62    - Unknown word (ratios)         -- narrow and wide aspect ratios
Engine/neo-engine.adb:289:3     - Unknown word (MINIMUM)        -- MINIMUM_FACTOR : constant Int
Engine/neo-engine.adb:291:24    - Unknown word (Bottom)         -- Bottom_Right_Resize, Bottom
Engine/neo-engine.adb:291:45    - Unknown word (Bottom)         -- Bottom_Right_Resize, Bottom_Left_Resize, Bottom
Engine/neo-engine.adb:291:65    - Unknown word (Bottom)         -- Bottom_Left_Resize, Bottom_Resize, Other_Resize
Engine/neo-engine.adb:291:83    - Unknown word (Other)          -- Resize, Bottom_Resize,    Other_Resize);
Engine/neo-engine.adb:294:49    - Unknown word (Decoration)     -- State := System.Get_Decoration;
Engine/neo-engine.adb:294:5     - Unknown word (Decoration)     -- Decoration : Border_State
Engine/neo-engine.adb:295:11    - Unknown word (Width)          -- Extra_Width : Int := Decoration
Engine/neo-engine.adb:295:29    - Unknown word (Decoration)     -- Extra_Width : Int := Decoration.Right + Decoration
Engine/neo-engine.adb:295:49    - Unknown word (Decoration)     -- Decoration.Right + Decoration.Left;
Engine/neo-engine.adb:296:11    - Unknown word (Height)         -- Extra_Height : Int := Decoration
Engine/neo-engine.adb:296:40    - Unknown word (Bottom)         -- : Int := Decoration.Bottom + Decoration.Top;
Engine/neo-engine.adb:297:13    - Unknown word (Width)          -- Current_Width : Int := (if Border
Engine/neo-engine.adb:297:153   - Unknown word (Width)          -- Border.Left - Extra_Width);
Engine/neo-engine.adb:297:69    - Unknown word (Width)          -- Border.Left - Extra_Width < MINIMUM_FACTOR then
Engine/neo-engine.adb:297:78    - Unknown word (MINIMUM)        -- Left - Extra_Width  < MINIMUM_FACTOR then MINIMUM
Engine/neo-engine.adb:297:98    - Unknown word (MINIMUM)        -- MINIMUM_FACTOR then MINIMUM_FACTOR else Border.Right
Engine/neo-engine.adb:298:102   - Unknown word (Narrow)         -- MINIMUM_FACTOR * Aspect_Narrow_Y.Get / Aspect_Narrow
Engine/neo-engine.adb:298:117   - Unknown word (Aspect)         -- Aspect_Narrow_Y.Get / Aspect_Narrow_X.Get then
Engine/neo-engine.adb:298:124   - Unknown word (Narrow)         -- Narrow_Y.Get / Aspect_Narrow_X.Get then
Engine/neo-engine.adb:298:13    - Unknown word (Height)         -- Current_Height : Int := (if Border
Engine/neo-engine.adb:298:40    - Unknown word (Bottom)         -- : Int := (if Border.Bottom - Border.Top  - Extra
Engine/neo-engine.adb:298:69    - Unknown word (Height)         -- Border.Top - Extra_Height < MINIMUM_FACTOR * Aspect
Engine/neo-engine.adb:298:78    - Unknown word (MINIMUM)        -- Top - Extra_Height < MINIMUM_FACTOR * Aspect_Narrow
Engine/neo-engine.adb:298:95    - Unknown word (Aspect)         -- Height < MINIMUM_FACTOR * Aspect_Narrow_Y.Get / Aspect
Engine/neo-engine.adb:299:128   - Unknown word (Height)         -- Border.Top - Extra_Height);
Engine/neo-engine.adb:299:29    - Unknown word (MINIMUM)        -- MINIMUM_FACTOR * Aspect_Narrow
Engine/neo-engine.adb:299:46    - Unknown word (Aspect)         -- MINIMUM_FACTOR * Aspect_Narrow_Y.Get / Aspect
Engine/neo-engine.adb:299:53    - Unknown word (Narrow)         -- MINIMUM_FACTOR * Aspect_Narrow_Y.Get / Aspect_Narrow
Engine/neo-engine.adb:299:68    - Unknown word (Aspect)         -- Aspect_Narrow_Y.Get / Aspect_Narrow_X.Get else Border
Engine/neo-engine.adb:299:75    - Unknown word (Narrow)         -- Narrow_Y.Get / Aspect_Narrow_X.Get else Border.Bottom
Engine/neo-engine.adb:300:13    - Unknown word (Width)          -- Maximum_Width : Int := Current_Height
Engine/neo-engine.adb:300:37    - Unknown word (Height)         -- Width : Int := Current_Height * Aspect_Narrow_X.Get
Engine/neo-engine.adb:300:46    - Unknown word (Aspect)         -- := Current_Height * Aspect_Narrow_X.Get / Aspect
Engine/neo-engine.adb:300:5     - Unknown word (Maximum)        -- Maximum_Width : Int := Current
Engine/neo-engine.adb:300:53    - Unknown word (Narrow)         -- Current_Height * Aspect_Narrow_X.Get / Aspect_Narrow
Engine/neo-engine.adb:301:5     - Unknown word (Maximum)        -- Maximum_Height : Int := Current
Engine/neo-engine.adb:301:53    - Unknown word (Wide)           -- Current_Width * Aspect_Wide_Y.Get / Aspect_Wide
Engine/neo-engine.adb:301:75    - Unknown word (Wide)           -- Wide_Y.Get / Aspect_Wide_X.Get;
Engine/neo-engine.adb:302:5     - Unknown word (Minimum)        -- Minimum_Width : Int := Current
Engine/neo-engine.adb:302:53    - Unknown word (Wide)           -- Current_Height * Aspect_Wide_X.Get / Aspect_Wide
Engine/neo-engine.adb:302:75    - Unknown word (Wide)           -- Wide_X.Get / Aspect_Wide_Y.Get;
Engine/neo-engine.adb:303:5     - Unknown word (Minimum)        -- Minimum_Height : Int := Current
Engine/neo-engine.adb:304:108   - Unknown word (Minimum)        -- elsif Current_Width  < Minimum_Width then Minimum
Engine/neo-engine.adb:304:128   - Unknown word (Minimum)        -- Minimum_Width then Minimum_Width else Current
Engine/neo-engine.adb:304:50    - Unknown word (Maximum)        -- if Current_Width  > Maximum_Width then Maximum
Engine/neo-engine.adb:304:70    - Unknown word (Maximum)        -- Maximum_Width then Maximum_Width elsif Current
Engine/neo-engine.adb:305:108   - Unknown word (Minimum)       -- elsif Current_Height < Minimum_Height then Minimum
Engine/neo-engine.adb:305:50    - Unknown word (Maximum)        -- if Current_Height > Maximum_Height then Maximum
Engine/neo-engine.adb:32:16     - Unknown word (checking)     -- -- Stack checking
Engine/neo-engine.adb:336:12    - Unknown word (Other)         -- when Other_Resize => Result :=
Engine/neo-engine.adb:347:24    - Unknown word (Style)         -- procedure Set_Cursor_Style (Kind    : Cursor_Kind
Engine/neo-engine.adb:347:81    - Unknown word (Style)         -- renames System.Set_Cursor_Style;
Engine/neo-engine.adb:348:13    - Unknown word (Clip)          -- procedure Clip_Cursor (Do_Clip
Engine/neo-engine.adb:348:34    - Unknown word (Clip)          -- Clip_Cursor (Do_Clip : Bool := True) renames
Engine/neo-engine.adb:348:49    - Unknown word (True)          -- (Do_Clip : Bool := True) renames System.Clip
Engine/neo-engine.adb:348:70    - Unknown word (Clip)          -- True) renames System.Clip_Cursor;
Engine/neo-engine.adb:349:13    - Unknown word (Hide)          -- procedure Hide_Cursor (Do_Hide
Engine/neo-engine.adb:349:34    - Unknown word (Hide)          -- Hide_Cursor (Do_Hide : Bool := True) renames
Engine/neo-engine.adb:349:49    - Unknown word (True)          -- (Do_Hide : Bool := True) renames System.Hide
Engine/neo-engine.adb:349:70    - Unknown word (Hide)          -- True) renames System.Hide_Cursor;
Engine/neo-engine.adb:353:19    - Unknown word (cursor)        -- -- Global mouse cursor operations
Engine/neo-engine.adb:354:23    - Unknown word (Normalized)    -- function Get_Cursor_Normalized return Cursor_State
Engine/neo-engine.adb:355:5     - Unknown word (Main)          -- Main_Window : Border_State
Engine/neo-engine.adb:358:26    - Unknown word (Main)          -- return (Cursor.X - Main_Window.Left, Cursor
Engine/neo-engine.adb:358:55    - Unknown word (Main)          -- Window.Left, Cursor.Y - Main_Window.Top);
Engine/neo-engine.adb:35:23     - Unknown word (Exceptions)   -- procedure Check_Exceptions;
Engine/neo-engine.adb:361:6     - Unknown word (Main)          -- -- Main game window operations
Engine/neo-engine.adb:362:15    - Unknown word (Main)          -- function In_Main_Window (Pos : Cursor
Engine/neo-engine.adb:364:39    - Unknown word (Mode)          -- Border_State := (if Mode.Get = Windowed_Mode
Engine/neo-engine.adb:364:50    - Unknown word (Windowed)      -- State := (if Mode.Get = Windowed_Mode then System.Get
Engine/neo-engine.adb:364:59    - Unknown word (Mode)          -- Mode.Get = Windowed_Mode then System.Get_Decoration
Engine/neo-engine.adb:369:24    - Unknown word (Center)        -- function Main_Window_Center return Cursor_State
Engine/neo-engine.adb:36:25     - Unknown word (Empty)        -- function Is_Stack_Empty return Boolean;
Engine/neo-engine.adb:376:16    - Unknown word (Impulse)       -- package body Impulse is
Engine/neo-engine.adb:377:7     - Unknown word (Duplicate)     -- Duplicate : Exception;
Engine/neo-engine.adb:379:21    - Unknown word (impulse)       -- -- Rename the impulse callback to make it
Engine/neo-engine.adb:379:29    - Unknown word (callback)      -- Rename the impulse callback to make it passable
Engine/neo-engine.adb:379:49    - Unknown word (passable)      -- callback to make it passable to outter scopes...
Engine/neo-engine.adb:379:61    - Unknown word (outter)        -- make it passable to outter scopes...
Engine/neo-engine.adb:379:68    - Unknown word (scopes)        -- it passable to outter scopes...
Engine/neo-engine.adb:380:17    - Unknown word (Informal)      -- procedure Informal_Callback (Args : Vector
Engine/neo-engine.adb:380:26    - Unknown word (Callback)      -- procedure Informal_Callback (Args : Vector_Impulse
Engine/neo-engine.adb:380:50    - Unknown word (Impulse)       -- Callback (Args : Vector_Impulse_Arg.Unsafe_Array) is
Engine/neo-engine.adb:380:85    - Unknown word (Callback)      -- Unsafe_Array) is begin Callback (Args); end;
Engine/neo-engine.adb:382:10    - Unknown word (Constructor)   -- -- Constructor overhead...
Engine/neo-engine.adb:382:22    - Unknown word (overhead)      -- -- Constructor overhead...
Engine/neo-engine.adb:383:33    - Unknown word (Controlled)    -- Control_State is new Controlled with null record;
Engine/neo-engine.adb:386:70    - Unknown word (Impulses)      -- Control_State) is begin Impulses.Delete (Name); end;
Engine/neo-engine.adb:389:14    - Unknown word (Impulses)      -- if Impulses.Has (Name) then raise
Engine/neo-engine.adb:389:45    - Unknown word (Duplicate)     -- Has (Name) then raise Duplicate; end if;
Engine/neo-engine.adb:390:11    - Unknown word (Impulses)      -- Impulses.Insert (Name, (Callback
Engine/neo-engine.adb:390:35    - Unknown word (Callback)      -- Impulses.Insert (Name, (Callback => Informal_Callback
Engine/neo-engine.adb:390:47    - Unknown word (Informal)      -- (Name, (Callback => Informal_Callback'Unrestricted
Engine/neo-engine.adb:390:56    - Unknown word (Callback)      -- Callback => Informal_Callback'Unrestricted_Access
Engine/neo-engine.adb:390:65    - Unknown word (Unrestricted)  -- > Informal_Callback'Unrestricted_Access,
Engine/neo-engine.adb:391:35    - Unknown word (Bindings)      -- Bindings => Bindings'Unrestricted
Engine/neo-engine.adb:391:47    - Unknown word (Bindings)      -- Bindings => Bindings'Unrestricted_Access
Engine/neo-engine.adb:391:56    - Unknown word (Unrestricted)  -- Bindings => Bindings'Unrestricted_Access,
Engine/neo-engine.adb:392:47    - Unknown word (True)          -- Enabled => True,
Engine/neo-engine.adb:394:35    - Unknown word (Rapid)         -- Rapid => Rapid));
Engine/neo-engine.adb:394:47    - Unknown word (Rapid)         -- Rapid => Rapid));
Engine/neo-engine.adb:398:28    - Unknown word (triggering)    -- - Enable or disable triggering
Engine/neo-engine.adb:399:108   - Unknown word (Impulses)      -- Impulse.Enabled := True;  Impulses.Replace (Name, Impulse
Engine/neo-engine.adb:399:28    - Unknown word (Impulse)       -- procedure Enable  is Impulse : Impulse_State := Impulses
Engine/neo-engine.adb:399:38    - Unknown word (Impulse)       -- Enable is Impulse : Impulse_State := Impulses.Get
Engine/neo-engine.adb:399:55    - Unknown word (Impulses)      -- Impulse : Impulse_State := Impulses.Get (Name); begin Impulse
Engine/neo-engine.adb:399:82    - Unknown word (Impulse)       -- Impulses.Get (Name); begin Impulse.Enabled := True;  Impulses
Engine/neo-engine.adb:39:21     - Unknown word (Rounding)     -- procedure Set_Rounding (Val : Rounding_Kind
Engine/neo-engine.adb:39:38     - Unknown word (Rounding)     -- Set_Rounding (Val : Rounding_Kind);
Engine/neo-engine.adb:39:47     - Unknown word (Kind)         -- Rounding (Val : Rounding_Kind);
Engine/neo-engine.adb:400:101   - Unknown word (False)         -- begin Impulse.Enabled := False; Impulses.Replace (Name
Engine/neo-engine.adb:403:42    - Unknown word (combination)   -- global state, it is a combination of all devices owned
Engine/neo-engine.adb:403:6     - Unknown word (Each)          -- -- Each player's global state
Engine/neo-engine.adb:403:69    - Unknown word (owned)         -- combination of all devices owned by that player
Engine/neo-engine.adb:403:78    - Unknown word (that)          -- all devices owned by that player
Engine/neo-engine.adb:407:18    - Unknown word (Stick)         -- Sticks : Stick_Array := (others
Engine/neo-engine.adb:407:7     - Unknown word (Sticks)        -- Sticks : Stick_Array   :
Engine/neo-engine.adb:409:22    - Unknown word (Unbound)       -- Text : Str_Unbound := NULL_STR_UNBOUND
Engine/neo-engine.adb:409:44    - Unknown word (UNBOUND)       -- Unbound := NULL_STR_UNBOUND;
Engine/neo-engine.adb:40:48     - Unknown word (Kind)         -- Precision (Val : Precision_Kind);
Engine/neo-engine.adb:413:11    - Unknown word (Ordered)       -- package Ordered_Player is new Neo.Core
Engine/neo-engine.adb:413:42    - Unknown word (Ordered)       -- Player is new Neo.Core.Ordered (Positive, Player_State
Engine/neo-engine.adb:413:51    - Unknown word (Positive)      -- new Neo.Core.Ordered (Positive, Player_State);
Engine/neo-engine.adb:414:13    - Unknown word (Ordered)       -- Players : Ordered_Player.Safe_Map;
Engine/neo-engine.adb:414:28    - Unknown word (Safe)          -- Players : Ordered_Player.Safe_Map;
Engine/neo-engine.adb:414:3     - Unknown word (Players)       -- Players : Ordered_Player.Safe
Engine/neo-engine.adb:417:21    - Unknown word (Ordered)       -- Devices : aliased Ordered_Device.Safe_Map;
Engine/neo-engine.adb:417:36    - Unknown word (Safe)          -- aliased Ordered_Device.Safe_Map;
Engine/neo-engine.adb:418:49    - Unknown word (Ordered)       -- return Ordered_Device.Unsafe.Map is
Engine/neo-engine.adb:422:124   - Unknown word (Players)       -- Device.Player) then Players.Insert (Device.Player
Engine/neo-engine.adb:422:91    - Unknown word (Players)       -- is begin if not Players.Has (Device.Player)
Engine/neo-engine.adb:424:6     - Unknown word (Convenience)   -- -- Convenience functions
Engine/neo-engine.adb:425:53    - Unknown word (Positive)      -- Int_Ptr; Player  : Positive := 1)
Engine/neo-engine.adb:426:13    - Unknown word (Inject)        -- procedure Inject_Text (Id : Int_Ptr
Engine/neo-engine.adb:426:57    - Unknown word (Unbound)      -- Int_Ptr; Text    : Str_Unbound)
Engine/neo-engine.adb:427:13    - Unknown word (Inject)       -- procedure Inject_Cursor (Id : Int_Ptr
Engine/neo-engine.adb:428:13    - Unknown word (Inject)       -- procedure Inject_Trigger (Id : Int_Ptr
Engine/neo-engine.adb:428:170   - Unknown word (Press)        -- Triggers (Trigger) := Press; Devices.Replace (Id
Engine/neo-engine.adb:428:67    - Unknown word (Press)        -- Trigger : Trigger_Kind; Press : Real_Percent) is Device
Engine/neo-engine.adb:428:80    - Unknown word (Percent)      -- Trigger_Kind; Press : Real_Percent) is Device : Device
Engine/neo-engine.adb:429:13    - Unknown word (Inject)       -- procedure Inject_Stick (Id : Int_Ptr
Engine/neo-engine.adb:429:148   - Unknown word (Sticks)       -- Get (Id); begin Device.Sticks (Stick)   := State
Engine/neo-engine.adb:429:20    - Unknown word (Stick)        -- procedure Inject_Stick (Id : Int_Ptr; Stick
Engine/neo-engine.adb:429:43    - Unknown word (Stick)        -- Stick (Id : Int_Ptr; Stick : Stick_Kind;   State
Engine/neo-engine.adb:429:53    - Unknown word (Stick)        -- Int_Ptr; Stick   : Stick_Kind; State : Stick
Engine/neo-engine.adb:429:75    - Unknown word (Stick)        -- Stick_Kind; State : Stick_State) is Device :
Engine/neo-engine.adb:430:13    - Unknown word (Inject)       -- procedure Inject_Button (Id : Int_Ptr
Engine/neo-engine.adb:430:220   - Unknown word (Clock)        -- (Button) := (Down, Clock); Devices.Replace (Id
Engine/neo-engine.adb:431:220   - Unknown word (Clock)        -- Gamepad (Button) := (Down, Clock); Devices.Replace (Id
Engine/neo-engine.adb:432:220   - Unknown word (Clock)        -- (Key) := (Down, Clock); Devices.Replace (Id
Engine/neo-engine.adb:434:6     - Unknown word (Vibrate)      -- -- Vibrate a specific player's
Engine/neo-engine.adb:435:13    - Unknown word (Vibrate)      -- procedure Vibrate (Hz_High, Hz_Low : Real
Engine/neo-engine.adb:435:45    - Unknown word (Percent)      -- High, Hz_Low : Real_Percent; Player : Positive
Engine/neo-engine.adb:435:63    - Unknown word (Positive)     -- Real_Percent; Player : Positive := 1) is
Engine/neo-engine.adb:438:34    - Unknown word (Element)      -- Ordered_Device.Unsafe.Element (I).Player = Player
Engine/neo-engine.adb:438:74    - Unknown word (Vibrate)      -- Player then System.Vibrate (Ordered_Device.Unsafe
Engine/neo-engine.adb:43:13     - Unknown word (dependant)    -- -- System dependant subprograms
Engine/neo-engine.adb:43:23     - Unknown word (subprograms)  -- -- System dependant subprograms
Engine/neo-engine.adb:445:20    - Unknown word (descriminate) -- -- Setters for descriminate unions
Engine/neo-engine.adb:445:33    - Unknown word (unions)       -- Setters for descriminate unions
Engine/neo-engine.adb:445:8     - Unknown word (Setters)      -- -- Setters for descriminate unions
Engine/neo-engine.adb:446:14    - Unknown word (Changed)      -- function Changed (Rapid : Bool; Bind
Engine/neo-engine.adb:446:23    - Unknown word (Rapid)        -- function Changed (Rapid : Bool; Bind : Binding
Engine/neo-engine.adb:446:37    - Unknown word (Bind)         -- Changed (Rapid : Bool; Bind : Binding_State; Player
Engine/neo-engine.adb:446:44    - Unknown word (Binding)      -- Rapid : Bool; Bind : Binding_State; Player, Old_Player
Engine/neo-engine.adb:447:121   - Unknown word (Bind)         -- Old_Player.Triggers (Bind.Trigger))) or
Engine/neo-engine.adb:447:47    - Unknown word (Rapid)        -- Trigger_Impulse and then (Rapid or else Player.Triggers
Engine/neo-engine.adb:447:78    - Unknown word (Bind)         -- else Player.Triggers (Bind.Trigger) /= Old
Engine/neo-engine.adb:447:9     - Unknown word (Bind)         -- ((Bind.Kind = Trigger_Impulse
Engine/neo-engine.adb:448:111   - Unknown word (Sticks)       -- /= Old_Player.Sticks (Bind.Stick)))
Engine/neo-engine.adb:448:47    - Unknown word (Rapid)        -- Impulse and then (Rapid or else Player.Sticks
Engine/neo-engine.adb:448:68    - Unknown word (Sticks)       -- Rapid or else Player.Sticks (Bind.Stick)
Engine/neo-engine.adb:448:9     - Unknown word (Bind)         -- (Bind.Kind = Stick_Impulse
Engine/neo-engine.adb:453:112   - Unknown word (UNBOUND)      -- /= NULL_STR_16_UNBOUND));
Engine/neo-engine.adb:455:33    - Unknown word (Binding)      -- function Build_Impulse_Arg (Binding : Binding_State; Player
Engine/neo-engine.adb:455:43    - Unknown word (Binding)      -- Impulse_Arg (Binding : Binding_State; Player : Player
Engine/neo-engine.adb:456:14    - Unknown word (Binding)      -- ((case Binding.Kind is
Engine/neo-engine.adb:457:53    - Unknown word (Binding)      -- > (Mouse_Impulse,   Binding, Player.Mouse    (Binding
Engine/neo-engine.adb:460:69    - Unknown word (Sticks)       -- Impulse, Binding, Player.Sticks (Binding.Stick)),
Engine/neo-engine.adb:465:17    - Unknown word (combined)     -- -- Register combined keys
Engine/neo-engine.adb:470:105   - Unknown word (Shift)        -- Player.Keys (Right_Shift_Key) then Player.Keys
Engine/neo-engine.adb:470:134   - Unknown word (Shift)        -- Key) then Player.Keys (Shift_Key) := Player.Keys
Engine/neo-engine.adb:470:21    - Unknown word (Shift)        -- when Left_Shift_Key | Right_Shift_Key
Engine/neo-engine.adb:470:39    - Unknown word (Shift)        -- Left_Shift_Key | Right_Shift_Key => if Player.Keys
Engine/neo-engine.adb:470:73    - Unknown word (Shift)        -- if Player.Keys (Left_Shift_Key) = Player.Keys
Engine/neo-engine.adb:476:20    - Unknown word (temporaries)  -- -- Indexes and temporaries
Engine/neo-engine.adb:476:8     - Unknown word (Indexes)      -- -- Indexes and temporaries
Engine/neo-engine.adb:478:9     - Unknown word (Players)      -- Old_Players : Ordered_Player
Engine/neo-engine.adb:47:35     - Unknown word (Library)      -- procedure Initialize_Vulkan_Library;
Engine/neo-engine.adb:482:8     - Unknown word (Timing)       -- -- Timing
Engine/neo-engine.adb:483:25    - Unknown word (Clock)        -- Last_Time : Time := Clock;
Engine/neo-engine.adb:48:33     - Unknown word (Library)      -- procedure Finalize_Vulkan_Library;
Engine/neo-engine.adb:490:27    - Unknown word (cursor)       -- -- Clear text and cursor data and store previous
Engine/neo-engine.adb:490:49    - Unknown word (previous)     -- cursor data and store previous snapshot
Engine/neo-engine.adb:491:13    - Unknown word (Players)      -- Old_Players := Players.Get;
Engine/neo-engine.adb:493:44    - Unknown word (UNBOUND)      -- Text := NULL_STR_16_UNBOUND;
Engine/neo-engine.adb:498:17    - Unknown word (through)      -- -- Loop through all of the devices and
Engine/neo-engine.adb:498:60    - Unknown word (players)      -- devices and rebuild the players for each input frame
Engine/neo-engine.adb:498:72    - Unknown word (each)         -- rebuild the players for each input frame
Engine/neo-engine.adb:498:83    - Unknown word (frame)        -- players for each input frame
Engine/neo-engine.adb:49:30     - Unknown word (Surface)      -- function Create_Vulkan_Surface (Instance : Ptr) return
Engine/neo-engine.adb:504:16    - Unknown word (Combine)      -- -- Combine keyboard keys and text
Engine/neo-engine.adb:504:24    - Unknown word (keyboard)     -- -- Combine keyboard keys and text
Engine/neo-engine.adb:505:18    - Unknown word (Keyboard)     -- when Keyboard_Device =>
Engine/neo-engine.adb:506:42    - Unknown word (UNBOUND)      -- Device.Text /= NULL_STR_UNBOUND then Player.Text :=
Engine/neo-engine.adb:50:27     - Unknown word (Subprogram)   -- function Get_Vulkan_Subprogram (Name     : Str) return
Engine/neo-engine.adb:515:16    - Unknown word (Combine)      -- -- Combine mice
Engine/neo-engine.adb:51:48     - Unknown word (Char)         -- Extension return Ptr_Char_8_C;
Engine/neo-engine.adb:527:100   - Unknown word (recieve)      -- as such it will never recieve an up, so force it
Engine/neo-engine.adb:527:24    - Unknown word (scroll)       -- -- The scroll wheel is (somewhat incorrectl
Engine/neo-engine.adb:527:31    - Unknown word (wheel)        -- -- The scroll wheel is (somewhat incorrectly
Engine/neo-engine.adb:527:41    - Unknown word (somewhat)     -- The scroll wheel is (somewhat incorrectly) seen a
Engine/neo-engine.adb:527:50    - Unknown word (incorrectly)  -- scroll wheel is (somewhat incorrectly) seen a button, as such
Engine/neo-engine.adb:527:63    - Unknown word (seen)         -- somewhat incorrectly) seen a button, as such it
Engine/neo-engine.adb:527:81    - Unknown word (such)         -- ncorrectly) seen a button, as such it will never recieve
Engine/neo-engine.adb:527:89    - Unknown word (will)         -- a button, as such it will never recieve an up
Engine/neo-engine.adb:527:94    - Unknown word (never)        -- button, as such it will never recieve an up, so force
Engine/neo-engine.adb:528:61    - Unknown word (Wheel)        -- .Down and Button in Wheel_Left_Button..Wheel_Down
Engine/neo-engine.adb:528:80    - Unknown word (Wheel)        -- in Wheel_Left_Button..Wheel_Down_Button then
Engine/neo-engine.adb:529:49    - Unknown word (False)        -- Mouse (Button).Down := False;
Engine/neo-engine.adb:533:16    - Unknown word (Combine)      -- -- Combine gamepads
Engine/neo-engine.adb:533:24    - Unknown word (gamepads)     -- -- Combine gamepads
Engine/neo-engine.adb:544:31    - Unknown word (need)         -- -- Range checks need to be made for sticks
Engine/neo-engine.adb:544:42    - Unknown word (made)         -- Range checks need to be made for sticks and triggers
Engine/neo-engine.adb:544:51    - Unknown word (sticks)       -- need to be made for sticks and triggers
Engine/neo-engine.adb:546:102   - Unknown word (Percent)      -- Sticks (Side).X > Real_Percent'Last
Engine/neo-engine.adb:547:54    - Unknown word (Percent)      -- then Real_Percent'Last
Engine/neo-engine.adb:55:16     - Unknown word (Paste)        -- function Paste return Str;
Engine/neo-engine.adb:563:24    - Unknown word (impulses)     -- -- Trigger the impulses based on each player
Engine/neo-engine.adb:563:42    - Unknown word (each)         -- the impulses based on each player's state
Engine/neo-engine.adb:564:25    - Unknown word (Occupied)     -- if Input_Status.Occupied then
Engine/neo-engine.adb:566:33    - Unknown word (Bindings)     -- for Bind of Impulse.Bindings.Get loop
Engine/neo-engine.adb:567:18    - Unknown word (Changed)      -- if Changed (Impulse.Rapid, Bind
Engine/neo-engine.adb:567:87    - Unknown word (Element)      -- Player), Old_Players.Element (Bind.Player)) then
Engine/neo-engine.adb:568:116   - Unknown word (Windowed)     -- Main_Window when in Windowed_Mode!
Engine/neo-engine.adb:568:125   - Unknown word (Mode)         -- Window when in Windowed_Mode!
Engine/neo-engine.adb:568:32    - Unknown word (Dont)         -- Args.Clear; -- Dont register clicks or cursor
Engine/neo-engine.adb:568:46    - Unknown word (clicks)       -- Clear; -- Dont register clicks or cursor movement if
Engine/neo-engine.adb:568:56    - Unknown word (cursor)       -- Dont register clicks or cursor movement if the cursor
Engine/neo-engine.adb:568:63    - Unknown word (movement)     -- register clicks or cursor movement if the cursor is not
Engine/neo-engine.adb:568:79    - Unknown word (cursor)       -- cursor movement if the cursor is not In_Main_Window
Engine/neo-engine.adb:571:20    - Unknown word (Handle)       -- -- Handle combinations
Engine/neo-engine.adb:571:27    - Unknown word (combinations) -- -- Handle combinations
Engine/neo-engine.adb:572:58    - Unknown word (combos)       -- COMBO then -- Failed combos get repeated, but its
Engine/neo-engine.adb:572:69    - Unknown word (repeated)     -- - Failed combos get repeated, but its OK for now
Engine/neo-engine.adb:573:45    - Unknown word (Bindings)     -- Combo_Bind of Impulse.Bindings.Get loop
Engine/neo-engine.adb:575:30    - Unknown word (Changed)      -- if not Changed (Impulse.Rapid,
Engine/neo-engine.adb:578:51    - Unknown word (Element)      -- Old_Players.Element (Combo_Bind.Player)
Engine/neo-engine.adb:581:6     - Unknown word (binding)      -- -- A binding in the combo is not
Engine/neo-engine.adb:589:25    - Unknown word (Callback)     -- Impulse.Callback (Vector_Impulse_Arg
Engine/neo-engine.adb:592:4     - Unknown word (Skip)         -- -- Skip further tests for combo
Engine/neo-engine.adb:592:9     - Unknown word (further)      -- -- Skip further tests for combo activation
Engine/neo-engine.adb:598:14    - Unknown word (Center)       -- -- Center the cursor if we are
Engine/neo-engine.adb:598:25    - Unknown word (cursor)       -- -- Center the cursor if we are in game mode
Engine/neo-engine.adb:598:50    - Unknown word (mode)         -- cursor if we are in game mode
Engine/neo-engine.adb:599:28    - Unknown word (Occupied)     -- if Cursor_Status.Occupied then Set_Cursor (Main
Engine/neo-engine.adb:599:66    - Unknown word (Center)       -- Cursor (Main_Window_Center); end if;
Engine/neo-engine.adb:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo-engine.adb:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo-engine.adb:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo-engine.adb:602:22    - Unknown word (main)         -- -- Delay the main loop if you have some
Engine/neo-engine.adb:602:39    - Unknown word (have)         -- the main loop if you have some spare time
Engine/neo-engine.adb:602:44    - Unknown word (some)         -- main loop if you have some spare time
Engine/neo-engine.adb:602:49    - Unknown word (spare)        -- loop if you have some spare time
Engine/neo-engine.adb:603:22    - Unknown word (POLLING)      -- delay WINDOW_POLLING_DURATION - (Clock -
Engine/neo-engine.adb:603:30    - Unknown word (DURATION)     -- delay WINDOW_POLLING_DURATION - (Clock - Last_Time
Engine/neo-engine.adb:603:42    - Unknown word (Clock)        -- POLLING_DURATION - (Clock - Last_Time); Last_Time
Engine/neo-engine.adb:609:40    - Unknown word (routines)     -- and external lifecycle routines
Engine/neo-engine.adb:611:28    - Unknown word (Safe)         -- Input_Task : Input_Tasks.Safe_Task;
Engine/neo-engine.adb:616:14    - Unknown word (Bodies)       -- -- Subunit Bodies --
Engine/neo-engine.adb:616:6     - Unknown word (Subunit)      -- -- Subunit Bodies --
Engine/neo-engine.adb:61:17     - Unknown word (Vibrate)      -- procedure Vibrate (Id : Int_Ptr; Hz
Engine/neo-engine.adb:61:67     - Unknown word (Percent)      -- High, Hz_Low : Real_Percent);
Engine/neo-engine.adb:64:16     - Unknown word (Handling)     -- -- Error Handling
Engine/neo-engine.adb:67:22     - Unknown word (Webpage)      -- procedure Open_Webpage (Path : Str);
Engine/neo-engine.adb:69:41     - Unknown word (Unsigned)     -- Error return Int_Unsigned;
Engine/neo-engine.adb:70:64     - Unknown word (Kind)         -- Str; Buttons : Buttons_Kind; Icon : Icon_Kind)
Engine/neo-engine.adb:70:70     - Unknown word (Icon)         -- Buttons : Buttons_Kind; Icon : Icon_Kind)
Engine/neo-engine.adb:70:77     - Unknown word (Icon)         -- Buttons_Kind; Icon : Icon_Kind)
Engine/neo-engine.adb:70:82     - Unknown word (Kind)         -- Buttons_Kind; Icon : Icon_Kind)
Engine/neo-engine.adb:73:10     - Unknown word (Windowing)    -- -- Windowing
Engine/neo-engine.adb:74:28     - Unknown word (Multi)        -- procedure Initialize_Multi_Monitor;
Engine/neo-engine.adb:75:26     - Unknown word (Multi)        -- procedure Finalize_Multi_Monitor;
Engine/neo-engine.adb:76:28     - Unknown word (Windowing)    -- procedure Initialize_Windowing;
Engine/neo-engine.adb:77:26     - Unknown word (Windowing)    -- procedure Finalize_Windowing;
Engine/neo-engine.adb:78:17     - Unknown word (Minimize)     -- procedure Minimize;
Engine/neo-engine.adb:79:17     - Unknown word (Maximize)     -- procedure Maximize;
Engine/neo-engine.adb:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-engine.adb:81:17     - Unknown word (Clip)         -- procedure Clip_Cursor (Do_Clip
Engine/neo-engine.adb:81:22     - Unknown word (Cursor)       -- procedure Clip_Cursor (Do_Clip : Bool
Engine/neo-engine.adb:81:38     - Unknown word (Clip)         -- Clip_Cursor (Do_Clip : Bool := True);
Engine/neo-engine.adb:81:53     - Unknown word (True)         -- (Do_Clip : Bool := True);
Engine/neo-engine.adb:82:17     - Unknown word (Hide)         -- procedure Hide_Cursor (Do_Hide
Engine/neo-engine.adb:82:22     - Unknown word (Cursor)       -- procedure Hide_Cursor (Do_Hide : Bool
Engine/neo-engine.adb:82:38     - Unknown word (Hide)         -- Hide_Cursor (Do_Hide : Bool := True);
Engine/neo-engine.adb:82:53     - Unknown word (True)         -- (Do_Hide : Bool := True);
Engine/neo-engine.adb:83:21     - Unknown word (Cursor)       -- procedure Set_Cursor_Style (Kind : Cursor
Engine/neo-engine.adb:83:28     - Unknown word (Style)        -- procedure Set_Cursor_Style (Kind : Cursor_Kind
Engine/neo-engine.adb:83:35     - Unknown word (Kind)         -- procedure Set_Cursor_Style (Kind : Cursor_Kind);
Engine/neo-engine.adb:83:42     - Unknown word (Cursor)       -- Cursor_Style (Kind : Cursor_Kind);
Engine/neo-engine.adb:84:21     - Unknown word (Cursor)       -- procedure Set_Cursor (Pos  : Cursor
Engine/neo-engine.adb:85:42     - Unknown word (Border)       -- Resize (To   : Border_State);
Engine/neo-engine.adb:87:41     - Unknown word (Vector)       -- Windows return Vector_Border.Unsafe_Array
Engine/neo-engine.adb:87:48     - Unknown word (Border)       -- return Vector_Border.Unsafe_Array;
Engine/neo-engine.adb:87:55     - Unknown word (Unsafe)       -- return Vector_Border.Unsafe_Array;
Engine/neo-engine.adb:88:20     - Unknown word (Decoration)   -- function Get_Decoration return Border_State
Engine/neo-engine.adb:88:41     - Unknown word (Border)       -- Decoration return Border_State;
Engine/neo-engine.adb:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-engine.adb:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-engine.adb:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo-engine.adb:91:23     - Unknown word (Windowing)    -- function Update_Windowing return Bool; -- Set
Engine/neo-engine.adb:91:68     - Unknown word (Mode)         -- - Set Activated and Mode cvars
Engine/neo-engine.ads:102:12    - Unknown word (Handling)     -- -- Error Handling --
Engine/neo-engine.ads:105:6     - Unknown word (Colors)       -- -- Colors used in the console
Engine/neo-engine.ads:106:11    - Unknown word (BACKGROUND)   -- CONSOLE_BACKGROUND_COLOR : constant Color
Engine/neo-engine.ads:106:22    - Unknown word (COLOR)        -- CONSOLE_BACKGROUND_COLOR : constant Color_State
Engine/neo-engine.ads:106:39    - Unknown word (Color)        -- BACKGROUND_COLOR : constant Color_State := COLOR_BLACK
Engine/neo-engine.ads:106:54    - Unknown word (COLOR)        -- constant Color_State := COLOR_BLACK;
Engine/neo-engine.ads:107:11    - Unknown word (FOREGROUND)   -- CONSOLE_FOREGROUND_COLOR : constant Color
Engine/neo-engine.ads:107:22    - Unknown word (COLOR)        -- CONSOLE_FOREGROUND_COLOR : constant Color_State
Engine/neo-engine.ads:107:39    - Unknown word (Color)        -- FOREGROUND_COLOR : constant Color_State := COLOR_CRIMSON
Engine/neo-engine.ads:107:54    - Unknown word (COLOR)        -- constant Color_State := COLOR_CRIMSON;
Engine/neo-engine.ads:107:60    - Unknown word (CRIMSON)      -- Color_State := COLOR_CRIMSON;
Engine/neo-engine.ads:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-engine.ads:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-engine.ads:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo-engine.ads:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-engine.ads:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-engine.ads:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-engine.ads:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-engine.ads:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-engine.ads:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-engine.ads:110:17    - Unknown word (REPORTING)    -- CONSOLE_ERROR_REPORTING_URL : constant Str
Engine/neo-engine.ads:110:54    - Unknown word (duck)         -- constant Str := "www.duck.com";
Engine/neo-engine.ads:112:13    - Unknown word (Kind)         -- type Icon_Kind is (No_Icon, Error
Engine/neo-engine.ads:112:28    - Unknown word (Icon)         -- Icon_Kind is (No_Icon, Error_Icon, Warning
Engine/neo-engine.ads:112:40    - Unknown word (Icon)         -- is (No_Icon, Error_Icon, Warning_Icon, Information
Engine/neo-engine.ads:112:54    - Unknown word (Icon)         -- Error_Icon, Warning_Icon, Information_Icon);
Engine/neo-engine.ads:112:72    - Unknown word (Icon)         -- Warning_Icon, Information_Icon);
Engine/neo-engine.ads:112:8     - Unknown word (Icon)         -- type Icon_Kind is (No_Icon
Engine/neo-engine.ads:113:16    - Unknown word (Kind)         -- type Buttons_Kind is (Okay_Button, Yes
Engine/neo-engine.ads:113:25    - Unknown word (Okay)         -- type Buttons_Kind is (Okay_Button, Yes_No_Buttons
Engine/neo-engine.ads:113:54    - Unknown word (Okay)         -- Button, Yes_No_Buttons, Okay_Cancel_Buttons, Retry
Engine/neo-engine.ads:116:49    - Unknown word (Kind)         -- Str; Buttons : Buttons_Kind := Okay_Button; Icon
Engine/neo-engine.ads:116:57    - Unknown word (Okay)         -- Buttons : Buttons_Kind := Okay_Button; Icon : Icon
Engine/neo-engine.ads:116:82    - Unknown word (Kind)         -- Button; Icon : Icon_Kind := No_Icon) return Bool
Engine/neo-engine.ads:118:16    - Unknown word (routines)     -- -- Lifecycle routines for the auxiliary OS
Engine/neo-engine.ads:118:33    - Unknown word (auxiliary)    -- Lifecycle routines for the auxiliary OS console window
Engine/neo-engine.ads:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-engine.ads:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-engine.ads:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-engine.ads:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-engine.ads:127:36    - Unknown word (given)        -- debugging info for a given exception
Engine/neo-engine.ads:128:13    - Unknown word (Handle)       -- procedure Handle (Occurrence : Exception
Engine/neo-engine.ads:128:21    - Unknown word (Occurrence)   -- procedure Handle (Occurrence : Exception_Occurrence
Engine/neo-engine.ads:128:44    - Unknown word (Occurrence)   -- Occurrence : Exception_Occurrence);
Engine/neo-engine.ads:131:6     - Unknown word (Windowing)    -- -- Windowing --
Engine/neo-engine.ads:134:20    - Unknown word (amount)       -- -- General delay amount to save cycles in between
Engine/neo-engine.ads:134:45    - Unknown word (between)      -- amount to save cycles in between frames
Engine/neo-engine.ads:134:53    - Unknown word (frames)       -- save cycles in between frames
Engine/neo-engine.ads:135:10    - Unknown word (POLLING)      -- WINDOW_POLLING_DURATION : constant
Engine/neo-engine.ads:135:106   - Unknown word (possible)     -- duration / Highest FPS rate possible
Engine/neo-engine.ads:135:18    - Unknown word (DURATION)     -- WINDOW_POLLING_DURATION : constant Duration
Engine/neo-engine.ads:135:38    - Unknown word (Duration)     -- DURATION : constant Duration := 1.0 / 300.0; -- Seconds
Engine/neo-engine.ads:135:66    - Unknown word (Seconds)      -- Duration := 1.0 / 300.0; -- Seconds per duration / Highest
Engine/neo-engine.ads:135:78    - Unknown word (duration)     -- 0.0; -- Seconds per duration / Highest FPS rate possible
Engine/neo-engine.ads:135:89    - Unknown word (Highest)      -- Seconds per duration / Highest FPS rate possible
Engine/neo-engine.ads:137:6     - Unknown word (Enumerated)   -- -- Enumerated types for cvar settings
Engine/neo-engine.ads:138:13    - Unknown word (Kind)         -- type Mode_Kind is (Fullscreen
Engine/neo-engine.ads:138:38    - Unknown word (Mode)         -- is (Fullscreen_Mode, Multi_Monitor_Mode
Engine/neo-engine.ads:138:44    - Unknown word (Multi)        -- is (Fullscreen_Mode, Multi_Monitor_Mode, Windowed
Engine/neo-engine.ads:138:58    - Unknown word (Mode)         -- Mode, Multi_Monitor_Mode, Windowed_Mode);
Engine/neo-engine.ads:138:64    - Unknown word (Windowed)     -- Multi_Monitor_Mode, Windowed_Mode);
Engine/neo-engine.ads:138:73    - Unknown word (Mode)         -- Monitor_Mode, Windowed_Mode);
Engine/neo-engine.ads:138:8     - Unknown word (Mode)         -- type Mode_Kind is (Fullscreen
Engine/neo-engine.ads:139:34    - Unknown word (Cursor)       -- Cursor_Kind is (System_Cursor, Inactive_Cursor,
Engine/neo-engine.ads:139:44    - Unknown word (Inactive)     -- is (System_Cursor,   Inactive_Cursor, Active_Cursor
Engine/neo-engine.ads:139:53    - Unknown word (Cursor)       -- System_Cursor, Inactive_Cursor, Active_Cursor);
Engine/neo-engine.ads:139:71    - Unknown word (Cursor)       -- Inactive_Cursor, Active_Cursor);
Engine/neo-engine.ads:139:8     - Unknown word (Cursor)       -- type Cursor_Kind is (System_Cursor
Engine/neo-engine.ads:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-engine.ads:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-engine.ads:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-engine.ads:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-engine.ads:140:27    - Unknown word (Other)        -- type Activated_Kind is (Other_Activated, Click_Activated
Engine/neo-engine.ads:140:64    - Unknown word (Other)        -- Click_Activated, Other_Deactivated, Minimize
Engine/neo-engine.ads:140:70    - Unknown word (Deactivated)  -- Activated, Other_Deactivated, Minimize_Deactivated
Engine/neo-engine.ads:140:83    - Unknown word (Minimize)     -- Other_Deactivated, Minimize_Deactivated);
Engine/neo-engine.ads:140:92    - Unknown word (Deactivated)  -- Deactivated, Minimize_Deactivated);
Engine/neo-engine.ads:144:36    - Unknown word (Bottom)       -- State is record Top, Bottom, Left, Right : Int
Engine/neo-engine.ads:144:8     - Unknown word (Border)       -- type Border_State is record Top
Engine/neo-engine.ads:145:11    - Unknown word (Vector)       -- package Vector_Border is new Neo.Core
Engine/neo-engine.ads:145:18    - Unknown word (Border)       -- package Vector_Border is new Neo.Core.Vectors
Engine/neo-engine.ads:145:41    - Unknown word (Vectors)      -- Border is new Neo.Core.Vectors (Border_State);
Engine/neo-engine.ads:145:50    - Unknown word (Border)       -- new Neo.Core.Vectors (Border_State);
Engine/neo-engine.ads:148:19    - Unknown word (Windowing)    -- function Update_Windowing return Bool; -- Set
Engine/neo-engine.ads:148:63    - Unknown word (Mode)         -- - Set Activated and Mode cvars
Engine/neo-engine.ads:149:24    - Unknown word (Windowing)    -- procedure Initialize_Windowing;
Engine/neo-engine.ads:150:22    - Unknown word (Windowing)    -- procedure Finalize_Windowing;
Engine/neo-engine.ads:151:24    - Unknown word (Multi)        -- procedure Initialize_Multi_Monitor;
Engine/neo-engine.ads:152:22    - Unknown word (Multi)        -- procedure Finalize_Multi_Monitor;
Engine/neo-engine.ads:154:14    - Unknown word (there)        -- -- Test if there is another instance
Engine/neo-engine.ads:154:23    - Unknown word (another)      -- -- Test if there is another instance of the game
Engine/neo-engine.ads:157:19    - Unknown word (modification) -- -- Window state modification
Engine/neo-engine.ads:158:13    - Unknown word (Minimize)     -- procedure Minimize;
Engine/neo-engine.ads:159:13    - Unknown word (Maximize)     -- procedure Maximize;
Engine/neo-engine.ads:161:26    - Unknown word (Border)       -- procedure Resize (To : Border_State);
Engine/neo-engine.ads:162:31    - Unknown word (Vector)       -- function Get_Windows return Vector_Border.Unsafe_Array
Engine/neo-engine.ads:162:38    - Unknown word (Border)       -- Windows return Vector_Border.Unsafe_Array;
Engine/neo-engine.ads:162:45    - Unknown word (Unsafe)       -- return Vector_Border.Unsafe_Array;
Engine/neo-engine.ads:169:30    - Unknown word (Stick)        -- Stick_Kind is (Left_Stick, Right_Stick
Engine/neo-engine.ads:169:52    - Unknown word (Stick)        -- Stick, Right_Stick);
Engine/neo-engine.ads:169:8     - Unknown word (Stick)        -- type Stick_Kind is (Left_Stick
Engine/neo-engine.ads:171:67    - Unknown word (Middle)       -- Right_Button, Middle_Button, Aux_1_Button
Engine/neo-engine.ads:172:46    - Unknown word (Wheel)        -- Aux_2_Button, Wheel_Up_Button, Wheel
Engine/neo-engine.ads:172:67    - Unknown word (Wheel)        -- Wheel_Up_Button, Wheel_Down_Button, Wheel_Left
Engine/neo-engine.ads:172:86    - Unknown word (Wheel)        -- Wheel_Down_Button, Wheel_Left_Button,
Engine/neo-engine.ads:173:25    - Unknown word (Wheel)        -- Wheel_Right_Button);
Engine/neo-engine.ads:174:25    - Unknown word (Keyboard)     -- type Device_Kind  is (Keyboard_Device, Mouse_Device
Engine/neo-engine.ads:175:25    - Unknown word (Stick)        -- type Impulse_Kind is (Stick_Impulse, Gamepad
Engine/neo-engine.ads:175:31    - Unknown word (Impulse)      -- Impulse_Kind is (Stick_Impulse, Gamepad_Impulse
Engine/neo-engine.ads:175:54    - Unknown word (Impulse)      -- Impulse, Gamepad_Impulse, Trigger_Impulse
Engine/neo-engine.ads:175:75    - Unknown word (Impulse)      -- Impulse, Trigger_Impulse, Text_Impulse,
Engine/neo-engine.ads:175:8     - Unknown word (Impulse)      -- type Impulse_Kind is (Stick_Impulse
Engine/neo-engine.ads:175:91    - Unknown word (Impulse)      -- Trigger_Impulse, Text_Impulse,
Engine/neo-engine.ads:176:46    - Unknown word (Cursor)       -- Key_Impulse, Cursor_Impulse, Mouse
Engine/neo-engine.ads:178:46    - Unknown word (Back)         -- Start_Button, Back_Button, System
Engine/neo-engine.ads:178:91    - Unknown word (Bumper)       -- System_Button, Left_Bumper_Button,
Engine/neo-engine.ads:179:31    - Unknown word (Bumper)       -- Right_Bumper_Button, DPad_Up_Button
Engine/neo-engine.ads:180:51    - Unknown word (Stick)        -- Right_Button, Left_Stick_Button, Right_Stick
Engine/neo-engine.ads:181:86    - Unknown word (Shift)        -- Alt_Key, Shift_Key,
Engine/neo-engine.ads:182:25    - Unknown word (Escape)       -- Escape_Key, One_Key
Engine/neo-engine.ads:183:25    - Unknown word (Four)         -- Four_Key, Five
Engine/neo-engine.ads:183:46    - Unknown word (Five)         -- Four_Key, Five_Key, Six
Engine/neo-engine.ads:184:25    - Unknown word (Eight)        -- Eight_Key, Nine
Engine/neo-engine.ads:184:46    - Unknown word (Nine)         -- Eight_Key, Nine_Key, Zero
Engine/neo-engine.ads:185:25    - Unknown word (Equals)       -- Equals_Key, Backspace
Engine/neo-engine.ads:185:46    - Unknown word (Backspace)    -- Equals_Key, Backspace_Key, Tab_Key,
Engine/neo-engine.ads:188:51    - Unknown word (Bracket)      -- Left_Bracket_Key, Right_Bracket
Engine/neo-engine.ads:188:73    - Unknown word (Bracket)      -- Bracket_Key, Right_Bracket_Key, Enter_Key,
Engine/neo-engine.ads:18:15     - Unknown word (Math)         -- with Neo.Core.Math; use Neo.Core.Math
Engine/neo-engine.ads:18:37     - Unknown word (Math)         -- Math; use Neo.Core.Math;
Engine/neo-engine.ads:191:67    - Unknown word (Semicolon)    -- L_Key, Semicolon_Key, Apostrophe
Engine/neo-engine.ads:191:86    - Unknown word (Apostrophe)   -- Semicolon_Key, Apostrophe_Key,
Engine/neo-engine.ads:192:25    - Unknown word (Grave)        -- Grave_Accent_Key, Left
Engine/neo-engine.ads:192:31    - Unknown word (Accent)       -- Grave_Accent_Key, Left_Shift_Key
Engine/neo-engine.ads:192:51    - Unknown word (Shift)        -- Accent_Key, Left_Shift_Key, Backslash
Engine/neo-engine.ads:192:67    - Unknown word (Backslash)    -- Left_Shift_Key, Backslash_Key, Z_Key,
Engine/neo-engine.ads:194:67    - Unknown word (Comma)        -- M_Key, Comma_Key, Period
Engine/neo-engine.ads:195:25    - Unknown word (Slash)        -- Slash_Key, Right
Engine/neo-engine.ads:195:52    - Unknown word (Shift)        -- Key, Right_Shift_Key, Star_Key,
Engine/neo-engine.ads:195:67    - Unknown word (Star)         -- Right_Shift_Key, Star_Key, Left_Alt
Engine/neo-engine.ads:199:46    - Unknown word (Scroll)       -- Number_Lock_Key, Scroll_Lock_Key, Pad_Seven
Engine/neo-engine.ads:199:90    - Unknown word (Eight)        -- Pad_Seven_Key, Pad_Eight_Key,
Engine/neo-engine.ads:200:29    - Unknown word (Nine)         -- Pad_Nine_Key, Pad_Dash
Engine/neo-engine.ads:200:71    - Unknown word (Four)         -- Dash_Key, Pad_Four_Key, Pad_Five_Key
Engine/neo-engine.ads:200:90    - Unknown word (Five)         -- Pad_Four_Key, Pad_Five_Key,
Engine/neo-engine.ads:201:50    - Unknown word (Plus)         -- Size_Key, Pad_Plus_Key, Pad_One
Engine/neo-engine.ads:204:25    - Unknown word (Middle)       -- Middle_Windows_Key, F13_Key
Engine/neo-engine.ads:205:25    - Unknown word (Kana)         -- Kana_Key, Brazilian
Engine/neo-engine.ads:205:67    - Unknown word (Convert)      -- Brazilian_1_Key, Convert_Key, No_Convert
Engine/neo-engine.ads:205:89    - Unknown word (Convert)      -- Convert_Key, No_Convert_Key,
Engine/neo-engine.ads:206:71    - Unknown word (Equals)       -- Brazilian_2_Key, Pad_Equals_Key, Previous_Track
Engine/neo-engine.ads:206:86    - Unknown word (Previous)     -- Pad_Equals_Key, Previous_Track_Key,
Engine/neo-engine.ads:206:95    - Unknown word (Track)        -- Equals_Key, Previous_Track_Key,
Engine/neo-engine.ads:207:28    - Unknown word (Symbol)       -- At_Symbol_Key, Colon_Key
Engine/neo-engine.ads:207:46    - Unknown word (Colon)        -- At_Symbol_Key, Colon_Key, Underline
Engine/neo-engine.ads:207:67    - Unknown word (Underline)    -- Colon_Key, Underline_Key, Kanji_Key,
Engine/neo-engine.ads:207:86    - Unknown word (Kanji)        -- Underline_Key, Kanji_Key,
Engine/neo-engine.ads:208:67    - Unknown word (Unlabeled)    -- Ax_Key, Unlabeled_Key, Next_Track
Engine/neo-engine.ads:208:91    - Unknown word (Track)        -- Unlabeled_Key, Next_Track_Key,
Engine/neo-engine.ads:209:74    - Unknown word (Mute)         -- Ctrl_Key, Volume_Mute_Key, Calculator_Key
Engine/neo-engine.ads:209:86    - Unknown word (Calculator)   -- Volume_Mute_Key, Calculator_Key,
Engine/neo-engine.ads:20:15     - Unknown word (Strings)      -- with Neo.Core.Strings; use Neo.Core.Strings
Engine/neo-engine.ads:20:37     - Unknown word (Strings)      -- Strings; use Neo.Core.Strings;
Engine/neo-engine.ads:210:25    - Unknown word (Play)         -- Play_Pause_Key, Stop
Engine/neo-engine.ads:210:30    - Unknown word (Pause)        -- Play_Pause_Key, Stop_Track
Engine/neo-engine.ads:210:51    - Unknown word (Track)        -- Pause_Key, Stop_Track_Key, Volume_Down
Engine/neo-engine.ads:211:50    - Unknown word (Comma)        -- Home_Key, Pad_Comma_Key, Pad_Slash
Engine/neo-engine.ads:211:71    - Unknown word (Slash)        -- Comma_Key, Pad_Slash_Key, Print_Screen
Engine/neo-engine.ads:211:86    - Unknown word (Print)        -- Pad_Slash_Key, Print_Screen_Key,
Engine/neo-engine.ads:211:92    - Unknown word (Screen)       -- Slash_Key, Print_Screen_Key,
Engine/neo-engine.ads:212:46    - Unknown word (Pause)        -- Right_Alt_Key, Pause_Break_Key, Home
Engine/neo-engine.ads:212:52    - Unknown word (Break)        -- Alt_Key, Pause_Break_Key, Home_Key,
Engine/neo-engine.ads:216:32    - Unknown word (Sleep)        -- System_Sleep_Key, System_Wake
Engine/neo-engine.ads:216:53    - Unknown word (Wake)         -- Sleep_Key, System_Wake_Key, Web_Search
Engine/neo-engine.ads:216:90    - Unknown word (Favorites)    -- Web_Search_Key, Web_Favorites_Key,
Engine/neo-engine.ads:217:90    - Unknown word (Backward)     -- Web_Forward_Key, Web_Backward_Key,
Engine/neo-engine.ads:219:25    - Unknown word (Junja)        -- Junja_Key, Final
Engine/neo-engine.ads:219:46    - Unknown word (Final)        -- Junja_Key, Final_Key, Hanja
Engine/neo-engine.ads:219:67    - Unknown word (Hanja)        -- Final_Key, Hanja_Key, Accept
Engine/neo-engine.ads:220:86    - Unknown word (Print)        -- Execute_Key, Print_Key,
Engine/neo-engine.ads:221:25    - Unknown word (Help)         -- Help_Key, OEM
Engine/neo-engine.ads:229:90    - Unknown word (Star)         -- Pad_Six_Key, Pad_Star_Key,
Engine/neo-engine.ads:22:15     - Unknown word (Maps)         -- with Neo.Core.Maps; use Neo.Core.Maps
Engine/neo-engine.ads:22:37     - Unknown word (Maps)         -- Maps; use Neo.Core.Maps;
Engine/neo-engine.ads:230:25    - Unknown word (Separator)   -- Separator_Key, App_1_Key
Engine/neo-engine.ads:231:25    - Unknown word (Plus)        -- Plus_Key, Play
Engine/neo-engine.ads:231:46    - Unknown word (Play)        -- Plus_Key, Play_Key, Zoom
Engine/neo-engine.ads:231:67    - Unknown word (Zoom)        -- Play_Key, Zoom_Key, Clear
Engine/neo-engine.ads:232:25    - Unknown word (Erase)       -- Erase_EOF_Key, Attention
Engine/neo-engine.ads:232:46    - Unknown word (Attention)   -- Erase_EOF_Key, Attention_Key, Process_Key
Engine/neo-engine.ads:232:86    - Unknown word (Exsel)       -- Process_Key, Exsel_Key,
Engine/neo-engine.ads:235:6     - Unknown word (Binding)     -- -- Binding states
Engine/neo-engine.ads:236:16    - Unknown word (Interval)    -- subtype Real_Interval is Real_64 range -1
Engine/neo-engine.ads:237:43    - Unknown word (Interval)    -- is record X, Y : Real_Interval := 0.0; end record;
Engine/neo-engine.ads:239:8     - Unknown word (Press)       -- type Press_State is record
Engine/neo-engine.ads:23:15     - Unknown word (Hashed)       -- with Neo.Core.Hashed;
Engine/neo-engine.ads:240:22    - Unknown word (False)       -- Down : Bool := False;
Engine/neo-engine.ads:244:17    - Unknown word (binding)     -- -- Enumerated binding state arrays
Engine/neo-engine.ads:244:6     - Unknown word (Enumerated)  -- -- Enumerated binding state arrays
Engine/neo-engine.ads:245:49    - Unknown word (Press)       -- array (Mouse_Kind)   of Press_State;
Engine/neo-engine.ads:246:49    - Unknown word (Press)       -- array (Key_Kind)     of Press_State;
Engine/neo-engine.ads:247:49    - Unknown word (Press)       -- array (Gamepad_Kind) of Press_State;
Engine/neo-engine.ads:248:54    - Unknown word (Percent)     -- Trigger_Kind) of Real_Percent;
Engine/neo-engine.ads:24:15     - Unknown word (Ordered)      -- with Neo.Core.Ordered;
Engine/neo-engine.ads:251:25    - Unknown word (currently)   -- Device to test for currently activated bindings
Engine/neo-engine.ads:251:45    - Unknown word (bindings)    -- currently activated bindings
Engine/neo-engine.ads:252:44    - Unknown word (Keyboard)    -- Kind : Device_Kind := Keyboard_Device) is record
Engine/neo-engine.ads:253:16    - Unknown word (Positive)    -- Player : Positive := 1;
Engine/neo-engine.ads:255:14    - Unknown word (Keyboard)    -- when Keyboard_Device =>
Engine/neo-engine.ads:256:26    - Unknown word (Unbound)     -- Text : Str_Unbound := NULL_STR_UNBOUND
Engine/neo-engine.ads:256:48    - Unknown word (UNBOUND)     -- Unbound := NULL_STR_UNBOUND;
Engine/neo-engine.ads:25:15     - Unknown word (Vectors)      -- with Neo.Core.Vectors;
Engine/neo-engine.ads:261:11    - Unknown word (Sticks)      -- Sticks : Stick_Array   :
Engine/neo-engine.ads:267:11    - Unknown word (Ordered)     -- package Ordered_Device is new Ordered
Engine/neo-engine.ads:267:33    - Unknown word (Ordered)     -- Ordered_Device is new Ordered (Int_Ptr, Device_State
Engine/neo-engine.ads:269:29    - Unknown word (safety)      -- Mutexes for extra task safety
Engine/neo-engine.ads:270:23    - Unknown word (Safe)        -- Input_Status : Safe_Status;
Engine/neo-engine.ads:271:23    - Unknown word (Safe)        -- Cursor_Status : Safe_Status;
Engine/neo-engine.ads:272:23    - Unknown word (Safe)        -- Game_Entry_Status : Safe_Status;
Engine/neo-engine.ads:278:6     - Unknown word (Virbrate)    -- -- Virbrate a player's set of gamepad
Engine/neo-engine.ads:279:13    - Unknown word (Vibrate)     -- procedure Vibrate (Hz_High, Hz_Low : Real
Engine/neo-engine.ads:279:45    - Unknown word (Percent)     -- High, Hz_Low : Real_Percent; Player : Positive
Engine/neo-engine.ads:279:63    - Unknown word (Positive)    -- Real_Percent; Player : Positive := 1);
Engine/neo-engine.ads:27:48     - Unknown word (Games)        -- the "Game" layer, see Games/.../Base/neo-engine
Engine/neo-engine.ads:27:87     - Unknown word (more)         -- engine-game.adb for more information
Engine/neo-engine.ads:281:14    - Unknown word (cursor)      -- -- Various cursor operations
Engine/neo-engine.ads:281:6     - Unknown word (Various)     -- -- Various cursor operations
Engine/neo-engine.ads:282:23    - Unknown word (Normalized)  -- function Get_Cursor_Normalized return Cursor_State
Engine/neo-engine.ads:285:24    - Unknown word (Style)       -- procedure Set_Cursor_Style (Kind    : Cursor
Engine/neo-engine.ads:286:13    - Unknown word (Clip)        -- procedure Clip_Cursor (Do
Engine/neo-engine.ads:286:38    - Unknown word (Clip)        -- Cursor (Do_Clip : Bool := True);
Engine/neo-engine.ads:286:53    - Unknown word (True)        -- (Do_Clip : Bool := True);
Engine/neo-engine.ads:287:13    - Unknown word (Hide)        -- procedure Hide_Cursor (Do
Engine/neo-engine.ads:287:38    - Unknown word (Hide)        -- Cursor (Do_Hide : Bool := True);
Engine/neo-engine.ads:287:53    - Unknown word (True)        -- (Do_Hide : Bool := True);
Engine/neo-engine.ads:289:13    - Unknown word (cursor)      -- -- Window-cursor information
Engine/neo-engine.ads:290:15    - Unknown word (Main)        -- function In_Main_Window (Pos
Engine/neo-engine.ads:291:12    - Unknown word (Main)        -- function Main_Window_Center return
Engine/neo-engine.ads:291:24    - Unknown word (Center)      -- function Main_Window_Center return Cursor_State
Engine/neo-engine.ads:293:38    - Unknown word (different)   -- to assign devices to different players or query each
Engine/neo-engine.ads:293:48    - Unknown word (players)     -- devices to different players or query each device
Engine/neo-engine.ads:293:65    - Unknown word (each)        -- different players or query each device's state
Engine/neo-engine.ads:294:48    - Unknown word (Positive)    -- : Int_Ptr; Player : Positive := 1);
Engine/neo-engine.ads:296:31    - Unknown word (Ordered)     -- function Get_Devices return Ordered_Device.Unsafe.Map;
Engine/neo-engine.ads:302:10    - Unknown word (impulse)     -- -- An "impulse" is how an interaction
Engine/neo-engine.ads:302:29    - Unknown word (interaction) -- "impulse" is how an interaction between... more info
Engine/neo-engine.ads:302:41    - Unknown word (between)     -- is how an interaction between... more info!
Engine/neo-engine.ads:302:52    - Unknown word (more)        -- interaction between... more info!
Engine/neo-engine.ads:305:18    - Unknown word (Callback)    -- -- procedure Callback_Shoot (Args : Impulse
Engine/neo-engine.ads:305:27    - Unknown word (Shoot)       -- procedure Callback_Shoot (Args : Impulse_Arg
Engine/neo-engine.ads:307:33    - Unknown word (Press)       -- if Args (Args'First).Press.Down then
Engine/neo-engine.ads:308:14    - Unknown word (Fire)        -- -- Fire_Laser;
Engine/neo-engine.ads:308:19    - Unknown word (Laser)       -- -- Fire_Laser;
Engine/neo-engine.ads:311:24    - Unknown word (Fire)        -- - package Primary_Fire is new Impulse ("primaryfire
Engine/neo-engine.ads:311:46    - Unknown word (primaryfire) -- Fire is new Impulse ("primaryfire", Callback_Shoot);
Engine/neo-engine.ads:311:60    - Unknown word (Callback)    -- Impulse ("primaryfire", Callback_Shoot);
Engine/neo-engine.ads:311:69    - Unknown word (Shoot)       -- primaryfire", Callback_Shoot);
Engine/neo-engine.ads:313:16    - Unknown word (Fire)        -- -- Primary_Fire.Bindings.Append (Mouse
Engine/neo-engine.ads:313:21    - Unknown word (Bindings)    -- -- Primary_Fire.Bindings.Append (Mouse (Left
Engine/neo-engine.ads:316:28    - Unknown word (represent)    -- Discriminate union to represent an impulse "binding
Engine/neo-engine.ads:316:41    - Unknown word (impulse)      -- union to represent an impulse "binding"
Engine/neo-engine.ads:316:50    - Unknown word (binding)      -- represent an impulse "binding"
Engine/neo-engine.ads:316:6     - Unknown word (Discriminate) -- -- Discriminate union to represent an
Engine/neo-engine.ads:318:8     - Unknown word (Binding)      -- type Binding_State (Kind : Impulse
Engine/neo-engine.ads:319:16    - Unknown word (Positive)     -- Player : Positive;
Engine/neo-engine.ads:330:19    - Unknown word (ease)         -- -- Functions to ease the creation of Binding
Engine/neo-engine.ads:330:40    - Unknown word (Binding)      -- ease the creation of Binding_States
Engine/neo-engine.ads:331:106   - Unknown word (Binding)      -- Positive := 1) return Binding_State is ((Text_Impulse
Engine/neo-engine.ads:331:12    - Unknown word (Keyboard)     -- function Keyboard
Engine/neo-engine.ads:332:106   - Unknown word (Binding)      -- Positive := 1) return Binding_State is ((Key_Impulse
Engine/neo-engine.ads:332:12    - Unknown word (Keyboard)     -- function Keyboard (Key     : Key_Kind
Engine/neo-engine.ads:339:10    - Unknown word (convience)    -- -- For convience to avoid common case
Engine/neo-engine.ads:339:23    - Unknown word (avoid)        -- -- For convience to avoid common case statements
Engine/neo-engine.ads:339:41    - Unknown word (statements)   -- to avoid common case statements in impulse callbacks
Engine/neo-engine.ads:339:55    - Unknown word (impulse)      -- common case statements in impulse callbacks... this needs
Engine/neo-engine.ads:339:63    - Unknown word (callbacks)    -- statements in impulse callbacks... this needs more explainati
Engine/neo-engine.ads:339:76    - Unknown word (this)         -- impulse callbacks... this needs more explaination
Engine/neo-engine.ads:339:81    - Unknown word (needs)        -- impulse callbacks... this needs more explaination..
Engine/neo-engine.ads:339:87    - Unknown word (more)         -- callbacks... this needs more explaination...
Engine/neo-engine.ads:339:92    - Unknown word (explaination) -- callbacks... this needs more explaination...
Engine/neo-engine.ads:343:48    - Unknown word (Percent)      -- Impulse => Trigger : Real_Percent := 0.0;
Engine/neo-engine.ads:350:11    - Unknown word (Vector)       -- package Vector_Impulse_Arg is new Vectors
Engine/neo-engine.ads:350:37    - Unknown word (Vectors)      -- Vector_Impulse_Arg is new Vectors (Impulse_Arg_State)
Engine/neo-engine.ads:352:26    - Unknown word (safe)         -- Needed for the task-safe manipulation of bindings
Engine/neo-engine.ads:352:31    - Unknown word (manipulation) -- Needed for the task-safe manipulation of bindings for each
Engine/neo-engine.ads:352:47    - Unknown word (bindings)     -- safe manipulation of bindings for each impulse
Engine/neo-engine.ads:352:6     - Unknown word (Needed)       -- -- Needed for the task-safe manipulatio
Engine/neo-engine.ads:352:60    - Unknown word (each)         -- manipulation of bindings for each impulse
Engine/neo-engine.ads:352:65    - Unknown word (impulse)      -- of bindings for each impulse
Engine/neo-engine.ads:353:11    - Unknown word (Vector)       -- package Vector_Binding is new Vectors
Engine/neo-engine.ads:353:33    - Unknown word (Vectors)      -- Vector_Binding is new Vectors (Binding_State);
Engine/neo-engine.ads:355:13    - Unknown word (impulse)      -- -- Actual impulse package used to dispatch
Engine/neo-engine.ads:355:37    - Unknown word (dispatch)     -- impulse package used to dispatch input callbacks
Engine/neo-engine.ads:355:52    - Unknown word (callbacks)    -- used to dispatch input callbacks
Engine/neo-engine.ads:355:6     - Unknown word (Actual)       -- -- Actual impulse package used
Engine/neo-engine.ads:358:20    - Unknown word (Callback)     -- with procedure Callback (Args : Vector_Impulse
Engine/neo-engine.ads:358:37    - Unknown word (Vector)       -- procedure Callback (Args : Vector_Impulse_Arg.Unsafe_Array
Engine/neo-engine.ads:359:24    - Unknown word (False)        -- Settable : Bool := False;
Engine/neo-engine.ads:359:5     - Unknown word (Settable)     -- Settable : Bool := False;
Engine/neo-engine.ads:360:24    - Unknown word (False)        -- Rapid : Bool := False; -- Trigger continuious
Engine/neo-engine.ads:360:42    - Unknown word (continuious)  -- = False; -- Trigger continuious callbacks on pressed
Engine/neo-engine.ads:360:5     - Unknown word (Rapid)        -- Rapid : Bool := False;
Engine/neo-engine.ads:360:54    - Unknown word (callbacks)    -- Trigger continuious callbacks on pressed state instead
Engine/neo-engine.ads:360:67    - Unknown word (pressed)      -- continuious callbacks on pressed state instead of just
Engine/neo-engine.ads:360:81    - Unknown word (instead)      -- callbacks on pressed state instead of just deltas
Engine/neo-engine.ads:360:92    - Unknown word (just)         -- pressed state instead of just deltas
Engine/neo-engine.ads:360:97    - Unknown word (deltas)       -- state instead of just deltas
Engine/neo-engine.ads:362:41    - Unknown word (Safe)         -- aliased Vector_Binding.Safe_Vector;
Engine/neo-engine.ads:362:7     - Unknown word (Bindings)     -- Bindings : aliased Vector_Binding
Engine/neo-engine.ads:367:25    - Unknown word (storing)      -- Internal state for storing registered impulses
Engine/neo-engine.ads:367:33    - Unknown word (registered)   -- Internal state for storing registered impulses
Engine/neo-engine.ads:367:44    - Unknown word (impulses)     -- for storing registered impulses
Engine/neo-engine.ads:367:6     - Unknown word (Internal)     -- -- Internal state for storing registered
Engine/neo-engine.ads:369:7     - Unknown word (Callback)     -- Callback : not null access procedure
Engine/neo-engine.ads:370:7     - Unknown word (Bindings)     -- Bindings : not null access Vector
Engine/neo-engine.ads:372:26    - Unknown word (True)         -- Enabled : Bool := True;
Engine/neo-engine.ads:373:26    - Unknown word (True)         -- Rapid : Bool := True;
Engine/neo-engine.ads:373:7     - Unknown word (Rapid)        -- Rapid : Bool := True;
Engine/neo-engine.ads:375:11    - Unknown word (Hashed)       -- package Hashed_Impulse is new Neo.Core
Engine/neo-engine.ads:375:42    - Unknown word (Hashed)       -- Impulse is new Neo.Core.Hashed (Impulse_State);
Engine/neo-engine.ads:376:14    - Unknown word (Hashed)       -- Impulses : Hashed_Impulse.Safe_Map;
Engine/neo-engine.ads:376:3     - Unknown word (Impulses)     -- Impulses : Hashed_Impulse.Safe
Engine/neo-engine.ads:382:21    - Unknown word (exceptions)   -- -- Floating point exceptions
Engine/neo-engine.ads:383:16    - Unknown word (Operand)      -- Denormalized_Operand : Exception;
Engine/neo-engine.ads:384:3     - Unknown word (Invalid)      -- Invalid_Operation : Exception
Engine/neo-engine.ads:385:11    - Unknown word (Underflow)    -- Numeric_Underflow : Exception;
Engine/neo-engine.ads:385:3     - Unknown word (Numeric)      -- Numeric_Underflow : Exception
Engine/neo-engine.ads:386:11    - Unknown word (Overflow)     -- Numeric_Overflow : Exception;
Engine/neo-engine.ads:386:3     - Unknown word (Numeric)      -- Numeric_Overflow : Exception
Engine/neo-engine.ads:387:3     - Unknown word (Divide)       -- Divide_By_Zero : Exception
Engine/neo-engine.ads:388:3     - Unknown word (Inexact)      -- Inexact_Result : Exception
Engine/neo-engine.ads:389:9     - Unknown word (Fault)        -- Stack_Fault : Exception
Engine/neo-engine.ads:391:27    - Unknown word (Single)       -- type Precision_Kind is (Single_Precision, Double_Precision
Engine/neo-engine.ads:392:30    - Unknown word (Rounding)     -- Rounding_Kind is (Up_Rounding, Down_Rounding, Nearest
Engine/neo-engine.ads:392:45    - Unknown word (Rounding)     -- is (Up_Rounding, Down_Rounding, Nearest_Rounding, Truncate
Engine/neo-engine.ads:392:55    - Unknown word (Nearest)      -- Rounding, Down_Rounding, Nearest_Rounding, Truncate_Rounding
Engine/neo-engine.ads:392:63    - Unknown word (Rounding)     -- Down_Rounding, Nearest_Rounding, Truncate_Rounding)
Engine/neo-engine.ads:392:73    - Unknown word (Truncate)     -- Rounding, Nearest_Rounding, Truncate_Rounding);
Engine/neo-engine.ads:392:8     - Unknown word (Rounding)     -- type Rounding_Kind is (Up_Rounding
Engine/neo-engine.ads:392:82    - Unknown word (Rounding)     -- Nearest_Rounding, Truncate_Rounding);
Engine/neo-engine.ads:393:27    - Unknown word (Unknown)      -- type Vendor_Kind    is (Unknown_Vendor,
Engine/neo-engine.ads:393:35    - Unknown word (Vendor)       -- Kind is (Unknown_Vendor,
Engine/neo-engine.ads:393:8     - Unknown word (Vendor)       -- type Vendor_Kind is (Unknown
Engine/neo-engine.ads:394:33    - Unknown word (Vendor)       -- Intel_Vendor, -
Engine/neo-engine.ads:395:50    - Unknown word (Vendor)       -- Advanced_Micro_Devices_Vendor, -- http://web.archive
Engine/neo-engine.ads:396:36    - Unknown word (RISC)         -- Advanced_RISC_Machines_Vendor, --
Engine/neo-engine.ads:396:50    - Unknown word (Vendor)       -- Advanced_RISC_Machines_Vendor, -- http://web.archive
Engine/neo-engine.ads:400:22    - Unknown word (Unsigned)     -- Speed : Int_64_Unsigned := 0; -- In Mhz
Engine/neo-engine.ads:400:7     - Unknown word (Speed)        -- Speed : Int_64_Unsigned :
Engine/neo-engine.ads:402:23    - Unknown word (RISC)         -- when Advanced_RISC_Machines_Vendor =>
Engine/neo-engine.ads:403:68    - Unknown word (False)        -- : Bool := False;
Engine/neo-engine.ads:404:68    - Unknown word (False)        -- : Bool := False;
Engine/neo-engine.ads:406:22    - Unknown word (Multimedia)   -- Has_Vector_Multimedia_Instructions
Engine/neo-engine.ads:406:33    - Unknown word (Instructions) -- Has_Vector_Multimedia_Instructions : Bool
Engine/neo-engine.ads:407:22    - Unknown word (Scalar)       -- Has_Vector_Scalar_Instructions
Engine/neo-engine.ads:407:29    - Unknown word (Instructions) -- Has_Vector_Scalar_Instructions : Bool
Engine/neo-engine.ads:408:15    - Unknown word (Altivec)      -- Has_Altivec_Additional_Registers
Engine/neo-engine.ads:408:23    - Unknown word (Additional)   -- Has_Altivec_Additional_Registers
Engine/neo-engine.ads:408:34    - Unknown word (Registers)    -- Has_Altivec_Additional_Registers : Bool
Engine/neo-engine.ads:409:15    - Unknown word (Altivec)      -- Has_Altivec
Engine/neo-engine.ads:40:60     - Unknown word (icon)         -- = PATH_RESOURCES & "icon";
Engine/neo-engine.ads:40:8      - Unknown word (ICON)         -- PATH_ICON : constant
Engine/neo-engine.ads:411:15    - Unknown word (Multi)        -- Has_Multi_Media_Extensions
Engine/neo-engine.ads:415:43    - Unknown word (Supplement)   -- Streaming_SIMD_Extensions_3_Supplement : Bool := False
Engine/neo-engine.ads:418:15    - Unknown word (Carryless)    -- Has_Carryless_Multiplication_Of_Two
Engine/neo-engine.ads:418:25    - Unknown word (Multiplication) -- Has_Carryless_Multiplication_Of_Two_64_Bit :
Engine/neo-engine.ads:41:60     - Unknown word (cursor)       -- = PATH_RESOURCES & "cursor_active";
Engine/neo-engine.ads:41:8      - Unknown word (CURSOR)       -- PATH_CURSOR_ACTIVE : constant
Engine/neo-engine.ads:424:19    - Unknown word (Manipulation)   -- Has_Bit_Manipulation_Extensions_1
Engine/neo-engine.ads:425:19    - Unknown word (Manipulation)   -- Has_Bit_Manipulation_Extensions_2
Engine/neo-engine.ads:426:15    - Unknown word (Fused)          -- Has_Fused_Multiply_Add_3
Engine/neo-engine.ads:426:21    - Unknown word (Multiply)       -- Has_Fused_Multiply_Add_3
Engine/neo-engine.ads:427:15    - Unknown word (Fused)          -- Has_Fused_Multiply_Add_4
Engine/neo-engine.ads:427:21    - Unknown word (Multiply)       -- Has_Fused_Multiply_Add_4
Engine/neo-engine.ads:428:15    - Unknown word (Hyperthreading) -- Has_Hyperthreading
Engine/neo-engine.ads:429:30    - Unknown word (Convert)        -- Has_High_Precision_Convert
Engine/neo-engine.ads:42:15     - Unknown word (INACTIVE)     -- PATH_CURSOR_INACTIVE : constant Str := PATH
Engine/neo-engine.ads:42:60     - Unknown word (cursor)       -- = PATH_RESOURCES & "cursor_inactive";
Engine/neo-engine.ads:42:67     - Unknown word (inactive)     -- RESOURCES & "cursor_inactive";
Engine/neo-engine.ads:42:8      - Unknown word (CURSOR)       -- PATH_CURSOR_INACTIVE : constant
Engine/neo-engine.ads:430:45    - Unknown word (Convert)        -- Precision_Floating_Point_Convert : Bool := False
Engine/neo-engine.ads:432:15    - Unknown word (Population)     -- Has_Population_Count
Engine/neo-engine.ads:435:15    - Unknown word (Leading)        -- Has_Leading_Zero_Count
Engine/neo-engine.ads:439:47    - Unknown word (Supplement)     -- Streaming_SIMD_Extensions_4_Supplement : Bool := False;
Engine/neo-engine.ads:441:25    - Unknown word (Supplement)     -- Has_3DNow_Supplement
Engine/neo-engine.ads:442:19    - Unknown word (Multi)          -- Has_Multi_Media_Extensions_Supplement
Engine/neo-engine.ads:442:42    - Unknown word (Supplement)     -- Multi_Media_Extensions_Supplement : Bool := False
Engine/neo-engine.ads:445:14    - Unknown word (Unknown)        -- when Unknown_Vendor => null;
Engine/neo-engine.ads:453:12    - Unknown word (checking)       -- -- Stack checking
Engine/neo-engine.ads:456:19    - Unknown word (Exceptions)     -- procedure Check_Exceptions;
Engine/neo-engine.ads:457:21    - Unknown word (Empty)          -- function Is_Stack_Empty return Bool;
Engine/neo-engine.ads:47:51     - Unknown word (Maps)         -- Str := PATH_ASSETS & "Maps" & S;
Engine/neo-engine.ads:47:8      - Unknown word (MAPS)         -- PATH_MAPS : constant Str
Engine/neo-engine.ads:48:51     - Unknown word (Shaders)      -- Str := PATH_ASSETS & "Shaders" & S;
Engine/neo-engine.ads:48:8      - Unknown word (SHADERS)      -- PATH_SHADERS : constant Str :=
Engine/neo-engine.ads:49:51     - Unknown word (Textures)     -- Str := PATH_ASSETS & "Textures" & S;
Engine/neo-engine.ads:49:8      - Unknown word (TEXTURES)     -- PATH_TEXTURES : constant Str := PATH
Engine/neo-engine.ads:52:12     - Unknown word (Memory)       -- Size_Memory : Int_64_Unsigned :
Engine/neo-engine.ads:52:28     - Unknown word (Unsigned)     -- Size_Memory : Int_64_Unsigned := 0; -- In bytes
Engine/neo-engine.ads:52:49     - Unknown word (bytes)        -- Unsigned := 0; -- In bytes
Engine/neo-engine.ads:53:25     - Unknown word (Unbound)      -- App_Path : Str_Unbound := NULL_STR_UNBOUND
Engine/neo-engine.ads:53:49     - Unknown word (UNBOUND)      -- Unbound := NULL_STR_UNBOUND;
Engine/neo-engine.ads:54:25     - Unknown word (Unbound)      -- App_Name : Str_Unbound := NULL_STR_UNBOUND
Engine/neo-engine.ads:54:49     - Unknown word (UNBOUND)      -- Unbound := NULL_STR_UNBOUND;
Engine/neo-engine.ads:55:25     - Unknown word (Unbound)      -- Version : Str_Unbound := NULL_STR_UNBOUND
Engine/neo-engine.ads:55:49     - Unknown word (UNBOUND)      -- Unbound := NULL_STR_UNBOUND;
Engine/neo-engine.ads:56:25     - Unknown word (Unbound)      -- Username : Str_Unbound := NULL_STR_UNBOUND
Engine/neo-engine.ads:56:49     - Unknown word (UNBOUND)      -- Unbound := NULL_STR_UNBOUND;
Engine/neo-engine.ads:57:21     - Unknown word (Positive)     -- Bit_Size : Positive := 1;
Engine/neo-engine.ads:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo-engine.ads:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo-engine.ads:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo-engine.ads:65:31     - Unknown word (Library)      -- procedure Initialize_Vulkan_Library;
Engine/neo-engine.ads:66:29     - Unknown word (Library)      -- procedure Finalize_Vulkan_Library;
Engine/neo-engine.ads:67:26     - Unknown word (Surface)      -- function Create_Vulkan_Surface (Instance : Ptr) return
Engine/neo-engine.ads:68:23     - Unknown word (Subprogram)   -- function Get_Vulkan_Subprogram (Name     : Str) return
Engine/neo-engine.ads:69:45     - Unknown word (Char)         -- Extension return Ptr_Char_8_C;
Engine/neo-engine.ads:72:6      - Unknown word (Clipboard)    -- -- Clipboard --
Engine/neo-engine.ads:75:12     - Unknown word (Paste)        -- function Paste return Str;
Engine/neo-engine.ads:79:6      - Unknown word (Tasking)      -- -- Tasking --
Engine/neo-engine.ads:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-engine.ads:82:24     - Unknown word (spawnable)    -- - Package to create spawnable tasks in a simple way
Engine/neo-engine.ads:82:45     - Unknown word (simple)       -- spawnable tasks in a simple way (coordination between
Engine/neo-engine.ads:82:57     - Unknown word (coordination) -- tasks in a simple way (coordination between them is done
Engine/neo-engine.ads:82:70     - Unknown word (between)      -- simple way (coordination between them is done via protected
Engine/neo-engine.ads:82:78     - Unknown word (them)         -- coordination between them is done via protected
Engine/neo-engine.ads:82:86     - Unknown word (done)         -- coordination between them is done via protected types
Engine/neo-engine.ads:86:22     - Unknown word (Unsafe)       -- task type Task_Unsafe is
Engine/neo-engine.ads:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-engine.ads:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-engine.ads:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo-engine.ads:90:17     - Unknown word (Unsafe)       -- type Task_Unsafe_Ptr is access all Task
Engine/neo-engine.ads:90:47     - Unknown word (Unsafe)       -- Ptr is access all Task_Unsafe;
Engine/neo-engine.ads:91:22     - Unknown word (Safe)         -- protected type Safe_Task is
Engine/neo-engine.ads:96:31     - Unknown word (Unsafe)       -- Current_Task : Task_Unsafe_Ptr := null;
Engine/neo-world-animation.adb:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-world-animation.adb:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-world-animation.adb:10:110    - Unknown word (warranty)     -- without even the implied warranty of                -
Engine/neo-world-animation.adb:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-world-animation.adb:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-world-animation.adb:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-world-animation.adb:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-world-animation.adb:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-world-animation.adb:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-world-animation.adb:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-world-animation.adb:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-world-animation.adb:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-world-animation.adb:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-world-animation.adb:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-world-animation.adb:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-world-animation.adb:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-world-animation.adb:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-world-animation.adb:16:25     - Unknown word (Animation)    -- package body Neo.Engine.Animation is
Engine/neo-world-animation.adb:19:6      - Unknown word (Frame)        -- -- Frame --
Engine/neo-world-animation.adb:22:14     - Unknown word (skeleton)     -- -- Build a skeleton and its 3D bounds from
Engine/neo-world-animation.adb:22:34     - Unknown word (bounds)       -- skeleton and its 3D bounds from a Joint array into
Engine/neo-world-animation.adb:22:48     - Unknown word (Joint)        -- its 3D bounds from a Joint array into a tree for
Engine/neo-world-animation.adb:22:76     - Unknown word (animation)    -- array into a tree for animation purposes
Engine/neo-world-animation.adb:22:86     - Unknown word (purposes)     -- a tree for animation purposes
Engine/neo-world-animation.adb:23:18     - Unknown word (Frame)        -- function Build_Frame (Joints : Vector_Indexed
Engine/neo-world-animation.adb:23:25     - Unknown word (Joints)       -- function Build_Frame (Joints : Vector_Indexed_Joint
Engine/neo-world-animation.adb:23:34     - Unknown word (Vector)       -- Build_Frame (Joints : Vector_Indexed_Joint.Unsafe
Engine/neo-world-animation.adb:23:41     - Unknown word (Indexed)      -- Frame (Joints : Vector_Indexed_Joint.Unsafe.Vector
Engine/neo-world-animation.adb:23:49     - Unknown word (Joint)        -- Joints : Vector_Indexed_Joint.Unsafe.Vector) return
Engine/neo-world-animation.adb:23:55     - Unknown word (Unsafe)       -- Vector_Indexed_Joint.Unsafe.Vector) return Animation
Engine/neo-world-animation.adb:23:62     - Unknown word (Vector)       -- Indexed_Joint.Unsafe.Vector) return Animation_Frame
Engine/neo-world-animation.adb:23:77     - Unknown word (Animation)    -- Unsafe.Vector) return Animation_Frame_State is
Engine/neo-world-animation.adb:23:87     - Unknown word (Frame)        -- Vector) return Animation_Frame_State is
Engine/neo-world-animation.adb:24:13     - Unknown word (Animation)    -- Frame : Animation_Frame_State := (others
Engine/neo-world-animation.adb:24:23     - Unknown word (Frame)        -- Frame : Animation_Frame_State := (others =>
Engine/neo-world-animation.adb:24:5      - Unknown word (Frame)        -- Frame : Animation_Frame_State
Engine/neo-world-animation.adb:26:11     - Unknown word (Joint)        -- for Joint of Joints loop
Engine/neo-world-animation.adb:26:20     - Unknown word (Joints)       -- for Joint of Joints loop
Engine/neo-world-animation.adb:27:16     - Unknown word (Bounding)     -- Adjust_Bounding (Joint.Point, Frame
Engine/neo-world-animation.adb:27:26     - Unknown word (Joint)        -- Adjust_Bounding (Joint.Point, Frame.Bounding
Engine/neo-world-animation.adb:27:45     - Unknown word (Bounding)     -- (Joint.Point, Frame.Bounding);
Engine/neo-world-animation.adb:27:9      - Unknown word (Adjust)       -- Adjust_Bounding (Joint.Point
Engine/neo-world-animation.adb:28:12     - Unknown word (Joint)        -- if Joint.Parent_Index = -1 then
Engine/neo-world-animation.adb:28:47     - Unknown word (Skeleton)     -- Index = -1 then Frame.Skeleton.Append_Child (Frame
Engine/neo-world-animation.adb:28:76     - Unknown word (Skeleton)     -- Append_Child (Frame.Skeleton.Root, Joint);
Engine/neo-world-animation.adb:29:20     - Unknown word (Skeleton)     -- else Frame.Skeleton.Append_Child (Frame
Engine/neo-world-animation.adb:29:49     - Unknown word (Skeleton)     -- Append_Child (Frame.Skeleton.Find (Joints.Element
Engine/neo-world-animation.adb:29:58     - Unknown word (Find)         -- Child (Frame.Skeleton.Find (Joints.Element (Int
Engine/neo-world-animation.adb:29:64     - Unknown word (Joints)       -- Frame.Skeleton.Find (Joints.Element (Int (Joint
Engine/neo-world-animation.adb:29:71     - Unknown word (Element)      -- Skeleton.Find (Joints.Element (Int (Joint.Parent_Index
Engine/neo-world-animation.adb:38:27     - Unknown word (Skeletal)     -- function Render (Mesh : Skeletal_Mesh_State; Pose : Pose
Engine/neo-world-animation.adb:38:48     - Unknown word (Pose)         -- Skeletal_Mesh_State; Pose : Pose_State) return
Engine/neo-world-animation.adb:38:55     - Unknown word (Pose)         -- Skeletal_Mesh_State; Pose : Pose_State) return Vector
Engine/neo-world-animation.adb:38:74     - Unknown word (Vector)       -- Pose_State) return Vector_Mesh.Unsafe.Vector is
Engine/neo-world-animation.adb:38:86     - Unknown word (Unsafe)       -- return Vector_Mesh.Unsafe.Vector is
Engine/neo-world-animation.adb:38:93     - Unknown word (Vector)       -- return Vector_Mesh.Unsafe.Vector is
Engine/neo-world-animation.adb:39:16     - Unknown word (Vector)       -- Result : Vector_Mesh.Unsafe.Vector;
Engine/neo-world-animation.adb:39:28     - Unknown word (Unsafe)       -- Result : Vector_Mesh.Unsafe.Vector;
Engine/neo-world-animation.adb:40:16     - Unknown word (Treed)        -- Skeleton : Treed_Joint.Unsafe.Tree;
Engine/neo-world-animation.adb:40:28     - Unknown word (Unsafe)       -- Skeleton : Treed_Joint.Unsafe.Tree;
Engine/neo-world-animation.adb:40:5      - Unknown word (Skeleton)     -- Skeleton : Treed_Joint.Unsafe
Engine/neo-world-animation.adb:42:11     - Unknown word (Blend)        -- for Blend of Pose.Blends loop
Engine/neo-world-animation.adb:42:20     - Unknown word (Pose)         -- for Blend of Pose.Blends loop
Engine/neo-world-animation.adb:42:25     - Unknown word (Blends)       -- for Blend of Pose.Blends loop
Engine/neo-world-animation.adb:5:52      - Unknown word (Copyright)  -- Copyright (C) 2016 Justin Squirek
Engine/neo-world-animation.adb:5:71      - Unknown word (Justin)     -- Copyright (C) 2016 Justin Squirek
Engine/neo-world-animation.adb:5:78      - Unknown word (Squirek)    -- Copyright (C) 2016 Justin Squirek
Engine/neo-world-animation.adb:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-world-animation.adb:8:30      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-world-animation.adb:8:70      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-world-animation.adb:8:87      - Unknown word (later)        -- at your option) any later version.
Engine/neo-world-animation.ads:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-world-animation.ads:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-world-animation.ads:10:110    - Unknown word (warranty)     -- without even the implied warranty of                -
Engine/neo-world-animation.ads:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-world-animation.ads:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-world-animation.ads:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-world-animation.ads:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-world-animation.ads:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-world-animation.ads:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-world-animation.ads:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-world-animation.ads:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-world-animation.ads:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-world-animation.ads:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-world-animation.ads:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-world-animation.ads:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-world-animation.ads:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-world-animation.ads:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-world-animation.ads:16:20     - Unknown word (Animation)    -- package Neo.Engine.Animation is
Engine/neo-world-animation.ads:19:6      - Unknown word (Animation)    -- -- Animation --
Engine/neo-world-animation.ads:22:3      - Unknown word (INFINITE)     -- INFINITE_CYCLE : constant Natural
Engine/neo-world-animation.ads:24:8      - Unknown word (Blend)        -- type Blend_State is record
Engine/neo-world-animation.ads:25:24     - Unknown word (Percent)      -- Influence : Real_Percent := 100.0;
Engine/neo-world-animation.ads:25:7      - Unknown word (Influence)    -- Influence : Real_Percent := 1
Engine/neo-world-animation.ads:26:35     - Unknown word (INFINITE)     -- : Natural      := INFINITE_CYCLE;
Engine/neo-world-animation.ads:27:19     - Unknown word (Positive)     -- Frame : Positive := 1;
Engine/neo-world-animation.ads:27:7      - Unknown word (Frame)        -- Frame : Positive
Engine/neo-world-animation.ads:28:23     - Unknown word (Unbound)      -- Animation : Str_Unbound := NULL_STR_UNBOUND
Engine/neo-world-animation.ads:28:44     - Unknown word (UNBOUND)      -- Unbound := NULL_STR_UNBOUND;
Engine/neo-world-animation.ads:28:7      - Unknown word (Animation)    -- Animation : Str_Unbound  := NULL
Engine/neo-world-animation.ads:29:19     - Unknown word (Duration)     -- Start : Duration := No_Duration;
Engine/neo-world-animation.ads:29:38     - Unknown word (Duration)     -- Duration := No_Duration;
Engine/neo-world-animation.ads:31:11     - Unknown word (Hashed)       -- package Hashed_Blend is new Core.Neo
Engine/neo-world-animation.ads:31:18     - Unknown word (Blend)        -- package Hashed_Blend is new Core.Neo.Core
Engine/neo-world-animation.ads:31:45     - Unknown word (Hashed)       -- is new Core.Neo.Core.Hashed (Blend_State);
Engine/neo-world-animation.ads:31:53     - Unknown word (Blend)        -- Core.Neo.Core.Hashed (Blend_State);
Engine/neo-world-animation.ads:33:11     - Unknown word (modifiers)    -- -- Bone modifiers for generated animations
Engine/neo-world-animation.ads:33:25     - Unknown word (generated)    -- Bone modifiers for generated animations like player
Engine/neo-world-animation.ads:33:35     - Unknown word (animations)   -- modifiers for generated animations like player-look rotation
Engine/neo-world-animation.ads:33:46     - Unknown word (like)         -- generated animations like player-look rotation
Engine/neo-world-animation.ads:33:58     - Unknown word (look)         -- animations like player-look rotation
Engine/neo-world-animation.ads:34:13     - Unknown word (Modifier)     -- type Bone_Modifier_State is record
Engine/neo-world-animation.ads:35:23     - Unknown word (Unbound)      -- Joint : Str_Unbound := NULL_STR_UNBOUND
Engine/neo-world-animation.ads:35:44     - Unknown word (UNBOUND)      -- Unbound := NULL_STR_UNBOUND;
Engine/neo-world-animation.ads:35:7      - Unknown word (Joint)        -- Joint : Str_Unbound
Engine/neo-world-animation.ads:38:11     - Unknown word (Hashed)       -- package Hashed_Bone_Modifier is new
Engine/neo-world-animation.ads:38:23     - Unknown word (Modifier)     -- package Hashed_Bone_Modifier is new Core.Neo.Core
Engine/neo-world-animation.ads:38:53     - Unknown word (Hashed)       -- is new Core.Neo.Core.Hashed (Bone_Modifier_State
Engine/neo-world-animation.ads:38:66     - Unknown word (Modifier)     -- Neo.Core.Hashed (Bone_Modifier_State);
Engine/neo-world-animation.ads:40:8      - Unknown word (Pose)         -- type Pose_State is record
Engine/neo-world-animation.ads:41:16     - Unknown word (Bounding)     -- Bounds : Bounding_State := (others =>
Engine/neo-world-animation.ads:41:7      - Unknown word (Bounds)       -- Bounds : Bounding_State :=
Engine/neo-world-animation.ads:42:26     - Unknown word (Treed)        -- Skeleton : Treed_Joint.Unsafe.Tree;
Engine/neo-world-animation.ads:42:32     - Unknown word (Joint)        -- Skeleton : Treed_Joint.Unsafe.Tree;
Engine/neo-world-animation.ads:42:38     - Unknown word (Unsafe)       -- : Treed_Joint.Unsafe.Tree;
Engine/neo-world-animation.ads:42:7      - Unknown word (Skeleton)     -- Skeleton : Treed_Joint
Engine/neo-world-animation.ads:43:17     - Unknown word (Blends)       -- Animation_Blends : Hashed_Blend.Unsafe
Engine/neo-world-animation.ads:43:26     - Unknown word (Hashed)       -- Animation_Blends : Hashed_Blend.Unsafe.Map;
Engine/neo-world-animation.ads:43:33     - Unknown word (Blend)        -- Animation_Blends : Hashed_Blend.Unsafe.Map;
Engine/neo-world-animation.ads:43:39     - Unknown word (Unsafe)       -- Blends : Hashed_Blend.Unsafe.Map;
Engine/neo-world-animation.ads:43:7      - Unknown word (Animation)    -- Animation_Blends : Hashed_Blend
Engine/neo-world-animation.ads:44:12     - Unknown word (Modifiers)    -- Bone_Modifiers : Hashed_Bone.Unsafe
Engine/neo-world-animation.ads:44:38     - Unknown word (Unsafe)       -- Modifiers : Hashed_Bone.Unsafe.Map;
Engine/neo-world-animation.ads:47:27     - Unknown word (Skeletal)     -- function Render (Mesh : Skeletal_Mesh_State; Pose : Pose
Engine/neo-world-animation.ads:47:48     - Unknown word (Pose)         -- Skeletal_Mesh_State; Pose : Pose_State) return
Engine/neo-world-animation.ads:47:55     - Unknown word (Pose)         -- Skeletal_Mesh_State; Pose : Pose_State) return Vector
Engine/neo-world-animation.ads:47:74     - Unknown word (Vector)       -- Pose_State) return Vector_Joint.Unsafe.Vector
Engine/neo-world-animation.ads:47:81     - Unknown word (Joint)        -- State) return Vector_Joint.Unsafe.Vector;
Engine/neo-world-animation.ads:47:87     - Unknown word (Unsafe)       -- return Vector_Joint.Unsafe.Vector;
Engine/neo-world-animation.ads:47:94     - Unknown word (Vector)       -- Vector_Joint.Unsafe.Vector;
Engine/neo-world-animation.ads:5:52      - Unknown word (Copyright)  -- Copyright (C) 2016 Justin Squirek
Engine/neo-world-animation.ads:5:71      - Unknown word (Justin)     -- Copyright (C) 2016 Justin Squirek
Engine/neo-world-animation.ads:5:78      - Unknown word (Squirek)    -- Copyright (C) 2016 Justin Squirek
Engine/neo-world-animation.ads:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-world-animation.ads:8:30      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-world-animation.ads:8:70      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-world-animation.ads:8:87      - Unknown word (later)        -- at your option) any later version.
Engine/neo-world-audio.adb:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-world-audio.adb:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-world-audio.adb:10:110    - Unknown word (warranty)     -- without even the implied warranty of                -
Engine/neo-world-audio.adb:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-world-audio.adb:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-world-audio.adb:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-world-audio.adb:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-world-audio.adb:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-world-audio.adb:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-world-audio.adb:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-world-audio.adb:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-world-audio.adb:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-world-audio.adb:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-world-audio.adb:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-world-audio.adb:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-world-audio.adb:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-world-audio.adb:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-world-audio.adb:5:52      - Unknown word (Copyright)  -- Copyright (C) 2016 Justin Squirek
Engine/neo-world-audio.adb:5:71      - Unknown word (Justin)     -- Copyright (C) 2016 Justin Squirek
Engine/neo-world-audio.adb:5:78      - Unknown word (Squirek)    -- Copyright (C) 2016 Justin Squirek
Engine/neo-world-audio.adb:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-world-audio.adb:8:30      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-world-audio.adb:8:70      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-world-audio.adb:8:87      - Unknown word (later)        -- at your option) any later version.
Engine/neo-world-audio.ads:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-world-audio.ads:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-world-audio.ads:10:110    - Unknown word (warranty)     -- without even the implied warranty of                -
Engine/neo-world-audio.ads:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-world-audio.ads:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-world-audio.ads:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-world-audio.ads:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-world-audio.ads:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-world-audio.ads:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-world-audio.ads:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-world-audio.ads:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-world-audio.ads:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-world-audio.ads:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-world-audio.ads:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-world-audio.ads:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-world-audio.ads:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-world-audio.ads:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-world-audio.ads:19:6      - Unknown word (Clip)         -- -- Clip --
Engine/neo-world-audio.ads:22:13     - Unknown word (Kind)         -- type Clip_Kind (Foreground_Clip, Background
Engine/neo-world-audio.ads:22:19     - Unknown word (Foreground)   -- type Clip_Kind (Foreground_Clip, Background_Clip
Engine/neo-world-audio.ads:22:30     - Unknown word (Clip)         -- Clip_Kind (Foreground_Clip, Background_Clip, Music
Engine/neo-world-audio.ads:22:36     - Unknown word (Background)   -- Kind (Foreground_Clip, Background_Clip, Music_Clip, Cinematic
Engine/neo-world-audio.ads:22:47     - Unknown word (Clip)         -- Foreground_Clip, Background_Clip, Music_Clip, Cinematic
Engine/neo-world-audio.ads:22:59     - Unknown word (Clip)         -- Background_Clip, Music_Clip, Cinematic_Clip, Dialog
Engine/neo-world-audio.ads:22:65     - Unknown word (Cinematic)    -- Background_Clip, Music_Clip, Cinematic_Clip, Dialog_Clip);
Engine/neo-world-audio.ads:22:8      - Unknown word (Clip)         -- type Clip_Kind (Foreground_Clip
Engine/neo-world-audio.ads:22:81     - Unknown word (Dialog)       -- Clip, Cinematic_Clip, Dialog_Clip);
Engine/neo-world-audio.ads:24:20     - Unknown word (Kind)         -- type Clip_State (Kind : Clip_Kind := Foreground
Engine/neo-world-audio.ads:24:32     - Unknown word (Kind)         -- Clip_State (Kind : Clip_Kind := Foreground_Clip;
Engine/neo-world-audio.ads:24:40     - Unknown word (Foreground)   -- Kind : Clip_Kind := Foreground_Clip; Do_Loop : Bool
Engine/neo-world-audio.ads:24:75     - Unknown word (False)        -- Clip; Do_Loop : Bool := False) is record
Engine/neo-world-audio.ads:25:30     - Unknown word (Unbound)      -- Lead_In_Sample : Str_Unbound := NULL_STR_UNBOUND
Engine/neo-world-audio.ads:25:50     - Unknown word (UNBOUND)      -- Unbound := NULL_STR_UNBOUND;
Engine/neo-world-audio.ads:25:7      - Unknown word (Lead)         -- Lead_In_Sample : Str_Unbound
Engine/neo-world-audio.ads:26:31     - Unknown word (Percent)      -- Lead_In_Volume : Real_Percent := 100.0;
Engine/neo-world-audio.ads:26:7      - Unknown word (Lead)         -- Lead_In_Volume : Real_Percent
Engine/neo-world-audio.ads:27:31     - Unknown word (Percent)      -- Volume : Real_Percent := 100.0;
Engine/neo-world-audio.ads:28:14     - Unknown word (Shake)        -- Screen_Shake : Real_Percent
Engine/neo-world-audio.ads:28:31     - Unknown word (Percent)      -- Screen_Shake : Real_Percent := 10.0;
Engine/neo-world-audio.ads:28:7      - Unknown word (Screen)       -- Screen_Shake : Real_Percent
Engine/neo-world-audio.ads:29:7      - Unknown word (Fade)         -- Fade_Radius_Min : Real
Engine/neo-world-audio.ads:30:7      - Unknown word (Fade)         -- Fade_Radius_Max : Real
Engine/neo-world-audio.ads:31:41     - Unknown word (False)           -- directional : Bool        := False;
Engine/neo-world-audio.ads:31:7      - Unknown word (Omnidirectional) -- Omnidirectional : Bool        := False
Engine/neo-world-audio.ads:32:10     - Unknown word (Occlusion)       -- No_Occlusion : Bool        :
Engine/neo-world-audio.ads:32:41     - Unknown word (False)           -- : Bool        := False;
Engine/neo-world-audio.ads:33:41     - Unknown word (True)            -- : Bool        := True;
Engine/neo-world-audio.ads:34:41     - Unknown word (True)            -- : Bool        := True;
Engine/neo-world-audio.ads:35:11     - Unknown word (Center)          -- Use_Center : Bool
Engine/neo-world-audio.ads:35:41     - Unknown word (True)            -- : Bool        := True;
Engine/neo-world-audio.ads:36:41     - Unknown word (True)            -- : Bool        := True;
Engine/neo-world-audio.ads:37:41     - Unknown word (True)            -- : Bool        := True;
Engine/neo-world-audio.ads:38:11     - Unknown word (Back)            -- Use_Back_Left : Bool
Engine/neo-world-audio.ads:39:11     - Unknown word (Back)            -- Use_Back_Right : Bool
Engine/neo-world-audio.ads:40:11     - Unknown word (Subwoofer)       -- Use_Subwoofer : Bool        :=
Engine/neo-world-audio.ads:42:14     - Unknown word (False)           -- when False =>
Engine/neo-world-audio.ads:43:24     - Unknown word (Unbound)         -- Sample : Str_Unbound := NULL_STR_UNBOUND
Engine/neo-world-audio.ads:43:44     - Unknown word (UNBOUND)         -- Unbound := NULL_STR_UNBOUND;
Engine/neo-world-audio.ads:45:27     - Unknown word (Vector)          -- Samples : Vector_Str_Unbound.Unsafe.Vector
Engine/neo-world-audio.ads:45:38     - Unknown word (Unbound)         -- Samples : Vector_Str_Unbound.Unsafe.Vector;
Engine/neo-world-audio.ads:45:46     - Unknown word (Unsafe)          -- Vector_Str_Unbound.Unsafe.Vector;
Engine/neo-world-audio.ads:45:53     - Unknown word (Vector)          -- Vector_Str_Unbound.Unsafe.Vector;
Engine/neo-world-audio.ads:46:11     - Unknown word (Same)            -- Same_Twice_OK : Bool := False
Engine/neo-world-audio.ads:46:16     - Unknown word (Twice)           -- Same_Twice_OK : Bool := False;
Engine/neo-world-audio.ads:46:35     - Unknown word (False)           -- Same_Twice_OK : Bool := False; -- Must have more than
Engine/neo-world-audio.ads:46:45     - Unknown word (Must)            -- : Bool := False; -- Must have more than 2 samples
Engine/neo-world-audio.ads:46:50     - Unknown word (have)            -- Bool := False; -- Must have more than 2 samples
Engine/neo-world-audio.ads:46:55     - Unknown word (more)            -- False; -- Must have more than 2 samples to be
Engine/neo-world-audio.ads:46:60     - Unknown word (than)            -- False; -- Must have more than 2 samples to be relevant
Engine/neo-world-audio.ads:46:81     - Unknown word (relevant)        -- than 2 samples to be relevant
Engine/neo-world-audio.ads:51:6      - Unknown word (Emitter)         -- -- Emitter --
Engine/neo-world-audio.ads:54:23     - Unknown word (Kind)            -- type Emitter_State (Kind : Emitter_Kind) is record
Engine/neo-world-audio.ads:54:30     - Unknown word (Emitter)         -- Emitter_State (Kind : Emitter_Kind) is record
Engine/neo-world-audio.ads:54:38     - Unknown word (Kind)            -- State (Kind : Emitter_Kind) is record
Engine/neo-world-audio.ads:54:8      - Unknown word (Emitter)         -- type Emitter_State (Kind : Emitter
Engine/neo-world-audio.ads:56:10     - Unknown word (Mute)            -- Is_Mute : Bool
Engine/neo-world-audio.ads:57:10     - Unknown word (Paused)          -- Is_Paused : Bool
Engine/neo-world-audio.ads:58:10     - Unknown word (Playing)         -- Is_Playing : Bool
Engine/neo-world-audio.ads:59:11     - Unknown word (Distance)        -- Min_Distance : Real
Engine/neo-world-audio.ads:5:52      - Unknown word (Copyright)  -- Copyright (C) 2016 Justin Squirek
Engine/neo-world-audio.ads:5:71      - Unknown word (Justin)     -- Copyright (C) 2016 Justin Squirek
Engine/neo-world-audio.ads:5:78      - Unknown word (Squirek)    -- Copyright (C) 2016 Justin Squirek
Engine/neo-world-audio.ads:60:11     - Unknown word (Distance)        -- Max_Distance : Real
Engine/neo-world-audio.ads:61:29     - Unknown word (Percent)         -- Current_Volume : Real_Percent := 75.0;
Engine/neo-world-audio.ads:62:15     - Unknown word (Shake)           -- Current_Shake : Real_Percent
Engine/neo-world-audio.ads:62:29     - Unknown word (Percent)         -- Current_Shake : Real_Percent := 75.0;
Engine/neo-world-audio.ads:70:11     - Unknown word (Effects)         -- package Effects_Volume;
Engine/neo-world-audio.ads:71:11     - Unknown word (Mute)            -- package Mute;
Engine/neo-world-audio.ads:72:7      - Unknown word (Shake)           -- Get_Shake
Engine/neo-world-audio.ads:73:7      - Unknown word (Amplitude)       -- Get_Amplitude
Engine/neo-world-audio.ads:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-world-audio.ads:8:30      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-world-audio.ads:8:70      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-world-audio.ads:8:87      - Unknown word (later)        -- at your option) any later version.
Engine/neo-world-commands.adb:100:30    - Unknown word (started)     -- -- if the level was started with "map <levelname
Engine/neo-world-commands.adb:100:49    - Unknown word (levelname)   -- was started with "map <levelname>", then
Engine/neo-world-commands.adb:101:13    - Unknown word (cheats)      -- -- -- cheats will not be allowed
Engine/neo-world-commands.adb:101:20    - Unknown word (will)        -- -- -- cheats will not be allowed.  If
Engine/neo-world-commands.adb:101:45    - Unknown word (started)     -- not be allowed.  If started with "devmap <levelname
Engine/neo-world-commands.adb:101:59    - Unknown word (devmap)      -- allowed. If started with "devmap <levelname>"
Engine/neo-world-commands.adb:101:67    - Unknown word (levelname)   -- started with "devmap <levelname>"
Engine/neo-world-commands.adb:102:18    - Unknown word (cheats)      -- -- -- then cheats will be allowed
Engine/neo-world-commands.adb:102:25    - Unknown word (will)        -- -- then cheats will be allowed
Engine/neo-world-commands.adb:104:26    - Unknown word (cheats)      -- Cvar_Set( "sv_cheats", "1" );
Engine/neo-world-commands.adb:106:26    - Unknown word (cheats)      -- Cvar_Set( "sv_cheats", "0" );
Engine/neo-world-commands.adb:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-world-commands.adb:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-world-commands.adb:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo-world-commands.adb:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-world-commands.adb:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-world-commands.adb:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-world-commands.adb:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-world-commands.adb:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-world-commands.adb:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-world-commands.adb:110:21    - Unknown word (Kick)        -- procedure Command_Kick (Args : Array_Str_Unbound
Engine/neo-world-commands.adb:110:44    - Unknown word (Unbound)     -- Kick (Args : Array_Str_Unbound) is
Engine/neo-world-commands.adb:118:40    - Unknown word (print)       -- SendServerCommand(NULL, "print \"%s\"", "Cannot kick
Engine/neo-world-commands.adb:118:56    - Unknown word (Cannot)      -- NULL, "print \"%s\"", "Cannot kick host player\n"
Engine/neo-world-commands.adb:118:63    - Unknown word (kick)        -- print \"%s\"", "Cannot kick host player\n");
Engine/neo-world-commands.adb:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-world-commands.adb:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-world-commands.adb:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-world-commands.adb:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-world-commands.adb:121:13    - Unknown word (Drop)        -- -- SV_DropClient( Client, "was
Engine/neo-world-commands.adb:121:38    - Unknown word (kicked)      -- DropClient( Client, "was kicked" );
Engine/neo-world-commands.adb:122:17    - Unknown word (Packet)      -- -- Client.Packet_Time := svs.time;
Engine/neo-world-commands.adb:122:54    - Unknown word (there)       -- svs.time; -- in case there is a funny zombie
Engine/neo-world-commands.adb:122:65    - Unknown word (funny)       -- in case there is a funny zombie
Engine/neo-world-commands.adb:122:71    - Unknown word (zombie)      -- case there is a funny zombie
Engine/neo-world-commands.adb:137:42    - Unknown word (Kind)        -- Channel.Remote_Address.Kind = Loopback_Address then
Engine/neo-world-commands.adb:138:18    - Unknown word (Cannot)      -- -- Line ("Cannot kick host player!")
Engine/neo-world-commands.adb:138:25    - Unknown word (kick)        -- Line ("Cannot kick host player!");
Engine/neo-world-commands.adb:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-world-commands.adb:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-world-commands.adb:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-world-commands.adb:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-world-commands.adb:144:18    - Unknown word (sure)        -- -- -- make sure server is running
Engine/neo-world-commands.adb:149:18    - Unknown word (netchan)     -- -- if( cl->netchan.remoteAddress.type
Engine/neo-world-commands.adb:150:40    - Unknown word (print)       -- SendServerCommand(NULL, "print \"%s\"", "Cannot kick
Engine/neo-world-commands.adb:150:56    - Unknown word (Cannot)      -- NULL, "print \"%s\"", "Cannot kick host player\n"
Engine/neo-world-commands.adb:150:63    - Unknown word (kick)        -- print \"%s\"", "Cannot kick host player\n");
Engine/neo-world-commands.adb:153:13    - Unknown word (look)        -- -- -- look up the authorize server
Engine/neo-world-commands.adb:155:25    - Unknown word (Resolving)   -- Com_Printf( "Resolving %s\n", AUTHORIZE_SERVER
Engine/neo-world-commands.adb:156:22    - Unknown word (String)      -- -- if ( !NET_StringToAdr( AUTHORIZE_SERVER
Engine/neo-world-commands.adb:157:27    - Unknown word (Couldn't)    -- Com_Printf( "Couldn't resolve address\n"
Engine/neo-world-commands.adb:161:28    - Unknown word (resolved)    -- Com_Printf( "%s resolved to %i.%i.%i.%i:%i\n
Engine/neo-world-commands.adb:166:13    - Unknown word (otherwise)   -- -- -- otherwise send their ip to the
Engine/neo-world-commands.adb:166:28    - Unknown word (their)       -- -- otherwise send their ip to the authorize
Engine/neo-world-commands.adb:168:25    - Unknown word (Print)       -- NET_OutOfBandPrint( NS_SERVER, svs.authorizeAddr
Engine/neo-world-commands.adb:169:41    - Unknown word (netchan)     -- banUser %i.%i.%i.%i", cl->netchan.remoteAddress.ip[0]
Engine/neo-world-commands.adb:169:74    - Unknown word (netchan)     -- remoteAddress.ip[0], cl->netchan.remoteAddress.ip[1]
Engine/neo-world-commands.adb:170:31    - Unknown word (netchan)     -- cl->netchan.remoteAddress.ip[2]
Engine/neo-world-commands.adb:170:64    - Unknown word (netchan)     -- remoteAddress.ip[2], cl->netchan.remoteAddress.ip[3]
Engine/neo-world-commands.adb:171:31    - Unknown word (banned)      -- Com_Printf("%s was banned from coming back\n"
Engine/neo-world-commands.adb:171:43    - Unknown word (coming)      -- "%s was banned from coming back\n", cl->name);
Engine/neo-world-commands.adb:171:50    - Unknown word (back)        -- was banned from coming back\n", cl->name);
Engine/neo-world-commands.adb:177:10    - Unknown word (char)        -- -- char *p;
Engine/neo-world-commands.adb:179:18    - Unknown word (sure)        -- -- -- make sure server is running
Engine/neo-world-commands.adb:18:48     - Unknown word (Unbound)      -- Time (Args : Array_Str_Unbound) is
Engine/neo-world-commands.adb:194:38    - Unknown word (chat)        -- SendServerCommand(NULL, "chat \"%s\n\"", text);
Engine/neo-world-commands.adb:197:17    - Unknown word (Binds)       -- function Save_Binds return Str is
Engine/neo-world-commands.adb:200:11    - Unknown word (Impulse)     -- for Impulse of Impulses.Get loop
Engine/neo-world-commands.adb:200:22    - Unknown word (Impulses)    -- for Impulse of Impulses.Get loop
Engine/neo-world-commands.adb:201:13    - Unknown word (Binding)     -- for Binding of Impulse.Bindings
Engine/neo-world-commands.adb:201:24    - Unknown word (Impulse)     -- for Binding of Impulse.Bindings.Get loop
Engine/neo-world-commands.adb:201:32    - Unknown word (Bindings)    -- for Binding of Impulse.Bindings.Get loop
Engine/neo-world-commands.adb:202:37    - Unknown word (bind)        -- Result := Result & EOL & "bind " & Impulse.Name &
Engine/neo-world-commands.adb:202:46    - Unknown word (Impulse)     -- Result & EOL & "bind " & Impulse.Name & " " &
Engine/neo-world-commands.adb:203:19    - Unknown word (Binding)     -- (case Binding.Kind is
Engine/neo-world-commands.adb:204:26    - Unknown word (Impulse)     -- when Mouse_Impulse => Binding.Mouse'Wide
Engine/neo-world-commands.adb:204:39    - Unknown word (Binding)     -- when Mouse_Impulse   => Binding.Mouse'Wide_Image, -
Engine/neo-world-commands.adb:204:53    - Unknown word (Wide)        -- Impulse => Binding.Mouse'Wide_Image, --"mouse",
Engine/neo-world-commands.adb:205:24    - Unknown word (Impulse)     -- when Key_Impulse => Binding.Key'Wide
Engine/neo-world-commands.adb:205:39    - Unknown word (Binding)     -- when Key_Impulse     => Binding.Key'Wide_Image,
Engine/neo-world-commands.adb:205:51    - Unknown word (Wide)        -- Impulse => Binding.Key'Wide_Image,
Engine/neo-world-commands.adb:206:20    - Unknown word (Stick)       -- when Stick_Impulse => Binding
Engine/neo-world-commands.adb:206:39    - Unknown word (Binding)     -- when Stick_Impulse   => Binding.Stick'Wide_Image,
Engine/neo-world-commands.adb:206:47    - Unknown word (Stick)       -- Impulse => Binding.Stick'Wide_Image,
Engine/neo-world-commands.adb:206:53    - Unknown word (Wide)        -- Impulse => Binding.Stick'Wide_Image,
Engine/neo-world-commands.adb:210:20    - Unknown word (Cursor)      -- when Cursor_Impulse => "cursor
Engine/neo-world-commands.adb:210:40    - Unknown word (cursor)      -- Cursor_Impulse => "cursor");
Engine/neo-world-commands.adb:217:21    - Unknown word (Bind)        -- procedure Command_Bind (Args : Array_Str_Unbound
Engine/neo-world-commands.adb:218:32    - Unknown word (Impulses)    -- Impulse : Impulse_State := Impulses.Get (Args (1));
Engine/neo-world-commands.adb:222:18    - Unknown word (stick)       -- -- Gamepad stick
Engine/neo-world-commands.adb:223:28    - Unknown word (stick)       -- if Index (Args (2), "stick") /= 0 then
Engine/neo-world-commands.adb:224:17    - Unknown word (Bindings)    -- Impulse.Bindings.Append (Gamepad (Stick
Engine/neo-world-commands.adb:224:43    - Unknown word (Stick)      -- Bindings.Append (Gamepad (Stick_Kind'Val (To_Str_8
Engine/neo-world-commands.adb:226:19    - Unknown word (could)      -- -- A button could be from the gamepad
Engine/neo-world-commands.adb:229:19    - Unknown word (Bindings)   -- Impulse.Bindings.Append (Gamepad (Gamepad
Engine/neo-world-commands.adb:22:44     - Unknown word (Unbound)      -- Info (Args : Array_Str_Unbound) is
Engine/neo-world-commands.adb:230:24    - Unknown word (Contraint)  -- exception when Contraint_Error =>
Engine/neo-world-commands.adb:231:19    - Unknown word (Bindings)   -- Impulse.Bindings.Append (Mouse (Mouse
Engine/neo-world-commands.adb:236:17    - Unknown word (Bindings)   -- Impulse.Bindings.Append (Gamepad (Trigger
Engine/neo-world-commands.adb:238:10    - Unknown word (Keyboard)   -- -- Keyboard
Engine/neo-world-commands.adb:23:40     - Unknown word (Kind)         -- Show_Clients (Client_Kind : Connection_Kind) is
Engine/neo-world-commands.adb:23:58     - Unknown word (Kind)         -- Client_Kind : Connection_Kind) is
Engine/neo-world-commands.adb:240:34    - Unknown word (Keyboard)   -- Impulse.Bindings.Append (Keyboard (Key_Kind'Val (To_Str
Engine/neo-world-commands.adb:246:16    - Unknown word (cursor)     -- -- Mouse cursor
Engine/neo-world-commands.adb:247:31    - Unknown word (cursor)     -- elsif Index (Args (2), "cursor") /= 0 then
Engine/neo-world-commands.adb:252:21    - Unknown word (Unbind)     -- procedure Command_Unbind (Args : Array_Str_Unbound
Engine/neo-world-commands.adb:25:50     - Unknown word (Kind)         -- Clients loop if Client.Kind = Client_Kind then
Engine/neo-world-commands.adb:25:64     - Unknown word (Kind)         -- Client.Kind = Client_Kind then
Engine/neo-world-commands.adb:282:21    - Unknown word (Recent)     -- procedure Command_Recent_Server_List (Args :
Engine/neo-world-commands.adb:286:20    - Unknown word (This)       -- --!helpmenu -- This brings up a special
Engine/neo-world-commands.adb:286:25    - Unknown word (brings)     -- --!helpmenu -- This brings up a special help menu
Engine/neo-world-commands.adb:286:37    - Unknown word (special)    -- -- This brings up a special help menu with information
Engine/neo-world-commands.adb:286:45    - Unknown word (help)       -- brings up a special help menu with information
Engine/neo-world-commands.adb:286:8     - Unknown word (helpmenu)   -- --!helpmenu -- This brings up a
Engine/neo-world-commands.adb:287:14    - Unknown word (This)       -- --maprate -- This brings up specific informatio
Engine/neo-world-commands.adb:287:19    - Unknown word (brings)     -- --maprate -- This brings up specific information
Engine/neo-world-commands.adb:287:3     - Unknown word (maprate)    -- --maprate -- This brings up specific
Engine/neo-world-commands.adb:287:66    - Unknown word (regarding)  -- information for you to view regarding the servers map rate
Engine/neo-world-commands.adb:288:16    - Unknown word (This)       -- --maprating -- This brings up a menu for
Engine/neo-world-commands.adb:288:21    - Unknown word (brings)     -- --maprating -- This brings up a menu for you to
Engine/neo-world-commands.adb:288:3     - Unknown word (maprating)  -- --maprating -- This brings up a
Engine/neo-world-commands.adb:288:62    - Unknown word (currently)  -- you to rate the map currently being played.
Engine/neo-world-commands.adb:288:72    - Unknown word (being)      -- rate the map currently being played.
Engine/neo-world-commands.adb:288:78    - Unknown word (played)     -- map currently being played.
Engine/neo-world-commands.adb:289:11    - Unknown word (This)       -- --!die -- This cause you to forefit
Engine/neo-world-commands.adb:289:16    - Unknown word (cause)      -- --!die -- This cause you to forefit your
Engine/neo-world-commands.adb:289:29    - Unknown word (forefit)    -- - This cause you to forefit your life or commit
Engine/neo-world-commands.adb:289:37    - Unknown word (your)       -- cause you to forefit your life or commit sucide
Engine/neo-world-commands.adb:289:57    - Unknown word (sucide)     -- your life or commit sucide.
Engine/neo-world-commands.adb:28:45     - Unknown word (Wide)         -- & TAB & Client.Rate'Wide_Image
Engine/neo-world-commands.adb:290:10    - Unknown word (This)       -- --hlx -- This brings up your player
Engine/neo-world-commands.adb:290:15    - Unknown word (brings)     -- --hlx -- This brings up your player statistics
Engine/neo-world-commands.adb:290:25    - Unknown word (your)       -- hlx -- This brings up your player statistics for
Engine/neo-world-commands.adb:290:64    - Unknown word (that)       -- statistics for the servers that run the HlStatsX system
Engine/neo-world-commands.adb:290:79    - Unknown word (Stats)      -- servers that run the HlStatsX system.
Engine/neo-world-commands.adb:291:24    - Unknown word (brings)      -- achievement -- This brings up information regarding
Engine/neo-world-commands.adb:291:4     - Unknown word (achievement) -- --!achievement -- This brings up information
Engine/neo-world-commands.adb:291:46    - Unknown word (regarding)   -- brings up information regarding your specific achievements
Engine/neo-world-commands.adb:291:56    - Unknown word (your)        -- information regarding your specific achievements
Engine/neo-world-commands.adb:291:70    - Unknown word (achievements) -- regarding your specific achievements towards the achievements
Engine/neo-world-commands.adb:291:83    - Unknown word (towards)      -- specific achievements towards the achievements on
Engine/neo-world-commands.adb:291:95    - Unknown word (achievements) -- achievements towards the achievements on the server.
Engine/neo-world-commands.adb:292:120   - Unknown word (allow)        -- the option enabled to allow public votes to kick
Engine/neo-world-commands.adb:292:142   - Unknown word (kick)         -- allow public votes to kick players.
Engine/neo-world-commands.adb:292:147   - Unknown word (players)      -- public votes to kick players.
Engine/neo-world-commands.adb:292:24    - Unknown word (starts)       -- votekick -- This starts a vote to kick a specific
Engine/neo-world-commands.adb:292:41    - Unknown word (kick)         -- This starts a vote to kick a specific player from
Engine/neo-world-commands.adb:292:7     - Unknown word (votekick)     -- -- votekick -- This starts a vote
Engine/neo-world-commands.adb:293:114   - Unknown word (allow)        -- the option enabled to allow public votes to ban
Engine/neo-world-commands.adb:293:140   - Unknown word (players)      -- public votes to ban players.
Engine/neo-world-commands.adb:293:19    - Unknown word (starts)       -- --voteban -- This starts a vote to ban a specific
Engine/neo-world-commands.adb:293:3     - Unknown word (voteban)      -- --voteban -- This starts a vote
Engine/neo-world-commands.adb:294:19    - Unknown word (starts)       -- --votemap -- This starts a vote to change the
Engine/neo-world-commands.adb:294:3     - Unknown word (votemap)      -- --votemap -- This starts a vote
Engine/neo-world-commands.adb:294:75    - Unknown word (another)      -- from the current map to another map
Engine/neo-world-commands.adb:295:15    - Unknown word (starts)       -- --rtv -- This starts a vote which queries
Engine/neo-world-commands.adb:295:29    - Unknown word (which)        -- This starts a vote which queries the players
Engine/neo-world-commands.adb:295:47    - Unknown word (players)      -- vote which queries the players on the server to determine
Engine/neo-world-commands.adb:295:72    - Unknown word (determine)    -- players on the server to determine if they want to conduct
Engine/neo-world-commands.adb:295:85    - Unknown word (they)         -- server to determine if they want to conduct a vote
Engine/neo-world-commands.adb:295:90    - Unknown word (want)         -- to determine if they want to conduct a vote to
Engine/neo-world-commands.adb:295:98    - Unknown word (conduct)      -- determine if they want to conduct a vote to change the
Engine/neo-world-commands.adb:296:102   - Unknown word (round)        -- started at the end of the round or due to a rtv vote
Engine/neo-world-commands.adb:296:129   - Unknown word (being)        -- or due to a rtv vote being initiated.
Engine/neo-world-commands.adb:296:135   - Unknown word (initiated)    -- to a rtv vote being initiated.
Engine/neo-world-commands.adb:296:20    - Unknown word (nominates)    -- --nominate -- This nominates a specific map in regards
Engine/neo-world-commands.adb:296:3     - Unknown word (nominate)     -- --nominate -- This nominates a
Engine/neo-world-commands.adb:296:48    - Unknown word (regards)      -- nominates a specific map in regards to pending map vote
Engine/neo-world-commands.adb:296:76    - Unknown word (started)      -- to pending map vote started at the end of the round
Engine/neo-world-commands.adb:29:40     - Unknown word (Pint)         -- & TAB & Client.Pint'Wide_Image
Engine/neo-world-commands.adb:29:45     - Unknown word (Wide)         -- & TAB & Client.Pint'Wide_Image
Engine/neo-world-commands.adb:30:45     - Unknown word (Packet)       -- & TAB & Client.Last_Packet_Time);
Engine/neo-world-commands.adb:37:46     - Unknown word (Zombies)      -- Line_Info ("Zombies: ");   Show_Clients
Engine/neo-world-commands.adb:37:75     - Unknown word (Zombie)       -- "); Show_Clients (Zombie_Status);
Engine/neo-world-commands.adb:38:46     - Unknown word (Incomming)    -- Line_Info ("Incomming: "); Show_Clients (Incoming
Engine/neo-world-commands.adb:42:43     - Unknown word (Unbound)      -- Map (Args : Array_Str_Unbound) is
Engine/neo-world-commands.adb:44:25     - Unknown word (multi)        -- --if Args (2) /= "multi" then Initialize_Single
Engine/neo-world-commands.adb:44:48     - Unknown word (Single)       -- multi" then Initialize_Single_Player (Args (2)); end
Engine/neo-world-commands.adb:48:24     - Unknown word (Single)       -- - if Arg (2) = "Single_Player_Game" then
Engine/neo-world-commands.adb:49:23     - Unknown word (Single)       -- -- Initialize_Single_Player (Server_Map)
Engine/neo-world-commands.adb:51:10     - Unknown word (char)         -- -- char *cmd;
Engine/neo-world-commands.adb:52:10     - Unknown word (char)         -- -- char *map;
Engine/neo-world-commands.adb:53:10     - Unknown word (qboolean)     -- -- qboolean killBots, cheat;
Engine/neo-world-commands.adb:53:20     - Unknown word (kill)         -- -- qboolean  killBots, cheat;
Engine/neo-world-commands.adb:53:30     - Unknown word (cheat)        -- qboolean killBots, cheat;
Engine/neo-world-commands.adb:54:10     - Unknown word (char)         -- -- char expanded[MAX_QPATH
Engine/neo-world-commands.adb:54:18     - Unknown word (expanded)     -- -- char    expanded[MAX_QPATH];
Engine/neo-world-commands.adb:54:31     - Unknown word (QPATH)        -- char expanded[MAX_QPATH];
Engine/neo-world-commands.adb:55:10     - Unknown word (char)         -- -- char mapname[MAX_QPATH
Engine/neo-world-commands.adb:55:18     - Unknown word (mapname)      -- -- char    mapname[MAX_QPATH];
Engine/neo-world-commands.adb:55:30     - Unknown word (QPATH)        -- char mapname[MAX_QPATH];
Engine/neo-world-commands.adb:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo-world-commands.adb:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo-world-commands.adb:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo-world-commands.adb:60:18     - Unknown word (sure)         -- -- -- make sure the level exists before
Engine/neo-world-commands.adb:60:33     - Unknown word (exists)       -- make sure the level exists before trying to change
Engine/neo-world-commands.adb:60:40     - Unknown word (before)       -- sure the level exists before trying to change, so
Engine/neo-world-commands.adb:60:47     - Unknown word (trying)       -- level exists before trying to change, so that
Engine/neo-world-commands.adb:60:68     - Unknown word (that)         -- trying to change, so that
Engine/neo-world-commands.adb:61:15     - Unknown word (typo)         -- -- -- a typo at the server console
Engine/neo-world-commands.adb:62:14     - Unknown word (sprintf)      -- -- Com_sprintf (expanded, sizeof(expanded
Engine/neo-world-commands.adb:62:23     - Unknown word (expanded)     -- -- Com_sprintf (expanded, sizeof(expanded),
Engine/neo-world-commands.adb:62:40     - Unknown word (expanded)     -- sprintf (expanded, sizeof(expanded), "maps/%s.bsp", map
Engine/neo-world-commands.adb:62:52     - Unknown word (maps)         -- sizeof(expanded), "maps/%s.bsp", map);
Engine/neo-world-commands.adb:63:28     - Unknown word (expanded)     -- if ( FS_ReadFile (expanded, NULL) == -1 ) {
Engine/neo-world-commands.adb:64:31     - Unknown word (find)         -- Com_Printf ("Can't find map %s\n", expanded
Engine/neo-world-commands.adb:64:47     - Unknown word (expanded)     -- Can't find map %s\n", expanded);
Engine/neo-world-commands.adb:67:49     - Unknown word (Unbound)      -- Type (Args : Array_Str_Unbound) is
Engine/neo-world-commands.adb:70:19     - Unknown word (latched)      -- -- -- force latched values to get set
Engine/neo-world-commands.adb:71:23     - Unknown word (gametype)     -- -- Cvar_Get ("g_gametype", "0", CVAR_SERVERINFO
Engine/neo-world-commands.adb:71:44     - Unknown word (SERVERINFO)   -- gametype", "0", CVAR_SERVERINFO | CVAR_USERINFO | CVAR
Engine/neo-world-commands.adb:71:62     - Unknown word (USERINFO)     -- CVAR_SERVERINFO | CVAR_USERINFO | CVAR_LATCH );
Engine/neo-world-commands.adb:71:78     - Unknown word (LATCH)        -- CVAR_USERINFO | CVAR_LATCH );
Engine/neo-world-commands.adb:73:16     - Unknown word (stricmpn)     -- -- if( Q_stricmpn( cmd, "sp", 2 ) ==
Engine/neo-world-commands.adb:74:30     - Unknown word (gametype)     -- Cvar_SetValue( "g_gametype", GT_SINGLE_PLAYER
Engine/neo-world-commands.adb:74:44     - Unknown word (SINGLE)       -- SetValue( "g_gametype", GT_SINGLE_PLAYER );
Engine/neo-world-commands.adb:76:30     - Unknown word (maxclients)   -- -- may not set sv_maxclients directly, always set
Engine/neo-world-commands.adb:76:41     - Unknown word (directly)     -- not set sv_maxclients directly, always set latched
Engine/neo-world-commands.adb:76:51     - Unknown word (always)       -- maxclients directly, always set latched
Engine/neo-world-commands.adb:76:62     - Unknown word (latched)      -- directly, always set latched
Engine/neo-world-commands.adb:77:20     - Unknown word (Latched)      -- -- Cvar_SetLatched( "sv_maxclients", "
Engine/neo-world-commands.adb:77:33     - Unknown word (maxclients)   -- Cvar_SetLatched( "sv_maxclients", "8" );
Engine/neo-world-commands.adb:79:12     - Unknown word (cheat)        -- -- cheat = qfalse;
Engine/neo-world-commands.adb:79:20     - Unknown word (qfalse)       -- -- cheat = qfalse;
Engine/neo-world-commands.adb:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-world-commands.adb:80:12     - Unknown word (kill)         -- -- killBots = qtrue;
Engine/neo-world-commands.adb:80:23     - Unknown word (qtrue)        -- -- killBots = qtrue;
Engine/neo-world-commands.adb:83:20     - Unknown word (stricmp)      -- -- if ( !Q_stricmp( cmd, "devmap" ) ||
Engine/neo-world-commands.adb:83:35     - Unknown word (devmap)       -- ( !Q_stricmp( cmd, "devmap" ) || !Q_stricmp( cmd
Engine/neo-world-commands.adb:83:51     - Unknown word (stricmp)      -- cmd, "devmap" ) || !Q_stricmp( cmd, "spdevmap" )
Engine/neo-world-commands.adb:83:66     - Unknown word (spdevmap)     -- | !Q_stricmp( cmd, "spdevmap" ) ) {
Engine/neo-world-commands.adb:84:14     - Unknown word (cheat)        -- -- cheat = qtrue;
Engine/neo-world-commands.adb:84:22     - Unknown word (qtrue)       -- -- cheat = qtrue;
Engine/neo-world-commands.adb:85:14     - Unknown word (kill)        -- -- killBots = qtrue;
Engine/neo-world-commands.adb:85:25     - Unknown word (qtrue)       -- killBots = qtrue;
Engine/neo-world-commands.adb:87:14     - Unknown word (cheat)       -- -- cheat = qfalse;
Engine/neo-world-commands.adb:87:22     - Unknown word (qfalse)      -- -- cheat = qfalse;
Engine/neo-world-commands.adb:88:14     - Unknown word (kill)        -- -- killBots = qfalse;
Engine/neo-world-commands.adb:88:25     - Unknown word (qfalse)      -- killBots = qfalse;
Engine/neo-world-commands.adb:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-world-commands.adb:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-world-commands.adb:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo-world-commands.adb:90:19     - Unknown word (gametype)    -- -- if( sv_gametype->integer == GT_SINGLE
Engine/neo-world-commands.adb:90:43     - Unknown word (SINGLE)      -- gametype->integer == GT_SINGLE_PLAYER ) {
Engine/neo-world-commands.adb:91:32     - Unknown word (gametype)    -- Cvar_SetValue( "g_gametype", GT_FFA );
Engine/neo-world-commands.adb:94:31     - Unknown word (here)        -- - save the map name here cause on a map restart
Engine/neo-world-commands.adb:94:36     - Unknown word (cause)       -- save the map name here cause on a map restart we
Engine/neo-world-commands.adb:95:17     - Unknown word (thus)        -- -- -- and thus nuke the arguments of
Engine/neo-world-commands.adb:95:22     - Unknown word (nuke)        -- -- -- and thus nuke the arguments of the
Engine/neo-world-commands.adb:95:31     - Unknown word (arguments)   -- - and thus nuke the arguments of the map command
Engine/neo-world-commands.adb:96:12     - Unknown word (strncpyz)    -- -- Q_strncpyz(mapname, map, sizeof
Engine/neo-world-commands.adb:96:21     - Unknown word (mapname)     -- -- Q_strncpyz(mapname, map, sizeof(mapname
Engine/neo-world-commands.adb:96:42     - Unknown word (mapname)     -- mapname, map, sizeof(mapname));
Engine/neo-world-commands.adb:98:13     - Unknown word (Spawn)       -- -- SV_SpawnServer( mapname, killBots
Engine/neo-world-commands.adb:98:26     - Unknown word (mapname)     -- SV_SpawnServer( mapname, killBots );
Engine/neo-world-commands.adb:98:35     - Unknown word (kill)        -- SpawnServer( mapname, killBots );
Engine/neo-world-commands.adb:99:21     - Unknown word (cheat)       -- -- -- set the cheat value
Engine/neo-world-commands.ads:100:6     - Unknown word (Unbind)       -- -- Unbind --
Engine/neo-world-commands.ads:106:21    - Unknown word (Unbind)       -- procedure Command_Unbind (Args : Array_Str_Unbound
Engine/neo-world-commands.ads:107:11    - Unknown word (Unbind)       -- package Unbind is new Command (Name
Engine/neo-world-commands.ads:107:47    - Unknown word (unbind)       -- Command (Name     => "unbind",
Engine/neo-world-commands.ads:108:47    - Unknown word (Unbind)       -- Info => "Unbind an impulse to an input
Engine/neo-world-commands.ads:109:47    - Unknown word (unbind)       -- Usage => "unbind [player#] [impulse]
Engine/neo-world-commands.ads:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-world-commands.ads:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-world-commands.ads:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo-world-commands.ads:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-world-commands.ads:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-world-commands.ads:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-world-commands.ads:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-world-commands.ads:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-world-commands.ads:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-world-commands.ads:110:54    - Unknown word (Unbind)       -- Callback => Command_Unbind);
Engine/neo-world-commands.ads:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-world-commands.ads:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-world-commands.ads:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-world-commands.ads:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-world-commands.ads:135:44    - Unknown word (unbind)       -- Usage => "unbind [player#] [impulse]
Engine/neo-world-commands.ads:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-world-commands.ads:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-world-commands.ads:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-world-commands.ads:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-world-commands.ads:161:45    - Unknown word (unbind)       -- Usage => "unbind [player#] [impulse]
Engine/neo-world-commands.ads:16:9      - Unknown word (facing)       -- -- User facing interactive settings
Engine/neo-world-commands.ads:174:48    - Unknown word (unbind)       -- Usage => "unbind [player#] [impulse]
Engine/neo-world-commands.ads:178:6     - Unknown word (Recent)       -- -- Recent --
Engine/neo-world-commands.ads:184:21    - Unknown word (Recent)       -- procedure Command_Recent_Server_List (Args :
Engine/neo-world-commands.ads:185:11    - Unknown word (Recent)       -- package Recent is new Command (Name
Engine/neo-world-commands.ads:185:47    - Unknown word (recent)       -- Command (Name     => "recent",
Engine/neo-world-commands.ads:188:54    - Unknown word (Recent)       -- Callback => Command_Recent_Server_List);
Engine/neo-world-commands.ads:26:48     - Unknown word (Unbound)      -- Time (Args : Array_Str_Unbound); --  := NULL_ARRAY
Engine/neo-world-commands.ads:26:80     - Unknown word (UNBOUND)      -- := NULL_ARRAY_STR_UNBOUND);
Engine/neo-world-commands.ads:27:49     - Unknown word (thetime)      -- Command (Name     => "thetime",
Engine/neo-world-commands.ads:28:49     - Unknown word (Bind)         -- Info => "Bind an impulse to an input
Engine/neo-world-commands.ads:28:57     - Unknown word (impulse)      -- Info => "Bind an impulse to an input value",
Engine/neo-world-commands.ads:29:49     - Unknown word (bind)         -- Usage => "bind [player#] [impulse]
Engine/neo-world-commands.ads:29:65     - Unknown word (impulse)      -- => "bind [player#] [impulse] [value]",
Engine/neo-world-commands.ads:30:36     - Unknown word (Callback)     -- Callback => Command_The_Time
Engine/neo-world-commands.ads:33:6      - Unknown word (Kick)         -- -- Kick --
Engine/neo-world-commands.ads:39:21     - Unknown word (Kick)         -- procedure Command_Kick (Args : Array_Str_Unbound
Engine/neo-world-commands.ads:39:44     - Unknown word (Unbound)      -- Kick (Args : Array_Str_Unbound); --  := NULL_ARRAY
Engine/neo-world-commands.ads:39:76     - Unknown word (UNBOUND)      -- := NULL_ARRAY_STR_UNBOUND);
Engine/neo-world-commands.ads:40:11     - Unknown word (Kick)         -- package Kick is new Command (Name
Engine/neo-world-commands.ads:40:45     - Unknown word (kick)         -- Command (Name     => "kick",
Engine/neo-world-commands.ads:41:45     - Unknown word (Bind)         -- Info => "Bind an impulse to an input
Engine/neo-world-commands.ads:41:53     - Unknown word (impulse)      -- Info => "Bind an impulse to an input value",
Engine/neo-world-commands.ads:42:45     - Unknown word (bind)         -- Usage => "bind [player#] [impulse]
Engine/neo-world-commands.ads:42:61     - Unknown word (impulse)      -- => "bind [player#] [impulse] [value]",
Engine/neo-world-commands.ads:43:32     - Unknown word (Callback)     -- Callback => Command_Kick);
Engine/neo-world-commands.ads:43:52     - Unknown word (Kick)         -- Callback => Command_Kick);
Engine/neo-world-commands.ads:52:43     - Unknown word (Unbound)      -- Ban (Args : Array_Str_Unbound); --  := NULL_ARRAY
Engine/neo-world-commands.ads:52:75     - Unknown word (UNBOUND)      -- := NULL_ARRAY_STR_UNBOUND);
Engine/neo-world-commands.ads:54:44     - Unknown word (Bind)         -- Info => "Bind an impulse to an input
Engine/neo-world-commands.ads:54:52     - Unknown word (impulse)      -- Info => "Bind an impulse to an input value",
Engine/neo-world-commands.ads:55:44     - Unknown word (bind)         -- Usage => "bind [player#] [impulse]
Engine/neo-world-commands.ads:56:31     - Unknown word (Callback)     -- Callback => Command_Ban);
Engine/neo-world-commands.ads:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo-world-commands.ads:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo-world-commands.ads:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo-world-commands.ads:65:44     - Unknown word (Unbound)      -- Info (Args : Array_Str_Unbound); --  := NULL_ARRAY
Engine/neo-world-commands.ads:65:76     - Unknown word (UNBOUND)      -- := NULL_ARRAY_STR_UNBOUND);
Engine/neo-world-commands.ads:67:45     - Unknown word (Bind)         -- Info => "Bind an impulse to an input
Engine/neo-world-commands.ads:68:45     - Unknown word (bind)         -- Usage => "bind [player#] [impulse]
Engine/neo-world-commands.ads:69:32     - Unknown word (Callback)     -- Callback => Command_Info);
Engine/neo-world-commands.ads:78:43     - Unknown word (Unbound)      -- Say (Args : Array_Str_Unbound); --  := NULL_ARRAY
Engine/neo-world-commands.ads:78:75     - Unknown word (UNBOUND)      -- := NULL_ARRAY_STR_UNBOUND);
Engine/neo-world-commands.ads:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-world-commands.ads:80:44     - Unknown word (Bind)         -- Info => "Bind an impulse to an input
Engine/neo-world-commands.ads:81:44     - Unknown word (bind)         -- Usage => "bind [player#] [impulse]
Engine/neo-world-commands.ads:82:31     - Unknown word (Callback)     -- Callback => Command_Say);
Engine/neo-world-commands.ads:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-world-commands.ads:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-world-commands.ads:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo-world-commands.ads:91:17     - Unknown word (Binds)        -- function Save_Binds return Str;
Engine/neo-world-commands.ads:97:49     - Unknown word (Binds)        -- Save => Save_Binds'Access);
Engine/neo-world-cvars.ads:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-world-cvars.ads:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-world-cvars.ads:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo-world-cvars.ads:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-world-cvars.ads:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-world-cvars.ads:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-world-cvars.ads:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-world-cvars.ads:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-world-cvars.ads:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-world-cvars.ads:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-world-cvars.ads:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-world-cvars.ads:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-world-cvars.ads:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-world-cvars.ads:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-world-cvars.ads:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-world-cvars.ads:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-world-cvars.ads:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-world-cvars.ads:19:6      - Unknown word (Rendering)    -- -- Rendering --
Engine/neo-world-cvars.ads:22:6      - Unknown word (Renderer)     -- -- Renderer
Engine/neo-world-cvars.ads:24:19     - Unknown word (Memory)       -- package Max_GPU_Memory is new CVar (CVAR
Engine/neo-world-cvars.ads:24:53     - Unknown word (maxgpumb)     -- new CVar (CVAR_R & "maxgpumb", "GPU local memory
Engine/neo-world-cvars.ads:24:78     - Unknown word (memory)       -- maxgpumb", "GPU local memory in MB",         Int
Engine/neo-world-cvars.ads:25:15     - Unknown word (Visible)      -- package Max_Visible_Memory is new CVar
Engine/neo-world-cvars.ads:25:23     - Unknown word (Memory)       -- package Max_Visible_Memory is new CVar (CVAR_R
Engine/neo-world-cvars.ads:25:53     - Unknown word (maxhostmb)    -- new CVar (CVAR_R & "maxhostmb", "CPU visible memory
Engine/neo-world-cvars.ads:25:72     - Unknown word (visible)      -- "maxhostmb", "CPU visible memory in MB",
Engine/neo-world-cvars.ads:25:80     - Unknown word (memory)       -- maxhostmb", "CPU visible memory in MB",       Int_Ptr
Engine/neo-world-cvars.ads:26:53     - Unknown word (maxuploadmb)  -- new CVar (CVAR_R & "maxuploadmb", "GPU upload buffer
Engine/neo-world-cvars.ads:27:110    - Unknown word (Kind)         -- tialiasing samples", Sampling_Kind, No_Sampling);
Engine/neo-world-cvars.ads:27:78     - Unknown word (antialiasing) -- sampling", "Number of antialiasing samples", Sampling_Kind
Engine/neo-world-cvars.ads:31:118    - Unknown word (False)        -- 1, False);
Engine/neo-world-cvars.ads:31:85     - Unknown word (Positive)     -- of running tasks",  Positive, 1,
Engine/neo-world-cvars.ads:32:101    - Unknown word (Other)        -- action", Activated_Kind, Other_Activated, False);
Engine/neo-world-cvars.ads:32:118    - Unknown word (False)        -- Kind, Other_Activated, False);
Engine/neo-world-cvars.ads:32:95     - Unknown word (Kind)         -- window action", Activated_Kind, Other_Activated, False
Engine/neo-world-cvars.ads:33:101    - Unknown word (Inactive)     -- Cursor_Kind, Inactive_Cursor, False);
Engine/neo-world-cvars.ads:33:11     - Unknown word (Cursor)       -- package Cursor is new CVar (CVAR
Engine/neo-world-cvars.ads:33:110    - Unknown word (Cursor)       -- Cursor_Kind, Inactive_Cursor, False);
Engine/neo-world-cvars.ads:33:118    - Unknown word (False)        -- Inactive_Cursor, False);
Engine/neo-world-cvars.ads:33:45     - Unknown word (cursor)       -- new CVar (CVAR_S & "cursor", "Cursor style"
Engine/neo-world-cvars.ads:33:58     - Unknown word (Cursor)       -- CVAR_S & "cursor",    "Cursor style",
Engine/neo-world-cvars.ads:33:65     - Unknown word (style)        -- cursor", "Cursor style", Cursor
Engine/neo-world-cvars.ads:33:85     - Unknown word (Cursor)       -- style", Cursor_Kind, Inactive_Cursor
Engine/neo-world-cvars.ads:33:92     - Unknown word (Kind)         -- Cursor_Kind, Inactive_Cursor
Engine/neo-world-cvars.ads:34:101    - Unknown word (True)         -- Bool, True, False);
Engine/neo-world-cvars.ads:34:118    - Unknown word (False)        -- True, False);
Engine/neo-world-cvars.ads:34:45     - Unknown word (inmenu)       -- new CVar (CVAR_S & "inmenu", "Cursor capture
Engine/neo-world-cvars.ads:34:58     - Unknown word (Cursor)       -- CVAR_S & "inmenu",    "Cursor capture",
Engine/neo-world-cvars.ads:34:65     - Unknown word (capture)      -- inmenu", "Cursor capture", Bool,
Engine/neo-world-cvars.ads:36:6      - Unknown word (Windowing)    -- -- Windowing
Engine/neo-world-cvars.ads:38:103    - Unknown word (Windowed)     -- Mode_Kind, Windowed_Mode);
Engine/neo-world-cvars.ads:38:11     - Unknown word (Mode)         -- package Mode is new CVar
Engine/neo-world-cvars.ads:38:112    - Unknown word (Mode)         -- Mode_Kind, Windowed_Mode);
Engine/neo-world-cvars.ads:38:50     - Unknown word (mode)         -- new CVar (CVAR_W & "mode", "Window mode",
Engine/neo-world-cvars.ads:38:68     - Unknown word (mode)         -- "mode", "Window mode", Mode
Engine/neo-world-cvars.ads:38:92     - Unknown word (Mode)         -- mode", Mode_Kind, Windowed_Mode
Engine/neo-world-cvars.ads:38:97     - Unknown word (Kind)         -- Mode_Kind, Windowed_Mode);
Engine/neo-world-cvars.ads:39:11     - Unknown word (Aspect)       -- package Aspect_Narrow_X is new CVar
Engine/neo-world-cvars.ads:39:18     - Unknown word (Narrow)       -- package Aspect_Narrow_X is new CVar (CVAR
Engine/neo-world-cvars.ads:39:50     - Unknown word (narrowx)      -- new CVar (CVAR_W & "narrowx", "Windowed min narrow
Engine/neo-world-cvars.ads:39:61     - Unknown word (Windowed)     -- CVAR_W & "narrowx", "Windowed min narrow aspect x
Engine/neo-world-cvars.ads:39:74     - Unknown word (narrow)       -- narrowx", "Windowed min narrow aspect x", Positive
Engine/neo-world-cvars.ads:39:81     - Unknown word (aspect)       -- Windowed min narrow aspect x", Positive,  16);
Engine/neo-world-cvars.ads:39:92     - Unknown word (Positive)     -- min narrow aspect x", Positive, 16);
Engine/neo-world-cvars.ads:40:11     - Unknown word (Aspect)       -- package Aspect_Narrow_Y is new CVar
Engine/neo-world-cvars.ads:40:18     - Unknown word (Narrow)       -- package Aspect_Narrow_Y is new CVar (CVAR
Engine/neo-world-cvars.ads:40:50     - Unknown word (narrowy)      -- new CVar (CVAR_W & "narrowy", "Windowed min narrow
Engine/neo-world-cvars.ads:40:61     - Unknown word (Windowed)     -- CVAR_W & "narrowy", "Windowed min narrow aspect y
Engine/neo-world-cvars.ads:40:74     - Unknown word (narrow)       -- narrowy", "Windowed min narrow aspect y", Positive
Engine/neo-world-cvars.ads:40:81     - Unknown word (aspect)       -- Windowed min narrow aspect y", Positive,  9);
Engine/neo-world-cvars.ads:40:92     - Unknown word (Positive)     -- min narrow aspect y", Positive, 9);
Engine/neo-world-cvars.ads:41:11     - Unknown word (Aspect)       -- package Aspect_Wide_X is new CVar
Engine/neo-world-cvars.ads:41:18     - Unknown word (Wide)         -- package Aspect_Wide_X is new CVar (CVAR
Engine/neo-world-cvars.ads:41:50     - Unknown word (widex)        -- new CVar (CVAR_W & "widex", "Windowed min wide
Engine/neo-world-cvars.ads:41:61     - Unknown word (Windowed)     -- CVAR_W & "widex",   "Windowed min wide aspect x",
Engine/neo-world-cvars.ads:41:74     - Unknown word (wide)         -- widex", "Windowed min wide aspect x",   Positive
Engine/neo-world-cvars.ads:41:79     - Unknown word (aspect)       -- "Windowed min wide aspect x",   Positive,  4)
Engine/neo-world-cvars.ads:41:92     - Unknown word (Positive)     -- min wide aspect x",   Positive, 4);
Engine/neo-world-cvars.ads:42:11     - Unknown word (Aspect)       -- package Aspect_Wide_Y is new CVar
Engine/neo-world-cvars.ads:42:18     - Unknown word (Wide)         -- package Aspect_Wide_Y is new CVar (CVAR
Engine/neo-world-cvars.ads:42:50     - Unknown word (widey)        -- new CVar (CVAR_W & "widey", "Windowed min wide
Engine/neo-world-cvars.ads:42:61     - Unknown word (Windowed)     -- CVAR_W & "widey",   "Windowed min wide aspect y",
Engine/neo-world-cvars.ads:42:74     - Unknown word (wide)         -- widey", "Windowed min wide aspect y",   Positive
Engine/neo-world-cvars.ads:42:79     - Unknown word (aspect)       -- "Windowed min wide aspect y",   Positive,  3)
Engine/neo-world-cvars.ads:42:92     - Unknown word (Positive)     -- min wide aspect y",   Positive, 3);
Engine/neo-world-cvars.ads:43:18     - Unknown word (Height)       -- package Window_Height is new CVar (CVAR
Engine/neo-world-cvars.ads:43:50     - Unknown word (height)       -- new CVar (CVAR_W & "height", "Height of game window
Engine/neo-world-cvars.ads:43:61     - Unknown word (Height)       -- CVAR_W & "height",  "Height of game window",
Engine/neo-world-cvars.ads:44:18     - Unknown word (Width)        -- package Window_Width is new CVar (CVAR
Engine/neo-world-cvars.ads:44:50     - Unknown word (width)        -- new CVar (CVAR_W & "width", "Width of game window
Engine/neo-world-cvars.ads:44:61     - Unknown word (Width)        -- CVAR_W & "width",   "Width of game window",
Engine/neo-world-cvars.ads:47:33     - Unknown word (phyx)         -- PHYSX : constant Str := "phyx_";
Engine/neo-world-cvars.ads:47:8      - Unknown word (PHYSX)        -- CVAR_PHYSX : constant Str := "phyx
Engine/neo-world-cvars.ads:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo-world-cvars.ads:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo-world-cvars.ads:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo-world-cvars.ads:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-world-cvars.ads:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-world-cvars.ads:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-world-cvars.ads:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo-world-geometry.adb:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-world-geometry.adb:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-world-geometry.adb:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo-world-geometry.adb:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-world-geometry.adb:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-world-geometry.adb:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-world-geometry.adb:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-world-geometry.adb:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-world-geometry.adb:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-world-geometry.adb:117:32    - Unknown word (Color)        -- procedure Make_Line (P0, P1, Color : Point_3D; Result
Engine/neo-world-geometry.adb:119:14    - Unknown word (Verticies)    -- Result.Verticies := ;
Engine/neo-world-geometry.adb:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-world-geometry.adb:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-world-geometry.adb:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-world-geometry.adb:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-world-geometry.adb:120:12    - Unknown word (color)        -- glColor4f(color.x, color.y, color.z
Engine/neo-world-geometry.adb:120:21    - Unknown word (color)        -- glColor4f(color.x, color.y, color.z, 1.0f);
Engine/neo-world-geometry.adb:120:30    - Unknown word (color)        -- f(color.x, color.y, color.z, 1.0f);
Engine/neo-world-geometry.adb:120:4     - Unknown word (Color)        -- glColor4f(color.x, color.y,
Engine/neo-world-geometry.adb:124:10    - Unknown word (Pointer)      -- glVertexPointer(3, GL_FLOAT, sizeof
Engine/neo-world-geometry.adb:125:4     - Unknown word (Draw)         -- glDrawArrays(GL_LINES, 0,
Engine/neo-world-geometry.adb:127:4     - Unknown word (Color)        -- glColor4f(1.0f, 1.0f, 1.0f,
Engine/neo-world-geometry.adb:129:110   - Unknown word (semi)         -- float radius, bool semi_circle=false) is
Engine/neo-world-geometry.adb:129:115   - Unknown word (circle)       -- float radius, bool semi_circle=false) is
Engine/neo-world-geometry.adb:129:122   - Unknown word (false)        -- radius, bool semi_circle=false) is
Engine/neo-world-geometry.adb:129:18    - Unknown word (Circle)       -- procedure Make_Circle (udword nb_segments
Engine/neo-world-geometry.adb:129:26    - Unknown word (udword)       -- procedure Make_Circle (udword nb_segments, const Matrix
Engine/neo-world-geometry.adb:129:52    - Unknown word (Matrix)       -- udword nb_segments, const Matrix4x4& matrix, const Point
Engine/neo-world-geometry.adb:129:63    - Unknown word (matrix)       -- segments, const Matrix4x4& matrix, const Point& color
Engine/neo-world-geometry.adb:129:84    - Unknown word (color)        -- matrix, const Point& color, float radius, bool
Engine/neo-world-geometry.adb:132:22    - Unknown word (TWOPI)        -- float step = TWOPI / float(nb_segments
Engine/neo-world-geometry.adb:133:2     - Unknown word (udword)       -- udword segs = nb_segments;
Engine/neo-world-geometry.adb:133:9     - Unknown word (segs)         -- udword segs = nb_segments;
Engine/neo-world-geometry.adb:134:10    - Unknown word (circle)       -- if(semi_circle)
Engine/neo-world-geometry.adb:134:5     - Unknown word (semi)         -- if(semi_circle)
Engine/neo-world-geometry.adb:135:3     - Unknown word (segs)         -- segs /= 2;
Engine/neo-world-geometry.adb:137:48    - Unknown word (segs)         -- StackAlloc(sizeof(Point)*segs*2);
Engine/neo-world-geometry.adb:138:19    - Unknown word (segs)         -- for(udword i=0;i<segs;i++)
Engine/neo-world-geometry.adb:138:6     - Unknown word (udword)       -- for(udword i=0;i<segs;i++)
Engine/neo-world-geometry.adb:139:3     - Unknown word (udword)       -- udword j=i+1;
Engine/neo-world-geometry.adb:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-world-geometry.adb:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-world-geometry.adb:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-world-geometry.adb:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-world-geometry.adb:143:15    - Unknown word (angle)        -- const float angle0 = float(i) * step;
Engine/neo-world-geometry.adb:144:15    - Unknown word (angle)        -- const float angle1 = float(j) * step;
Engine/neo-world-geometry.adb:146:35    - Unknown word (sinf)         -- p0 = Point(radius * sinf(angle0), radius * cosf
Engine/neo-world-geometry.adb:146:40    - Unknown word (angle)        -- Point(radius * sinf(angle0), radius * cosf(angle
Engine/neo-world-geometry.adb:146:58    - Unknown word (cosf)         -- sinf(angle0), radius * cosf(angle0), 0.0f) * matrix
Engine/neo-world-geometry.adb:146:63    - Unknown word (angle)        -- angle0), radius * cosf(angle0), 0.0f) * matrix;
Engine/neo-world-geometry.adb:146:80    - Unknown word (matrix)       -- cosf(angle0), 0.0f) * matrix;
Engine/neo-world-geometry.adb:147:35    - Unknown word (sinf)         -- p1 = Point(radius * sinf(angle1), radius * cosf
Engine/neo-world-geometry.adb:147:40    - Unknown word (angle)        -- Point(radius * sinf(angle1), radius * cosf(angle
Engine/neo-world-geometry.adb:147:58    - Unknown word (cosf)         -- sinf(angle1), radius * cosf(angle1), 0.0f) * matrix
Engine/neo-world-geometry.adb:147:80    - Unknown word (matrix)       -- cosf(angle1), 0.0f) * matrix;
Engine/neo-world-geometry.adb:149:22    - Unknown word (color)        -- / DrawLine(p0, p1, color);
Engine/neo-world-geometry.adb:149:5     - Unknown word (Draw)         -- // DrawLine(p0, p1, color);
Engine/neo-world-geometry.adb:153:4     - Unknown word (Color)        -- glColor4f(color.x, color.y,
Engine/neo-world-geometry.adb:155:10    - Unknown word (Pointer)      -- glVertexPointer(3, GL_FLOAT, sizeof
Engine/neo-world-geometry.adb:156:4     - Unknown word (Draw)         -- glDrawArrays(GL_LINES, 0, nb
Engine/neo-world-geometry.adb:157:4     - Unknown word (Color)        -- glColor4f(1.0f, 1.0f, 1.0f,
Engine/neo-world-geometry.adb:159:18    - Unknown word (Triangle)     -- procedure Make_Triangle ();(const Point& p0
Engine/neo-world-geometry.adb:164:10    - Unknown word (Pointer)      -- glVertexPointer(3, GL_FLOAT, sizeof
Engine/neo-world-geometry.adb:167:30    - Unknown word (udword)       -- procedure Make_Polygon ();(udword nb_pts, const Point
Engine/neo-world-geometry.adb:16:24     - Unknown word (Geometry)     -- package body Neo.World.Geometry is
Engine/neo-world-geometry.adb:170:18    - Unknown word (Sphere)       -- procedure Make_Sphere ();(float radius, const
Engine/neo-world-geometry.adb:170:53    - Unknown word (pose)         -- float radius, const PR& pose) is
Engine/neo-world-geometry.adb:171:11    - Unknown word (Sphere)       -- void DrawSphereWireframe(float radius
Engine/neo-world-geometry.adb:171:2     - Unknown word (void)         -- void DrawSphereWireframe
Engine/neo-world-geometry.adb:171:51    - Unknown word (pose)         -- float radius, const PR& pose, const Point& color
Engine/neo-world-geometry.adb:171:7     - Unknown word (Draw)         -- void DrawSphereWireframe(float
Engine/neo-world-geometry.adb:173:8     - Unknown word (Matrix)       -- glPushMatrix();
Engine/neo-world-geometry.adb:174:10    - Unknown word (Matrix)       -- SetupGLMatrix(pose);
Engine/neo-world-geometry.adb:174:17    - Unknown word (pose)         -- SetupGLMatrix(pose);
Engine/neo-world-geometry.adb:174:3     - Unknown word (Setup)        -- SetupGLMatrix(pose);
Engine/neo-world-geometry.adb:175:5     - Unknown word (Scalef)      -- glScalef(radius, radius, radius
Engine/neo-world-geometry.adb:176:12    - Unknown word (Sphere)      -- glutSolidSphere(1.0f, 12, 12);
Engine/neo-world-geometry.adb:176:3     - Unknown word (glut)        -- glutSolidSphere(1.0f, 12
Engine/neo-world-geometry.adb:176:7     - Unknown word (Solid)       -- glutSolidSphere(1.0f, 12, 12)
Engine/neo-world-geometry.adb:177:7     - Unknown word (Matrix)      -- glPopMatrix();
Engine/neo-world-geometry.adb:179:39    - Unknown word (extents)     -- Box ();(const Point& extents, const PR& pose) is
Engine/neo-world-geometry.adb:179:58    - Unknown word (pose)        -- extents, const PR& pose) is
Engine/neo-world-geometry.adb:181:8     - Unknown word (Matrix)      -- glPushMatrix();
Engine/neo-world-geometry.adb:182:17    - Unknown word (pose)        -- SetupGLMatrix(pose);
Engine/neo-world-geometry.adb:182:3     - Unknown word (Setup)       -- SetupGLMatrix(pose);
Engine/neo-world-geometry.adb:183:12    - Unknown word (extents)     -- glScalef(extents.x, extents.y, extents
Engine/neo-world-geometry.adb:183:23    - Unknown word (extents)     -- glScalef(extents.x, extents.y, extents.z);
Engine/neo-world-geometry.adb:183:34    - Unknown word (extents)     -- extents.x, extents.y, extents.z);
Engine/neo-world-geometry.adb:183:5     - Unknown word (Scalef)      -- glScalef(extents.x, extents.y
Engine/neo-world-geometry.adb:184:3     - Unknown word (glut)        -- glutSolidCube(2.0f);
Engine/neo-world-geometry.adb:184:7     - Unknown word (Solid)       -- glutSolidCube(2.0f);
Engine/neo-world-geometry.adb:187:18    - Unknown word (Capsule)     -- procedure Make_Capsule ();(float r, float h
Engine/neo-world-geometry.adb:188:11    - Unknown word (Capsule)     -- void DrawCapsuleWireframe(float r, float
Engine/neo-world-geometry.adb:188:2     - Unknown word (void)        -- void DrawCapsuleWireframe
Engine/neo-world-geometry.adb:188:7     - Unknown word (Draw)        -- void DrawCapsuleWireframe(float
Engine/neo-world-geometry.adb:191:5     - Unknown word (Translatef)  -- glTranslatef(0.0f, h*0.5f, 0.0f)
Engine/neo-world-geometry.adb:192:5     - Unknown word (Scalef)      -- glScalef(r, r, r);
Engine/neo-world-geometry.adb:193:12    - Unknown word (Sphere)      -- glutSolidSphere(1.0f, 12, 12);  // doesn
Engine/neo-world-geometry.adb:193:3     - Unknown word (glut)        -- glutSolidSphere(1.0f, 12
Engine/neo-world-geometry.adb:193:38    - Unknown word (doesn't)     -- olidSphere(1.0f, 12, 12);  // doesn't include texcoords
Engine/neo-world-geometry.adb:193:7     - Unknown word (Solid)       -- glutSolidSphere(1.0f, 12, 12)
Engine/neo-world-geometry.adb:197:5     - Unknown word (Translatef)  -- glTranslatef(0.0f, -h*0.5f, 0.0f
Engine/neo-world-geometry.adb:198:5     - Unknown word (Scalef)      -- glScalef(r, r, r);
Engine/neo-world-geometry.adb:199:12    - Unknown word (Sphere)      -- glutSolidSphere(1.0f, 12, 12);  // doesn
Engine/neo-world-geometry.adb:199:3     - Unknown word (glut)        -- glutSolidSphere(1.0f, 12
Engine/neo-world-geometry.adb:199:38    - Unknown word (doesn't)     -- olidSphere(1.0f, 12, 12);  // doesn't include texcoords
Engine/neo-world-geometry.adb:199:7     - Unknown word (Solid)       -- glutSolidSphere(1.0f, 12, 12)
Engine/neo-world-geometry.adb:19:6      - Unknown word (Constants)    -- -- Constants --
Engine/neo-world-geometry.adb:203:5     - Unknown word (Translatef)  -- glTranslatef(0.0f, h*0.5f, 0.0f)
Engine/neo-world-geometry.adb:204:5     - Unknown word (Scalef)      -- glScalef(r, h, r);
Engine/neo-world-geometry.adb:205:5     - Unknown word (Rotatef)     -- glRotatef(90.0f, 1.0f, 0.0f,
Engine/neo-world-geometry.adb:206:16    - Unknown word (false)       -- DrawCylinder(false);
Engine/neo-world-geometry.adb:206:7     - Unknown word (Cylinder)    -- DrawCylinder(false);
Engine/neo-world-geometry.adb:209:18    - Unknown word (Cylinder)    -- procedure Make_Cylinder (Radius, Height : Real
Engine/neo-world-geometry.adb:209:36    - Unknown word (Height)      -- Make_Cylinder (Radius, Height : Real; Pose : ) is
Engine/neo-world-geometry.adb:209:51    - Unknown word (Pose)        -- Radius, Height : Real; Pose : ) is
Engine/neo-world-geometry.adb:212:11    - Unknown word (Pointer)     -- glVertexPointer(3, GL_FLOAT, 2*3*sizeof
Engine/neo-world-geometry.adb:212:52    - Unknown word (Cylinder)    -- 2*3*sizeof(float), gCylinderData);
Engine/neo-world-geometry.adb:213:12    - Unknown word (Pointer)     -- glNormalPointer(GL_FLOAT, 2*3*sizeof
Engine/neo-world-geometry.adb:213:50    - Unknown word (Cylinder)    -- 2*3*sizeof(float), gCylinderData+3);
Engine/neo-world-geometry.adb:214:17    - Unknown word (TRIANGLE)    -- glDrawArrays(GL_TRIANGLE_STRIP, 0, 13*2);
Engine/neo-world-geometry.adb:214:26    - Unknown word (STRIP)       -- glDrawArrays(GL_TRIANGLE_STRIP, 0, 13*2);
Engine/neo-world-geometry.adb:215:14    - Unknown word (Caps)        -- if Draw_Caps then
Engine/neo-world-geometry.adb:216:57    - Unknown word (Cylinder)    -- 2*3*sizeof(float), gCylinderDataCapsTop);
Engine/neo-world-geometry.adb:216:69    - Unknown word (Caps)        -- float), gCylinderDataCapsTop);
Engine/neo-world-geometry.adb:217:66    - Unknown word (Caps)        -- float), gCylinderDataCapsTop+3);
Engine/neo-world-geometry.adb:218:24    - Unknown word (TRIANGLES)   -- glDrawArrays(GL_TRIANGLES, 0, 36);
Engine/neo-world-geometry.adb:219:69    - Unknown word (Caps)        -- float), gCylinderDataCapsBottom);
Engine/neo-world-geometry.adb:219:73    - Unknown word (Bottom)      -- float), gCylinderDataCapsBottom);
Engine/neo-world-geometry.adb:220:66    - Unknown word (Caps)        -- float), gCylinderDataCapsBottom+3);
Engine/neo-world-geometry.adb:220:70    - Unknown word (Bottom)      -- float), gCylinderDataCapsBottom+3);
Engine/neo-world-geometry.adb:221:24    - Unknown word (TRIANGLES)   -- glDrawArrays(GL_TRIANGLES, 0, 36);
Engine/neo-world-geometry.adb:225:14    - Unknown word (Capsule)     -- -- void DrawCapsuleWireframe(float r, float
Engine/neo-world-geometry.adb:225:5     - Unknown word (void)        -- -- void DrawCapsuleWireframe
Engine/neo-world-geometry.adb:251:12    - Unknown word (Trans)       -- -- MM.SetTrans(p0);
Engine/neo-world-geometry.adb:252:10    - Unknown word (Circle)      -- -- DrawCircle(NbSegments, MM, color
Engine/neo-world-geometry.adb:252:43    - Unknown word (true)        -- NbSegments, MM, color, r, true); //halfcircle -- flipped
Engine/neo-world-geometry.adb:252:52    - Unknown word (halfcircle)  -- color, r, true);	//halfcircle -- flipped
Engine/neo-world-geometry.adb:252:66    - Unknown word (flipped)     -- true); //halfcircle -- flipped
Engine/neo-world-geometry.adb:257:12    - Unknown word (Trans)       -- -- MM.SetTrans(p1);
Engine/neo-world-geometry.adb:258:10    - Unknown word (Circle)      -- -- DrawCircle(NbSegments, MM, color
Engine/neo-world-geometry.adb:258:43    - Unknown word (true)        -- NbSegments, MM, color, r, true);
Engine/neo-world-geometry.adb:25:17     - Unknown word (VERTICIES)    -- CYLINDER_MESH_VERTICIES : constant := (1.0,
Engine/neo-world-geometry.adb:25:3      - Unknown word (CYLINDER)     -- CYLINDER_MESH_VERTICIES : constant
Engine/neo-world-geometry.adb:263:12    - Unknown word (Trans)       -- -- MM.SetTrans(p0);
Engine/neo-world-geometry.adb:264:10    - Unknown word (Circle)      -- -- DrawCircle(NbSegments, MM, color
Engine/neo-world-geometry.adb:264:43    - Unknown word (true)        -- NbSegments, MM, color, r, true);//halfcircle -- good
Engine/neo-world-geometry.adb:264:51    - Unknown word (halfcircle)  -- MM, color, r, true);//halfcircle -- good
Engine/neo-world-geometry.adb:264:65    - Unknown word (good)        -- true);//halfcircle -- good
Engine/neo-world-geometry.adb:269:12    - Unknown word (Trans)       -- -- MM.SetTrans(p1);
Engine/neo-world-geometry.adb:270:10    - Unknown word (Circle)      -- -- DrawCircle(NbSegments, MM, color
Engine/neo-world-geometry.adb:270:43    - Unknown word (true)        -- NbSegments, MM, color, r, true);
Engine/neo-world-geometry.adb:275:12    - Unknown word (Trans)       -- -- MM.SetTrans(p0);
Engine/neo-world-geometry.adb:276:46    - Unknown word (full)        -- NbSegments, MM, color, r);	//full circle
Engine/neo-world-geometry.adb:276:51    - Unknown word (circle)      -- MM, color, r);	//full circle
Engine/neo-world-geometry.adb:281:5     - Unknown word (void)        -- -- void DrawCylinder(float r
Engine/neo-world-geometry.adb:284:7     - Unknown word (Setup)       -- -- SetupGLMatrix(pose);
Engine/neo-world-geometry.adb:289:12    - Unknown word (Convex)      -- -- static ConvexHull* CreateConvexHull
Engine/neo-world-geometry.adb:289:18    - Unknown word (Hull)        -- -- static ConvexHull* CreateConvexHull(udword
Engine/neo-world-geometry.adb:289:30    - Unknown word (Convex)      -- static ConvexHull* CreateConvexHull(udword nb_verts
Engine/neo-world-geometry.adb:289:36    - Unknown word (Hull)        -- ConvexHull* CreateConvexHull(udword nb_verts, const
Engine/neo-world-geometry.adb:289:51    - Unknown word (verts)       -- CreateConvexHull(udword nb_verts, const Point* verts
Engine/neo-world-geometry.adb:289:71    - Unknown word (verts)       -- verts, const Point* verts)
Engine/neo-world-geometry.adb:291:12    - Unknown word (Hull)        -- -- ConvexHull* CH = ICE_NEW(ConvexHull
Engine/neo-world-geometry.adb:291:31    - Unknown word (Convex)      -- ConvexHull* CH = ICE_NEW(ConvexHull);
Engine/neo-world-geometry.adb:291:37    - Unknown word (Hull)        -- CH = ICE_NEW(ConvexHull);
Engine/neo-world-geometry.adb:291:6     - Unknown word (Convex)      -- -- ConvexHull* CH = ICE_NEW(ConvexHull
Engine/neo-world-geometry.adb:292:6     - Unknown word (ASSERT)      -- -- ASSERT(CH);
Engine/neo-world-geometry.adb:294:6     - Unknown word (CONVEXHULLCREATE) -- -- CONVEXHULLCREATE Create;
Engine/neo-world-geometry.adb:295:15    - Unknown word (Verts)            -- -- Create.NbVerts = nb_verts;
Engine/neo-world-geometry.adb:295:27    - Unknown word (verts)            -- Create.NbVerts = nb_verts;
Engine/neo-world-geometry.adb:296:13    - Unknown word (Vertices)         -- -- Create.Vertices = verts;
Engine/neo-world-geometry.adb:296:25    - Unknown word (verts)            -- Create.Vertices = verts;
Engine/neo-world-geometry.adb:297:13    - Unknown word (Unify)            -- -- Create.UnifyNormals = true;
Engine/neo-world-geometry.adb:297:18    - Unknown word (Normals)          -- -- Create.UnifyNormals = true;
Engine/neo-world-geometry.adb:297:28    - Unknown word (true)             -- Create.UnifyNormals = true;
Engine/neo-world-geometry.adb:301:6     - Unknown word (ASSERT)           -- -- ASSERT(status);
Engine/neo-world-geometry.adb:304:7     - Unknown word (DELETESINGLE)     -- -- DELETESINGLE(CH);
Engine/neo-world-geometry.adb:310:12    - Unknown word (void)             -- -- static void DrawHull(const ConvexHull
Engine/neo-world-geometry.adb:310:21    - Unknown word (Hull)             -- -- static void DrawHull(const ConvexHull& hull
Engine/neo-world-geometry.adb:310:32    - Unknown word (Convex)           -- void DrawHull(const ConvexHull& hull)
Engine/neo-world-geometry.adb:310:44    - Unknown word (hull)             -- DrawHull(const ConvexHull& hull)
Engine/neo-world-geometry.adb:312:25    - Unknown word (Verts)            -- const Point* ConvexVerts = hull.GetVerts();
Engine/neo-world-geometry.adb:312:33    - Unknown word (hull)             -- Point* ConvexVerts = hull.GetVerts();
Engine/neo-world-geometry.adb:312:41    - Unknown word (Verts)            -- ConvexVerts = hull.GetVerts();
Engine/neo-world-geometry.adb:313:21    - Unknown word (Polys)            -- -- const udword NbPolys = hull.GetNbPolygons
Engine/neo-world-geometry.adb:313:29    - Unknown word (hull)             -- const udword NbPolys = hull.GetNbPolygons();
Engine/neo-world-geometry.adb:313:39    - Unknown word (Polygons)         -- NbPolys = hull.GetNbPolygons();
Engine/neo-world-geometry.adb:314:18    - Unknown word (Polys)            -- -- //	printf("NbPolys: %d\n", NbPolys);
Engine/neo-world-geometry.adb:314:34    - Unknown word (Polys)            -- printf("NbPolys: %d\n", NbPolys);
Engine/neo-world-geometry.adb:316:25    - Unknown word (Polys)            -- for(udword i=0;i<NbPolys;i++)
Engine/neo-world-geometry.adb:318:40    - Unknown word (hull)             -- HullPolygon& PolygonData = hull.GetPolygon(i);
Engine/neo-world-geometry.adb:321:22    - Unknown word (Verts)            -- - const udword NbVertsInPoly = PolygonData
Engine/neo-world-geometry.adb:321:29    - Unknown word (Poly)             -- const udword NbVertsInPoly = PolygonData.mNbVerts
Engine/neo-world-geometry.adb:321:51    - Unknown word (Verts)            -- bVertsInPoly = PolygonData.mNbVerts;
Engine/neo-world-geometry.adb:322:22    - Unknown word (Tris)             -- - const udword NbTris = NbVertsInPoly - 2
Engine/neo-world-geometry.adb:322:38    - Unknown word (Poly)             -- udword NbTris = NbVertsInPoly - 2;
Engine/neo-world-geometry.adb:324:14    - Unknown word (Offset)           -- -- udword Offset = 1;
Engine/neo-world-geometry.adb:327:27    - Unknown word (Tris)             -- for(udword i=0;i<NbTris;i++)
Engine/neo-world-geometry.adb:330:38    - Unknown word (Offset)           -- udword VRef1 = Indices[Offset];
Engine/neo-world-geometry.adb:331:38    - Unknown word (Offset)           -- udword VRef2 = Indices[Offset+1];
Engine/neo-world-geometry.adb:332:9     - Unknown word (Offset)           -- -- Offset++;
Engine/neo-world-geometry.adb:336:25    - Unknown word (TRIANGLES)        -- glDrawArrays(GL_TRIANGLES, 0, 3);
Engine/neo-world-geometry.adb:341:14    - Unknown word (Vertices)         -- -- Point Vertices[1024];
Engine/neo-world-geometry.adb:342:34    - Unknown word (Poly)             -- udword i=0;i<NbVertsInPoly;i++)
Engine/neo-world-geometry.adb:344:9     - Unknown word (Vertices)         -- -- Vertices[i] = ConvexVerts[Indices
Engine/neo-world-geometry.adb:346:53    - Unknown word (Vertices)         -- FLOAT, sizeof(Point), &Vertices[0].x);
Engine/neo-world-geometry.adb:347:24    - Unknown word (TRIANGLE)         -- glDrawArrays(GL_TRIANGLE_FAN, 0, NbVertsInPoly
Engine/neo-world-geometry.adb:347:50    - Unknown word (Poly)             -- TRIANGLE_FAN, 0, NbVertsInPoly);
Engine/neo-world-geometry.adb:353:24    - Unknown word (Shape)            -- static Container* gShapeRenderers = null;
Engine/neo-world-geometry.adb:353:29    - Unknown word (Renderers)        -- static Container* gShapeRenderers = null;
Engine/neo-world-geometry.adb:355:12    - Unknown word (Pint)             -- -- static PintShapeRenderer* RegisterShapeRe
Engine/neo-world-geometry.adb:355:16    - Unknown word (Shape)            -- -- static PintShapeRenderer* RegisterShapeRendere
Engine/neo-world-geometry.adb:355:21    - Unknown word (Renderer)         -- -- static PintShapeRenderer* RegisterShapeRenderer
Engine/neo-world-geometry.adb:355:39    - Unknown word (Shape)            -- PintShapeRenderer* RegisterShapeRenderer(PintShapeRenderer
Engine/neo-world-geometry.adb:355:44    - Unknown word (Renderer)         -- ntShapeRenderer* RegisterShapeRenderer(PintShapeRenderer* renderer
Engine/neo-world-geometry.adb:355:53    - Unknown word (Pint)             -- RegisterShapeRenderer(PintShapeRenderer* renderer
Engine/neo-world-geometry.adb:355:57    - Unknown word (Shape)            -- RegisterShapeRenderer(PintShapeRenderer* renderer)
Engine/neo-world-geometry.adb:355:62    - Unknown word (Renderer)         -- egisterShapeRenderer(PintShapeRenderer* renderer)
Engine/neo-world-geometry.adb:355:72    - Unknown word (renderer)         -- peRenderer(PintShapeRenderer* renderer)
Engine/neo-world-geometry.adb:357:13    - Unknown word (renderer)         -- -- ASSERT(renderer);
Engine/neo-world-geometry.adb:357:6     - Unknown word (ASSERT)           -- -- ASSERT(renderer);
Engine/neo-world-geometry.adb:359:11    - Unknown word (Shape)            -- -- if(!gShapeRenderers)
Engine/neo-world-geometry.adb:359:16    - Unknown word (Renderers)        -- -- if(!gShapeRenderers)
Engine/neo-world-geometry.adb:360:13    - Unknown word (Renderers)        -- -- gShapeRenderers = ICE_NEW(Container
Engine/neo-world-geometry.adb:361:19    - Unknown word (Renderers)        -- -- ASSERT(gShapeRenderers);
Engine/neo-world-geometry.adb:361:6     - Unknown word (ASSERT)           -- -- ASSERT(gShapeRenderers);
Engine/neo-world-geometry.adb:363:12    - Unknown word (Renderers)        -- -- gShapeRenderers->Add(udword(renderer
Engine/neo-world-geometry.adb:363:34    - Unknown word (renderer)         -- gShapeRenderers->Add(udword(renderer));
Engine/neo-world-geometry.adb:364:13    - Unknown word (renderer)         -- -- return renderer;
Engine/neo-world-geometry.adb:367:12    - Unknown word (Pint)             -- -- class PintDLShapeRenderer : public
Engine/neo-world-geometry.adb:367:23    - Unknown word (Renderer)         -- class PintDLShapeRenderer : public PintShapeRenderer
Engine/neo-world-geometry.adb:367:41    - Unknown word (Pint)             -- PintDLShapeRenderer : public PintShapeRenderer
Engine/neo-world-geometry.adb:367:50    - Unknown word (Renderer)        -- apeRenderer : public PintShapeRenderer
Engine/neo-world-geometry.adb:369:18    - Unknown word (Cached)          -- -- Matrix4x4	mCached;
Engine/neo-world-geometry.adb:373:32    - Unknown word (Shadows)         -- PintDLShapeRenderer() : mShadows(true)
Engine/neo-world-geometry.adb:373:7     - Unknown word (Pint)            -- -- PintDLShapeRenderer() : mShadows
Engine/neo-world-geometry.adb:394:12    - Unknown word (Cached)          -- -- mCached = pose;
Engine/neo-world-geometry.adb:398:33    - Unknown word (Cached)          -- const Matrix4x4& M = mCached;
Engine/neo-world-geometry.adb:39:25     - Unknown word (VERTICIES)    -- CYLINDER_TOP_CAP_MESH_VERTICIES : constant := (B,
Engine/neo-world-geometry.adb:39:3      - Unknown word (CYLINDER)     -- CYLINDER_TOP_CAP_MESH_VERTICIES
Engine/neo-world-geometry.adb:400:17    - Unknown word (glmat)           -- -- float glmat[16]; //4x4 column major
Engine/neo-world-geometry.adb:400:34    - Unknown word (column)          -- float glmat[16];	//4x4 column major matrix for OpenGL
Engine/neo-world-geometry.adb:400:41    - Unknown word (major)           -- glmat[16]; //4x4 column major matrix for OpenGL.
Engine/neo-world-geometry.adb:400:47    - Unknown word (matrix)          -- //4x4 column major matrix for OpenGL.
Engine/neo-world-geometry.adb:401:11    - Unknown word (glmat)           -- -- glmat[0] = M.m[0][0];
Engine/neo-world-geometry.adb:402:11    - Unknown word (glmat)           -- -- glmat[1] = M.m[0][1];
Engine/neo-world-geometry.adb:403:11    - Unknown word (glmat)           -- -- glmat[2] = M.m[0][2];
Engine/neo-world-geometry.adb:404:11    - Unknown word (glmat)           -- -- glmat[3] = M.m[0][3];
Engine/neo-world-geometry.adb:421:13    - Unknown word (Mult)            -- -- glMultMatrixf(&(glmat[0]))
Engine/neo-world-geometry.adb:421:17    - Unknown word (Matrixf)         -- -- glMultMatrixf(&(glmat[0]));
Engine/neo-world-geometry.adb:422:19    - Unknown word (Matrixf)         -- -- //	glLoadMatrixf(&(glmat[0]));
Engine/neo-world-geometry.adb:427:10    - Unknown word (Setup)           -- -- SetupGLMatrix(pose);
Engine/neo-world-geometry.adb:430:11    - Unknown word (Call)            -- -- glCallList(mDisplayListNum
Engine/neo-world-geometry.adb:434:17    - Unknown word (Shadows)         -- -- if(0 && mShadows)
Engine/neo-world-geometry.adb:439:12    - Unknown word (Mult)            -- -- glMultMatrixf(shadowMat);
Engine/neo-world-geometry.adb:439:16    - Unknown word (Matrixf)         -- -- glMultMatrixf(shadowMat);
Engine/neo-world-geometry.adb:440:14    - Unknown word (Mult)            -- -- //				glMultMatrixf(glMat);
Engine/neo-world-geometry.adb:440:18    - Unknown word (Matrixf)         -- -- //				glMultMatrixf(glMat);
Engine/neo-world-geometry.adb:441:10    - Unknown word (Setup)           -- -- SetupGLMatrix(pose);
Engine/neo-world-geometry.adb:442:23    - Unknown word (LIGHTING)        -- glDisable(GL_LIGHTING);
Engine/neo-world-geometry.adb:444:12    - Unknown word (glut)            -- -- //glutSolidCube(float(size
Engine/neo-world-geometry.adb:444:16    - Unknown word (Solid)           -- -- //glutSolidCube(float(size_t(actor
Engine/neo-world-geometry.adb:444:39    - Unknown word (actor)           -- glutSolidCube(float(size_t(actor->userData))*2.0f);
Engine/neo-world-geometry.adb:445:12    - Unknown word (Call)            -- -- glCallList(mDisplayListNum
Engine/neo-world-geometry.adb:446:22    - Unknown word (LIGHTING)        -- - glEnable(GL_LIGHTING);
Engine/neo-world-geometry.adb:454:20    - Unknown word (Coeff)           -- -- const float Coeff = isStatic ? 0.5f :
Engine/neo-world-geometry.adb:455:26    - Unknown word (Coeff)           -- glColor3f(color.x*Coeff, color.y*Coeff, color
Engine/neo-world-geometry.adb:455:41    - Unknown word (Coeff)           -- color.x*Coeff, color.y*Coeff, color.z*Coeff);
Engine/neo-world-geometry.adb:455:56    - Unknown word (Coeff)           -- color.y*Coeff, color.z*Coeff);
Engine/neo-world-geometry.adb:458:23    - Unknown word (Shadows)         -- virtual void	SetShadows(bool flag)
Engine/neo-world-geometry.adb:458:36    - Unknown word (flag)            -- void SetShadows(bool flag)
Engine/neo-world-geometry.adb:460:19    - Unknown word (flag)            -- -- mShadows = flag;
Engine/neo-world-geometry.adb:460:9     - Unknown word (Shadows)         -- -- mShadows = flag;
Engine/neo-world-geometry.adb:463:8     - Unknown word (Luint)           -- -- GLuint mDisplayListNum;
Engine/neo-world-geometry.adb:464:14    - Unknown word (Shadows)         -- -- bool		mShadows;
Engine/neo-world-geometry.adb:479:16    - Unknown word (Capsule)         -- -- class PintCapsuleShapeRenderer : public
Engine/neo-world-geometry.adb:483:11    - Unknown word (Capsule)         -- -- PintCapsuleShapeRenderer(float r
Engine/neo-world-geometry.adb:507:41    - Unknown word (extents)         -- BoxShapeRenderer(const Point& extents)
Engine/neo-world-geometry.adb:520:41    - Unknown word (verts)           -- ConvexShapeRenderer(udword nb_verts, const Point* verts
Engine/neo-world-geometry.adb:523:8     - Unknown word (ASSERT)          -- -- ASSERT(CHull);
Engine/neo-world-geometry.adb:528:8     - Unknown word (DELETESINGLE)    -- -- DELETESINGLE(CHull);
Engine/neo-world-geometry.adb:536:35    - Unknown word (Surface)         -- PintMeshShapeRenderer(const SurfaceInterface& surface)
Engine/neo-world-geometry.adb:536:53    - Unknown word (surface)         -- const SurfaceInterface& surface)
Engine/neo-world-geometry.adb:540:20    - Unknown word (TRIANGLES)       -- -- glBegin(GL_TRIANGLES);
Engine/neo-world-geometry.adb:541:26    - Unknown word (surface)         -- for(udword i=0;i<surface.mNbFaces;i++)
Engine/neo-world-geometry.adb:543:31    - Unknown word (surface)         -- const udword VRef0 = surface.mDFaces[i*3+0];
Engine/neo-world-geometry.adb:544:31    - Unknown word (surface)         -- const udword VRef1 = surface.mDFaces[i*3+1];
Engine/neo-world-geometry.adb:545:31    - Unknown word (surface)         -- const udword VRef2 = surface.mDFaces[i*3+2];
Engine/neo-world-geometry.adb:549:51    - Unknown word (Normalize)       -- = ((p2-p0)^(p1-p0)).Normalize();
Engine/neo-world-geometry.adb:550:49    - Unknown word (Normalize)       -- = ((p1-p0)^(p2-p0)).Normalize();
Engine/neo-world-geometry.adb:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo-world-geometry.adb:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo-world-geometry.adb:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo-world-geometry.adb:76:12     - Unknown word (BOTTOM)       -- CYLINDER_BOTTOM_CAP_MESH_VERTICIES
Engine/neo-world-geometry.adb:76:28     - Unknown word (VERTICIES)    -- CYLINDER_BOTTOM_CAP_MESH_VERTICIES : constant := (1.0,
Engine/neo-world-geometry.adb:76:3      - Unknown word (CYLINDER)     -- CYLINDER_BOTTOM_CAP_MESH_VERTICIES
Engine/neo-world-geometry.adb:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-world-geometry.adb:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-world-geometry.adb:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-world-geometry.adb:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo-world-geometry.ads:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-world-geometry.ads:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-world-geometry.ads:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo-world-geometry.ads:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-world-geometry.ads:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-world-geometry.ads:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-world-geometry.ads:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-world-geometry.ads:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-world-geometry.ads:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-world-geometry.ads:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-world-geometry.ads:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-world-geometry.ads:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-world-geometry.ads:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-world-geometry.ads:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-world-geometry.ads:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-world-geometry.ads:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-world-geometry.ads:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-world-geometry.ads:16:19     - Unknown word (Geometry)     -- package Neo.World.Geometry is
Engine/neo-world-geometry.ads:19:6      - Unknown word (Primitives)   -- -- Primitives --
Engine/neo-world-geometry.ads:22:20     - Unknown word (Sphere)       -- --procedure Make_Sphere (float radius, const
Engine/neo-world-geometry.ads:22:54     - Unknown word (pose)         -- float radius, const PR& pose);
Engine/neo-world-geometry.ads:23:41     - Unknown word (extents)      -- Box (const Point& extents, const PR& pose);
Engine/neo-world-geometry.ads:23:60     - Unknown word (pose)         -- extents, const PR& pose);
Engine/neo-world-geometry.ads:24:18     - Unknown word (Capsule)      -- procedure Make_Capsule (float r, float h,
Engine/neo-world-geometry.ads:24:56     - Unknown word (pose)         -- float h, const PR& pose);
Engine/neo-world-geometry.ads:25:18     - Unknown word (Cylinder)     -- procedure Make_Cylinder (float r, float h, const
Engine/neo-world-geometry.ads:25:56     - Unknown word (pose)         -- float h, const PR& pose);
Engine/neo-world-geometry.ads:26:18     - Unknown word (Triangle)     -- procedure Make_Triangle (A, B, C : Point_3D
Engine/neo-world-geometry.ads:26:48     - Unknown word (Color)        -- A, B, C : Point_3D; Color : Color_State);
Engine/neo-world-geometry.ads:26:56     - Unknown word (Color)        -- : Point_3D; Color : Color_State);
Engine/neo-world-geometry.ads:27:48     - Unknown word (Color)        -- A, B, C : Point_3D; Color : Color_State);
Engine/neo-world-geometry.ads:27:56     - Unknown word (Color)        -- : Point_3D; Color : Color_State);
Engine/neo-world-geometry.ads:28:18     - Unknown word (Circle)       -- procedure Make_Circle (Segments      : Long
Engine/neo-world-geometry.ads:29:26     - Unknown word (Matrix)       -- Matrix : Matrix_4D;
Engine/neo-world-geometry.ads:29:42     - Unknown word (Matrix)       -- Matrix : Matrix_4D;
Engine/neo-world-geometry.ads:30:26     - Unknown word (Color)        -- Color : Color_State
Engine/neo-world-geometry.ads:32:29     - Unknown word (Semicircle)   -- Is_Semicircle : Bool := False);
Engine/neo-world-geometry.ads:32:50     - Unknown word (False)        -- Semicircle : Bool := False);
Engine/neo-world-geometry.ads:36:20     - Unknown word (Frustum)      -- procedure Create_Frustum (
Engine/neo-world-geometry.ads:37:17     - Unknown word (AABB)         -- -- DrawWirefameAABB (const AABB& box
Engine/neo-world-geometry.ads:37:32     - Unknown word (AABB)         -- DrawWirefameAABB (const AABB& box, const Point& color
Engine/neo-world-geometry.ads:37:5      - Unknown word (Draw)         -- -- DrawWirefameAABB (const
Engine/neo-world-geometry.ads:37:56     - Unknown word (color)        -- AABB& box, const Point& color);
Engine/neo-world-geometry.ads:37:9      - Unknown word (Wirefame)     -- -- DrawWirefameAABB (const AABB&
Engine/neo-world-geometry.ads:38:5      - Unknown word (Draw)         -- -- DrawWirefameOBB (const
Engine/neo-world-geometry.ads:38:55     - Unknown word (color)        -- OBB& box, const Point& color);
Engine/neo-world-geometry.ads:38:9      - Unknown word (Wirefame)     -- -- DrawWirefameOBB (const OBB& box
Engine/neo-world-geometry.ads:39:115    - Unknown word (color)        -- hits, const Point& color);
Engine/neo-world-geometry.ads:39:26     - Unknown word (udword)       -- DrawRaycastData (udword nb, const PintRaycastData
Engine/neo-world-geometry.ads:39:43     - Unknown word (Pint)         -- (udword nb, const PintRaycastData* raycast
Engine/neo-world-geometry.ads:39:5      - Unknown word (Draw)         -- -- DrawRaycastData (udword
Engine/neo-world-geometry.ads:39:80     - Unknown word (Pint)         -- raycast_data, const PintRaycastHit* hits, const
Engine/neo-world-geometry.ads:39:96     - Unknown word (hits)         -- const PintRaycastHit* hits, const Point& color
Engine/neo-world-geometry.ads:40:117    - Unknown word (color)        -- hits, const Point& color);
Engine/neo-world-geometry.ads:40:28     - Unknown word (udword)       -- DrawRaycastAnyData (udword nb, const PintRaycastData
Engine/neo-world-geometry.ads:40:45     - Unknown word (Pint)         -- (udword nb, const PintRaycastData* raycast
Engine/neo-world-geometry.ads:40:5      - Unknown word (Draw)         -- -- DrawRaycastAnyData (udword
Engine/neo-world-geometry.ads:40:82     - Unknown word (Pint)         -- raycast_data, const PintBooleanHit* hits, const
Engine/neo-world-geometry.ads:40:98     - Unknown word (hits)         -- const PintBooleanHit* hits, const Point& color
Engine/neo-world-geometry.ads:41:118    - Unknown word (color)        -- hits, const Point& color);
Engine/neo-world-geometry.ads:41:12     - Unknown word (Sweep)        -- -- DrawBoxSweepData (udword nb, const
Engine/neo-world-geometry.ads:41:26     - Unknown word (udword)       -- DrawBoxSweepData (udword nb, const PintBoxSweepData
Engine/neo-world-geometry.ads:41:43     - Unknown word (Pint)         -- (udword nb, const PintBoxSweepData* box_sweep
Engine/neo-world-geometry.ads:41:5      - Unknown word (Draw)         -- -- DrawBoxSweepData (udword
Engine/neo-world-geometry.ads:41:50     - Unknown word (Sweep)        -- udword nb, const PintBoxSweepData* box_sweep_data
Engine/neo-world-geometry.ads:41:65     - Unknown word (sweep)        -- PintBoxSweepData* box_sweep_data, const PintRaycastHit
Engine/neo-world-geometry.ads:41:99     - Unknown word (hits)         -- const PintRaycastHit* hits, const Point& color
Engine/neo-world-geometry.ads:42:108    - Unknown word (hits)         -- const PintRaycastHit* hits, const Point& color
Engine/neo-world-geometry.ads:42:15     - Unknown word (Sweep)        -- -- DrawSphereSweepData (udword nb, const
Engine/neo-world-geometry.ads:42:29     - Unknown word (udword)       -- DrawSphereSweepData (udword nb, const PintSphereSweepData
Engine/neo-world-geometry.ads:42:50     - Unknown word (Sphere)       -- udword nb, const PintSphereSweepData* sphere_sweep
Engine/neo-world-geometry.ads:42:56     - Unknown word (Sweep)        -- nb, const PintSphereSweepData* sphere_sweep_data
Engine/neo-world-geometry.ads:42:67     - Unknown word (sphere)       -- PintSphereSweepData* sphere_sweep_data, const PintRaycast
Engine/neo-world-geometry.ads:42:74     - Unknown word (sweep)        -- PintSphereSweepData* sphere_sweep_data, const PintRaycastHit
Engine/neo-world-geometry.ads:42:9      - Unknown word (Sphere)       -- -- DrawSphereSweepData (udword
Engine/neo-world-geometry.ads:43:110    - Unknown word (hits)         -- const PintRaycastHit* hits, const Point& color
Engine/neo-world-geometry.ads:43:16     - Unknown word (Sweep)        -- -- DrawCapsuleSweepData (udword nb, const
Engine/neo-world-geometry.ads:43:29     - Unknown word (udword)       -- DrawCapsuleSweepData (udword nb, const PintCapsuleSweepDat
Engine/neo-world-geometry.ads:43:50     - Unknown word (Capsule)      -- udword nb, const PintCapsuleSweepData* capsule_sweep
Engine/neo-world-geometry.ads:43:68     - Unknown word (capsule)      -- PintCapsuleSweepData* capsule_sweep_data, const PintRaycast
Engine/neo-world-geometry.ads:43:76     - Unknown word (sweep)        -- PintCapsuleSweepData* capsule_sweep_data, const PintRaycastHit
Engine/neo-world-geometry.ads:43:9      - Unknown word (Capsule)      -- -- DrawCapsuleSweepData (udword nb
Engine/neo-world-geometry.ads:44:50     - Unknown word (Convex)      -- udword nb, const PintConvexSweepData* convex_sweep
Engine/neo-world-geometry.ads:44:67     - Unknown word (convex)      -- PintConvexSweepData* convex_sweep_data, const PintRaycast
Engine/neo-world-geometry.ads:44:74     - Unknown word (sweep)       -- PintConvexSweepData* convex_sweep_data, const PintRaycastHit
Engine/neo-world-geometry.ads:44:9      - Unknown word (Convex)       -- -- DrawConvexSweepData (udword
Engine/neo-world-geometry.ads:45:15     - Unknown word (Overlap)     -- -- DrawSphereOverlapAnyData (udword nb,
Engine/neo-world-geometry.ads:45:53     - Unknown word (Sphere)      -- udword nb, const PintSphereOverlapData* sphere_overlap
Engine/neo-world-geometry.ads:45:59     - Unknown word (Overlap)     -- nb, const PintSphereOverlapData* sphere_overlap
Engine/neo-world-geometry.ads:45:72     - Unknown word (sphere)      -- PintSphereOverlapData* sphere_overlap_data, const
Engine/neo-world-geometry.ads:45:79     - Unknown word (overlap)     -- PintSphereOverlapData* sphere_overlap_data, const PintBooleanHit
Engine/neo-world-geometry.ads:45:9      - Unknown word (Sphere)      -- -- DrawSphereOverlapAnyData (udword
Engine/neo-world-geometry.ads:46:106    - Unknown word (Overlap)     -- overlap_data, const PintOverlapObjectHit* hits, const
Engine/neo-world-geometry.ads:46:15     - Unknown word (Overlap)     -- -- DrawSphereOverlapObjectsData (udword nb
Engine/neo-world-geometry.ads:46:62     - Unknown word (Overlap)     -- nb, const PintSphereOverlapData* sphere_overlap
Engine/neo-world-geometry.ads:46:75     - Unknown word (sphere)      -- PintSphereOverlapData* sphere_overlap_data, const
Engine/neo-world-geometry.ads:46:82     - Unknown word (overlap)     -- PintSphereOverlapData* sphere_overlap_data, const PintOverlapObject
Engine/neo-world-geometry.ads:47:71     - Unknown word (overlap)     -- PintBoxOverlapData* box_overlap_data, const PintBooleanHit
Engine/neo-world-geometry.ads:48:74     - Unknown word (overlap)     -- PintBoxOverlapData* box_overlap_data, const PintOverlapObject
Engine/neo-world-geometry.ads:49:54     - Unknown word (Capsule)     -- udword nb, const PintCapsuleOverlapData* capsule
Engine/neo-world-geometry.ads:49:74     - Unknown word (capsule)     -- PintCapsuleOverlapData* capsule_overlap_data, const
Engine/neo-world-geometry.ads:49:82     - Unknown word (overlap)     -- ntCapsuleOverlapData* capsule_overlap_data, const PintBooleanHit
Engine/neo-world-geometry.ads:49:9      - Unknown word (Capsule)     -- -- DrawCapsuleOverlapAnyData (udword
Engine/neo-world-geometry.ads:50:77     - Unknown word (capsule)     -- PintCapsuleOverlapData* capsule_overlap_data, const
Engine/neo-world-geometry.ads:53:6      - Unknown word (Deformations) -- -- Deformations --
Engine/neo-world-geometry.ads:56:15     - Unknown word (Deform)       -- -- procedure Deform_Sprite (Mesh : in
Engine/neo-world-geometry.ads:56:22     - Unknown word (Sprite)       -- - procedure Deform_Sprite (Mesh : in out Mesh
Engine/neo-world-geometry.ads:57:15     - Unknown word (Deform)       -- -- procedure Deform_Tube (Mesh : in
Engine/neo-world-geometry.ads:57:22     - Unknown word (Tube)         -- - procedure Deform_Tube (Mesh : in out Mesh
Engine/neo-world-geometry.ads:58:15     - Unknown word (Deform)       -- -- procedure Deform_Flare (Mesh : in
Engine/neo-world-geometry.ads:58:22     - Unknown word (Flare)        -- - procedure Deform_Flare (Mesh : in out Mesh
Engine/neo-world-geometry.ads:59:15     - Unknown word (Deform)       -- -- procedure Deform_Expand (Mesh : in
Engine/neo-world-geometry.ads:59:22     - Unknown word (Expand)       -- - procedure Deform_Expand (Mesh : in out Mesh
Engine/neo-world-geometry.ads:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo-world-geometry.ads:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo-world-geometry.ads:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo-world-geometry.ads:60:15     - Unknown word (Deform)       -- -- procedure Deform_Move (Mesh : in
Engine/neo-world-geometry.ads:61:22     - Unknown word (Shake)        -- - procedure Deform_Shake (Mesh : in out Mesh
Engine/neo-world-geometry.ads:63:22     - Unknown word (Particle)     -- - procedure Deform_Particle (Mesh : in out Mesh
Engine/neo-world-geometry.ads:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-world-geometry.ads:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-world-geometry.ads:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-world-geometry.ads:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo-world-graphics-renderer.adb:1001:25   - Unknown word (Metallic)     -- Metallic_Image.Set (Surface
Engine/neo-world-graphics-renderer.adb:1001:66   - Unknown word (Metallic)     -- (Surface.Material.Metallic);
Engine/neo-world-graphics-renderer.adb:1002:25   - Unknown word (Roughness)    -- Roughness_Image.Set (Surface
Engine/neo-world-graphics-renderer.adb:1002:66   - Unknown word (Roughness)    -- (Surface.Material.Roughness);
Engine/neo-world-graphics-renderer.adb:1003:25   - Unknown word (Displacement) -- Displacement_Image.Set (Surface.Material
Engine/neo-world-graphics-renderer.adb:1003:66   - Unknown word (Displacement) -- Set (Surface.Material.Displacement);
Engine/neo-world-graphics-renderer.adb:1006:29   - Unknown word (RENDERPARM)   -- RENDERPARM_VERTEXCOLOR_MODULATE
Engine/neo-world-graphics-renderer.adb:1006:40   - Unknown word (VERTEXCOLOR)  -- RENDERPARM_VERTEXCOLOR_MODULATE, zero );
Engine/neo-world-graphics-renderer.adb:1006:52   - Unknown word (MODULATE)     -- RENDERPARM_VERTEXCOLOR_MODULATE, zero );
Engine/neo-world-graphics-renderer.adb:1007:29   - Unknown word (RENDERPARM)   -- RENDERPARM_VERTEXCOLOR_ADD, one
Engine/neo-world-graphics-renderer.adb:1007:40   - Unknown word (VERTEXCOLOR)  -- RENDERPARM_VERTEXCOLOR_ADD, one );
Engine/neo-world-graphics-renderer.adb:1008:36   - Unknown word (MODULATE)     -- when SVC_MODULATE =>
Engine/neo-world-graphics-renderer.adb:1009:29   - Unknown word (RENDERPARM)   -- RENDERPARM_VERTEXCOLOR_MODULATE
Engine/neo-world-graphics-renderer.adb:1009:40   - Unknown word (VERTEXCOLOR)  -- RENDERPARM_VERTEXCOLOR_MODULATE, one );
Engine/neo-world-graphics-renderer.adb:1009:52   - Unknown word (MODULATE)     -- RENDERPARM_VERTEXCOLOR_MODULATE, one );
Engine/neo-world-graphics-renderer.adb:100:20    - Unknown word (Bottom)        -- Bottom_Level : Bottom_Level_State;
Engine/neo-world-graphics-renderer.adb:100:5     - Unknown word (Bottom)        -- Bottom_Level : Bottom_Level
Engine/neo-world-graphics-renderer.adb:1010:29   - Unknown word (RENDERPARM)   -- RENDERPARM_VERTEXCOLOR_ADD, zero
Engine/neo-world-graphics-renderer.adb:1010:40   - Unknown word (VERTEXCOLOR)  -- RENDERPARM_VERTEXCOLOR_ADD, zero );
Engine/neo-world-graphics-renderer.adb:1011:36   - Unknown word (INVERSE)      -- when SVC_INVERSE_MODULATE =>
Engine/neo-world-graphics-renderer.adb:1011:44   - Unknown word (MODULATE)     -- when SVC_INVERSE_MODULATE =>
Engine/neo-world-graphics-renderer.adb:1012:29   - Unknown word (RENDERPARM)   -- RENDERPARM_VERTEXCOLOR_MODULATE
Engine/neo-world-graphics-renderer.adb:1012:40   - Unknown word (VERTEXCOLOR)  -- RENDERPARM_VERTEXCOLOR_MODULATE, negOne );
Engine/neo-world-graphics-renderer.adb:1012:52   - Unknown word (MODULATE)     -- RENDERPARM_VERTEXCOLOR_MODULATE, negOne );
Engine/neo-world-graphics-renderer.adb:1016:37   - Unknown word (interaction)  -- -- Draw the interaction
Engine/neo-world-graphics-renderer.adb:102:18    - Unknown word (Occupied)      -- if In_Game.Occupied then
Engine/neo-world-graphics-renderer.adb:1032:12   - Unknown word (Ambient)      -- -- -- Ambient Pass --
Engine/neo-world-graphics-renderer.adb:103:29    - Unknown word (Geometry)      -- for Mesh of Map.Get.Geometry loop
Engine/neo-world-graphics-renderer.adb:1040:110  - Unknown word (Separation)   -- renderView.stereoScreenSeparation);
Engine/neo-world-graphics-renderer.adb:1040:70   - Unknown word (stereo)       -- NULL then 0.0 else stereoEye * View.renderView
Engine/neo-world-graphics-renderer.adb:1040:98   - Unknown word (stereo)       -- stereoEye * View.renderView.stereoScreenSeparation);
Engine/neo-world-graphics-renderer.adb:1041:9    - Unknown word (Ambient)      -- -- Ambient_Pass.Commit;
Engine/neo-world-graphics-renderer.adb:1043:22   - Unknown word (glare)        -- - -- Add light glare and GUIs
Engine/neo-world-graphics-renderer.adb:1046:14   - Unknown word (Some)         -- -- -- Some deforms may disable
Engine/neo-world-graphics-renderer.adb:1046:19   - Unknown word (deforms)      -- -- -- Some deforms may disable themselves
Engine/neo-world-graphics-renderer.adb:1046:39   - Unknown word (themselves)   -- deforms may disable themselves by setting numIndexes
Engine/neo-world-graphics-renderer.adb:1046:64   - Unknown word (Indexes)      -- themselves by setting numIndexes = 0
Engine/neo-world-graphics-renderer.adb:1047:34   - Unknown word (Ambient)      -- Surface.Material.Is_Ambient then
Engine/neo-world-graphics-renderer.adb:1049:19   - Unknown word (need)         -- -- -- We need to draw the post process
Engine/neo-world-graphics-renderer.adb:1049:27   - Unknown word (draw)         -- -- We need to draw the post process shaders
Engine/neo-world-graphics-renderer.adb:1049:49   - Unknown word (shaders)      -- draw the post process shaders after we have drawn
Engine/neo-world-graphics-renderer.adb:1049:57   - Unknown word (after)        -- post process shaders after we have drawn the fog
Engine/neo-world-graphics-renderer.adb:1049:71   - Unknown word (drawn)        -- shaders after we have drawn the fog lights
Engine/neo-world-graphics-renderer.adb:1050:90   - Unknown word (Copied)       -- and not Current_Render_Copied;
Engine/neo-world-graphics-renderer.adb:1052:125  - Unknown word (skip)         -- s eye index then we skip the surface
Engine/neo-world-graphics-renderer.adb:1052:134  - Unknown word (surface)      -- index then we skip the surface
Engine/neo-world-graphics-renderer.adb:1052:26   - Unknown word (rendering)    -- -- if we are rendering a 3D view and the surface
Engine/neo-world-graphics-renderer.adb:1052:54   - Unknown word (surface's)    -- rendering a 3D view and the surface's eye index doesn't match
Engine/neo-world-graphics-renderer.adb:1052:74   - Unknown word (doesn't)      -- surface's eye index doesn't match the current view
Engine/neo-world-graphics-renderer.adb:1053:23   - Unknown word (stereo)       -- -- if the stereoEye value of a surface
Engine/neo-world-graphics-renderer.adb:1053:44   - Unknown word (surface)      -- stereoEye value of a surface is 0 then we need to
Engine/neo-world-graphics-renderer.adb:1053:73   - Unknown word (draw)         -- is 0 then we need to draw it for both eyes.
Engine/neo-world-graphics-renderer.adb:1053:85   - Unknown word (both)         -- need to draw it for both eyes.
Engine/neo-world-graphics-renderer.adb:1053:90   - Unknown word (eyes)         -- to draw it for both eyes.
Engine/neo-world-graphics-renderer.adb:1054:136  - Unknown word (Stereo)       -- Surface.material.GetStereoEye == stereoEye ) :
Engine/neo-world-graphics-renderer.adb:1054:185  - Unknown word (Stereo)       -- Surface.material.GetStereoEye != stereoEye)) then
Engine/neo-world-graphics-renderer.adb:1054:23   - Unknown word (stereo)       -- if not >> stereoEye /= 0 and Surface
Engine/neo-world-graphics-renderer.adb:1054:62   - Unknown word (Stereo)       -- Surface.material.GetStereoEye /= 0 and (stereoRender
Engine/neo-world-graphics-renderer.adb:1054:82   - Unknown word (stereo)       -- GetStereoEye /= 0 and (stereoRender_swapEyes.GetBool
Engine/neo-world-graphics-renderer.adb:1054:99   - Unknown word (Eyes)         -- and (stereoRender_swapEyes.GetBool ? ( Surface
Engine/neo-world-graphics-renderer.adb:1056:128  - Unknown word (never)        -- so the != check will never force an update due
Engine/neo-world-graphics-renderer.adb:1056:18   - Unknown word (Determine)    -- -- -- Determine the stereoDepth offset
Engine/neo-world-graphics-renderer.adb:1056:44   - Unknown word (offset)       -- Determine the stereoDepth offset guiStereoScreenOffset
Engine/neo-world-graphics-renderer.adb:1056:54   - Unknown word (Stereo)       -- stereoDepth offset guiStereoScreenOffset will always
Engine/neo-world-graphics-renderer.adb:1056:78   - Unknown word (always)       -- guiStereoScreenOffset will always be zero for 3D views
Engine/neo-world-graphics-renderer.adb:1057:27   - Unknown word (Stereo)       -- Current_GUI_Stereo_Offset := GUI_Stereo
Engine/neo-world-graphics-renderer.adb:1059:40   - Unknown word (other)        -- Change the matrix and other space related vars if
Engine/neo-world-graphics-renderer.adb:1059:60   - Unknown word (vars)         -- other space related vars if needed
Engine/neo-world-graphics-renderer.adb:1059:68   - Unknown word (needed)       -- space related vars if needed
Engine/neo-world-graphics-renderer.adb:105:18    - Unknown word (Surfaces)      -- View.Surfaces.Append ((Mesh => Buffered
Engine/neo-world-graphics-renderer.adb:105:65    - Unknown word (Geometry)      -- Buffered_Meshes.Get (Geometry_Name_Str.S (Mesh.Name
Engine/neo-world-graphics-renderer.adb:1068:17   - Unknown word (LOCALVIEWORIGIN) -- -- LOCALVIEWORIGIN.Set (GlobalPointToLocal
Engine/neo-world-graphics-renderer.adb:1068:95   - Unknown word (viewor)          -- Model, View.renderView.viewor)(1.0);
Engine/neo-world-graphics-renderer.adb:1069:38   - Unknown word (Transpose)       -- Local_To_Global.Set (Transpose (Current_Space.Local
Engine/neo-world-graphics-renderer.adb:1070:38   - Unknown word (Transpose)       -- Local_To_Eye.Set (Transpose (Current_Space.Local
Engine/neo-world-graphics-renderer.adb:1074:79   - Unknown word (CULL)            -- isGuiSurface then VK_CULL_MODE_NONE else shader
Engine/neo-world-graphics-renderer.adb:1074:84   - Unknown word (MODE)            -- isGuiSurface then VK_CULL_MODE_NONE else shader.GetCullType
Engine/neo-world-graphics-renderer.adb:1074:89   - Unknown word (NONE)            -- sGuiSurface then VK_CULL_MODE_NONE else shader.GetCullType
Engine/neo-world-graphics-renderer.adb:1076:37   - Unknown word (Flag)            -- if shader.TestMaterialFlag (MF_POLYGONOFFSET) then
Engine/neo-world-graphics-renderer.adb:1076:46   - Unknown word (POLYGONOFFSET)   -- TestMaterialFlag (MF_POLYGONOFFSET) then
Engine/neo-world-graphics-renderer.adb:1077:103  - Unknown word (offset)          -- GetPolygonOffset, 0.0, r_offsetFactor);
Engine/neo-world-graphics-renderer.adb:1077:30   - Unknown word (Bias)            -- vkCmdSetDepthBias (Commands, r_offsetUnits
Engine/neo-world-graphics-renderer.adb:1077:48   - Unknown word (offset)          -- kCmdSetDepthBias (Commands, r_offsetUnits.GetFloat * shader
Engine/neo-world-graphics-renderer.adb:1081:57   - Unknown word (which)           -- stage is not zero or one which are used for some alpha
Engine/neo-world-graphics-renderer.adb:1081:76   - Unknown word (some)            -- one which are used for some alpha masks
Engine/neo-world-graphics-renderer.adb:1081:87   - Unknown word (masks)           -- used for some alpha masks
Engine/neo-world-graphics-renderer.adb:1082:110  - Unknown word (DSTBLEND)        -- estination_Blend_Factor = GLS_DSTBLEND_ONE then
Engine/neo-world-graphics-renderer.adb:1082:53   - Unknown word (SRCBLEND)        -- Source_Blend_Factor = GLS_SRCBLEND_ZERO or Pipeline.Destination
Engine/neo-world-graphics-renderer.adb:1083:23   - Unknown word (Skinning)        -- enableSkinning.Set (Surface.Is_Animated
Engine/neo-world-graphics-renderer.adb:1083:48   - Unknown word (Animated)        -- nableSkinning.Set (Surface.Is_Animated);
Engine/neo-world-graphics-renderer.adb:1093:12   - Unknown word (Distortion)      -- -- -- Distortion Pass --
Engine/neo-world-graphics-renderer.adb:1099:31   - Unknown word (recalculate)     -- force fog plane to recalculate
Engine/neo-world-graphics-renderer.adb:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-world-graphics-renderer.adb:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-world-graphics-renderer.adb:10:110    - Unknown word (warranty)     -- without even the implied warranty of                -
Engine/neo-world-graphics-renderer.adb:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-world-graphics-renderer.adb:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-world-graphics-renderer.adb:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-world-graphics-renderer.adb:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-world-graphics-renderer.adb:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-world-graphics-renderer.adb:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-world-graphics-renderer.adb:1100:22   - Unknown word (WHITE)           -- - Clear_Color (WHITE_COLOR);
Engine/neo-world-graphics-renderer.adb:1104:12   - Unknown word (Handle)          -- -- -- Handle special lights
Engine/neo-world-graphics-renderer.adb:1104:19   - Unknown word (special)         -- -- -- Handle special lights
Engine/neo-world-graphics-renderer.adb:110:16    - Unknown word (Surfaces)      -- -- View.Surfaces.Append ((Mesh => Buffered
Engine/neo-world-graphics-renderer.adb:1112:24   - Unknown word (blend)           -- -- Fog and blend lights, drawn after
Engine/neo-world-graphics-renderer.adb:1112:38   - Unknown word (drawn)           -- Fog and blend lights, drawn after emissive surfaces
Engine/neo-world-graphics-renderer.adb:1112:44   - Unknown word (after)           -- blend lights, drawn after emissive surfaces so
Engine/neo-world-graphics-renderer.adb:1112:50   - Unknown word (emissive)        -- lights, drawn after emissive surfaces so they are
Engine/neo-world-graphics-renderer.adb:1112:59   - Unknown word (surfaces)        -- drawn after emissive surfaces so they are properly
Engine/neo-world-graphics-renderer.adb:1112:71   - Unknown word (they)            -- emissive surfaces so they are properly dimmed
Engine/neo-world-graphics-renderer.adb:1112:80   - Unknown word (properly)        -- surfaces so they are properly dimmed down
Engine/neo-world-graphics-renderer.adb:1112:89   - Unknown word (dimmed)          -- so they are properly dimmed down
Engine/neo-world-graphics-renderer.adb:1118:18   - Unknown word (Find)            -- -- -- Find the current color and
Engine/neo-world-graphics-renderer.adb:1118:35   - Unknown word (color)           -- -- Find the current color and density of the fog
Engine/neo-world-graphics-renderer.adb:1118:45   - Unknown word (density)         -- the current color and density of the fog
Engine/neo-world-graphics-renderer.adb:1119:49   - Unknown word (Modifer)         -- Light.Material.Color_Modifer);
Engine/neo-world-graphics-renderer.adb:1121:18   - Unknown word (Calculate)       -- -- -- Calculate the falloff planes
Engine/neo-world-graphics-renderer.adb:1121:32   - Unknown word (falloff)         -- -- Calculate the falloff planes
Engine/neo-world-graphics-renderer.adb:1122:112  - Unknown word (otherwise)       -- fog distance of 500 otherwise, distance = alpha color
Engine/neo-world-graphics-renderer.adb:1122:123  - Unknown word (distance)        -- distance of 500 otherwise, distance = alpha color
Engine/neo-world-graphics-renderer.adb:1122:96   - Unknown word (distance)        -- To_Eye) -- Set a fog distance of 500 otherwise, distance
Engine/neo-world-graphics-renderer.adb:1123:79   - Unknown word (DISTANCE)        -- 1.0 then -0.5 / FOG_DISTANCE else -0.5 / Light.color
Engine/neo-world-graphics-renderer.adb:1125:106  - Unknown word (which)           -- for the fade plane, which is always "top" on unrotated
Engine/neo-world-graphics-renderer.adb:1125:115  - Unknown word (always)          -- fade plane, which is always "top" on unrotated lights
Engine/neo-world-graphics-renderer.adb:1125:131  - Unknown word (unrotated)       -- which is always "top" on unrotated lights
Engine/neo-world-graphics-renderer.adb:1125:75   - Unknown word (generation)      -- Fog_Plane, -- Texture generation for the fade plane,
Engine/neo-world-graphics-renderer.adb:1125:94   - Unknown word (fade)            -- Texture generation for the fade plane, which is always
Engine/neo-world-graphics-renderer.adb:1129:36   - Unknown word (interactions)    -- - Draw direct light interactions
Engine/neo-world-graphics-renderer.adb:1131:65   - Unknown word (MINUS)           -- VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA;
Engine/neo-world-graphics-renderer.adb:1135:103  - Unknown word (instead)         -- so use depthfunc_less instead of depthfunc_equal
Engine/neo-world-graphics-renderer.adb:1135:114  - Unknown word (depthfunc)       -- depthfunc_less instead of depthfunc_equal
Engine/neo-world-graphics-renderer.adb:1135:124  - Unknown word (equal)           -- instead of depthfunc_equal
Engine/neo-world-graphics-renderer.adb:1135:29   - Unknown word (frustum)         -- -- Draw light frustum bounding planes aren
Engine/neo-world-graphics-renderer.adb:1135:37   - Unknown word (bounding)        -- Draw light frustum bounding planes aren't in the
Engine/neo-world-graphics-renderer.adb:1135:53   - Unknown word (aren't)          -- frustum bounding planes aren't in the depth buffer
Engine/neo-world-graphics-renderer.adb:1135:88   - Unknown word (depthfunc)       -- depth buffer, so use depthfunc_less instead of depthfunc
Engine/neo-world-graphics-renderer.adb:1137:51   - Unknown word (CULL)            -- := VK_CULL_MODE_BACK_BIT;
Engine/neo-world-graphics-renderer.adb:1137:56   - Unknown word (MODE)            -- := VK_CULL_MODE_BACK_BIT;
Engine/neo-world-graphics-renderer.adb:1137:61   - Unknown word (BACK)            -- := VK_CULL_MODE_BACK_BIT;
Engine/neo-world-graphics-renderer.adb:1140:65   - Unknown word (Inverse)         -- Surface, Fog_Plane, Light.Inverse_Projection); -- S is
Engine/neo-world-graphics-renderer.adb:1152:30   - Unknown word (falloff)         -- -- Set the the falloff and the projected texture
Engine/neo-world-graphics-renderer.adb:1152:46   - Unknown word (projected)       -- the falloff and the projected texture
Engine/neo-world-graphics-renderer.adb:1156:21   - Unknown word (Falloff)         -- -- Light_Falloff_Image.Set (Light.Falloff
Engine/neo-world-graphics-renderer.adb:1156:46   - Unknown word (Falloff)         -- Falloff_Image.Set (Light.Falloff);
Engine/neo-world-graphics-renderer.adb:1158:42   - Unknown word (Prepare)         -- Texture := Prepare_Map_Transform (Light
Engine/neo-world-graphics-renderer.adb:1160:26   - Unknown word (modulate)        -- -- Get the modulate values from the light
Engine/neo-world-graphics-renderer.adb:1160:58   - Unknown word (including)       -- values from the light, including alpha, unlike normal
Engine/neo-world-graphics-renderer.adb:1160:75   - Unknown word (unlike)          -- light, including alpha, unlike normal lights
Engine/neo-world-graphics-renderer.adb:1189:102  - Unknown word (contribute)     -- process surfaces that may contribute to the depth
Engine/neo-world-graphics-renderer.adb:1189:12   - Unknown word (Capture)         -- -- -- Capture the depth for the motion
Engine/neo-world-graphics-renderer.adb:1189:38   - Unknown word (motion)         -- Capture the depth for the motion blur before rendering
Engine/neo-world-graphics-renderer.adb:1189:50   - Unknown word (before)         -- for the motion blur before rendering any post process
Engine/neo-world-graphics-renderer.adb:1189:57   - Unknown word (rendering)      -- the motion blur before rendering any post process surfaces
Engine/neo-world-graphics-renderer.adb:1193:44   - Unknown word (Depthbuffer)    -- currentDepthImage.CopyDepthbuffer( viewport.x1, viewport
Engine/neo-world-graphics-renderer.adb:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-world-graphics-renderer.adb:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-world-graphics-renderer.adb:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-world-graphics-renderer.adb:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-world-graphics-renderer.adb:126:12    - Unknown word (Flood)         -- -- -- Flood_Portals --
Engine/neo-world-graphics-renderer.adb:126:18    - Unknown word (Portals)       -- -- -- Flood_Portals --
Engine/neo-world-graphics-renderer.adb:129:12    - Unknown word (Recursivly)   -- -- -- Recursivly find lights and entities
Engine/neo-world-graphics-renderer.adb:129:23    - Unknown word (find)         -- -- Recursivly find lights and entities
Engine/neo-world-graphics-renderer.adb:129:28    - Unknown word (lights)       -- -- Recursivly find lights and entities by flowing
Engine/neo-world-graphics-renderer.adb:129:51    - Unknown word (flowing)      -- lights and entities by flowing from an origin through
Engine/neo-world-graphics-renderer.adb:129:74    - Unknown word (through)      -- flowing from an origin through visible portals that
Engine/neo-world-graphics-renderer.adb:129:82    - Unknown word (visible)      -- from an origin through visible portals that the view
Engine/neo-world-graphics-renderer.adb:129:90    - Unknown word (portals)      -- origin through visible portals that the view origin
Engine/neo-world-graphics-renderer.adb:129:98    - Unknown word (that)         -- through visible portals that the view origin can
Engine/neo-world-graphics-renderer.adb:132:19    - Unknown word (Flood)        -- -- procedure Flood_Portals (Origin : Vector
Engine/neo-world-graphics-renderer.adb:132:25    - Unknown word (Portals)      -- procedure Flood_Portals (Origin : Vector_3D
Engine/neo-world-graphics-renderer.adb:132:43    - Unknown word (Vector)       -- Flood_Portals (Origin : Vector_3D; Planes : in out
Engine/neo-world-graphics-renderer.adb:132:54    - Unknown word (Planes)       -- Origin : Vector_3D; Planes : in out Vector_Plane
Engine/neo-world-graphics-renderer.adb:132:70    - Unknown word (Vector)       -- 3D; Planes : in out Vector_Plane_4D.Unsafe.Vector
Engine/neo-world-graphics-renderer.adb:132:86    - Unknown word (Unsafe)       -- out Vector_Plane_4D.Unsafe.Vector) is
Engine/neo-world-graphics-renderer.adb:132:93    - Unknown word (Vector)       -- Vector_Plane_4D.Unsafe.Vector) is
Engine/neo-world-graphics-renderer.adb:135:26    - Unknown word (outside)      -- -- If we are outside the world, mark everything
Engine/neo-world-graphics-renderer.adb:135:45    - Unknown word (mark)         -- are outside the world, mark everything
Engine/neo-world-graphics-renderer.adb:135:50    - Unknown word (everything)   -- outside the world, mark everything
Engine/neo-world-graphics-renderer.adb:136:25    - Unknown word (Area)         -- -- if View.Area < 0 then
Engine/neo-world-graphics-renderer.adb:137:31    - Unknown word (Length)       -- for I in 1..Length (Planes) loop
Engine/neo-world-graphics-renderer.adb:137:39    - Unknown word (Planes)       -- for I in 1..Length (Planes) loop
Engine/neo-world-graphics-renderer.adb:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-world-graphics-renderer.adb:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-world-graphics-renderer.adb:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-world-graphics-renderer.adb:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-world-graphics-renderer.adb:141:33    - Unknown word (Portals)      -- for Portal of Portals loop
Engine/neo-world-graphics-renderer.adb:143:56    - Unknown word (door)         -- portal isn't a closed door and that it is facing
Engine/neo-world-graphics-renderer.adb:143:65    - Unknown word (that)         -- t a closed door and that it is facing the view
Engine/neo-world-graphics-renderer.adb:143:76    - Unknown word (facing)       -- door and that it is facing the view
Engine/neo-world-graphics-renderer.adb:144:67    - Unknown word (Distance)     -- Portal.Is_View_Block and Distance < -0.1 then
Engine/neo-world-graphics-renderer.adb:145:23    - Unknown word (Flood)        -- -- Flood_Portals (Origin, New
Engine/neo-world-graphics-renderer.adb:145:29    - Unknown word (Portals)      -- Flood_Portals (Origin, New_Portals
Engine/neo-world-graphics-renderer.adb:145:50    - Unknown word (Portals)      -- Portals (Origin, New_Portals);
Engine/neo-world-graphics-renderer.adb:148:26    - Unknown word (Clip)         -- -- -- Clip the portal winding to
Engine/neo-world-graphics-renderer.adb:148:42    - Unknown word (winding)      -- -- Clip the portal winding to all of the planes
Engine/neo-world-graphics-renderer.adb:148:64    - Unknown word (planes)       -- winding to all of the planes
Engine/neo-world-graphics-renderer.adb:149:43    - Unknown word (Planes)       -- for Plane of Portal.Planes loop exit when not Is
Engine/neo-world-graphics-renderer.adb:149:72    - Unknown word (Clip)         -- loop exit when not Is_Clip_In_Place (Portal.Winding
Engine/neo-world-graphics-renderer.adb:149:80    - Unknown word (Place)        -- when not Is_Clip_In_Place (Portal.Winding, Plane
Engine/neo-world-graphics-renderer.adb:149:94    - Unknown word (Winding)      -- Clip_In_Place (Portal.Winding, Plane);
Engine/neo-world-graphics-renderer.adb:151:59    - Unknown word (visible)      -- only if the portal is visible and not fogged out
Engine/neo-world-graphics-renderer.adb:151:75    - Unknown word (fogged)       -- portal is visible and not fogged out
Engine/neo-world-graphics-renderer.adb:152:35    - Unknown word (Winding)      -- if Portal.Winding.Points.Length /= 0 and
Engine/neo-world-graphics-renderer.adb:152:50    - Unknown word (Length)       -- Portal.Winding.Points.Length /= 0 and Is_Fogged
Engine/neo-world-graphics-renderer.adb:152:69    - Unknown word (Fogged)       -- Points.Length /= 0 and Is_Fogged (Portal) then
Engine/neo-world-graphics-renderer.adb:154:33    - Unknown word (through)      -- -- Go through the portal
Engine/neo-world-graphics-renderer.adb:157:47    - Unknown word (Winding)      -- for Point of Portal.Winding.Points loop
Engine/neo-world-graphics-renderer.adb:159:41    - Unknown word (Normalized)   -- --R_GlobalToNormalizedDeviceCoordinates (v
Engine/neo-world-graphics-renderer.adb:159:57    - Unknown word (Coordinates)  -- GlobalToNormalizedDeviceCoordinates (v, ndc);
Engine/neo-world-graphics-renderer.adb:161:109   - Unknown word (scissor)      -- visibility beyond the scissor
Engine/neo-world-graphics-renderer.adb:161:50    - Unknown word (clipping)     -- - Generate a set of clipping planes to restrict the
Engine/neo-world-graphics-renderer.adb:161:59    - Unknown word (planes)       -- Generate a set of clipping planes to restrict the view
Engine/neo-world-graphics-renderer.adb:161:69    - Unknown word (restrict)     -- of clipping planes to restrict the view visibility
Engine/neo-world-graphics-renderer.adb:162:42    - Unknown word (Winding)      -- for Point of Winding.Points loop
Engine/neo-world-graphics-renderer.adb:179:14    - Unknown word (Setup)        -- -- -- Setup the view matrix
Engine/neo-world-graphics-renderer.adb:179:29    - Unknown word (matrix)       -- -- Setup the view matrix
Engine/neo-world-graphics-renderer.adb:17:21     - Unknown word (Graphics)     -- separate (Neo.World.Graphics) package body Renderer
Engine/neo-world-graphics-renderer.adb:17:44     - Unknown word (Renderer)     -- Graphics) package body Renderer is
Engine/neo-world-graphics-renderer.adb:180:102   - Unknown word (Axis)         -- Y * YX - Origin.Z * Axis.ZX,
Engine/neo-world-graphics-renderer.adb:180:15    - Unknown word (Viewer)       -- -- --        Viewer := (Axis.XX, Axis.YX
Engine/neo-world-graphics-renderer.adb:180:26    - Unknown word (Axis)         -- - Viewer := (Axis.XX, Axis.YX, Axis.ZX
Engine/neo-world-graphics-renderer.adb:180:35    - Unknown word (Axis)         -- Viewer := (Axis.XX, Axis.YX, Axis.ZX, -Origin
Engine/neo-world-graphics-renderer.adb:180:44    - Unknown word (Axis)         -- (Axis.XX, Axis.YX, Axis.ZX, -Origin.X * Axis
Engine/neo-world-graphics-renderer.adb:180:65    - Unknown word (Axis)         -- Axis.ZX, -Origin.X * Axis.XX - Origin.Y * YX
Engine/neo-world-graphics-renderer.adb:184:106   - Unknown word (znear)        -- GetFloat() * 0.25f ) : r_znear.GetFloat();
Engine/neo-world-graphics-renderer.adb:184:57    - Unknown word (cram)         -- viewDef->renderView.cramZNear ) ? ( r_znear.GetFloat
Engine/neo-world-graphics-renderer.adb:184:75    - Unknown word (znear)        -- renderView.cramZNear ) ? ( r_znear.GetFloat() * 0.25f
Engine/neo-world-graphics-renderer.adb:185:38    - Unknown word (Math)         -- float ymax = zNear * idMath::Tan( DEG2RAD( viewDef
Engine/neo-world-graphics-renderer.adb:187:38    - Unknown word (Math)         -- float xmax = zNear * idMath::Tan( DEG2RAD( viewDef
Engine/neo-world-graphics-renderer.adb:189:27    - Unknown word (width)        -- const float width = xmax - xmin;
Engine/neo-world-graphics-renderer.adb:190:27    - Unknown word (height)       -- const float height = ymax - ymin;
Engine/neo-world-graphics-renderer.adb:191:29    - Unknown word (Width)        -- const int viewWidth = viewDef->viewport
Engine/neo-world-graphics-renderer.adb:192:29    - Unknown word (Height)       -- const int viewHeight = viewDef->viewport
Engine/neo-world-graphics-renderer.adb:194:24    - Unknown word (projection)   -- -- viewDef->projectionMatrix[0*4+0] = 2.0f
Engine/neo-world-graphics-renderer.adb:194:65    - Unknown word (width)        -- 0] = 2.0f * zNear / width;
Engine/neo-world-graphics-renderer.adb:195:24    - Unknown word (projection)   -- -- viewDef->projectionMatrix[1*4+0] = 0.0f
Engine/neo-world-graphics-renderer.adb:196:24    - Unknown word (projection)   -- -- viewDef->projectionMatrix[2*4+0] = 0.0f
Engine/neo-world-graphics-renderer.adb:199:66    - Unknown word (height)       -- ] = -2.0f * zNear / height;
Engine/neo-world-graphics-renderer.adb:19:18     - Unknown word (matricies)    -- -- Perspective matricies
Engine/neo-world-graphics-renderer.adb:19:6      - Unknown word (Perspective)  -- -- Perspective matricies
Engine/neo-world-graphics-renderer.adb:203:18    - Unknown word (this)         -- -- --        -- this is the far-plane-at
Engine/neo-world-graphics-renderer.adb:203:43    - Unknown word (infinity)     -- is the far-plane-at-infinity formulation, and
Engine/neo-world-graphics-renderer.adb:203:52    - Unknown word (formulation)  -- far-plane-at-infinity formulation, and
Engine/neo-world-graphics-renderer.adb:204:18    - Unknown word (crunches)     -- -- --        -- crunches the Z range slightly
Engine/neo-world-graphics-renderer.adb:204:39    - Unknown word (slightly)     -- crunches the Z range slightly so w=0 vertexes do not
Engine/neo-world-graphics-renderer.adb:204:55    - Unknown word (vertexes)     -- range slightly so w=0 vertexes do not
Engine/neo-world-graphics-renderer.adb:205:18    - Unknown word (rasterize)    -- -- --        -- rasterize right at the wraparound
Engine/neo-world-graphics-renderer.adb:205:41    - Unknown word (wraparound)   -- rasterize right at the wraparound point
Engine/neo-world-graphics-renderer.adb:209:62    - Unknown word (adjust)       -- *4+2] = -0.999f; // adjust value to prevent imprecision
Engine/neo-world-graphics-renderer.adb:209:78    - Unknown word (prevent)      -- // adjust value to prevent imprecision issues
Engine/neo-world-graphics-renderer.adb:209:86    - Unknown word (imprecision)  -- adjust value to prevent imprecision issues
Engine/neo-world-graphics-renderer.adb:209:98    - Unknown word (issues)       -- prevent imprecision issues
Engine/neo-world-graphics-renderer.adb:20:17     - Unknown word (Matrix)       -- package Model_Matrix is new Uniform
Engine/neo-world-graphics-renderer.adb:20:36     - Unknown word (Uniform)      -- Model_Matrix is new Uniform (Binding => 22, Uniform
Engine/neo-world-graphics-renderer.adb:20:45     - Unknown word (Binding)      -- is new Uniform (Binding => 22, Uniform_T =>
Engine/neo-world-graphics-renderer.adb:20:60     - Unknown word (Uniform)      -- Uniform (Binding => 22, Uniform_T => Matrix_4D, Name
Engine/neo-world-graphics-renderer.adb:20:73     - Unknown word (Matrix)       -- => 22, Uniform_T => Matrix_4D, Name_ID => "model
Engine/neo-world-graphics-renderer.adb:215:40    - Unknown word (flip)         -- viewDef->renderView.flipProjection ) {
Engine/neo-world-graphics-renderer.adb:215:44    - Unknown word (Projection)   -- viewDef->renderView.flipProjection ) {
Engine/neo-world-graphics-renderer.adb:219:14    - Unknown word (Walk)        -- -- -- Walk the BSP tree to find
Engine/neo-world-graphics-renderer.adb:219:35    - Unknown word (find)        -- Walk the BSP tree to find the area where the view
Engine/neo-world-graphics-renderer.adb:219:44    - Unknown word (area)        -- BSP tree to find the area where the view origin
Engine/neo-world-graphics-renderer.adb:219:49    - Unknown word (where)       -- tree to find the area where the view origin is
Engine/neo-world-graphics-renderer.adb:21:16     - Unknown word (Matrix)       -- package View_Matrix is new Uniform
Engine/neo-world-graphics-renderer.adb:21:36     - Unknown word (Uniform)      -- Matrix is new Uniform (Binding => 23, Uniform
Engine/neo-world-graphics-renderer.adb:21:45     - Unknown word (Binding)      -- is new Uniform (Binding => 23, Uniform_T =>
Engine/neo-world-graphics-renderer.adb:21:60     - Unknown word (Uniform)      -- Uniform (Binding => 23, Uniform_T => Matrix_4D, Name
Engine/neo-world-graphics-renderer.adb:21:73     - Unknown word (Matrix)       -- => 23, Uniform_T => Matrix_4D, Name_ID => "view
Engine/neo-world-graphics-renderer.adb:224:27    - Unknown word (Kind)        -- case Node.Kind is
Engine/neo-world-graphics-renderer.adb:225:24    - Unknown word (Area)        -- -- when Area_Partition => Area
Engine/neo-world-graphics-renderer.adb:225:44    - Unknown word (Area)        -- Area_Partition => Area := Node.Area_Id; exit
Engine/neo-world-graphics-renderer.adb:225:57    - Unknown word (Area)        -- Partition => Area := Node.Area_Id; exit;
Engine/neo-world-graphics-renderer.adb:226:24    - Unknown word (Opaque)      -- -- when Opaque_Partition => raise In
Engine/neo-world-graphics-renderer.adb:226:53    - Unknown word (Solid)       -- Partition => raise In_Solid;
Engine/neo-world-graphics-renderer.adb:22:11     - Unknown word (Projection)   -- package Projection_Matrix is new Uniform
Engine/neo-world-graphics-renderer.adb:22:22     - Unknown word (Matrix)       -- package Projection_Matrix is new Uniform (Binding
Engine/neo-world-graphics-renderer.adb:22:36     - Unknown word (Uniform)      -- Projection_Matrix is new Uniform (Binding => 24, Uniform
Engine/neo-world-graphics-renderer.adb:22:45     - Unknown word (Binding)      -- Matrix is new Uniform (Binding => 24, Uniform_T =>
Engine/neo-world-graphics-renderer.adb:22:96     - Unknown word (projection)   -- Matrix_4D, Name_ID => "projection");
Engine/neo-world-graphics-renderer.adb:231:18    - Unknown word (Flood)       -- -- --        -- Flood through portals
Engine/neo-world-graphics-renderer.adb:231:24    - Unknown word (through)     -- -- -- Flood through portals
Engine/neo-world-graphics-renderer.adb:231:32    - Unknown word (portals)     -- -- Flood through portals
Engine/neo-world-graphics-renderer.adb:232:15    - Unknown word (Flood)       -- -- --        Flood_Portals (Origin, Area
Engine/neo-world-graphics-renderer.adb:232:38    - Unknown word (Area)        -- Flood_Portals (Origin, Area, View.Planes);
Engine/neo-world-graphics-renderer.adb:232:49    - Unknown word (Planes)      -- (Origin, Area, View.Planes);
Engine/neo-world-graphics-renderer.adb:234:28    - Unknown word (amount)      -- -- Reset the amount of light jobs if changed
Engine/neo-world-graphics-renderer.adb:234:52    - Unknown word (changed)     -- amount of light jobs if changed (this will need tuning
Engine/neo-world-graphics-renderer.adb:234:61    - Unknown word (this)        -- light jobs if changed (this will need tuning)
Engine/neo-world-graphics-renderer.adb:234:66    - Unknown word (will)        -- jobs if changed (this will need tuning)
Engine/neo-world-graphics-renderer.adb:234:71    - Unknown word (need)        -- if changed (this will need tuning)
Engine/neo-world-graphics-renderer.adb:235:114   - Unknown word (Vector)      -- Light_Jobs.Append (new Vector_Lights.Unsafe.Vector
Engine/neo-world-graphics-renderer.adb:235:121   - Unknown word (Lights)      -- Jobs.Append (new Vector_Lights.Unsafe.Vector (Length
Engine/neo-world-graphics-renderer.adb:235:128   - Unknown word (Unsafe)      -- Append (new Vector_Lights.Unsafe.Vector (Length (View
Engine/neo-world-graphics-renderer.adb:235:135   - Unknown word (Vector)      -- Vector_Lights.Unsafe.Vector (Length (View.Lights
Engine/neo-world-graphics-renderer.adb:235:143   - Unknown word (Length)      -- Lights.Unsafe.Vector (Length (View.Lights) - Length
Engine/neo-world-graphics-renderer.adb:235:156   - Unknown word (Lights)      -- Vector (Length (View.Lights) - Length (Light_Jobs
Engine/neo-world-graphics-renderer.adb:235:21    - Unknown word (Length)      -- -- --        if    Length (View.Lights) < Length
Engine/neo-world-graphics-renderer.adb:235:34    - Unknown word (Lights)      -- if Length (View.Lights) < Length (Light_Jobs
Engine/neo-world-graphics-renderer.adb:235:44    - Unknown word (Length)      -- Length (View.Lights) < Length (Light_Jobs)
Engine/neo-world-graphics-renderer.adb:236:126   - Unknown word (Lights)      -- Remove (1..Length (View.Lights) + MAX_IDLE_LIGHT_JOBS
Engine/neo-world-graphics-renderer.adb:236:140   - Unknown word (IDLE)        -- (View.Lights) + MAX_IDLE_LIGHT_JOBS - Length
Engine/neo-world-graphics-renderer.adb:236:34    - Unknown word (Lights)      -- elsif Length (View.Lights) + MAX_IDLE_LIGHT_JOBS
Engine/neo-world-graphics-renderer.adb:236:48    - Unknown word (IDLE)        -- (View.Lights) + MAX_IDLE_LIGHT_JOBS > Length
Engine/neo-world-graphics-renderer.adb:238:18    - Unknown word (Kick)        -- -- --        -- Kick-off light projection
Engine/neo-world-graphics-renderer.adb:238:48    - Unknown word (searching)   -- light projection and searching for lit models then
Engine/neo-world-graphics-renderer.adb:238:78    - Unknown word (wait)        -- for lit models then wait for them to finish
Engine/neo-world-graphics-renderer.adb:238:87    - Unknown word (them)        -- models then wait for them to finish
Engine/neo-world-graphics-renderer.adb:238:95    - Unknown word (finish)      -- then wait for them to finish
Engine/neo-world-graphics-renderer.adb:240:28    - Unknown word (Element)     -- Light_Jobs.Element (I).Do_Pass (View.Lights
Engine/neo-world-graphics-renderer.adb:240:61    - Unknown word (Element)     -- Do_Pass (View.Lights.Element (I));
Engine/neo-world-graphics-renderer.adb:243:35    - Unknown word (Completion)  -- Light_Job.Confirm_Completion;
Engine/neo-world-graphics-renderer.adb:246:23    - Unknown word (Determine)   -- -- --         -- Determine all possible connected
Engine/neo-world-graphics-renderer.adb:246:37    - Unknown word (possible)    -- -- Determine all possible connected areas for
Engine/neo-world-graphics-renderer.adb:246:56    - Unknown word (areas)       -- all possible connected areas for light-behind-door
Engine/neo-world-graphics-renderer.adb:246:72    - Unknown word (behind)      -- connected areas for light-behind-door culling
Engine/neo-world-graphics-renderer.adb:246:79    - Unknown word (door)        -- areas for light-behind-door culling
Engine/neo-world-graphics-renderer.adb:246:84    - Unknown word (culling)     -- for light-behind-door culling
Engine/neo-world-graphics-renderer.adb:247:31    - Unknown word (OUTSIDE)     -- if Area := OUTSIDE_AREA then View.Connected
Engine/neo-world-graphics-renderer.adb:247:39    - Unknown word (AREA)        -- if Area := OUTSIDE_AREA then View.Connected
Engine/neo-world-graphics-renderer.adb:247:64    - Unknown word (Areas)       -- then View.Connected_Areas := (others => True)
Engine/neo-world-graphics-renderer.adb:247:84    - Unknown word (True)        -- Areas := (others => True)
Engine/neo-world-graphics-renderer.adb:24:21     - Unknown word (Stuff)        -- --package All_The_Stuff is new Uniform (Uniform
Engine/neo-world-graphics-renderer.adb:250:103   - Unknown word (thanks)      -- would have been faster thanks to inlining.
Engine/neo-world-graphics-renderer.adb:250:24    - Unknown word (Draw)        -- -- -- R_SortDrawSurfs -- A
Engine/neo-world-graphics-renderer.adb:250:28    - Unknown word (Surfs)       -- -- R_SortDrawSurfs -- A simple
Engine/neo-world-graphics-renderer.adb:250:50    - Unknown word (simple)      -- SortDrawSurfs -- A simple C qsort call. C++ sort
Engine/neo-world-graphics-renderer.adb:250:59    - Unknown word (qsort)       -- -- A simple C qsort call. C++ sort would
Engine/neo-world-graphics-renderer.adb:250:65    - Unknown word (call)        -- -- A simple C qsort call. C++ sort would have
Engine/neo-world-graphics-renderer.adb:250:80    - Unknown word (would)       -- qsort call. C++ sort would have been faster thanks
Engine/neo-world-graphics-renderer.adb:250:86    - Unknown word (have)        -- call. C++ sort would have been faster thanks to
Engine/neo-world-graphics-renderer.adb:250:91    - Unknown word (been)        -- C++ sort would have been faster thanks to inlining
Engine/neo-world-graphics-renderer.adb:250:96    - Unknown word (faster)      -- sort would have been faster thanks to inlining.
Engine/neo-world-graphics-renderer.adb:252:23    - Unknown word (Draw)        -- -- -- R_AddDrawViewCmd
Engine/neo-world-graphics-renderer.adb:25:16     - Unknown word (Shader)       -- package Test_Shader is new Shader ("test
Engine/neo-world-graphics-renderer.adb:25:30     - Unknown word (Shader)       -- package Test_Shader is new Shader ("test", ((Kind
Engine/neo-world-graphics-renderer.adb:25:48     - Unknown word (Kind)         -- new Shader ("test", ((Kind => Fragment_Stage
Engine/neo-world-graphics-renderer.adb:26:50     - Unknown word (Uniforms)     -- --Uniforms => (),
Engine/neo-world-graphics-renderer.adb:28:48     - Unknown word (Kind)         -- (Kind => Vertex_Stage
Engine/neo-world-graphics-renderer.adb:299:10    - Unknown word (Amount)      -- -- -- Amount of idle frontend light
Engine/neo-world-graphics-renderer.adb:299:103   - Unknown word (destroyed)   -- until tasks start being destroyed
Engine/neo-world-graphics-renderer.adb:299:20    - Unknown word (idle)        -- -- -- Amount of idle frontend light job tasks
Engine/neo-world-graphics-renderer.adb:299:50    - Unknown word (that)        -- frontend light job tasks that are allowed to sit idle
Engine/neo-world-graphics-renderer.adb:299:74    - Unknown word (idle)        -- that are allowed to sit idle until tasks start being
Engine/neo-world-graphics-renderer.adb:299:97    - Unknown word (being)       -- idle until tasks start being destroyed
Engine/neo-world-graphics-renderer.adb:29:123    - Unknown word (UNBOUND)      -- others => NULL_STR_UNBOUND),
Engine/neo-world-graphics-renderer.adb:29:48     - Unknown word (Uniforms)     -- Uniforms => (U ("model"), U
Engine/neo-world-graphics-renderer.adb:29:90     - Unknown word (projection)   -- model"), U ("view"), U ("projection"), others => NULL_STR
Engine/neo-world-graphics-renderer.adb:300:11    - Unknown word (IDLE)        -- -- MAX_IDLE_LIGHT_JOBS : constant
Engine/neo-world-graphics-renderer.adb:300:38    - Unknown word (Positive)    -- LIGHT_JOBS : constant Positive := 10;
Engine/neo-world-graphics-renderer.adb:316:31    - Unknown word (shader)      -- -- Evaluate light shader registers
Engine/neo-world-graphics-renderer.adb:316:38    - Unknown word (registers)   -- Evaluate light shader registers
Engine/neo-world-graphics-renderer.adb:318:16    - Unknown word (Additve)     -- -- -- Additve lights with no stage
Engine/neo-world-graphics-renderer.adb:318:24    - Unknown word (lights)      -- -- Additve lights with no stage in the
Engine/neo-world-graphics-renderer.adb:318:58    - Unknown word (shader)      -- no stage in the light shader is positive, remove
Engine/neo-world-graphics-renderer.adb:318:68    - Unknown word (positive)    -- the light shader is positive, remove the light
Engine/neo-world-graphics-renderer.adb:319:22    - Unknown word (Kind)        -- - if Light.Kind := Fog_Light or Light
Engine/neo-world-graphics-renderer.adb:319:49    - Unknown word (Kind)        -- Fog_Light or Light.Kind := Blend_Light then
Engine/neo-world-graphics-renderer.adb:320:15    - Unknown word (Outter)      -- -- Outter: for Stage of Light
Engine/neo-world-graphics-renderer.adb:320:42    - Unknown word (Stages)      -- for Stage of Light.Stages loop
Engine/neo-world-graphics-renderer.adb:321:32    - Unknown word (Registers)   -- if Light.Stage.Registers.Condition_Register then
Engine/neo-world-graphics-renderer.adb:323:22    - Unknown word (Snap)        -- - -- Snap tiny values to zero
Engine/neo-world-graphics-renderer.adb:323:27    - Unknown word (tiny)        -- -- Snap tiny values to zero
Engine/neo-world-graphics-renderer.adb:324:47    - Unknown word (Registers)   -- Register of Light.Stage.Registers loop
Engine/neo-world-graphics-renderer.adb:328:25    - Unknown word (found)       -- -- We found a light that add something
Engine/neo-world-graphics-renderer.adb:328:39    - Unknown word (that)        -- -- We found a light that add something
Engine/neo-world-graphics-renderer.adb:328:48    - Unknown word (something)   -- found a light that add something
Engine/neo-world-graphics-renderer.adb:329:47    - Unknown word (Registers)   -- Register of Light.Stage.Registers loop
Engine/neo-world-graphics-renderer.adb:330:26    - Unknown word (Outter)      -- exit Outter when Register > 0.0
Engine/neo-world-graphics-renderer.adb:333:35    - Unknown word (Stages)      -- if Stage := Light.Stages.Last then
Engine/neo-world-graphics-renderer.adb:335:11    - Unknown word (didn't)      -- -- -- We didn't find any addition to
Engine/neo-world-graphics-renderer.adb:335:18    - Unknown word (find)        -- -- -- We didn't find any addition to the
Engine/neo-world-graphics-renderer.adb:335:27    - Unknown word (addition)    -- We didn't find any addition to the scene
Engine/neo-world-graphics-renderer.adb:335:43    - Unknown word (scene)       -- any addition to the scene
Engine/neo-world-graphics-renderer.adb:336:10    - Unknown word (Skip)        -- -- goto Skip_Light;
Engine/neo-world-graphics-renderer.adb:338:22    - Unknown word (Outter)     -- - end loop Outter;
Engine/neo-world-graphics-renderer.adb:33:12     - Unknown word (Frame)        -- -- Build_Frame --
Engine/neo-world-graphics-renderer.adb:343:38    - Unknown word (represent)  -- Create a "fog plane" to represent light far clip plane
Engine/neo-world-graphics-renderer.adb:343:58    - Unknown word (clip)       -- represent light far clip plane
Engine/neo-world-graphics-renderer.adb:345:108   - Unknown word (clip)       -- the light frustum in clip space
Engine/neo-world-graphics-renderer.adb:345:14    - Unknown word (Calculate)  -- -- -- Calculate the matrix that projects
Engine/neo-world-graphics-renderer.adb:345:28    - Unknown word (matrix)     -- -- Calculate the matrix that projects the zero
Engine/neo-world-graphics-renderer.adb:345:73    - Unknown word (exactly)    -- zero-to-one cube to exactly cover the light frustum
Engine/neo-world-graphics-renderer.adb:345:81    - Unknown word (cover)      -- one cube to exactly cover the light frustum in
Engine/neo-world-graphics-renderer.adb:345:97    - Unknown word (frustum)    -- exactly cover the light frustum in clip space
Engine/neo-world-graphics-renderer.adb:347:14    - Unknown word (Calculate)  -- -- -- Calculate the project bounds,
Engine/neo-world-graphics-renderer.adb:347:36    - Unknown word (bounds)     -- Calculate the project bounds, either not clipped
Engine/neo-world-graphics-renderer.adb:347:44    - Unknown word (either)     -- the project bounds, either not clipped at all,
Engine/neo-world-graphics-renderer.adb:347:55    - Unknown word (clipped)    -- project bounds, either not clipped at all, near clipped
Engine/neo-world-graphics-renderer.adb:347:76    - Unknown word (clipped)    -- clipped at all, near clipped, or fully clipped
Engine/neo-world-graphics-renderer.adb:347:88    - Unknown word (fully)      -- all, near clipped, or fully clipped
Engine/neo-world-graphics-renderer.adb:347:94    - Unknown word (clipped)    -- near clipped, or fully clipped
Engine/neo-world-graphics-renderer.adb:349:24    - Unknown word (scissor)    -- -- Build the scissor
Engine/neo-world-graphics-renderer.adb:351:103   - Unknown word (shadows)      -- entities that may cast shadows
Engine/neo-world-graphics-renderer.adb:351:21    - Unknown word (interactions) -- -- -- Create interactions with all entities the
Engine/neo-world-graphics-renderer.adb:351:66    - Unknown word (touch)        -- entities the light may touch and add entities that
Engine/neo-world-graphics-renderer.adb:351:98    - Unknown word (cast)         -- add entities that may cast shadows
Engine/neo-world-graphics-renderer.adb:354:124   - Unknown word (center)       -- connected to the light center
Engine/neo-world-graphics-renderer.adb:354:16    - Unknown word (Some)         -- -- -- Some lights have their center
Engine/neo-world-graphics-renderer.adb:354:21    - Unknown word (lights)       -- -- -- Some lights have their center of
Engine/neo-world-graphics-renderer.adb:354:28    - Unknown word (have)         -- -- Some lights have their center of projection
Engine/neo-world-graphics-renderer.adb:354:33    - Unknown word (their)        -- -- Some lights have their center of projection
Engine/neo-world-graphics-renderer.adb:354:39    - Unknown word (center)       -- Some lights have their center of projection outside
Engine/neo-world-graphics-renderer.adb:354:60    - Unknown word (outside)      -- center of projection outside of the world so ignore
Engine/neo-world-graphics-renderer.adb:354:91    - Unknown word (areas)        -- the world so ignore areas not connected to the
Engine/neo-world-graphics-renderer.adb:355:32    - Unknown word (Areas)        -- if not Light.World.Areas_Are_Connected (Light
Engine/neo-world-graphics-renderer.adb:357:38    - Unknown word (this)         -- Check the models in this area
Engine/neo-world-graphics-renderer.adb:357:43    - Unknown word (area)         -- Check the models in this area
Engine/neo-world-graphics-renderer.adb:359:38    - Unknown word (Interaction)  -- if not (vLight.entityInteractionState[ edef.index ]
Engine/neo-world-graphics-renderer.adb:359:56    - Unknown word (edef)         -- entityInteractionState[ edef.index ] /= viewLight
Engine/neo-world-graphics-renderer.adb:359:85    - Unknown word (INTERACTION)  -- index ] /= viewLight_t::INTERACTION_UNCHECKED or else
Engine/neo-world-graphics-renderer.adb:361:102   - Unknown word (even)         -- have no interactions even though they are both
Engine/neo-world-graphics-renderer.adb:361:107   - Unknown word (though)       -- no interactions even though they are both present
Engine/neo-world-graphics-renderer.adb:361:114   - Unknown word (they)         -- interactions even though they are both present in
Engine/neo-world-graphics-renderer.adb:361:123   - Unknown word (both)         -- even though they are both present in the same
Engine/neo-world-graphics-renderer.adb:361:128   - Unknown word (present)      -- though they are both present in the same area(s)
Engine/neo-world-graphics-renderer.adb:361:143   - Unknown word (same)         -- both present in the same area(s)
Engine/neo-world-graphics-renderer.adb:361:148   - Unknown word (area)         -- present in the same area(s)
Engine/neo-world-graphics-renderer.adb:361:24    - Unknown word (large)        -- -- A large fraction of static entity
Engine/neo-world-graphics-renderer.adb:361:30    - Unknown word (fraction)     -- -- A large fraction of static entity / light
Engine/neo-world-graphics-renderer.adb:361:70    - Unknown word (will)         -- entity / light pairs will still have no interactions
Engine/neo-world-graphics-renderer.adb:361:75    - Unknown word (still)        -- entity / light pairs will still have no interactions
Engine/neo-world-graphics-renderer.adb:361:81    - Unknown word (have)         -- light pairs will still have no interactions even
Engine/neo-world-graphics-renderer.adb:361:89    - Unknown word (interactions) -- pairs will still have no interactions even though they are
Engine/neo-world-graphics-renderer.adb:362:63    - Unknown word (inter)        -- eModel.IsDynamicModel && inter = INTERACTION_EMPTY
Engine/neo-world-graphics-renderer.adb:362:71    - Unknown word (INTERACTION)  -- IsDynamicModel && inter = INTERACTION_EMPTY or else
Engine/neo-world-graphics-renderer.adb:362:83    - Unknown word (EMPTY)        -- inter = INTERACTION_EMPTY or else
Engine/neo-world-graphics-renderer.adb:364:103   - Unknown word (assumptions)  -- else. There are two assumptions here - that
Engine/neo-world-graphics-renderer.adb:364:115   - Unknown word (here)         -- are two assumptions here - that
Engine/neo-world-graphics-renderer.adb:364:33    - Unknown word (want)         -- -- We don't want the lights on weapons
Engine/neo-world-graphics-renderer.adb:364:42    - Unknown word (lights)       -- - We don't want the lights on weapons to illuminate
Engine/neo-world-graphics-renderer.adb:364:52    - Unknown word (weapons)      -- t want the lights on weapons to illuminate anything
Engine/neo-world-graphics-renderer.adb:364:63    - Unknown word (illuminate)   -- lights on weapons to illuminate anything else. There
Engine/neo-world-graphics-renderer.adb:364:74    - Unknown word (anything)     -- weapons to illuminate anything else. There are two
Engine/neo-world-graphics-renderer.adb:364:89    - Unknown word (There)        -- illuminate anything else. There are two assumptions
Engine/neo-world-graphics-renderer.adb:365:101   - Unknown word (have)         -- that all weapons will have weaponDepthHack. A more
Engine/neo-world-graphics-renderer.adb:365:106   - Unknown word (weapon)       -- all weapons will have weaponDepthHack. A more general
Engine/neo-world-graphics-renderer.adb:365:117   - Unknown word (Hack)         -- will have weaponDepthHack. A more general
Engine/neo-world-graphics-renderer.adb:365:125   - Unknown word (more)         -- have weaponDepthHack. A more general
Engine/neo-world-graphics-renderer.adb:365:24    - Unknown word (allow)        -- -- allowLightInViewID is only
Engine/neo-world-graphics-renderer.adb:365:60    - Unknown word (weapon)       -- ightInViewID is only used for weapon lights, and that all
Engine/neo-world-graphics-renderer.adb:365:67    - Unknown word (lights)       -- only used for weapon lights, and that all weapons
Engine/neo-world-graphics-renderer.adb:365:88    - Unknown word (weapons)      -- lights, and that all weapons will have weaponDepthHack
Engine/neo-world-graphics-renderer.adb:365:96    - Unknown word (will)         -- and that all weapons will have weaponDepthHack
Engine/neo-world-graphics-renderer.adb:366:33    - Unknown word (would)        -- -- solution would be to have an allowLightOnEnt
Engine/neo-world-graphics-renderer.adb:366:53    - Unknown word (allow)        -- would be to have an allowLightOnEntityID field
Engine/neo-world-graphics-renderer.adb:367:100   - Unknown word (Hack)         -- !eParms.weaponDepthHack or else
Engine/neo-world-graphics-renderer.adb:367:27    - Unknown word (parms)        -- light.parms.allowLightInViewID
Engine/neo-world-graphics-renderer.adb:367:33    - Unknown word (allow)        -- light.parms.allowLightInViewID && light
Engine/neo-world-graphics-renderer.adb:367:61    - Unknown word (parms)        -- allowLightInViewID && light.parms.pointLight && !eParms
Engine/neo-world-graphics-renderer.adb:367:83    - Unknown word (Parms)        -- parms.pointLight && !eParms.weaponDepthHack or else
Engine/neo-world-graphics-renderer.adb:367:89    - Unknown word (weapon)       -- pointLight && !eParms.weaponDepthHack or else
Engine/neo-world-graphics-renderer.adb:36:19     - Unknown word (Frame)        -- procedure Build_Frame (Frame : in out Framebuffer
Engine/neo-world-graphics-renderer.adb:36:26     - Unknown word (Frame)        -- procedure Build_Frame (Frame : in out Framebuffer
Engine/neo-world-graphics-renderer.adb:370:106   - Unknown word (Directly)     -- astingSurfaces ) ) && !edef.IsDirectlyVisible or else
Engine/neo-world-graphics-renderer.adb:370:114   - Unknown word (Visible)      -- && !edef.IsDirectlyVisible or else
Engine/neo-world-graphics-renderer.adb:370:23    - Unknown word (Parms)        -- (eParms.noShadow or ( eModel
Engine/neo-world-graphics-renderer.adb:370:75    - Unknown word (Casting)      -- eModel.ModelHasShadowCastingSurfaces ) ) && !edef
Engine/neo-world-graphics-renderer.adb:370:82    - Unknown word (Surfaces)     -- ModelHasShadowCastingSurfaces ) ) && !edef.IsDirectlyVisibl
Engine/neo-world-graphics-renderer.adb:370:99    - Unknown word (edef)         -- ShadowCastingSurfaces ) ) && !edef.IsDirectlyVisible or
Engine/neo-world-graphics-renderer.adb:371:47    - Unknown word (Interacting)  -- eModel && !eModel.ModelHasInteractingSurfaces && !eModel.ModelHasSh
Engine/neo-world-graphics-renderer.adb:371:58    - Unknown word (Surfaces)     -- eModel.ModelHasInteractingSurfaces && !eModel.ModelHasShadowCast
Engine/neo-world-graphics-renderer.adb:371:92    - Unknown word (Casting)      -- eModel.ModelHasShadowCastingSurfaces or else
Engine/neo-world-graphics-renderer.adb:372:104   - Unknown word (edef)         -- ullModelBoundsToLight( light, edef.localReferenceBounds
Engine/neo-world-graphics-renderer.adb:372:123   - Unknown word (Bounds)       -- edef.localReferenceBounds, edef.modelRenderMatrix
Engine/neo-world-graphics-renderer.adb:372:131   - Unknown word (edef)         -- localReferenceBounds, edef.modelRenderMatrix )
Engine/neo-world-graphics-renderer.adb:372:21    - Unknown word (inter)        -- -- inter = NULL and (eParms.noDynamicI
Engine/neo-world-graphics-renderer.adb:372:40    - Unknown word (Parms)        -- inter = NULL and (eParms.noDynamicInteractions
Engine/neo-world-graphics-renderer.adb:372:55    - Unknown word (Interactions) -- and (eParms.noDynamicInteractions or R_CullModelBoundsToLight
Engine/neo-world-graphics-renderer.adb:372:73    - Unknown word (Cull)         -- noDynamicInteractions or R_CullModelBoundsToLight( light
Engine/neo-world-graphics-renderer.adb:372:82    - Unknown word (Bounds)       -- micInteractions or R_CullModelBoundsToLight( light, edef
Engine/neo-world-graphics-renderer.adb:373:21    - Unknown word (edef)         -- -- edef.IsDirectlyVisible
Engine/neo-world-graphics-renderer.adb:373:28    - Unknown word (Directly)     -- edef.IsDirectlyVisible
Engine/neo-world-graphics-renderer.adb:373:36    - Unknown word (Visible)      -- edef.IsDirectlyVisible
Engine/neo-world-graphics-renderer.adb:374:27    - Unknown word (Casts)        -- !lightCastsShadows
Engine/neo-world-graphics-renderer.adb:374:32    - Unknown word (Shadows)      -- !lightCastsShadows
Engine/neo-world-graphics-renderer.adb:37:13     - Unknown word (Bottom)       -- State : Bottom_Level_State := (others
Engine/neo-world-graphics-renderer.adb:387:10    - Unknown word (Recursivly)   -- -- -- Recursivly find lights and entities
Engine/neo-world-graphics-renderer.adb:387:21    - Unknown word (find)         -- -- -- Recursivly find lights and entities
Engine/neo-world-graphics-renderer.adb:387:49    - Unknown word (flowing)      -- lights and entities by flowing from an origin through
Engine/neo-world-graphics-renderer.adb:387:72    - Unknown word (through)      -- flowing from an origin through visible portals that
Engine/neo-world-graphics-renderer.adb:387:80    - Unknown word (visible)      -- from an origin through visible portals that the view
Engine/neo-world-graphics-renderer.adb:387:88    - Unknown word (portals)      -- origin through visible portals that the view origin
Engine/neo-world-graphics-renderer.adb:390:52    - Unknown word (Planes)       -- Origin : Vector_3D; Planes : in out Vector_Plane
Engine/neo-world-graphics-renderer.adb:390:84    - Unknown word (Unsafe)       -- out Vector_Plane_4D.Unsafe.Vector) is
Engine/neo-world-graphics-renderer.adb:394:11    - Unknown word (Screen)       -- -- idScreenRect r;
Engine/neo-world-graphics-renderer.adb:394:17    - Unknown word (Rect)         -- -- idScreenRect r;
Engine/neo-world-graphics-renderer.adb:399:19    - Unknown word (Rectangle)    -- -- Portals.Rectangle := View.Scissor;
Engine/neo-world-graphics-renderer.adb:399:37    - Unknown word (Scissor)      -- Portals.Rectangle := View.Scissor;
Engine/neo-world-graphics-renderer.adb:401:24    - Unknown word (outside)      -- -- If we are outside the world, mark everything
Engine/neo-world-graphics-renderer.adb:401:43    - Unknown word (mark)         -- are outside the world, mark everything
Engine/neo-world-graphics-renderer.adb:401:48    - Unknown word (everything)   -- outside the world, mark everything
Engine/neo-world-graphics-renderer.adb:404:20    - Unknown word (Screen)       -- -- Area_Screen_Rect (I) := View.Scissor
Engine/neo-world-graphics-renderer.adb:404:27    - Unknown word (Rect)         -- Area_Screen_Rect (I) := View.Scissor
Engine/neo-world-graphics-renderer.adb:404:44    - Unknown word (Scissor)      -- Screen_Rect (I) := View.Scissor;
Engine/neo-world-graphics-renderer.adb:408:28    - Unknown word (area)         -- portalArea_t * area := &portalAreas[ areaNum
Engine/neo-world-graphics-renderer.adb:408:43    - Unknown word (Areas)        -- portalArea_t * area := &portalAreas[ areaNum ];
Engine/neo-world-graphics-renderer.adb:408:50    - Unknown word (area)         -- area := &portalAreas[ areaNum ];
Engine/neo-world-graphics-renderer.adb:40:11     - Unknown word (Projection)   -- Frame_Projection : constant Matrix_4D
Engine/neo-world-graphics-renderer.adb:40:110    - Unknown word (Height)       -- Get) / Real (Window_Height.Get), 0.1, 2000.0);
Engine/neo-world-graphics-renderer.adb:40:46     - Unknown word (Perspective)  -- constant Matrix_4D := Perspective (CAMERA_FOV, Real (Window
Engine/neo-world-graphics-renderer.adb:40:5      - Unknown word (Frame)        -- Frame_Projection : constant
Engine/neo-world-graphics-renderer.adb:40:59     - Unknown word (CAMERA)       -- Matrix_4D := Perspective (CAMERA_FOV, Real (Window_Width
Engine/neo-world-graphics-renderer.adb:40:84     - Unknown word (Width)        -- CAMERA_FOV, Real (Window_Width.Get) / Real (Window
Engine/neo-world-graphics-renderer.adb:410:16    - Unknown word (Cull)         -- -- -- Cull models and lights to
Engine/neo-world-graphics-renderer.adb:410:68    - Unknown word (planes)       -- current collection of planes
Engine/neo-world-graphics-renderer.adb:412:18    - Unknown word (Screen)       -- -- Area_Screen_Rect (Area) := (if Is
Engine/neo-world-graphics-renderer.adb:412:25    - Unknown word (Rect)         -- Area_Screen_Rect (Area) := (if Is_Empty
Engine/neo-world-graphics-renderer.adb:412:47    - Unknown word (Empty)        -- Rect (Area) := (if Is_Empty (Area_Screen_Rect (Area
Engine/neo-world-graphics-renderer.adb:412:59    - Unknown word (Screen)       -- (if Is_Empty (Area_Screen_Rect (Area)) then Portals
Engine/neo-world-graphics-renderer.adb:412:66    - Unknown word (Rect)         -- Is_Empty (Area_Screen_Rect (Area)) then Portals
Engine/neo-world-graphics-renderer.adb:412:92    - Unknown word (Rect)         -- Area)) then Portals.Rect;
Engine/neo-world-graphics-renderer.adb:413:51    - Unknown word (Screen)       -- else Area_Screen_Rect (Area) := Join
Engine/neo-world-graphics-renderer.adb:415:19    - Unknown word (through)      -- -- -- Go through all the portals
Engine/neo-world-graphics-renderer.adb:415:35    - Unknown word (portals)      -- Go through all the portals
Engine/neo-world-graphics-renderer.adb:418:50    - Unknown word (door)         -- portal isn't a closed door and that it is facing
Engine/neo-world-graphics-renderer.adb:418:70    - Unknown word (facing)       -- door and that it is facing the view
Engine/neo-world-graphics-renderer.adb:419:15    - Unknown word (Distance)     -- -- Distance := Portal.Plane.Distance
Engine/neo-world-graphics-renderer.adb:419:40    - Unknown word (Distance)     -- Distance := Portal.Plane.Distance (Origin);
Engine/neo-world-graphics-renderer.adb:41:46     - Unknown word (Camera)       -- constant Matrix_4D := Camera.View;
Engine/neo-world-graphics-renderer.adb:41:5      - Unknown word (Frame)        -- Frame_View : constant
Engine/neo-world-graphics-renderer.adb:420:61    - Unknown word (Distance)     -- Portal.Is_View_Block and Distance < -0.1 then
Engine/neo-world-graphics-renderer.adb:422:103   - Unknown word (vanish)       -- that may cause areas to vanish
Engine/neo-world-graphics-renderer.adb:422:30    - Unknown word (very)         -- -- If we are very close to the portal
Engine/neo-world-graphics-renderer.adb:422:55    - Unknown word (surface)      -- close to the portal surface, avoid clipping that
Engine/neo-world-graphics-renderer.adb:422:64    - Unknown word (avoid)        -- the portal surface, avoid clipping that may cause
Engine/neo-world-graphics-renderer.adb:422:70    - Unknown word (clipping)     -- portal surface, avoid clipping that may cause areas
Engine/neo-world-graphics-renderer.adb:422:88    - Unknown word (cause)        -- avoid clipping that may cause areas to vanish
Engine/neo-world-graphics-renderer.adb:422:94    - Unknown word (areas)        -- clipping that may cause areas to vanish
Engine/neo-world-graphics-renderer.adb:423:20    - Unknown word (Distance)     -- -- if Distance < 1.0 then
Engine/neo-world-graphics-renderer.adb:426:30    - Unknown word (Through)      -- Flood_View_Through_Portals (Origin, New
Engine/neo-world-graphics-renderer.adb:429:22    - Unknown word (Clip)         -- - -- Clip the portal winding to
Engine/neo-world-graphics-renderer.adb:429:38    - Unknown word (winding)      -- -- Clip the portal winding to all of the planes
Engine/neo-world-graphics-renderer.adb:429:60    - Unknown word (planes)       -- winding to all of the planes
Engine/neo-world-graphics-renderer.adb:430:68    - Unknown word (Clip)         -- loop exit when not Is_Clip_In_Place (Portal.Winding
Engine/neo-world-graphics-renderer.adb:430:76    - Unknown word (Place)        -- when not Is_Clip_In_Place (Portal.Winding, Plane
Engine/neo-world-graphics-renderer.adb:430:90    - Unknown word (Winding)      -- Clip_In_Place (Portal.Winding, Plane); end loop;
Engine/neo-world-graphics-renderer.adb:432:53    - Unknown word (visible)      -- only if the portal is visible and not fogged out
Engine/neo-world-graphics-renderer.adb:432:69    - Unknown word (fogged)       -- portal is visible and not fogged out
Engine/neo-world-graphics-renderer.adb:433:63    - Unknown word (Fogged)       -- Points.Length /= 0 and Is_Fogged (Portal) then
Engine/neo-world-graphics-renderer.adb:438:24    - Unknown word (Scissor)      -- -- Scissor things outside the screen
Engine/neo-world-graphics-renderer.adb:438:39    - Unknown word (outside)      -- -- Scissor things outside the screen pixel bounding
Engine/neo-world-graphics-renderer.adb:438:51    - Unknown word (screen)       -- Scissor things outside the screen pixel bounding box
Engine/neo-world-graphics-renderer.adb:438:64    - Unknown word (bounding)     -- outside the screen pixel bounding box
Engine/neo-world-graphics-renderer.adb:440:26    - Unknown word (Width)        -- View_Width := View.Port.X2 - View
Engine/neo-world-graphics-renderer.adb:441:26    - Unknown word (Height)       -- View_Height := View.Port.Y2 - View
Engine/neo-world-graphics-renderer.adb:444:33    - Unknown word (Normalized)   -- R_GlobalToNormalizedDeviceCoordinates (v
Engine/neo-world-graphics-renderer.adb:444:49    - Unknown word (Coordinates)  -- GlobalToNormalizedDeviceCoordinates (v, ndc);
Engine/neo-world-graphics-renderer.adb:445:82    - Unknown word (Width)        -- * 0.5 + 0.5) * viewWidth,
Engine/neo-world-graphics-renderer.adb:446:82    - Unknown word (Height)       -- * 0.5 + 0.5) * viewHeight);
Engine/neo-world-graphics-renderer.adb:448:23    - Unknown word (Expand)       -- r.Expand;
Engine/neo-world-graphics-renderer.adb:450:24    - Unknown word (Slop)         -- -- Slop might have spread it
Engine/neo-world-graphics-renderer.adb:450:29    - Unknown word (might)        -- -- Slop might have spread it a pixel
Engine/neo-world-graphics-renderer.adb:450:40    - Unknown word (spread)       -- -- Slop might have spread it a pixel outside,
Engine/neo-world-graphics-renderer.adb:450:58    - Unknown word (outside)      -- have spread it a pixel outside, so trim it back
Engine/neo-world-graphics-renderer.adb:450:70    - Unknown word (trim)         -- a pixel outside, so trim it back
Engine/neo-world-graphics-renderer.adb:450:78    - Unknown word (back)         -- outside, so trim it back
Engine/neo-world-graphics-renderer.adb:451:38    - Unknown word (Intersect)    -- New_Portals.Rect.Intersect (Portals.Rect);
Engine/neo-world-graphics-renderer.adb:453:101   - Unknown word (scissor)     -- visibility beyond the scissor
Engine/neo-world-graphics-renderer.adb:453:42    - Unknown word (clipping)     -- - Generate a set of clipping planes to restrict the
Engine/neo-world-graphics-renderer.adb:453:51    - Unknown word (planes)       -- Generate a set of clipping planes to restrict the view
Engine/neo-world-graphics-renderer.adb:453:61    - Unknown word (restrict)     -- of clipping planes to restrict the view visibility
Engine/neo-world-graphics-renderer.adb:457:26    - Unknown word (Skip)        -- -- Skip degenerates
Engine/neo-world-graphics-renderer.adb:457:31    - Unknown word (degenerates) -- -- Skip degenerates
Engine/neo-world-graphics-renderer.adb:458:74    - Unknown word (Normalize)   -- newStack.numPortalPlanes].Normalize() >= 0.01f then
Engine/neo-world-graphics-renderer.adb:459:76    - Unknown word (Through)     -- numPortalPlanes].FitThroughPoint( origin);
Engine/neo-world-graphics-renderer.adb:45:11     - Unknown word (Surface)      -- for Surface of View.Surfaces loop
Engine/neo-world-graphics-renderer.adb:45:27     - Unknown word (Surfaces)     -- for Surface of View.Surfaces loop
Engine/neo-world-graphics-renderer.adb:468:26    - Unknown word (Through)     -- Flood_View_Through_Portals (origin, Portal
Engine/neo-world-graphics-renderer.adb:477:14    - Unknown word (Setup)       -- -- -- Setup the view matrix
Engine/neo-world-graphics-renderer.adb:477:29    - Unknown word (matrix)      -- -- Setup the view matrix
Engine/neo-world-graphics-renderer.adb:478:11    - Unknown word (Viewer)      -- -- Viewer := (Axis.XX, Axis.YX
Engine/neo-world-graphics-renderer.adb:482:102   - Unknown word (znear)       -- GetFloat() * 0.25f ) : r_znear.GetFloat();
Engine/neo-world-graphics-renderer.adb:482:53    - Unknown word (cram)        -- viewDef->renderView.cramZNear ) ? ( r_znear.GetFloat
Engine/neo-world-graphics-renderer.adb:482:71    - Unknown word (znear)       -- renderView.cramZNear ) ? ( r_znear.GetFloat() * 0.25f
Engine/neo-world-graphics-renderer.adb:483:34    - Unknown word (Math)        -- float ymax = zNear * idMath::Tan( DEG2RAD( viewDef
Engine/neo-world-graphics-renderer.adb:485:34    - Unknown word (Math)        -- float xmax = zNear * idMath::Tan( DEG2RAD( viewDef
Engine/neo-world-graphics-renderer.adb:487:23    - Unknown word (width)       -- const float width = xmax - xmin;
Engine/neo-world-graphics-renderer.adb:488:23    - Unknown word (height)      -- const float height = ymax - ymin;
Engine/neo-world-graphics-renderer.adb:489:25    - Unknown word (Width)       -- const int viewWidth = viewDef->viewport
Engine/neo-world-graphics-renderer.adb:48:23     - Unknown word (Surface)      -- State.Mesh := Surface.Mesh;
Engine/neo-world-graphics-renderer.adb:490:25    - Unknown word (Height)      -- const int viewHeight = viewDef->viewport
Engine/neo-world-graphics-renderer.adb:492:61    - Unknown word (width)       -- 0] = 2.0f * zNear / width;
Engine/neo-world-graphics-renderer.adb:497:62    - Unknown word (height)      -- ] = -2.0f * zNear / height;
Engine/neo-world-graphics-renderer.adb:501:14    - Unknown word (this)        -- -- -- this is the far-plane-at
Engine/neo-world-graphics-renderer.adb:501:39    - Unknown word (infinity)    -- is the far-plane-at-infinity formulation, and
Engine/neo-world-graphics-renderer.adb:501:48    - Unknown word (formulation) -- far-plane-at-infinity formulation, and
Engine/neo-world-graphics-renderer.adb:502:14    - Unknown word (crunches)    -- -- -- crunches the Z range slightly
Engine/neo-world-graphics-renderer.adb:502:35    - Unknown word (slightly)    -- crunches the Z range slightly so w=0 vertexes do not
Engine/neo-world-graphics-renderer.adb:502:51    - Unknown word (vertexes)    -- range slightly so w=0 vertexes do not
Engine/neo-world-graphics-renderer.adb:503:14    - Unknown word (rasterize)   -- -- -- rasterize right at the wraparound
Engine/neo-world-graphics-renderer.adb:503:37    - Unknown word (wraparound)  -- rasterize right at the wraparound point
Engine/neo-world-graphics-renderer.adb:507:58    - Unknown word (adjust)      -- *4+2] = -0.999f; // adjust value to prevent imprecision
Engine/neo-world-graphics-renderer.adb:507:74    - Unknown word (prevent)     -- // adjust value to prevent imprecision issues
Engine/neo-world-graphics-renderer.adb:507:82    - Unknown word (imprecision) -- adjust value to prevent imprecision issues
Engine/neo-world-graphics-renderer.adb:507:94    - Unknown word (issues)      -- prevent imprecision issues
Engine/neo-world-graphics-renderer.adb:50:12     - Unknown word (Shader)       -- -- Shader
Engine/neo-world-graphics-renderer.adb:513:36    - Unknown word (flip)        -- viewDef->renderView.flipProjection ) {
Engine/neo-world-graphics-renderer.adb:517:14    - Unknown word (Setup)       -- -- -- Setup render matricies for
Engine/neo-world-graphics-renderer.adb:517:27    - Unknown word (matricies)   -- -- Setup render matricies for faster culliong
Engine/neo-world-graphics-renderer.adb:517:41    - Unknown word (faster)      -- render matricies for faster culliong
Engine/neo-world-graphics-renderer.adb:517:48    - Unknown word (culliong)    -- matricies for faster culliong
Engine/neo-world-graphics-renderer.adb:518:37    - Unknown word (Transpose)   -- Render_Projection := Transpose (View.Projection);
Engine/neo-world-graphics-renderer.adb:519:60    - Unknown word (Transpose)   -- Render_Projection * Transpose (View.World_Space.Model
Engine/neo-world-graphics-renderer.adb:51:14     - Unknown word (Shader)       -- Test_Shader.Commit;
Engine/neo-world-graphics-renderer.adb:520:16    - Unknown word (Frustum)     -- -- View.Frustum := ((4)(3) => Z_Near
Engine/neo-world-graphics-renderer.adb:520:65    - Unknown word (Frustum)     -- Get, others => -Get_Frustum_Planes (View.World_Space
Engine/neo-world-graphics-renderer.adb:522:14    - Unknown word (Walk)        -- -- -- Walk the BSP tree to find
Engine/neo-world-graphics-renderer.adb:522:35    - Unknown word (find)        -- Walk the BSP tree to find the area where the view
Engine/neo-world-graphics-renderer.adb:522:49    - Unknown word (where)       -- tree to find the area where the view origin is
Engine/neo-world-graphics-renderer.adb:529:20    - Unknown word (Opaque)      -- -- when Opaque_Partition => raise In
Engine/neo-world-graphics-renderer.adb:529:49    - Unknown word (Solid)       -- Partition => raise In_Solid;
Engine/neo-world-graphics-renderer.adb:534:28    - Unknown word (portals)     -- -- Flood through portals
Engine/neo-world-graphics-renderer.adb:537:24    - Unknown word (amount)      -- -- Reset the amount of light jobs if changed
Engine/neo-world-graphics-renderer.adb:537:48    - Unknown word (changed)     -- amount of light jobs if changed (this will need tuning
Engine/neo-world-graphics-renderer.adb:537:57    - Unknown word (this)        -- light jobs if changed (this will need tuning)
Engine/neo-world-graphics-renderer.adb:537:62    - Unknown word (will)        -- jobs if changed (this will need tuning)
Engine/neo-world-graphics-renderer.adb:537:67    - Unknown word (need)        -- if changed (this will need tuning)
Engine/neo-world-graphics-renderer.adb:538:124   - Unknown word (Unsafe)      -- Append (new Vector_Lights.Unsafe.Vector (Length (View
Engine/neo-world-graphics-renderer.adb:539:136   - Unknown word (IDLE)        -- (View.Lights) + MAX_IDLE_LIGHT_JOBS - Length
Engine/neo-world-graphics-renderer.adb:539:44    - Unknown word (IDLE)        -- (View.Lights) + MAX_IDLE_LIGHT_JOBS > Length
Engine/neo-world-graphics-renderer.adb:53:12     - Unknown word (Rasterization) -- -- Rasterization
Engine/neo-world-graphics-renderer.adb:541:14    - Unknown word (Kick)        -- -- -- Kick-off light projection
Engine/neo-world-graphics-renderer.adb:541:44    - Unknown word (searching)   -- light projection and searching for lit models then
Engine/neo-world-graphics-renderer.adb:541:74    - Unknown word (wait)        -- for lit models then wait for them to finish
Engine/neo-world-graphics-renderer.adb:541:83    - Unknown word (them)        -- models then wait for them to finish
Engine/neo-world-graphics-renderer.adb:541:91    - Unknown word (finish)      -- then wait for them to finish
Engine/neo-world-graphics-renderer.adb:543:24    - Unknown word (Element)     -- Light_Jobs.Element (I).Do_Pass (View.Lights
Engine/neo-world-graphics-renderer.adb:543:57    - Unknown word (Element)     -- Do_Pass (View.Lights.Element (I));
Engine/neo-world-graphics-renderer.adb:546:31    - Unknown word (Completion)  -- Light_Job.Confirm_Completion;
Engine/neo-world-graphics-renderer.adb:549:19    - Unknown word (Determine)   -- -- --         -- Determine all possible connected
Engine/neo-world-graphics-renderer.adb:549:33    - Unknown word (possible)    -- -- Determine all possible connected areas for
Engine/neo-world-graphics-renderer.adb:549:52    - Unknown word (areas)       -- all possible connected areas for light-behind-door
Engine/neo-world-graphics-renderer.adb:549:68    - Unknown word (behind)      -- connected areas for light-behind-door culling
Engine/neo-world-graphics-renderer.adb:549:75    - Unknown word (door)        -- areas for light-behind-door culling
Engine/neo-world-graphics-renderer.adb:549:80    - Unknown word (culling)     -- for light-behind-door culling
Engine/neo-world-graphics-renderer.adb:54:18     - Unknown word (Cull)          -- Pipeline.Cull_Mode := VK
Engine/neo-world-graphics-renderer.adb:54:23     - Unknown word (Mode)          -- Pipeline.Cull_Mode := VK_CULL
Engine/neo-world-graphics-renderer.adb:54:43     - Unknown word (CULL)          -- Mode := VK_CULL_MODE_BACK_BIT;
Engine/neo-world-graphics-renderer.adb:54:48     - Unknown word (MODE)          -- := VK_CULL_MODE_BACK_BIT;
Engine/neo-world-graphics-renderer.adb:54:53     - Unknown word (BACK)          -- := VK_CULL_MODE_BACK_BIT; -- VkCullModeF
Engine/neo-world-graphics-renderer.adb:54:78     - Unknown word (Cull)          -- BIT; -- VkCullModeFlagBits
Engine/neo-world-graphics-renderer.adb:54:82     - Unknown word (Mode)          -- -- VkCullModeFlagBits
Engine/neo-world-graphics-renderer.adb:54:86     - Unknown word (Flag)          -- -- VkCullModeFlagBits
Engine/neo-world-graphics-renderer.adb:54:90     - Unknown word (Bits)          -- -- VkCullModeFlagBits
Engine/neo-world-graphics-renderer.adb:550:27    - Unknown word (OUTSIDE)     -- if Area := OUTSIDE_AREA then View.Connected
Engine/neo-world-graphics-renderer.adb:550:35    - Unknown word (AREA)        -- if Area := OUTSIDE_AREA then View.Connected
Engine/neo-world-graphics-renderer.adb:550:60    - Unknown word (Areas)       -- then View.Connected_Areas := (others => True)
Engine/neo-world-graphics-renderer.adb:550:80    - Unknown word (True)        -- Areas := (others => True)
Engine/neo-world-graphics-renderer.adb:553:20    - Unknown word (Draw)        -- -- -- R_SortDrawSurfs -- A
Engine/neo-world-graphics-renderer.adb:553:24    - Unknown word (Surfs)       -- -- R_SortDrawSurfs -- A simple
Engine/neo-world-graphics-renderer.adb:553:46    - Unknown word (simple)      -- SortDrawSurfs -- A simple C qsort call. C++ sort
Engine/neo-world-graphics-renderer.adb:553:55    - Unknown word (qsort)       -- -- A simple C qsort call. C++ sort would
Engine/neo-world-graphics-renderer.adb:553:61    - Unknown word (call)        -- -- A simple C qsort call. C++ sort would have
Engine/neo-world-graphics-renderer.adb:553:76    - Unknown word (would)       -- qsort call. C++ sort would have been faster thanks
Engine/neo-world-graphics-renderer.adb:553:87    - Unknown word (been)        -- C++ sort would have been faster thanks to inlining
Engine/neo-world-graphics-renderer.adb:553:92    - Unknown word (faster)      -- sort would have been faster thanks to inlining.
Engine/neo-world-graphics-renderer.adb:553:99    - Unknown word (thanks)      -- would have been faster thanks to inlining.
Engine/neo-world-graphics-renderer.adb:555:19    - Unknown word (Draw)        -- -- -- R_AddDrawViewCmd
Engine/neo-world-graphics-renderer.adb:55:54     - Unknown word (COUNTER)       -- := VK_FRONT_FACE_COUNTER_CLOCKWISE; -- VkFrontFace
Engine/neo-world-graphics-renderer.adb:55:62     - Unknown word (CLOCKWISE)     -- VK_FRONT_FACE_COUNTER_CLOCKWISE; -- VkFrontFace
Engine/neo-world-graphics-renderer.adb:560:15    - Unknown word (stencil)     -- -- -- Shadow stencil shading with prenumbra
Engine/neo-world-graphics-renderer.adb:560:23    - Unknown word (shading)     -- -- Shadow stencil shading with prenumbra: https
Engine/neo-world-graphics-renderer.adb:560:36    - Unknown word (prenumbra)   -- stencil shading with prenumbra: https://web.archive
Engine/neo-world-graphics-renderer.adb:561:26    - Unknown word (Renderer)    -- separate (Neo.Engine.Renderer) procedure Doom3 is
Engine/neo-world-graphics-renderer.adb:561:46    - Unknown word (Doom)        -- Renderer) procedure Doom3 is
Engine/neo-world-graphics-renderer.adb:564:10    - Unknown word (Prepare)     -- -- -- Prepare_Transform --
Engine/neo-world-graphics-renderer.adb:567:16    - Unknown word (Prepare)     -- -- function Prepare_Transform (Transform
Engine/neo-world-graphics-renderer.adb:568:36    - Unknown word (MATRIX)      -- : Matrix_4D := ZERO_MATRIX_4D;
Engine/neo-world-graphics-renderer.adb:56:22     - Unknown word (Mirror)        -- Pipeline.Has_Mirror_View := False;
Engine/neo-world-graphics-renderer.adb:56:40     - Unknown word (False)         -- Has_Mirror_View := False;
Engine/neo-world-graphics-renderer.adb:575:103   - Unknown word (offsets)     -- and scales which make offsets > 1
Engine/neo-world-graphics-renderer.adb:575:14    - Unknown word (Keep)        -- -- -- Keep scrolls from making
Engine/neo-world-graphics-renderer.adb:575:19    - Unknown word (scrolls)     -- -- -- Keep scrolls from making large values
Engine/neo-world-graphics-renderer.adb:575:32    - Unknown word (making)      -- - Keep scrolls from making large values, but handle
Engine/neo-world-graphics-renderer.adb:575:39    - Unknown word (large)       -- scrolls from making large values, but handle center
Engine/neo-world-graphics-renderer.adb:575:57    - Unknown word (handle)      -- making large values, but handle center rotations and
Engine/neo-world-graphics-renderer.adb:575:64    - Unknown word (center)      -- large values, but handle center rotations and scales
Engine/neo-world-graphics-renderer.adb:575:71    - Unknown word (rotations)   -- values, but handle center rotations and scales which make
Engine/neo-world-graphics-renderer.adb:575:85    - Unknown word (scales)      -- center rotations and scales which make offsets
Engine/neo-world-graphics-renderer.adb:575:92    - Unknown word (which)       -- rotations and scales which make offsets > 1
Engine/neo-world-graphics-renderer.adb:57:30     - Unknown word (Offset)        -- Pipeline.Has_Polygon_Offset := False;
Engine/neo-world-graphics-renderer.adb:57:40     - Unknown word (False)         -- Has_Polygon_Offset := False;
Engine/neo-world-graphics-renderer.adb:583:17    - Unknown word (Scissor)     -- -- -- Update_Scissor --
Engine/neo-world-graphics-renderer.adb:586:24    - Unknown word (Scissor)     -- procedure Update_Scissor (Scissor : Rectangle
Engine/neo-world-graphics-renderer.adb:586:43    - Unknown word (Rectangle)   -- Update_Scissor (Scissor : Rectangle) is
Engine/neo-world-graphics-renderer.adb:589:47    - Unknown word (Extent)      -- dSetScissor (Commands, 0, 1, (Extent => (Width  => View.Port
Engine/neo-world-graphics-renderer.adb:591:47    - Unknown word (Offset)      -- Offset => (X => View.scissor
Engine/neo-world-graphics-renderer.adb:591:68    - Unknown word (scissor)     -- Offset => (X => View.scissor.X2 + 1 - View.Scissor
Engine/neo-world-graphics-renderer.adb:592:68    - Unknown word (scissor)     -- Y => View.scissor.Y2 + 1 - View.Scissor
Engine/neo-world-graphics-renderer.adb:59:12     - Unknown word (Color)         -- -- Color blending
Engine/neo-world-graphics-renderer.adb:59:18     - Unknown word (blending)      -- -- Color blending
Engine/neo-world-graphics-renderer.adb:5:52      - Unknown word (Copyright)  -- Copyright (C) 2016 Justin Squirek
Engine/neo-world-graphics-renderer.adb:5:71      - Unknown word (Justin)     -- Copyright (C) 2016 Justin Squirek
Engine/neo-world-graphics-renderer.adb:5:78      - Unknown word (Squirek)    -- Copyright (C) 2016 Justin Squirek
Engine/neo-world-graphics-renderer.adb:601:45    - Unknown word (Surface)     -- Fog (Surfaces : Vector_Surface.Unsafe.Vector, fogPlanes
Engine/neo-world-graphics-renderer.adb:601:53    - Unknown word (Unsafe)      -- Surfaces : Vector_Surface.Unsafe.Vector, fogPlanes,
Engine/neo-world-graphics-renderer.adb:601:86    - Unknown word (inverse)     -- Vector, fogPlanes, &Light.inverseBaseLightProject) is
Engine/neo-world-graphics-renderer.adb:605:15    - Unknown word (Surface)     -- -- for Surface of Surfaces loop
Engine/neo-world-graphics-renderer.adb:606:29    - Unknown word (Surface)     -- Update_Scissor (Surface.Scissor);
Engine/neo-world-graphics-renderer.adb:60:18     - Unknown word (Color)         -- Pipeline.Color_Blend
Engine/neo-world-graphics-renderer.adb:60:24     - Unknown word (Blend)         -- Pipeline.Color_Blend := VK_BLEND
Engine/neo-world-graphics-renderer.adb:60:49     - Unknown word (BLEND)         -- Blend := VK_BLEND_OP_ADD; -- VkBlendOp
Engine/neo-world-graphics-renderer.adb:60:73     - Unknown word (Blend)         -- BLEND_OP_ADD; -- VkBlendOp
Engine/neo-world-graphics-renderer.adb:610:18    - Unknown word (inverse)     -- -- if inverseBaseLightProject = NULL
Engine/neo-world-graphics-renderer.adb:617:26    - Unknown word (inverse)     -- MVP.Set (inverseBaseLightProject * View
Engine/neo-world-graphics-renderer.adb:618:17    - Unknown word (inverse)     -- -- inverseBaseLightProject.InverseTransf
Engine/neo-world-graphics-renderer.adb:618:41    - Unknown word (Inverse)     -- inverseBaseLightProject.InverseTransformPlane( fogPlanes
Engine/neo-world-graphics-renderer.adb:618:91    - Unknown word (false)       -- fogPlanes, localFogPlanes, false );;
Engine/neo-world-graphics-renderer.adb:61:24     - Unknown word (Blend)         -- Pipeline.Alpha_Blend := VK_BLEND
Engine/neo-world-graphics-renderer.adb:61:49     - Unknown word (BLEND)         -- Blend := VK_BLEND_OP_ADD; -- VkBlendOp
Engine/neo-world-graphics-renderer.adb:61:73     - Unknown word (Blend)         -- BLEND_OP_ADD; -- VkBlendOp
Engine/neo-world-graphics-renderer.adb:620:15    - Unknown word (TEXGEN)      -- -- TEXGEN_0_S.Set (localFogPlanes
Engine/neo-world-graphics-renderer.adb:621:15    - Unknown word (TEXGEN)      -- -- TEXGEN_0_T.Set (localFogPlanes
Engine/neo-world-graphics-renderer.adb:622:15    - Unknown word (TEXGEN)      -- -- TEXGEN_1_T.Set (localFogPlanes
Engine/neo-world-graphics-renderer.adb:623:15    - Unknown word (TEXGEN)      -- -- TEXGEN_1_S.Set (localFogPlanes
Engine/neo-world-graphics-renderer.adb:624:36    - Unknown word (inverse)     -- Current_Space := (if inverseBaseLightProject = NULL
Engine/neo-world-graphics-renderer.adb:62:25     - Unknown word (Blend)         -- Pipeline.Source_Blend_Factor := VK_BLEND
Engine/neo-world-graphics-renderer.adb:62:49     - Unknown word (BLEND)         -- Blend_Factor := VK_BLEND_FACTOR_ZERO; -- VkBlendFactor
Engine/neo-world-graphics-renderer.adb:634:50    - Unknown word (color)       -- VkClearAttachment := (colorAttachment => 0,
Engine/neo-world-graphics-renderer.adb:635:70    - Unknown word (depth)       -- clearValue => (depthStencil => (depth
Engine/neo-world-graphics-renderer.adb:635:87    - Unknown word (depth)       -- > (depthStencil => (depth => 1.0,
Engine/neo-world-graphics-renderer.adb:636:87    - Unknown word (stencil)    -- stencil => 128,
Engine/neo-world-graphics-renderer.adb:638:13    - Unknown word (Rectange)   -- -- Clear_Rectange : aliased VkClearRect
Engine/neo-world-graphics-renderer.adb:63:49     - Unknown word (BLEND)         -- estination_Blend_Factor := VK_BLEND_FACTOR_ZERO; -- VkBlendFactor
Engine/neo-world-graphics-renderer.adb:640:48    - Unknown word (rect)       -- rect => (extent
Engine/neo-world-graphics-renderer.adb:640:67    - Unknown word (extent)     -- rect => (extent => Swapchain, others
Engine/neo-world-graphics-renderer.adb:640:77    - Unknown word (Swapchain)  -- => (extent => Swapchain, others => <>), others
Engine/neo-world-graphics-renderer.adb:641:23    - Unknown word (Color)      -- procedure Clear_Color (Value : Color_State
Engine/neo-world-graphics-renderer.adb:641:38    - Unknown word (Color)      -- Clear_Color (Value : Color_State) is
Engine/neo-world-graphics-renderer.adb:643:22    - Unknown word (aspect)     -- - Attachment.aspectMask := VK_IMAGE_ASPECT
Engine/neo-world-graphics-renderer.adb:643:45    - Unknown word (ASPECT)     -- aspectMask := VK_IMAGE_ASPECT_COLOR_BIT;
Engine/neo-world-graphics-renderer.adb:643:52    - Unknown word (COLOR)      -- aspectMask := VK_IMAGE_ASPECT_COLOR_BIT;
Engine/neo-world-graphics-renderer.adb:644:33    - Unknown word (color)      -- Attachment.clearValue.color := (Value.Red   / Byte
Engine/neo-world-graphics-renderer.adb:646:49    - Unknown word (Blue)       -- Value.Blue / Byte'Last,
Engine/neo-world-graphics-renderer.adb:648:85    - Unknown word (Rectange)   -- Unchecked_Access, 1, Clear_Rectange'Unchecked_Access);
Engine/neo-world-graphics-renderer.adb:64:18     - Unknown word (Color)         -- Pipeline.Color_Mask
Engine/neo-world-graphics-renderer.adb:64:49     - Unknown word (COLOR)         -- := VK_COLOR_COMPONENT_R_BIT
Engine/neo-world-graphics-renderer.adb:652:22    - Unknown word (aspect)     -- - Attachment.aspectMask := VK_IMAGE_ASPECT
Engine/neo-world-graphics-renderer.adb:652:45    - Unknown word (ASPECT)     -- aspectMask := VK_IMAGE_ASPECT_STENCIL_BIT;
Engine/neo-world-graphics-renderer.adb:653:85    - Unknown word (Rectange)   -- Unchecked_Access, 1, Clear_Rectange'Unchecked_Access);
Engine/neo-world-graphics-renderer.adb:657:22    - Unknown word (aspect)     -- - Attachment.aspectMask := VK_IMAGE_ASPECT
Engine/neo-world-graphics-renderer.adb:657:45    - Unknown word (ASPECT)     -- aspectMask := VK_IMAGE_ASPECT_DEPTH_BIT;
Engine/neo-world-graphics-renderer.adb:657:52    - Unknown word (DEPTH)      -- aspectMask := VK_IMAGE_ASPECT_DEPTH_BIT;
Engine/neo-world-graphics-renderer.adb:658:85    - Unknown word (Rectange)   -- Unchecked_Access, 1, Clear_Rectange'Unchecked_Access);
Engine/neo-world-graphics-renderer.adb:65:54     - Unknown word (COLOR)         -- or VK_COLOR_COMPONENT_G_BIT
Engine/neo-world-graphics-renderer.adb:663:18    - Unknown word (Offset)     -- -- GUI_Screen_Offset :  := ;
Engine/neo-world-graphics-renderer.adb:667:47    - Unknown word (VECTOR)     -- Vector_4D := ZERO_VECTOR_4D;
Engine/neo-world-graphics-renderer.adb:668:47    - Unknown word (VECTOR)     -- Vector_4D := ZERO_VECTOR_4D;
Engine/neo-world-graphics-renderer.adb:669:47    - Unknown word (MATRIX)     -- Matrix_4D := ZERO_MATRIX_4D;
Engine/neo-world-graphics-renderer.adb:66:54     - Unknown word (COLOR)         -- or VK_COLOR_COMPONENT_B_BIT
Engine/neo-world-graphics-renderer.adb:670:47    - Unknown word (MATRIX)     -- Matrix_4D := ZERO_MATRIX_4D;
Engine/neo-world-graphics-renderer.adb:671:16    - Unknown word (Textur)     -- -- Light_To_Textur : Matrix_4D   := ZERO
Engine/neo-world-graphics-renderer.adb:671:47    - Unknown word (MATRIX)     -- Matrix_4D := ZERO_MATRIX_4D;
Engine/neo-world-graphics-renderer.adb:672:7     - Unknown word (Joint)      -- -- Joint_Buffer : Vector
Engine/neo-world-graphics-renderer.adb:678:10    - Unknown word (Main)       -- -- -- Main loop
Engine/neo-world-graphics-renderer.adb:67:54     - Unknown word (COLOR)         -- or VK_COLOR_COMPONENT_A_BIT;
Engine/neo-world-graphics-renderer.adb:682:12    - Unknown word (Setup)      -- -- -- Setup --
Engine/neo-world-graphics-renderer.adb:685:12    - Unknown word (Wait)       -- -- -- Wait for the frontend to
Engine/neo-world-graphics-renderer.adb:685:37    - Unknown word (give)       -- for the frontend to give us something new
Engine/neo-world-graphics-renderer.adb:685:45    - Unknown word (something)  -- frontend to give us something new
Engine/neo-world-graphics-renderer.adb:686:12    - Unknown word (Clock)      -- -- - (Clock - Last_Time); Last_Time
Engine/neo-world-graphics-renderer.adb:686:45    - Unknown word (Clock)      -- Time); Last_Time := Clock;
Engine/neo-world-graphics-renderer.adb:687:79    - Unknown word (WAIT)       -- loop delay FRONTEND_WAIT_DURATION; end loop;
Engine/neo-world-graphics-renderer.adb:687:84    - Unknown word (DURATION)   -- delay FRONTEND_WAIT_DURATION; end loop;
Engine/neo-world-graphics-renderer.adb:690:53    - Unknown word (clipping)   -- viewport state and window clipping
Engine/neo-world-graphics-renderer.adb:696:35    - Unknown word (which)      -- Update dynamic scissor which may be smaller than
Engine/neo-world-graphics-renderer.adb:696:48    - Unknown word (smaller)    -- scissor which may be smaller than the viewport for
Engine/neo-world-graphics-renderer.adb:696:56    - Unknown word (than)       -- which may be smaller than the viewport for 10
Engine/neo-world-graphics-renderer.adb:699:12    - Unknown word (Uniforms)   -- -- -- Uniforms
Engine/neo-world-graphics-renderer.adb:69:12     - Unknown word (Depth)         -- -- Depth stencil
Engine/neo-world-graphics-renderer.adb:69:18     - Unknown word (stencil)       -- -- Depth stencil
Engine/neo-world-graphics-renderer.adb:700:9     - Unknown word (Overbright) -- -- Overbright.Set (lightScale
Engine/neo-world-graphics-renderer.adb:701:30    - Unknown word (Transpose)  -- Projection.Set (Transpose (View.Projection),
Engine/neo-world-graphics-renderer.adb:70:43     - Unknown word (STENCIL)       -- Front_Fail := VK_STENCIL_OP_KEEP; -- VkStencilOp
Engine/neo-world-graphics-renderer.adb:70:54     - Unknown word (KEEP)          -- := VK_STENCIL_OP_KEEP; -- VkStencilOp
Engine/neo-world-graphics-renderer.adb:70:66     - Unknown word (Stencil)       -- STENCIL_OP_KEEP; -- VkStencilOp
Engine/neo-world-graphics-renderer.adb:711:12    - Unknown word (Setup)      -- -- -- Setup pass
Engine/neo-world-graphics-renderer.adb:717:12    - Unknown word (Fill)       -- -- -- Fill the depth buffer
Engine/neo-world-graphics-renderer.adb:717:21    - Unknown word (depth)      -- -- -- Fill the depth buffer
Engine/neo-world-graphics-renderer.adb:718:40    - Unknown word (Perforated) -- Visibility in _Visibility..Perforated_Visibility loop
Engine/neo-world-graphics-renderer.adb:71:43     - Unknown word (STENCIL)       -- Front_Pass := VK_STENCIL_OP_KEEP; -- VkStencilOp
Engine/neo-world-graphics-renderer.adb:71:54     - Unknown word (KEEP)          -- := VK_STENCIL_OP_KEEP; -- VkStencilOp
Engine/neo-world-graphics-renderer.adb:71:66     - Unknown word (Stencil)       -- STENCIL_OP_KEEP; -- VkStencilOp
Engine/neo-world-graphics-renderer.adb:721:100   - Unknown word (ignored)      -- shadow surfaces are ignored for obvious reasons
Engine/neo-world-graphics-renderer.adb:721:112   - Unknown word (obvious)      -- surfaces are ignored for obvious reasons...
Engine/neo-world-graphics-renderer.adb:721:120   - Unknown word (reasons)      -- ignored for obvious reasons...
Engine/neo-world-graphics-renderer.adb:721:16    - Unknown word (Translucent) -- -- -- Translucent interactions fail the
Engine/neo-world-graphics-renderer.adb:721:28    - Unknown word (interactions) -- -- Translucent interactions fail the mirror clip
Engine/neo-world-graphics-renderer.adb:721:50    - Unknown word (mirror)       -- interactions fail the mirror clip plane operation
Engine/neo-world-graphics-renderer.adb:721:57    - Unknown word (clip)         -- interactions fail the mirror clip plane operation - shadow
Engine/neo-world-graphics-renderer.adb:721:87    - Unknown word (surfaces)     -- plane operation - shadow surfaces are ignored for obvious
Engine/neo-world-graphics-renderer.adb:722:34    - Unknown word (Interactions) -- for Surface of Light.Interactions (Direct_Interaction
Engine/neo-world-graphics-renderer.adb:722:55    - Unknown word (Interaction)  -- Interactions (Direct_Interaction) loop
Engine/neo-world-graphics-renderer.adb:724:35    - Unknown word (matrix)       -- -- Change the MVP matrix if needed
Engine/neo-world-graphics-renderer.adb:724:45    - Unknown word (needed)       -- Change the MVP matrix if needed
Engine/neo-world-graphics-renderer.adb:72:24     - Unknown word (Depth)         -- Pipeline.Front_Depth_Fail := VK_STENCIL
Engine/neo-world-graphics-renderer.adb:72:43     - Unknown word (STENCIL)       -- Front_Depth_Fail := VK_STENCIL_OP_KEEP; -- VkStencilOp
Engine/neo-world-graphics-renderer.adb:72:54     - Unknown word (KEEP)          -- Fail := VK_STENCIL_OP_KEEP; -- VkStencilOp
Engine/neo-world-graphics-renderer.adb:72:66     - Unknown word (Stencil)       -- STENCIL_OP_KEEP; -- VkStencilOp
Engine/neo-world-graphics-renderer.adb:730:29    - Unknown word (surface)      -- -- Draw the surface based on material blending
Engine/neo-world-graphics-renderer.adb:730:55    - Unknown word (blending)     -- surface based on material blending kind
Engine/neo-world-graphics-renderer.adb:730:64    - Unknown word (kind)         -- on material blending kind
Engine/neo-world-graphics-renderer.adb:733:22    - Unknown word (Solid)        -- - -- Solid geometry fast path
Engine/neo-world-graphics-renderer.adb:733:28    - Unknown word (geometry)     -- -- Solid geometry fast path
Engine/neo-world-graphics-renderer.adb:734:24    - Unknown word (Opaque)       -- when Opaque_Visibility =>
Engine/neo-world-graphics-renderer.adb:735:89    - Unknown word (WHITE)        -- then Clear_Color (COLOR_WHITE);
Engine/neo-world-graphics-renderer.adb:73:18     - Unknown word (Back)          -- Pipeline.Back_Fail := VK
Engine/neo-world-graphics-renderer.adb:73:43     - Unknown word (STENCIL)       -- Fail := VK_STENCIL_OP_KEEP; -- VkStencilOp
Engine/neo-world-graphics-renderer.adb:73:54     - Unknown word (KEEP)          -- := VK_STENCIL_OP_KEEP; -- VkStencilOp
Engine/neo-world-graphics-renderer.adb:73:66     - Unknown word (Stencil)       -- STENCIL_OP_KEEP; -- VkStencilOp
Engine/neo-world-graphics-renderer.adb:742:22    - Unknown word (Other)        -- - -- Other perforated or 1024
Engine/neo-world-graphics-renderer.adb:742:28    - Unknown word (perforated)   -- -- Other perforated or 1024 ** 2 surfaces
Engine/neo-world-graphics-renderer.adb:742:52    - Unknown word (surfaces)     -- perforated or 1024 ** 2 surfaces
Engine/neo-world-graphics-renderer.adb:745:44    - Unknown word (modulate)     -- 1024 ** 2s may down-modulate the color buffer, otherwise
Engine/neo-world-graphics-renderer.adb:745:57    - Unknown word (color)        -- may down-modulate the color buffer, otherwise black
Engine/neo-world-graphics-renderer.adb:745:71    - Unknown word (otherwise)    -- modulate the color buffer, otherwise black is drawn
Engine/neo-world-graphics-renderer.adb:745:90    - Unknown word (drawn)        -- otherwise black is drawn
Engine/neo-world-graphics-renderer.adb:747:63    - Unknown word (BLEND)        -- Blend_Factor := VK_BLEND_FACTOR_DST_COLOR;
Engine/neo-world-graphics-renderer.adb:749:82    - Unknown word (EQUAL)        -- VK_COMPARE_OP_LESS_OR_EQUAL;
Engine/neo-world-graphics-renderer.adb:74:18     - Unknown word (Back)          -- Pipeline.Back_Pass := VK
Engine/neo-world-graphics-renderer.adb:74:43     - Unknown word (STENCIL)       -- Pass := VK_STENCIL_OP_KEEP; -- VkStencilOp
Engine/neo-world-graphics-renderer.adb:74:54     - Unknown word (KEEP)          -- := VK_STENCIL_OP_KEEP; -- VkStencilOp
Engine/neo-world-graphics-renderer.adb:74:66     - Unknown word (Stencil)       -- STENCIL_OP_KEEP; -- VkStencilOp
Engine/neo-world-graphics-renderer.adb:753:42    - Unknown word (Offset)       -- - Set privatePolygonOffset if necessary and set
Engine/neo-world-graphics-renderer.adb:753:52    - Unknown word (necessary)    -- privatePolygonOffset if necessary and set the alpha modulate
Engine/neo-world-graphics-renderer.adb:753:80    - Unknown word (modulate)     -- necessary and set the alpha modulate
Engine/neo-world-graphics-renderer.adb:759:28    - Unknown word (texture)      -- -- Set texture matrix and texture generators
Engine/neo-world-graphics-renderer.adb:759:36    - Unknown word (matrix)       -- -- Set texture matrix and texture generators
Engine/neo-world-graphics-renderer.adb:759:47    - Unknown word (texture)      -- Set texture matrix and texture generators
Engine/neo-world-graphics-renderer.adb:759:55    - Unknown word (generators)   -- texture matrix and texture generators
Engine/neo-world-graphics-renderer.adb:75:18     - Unknown word (Back)          -- Pipeline.Back_Depth_Fail := VK
Engine/neo-world-graphics-renderer.adb:75:23     - Unknown word (Depth)         -- Pipeline.Back_Depth_Fail := VK_STENCIL
Engine/neo-world-graphics-renderer.adb:760:21    - Unknown word (shader)       -- -- shaderRegisters; RB_LoadShaderTextur
Engine/neo-world-graphics-renderer.adb:760:27    - Unknown word (Registers)    -- shaderRegisters; RB_LoadShaderTextureMatrix
Engine/neo-world-graphics-renderer.adb:760:45    - Unknown word (Shader)       -- shaderRegisters; RB_LoadShaderTextureMatrix (Surface
Engine/neo-world-graphics-renderer.adb:760:51    - Unknown word (Texture)      -- shaderRegisters; RB_LoadShaderTextureMatrix (Surface.shaderRegister
Engine/neo-world-graphics-renderer.adb:760:74    - Unknown word (shader)       -- dShaderTextureMatrix (Surface.shaderRegisters, &pStage.texture
Engine/neo-world-graphics-renderer.adb:760:80    - Unknown word (Registers)    -- rTextureMatrix (Surface.shaderRegisters, &pStage.texture);
Engine/neo-world-graphics-renderer.adb:760:99    - Unknown word (texture)      -- shaderRegisters, &pStage.texture);
Engine/neo-world-graphics-renderer.adb:762:28    - Unknown word (Mirror)       -- when Mirror_Cube_Map => Normal_Image
Engine/neo-world-graphics-renderer.adb:763:28    - Unknown word (Skybox)       -- when Skybox_Cube_Map => SkyBox_Pass
Engine/neo-world-graphics-renderer.adb:766:33    - Unknown word (surface)      -- -- Push the surface
Engine/neo-world-graphics-renderer.adb:769:24    - Unknown word (Cleanup)      -- -- Cleanup
Engine/neo-world-graphics-renderer.adb:76:54     - Unknown word (NEVER)         -- := VK_COMPARE_OP_NEVER; -- VkCompareOp
Engine/neo-world-graphics-renderer.adb:770:49    - Unknown word (Offset)       -- Surface.Material.Polygon_Offset /= 0.0 then
Engine/neo-world-graphics-renderer.adb:771:109   - Unknown word (offset)       -- GetPolygonOffset, 0.0, r_offsetFactor.GetFloat);
Engine/neo-world-graphics-renderer.adb:771:36    - Unknown word (Bias)         -- vkCmdSetDepthBias (Commands, r_offsetUnits
Engine/neo-world-graphics-renderer.adb:771:54    - Unknown word (offset)       -- kCmdSetDepthBias (Commands, r_offsetUnits.GetFloat * shader
Engine/neo-world-graphics-renderer.adb:771:77    - Unknown word (shader)       -- offsetUnits.GetFloat * shader.GetPolygonOffset, 0
Engine/neo-world-graphics-renderer.adb:779:34    - Unknown word (VECTOR)       -- Test_Alpha.Set (ZERO_VECTOR_4D);
Engine/neo-world-graphics-renderer.adb:77:18     - Unknown word (Depth)         -- Pipeline.Depth_Compare := VK_COMPARE
Engine/neo-world-graphics-renderer.adb:77:54     - Unknown word (NEVER)         -- := VK_COMPARE_OP_NEVER; -- VkCompareOp
Engine/neo-world-graphics-renderer.adb:796:14    - Unknown word (Skip)         -- -- -- Skip fog and blend lights
Engine/neo-world-graphics-renderer.adb:796:27    - Unknown word (blend)        -- -- Skip fog and blend lights
Engine/neo-world-graphics-renderer.adb:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-world-graphics-renderer.adb:800:21    - Unknown word (need)         -- -- -- Only need to clear the stencil
Engine/neo-world-graphics-renderer.adb:800:39    - Unknown word (stencil)      -- Only need to clear the stencil buffer and perform stencil
Engine/neo-world-graphics-renderer.adb:800:58    - Unknown word (perform)      -- the stencil buffer and perform stencil testing if there
Engine/neo-world-graphics-renderer.adb:800:66    - Unknown word (stencil)      -- stencil buffer and perform stencil testing if there are
Engine/neo-world-graphics-renderer.adb:800:85    - Unknown word (there)        -- perform stencil testing if there are shadows
Engine/neo-world-graphics-renderer.adb:800:95    - Unknown word (shadows)      -- testing if there are shadows
Engine/neo-world-graphics-renderer.adb:801:101   - Unknown word (Mirror)       -- = 0 and not View.Is_Mirror then
Engine/neo-world-graphics-renderer.adb:801:29    - Unknown word (Shadows)      -- if Light.Global_Shadows.Length /= 0 and Light
Engine/neo-world-graphics-renderer.adb:801:65    - Unknown word (Shadows)      -- = 0 and Light.Local_Shadows.Length /= 0 and not
Engine/neo-world-graphics-renderer.adb:803:63    - Unknown word (depth)        -- stencil select and set the depth bounds for the whole
Engine/neo-world-graphics-renderer.adb:803:69    - Unknown word (bounds)       -- select and set the depth bounds for the whole light
Engine/neo-world-graphics-renderer.adb:806:28    - Unknown word (Bounds)       -- vkCmdSetDepthBounds (Commands, Light.Scissor
Engine/neo-world-graphics-renderer.adb:809:50    - Unknown word (Inverse)      -- World_Space.MVP * Light.Inverse_Projection);
Engine/neo-world-graphics-renderer.adb:80:18     - Unknown word (Depth)         -- Pipeline.Depth_Write_Enable := False
Engine/neo-world-graphics-renderer.adb:80:40     - Unknown word (False)         -- Depth_Write_Enable := False;
Engine/neo-world-graphics-renderer.adb:815:50    - Unknown word (True)         -- Write_Enable := True;
Engine/neo-world-graphics-renderer.adb:816:72    - Unknown word (EQUAL)        -- VK_COMPARE_OP_LESS_OR_EQUAL;
Engine/neo-world-graphics-renderer.adb:817:64    - Unknown word (ALWAYS)       -- := VK_COMPARE_OP_ALWAYS;
Engine/neo-world-graphics-renderer.adb:81:18     - Unknown word (Depths)        -- Pipeline.Depths_Bounds_Test := False
Engine/neo-world-graphics-renderer.adb:81:25     - Unknown word (Bounds)        -- Pipeline.Depths_Bounds_Test := False;
Engine/neo-world-graphics-renderer.adb:81:40     - Unknown word (False)         -- Depths_Bounds_Test := False;
Engine/neo-world-graphics-renderer.adb:821:24    - Unknown word (Cull)         -- Pipeline.Cull :
Engine/neo-world-graphics-renderer.adb:821:53    - Unknown word (CULL)         -- := VK_CULL_MODE_NONE;
Engine/neo-world-graphics-renderer.adb:821:58    - Unknown word (MODE)         -- := VK_CULL_MODE_NONE;
Engine/neo-world-graphics-renderer.adb:821:63    - Unknown word (NONE)         -- := VK_CULL_MODE_NONE;
Engine/neo-world-graphics-renderer.adb:822:24    - Unknown word (Back)         -- Pipeline.Back_Stencil_Operation :
Engine/neo-world-graphics-renderer.adb:822:75    - Unknown word (BACK)         -- qglStencilOpSeparate( GL_BACK, GL_KEEP, GL_ZERO, GL
Engine/neo-world-graphics-renderer.adb:824:27    - Unknown word (deformed)     -- -- Draw the deformed Zero_One_Cube_Model
Engine/neo-world-graphics-renderer.adb:824:65    - Unknown word (frustum)      -- Cube_Model into the frustum to exactly cover the
Engine/neo-world-graphics-renderer.adb:824:76    - Unknown word (exactly)      -- into the frustum to exactly cover the light volume
Engine/neo-world-graphics-renderer.adb:824:84    - Unknown word (cover)        -- the frustum to exactly cover the light volume
Engine/neo-world-graphics-renderer.adb:827:18    - Unknown word (Cleanup)      -- -- -- Cleanup
Engine/neo-world-graphics-renderer.adb:828:28    - Unknown word (Bounds)       -- vkCmdSetDepthBounds (Commands, 0.0, 0.0
Engine/neo-world-graphics-renderer.adb:82:22     - Unknown word (Back)          -- Pipeline.Has_Back_Stencil := False;
Engine/neo-world-graphics-renderer.adb:82:40     - Unknown word (False)         -- Has_Back_Stencil := False;
Engine/neo-world-graphics-renderer.adb:833:26    - Unknown word (depth)        -- -- Set the depth bounds for the whole
Engine/neo-world-graphics-renderer.adb:833:32    - Unknown word (bounds)       -- -- Set the depth bounds for the whole light
Engine/neo-world-graphics-renderer.adb:839:18    - Unknown word (Always)       -- -- -- Always clear whole Cull tiles
Engine/neo-world-graphics-renderer.adb:839:42    - Unknown word (tiles)        -- Always clear whole Cull tiles
Engine/neo-world-graphics-renderer.adb:843:23    - Unknown word (sure)         -- -- Make sure stencil mask passes
Engine/neo-world-graphics-renderer.adb:843:41    - Unknown word (passes)       -- Make sure stencil mask passes for the clear
Engine/neo-world-graphics-renderer.adb:848:17    - Unknown word (Interaction)  -- -- for Interaction of Light.Interactions
Engine/neo-world-graphics-renderer.adb:848:38    - Unknown word (Interactions) -- Interaction of Light.Interactions loop
Engine/neo-world-graphics-renderer.adb:85:38     - Unknown word (Projection)    -- Projection_Matrix.Set (Frame_Projection);
Engine/neo-world-graphics-renderer.adb:85:9      - Unknown word (Projection)    -- Projection_Matrix.Set (Frame_Projection
Engine/neo-world-graphics-renderer.adb:861:25    - Unknown word (Texture)      -- Clear_Texture (0);
Engine/neo-world-graphics-renderer.adb:863:32    - Unknown word (Bias)         -- vkCmdSetDepthBias (Commands, -shadowPolygonOffs
Engine/neo-world-graphics-renderer.adb:864:105   - Unknown word (color)        -- buffer ignoring the color or depth buffer
Engine/neo-world-graphics-renderer.adb:864:50    - Unknown word (True)         -- Depth_Write_Enable := True; -- Only write to the
Engine/neo-world-graphics-renderer.adb:864:92    - Unknown word (ignoring)     -- to the stencil buffer ignoring the color or depth buffer
Engine/neo-world-graphics-renderer.adb:866:72    - Unknown word (EQUAL)        -- VK_COMPARE_OP_LESS_OR_EQUAL;
Engine/neo-world-graphics-renderer.adb:867:102   - Unknown word (draw)         -- Stencil reduces two draw calls to only one
Engine/neo-world-graphics-renderer.adb:867:107   - Unknown word (calls)        -- Stencil reduces two draw calls to only one
Engine/neo-world-graphics-renderer.adb:867:53    - Unknown word (CULL)         -- := VK_CULL_MODE_NONE; -- Two Sided
Engine/neo-world-graphics-renderer.adb:867:58    - Unknown word (MODE)         -- := VK_CULL_MODE_NONE; -- Two Sided Stencil
Engine/neo-world-graphics-renderer.adb:867:63    - Unknown word (NONE)         -- := VK_CULL_MODE_NONE; -- Two Sided Stencil
Engine/neo-world-graphics-renderer.adb:867:76    - Unknown word (Sided)        -- CULL_MODE_NONE; -- Two Sided Stencil reduces two
Engine/neo-world-graphics-renderer.adb:867:90    - Unknown word (reduces)      -- - Two Sided Stencil reduces two draw calls to only
Engine/neo-world-graphics-renderer.adb:870:64    - Unknown word (INCREMENT)    -- := VK_STENCIL_OP_INCREMENT_AND_CLAMP;
Engine/neo-world-graphics-renderer.adb:870:78    - Unknown word (CLAMP)        -- STENCIL_OP_INCREMENT_AND_CLAMP;
Engine/neo-world-graphics-renderer.adb:874:34    - Unknown word (chain)        -- -- Process the chain of shadows with the
Engine/neo-world-graphics-renderer.adb:874:43    - Unknown word (shadows)      -- Process the chain of shadows with the current rendering
Engine/neo-world-graphics-renderer.adb:874:68    - Unknown word (rendering)    -- shadows with the current rendering state
Engine/neo-world-graphics-renderer.adb:87:41     - Unknown word (MATRIX)        -- Matrix.Set (IDENTITY_MATRIX_4D);
Engine/neo-world-graphics-renderer.adb:881:143   - Unknown word (infinity)     -- shadow volume end cap to infinity
Engine/neo-world-graphics-renderer.adb:881:78    - Unknown word (allow)        -- local light position to allow the vertex program to
Engine/neo-world-graphics-renderer.adb:881:95    - Unknown word (program)      -- to allow the vertex program to project the shadow
Engine/neo-world-graphics-renderer.adb:888:32    - Unknown word (plus)         -- -- Preload plus Z-pass
Engine/neo-world-graphics-renderer.adb:889:103   - Unknown word (ZFAIL)        -- KEEP | GLS_STENCIL_OP_ZFAIL_DECR | GLS_STENCIL_OP
Engine/neo-world-graphics-renderer.adb:889:109   - Unknown word (DECR)         -- GLS_STENCIL_OP_ZFAIL_DECR | GLS_STENCIL_OP_PASS
Engine/neo-world-graphics-renderer.adb:889:136   - Unknown word (DECR)         -- GLS_STENCIL_OP_PASS_DECR );
Engine/neo-world-graphics-renderer.adb:890:102   - Unknown word (ZFAIL)        -- KEEP | GLS_STENCIL_OP_ZFAIL_INCR | GLS_STENCIL_OP
Engine/neo-world-graphics-renderer.adb:890:108   - Unknown word (INCR)         -- GLS_STENCIL_OP_ZFAIL_INCR | GLS_STENCIL_OP_PASS
Engine/neo-world-graphics-renderer.adb:890:135   - Unknown word (INCR)         -- GLS_STENCIL_OP_PASS_INCR );
Engine/neo-world-graphics-renderer.adb:890:54    - Unknown word (BACK)         -- SeparateStencil( STENCIL_FACE_BACK, GLS_STENCIL_OP_FAIL
Engine/neo-world-graphics-renderer.adb:891:104   - Unknown word (Indexes)      -- GetBool ? 3 : Surface.numIndexes, GL_INDEX_TYPE,
Engine/neo-world-graphics-renderer.adb:891:28    - Unknown word (Elements)     -- qglDrawElementsBaseVertex( GL_TRIANGLES
Engine/neo-world-graphics-renderer.adb:891:51    - Unknown word (TRIANGLES)    -- qglDrawElementsBaseVertex( GL_TRIANGLES, r_singleTriangle.GetBool
Engine/neo-world-graphics-renderer.adb:891:64    - Unknown word (single)       -- tsBaseVertex( GL_TRIANGLES, r_singleTriangle.GetBool ? 3
Engine/neo-world-graphics-renderer.adb:891:70    - Unknown word (Triangle)     -- GL_TRIANGLES, r_singleTriangle.GetBool ? 3 : Surface
Engine/neo-world-graphics-renderer.adb:892:106   - Unknown word (OFFSET)       -- SHIFT ) & VERTCACHE_OFFSET_MASK / sizeof( idShadowVertSk
Engine/neo-world-graphics-renderer.adb:892:136   - Unknown word (Vert)         -- MASK / sizeof( idShadowVertSkinned ));
Engine/neo-world-graphics-renderer.adb:892:140   - Unknown word (Skinned)      -- sizeof( idShadowVertSkinned ));
Engine/neo-world-graphics-renderer.adb:892:59    - Unknown word (Handle)       -- indexOffset, (int)( vbHandle >> VERTCACHE_OFFSET
Engine/neo-world-graphics-renderer.adb:892:69    - Unknown word (VERTCACHE)    -- (int)( vbHandle >> VERTCACHE_OFFSET_SHIFT ) & VERTCACHE
Engine/neo-world-graphics-renderer.adb:892:79    - Unknown word (OFFSET)       -- vbHandle >> VERTCACHE_OFFSET_SHIFT ) & VERTCACHE
Engine/neo-world-graphics-renderer.adb:892:86    - Unknown word (SHIFT)        -- >> VERTCACHE_OFFSET_SHIFT ) & VERTCACHE_OFFSET
Engine/neo-world-graphics-renderer.adb:892:96    - Unknown word (VERTCACHE)    -- VERTCACHE_OFFSET_SHIFT ) & VERTCACHE_OFFSET_MASK / sizeof
Engine/neo-world-graphics-renderer.adb:894:31    - Unknown word (again)        -- -- Render again with Z-pass
Engine/neo-world-graphics-renderer.adb:895:74    - Unknown word (INCR)         -- GL_KEEP, GL_KEEP, GL_INCR);
Engine/neo-world-graphics-renderer.adb:896:46    - Unknown word (BACK)         -- qglStencilOpSeparate( GL_BACK, GL_KEEP, GL_KEEP, GL
Engine/neo-world-graphics-renderer.adb:896:73    - Unknown word (DECR)         -- GL_KEEP, GL_KEEP, GL_DECR);
Engine/neo-world-graphics-renderer.adb:897:104   - Unknown word (Indexes)      -- GetBool ? 3 : Surface.numIndexes, GL_INDEX_TYPE,
Engine/neo-world-graphics-renderer.adb:897:28    - Unknown word (Elements)     -- qglDrawElementsBaseVertex( GL_TRIANGLES
Engine/neo-world-graphics-renderer.adb:897:51    - Unknown word (TRIANGLES)    -- qglDrawElementsBaseVertex( GL_TRIANGLES, r_singleTriangle.GetBool
Engine/neo-world-graphics-renderer.adb:897:64    - Unknown word (single)       -- tsBaseVertex( GL_TRIANGLES, r_singleTriangle.GetBool ? 3
Engine/neo-world-graphics-renderer.adb:897:70    - Unknown word (Triangle)     -- GL_TRIANGLES, r_singleTriangle.GetBool ? 3 : Surface
Engine/neo-world-graphics-renderer.adb:898:106   - Unknown word (OFFSET)       -- SHIFT ) & VERTCACHE_OFFSET_MASK / sizeof ( idShadowVert
Engine/neo-world-graphics-renderer.adb:898:137   - Unknown word (Vert)         -- MASK / sizeof ( idShadowVert ));
Engine/neo-world-graphics-renderer.adb:898:59    - Unknown word (Handle)       -- indexOffset, (int)( vbHandle >> VERTCACHE_OFFSET
Engine/neo-world-graphics-renderer.adb:898:69    - Unknown word (VERTCACHE)    -- (int)( vbHandle >> VERTCACHE_OFFSET_SHIFT ) & VERTCACHE
Engine/neo-world-graphics-renderer.adb:898:79    - Unknown word (OFFSET)       -- vbHandle >> VERTCACHE_OFFSET_SHIFT ) & VERTCACHE
Engine/neo-world-graphics-renderer.adb:898:86    - Unknown word (SHIFT)        -- >> VERTCACHE_OFFSET_SHIFT ) & VERTCACHE_OFFSET
Engine/neo-world-graphics-renderer.adb:898:96    - Unknown word (VERTCACHE)    -- VERTCACHE_OFFSET_SHIFT ) & VERTCACHE_OFFSET_MASK / sizeof
Engine/neo-world-graphics-renderer.adb:89:12     - Unknown word (Actually)      -- -- Actually draw
Engine/neo-world-graphics-renderer.adb:89:21     - Unknown word (draw)          -- -- Actually draw
Engine/neo-world-graphics-renderer.adb:8:30      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-world-graphics-renderer.adb:8:70      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-world-graphics-renderer.adb:8:87      - Unknown word (later)        -- at your option) any later version.
Engine/neo-world-graphics-renderer.adb:901:22    - Unknown word (Cleanup)      -- - -- Cleanup the shadow specific
Engine/neo-world-graphics-renderer.adb:901:50    - Unknown word (rendering)    -- the shadow specific rendering state and reset depth
Engine/neo-world-graphics-renderer.adb:901:82    - Unknown word (bounds)       -- state and reset depth bounds
Engine/neo-world-graphics-renderer.adb:902:41    - Unknown word (SIDED)        -- Pipeline. := CT_FRONT_SIDED; -- Two Sided Stencil
Engine/neo-world-graphics-renderer.adb:902:55    - Unknown word (Sided)        -- FRONT_SIDED; -- Two Sided Stencil reduces two
Engine/neo-world-graphics-renderer.adb:902:69    - Unknown word (reduces)      -- - Two Sided Stencil reduces two draw calls to only
Engine/neo-world-graphics-renderer.adb:902:81    - Unknown word (draw)         -- Stencil reduces two draw calls to only one
Engine/neo-world-graphics-renderer.adb:902:86    - Unknown word (calls)        -- Stencil reduces two draw calls to only one
Engine/neo-world-graphics-renderer.adb:90:40     - Unknown word (True)          -- State, Frame, (others => True));
Engine/neo-world-graphics-renderer.adb:90:9      - Unknown word (Draw)          -- Draw (State, Frame, (others
Engine/neo-world-graphics-renderer.adb:914:23    - Unknown word (Interaction)  -- for Interaction of Light.Interactions
Engine/neo-world-graphics-renderer.adb:914:44    - Unknown word (Interactions) -- Interaction of Light.Interactions loop if Light.Interactions
Engine/neo-world-graphics-renderer.adb:914:71    - Unknown word (Interactions) -- Interactions loop if Light.Interactions (Kind).Length > 0 then
Engine/neo-world-graphics-renderer.adb:917:24    - Unknown word (Interaction)  -- if Interaction.Kind = Translucent_Interactio
Engine/neo-world-graphics-renderer.adb:917:43    - Unknown word (Translucent)  -- if Interaction.Kind = Translucent_Interaction then
Engine/neo-world-graphics-renderer.adb:918:71    - Unknown word (EQUAL)        -- VK_COMPARE_OP_LESS_OR_EQUAL;
Engine/neo-world-graphics-renderer.adb:919:104   - Unknown word (surfaces)     -- test on translucent surfaces as they don't write
Engine/neo-world-graphics-renderer.adb:919:116   - Unknown word (they)         -- translucent surfaces as they don't write depth
Engine/neo-world-graphics-renderer.adb:919:77    - Unknown word (bounds)       -- - Disable the depth bounds test on translucent
Engine/neo-world-graphics-renderer.adb:919:92    - Unknown word (translucent)  -- depth bounds test on translucent surfaces as they don
Engine/neo-world-graphics-renderer.adb:920:36    - Unknown word (false)        -- Pipeline. := false;
Engine/neo-world-graphics-renderer.adb:921:36    - Unknown word (false)        -- Pipeline. := false;
Engine/neo-world-graphics-renderer.adb:923:63    - Unknown word (EQUAL)        -- Compare := VK_COMPARE_OP_EQUAL;
Engine/neo-world-graphics-renderer.adb:924:49    - Unknown word (perform)      -- Pipeline.Test_Stencil := performStencilTest;
Engine/neo-world-graphics-renderer.adb:931:51    - Unknown word (REFSTENCIL)   -- := GLS_STENCIL_MAKE_REFSTENCIL_SHADOW_TEST_VALUE;
Engine/neo-world-graphics-renderer.adb:932:51    - Unknown word (MASKSTENCIL)  -- := GLS_STENCIL_MAKE_MASKSTENCIL_SHADOW_MASK_VALUE;
Engine/neo-world-graphics-renderer.adb:936:27    - Unknown word (Texture)      -- Light_Texture := Prepare_Map_Transform
Engine/neo-world-graphics-renderer.adb:936:38    - Unknown word (Prepare)      -- Light_Texture := Prepare_Map_Transform (Light
Engine/neo-world-graphics-renderer.adb:937:49    - Unknown word (Texture)      -- Matrix_4D_Z (Light_Texture, (0.0, 0.0, 1.0, 0.
Engine/neo-world-graphics-renderer.adb:938:49    - Unknown word (Texture)      -- Matrix_4D_W (Light_Texture, (0.0, 0.0, 1.0, 0.
Engine/neo-world-graphics-renderer.adb:939:21    - Unknown word (Fall)         -- -- Fall_Off_Image.Set (INTERACTION
Engine/neo-world-graphics-renderer.adb:939:43    - Unknown word (INTERACTION)  -- Fall_Off_Image.Set (INTERACTION_TEXUNIT_FALLOFF);
Engine/neo-world-graphics-renderer.adb:939:55    - Unknown word (TEXUNIT)      -- Image.Set (INTERACTION_TEXUNIT_FALLOFF);
Engine/neo-world-graphics-renderer.adb:939:63    - Unknown word (FALLOFF)      -- INTERACTION_TEXUNIT_FALLOFF);
Engine/neo-world-graphics-renderer.adb:940:58    - Unknown word (texture)      -- Set (Light.Material.texture); -- light projection
Engine/neo-world-graphics-renderer.adb:940:88    - Unknown word (texture)      -- -- light projection texture
Engine/neo-world-graphics-renderer.adb:944:101   - Unknown word (need)         -- each light stage may need a different lightTextureMatri
Engine/neo-world-graphics-renderer.adb:944:108   - Unknown word (different)    -- light stage may need a different lightTextureMatrix baked
Engine/neo-world-graphics-renderer.adb:944:137   - Unknown word (baked)        -- different lightTextureMatrix baked in
Engine/neo-world-graphics-renderer.adb:944:24    - Unknown word (Even)         -- -- Even if the space does not
Engine/neo-world-graphics-renderer.adb:944:42    - Unknown word (does)         -- - Even if the space does not change between light
Engine/neo-world-graphics-renderer.adb:944:58    - Unknown word (between)      -- space does not change between light stages, each light
Engine/neo-world-graphics-renderer.adb:944:72    - Unknown word (stages)       -- change between light stages, each light stage may
Engine/neo-world-graphics-renderer.adb:944:80    - Unknown word (each)         -- between light stages, each light stage may need
Engine/neo-world-graphics-renderer.adb:947:32    - Unknown word (surfaces)     -- -- For all surfaces on this light list,
Engine/neo-world-graphics-renderer.adb:947:73    - Unknown word (interaction)  -- light list, generate an interaction for this light stage
Engine/neo-world-graphics-renderer.adb:950:44    - Unknown word (program)      -- - Select the render program
Engine/neo-world-graphics-renderer.adb:953:88    - Unknown word (vectors)      -- and light projection vectors if needed
Engine/neo-world-graphics-renderer.adb:953:99    - Unknown word (needed)       -- projection vectors if needed
Engine/neo-world-graphics-renderer.adb:957:104   - Unknown word (hack)         -- rendered with a depth hack
Engine/neo-world-graphics-renderer.adb:957:28    - Unknown word (turn)         -- -- turn off the light depth
Engine/neo-world-graphics-renderer.adb:957:82    - Unknown word (rendered)     -- test if this model is rendered with a depth hack
Engine/neo-world-graphics-renderer.adb:958:31    - Unknown word (Bound)        -- if Do_Bound_Light_Depth then
Engine/neo-world-graphics-renderer.adb:959:123   - Unknown word (Disabled)     -- and lightDepthBoundsDisabled then
Engine/neo-world-graphics-renderer.adb:959:48    - Unknown word (weapon)       -- if not Surface.Space.weaponDepthHack and Surface
Engine/neo-world-graphics-renderer.adb:959:59    - Unknown word (Hack)         -- Surface.Space.weaponDepthHack and Surface.Space.modelDepthH
Engine/neo-world-graphics-renderer.adb:959:92    - Unknown word (Hack)         -- Surface.Space.modelDepthHack = 0.0 and lightDepthBoundsDis
Engine/neo-world-graphics-renderer.adb:962:45    - Unknown word (Disabled)     -- lightDepthBoundsDisabled := false;
Engine/neo-world-graphics-renderer.adb:962:57    - Unknown word (false)        -- lightDepthBoundsDisabled := false;
Engine/neo-world-graphics-renderer.adb:963:53    - Unknown word (Disabled)     -- not lightDepthBoundsDisabled then
Engine/neo-world-graphics-renderer.adb:965:45    - Unknown word (Disabled)     -- lightDepthBoundsDisabled := true;
Engine/neo-world-graphics-renderer.adb:965:57    - Unknown word (true)         -- lightDepthBoundsDisabled := true;
Engine/neo-world-graphics-renderer.adb:969:28    - Unknown word (tranform)     -- -- tranform the light/view origin
Engine/neo-world-graphics-renderer.adb:975:28    - Unknown word (Multiply)     -- -- Multiply the local light projection
Engine/neo-world-graphics-renderer.adb:976:42    - Unknown word (Final)        -- Set_Matrix_4D_X (Final, Get_Matrix_4D_X (Light
Engine/neo-world-graphics-renderer.adb:977:42    - Unknown word (Final)        -- Set_Matrix_4D_Y (Final, Get_Matrix_4D_Y (Light
Engine/neo-world-graphics-renderer.adb:978:42    - Unknown word (Final)        -- Set_Matrix_4D_Z (Final, (others => 0.0));
Engine/neo-world-graphics-renderer.adb:979:42    - Unknown word (Final)        -- Set_Matrix_4D_W (Final, Get_Matrix_4D_Z (Light
Engine/neo-world-graphics-renderer.adb:980:25    - Unknown word (Final)        -- Final := Light_Texture * Final
Engine/neo-world-graphics-renderer.adb:985:129   - Unknown word (final)        -- Light_Projection(0)(2) = final(2*4+0); Light_Projection
Engine/neo-world-graphics-renderer.adb:985:168   - Unknown word (final)        -- Light_Projection(0)(3) = final(3*4+0);
Engine/neo-world-graphics-renderer.adb:985:51    - Unknown word (final)        -- Projection(0)(0) := final(0*4+0); Light_Projection
Engine/neo-world-graphics-renderer.adb:985:90    - Unknown word (final)        -- Light_Projection(0)(1) = final(1*4+0); Light_Projection
Engine/neo-world-graphics-renderer.adb:986:51    - Unknown word (final)        -- Projection(1)(0) := final(0*4+1); Light_Projection
Engine/neo-world-graphics-renderer.adb:988:33    - Unknown word (uniforms)     -- -- Load uniforms Set the light projection
Engine/neo-world-graphics-renderer.adb:990:31    - Unknown word (Falloff)      -- Light_Falloff.Set (Light_Projection
Engine/neo-world-graphics-renderer.adb:990:71    - Unknown word (LIGHTFALLOFF) -- Light_Projection); -- LIGHTFALLOFF_S
Engine/neo-world-graphics-renderer.adb:993:49    - Unknown word (Prepare)      -- Image_Transform.Set (Prepare_Map_Transform (Surface
Engine/neo-world-graphics-renderer.adb:997:25    - Unknown word (Irradiance)   -- Irradiance_Image.Set (Surface
Engine/neo-world-graphics-renderer.adb:997:66    - Unknown word (Irradiance)   -- (Surface.Material.Irradiance);
Engine/neo-world-graphics-renderer.adb:998:25    - Unknown word (Prefilter)    -- Prefilter_Image.Set (Surface
Engine/neo-world-graphics-renderer.adb:998:66    - Unknown word (Prefilter)    -- (Surface.Material.Prefilter);
Engine/neo-world-graphics-renderer.adb:999:25    - Unknown word (Specular)     -- Specular_Image.Set (Surface
Engine/neo-world-graphics-renderer.adb:999:66    - Unknown word (Specular)     -- (Surface.Material.Specular);
Engine/neo-world-graphics.adb:1008:42   - Unknown word (loaded)      -- image buffer to the loaded image
Engine/neo-world-graphics.adb:1015:21   - Unknown word (texture)     -- -- Free the texture in local memory
Engine/neo-world-graphics.adb:101:38    - Unknown word (Uniforms)    -- Index := Int (Buffered_Uniforms.Length);
Engine/neo-world-graphics.adb:101:47    - Unknown word (Length)      -- Int (Buffered_Uniforms.Length);
Engine/neo-world-graphics.adb:1024:16   - Unknown word (Missing)     -- Info ("Missing material " & Path);
Engine/neo-world-graphics.adb:1030:10   - Unknown word (Sanity)      -- -- Sanity check
Engine/neo-world-graphics.adb:1032:20   - Unknown word (Attempted)   -- -- Line ("Attempted to rebuffer material
Engine/neo-world-graphics.adb:1037:41   - Unknown word (Irradiance)  -- To_Str_16 (Material.Irradiance));
Engine/neo-world-graphics.adb:1038:41   - Unknown word (Specular)    -- To_Str_16 (Material.Specular));
Engine/neo-world-graphics.adb:1043:68   - Unknown word (junk)        -- Material); -- Set it to junk since we only care if
Engine/neo-world-graphics.adb:1043:73   - Unknown word (since)       -- ; -- Set it to junk since we only care if it exists
Engine/neo-world-graphics.adb:1043:87   - Unknown word (care)        -- to junk since we only care if it exists
Engine/neo-world-graphics.adb:1043:98   - Unknown word (exists)      -- since we only care if it exists
Engine/neo-world-graphics.adb:1046:106  - Unknown word (that)        -- to buffered images so that they may be freed
Engine/neo-world-graphics.adb:1046:111  - Unknown word (they)        -- buffered images so that they may be freed
Engine/neo-world-graphics.adb:1046:123  - Unknown word (freed)       -- so that they may be freed
Engine/neo-world-graphics.adb:1046:52   - Unknown word (decrement)   -- the "buffered" map and decrement all of the references
Engine/neo-world-graphics.adb:1048:9    - Unknown word (Texture)     -- use Texture_Name_Str;
Engine/neo-world-graphics.adb:1053:15   - Unknown word (sure)        -- -- Make sure we can't unbuffer a
Engine/neo-world-graphics.adb:1053:68   - Unknown word (surfaces)    -- material until all buffered surfaces using it get unbuffered
Engine/neo-world-graphics.adb:1053:77   - Unknown word (using)       -- all buffered surfaces using it get unbuffered first
Engine/neo-world-graphics.adb:1054:57   - Unknown word (Warn)        -- References > 0 then Warn ("Unbuffering referenced
Engine/neo-world-graphics.adb:1054:76   - Unknown word (referenced)  -- then Warn ("Unbuffering referenced material?"); end if
Engine/neo-world-graphics.adb:1056:10   - Unknown word (Decrement)   -- -- Decrement the image's usage count
Engine/neo-world-graphics.adb:1058:19   - Unknown word (Irradiance)  -- if Material.Irradiance.Current_Length = 0 then
Engine/neo-world-graphics.adb:1059:19   - Unknown word (Specular)    -- if Material.Specular.Current_Length =
Engine/neo-world-graphics.adb:105:19    - Unknown word (Flags)       -- -- Samplers and Flags --
Engine/neo-world-graphics.adb:105:6     - Unknown word (Samplers)    -- -- Samplers and Flags --
Engine/neo-world-graphics.adb:1061:19   - Unknown word (Metallic)    -- if Material.Metallic.Current_Length =
Engine/neo-world-graphics.adb:1061:90   - Unknown word (Metallic)    -- Reference (S (Material.Metallic) & Hash); end if;
Engine/neo-world-graphics.adb:1062:19   - Unknown word (Roughness)   -- if Material.Roughness.Current_Length = 0
Engine/neo-world-graphics.adb:1062:90   - Unknown word (Roughness)   -- Reference (S (Material.Roughness) & Hash); end if;
Engine/neo-world-graphics.adb:1082:20   - Unknown word (surface)     -- -- Reset the surface size when it is not
Engine/neo-world-graphics.adb:1082:50   - Unknown word (since)       -- size when it is not 0 since it could be a minimize
Engine/neo-world-graphics.adb:1082:59   - Unknown word (could)       -- it is not 0 since it could be a minimize event
Engine/neo-world-graphics.adb:1082:70   - Unknown word (minimize)    -- since it could be a minimize event
Engine/neo-world-graphics.adb:1083:22   - Unknown word (Physical)    -- vkAssert (vkGetPhysicalDeviceSurfaceCapabilitiesKHR
Engine/neo-world-graphics.adb:1083:43   - Unknown word (Capabilities) -- vkGetPhysicalDeviceSurfaceCapabilitiesKHR (Physical_Device
Engine/neo-world-graphics.adb:1083:60   - Unknown word (Physical)     -- DeviceSurfaceCapabilitiesKHR (Physical_Device, Surface, Surface
Engine/neo-world-graphics.adb:1084:34   - Unknown word (Extent)       -- Surface_Details.minImageExtent.width /= 0 and Surface
Engine/neo-world-graphics.adb:1084:41   - Unknown word (width)        -- Details.minImageExtent.width /= 0 and Surface_Details
Engine/neo-world-graphics.adb:1084:80   - Unknown word (Extent)       -- Surface_Details.minImageExtent.height /= 0 then
Engine/neo-world-graphics.adb:1084:87   - Unknown word (height)       -- Details.minImageExtent.height /= 0 then
Engine/neo-world-graphics.adb:1085:17   - Unknown word (Extent)       -- Surface_Extent := Surface_Details.minImageEx
Engine/neo-world-graphics.adb:1087:12   - Unknown word (Cleanup)      -- -- Cleanup, everybody
Engine/neo-world-graphics.adb:1087:21   - Unknown word (everybody)    -- -- Cleanup, everybody
Engine/neo-world-graphics.adb:108:15    - Unknown word (corresponding) -- -- Samplers corresponding to each of the components
Engine/neo-world-graphics.adb:108:32    - Unknown word (each)          -- Samplers corresponding to each of the components of
Engine/neo-world-graphics.adb:108:6     - Unknown word (Samplers)    -- -- Samplers corresponding to each
Engine/neo-world-graphics.adb:1091:18   - Unknown word (anew)         -- -- Start anew
Engine/neo-world-graphics.adb:1096:35   - Unknown word (everything)   -- the framebuffer and everything it uses
Engine/neo-world-graphics.adb:1096:49   - Unknown word (uses)         -- framebuffer and everything it uses
Engine/neo-world-graphics.adb:109:16    - Unknown word (Color)         -- package Base_Color_Sampler is new Sampler
Engine/neo-world-graphics.adb:109:22    - Unknown word (Sampler)       -- package Base_Color_Sampler is new Sampler (Binding
Engine/neo-world-graphics.adb:109:37    - Unknown word (Sampler)       -- Color_Sampler is new Sampler (Binding => 0);
Engine/neo-world-graphics.adb:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-world-graphics.adb:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-world-graphics.adb:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo-world-graphics.adb:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-world-graphics.adb:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-world-graphics.adb:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-world-graphics.adb:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-world-graphics.adb:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-world-graphics.adb:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-world-graphics.adb:1104:45   - Unknown word (Acquire)      -- roySemaphore (Device, Frame.Acquire_Status, null);
Engine/neo-world-graphics.adb:1107:45   - Unknown word (Swapchain)    -- royFramebuffer (Device, Frame.Swapchain_Buffer, null);
Engine/neo-world-graphics.adb:110:11    - Unknown word (Irradiance)    -- package Irradiance_Sampler is new Sampler
Engine/neo-world-graphics.adb:110:22    - Unknown word (Sampler)       -- package Irradiance_Sampler is new Sampler (Binding
Engine/neo-world-graphics.adb:1113:10   - Unknown word (Depth)        -- -- Depth image
Engine/neo-world-graphics.adb:1114:35   - Unknown word (Depth)        -- vkDestroySampler (Device, Depth_Image.Sampler, null
Engine/neo-world-graphics.adb:1115:35   - Unknown word (Depth)        -- vkDestroyImage (Device, Depth_Image.Data, null
Engine/neo-world-graphics.adb:1116:35   - Unknown word (Depth)        -- vkDestroyImageView (Device, Depth_Image.View, null
Engine/neo-world-graphics.adb:1117:23   - Unknown word (Throw)        -- Safe_Allocation.Throw_Away (Depth_Image);
Engine/neo-world-graphics.adb:1117:29   - Unknown word (Away)         -- Safe_Allocation.Throw_Away (Depth_Image);
Engine/neo-world-graphics.adb:1117:35   - Unknown word (Depth)        -- Allocation.Throw_Away (Depth_Image);
Engine/neo-world-graphics.adb:1122:10   - Unknown word (Swapchain)    -- -- Swapchain
Engine/neo-world-graphics.adb:1127:35   - Unknown word (this)         -- Initialize the framebuffer - this may happen multiple
Engine/neo-world-graphics.adb:1127:44   - Unknown word (happen)       -- framebuffer - this may happen multiple times during
Engine/neo-world-graphics.adb:1127:51   - Unknown word (multiple)     -- framebuffer - this may happen multiple times during resizing
Engine/neo-world-graphics.adb:1127:60   - Unknown word (times)        -- may happen multiple times during resizing
Engine/neo-world-graphics.adb:1127:66   - Unknown word (during)       -- happen multiple times during resizing
Engine/neo-world-graphics.adb:112:11    - Unknown word (Specular)      -- package Specular_Sampler is new Sampler
Engine/neo-world-graphics.adb:1130:8    - Unknown word (Syncronization) -- -- Syncronization
Engine/neo-world-graphics.adb:1132:68   - Unknown word (FENCE)          -- := (flags => VK_FENCE_CREATE_SIGNALED_BIT
Engine/neo-world-graphics.adb:1132:81   - Unknown word (SIGNALED)       -- flags => VK_FENCE_CREATE_SIGNALED_BIT, others => <>);
Engine/neo-world-graphics.adb:1134:13   - Unknown word (Chain)          -- -- Swap Chain
Engine/neo-world-graphics.adb:1135:5    - Unknown word (Indexes)        -- Indexes : aliased Array
Engine/neo-world-graphics.adb:1136:59   - Unknown word (surface)        -- VkSwapchainCreateInfoKHR := (surface => Surface
Engine/neo-world-graphics.adb:1139:96   - Unknown word (color)          -- => Swapchain_Format.colorSpace,
Engine/neo-world-graphics.adb:1140:95   - Unknown word (EXCLUSIVE)      -- haringMode => VK_SHARING_MODE_EXCLUSIVE,
Engine/neo-world-graphics.adb:1142:59   - Unknown word (composite)      -- compositeAlpha => VK_COMPOSITE
Engine/neo-world-graphics.adb:1142:82   - Unknown word (COMPOSITE)      -- compositeAlpha => VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR
Engine/neo-world-graphics.adb:1142:98   - Unknown word (OPAQUE)         -- VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR,
Engine/neo-world-graphics.adb:1143:59   - Unknown word (present)        -- presentMode => VK_PRESENT
Engine/neo-world-graphics.adb:1143:82   - Unknown word (PRESENT)        -- presentMode => VK_PRESENT_MODE_MAILBOX_KHR,
Engine/neo-world-graphics.adb:1144:59   - Unknown word (clipped)        -- clipped => VK_TRUE
Engine/neo-world-graphics.adb:1144:82   - Unknown word (TRUE)           -- clipped => VK_TRUE,
Engine/neo-world-graphics.adb:114:11    - Unknown word (Displace)      -- package Displace_Sampler is new Sampler
Engine/neo-world-graphics.adb:1151:27   - Unknown word (transitioning)  -- Command buffer for transitioning depth buffer
Engine/neo-world-graphics.adb:1151:41   - Unknown word (depth)          -- buffer for transitioning depth buffer
Engine/neo-world-graphics.adb:115:11    - Unknown word (Metallic)      -- package Metallic_Sampler is new Sampler
Engine/neo-world-graphics.adb:1166:91   - Unknown word (SWIZZLE)        -- => (VK_COMPONENT_SWIZZLE_IDENTITY,
Engine/neo-world-graphics.adb:1167:91   - Unknown word (SWIZZLE)        -- VK_COMPONENT_SWIZZLE_IDENTITY,
Engine/neo-world-graphics.adb:1168:91   - Unknown word (SWIZZLE)        -- VK_COMPONENT_SWIZZLE_IDENTITY,
Engine/neo-world-graphics.adb:1169:91   - Unknown word (SWIZZLE)        -- VK_COMPONENT_SWIZZLE_IDENTITY),
Engine/neo-world-graphics.adb:116:11    - Unknown word (Roughness)     -- package Roughness_Sampler is new Sampler
Engine/neo-world-graphics.adb:1170:57   - Unknown word (subresource)    -- subresourceRange => (levelCount
Engine/neo-world-graphics.adb:1174:105  - Unknown word (ASPECT)         -- aspectMask => VK_IMAGE_ASPECT_COLOR_BIT, others =
Engine/neo-world-graphics.adb:1174:78   - Unknown word (aspect)         -- aspectMask => VK_IMAGE
Engine/neo-world-graphics.adb:1177:99   - Unknown word (UNDEFINED)      -- => VK_IMAGE_LAYOUT_UNDEFINED,
Engine/neo-world-graphics.adb:1178:105  - Unknown word (STENCIL)        -- VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL,
Engine/neo-world-graphics.adb:1178:99   - Unknown word (DEPTH)          -- => VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL
Engine/neo-world-graphics.adb:1179:99   - Unknown word (IGNORED)        -- amilyIndex => VK_QUEUE_FAMILY_IGNORED,
Engine/neo-world-graphics.adb:117:11    - Unknown word (Projection)    -- package Projection_Sampler is new Sampler
Engine/neo-world-graphics.adb:1182:93   - Unknown word (DEPTH)          -- AccessMask => VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ
Engine/neo-world-graphics.adb:1182:99   - Unknown word (STENCIL)        -- => VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT
Engine/neo-world-graphics.adb:1183:93   - Unknown word (DEPTH)          -- VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE
Engine/neo-world-graphics.adb:1183:99   - Unknown word (STENCIL)        -- VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT
Engine/neo-world-graphics.adb:1184:60   - Unknown word (subresource)    -- subresourceRange => (baseMipLevel
Engine/neo-world-graphics.adb:1188:118  - Unknown word (DEPTH)          -- => VK_IMAGE_ASPECT_DEPTH_BIT or
Engine/neo-world-graphics.adb:1189:118  - Unknown word (STENCIL)        -- VK_IMAGE_ASPECT_STENCIL_BIT, others => <>),
Engine/neo-world-graphics.adb:118:11    - Unknown word (Falloff)       -- package Falloff_Sampler is new Sampler
Engine/neo-world-graphics.adb:1190:54   - Unknown word (initial)        -- VkImageCreateInfo := (initialLayout => VK_IMAGE_LAYOUT
Engine/neo-world-graphics.adb:1190:87   - Unknown word (UNDEFINED)      -- tialLayout => VK_IMAGE_LAYOUT_UNDEFINED,
Engine/neo-world-graphics.adb:1191:87   - Unknown word (EXCLUSIVE)      -- => VK_SHARING_MODE_EXCLUSIVE,
Engine/neo-world-graphics.adb:1192:54   - Unknown word (tiling)         -- tiling => VK_IMAGE_TILING
Engine/neo-world-graphics.adb:1192:80   - Unknown word (TILING)         -- tiling => VK_IMAGE_TILING_OPTIMAL, --
Engine/neo-world-graphics.adb:1196:109  - Unknown word (height)         -- width, Surface_Extent.height, 1),
Engine/neo-world-graphics.adb:1196:54   - Unknown word (extent)         -- extent => (Surface_Extent
Engine/neo-world-graphics.adb:1196:87   - Unknown word (width)          -- => (Surface_Extent.width, Surface_Extent.height
Engine/neo-world-graphics.adb:1199:86   - Unknown word (DEPTH)          -- => VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT
Engine/neo-world-graphics.adb:1199:92   - Unknown word (STENCIL)        -- VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT, others
Engine/neo-world-graphics.adb:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-world-graphics.adb:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-world-graphics.adb:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-world-graphics.adb:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-world-graphics.adb:1201:8    - Unknown word (Subpass)        -- -- Subpass
Engine/neo-world-graphics.adb:1203:61   - Unknown word (layout)         -- layout => VK_IMAGE_LAYOUT
Engine/neo-world-graphics.adb:1205:61   - Unknown word (layout)         -- layout => VK_IMAGE_LAYOUT
Engine/neo-world-graphics.adb:1206:100  - Unknown word (BIND)           -- => VK_PIPELINE_BIND_POINT_GRAPHICS,
Engine/neo-world-graphics.adb:1206:111  - Unknown word (GRAPHICS)       -- PIPELINE_BIND_POINT_GRAPHICS,
Engine/neo-world-graphics.adb:1206:37   - Unknown word (Subpass)        -- Description : aliased VkSubpassDescription := (pipelineBindP
Engine/neo-world-graphics.adb:1206:5    - Unknown word (Subpass)        -- Subpass_Description : aliased
Engine/neo-world-graphics.adb:1207:61   - Unknown word (color)          -- colorAttachmentCount =
Engine/neo-world-graphics.adb:1209:67   - Unknown word (Stencil)        -- pDepthStencilAttachment => Depth_Reference
Engine/neo-world-graphics.adb:1210:13   - Unknown word (Dependency)     -- Subpass_Dependency : aliased VkSubpassDependenc
Engine/neo-world-graphics.adb:1210:37   - Unknown word (Subpass)        -- Dependency : aliased VkSubpassDependency := (srcSubpass
Engine/neo-world-graphics.adb:1210:44   - Unknown word (Dependency)     -- : aliased VkSubpassDependency := (srcSubpass
Engine/neo-world-graphics.adb:1210:5    - Unknown word (Subpass)        -- Subpass_Dependency : aliased
Engine/neo-world-graphics.adb:1210:81   - Unknown word (SUBPASS)        -- srcSubpass => VK_SUBPASS_EXTERNAL,
Engine/neo-world-graphics.adb:121:15    - Unknown word (flag)          -- -- Skinning flag
Engine/neo-world-graphics.adb:121:6     - Unknown word (Skinning)      -- -- Skinning flag
Engine/neo-world-graphics.adb:1221:102  - Unknown word (DONT)           -- VK_ATTACHMENT_LOAD_OP_DONT_CARE,
Engine/neo-world-graphics.adb:1221:107  - Unknown word (CARE)           -- ATTACHMENT_LOAD_OP_DONT_CARE,
Engine/neo-world-graphics.adb:1223:102  - Unknown word (DONT)           -- VK_ATTACHMENT_LOAD_OP_DONT_CARE,
Engine/neo-world-graphics.adb:1223:107  - Unknown word (CARE)           -- ATTACHMENT_LOAD_OP_DONT_CARE,
Engine/neo-world-graphics.adb:1223:62   - Unknown word (stencil)        -- stencilLoadOp => VK_ATTACHMENT
Engine/neo-world-graphics.adb:1224:103  - Unknown word (DONT)           -- ATTACHMENT_STORE_OP_DONT_CARE,
Engine/neo-world-graphics.adb:1224:108  - Unknown word (CARE)           -- ATTACHMENT_STORE_OP_DONT_CARE,
Engine/neo-world-graphics.adb:1224:62   - Unknown word (stencil)        -- stencilStoreOp => VK_ATTACHMENT
Engine/neo-world-graphics.adb:1225:62   - Unknown word (initial)        -- initialLayout => VK_IMAGE_LAYOUT
Engine/neo-world-graphics.adb:1226:62   - Unknown word (final)          -- finalLayout => VK_IMAGE
Engine/neo-world-graphics.adb:1229:102  - Unknown word (DONT)           -- VK_ATTACHMENT_LOAD_OP_DONT_CARE,
Engine/neo-world-graphics.adb:1229:107  - Unknown word (CARE)           -- ATTACHMENT_LOAD_OP_DONT_CARE,
Engine/neo-world-graphics.adb:122:18    - Unknown word (Skinning)      -- package Enable_Skinning is new Uniform (Binding
Engine/neo-world-graphics.adb:122:98    - Unknown word (Skinning)      -- Bool, Name_ID => "enableSkinning");
Engine/neo-world-graphics.adb:1230:103  - Unknown word (DONT)           -- ATTACHMENT_STORE_OP_DONT_CARE,
Engine/neo-world-graphics.adb:1230:108  - Unknown word (CARE)           -- ATTACHMENT_STORE_OP_DONT_CARE,
Engine/neo-world-graphics.adb:1231:62   - Unknown word (stencil)        -- stencilLoadOp => VK_ATTACHMENT
Engine/neo-world-graphics.adb:1232:62   - Unknown word (stencil)        -- stencilStoreOp => VK_ATTACHMENT
Engine/neo-world-graphics.adb:1233:62   - Unknown word (initial)       -- initialLayout => VK_IMAGE_LAYOUT
Engine/neo-world-graphics.adb:1234:62   - Unknown word (final)         -- finalLayout => VK_IMAGE
Engine/neo-world-graphics.adb:1238:59   - Unknown word (subpass)       -- subpassCount => 1,
Engine/neo-world-graphics.adb:1239:60   - Unknown word (Subpasses)     -- pSubpasses => Subpass_Description
Engine/neo-world-graphics.adb:1240:59   - Unknown word (dependency)    -- dependencyCount => 1,
Engine/neo-world-graphics.adb:1241:86   - Unknown word (Dependency)    -- pDependencies => Subpass_Dependency'Unchecked_Access, others
Engine/neo-world-graphics.adb:1246:15   - Unknown word (sure)          -- -- Make sure we are safe
Engine/neo-world-graphics.adb:1246:27   - Unknown word (safe)          -- -- Make sure we are safe
Engine/neo-world-graphics.adb:1247:29   - Unknown word (Idle)          -- vkAssert (vkDeviceWaitIdle (Device));
Engine/neo-world-graphics.adb:124:18    - Unknown word (flags)         -- -- Texture map flags
Engine/neo-world-graphics.adb:124:6     - Unknown word (Texture)       -- -- Texture map flags
Engine/neo-world-graphics.adb:1252:42   - Unknown word (swapchain)     -- swapchain => Swapchain
Engine/neo-world-graphics.adb:1259:44   - Unknown word (swapchain)     -- swapchain => Swapchain
Engine/neo-world-graphics.adb:125:102   - Unknown word (Color)         -- Name_ID => "enableBaseColor");
Engine/neo-world-graphics.adb:125:23    - Unknown word (Color)         -- package Enable_Base_Color is new Uniform (Binding
Engine/neo-world-graphics.adb:1262:47   - Unknown word (Unsafe)        -- new Vector_Framebuffer.Unsafe_Array (Images'Range
Engine/neo-world-graphics.adb:126:18    - Unknown word (Irradiance)    -- package Enable_Irradiance is new Uniform (Binding
Engine/neo-world-graphics.adb:126:98    - Unknown word (Irradiance)    -- Bool, Name_ID => "enableIrradiance");
Engine/neo-world-graphics.adb:1273:23   - Unknown word (bind)          -- -- Allocate and bind the memory for the depth
Engine/neo-world-graphics.adb:1273:47   - Unknown word (depth)         -- bind the memory for the depth image
Engine/neo-world-graphics.adb:1278:21   - Unknown word (depth)         -- -- Create the depth image's view
Engine/neo-world-graphics.adb:127:18    - Unknown word (Specular)      -- package Enable_Specular is new Uniform (Binding
Engine/neo-world-graphics.adb:127:98    - Unknown word (Specular)      -- Bool, Name_ID => "enableSpecular");
Engine/neo-world-graphics.adb:1285:25   - Unknown word (depth)         -- -- Transition the depth buffers layout
Engine/neo-world-graphics.adb:1285:39   - Unknown word (layout)        -- Transition the depth buffers layout
Engine/neo-world-graphics.adb:1290:75   - Unknown word (EARLY)         -- > VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT,
Engine/neo-world-graphics.adb:1291:29   - Unknown word (dependency)    -- dependencyFlags => 0,
Engine/neo-world-graphics.adb:129:18    - Unknown word (Metallic)      -- package Enable_Metallic is new Uniform (Binding
Engine/neo-world-graphics.adb:129:98    - Unknown word (Metallic)      -- Bool, Name_ID => "enableMetallic");
Engine/neo-world-graphics.adb:1300:28   - Unknown word (Idle)          -- vkAssert (vkQueueWaitIdle (Queue));
Engine/neo-world-graphics.adb:130:18    - Unknown word (Roughness)     -- package Enable_Roughness is new Uniform (Binding
Engine/neo-world-graphics.adb:130:98    - Unknown word (Roughness)     -- Bool, Name_ID => "enableRoughness");
Engine/neo-world-graphics.adb:1310:31   - Unknown word (width)         -- width => Swapchain
Engine/neo-world-graphics.adb:1310:77   - Unknown word (width)         -- Swapchain_Info.imageExtent.width,
Engine/neo-world-graphics.adb:1311:31   - Unknown word (height)        -- height => Swapchain
Engine/neo-world-graphics.adb:1311:77   - Unknown word (height)        -- Swapchain_Info.imageExtent.height,
Engine/neo-world-graphics.adb:1315:101  - Unknown word (Acquire)       -- Access, null, Frame.Acquire_Status'Unchecked_Access
Engine/neo-world-graphics.adb:1320:20   - Unknown word (indexes)       -- -- Reset the indexes reate the inital view
Engine/neo-world-graphics.adb:1320:28   - Unknown word (reate)         -- - Reset the indexes reate the inital view
Engine/neo-world-graphics.adb:1320:38   - Unknown word (inital)        -- the indexes reate the inital view
Engine/neo-world-graphics.adb:1324:9    - Unknown word (Renderer)      -- Renderer.Build_View (Current
Engine/neo-world-graphics.adb:1329:26   - Unknown word (Occupied)      -- Framebuffer_Status.Occupied (True);
Engine/neo-world-graphics.adb:1329:36   - Unknown word (True)          -- Framebuffer_Status.Occupied (True);
Engine/neo-world-graphics.adb:1333:17   - Unknown word (Drawing)       -- -- Initialize_Drawing --
Engine/neo-world-graphics.adb:1336:24   - Unknown word (Drawing)       -- procedure Initialize_Drawing is
Engine/neo-world-graphics.adb:1338:26   - Unknown word (pointers)      -- - Load the function pointers from our driver library
Engine/neo-world-graphics.adb:1338:44   - Unknown word (driver)        -- function pointers from our driver library
Engine/neo-world-graphics.adb:1338:51   - Unknown word (library)       -- pointers from our driver library
Engine/neo-world-graphics.adb:1339:33   - Unknown word (Subprograms)   -- procedure Initialize_Vulkan_Subprograms is new API.Vulkan.Initialize
Engine/neo-world-graphics.adb:1339:86   - Unknown word (Subprogram)    -- Initialize (Get_Vulkan_Subprogram);
Engine/neo-world-graphics.adb:133:6     - Unknown word (Renderer)      -- -- Renderer --
Engine/neo-world-graphics.adb:1341:18   - Unknown word (amount)        -- -- Guess the amount of video RAM in MB from
Engine/neo-world-graphics.adb:1341:28   - Unknown word (video)         -- Guess the amount of video RAM in MB from a device
Engine/neo-world-graphics.adb:1341:8    - Unknown word (Guess)         -- -- Guess the amount of video
Engine/neo-world-graphics.adb:1342:14   - Unknown word (Guess)         -- function Guess_VRAM (Memory : VkPhysicalDevi
Engine/neo-world-graphics.adb:1342:37   - Unknown word (Physical)      -- Guess_VRAM (Memory : VkPhysicalDeviceMemoryProperties
Engine/neo-world-graphics.adb:1346:40   - Unknown word (HEAP)          -- flags and VK_MEMORY_HEAP_DEVICE_LOCAL_BIT) >
Engine/neo-world-graphics.adb:1351:24   - Unknown word (fetching)      -- -- Temporaries for fetching and testing physical
Engine/neo-world-graphics.adb:1351:45   - Unknown word (physical)      -- fetching and testing physical device features
Engine/neo-world-graphics.adb:1351:8    - Unknown word (Temporaries)   -- -- Temporaries for fetching and testing
Engine/neo-world-graphics.adb:1353:13   - Unknown word (Graphics)      -- Current_Graphics_Family,
Engine/neo-world-graphics.adb:1359:50   - Unknown word (Capabilities)  -- : aliased VkSurfaceCapabilitiesKHR := (others
Engine/neo-world-graphics.adb:1360:43   - Unknown word (Physical)      -- Properties : aliased VkPhysicalDeviceProperties
Engine/neo-world-graphics.adb:1361:43   - Unknown word (Physical)      -- Properties : aliased VkPhysicalDeviceMemoryProperties
Engine/neo-world-graphics.adb:1369:45   - Unknown word (Char)          -- : aliased Array_Ptr_Char_8_C := (C (VK_KHR_SURFACE
Engine/neo-world-graphics.adb:1369:68   - Unknown word (SURFACE)       -- Char_8_C := (C (VK_KHR_SURFACE_EXTENSION), Get_Vulkan
Engine/neo-world-graphics.adb:136:16    - Unknown word (Renderer)      -- package body Renderer is separate;
Engine/neo-world-graphics.adb:1379:54   - Unknown word (ppenabled)     -- ppenabledExtensionNames => Instance
Engine/neo-world-graphics.adb:137:18    - Unknown word (Safe)          -- Queue_Status : Safe_Status;
Engine/neo-world-graphics.adb:1380:103  - Unknown word (DEBUGING)      -- if Is_Debugging then DEBUGING_EXTENSIONS'Length else
Engine/neo-world-graphics.adb:1381:81   - Unknown word (DEBUGING)      -- ppEnabledLayerNames => DEBUGING_EXTENSIONS (1)'Address
Engine/neo-world-graphics.adb:1386:105  - Unknown word (TRUE)          -- => VK_TRUE,
Engine/neo-world-graphics.adb:1386:66   - Unknown word (Clip)          -- sicalDeviceFeatures := (shaderClipDistance
Engine/neo-world-graphics.adb:1386:70   - Unknown word (Distance)      -- lDeviceFeatures := (shaderClipDistance
Engine/neo-world-graphics.adb:1387:105  - Unknown word (TRUE)          -- => VK_TRUE,
Engine/neo-world-graphics.adb:1387:66   - Unknown word (Cull)          -- shaderCullDistance
Engine/neo-world-graphics.adb:1387:70   - Unknown word (Distance)      -- shaderCullDistance
Engine/neo-world-graphics.adb:1389:60   - Unknown word (sampler)       -- samplerAnisotropy
Engine/neo-world-graphics.adb:1389:67   - Unknown word (Anisotropy)    -- samplerAnisotropy
Engine/neo-world-graphics.adb:1390:66   - Unknown word (Tessellation)  -- shaderTessellationAndGeometryPointSize
Engine/neo-world-graphics.adb:1391:60   - Unknown word (geometry)      -- geometryShader
Engine/neo-world-graphics.adb:1391:68   - Unknown word (Shader)        -- geometryShader
Engine/neo-world-graphics.adb:1393:62   - Unknown word (Infos)         -- pQueueCreateInfos => Queue_Info
Engine/neo-world-graphics.adb:1396:50   - Unknown word (ppenabled)     -- ppenabledExtensionNames => DEVICE
Engine/neo-world-graphics.adb:1399:21   - Unknown word (Sizes)         -- Descriptor_Pool_Sizes : aliased Array_VkDescriptorP
Engine/neo-world-graphics.adb:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-world-graphics.adb:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-world-graphics.adb:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-world-graphics.adb:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-world-graphics.adb:1400:108  - Unknown word (Sizes)         -- lSizeCount => Descriptor_Pool_Sizes'Length,
Engine/neo-world-graphics.adb:1401:108  - Unknown word (Sizes)         -- => Descriptor_Pool_Sizes (1)'Unchecked_Access
Engine/neo-world-graphics.adb:1401:80   - Unknown word (Sizes)         -- pPoolSizes => Descriptor_Pool
Engine/neo-world-graphics.adb:1404:15   - Unknown word (allocation)    -- -- Memory allocation temporaries
Engine/neo-world-graphics.adb:1404:26   - Unknown word (temporaries)   -- - Memory allocation temporaries
Engine/neo-world-graphics.adb:1405:5    - Unknown word (Alignment)     -- Alignment_Mod : aliased
Engine/neo-world-graphics.adb:1412:89   - Unknown word (EXCLUSIVE)     -- haringMode => VK_SHARING_MODE_EXCLUSIVE, others => <>);
Engine/neo-world-graphics.adb:1414:16   - Unknown word (fence)         -- -- Staging fence
Engine/neo-world-graphics.adb:1415:68   - Unknown word (FENCE)         -- nceCreateInfo := (flags => VK_FENCE_CREATE_SIGNALED_BIT
Engine/neo-world-graphics.adb:1415:81   - Unknown word (SIGNALED)      -- flags => VK_FENCE_CREATE_SIGNALED_BIT, others => <>);
Engine/neo-world-graphics.adb:1423:8    - Unknown word (Shaders)      -- -- Shaders
Engine/neo-world-graphics.adb:1424:12   - Unknown word (Bindings)     -- Layout_Bindings :         Vector
Engine/neo-world-graphics.adb:1425:5    - Unknown word (Shader)       -- Shader_Flags :
Engine/neo-world-graphics.adb:1426:83   - Unknown word (UNBOUND)      -- := NULL_STR_UNBOUND;
Engine/neo-world-graphics.adb:1429:12   - Unknown word (Module)       -- Shader_Module_Info : aliased VkShaderMod
Engine/neo-world-graphics.adb:1429:45   - Unknown word (Module)       -- : aliased VkShaderModuleCreateInfo
Engine/neo-world-graphics.adb:1433:28   - Unknown word (Drawing)      -- Start of Initialize_Drawing
Engine/neo-world-graphics.adb:1436:15   - Unknown word (driver)       -- -- Load driver
Engine/neo-world-graphics.adb:1437:25   - Unknown word (Library)      -- Initialize_Vulkan_Library;
Engine/neo-world-graphics.adb:1438:25   - Unknown word (Subprograms)  -- Initialize_Vulkan_Subprograms;
Engine/neo-world-graphics.adb:1440:41   - Unknown word (handle)       -- Vulkan instance and handle the case of debugging
Engine/neo-world-graphics.adb:1440:85   - Unknown word (being)        -- debugging extensions not being supported
Engine/neo-world-graphics.adb:1441:114  - Unknown word (PRESENT)      -- VK_ERROR_LAYER_NOT_PRESENT then
Engine/neo-world-graphics.adb:1443:44   - Unknown word (have)         -- not debugging then we have no idea why VK_ERROR
Engine/neo-world-graphics.adb:1443:52   - Unknown word (idea)         -- debugging then we have no idea why VK_ERROR_LAYER_NOT
Engine/neo-world-graphics.adb:1443:80   - Unknown word (PRESENT)      -- why VK_ERROR_LAYER_NOT_PRESENT would be returned..
Engine/neo-world-graphics.adb:1443:88   - Unknown word (would)        -- ERROR_LAYER_NOT_PRESENT would be returned...
Engine/neo-world-graphics.adb:1443:97   - Unknown word (returned)     -- NOT_PRESENT would be returned...
Engine/neo-world-graphics.adb:1444:40   - Unknown word (Program)      -- Debugging then raise Program_Error; end if;
Engine/neo-world-graphics.adb:1446:115  - Unknown word (again)        -- instantiating the instance again
Engine/neo-world-graphics.adb:1446:12   - Unknown word (Otherwise)    -- -- Otherwise print some info to the
Engine/neo-world-graphics.adb:1446:22   - Unknown word (print)        -- -- Otherwise print some info to the user
Engine/neo-world-graphics.adb:1446:28   - Unknown word (some)         -- -- Otherwise print some info to the user, remove
Engine/neo-world-graphics.adb:144:25    - Unknown word (Clock)         -- Last_Time : Time := Clock;
Engine/neo-world-graphics.adb:1450:104  - Unknown word (Char)         -- 0AE#) & " Vulkan" & Char'Val (16#2122#) & " SDK
Engine/neo-world-graphics.adb:1450:16   - Unknown word (Using)        -- Info ("Using Vulkan's debugging layer
Engine/neo-world-graphics.adb:1450:47   - Unknown word (requires)     -- Vulkan's debugging layer requires the LunarG" & Char'Val
Engine/neo-world-graphics.adb:1450:60   - Unknown word (Lunar)        -- debugging layer requires the LunarG" & Char'Val (16#00AE
Engine/neo-world-graphics.adb:1450:70   - Unknown word (Char)         -- requires the LunarG" & Char'Val (16#00AE#) & " Vulkan
Engine/neo-world-graphics.adb:1452:18   - Unknown word (Continuing)   -- & "Continuing without the debugging
Engine/neo-world-graphics.adb:1455:17   - Unknown word (rendering)    -- -- Create rendering surface
Engine/neo-world-graphics.adb:1455:27   - Unknown word (surface)      -- -- Create rendering surface
Engine/neo-world-graphics.adb:1458:17   - Unknown word (physical)     -- -- Pick a physical devices
Engine/neo-world-graphics.adb:1459:19   - Unknown word (Enumerate)    -- vkAssert (vkEnumeratePhysicalDevices (Instance
Engine/neo-world-graphics.adb:1461:21   - Unknown word (Enumerate)    -- vkAssert (vkEnumeratePhysicalDevices (Instance
Engine/neo-world-graphics.adb:1463:12   - Unknown word (Find)         -- -- Find the best physical device
Engine/neo-world-graphics.adb:1463:26   - Unknown word (physical)     -- -- Find the best physical device and wrap it in
Engine/neo-world-graphics.adb:1463:46   - Unknown word (wrap)         -- physical device and wrap it in a Heap to catch
Engine/neo-world-graphics.adb:1463:67   - Unknown word (catch)        -- wrap it in a Heap to catch device verification
Engine/neo-world-graphics.adb:1463:93   - Unknown word (exceptions)   -- device verification exceptions
Engine/neo-world-graphics.adb:1469:55   - Unknown word (physical)     -- lDeviceQueueFamilyProperties (physicalDevice =>
Engine/neo-world-graphics.adb:1473:31   - Unknown word (exists)       -- -- Verify a queue exists with graphical surface
Engine/neo-world-graphics.adb:1473:43   - Unknown word (graphical)    -- a queue exists with graphical surface support; then
Engine/neo-world-graphics.adb:1473:53   - Unknown word (surface)      -- exists with graphical surface support; then aquire
Engine/neo-world-graphics.adb:1473:75   - Unknown word (aquire)       -- surface support; then aquire it
Engine/neo-world-graphics.adb:1474:21   - Unknown word (Graphics)     -- Current_Graphics_Family := -1;
Engine/neo-world-graphics.adb:1477:63   - Unknown word (physical)     -- sicalDeviceSurfaceSupportKHR (physicalDevice => Current_Physical
Engine/neo-world-graphics.adb:1479:63   - Unknown word (surface)      -- surface => Surface
Engine/neo-world-graphics.adb:1482:39   - Unknown word (supports)     -- Check if the device supports surfaces and 3D graphics
Engine/neo-world-graphics.adb:1482:48   - Unknown word (surfaces)     -- the device supports surfaces and 3D graphics
Engine/neo-world-graphics.adb:1482:64   - Unknown word (graphics)     -- supports surfaces and 3D graphics
Engine/neo-world-graphics.adb:1484:72   - Unknown word (GRAPHICS)     -- queueFlags and VK_QUEUE_GRAPHICS_BIT) > 0 then
Engine/neo-world-graphics.adb:1485:26   - Unknown word (Graphics)     -- Current_Graphics_Family := Int_Unsigned
Engine/neo-world-graphics.adb:1487:72   - Unknown word (Graphics)     -- VK_TRUE and Current_Graphics_Family /= -1;
Engine/neo-world-graphics.adb:1493:42   - Unknown word (formats)      -- supported surface image formats for later query
Engine/neo-world-graphics.adb:1493:54   - Unknown word (later)        -- surface image formats for later query
Engine/neo-world-graphics.adb:1494:47   - Unknown word (Formats)      -- vkGetPhysicalDeviceSurfaceFormatsKHR (Current_Physical
Engine/neo-world-graphics.adb:1495:33   - Unknown word (Formats)      -- declare Surface_Image_Formats : Array_VkSurfaceFormatKHR
Engine/neo-world-graphics.adb:1496:49   - Unknown word (Formats)      -- vkGetPhysicalDeviceSurfaceFormatsKHR (physicalDevice
Engine/neo-world-graphics.adb:1499:69   - Unknown word (Formats)      -- pSurfaceFormats => Surface_Image
Engine/neo-world-graphics.adb:1499:98   - Unknown word (Formats)      -- => Surface_Image_Formats (1)'Unchecked_Access
Engine/neo-world-graphics.adb:1501:28   - Unknown word (SWAPCHAIN)    -- if SUPPORTED_SWAPCHAIN_FORMAT = Surface_Image
Engine/neo-world-graphics.adb:1509:21   - Unknown word (suitable)     -- -- Find a suitable depth format
Engine/neo-world-graphics.adb:150:9     - Unknown word (Renderer)      -- Renderer.Build_View (Current
Engine/neo-world-graphics.adb:1510:36   - Unknown word (FORMATS)      -- I in SUPPORTED_DEPTH_FORMATS'Range loop
Engine/neo-world-graphics.adb:1512:87   - Unknown word (FORMATS)      -- => SUPPORTED_DEPTH_FORMATS (I),
Engine/neo-world-graphics.adb:1515:19   - Unknown word (require)      -- -- We require optimal tiling
Engine/neo-world-graphics.adb:1515:27   - Unknown word (optimal)      -- -- We require optimal tiling
Engine/neo-world-graphics.adb:1515:35   - Unknown word (tiling)       -- We require optimal tiling
Engine/neo-world-graphics.adb:1516:43   - Unknown word (optimal)      -- Current_Format_Properties.optimalTilingFeatures and VK
Engine/neo-world-graphics.adb:1516:50   - Unknown word (Tiling)       -- Format_Properties.optimalTilingFeatures and VK_FORMAT
Engine/neo-world-graphics.adb:1517:62   - Unknown word (FORMATS)      -- format := SUPPORTED_DEPTH_FORMATS (I);
Engine/neo-world-graphics.adb:1520:42   - Unknown word (FORMATS)      -- I /= SUPPORTED_DEPTH_FORMATS'Last);
Engine/neo-world-graphics.adb:1524:23   - Unknown word (Enumerate)    -- vkAssert (vkEnumerateDeviceExtensionProperties
Engine/neo-world-graphics.adb:1526:25   - Unknown word (Enumerate)    -- vkAssert (vkEnumerateDeviceExtensionProperties
Engine/neo-world-graphics.adb:1538:33   - Unknown word (presentation) -- Get device surface presentation mode information
Engine/neo-world-graphics.adb:1538:46   - Unknown word (mode)         -- surface presentation mode information
Engine/neo-world-graphics.adb:1539:54   - Unknown word (Modes)        -- etPhysicalDeviceSurfacePresentModesKHR (Current_Physical
Engine/neo-world-graphics.adb:1540:27   - Unknown word (Modes)        -- declare Present_Modes : aliased Array_Int
Engine/neo-world-graphics.adb:1541:56   - Unknown word (Modes)        -- etPhysicalDeviceSurfacePresentModesKHR (physicalDevice
Engine/neo-world-graphics.adb:1544:74   - Unknown word (Modes)        -- pPresentModes => Present_Modes
Engine/neo-world-graphics.adb:1544:95   - Unknown word (Modes)        -- pPresentModes => Present_Modes'Unchecked_Access));
Engine/neo-world-graphics.adb:1546:19   - Unknown word (require)      -- -- We require mailbox mode so we can
Engine/neo-world-graphics.adb:1546:35   - Unknown word (mode)         -- We require mailbox mode so we can implement
Engine/neo-world-graphics.adb:1546:60   - Unknown word (something)    -- so we can implement something past double buffering
Engine/neo-world-graphics.adb:1546:70   - Unknown word (past)         -- implement something past double buffering
Engine/neo-world-graphics.adb:1548:48   - Unknown word (PRESENT)      -- Present_Modes (I) = VK_PRESENT_MODE_MAILBOX_KHR;
Engine/neo-world-graphics.adb:154:17    - Unknown word (Surfaces)      -- Current.Surfaces.Clear;
Engine/neo-world-graphics.adb:1553:17   - Unknown word (have)         -- -- We have found a suitable device
Engine/neo-world-graphics.adb:1553:22   - Unknown word (found)        -- -- We have found a suitable device, but
Engine/neo-world-graphics.adb:1553:89   - Unknown word (offer)        -- one our machine has to offer?
Engine/neo-world-graphics.adb:1557:25   - Unknown word (chosen)       -- -- Case 1: No chosen device - accept the
Engine/neo-world-graphics.adb:1557:64   - Unknown word (unconditionally) -- accept the current one unconditionally
Engine/neo-world-graphics.adb:155:30    - Unknown word (Lights)        -- for Light of Current.Lights loop
Engine/neo-world-graphics.adb:1560:28   - Unknown word (chosen)          -- -- Case 2: The chosen device is not discrete
Engine/neo-world-graphics.adb:1560:49   - Unknown word (discrete)        -- chosen device is not discrete and the current one
Engine/neo-world-graphics.adb:1560:83   - Unknown word (prefer)          -- the current one is - prefer the current one
Engine/neo-world-graphics.adb:1561:64   - Unknown word (PHYSICAL)        -- deviceType /= VK_PHYSICAL_DEVICE_TYPE_DISCRETE
Engine/neo-world-graphics.adb:1561:85   - Unknown word (DISCRETE)        -- PHYSICAL_DEVICE_TYPE_DISCRETE_GPU and
Engine/neo-world-graphics.adb:1562:64   - Unknown word (PHYSICAL)        -- Properties.deviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE
Engine/neo-world-graphics.adb:1562:85   - Unknown word (DISCRETE)        -- PHYSICAL_DEVICE_TYPE_DISCRETE_GPU)
Engine/neo-world-graphics.adb:1564:28   - Unknown word (chosen)          -- -- Case 3: The chosen device and the current
Engine/neo-world-graphics.adb:1564:66   - Unknown word (similar)         -- the current one are similar - prefer the one with
Engine/neo-world-graphics.adb:1564:76   - Unknown word (prefer)          -- current one are similar - prefer the one with more VRAM
Engine/neo-world-graphics.adb:1564:96   - Unknown word (more)            -- prefer the one with more VRAM
Engine/neo-world-graphics.adb:1565:66   - Unknown word (PHYSICAL)        -- deviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE
Engine/neo-world-graphics.adb:1565:87   - Unknown word (DISCRETE)        -- PHYSICAL_DEVICE_TYPE_DISCRETE_GPU and
Engine/neo-world-graphics.adb:1566:66   - Unknown word (PHYSICAL)        -- Properties.deviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE
Engine/neo-world-graphics.adb:1566:87   - Unknown word (DISCRETE)        -- PHYSICAL_DEVICE_TYPE_DISCRETE_GPU)
Engine/neo-world-graphics.adb:1567:72   - Unknown word (PHYSICAL)        -- deviceType /= VK_PHYSICAL_DEVICE_TYPE_DISCRETE
Engine/neo-world-graphics.adb:1567:93   - Unknown word (DISCRETE)        -- PHYSICAL_DEVICE_TYPE_DISCRETE_GPU and
Engine/neo-world-graphics.adb:1569:31   - Unknown word (Guess)           -- and then Guess_VRAM (Current_Memory
Engine/neo-world-graphics.adb:1569:72   - Unknown word (Guess)           -- Memory_Properties) > Guess_VRAM (Memory_Properties
Engine/neo-world-graphics.adb:1579:19   - Unknown word (unsuitable)      -- -- Ignore unsuitable devices and continue
Engine/neo-world-graphics.adb:1579:51   - Unknown word (looking)         -- devices and continue looking at the rest of them
Engine/neo-world-graphics.adb:1579:74   - Unknown word (them)            -- looking at the rest of them
Engine/neo-world-graphics.adb:1582:19   - Unknown word (have)            -- -- We may have failed to find a device
Engine/neo-world-graphics.adb:1582:34   - Unknown word (find)            -- We may have failed to find a device, so crash if
Engine/neo-world-graphics.adb:1582:52   - Unknown word (crash)           -- to find a device, so crash if thats the case
Engine/neo-world-graphics.adb:1582:61   - Unknown word (thats)           -- device, so crash if thats the case
Engine/neo-world-graphics.adb:1585:16   - Unknown word (additional)      -- -- Get additional device properties
Engine/neo-world-graphics.adb:1586:45   - Unknown word (Capabilities)    -- vkGetPhysicalDeviceSurfaceCapabilitiesKHR (Physical_Device
Engine/neo-world-graphics.adb:1590:61   - Unknown word (tiling)          -- tiling => VK
Engine/neo-world-graphics.adb:1590:96   - Unknown word (TILING)          -- => VK_IMAGE_TILING_OPTIMAL,
Engine/neo-world-graphics.adb:1597:108  - Unknown word (driver)          -- STR (Device_Properties.driverVersion));
Engine/neo-world-graphics.adb:1598:43   - Unknown word (Guess)           -- & To_Str (Real_64 (Guess_VRAM (Memory_Properties
Engine/neo-world-graphics.adb:1602:42   - Unknown word (Uniforms)        -- Unsigned_C (Buffered_Uniforms.Length) <= Device_Properties
Engine/neo-world-graphics.adb:1603:40   - Unknown word (Your)            -- when others => Error ("Your GPU is incompatible
Engine/neo-world-graphics.adb:1603:52   - Unknown word (incompatible)    -- Error ("Your GPU is incompatible!"); raise Program_Error
Engine/neo-world-graphics.adb:1605:10   - Unknown word (Logical)         -- -- Logical device
Engine/neo-world-graphics.adb:1615:23   - Unknown word (Sizes)           -- Descriptor_Pool_Sizes := ((typ
Engine/neo-world-graphics.adb:1615:72   - Unknown word (UNIFORM)         -- VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER,
Engine/neo-world-graphics.adb:1617:72   - Unknown word (COMBINED)        -- VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER,
Engine/neo-world-graphics.adb:161:22    - Unknown word (POLLING)       -- delay WINDOW_POLLING_DURATION - (Clock -
Engine/neo-world-graphics.adb:161:30    - Unknown word (DURATION)      -- delay WINDOW_POLLING_DURATION - (Clock - Last_Time
Engine/neo-world-graphics.adb:161:42    - Unknown word (Clock)         -- POLLING_DURATION - (Clock - Last_Time); Last_Time
Engine/neo-world-graphics.adb:161:75    - Unknown word (Clock)         -- Time); Last_Time := Clock;
Engine/neo-world-graphics.adb:1622:18   - Unknown word (fence)           -- -- Staging fence
Engine/neo-world-graphics.adb:1632:18   - Unknown word (staging)         -- -- Staging staging buffer
Engine/neo-world-graphics.adb:1635:18   - Unknown word (allocation)      -- -- Staging allocation size calculations
Engine/neo-world-graphics.adb:1635:34   - Unknown word (calculations)    -- Staging allocation size calculations
Engine/neo-world-graphics.adb:1637:7    - Unknown word (Alignment)       -- Alignment_Mod := Memory
Engine/neo-world-graphics.adb:1637:80   - Unknown word (alignment)       -- Memory_Requirements.alignment;
Engine/neo-world-graphics.adb:1640:88   - Unknown word (alignment)       -- Memory_Requirements.alignment - Alignment_Mod), others
Engine/neo-world-graphics.adb:1647:10   - Unknown word (Joint)           -- -- Joint buffer
Engine/neo-world-graphics.adb:1648:31   - Unknown word (Joint)           -- Buffer_Info := (size => Joint_Buffer.Size, usage
Engine/neo-world-graphics.adb:1648:75   - Unknown word (UNIFORM)         -- usage => VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT or VK_BUFFER
Engine/neo-world-graphics.adb:1649:77   - Unknown word (Joint)           -- Unchecked_Access, null, Joint_Buffer.Data'Unchecked
Engine/neo-world-graphics.adb:1650:40   - Unknown word (Joint)           -- Allocation.Allocate_Buffer (Joint_Buffer);
Engine/neo-world-graphics.adb:1651:45   - Unknown word (Joint)           -- vkBindBufferMemory (Device, Joint_Buffer.Data, Joint_Buffer
Engine/neo-world-graphics.adb:1653:10   - Unknown word (Uniforms)        -- -- Uniforms
Engine/neo-world-graphics.adb:1656:50   - Unknown word (UNIFORM)         -- usage => VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT or
Engine/neo-world-graphics.adb:1663:10   - Unknown word (Shaders)         -- -- Shaders
Engine/neo-world-graphics.adb:1664:16   - Unknown word (Shaders)         -- for I in Shaders.Iterate loop
Engine/neo-world-graphics.adb:1667:33   - Unknown word (made)            -- A complete shader is made of multiple stages
Engine/neo-world-graphics.adb:1667:41   - Unknown word (multiple)        -- complete shader is made of multiple stages - each with their
Engine/neo-world-graphics.adb:1667:50   - Unknown word (stages)          -- is made of multiple stages - each with their own
Engine/neo-world-graphics.adb:1667:59   - Unknown word (each)            -- of multiple stages - each with their own SPIR
Engine/neo-world-graphics.adb:1667:69   - Unknown word (their)           -- multiple stages - each with their own SPIR-V program
Engine/neo-world-graphics.adb:1667:79   - Unknown word (SPIR)            -- each with their own SPIR-V program
Engine/neo-world-graphics.adb:1667:86   - Unknown word (program)         -- with their own SPIR-V program
Engine/neo-world-graphics.adb:1668:29   - Unknown word (Stages)          -- for Stage of Shader.Stages loop
Engine/neo-world-graphics.adb:1669:76   - Unknown word (SHADER)          -- Vertex_Stage => VK_SHADER_STAGE_VERTEX_BIT,
Engine/neo-world-graphics.adb:1671:52   - Unknown word (Tesselation)     -- when Tesselation_Stage => VK_SHADER_STAGE
Engine/neo-world-graphics.adb:1671:89   - Unknown word (TESSELLATION)    -- Stage => VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT,
Engine/neo-world-graphics.adb:1672:89   - Unknown word (GEOMETRY)        -- => VK_SHADER_STAGE_GEOMETRY_BIT);
Engine/neo-world-graphics.adb:1674:24   - Unknown word (shader's)       -- -- Build the shader's current stage path and
Engine/neo-world-graphics.adb:1674:66   - Unknown word (exists)         -- stage path and verify it exists
Engine/neo-world-graphics.adb:1676:38   - Unknown word (SHADERS)        -- & U (PATH_SHADERS) & Map_Shader.Unsafe
Engine/neo-world-graphics.adb:1677:33   - Unknown word (Lower)          -- & To_Lower (Stage.Kind'Wide_Image
Engine/neo-world-graphics.adb:1677:51   - Unknown word (Wide)           -- To_Lower (Stage.Kind'Wide_Image) (1..4) & ".spv
Engine/neo-world-graphics.adb:1678:18   - Unknown word (Exists)         -- if not Exists (To_Str_8 (S (Shader
Engine/neo-world-graphics.adb:1679:21   - Unknown word (Missing)        -- Error ("Missing shader stage " & S
Engine/neo-world-graphics.adb:1683:31   - Unknown word (SPIR)           -- -- Load the stage's SPIR-V data
Engine/neo-world-graphics.adb:1684:74   - Unknown word (Padding)        -- Load (S (Shader_Path), Padding => 4); begin
Engine/neo-world-graphics.adb:1685:20   - Unknown word (Module)         -- Shader_Module_Info := (codeSize =
Engine/neo-world-graphics.adb:1686:37   - Unknown word (Module)         -- vkAssert (vkCreateShaderModule (Device, Shader_Module
Engine/neo-world-graphics.adb:1686:60   - Unknown word (Module)         -- eShaderModule (Device, Shader_Module_Info'Unchecked_Access
Engine/neo-world-graphics.adb:1687:50   - Unknown word (loading)        -- others => Error ("Error loading shader " & S (Shader
Engine/neo-world-graphics.adb:1690:18   - Unknown word (Stages)         -- Shader.Stages_Info.Append ((stage
Engine/neo-world-graphics.adb:1690:62   - Unknown word (module)         -- stage => Shader_Flags, module => Stage.Program, pName
Engine/neo-world-graphics.adb:1692:46   - Unknown word (uniforms)       -- descriptors and related uniforms
Engine/neo-world-graphics.adb:1695:22   - Unknown word (Bindings)       -- Layout_Bindings.Append ((binding
Engine/neo-world-graphics.adb:1695:40   - Unknown word (binding)        -- Layout_Bindings.Append ((binding => Base_Color
Engine/neo-world-graphics.adb:1696:77   - Unknown word (COMBINED)       -- VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER,
Engine/neo-world-graphics.adb:1698:22   - Unknown word (Bindings)       -- Layout_Bindings.Append ((binding
Engine/neo-world-graphics.adb:1698:40   - Unknown word (binding)        -- Layout_Bindings.Append ((binding => Enable_Base
Engine/neo-world-graphics.adb:1701:22   - Unknown word (Bindings)       -- Layout_Bindings.Append ((binding
Engine/neo-world-graphics.adb:1701:40   - Unknown word (binding)        -- Layout_Bindings.Append ((binding => Specular_Sampler
Engine/neo-world-graphics.adb:1702:77   - Unknown word (COMBINED)       -- VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER,
Engine/neo-world-graphics.adb:1704:22   - Unknown word (Bindings)       -- Layout_Bindings.Append ((binding
Engine/neo-world-graphics.adb:1704:40   - Unknown word (binding)        -- Layout_Bindings.Append ((binding => Normal_Sampler
Engine/neo-world-graphics.adb:1705:77   - Unknown word (COMBINED)       -- VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER,
Engine/neo-world-graphics.adb:1707:40   - Unknown word (binding)        -- Layout_Bindings.Append ((binding => Enable_Specular
Engine/neo-world-graphics.adb:1717:36   - Unknown word (UNBOUND)        -- Uniform /= NULL_STR_UNBOUND then
Engine/neo-world-graphics.adb:171:19    - Unknown word (main)          -- -- Signal the main task to perform a restart
Engine/neo-world-graphics.adb:171:32    - Unknown word (perform)       -- Signal the main task to perform a restart and give it
Engine/neo-world-graphics.adb:171:54    - Unknown word (give)          -- perform a restart and give it some time
Engine/neo-world-graphics.adb:171:62    - Unknown word (some)          -- restart and give it some time
Engine/neo-world-graphics.adb:1725:59   - Unknown word (Skinning)       -- binding => Enable_Skinning.Get_Binding,
Engine/neo-world-graphics.adb:1739:53   - Unknown word (Allocator)      -- pAllocator => null,
Engine/neo-world-graphics.adb:1746:34   - Unknown word (Layouts)        -- Shader_Pipeline_Info.pSetLayouts := Shader.Descriptor
Engine/neo-world-graphics.adb:1749:12   - Unknown word (Overwrite)      -- -- Overwrite the initial shader with
Engine/neo-world-graphics.adb:1749:26   - Unknown word (initial)        -- -- Overwrite the initial shader with the fully
Engine/neo-world-graphics.adb:1749:50   - Unknown word (fully)          -- initial shader with the fully loaded one
Engine/neo-world-graphics.adb:1749:56   - Unknown word (loaded)         -- shader with the fully loaded one
Engine/neo-world-graphics.adb:174:28    - Unknown word (Occupied)      -- Framebuffer_Status.Occupied (False);
Engine/neo-world-graphics.adb:174:38    - Unknown word (False)         -- Framebuffer_Status.Occupied (False);
Engine/neo-world-graphics.adb:1753:10   - Unknown word (Kick)           -- -- Kick off the second stage
Engine/neo-world-graphics.adb:1753:23   - Unknown word (second)         -- -- Kick off the second stage!
Engine/neo-world-graphics.adb:1755:45   - Unknown word (driver)         -- others => Error ("Vulkan driver not installed or up
Engine/neo-world-graphics.adb:1755:56   - Unknown word (installed)      -- ("Vulkan driver not installed or up to date?"); raise
Engine/neo-world-graphics.adb:1755:75   - Unknown word (date)           -- not installed or up to date?"); raise Program_Error
Engine/neo-world-graphics.adb:1758:15   - Unknown word (Drawing)        -- -- Finalize_Drawing --
Engine/neo-world-graphics.adb:1761:11   - Unknown word (anything)       -- -- Kill anything that is not controlled
Engine/neo-world-graphics.adb:1761:32   - Unknown word (controlled)     -- anything that is not controlled
Engine/neo-world-graphics.adb:1761:6    - Unknown word (Kill)           -- -- Kill anything that is not
Engine/neo-world-graphics.adb:1762:22   - Unknown word (Drawing)        -- procedure Finalize_Drawing is
Engine/neo-world-graphics.adb:1779:28   - Unknown word (Fences)         -- -vkAssert (vkWaitForFences (Device, 1, Staging
Engine/neo-world-graphics.adb:177:15    - Unknown word (shouldn't)     -- -- We shouldn't reach here since a restart
Engine/neo-world-graphics.adb:177:25    - Unknown word (reach)         -- -- We shouldn't reach here since a restart
Engine/neo-world-graphics.adb:177:31    - Unknown word (here)          -- We shouldn't reach here since a restart would
Engine/neo-world-graphics.adb:177:36    - Unknown word (since)         -- shouldn't reach here since a restart would entail
Engine/neo-world-graphics.adb:177:52    - Unknown word (would)         -- here since a restart would entail finalizing the
Engine/neo-world-graphics.adb:177:58    - Unknown word (entail)        -- since a restart would entail finalizing the backend
Engine/neo-world-graphics.adb:177:65    - Unknown word (finalizing)    -- restart would entail finalizing the backend task...
Engine/neo-world-graphics.adb:178:15    - Unknown word (Program)       -- raise Program_Error;
Engine/neo-world-graphics.adb:1791:17   - Unknown word (heaps)          -- -- Memory heaps and chunks
Engine/neo-world-graphics.adb:1791:27   - Unknown word (chunks)         -- -- Memory heaps and chunks
Engine/neo-world-graphics.adb:1792:53   - Unknown word (Finalization)   -- Buffers (Force_Total_Finalization => True);
Engine/neo-world-graphics.adb:1792:69   - Unknown word (True)           -- Total_Finalization => True);
Engine/neo-world-graphics.adb:17:15     - Unknown word (Texture)      -- with Neo.Data.Texture; use Neo.Data.Texture
Engine/neo-world-graphics.adb:17:37     - Unknown word (Texture)      -- Texture; use Neo.Data.Texture;
Engine/neo-world-graphics.adb:1801:6    - Unknown word (Draw)           -- -- Draw --
Engine/neo-world-graphics.adb:1804:11   - Unknown word (drawing)        -- -- Main drawing routine reponsible for
Engine/neo-world-graphics.adb:1804:19   - Unknown word (routine)        -- -- Main drawing routine reponsible for managing
Engine/neo-world-graphics.adb:1804:27   - Unknown word (reponsible)     -- Main drawing routine reponsible for managing pipelines
Engine/neo-world-graphics.adb:1804:42   - Unknown word (managing)       -- routine reponsible for managing pipelines
Engine/neo-world-graphics.adb:1804:6    - Unknown word (Main)           -- -- Main drawing routine reponsible
Engine/neo-world-graphics.adb:1805:13   - Unknown word (Draw)           -- procedure Draw (Data : Bottom_Level
Engine/neo-world-graphics.adb:1805:26   - Unknown word (Bottom)         -- procedure Draw (Data : Bottom_Level_State; Frame
Engine/neo-world-graphics.adb:1806:97   - Unknown word (color)          -- Materials.Get ("default_base_color");
Engine/neo-world-graphics.adb:1807:72   - Unknown word (Basically)      -- C := 0; -- Basically junk
Engine/neo-world-graphics.adb:1807:82   - Unknown word (junk)           -- := 0; -- Basically junk
Engine/neo-world-graphics.adb:1811:71   - Unknown word (Layouts)        -- pSetLayouts => Pipeline.Shader
Engine/neo-world-graphics.adb:1816:15   - Unknown word (meterial)       -- -- Flag a meterial texture and setup a
Engine/neo-world-graphics.adb:1816:24   - Unknown word (texture)        -- -- Flag a meterial texture and setup a sampler
Engine/neo-world-graphics.adb:1816:36   - Unknown word (setup)          -- meterial texture and setup a sampler
Engine/neo-world-graphics.adb:1816:44   - Unknown word (sampler)        -- texture and setup a sampler
Engine/neo-world-graphics.adb:1816:8    - Unknown word (Flag)           -- -- Flag a meterial texture and
Engine/neo-world-graphics.adb:1819:32   - Unknown word (Flag)           -- Set_Flag : access procedure
Engine/neo-world-graphics.adb:181:24    - Unknown word (presentation)  -- -- Image index for presentation
Engine/neo-world-graphics.adb:1821:45   - Unknown word (Flag)           -- Length = 0 then Set_Flag (False); return; end
Engine/neo-world-graphics.adb:1822:13   - Unknown word (Flag)           -- Set_Flag (True);
Engine/neo-world-graphics.adb:1826:17   - Unknown word (Draw)           -- -- Start of Draw
Engine/neo-world-graphics.adb:1829:15   - Unknown word (joints)         -- -- Bind joints
Engine/neo-world-graphics.adb:1830:22   - Unknown word (Animated)       -- - if Data.Is_Animated then
Engine/neo-world-graphics.adb:1832:13   - Unknown word (Joints)         -- -- Joints : Vector_Joint.Unsafe
Engine/neo-world-graphics.adb:1832:62   - Unknown word (Pose)          -- Array (1..Int (Data.Pose.Node_Count)) := (others
Engine/neo-world-graphics.adb:1834:15   - Unknown word (Writes)        -- -- Writes.Append ((Is_Image
Engine/neo-world-graphics.adb:1836:47   - Unknown word (offset)        -- offset => Joint_Buffer.Offset
Engine/neo-world-graphics.adb:1837:47   - Unknown word (rang)          -- rang => Joint_Buffer.Size
Engine/neo-world-graphics.adb:1838:66   - Unknown word (JOINT)         -- (dstBinding => JOINT_BUFFER_BINDING,
Engine/neo-world-graphics.adb:1838:79   - Unknown word (BINDING)       -- => JOINT_BUFFER_BINDING,
Engine/neo-world-graphics.adb:183:31    - Unknown word (Unsigned)      -- Index : aliased Int_Unsigned_C := 0;
Engine/neo-world-graphics.adb:1841:101  - Unknown word (Joints)        -- State'Object_Size * Joints'Length / Byte'Size)
Engine/neo-world-graphics.adb:1841:55   - Unknown word (Joints)        -- Buffer (Joint_Buffer, Joints (1)'Address, Joint_State
Engine/neo-world-graphics.adb:1845:10   - Unknown word (Draw)          -- -- Draw surfaces of the mesh
Engine/neo-world-graphics.adb:1845:15   - Unknown word (surfaces)      -- -- Draw surfaces of the mesh that match
Engine/neo-world-graphics.adb:1849:21   - Unknown word (away)          -- -- Optimize away unneeded material passes
Engine/neo-world-graphics.adb:1849:26   - Unknown word (unneeded)      -- -- Optimize away unneeded material passes
Engine/neo-world-graphics.adb:1849:44   - Unknown word (passes)        -- away unneeded material passes
Engine/neo-world-graphics.adb:1853:44   - Unknown word (decal)         -- Segment.Material), "decal") /= 0 then
Engine/neo-world-graphics.adb:185:8     - Unknown word (Timing)        -- -- Timing
Engine/neo-world-graphics.adb:1863:27   - Unknown word (searching)     -- -- Optimize out searching through buffered pipelines
Engine/neo-world-graphics.adb:1863:37   - Unknown word (through)       -- Optimize out searching through buffered pipelines if
Engine/neo-world-graphics.adb:1863:71   - Unknown word (previous)      -- buffered pipelines if our previous one is a match
Engine/neo-world-graphics.adb:1866:24   - Unknown word (Gotos)         -- goto Have_Pipeline; -- Gotos to keep the nesting
Engine/neo-world-graphics.adb:1866:33   - Unknown word (keep)          -- Pipeline; -- Gotos to keep the nesting sane
Engine/neo-world-graphics.adb:1866:42   - Unknown word (nesting)       -- - Gotos to keep the nesting sane
Engine/neo-world-graphics.adb:1866:50   - Unknown word (sane)          -- to keep the nesting sane
Engine/neo-world-graphics.adb:1866:6    - Unknown word (Have)          -- goto Have_Pipeline; -- Gotos to
Engine/neo-world-graphics.adb:186:10    - Unknown word (Frame)         -- Last_Frame_Time : Time := Clock
Engine/neo-world-graphics.adb:186:33    - Unknown word (Clock)         -- Frame_Time : Time := Clock + WINDOW_POLLING_DURATION
Engine/neo-world-graphics.adb:186:48    - Unknown word (POLLING)       -- Time := Clock + WINDOW_POLLING_DURATION;
Engine/neo-world-graphics.adb:186:56    - Unknown word (DURATION)      -- Clock + WINDOW_POLLING_DURATION;
Engine/neo-world-graphics.adb:1870:63   - Unknown word (Linear)        -- Buffered_Pipelines loop -- Linear search....
Engine/neo-world-graphics.adb:1873:6    - Unknown word (Have)          -- goto Have_Pipeline;
Engine/neo-world-graphics.adb:1877:47   - Unknown word (found)         -- pipeline if one was not found
Engine/neo-world-graphics.adb:187:10    - Unknown word (Collect)       -- Last_Collect_Time : Time := Clock
Engine/neo-world-graphics.adb:187:33    - Unknown word (Clock)         -- Collect_Time : Time := Clock;
Engine/neo-world-graphics.adb:1880:30   - Unknown word (junk)          -- -- Static viewport junk
Engine/neo-world-graphics.adb:1885:45   - Unknown word (width)         -- width => Real_C (Surface
Engine/neo-world-graphics.adb:1886:45   - Unknown word (height)        -- height => Real_C (Surface
Engine/neo-world-graphics.adb:1887:11   - Unknown word (Scissor)       -- Scissor : aliased VkRect2D
Engine/neo-world-graphics.adb:1887:31   - Unknown word (Rect)          -- Scissor : aliased VkRect2D := (offset => (0,
Engine/neo-world-graphics.adb:1887:42   - Unknown word (offset)        -- aliased VkRect2D := (offset => (0, 0), extent =
Engine/neo-world-graphics.adb:1887:60   - Unknown word (extent)        -- (offset => (0, 0), extent => Surface_Extent, others
Engine/neo-world-graphics.adb:1889:80   - Unknown word (Viewports)     -- pViewports => Viewport'Unchecked
Engine/neo-world-graphics.adb:1890:79   - Unknown word (scissor)       -- scissorCount => 1,
Engine/neo-world-graphics.adb:1891:80   - Unknown word (Scissors)      -- pScissors => Scissor'Unchecked
Engine/neo-world-graphics.adb:1891:96   - Unknown word (Scissor)       -- pScissors => Scissor'Unchecked_Access, others
Engine/neo-world-graphics.adb:1892:109  - Unknown word (TOPOLOGY)      -- topology => VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST,
Engine/neo-world-graphics.adb:1892:118  - Unknown word (TRIANGLE)      -- VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST,
Engine/neo-world-graphics.adb:1892:84   - Unknown word (topology)      -- utAssemblyStateCreateInfo := (topology => VK_PRIMITIVE_TOPOLOGY
Engine/neo-world-graphics.adb:1892:99   - Unknown word (PRIMITIVE)     -- CreateInfo := (topology => VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST
Engine/neo-world-graphics.adb:1893:113  - Unknown word (FALSE)         -- primitiveRestartEnable => VK_FALSE, others => <>);
Engine/neo-world-graphics.adb:1893:84   - Unknown word (primitive)     -- primitiveRestartEnable => VK_FALSE
Engine/neo-world-graphics.adb:1894:108  - Unknown word (FALSE)         -- sampleShadingEnable => VK_FALSE,
Engine/neo-world-graphics.adb:1894:11   - Unknown word (Multisample)   -- Multisample_Info : aliased VkPipelineM
Engine/neo-world-graphics.adb:1894:51   - Unknown word (Multisample)   -- : aliased VkPipelineMultisampleStateCreateInfo := (sampleShad
Engine/neo-world-graphics.adb:1894:88   - Unknown word (Shading)       -- mpleStateCreateInfo := (sampleShadingEnable => VK_FALSE,
Engine/neo-world-graphics.adb:1895:82   - Unknown word (rasterization) -- rasterizationSamples => VK_SAMPLE
Engine/neo-world-graphics.adb:1896:66   - Unknown word (rasterization) -- --rasterizationSamples => Image_Properties
Engine/neo-world-graphics.adb:1897:75   - Unknown word (Shading)       -- --minSampleShading => 0.0, -- 1.0,
Engine/neo-world-graphics.adb:189:28    - Unknown word (frame)         -- Buffer settings for frame commands
Engine/neo-world-graphics.adb:1903:56   - Unknown word (BINDING)       -- ngDescriptions => VERTEX_BINDING'Unchecked_Access,
Engine/neo-world-graphics.adb:1906:18   - Unknown word (Stages)        -- Shader_Stages_Info : aliased Array
Engine/neo-world-graphics.adb:1909:14   - Unknown word (Rasterization) -- -- Rasterization
Engine/neo-world-graphics.adb:190:103   - Unknown word (SIMULTANEOUS)  -- COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT, others =>
Engine/neo-world-graphics.adb:190:70    - Unknown word (flags)         -- VkCommandBufferBeginInfo := (flags => VK_COMMAND_BUFFER
Engine/neo-world-graphics.adb:1910:11   - Unknown word (Rasterizer)    -- Rasterizer_Info : aliased VkPipelineRast
Engine/neo-world-graphics.adb:1910:47   - Unknown word (Rasterization) -- : aliased VkPipelineRasterizationStateCreateInfo :=
Engine/neo-world-graphics.adb:1911:57   - Unknown word (FILL)          -- => VK_POLYGON_MODE_FILL,
Engine/neo-world-graphics.adb:1912:14   - Unknown word (rasterizer)    -- rasterizerDiscardEnable => VK_FALSE
Engine/neo-world-graphics.adb:1912:24   - Unknown word (Discard)       -- rasterizerDiscardEnable => VK_FALSE,
Engine/neo-world-graphics.adb:1914:19   - Unknown word (Bias)          -- depthBiasEnable => To
Engine/neo-world-graphics.adb:1917:14   - Unknown word (cull)          -- cullMode
Engine/neo-world-graphics.adb:1917:56   - Unknown word (Cull)          -- => (case Pipeline.Cull_Mode is
Engine/neo-world-graphics.adb:1918:112  - Unknown word (CULL)          -- Mirror_View then VK_CULL_MODE_FRONT_BIT
Engine/neo-world-graphics.adb:1918:52   - Unknown word (CULL)          -- when VK_CULL_MODE_BACK_BIT => (if
Engine/neo-world-graphics.adb:1918:62   - Unknown word (BACK)          -- when VK_CULL_MODE_BACK_BIT => (if Pipeline
Engine/neo-world-graphics.adb:1918:92   - Unknown word (Mirror)        -- => (if Pipeline.Has_Mirror_View then VK_CULL_MODE
Engine/neo-world-graphics.adb:1919:112  - Unknown word (CULL)          -- else VK_CULL_MODE_BACK_BIT),
Engine/neo-world-graphics.adb:1919:122  - Unknown word (BACK)          -- else VK_CULL_MODE_BACK_BIT),
Engine/neo-world-graphics.adb:1920:112  - Unknown word (CULL)          -- Mirror_View then VK_CULL_MODE_BACK_BIT
Engine/neo-world-graphics.adb:1920:122  - Unknown word (BACK)          -- View then VK_CULL_MODE_BACK_BIT
Engine/neo-world-graphics.adb:1920:52   - Unknown word (CULL)          -- when VK_CULL_MODE_FRONT_BIT => (if
Engine/neo-world-graphics.adb:1920:92   - Unknown word (Mirror)        -- => (if Pipeline.Has_Mirror_View then VK_CULL_MODE
Engine/neo-world-graphics.adb:1922:68   - Unknown word (Cull)          -- when others => Pipeline.Cull_Mode), others => <>
Engine/neo-world-graphics.adb:1924:20   - Unknown word (stencil)       -- -- Depth stencil
Engine/neo-world-graphics.adb:1925:17   - Unknown word (Stencil)       -- Depth_Stencil_Info : aliased VkPipelineDept
Engine/neo-world-graphics.adb:1925:55   - Unknown word (Stencil)       -- aliased VkPipelineDepthStencilStateCreateInfo :=
Engine/neo-world-graphics.adb:1929:19   - Unknown word (Bounds)        -- depthBoundsTestEnable => To_VkBool
Engine/neo-world-graphics.adb:1929:61   - Unknown word (Depths)        -- To_VkBool32 (Pipeline.Depths_Bounds_Test),
Engine/neo-world-graphics.adb:1929:68   - Unknown word (Bounds)        -- VkBool32 (Pipeline.Depths_Bounds_Test),
Engine/neo-world-graphics.adb:1930:22   - Unknown word (Bounds)        -- minDepthBounds => 0.0,
Engine/neo-world-graphics.adb:1931:22   - Unknown word (Bounds)        -- maxDepthBounds => 0.0,
Engine/neo-world-graphics.adb:1933:78   - Unknown word (Back)          -- if not Pipeline.Has_Back_Stencil then False
Engine/neo-world-graphics.adb:1933:83   - Unknown word (Stencil)       -- not Pipeline.Has_Back_Stencil then False
Engine/neo-world-graphics.adb:1934:73   - Unknown word (Back)          -- else (Pipeline.Back_Fail
Engine/neo-world-graphics.adb:1935:77   - Unknown word (Back)          -- or Pipeline.Back_Pass
Engine/neo-world-graphics.adb:1936:77   - Unknown word (Back)          -- or Pipeline.Back_Depth_Fail) /= 0)),
Engine/neo-world-graphics.adb:193:104   - Unknown word (depth)         -- .0, 0.0, 0.0, 1.0), depthStencil => (1.0, 0))
Engine/neo-world-graphics.adb:193:109   - Unknown word (Stencil)       -- .0, 0.0, 1.0), depthStencil => (1.0, 0)));
Engine/neo-world-graphics.adb:193:73    - Unknown word (color)         -- VkClearValue := (1..2 => (color => (0.0, 0.0, 0.0,
Engine/neo-world-graphics.adb:1944:14   - Unknown word (back)          -- back =>
Engine/neo-world-graphics.adb:1948:72   - Unknown word (Back)          -- => (if Pipeline.Has_Back_Stencil then Pipeline
Engine/neo-world-graphics.adb:1955:20   - Unknown word (Blend)         -- -- Color Blend
Engine/neo-world-graphics.adb:1956:17   - Unknown word (Blend)         -- Color_Blend_Attachment : aliased
Engine/neo-world-graphics.adb:1956:59   - Unknown word (Blend)         -- aliased VkPipelineColorBlendAttachmentState :=
Engine/neo-world-graphics.adb:1957:22   - Unknown word (Blend)         -- (srcColorBlendFactor => Pipeline.Source
Engine/neo-world-graphics.adb:1957:53   - Unknown word (Blend)         -- lendFactor => Pipeline.Source_Blend_Factor,
Engine/neo-world-graphics.adb:1961:14   - Unknown word (color)         -- colorBlendOp => Pipeline
Engine/neo-world-graphics.adb:1963:14   - Unknown word (blend)         -- blendEnable => (if
Engine/neo-world-graphics.adb:1963:81   - Unknown word (BLEND)         -- estination_Blend_Factor /= VK_BLEND_FACTOR_ZERO
Engine/neo-world-graphics.adb:1964:78   - Unknown word (BLEND)         -- Source_Blend_Factor /= VK_BLEND_FACTOR_ONE then VK_TRUE
Engine/neo-world-graphics.adb:1970:78   - Unknown word (logic)         -- ColorBlendStateCreateInfo := (logicOpEnable => VK_FALSE
Engine/neo-world-graphics.adb:1971:100  - Unknown word (LOGIC)         -- logicOp => VK_LOGIC_OP_COPY,
Engine/neo-world-graphics.adb:1971:78   - Unknown word (logic)         -- logicOp => VK_LOGIC
Engine/neo-world-graphics.adb:1974:78   - Unknown word (blend)         -- blendConstants => (others
Engine/neo-world-graphics.adb:1974:83   - Unknown word (Constants)     -- blendConstants => (others => 0.0)
Engine/neo-world-graphics.adb:1977:78   - Unknown word (SCISSOR)       -- = (VK_DYNAMIC_STATE_SCISSOR,
Engine/neo-world-graphics.adb:1979:121  - Unknown word (BIAS)          -- DYNAMIC_STATE_DEPTH_BIAS
Engine/neo-world-graphics.adb:197:70    - Unknown word (Area)          -- renderArea => (offset =>
Engine/neo-world-graphics.adb:197:84    - Unknown word (offset)        -- renderArea => (offset => (0, 0),
Engine/neo-world-graphics.adb:1980:102  - Unknown word (Jump)          -- STATE_DEPTH_BOUNDS), -- Jump through some hoops
Engine/neo-world-graphics.adb:1980:107  - Unknown word (through)       -- DEPTH_BOUNDS), -- Jump through some hoops ???
Engine/neo-world-graphics.adb:1980:115  - Unknown word (some)          -- BOUNDS), -- Jump through some hoops ???
Engine/neo-world-graphics.adb:1980:120  - Unknown word (hoops)         -- - Jump through some hoops ???
Engine/neo-world-graphics.adb:1980:90   - Unknown word (BOUNDS)        -- DYNAMIC_STATE_DEPTH_BOUNDS), -- Jump through some
Engine/neo-world-graphics.adb:1981:84   - Unknown word (BIAS)          -- DYNAMIC_STATE_DEPTH_BIAS);
Engine/neo-world-graphics.adb:198:102   - Unknown word (Extent)        -- extent => Surface_Extent),others => <>);
Engine/neo-world-graphics.adb:198:84    - Unknown word (extent)        -- extent => Surface_Extent),others
Engine/neo-world-graphics.adb:198:94    - Unknown word (Surface)       -- extent => Surface_Extent),others => <
Engine/neo-world-graphics.adb:1992:69   - Unknown word (Rasterization) -- pRasterizationState => Rasterizer_Info
Engine/neo-world-graphics.adb:1992:91   - Unknown word (Rasterizer)    -- pRasterizationState => Rasterizer_Info'Unchecked_Access
Engine/neo-world-graphics.adb:1993:69   - Unknown word (Multisample)   -- pMultisampleState => Multisample
Engine/neo-world-graphics.adb:1993:91   - Unknown word (Multisample)   -- pMultisampleState => Multisample_Info'Unchecked_Access
Engine/neo-world-graphics.adb:1997:68   - Unknown word (subpass)       -- subpass => 0,
Engine/neo-world-graphics.adb:1998:80   - Unknown word (Handle)        -- basePipelineHandle => NULL_PTR,
Engine/neo-world-graphics.adb:2008:57   - Unknown word (Infos)         -- pCreateInfos => Pipeline_Info
Engine/neo-world-graphics.adb:2009:51   - Unknown word (Allocator)     -- pAllocator => null,
Engine/neo-world-graphics.adb:200:14    - Unknown word (presentation)  -- -- Image presentation information
Engine/neo-world-graphics.adb:2014:103  - Unknown word (draw)          -- searching on the next draw
Engine/neo-world-graphics.adb:2014:34   - Unknown word (remember)      -- current pipeline and remember the previous one to
Engine/neo-world-graphics.adb:2014:47   - Unknown word (previous)      -- pipeline and remember the previous one to potentially avoid
Engine/neo-world-graphics.adb:2014:63   - Unknown word (potentially)   -- the previous one to potentially avoid searching on the
Engine/neo-world-graphics.adb:2014:75   - Unknown word (avoid)         -- previous one to potentially avoid searching on the next
Engine/neo-world-graphics.adb:2014:81   - Unknown word (searching)     -- to potentially avoid searching on the next draw
Engine/neo-world-graphics.adb:2015:3    - Unknown word (Have)          -- <<Have_Pipeline>>
Engine/neo-world-graphics.adb:2018:19   - Unknown word (writes)        -- -- Bind writes linked with their appropriate
Engine/neo-world-graphics.adb:2018:38   - Unknown word (their)         -- Bind writes linked with their appropriate additional
Engine/neo-world-graphics.adb:2018:44   - Unknown word (appropriate)   -- writes linked with their appropriate additional structure
Engine/neo-world-graphics.adb:2018:56   - Unknown word (additional)    -- with their appropriate additional structure (e.g. VkDescriptorB
Engine/neo-world-graphics.adb:2018:67   - Unknown word (structure)     -- appropriate additional structure (e.g. VkDescriptorBufferInfo
Engine/neo-world-graphics.adb:201:30    - Unknown word (Present)       -- Present_Info : aliased VkPresentInfoKHR := (swapchainCount
Engine/neo-world-graphics.adb:201:49    - Unknown word (swapchain)     -- VkPresentInfoKHR := (swapchainCount => 1,
Engine/neo-world-graphics.adb:201:5     - Unknown word (Present)       -- Present_Info : aliased VkPresentInfoK
Engine/neo-world-graphics.adb:2020:14   - Unknown word (Writes)        -- if Writes.Length > 0 then
Engine/neo-world-graphics.adb:2022:13   - Unknown word (Writes)        -- Writes_Internal : Vector_Write
Engine/neo-world-graphics.adb:2022:20   - Unknown word (Internal)      -- Writes_Internal : Vector_Write_Descriptor
Engine/neo-world-graphics.adb:2023:13   - Unknown word (Resulting)     -- Resulting_Writes : Array_VkWriteDescrip
Engine/neo-world-graphics.adb:2023:67   - Unknown word (Internal)      -- VkWriteDescriptorSet (Writes_Internal'Range) := (others =
Engine/neo-world-graphics.adb:2025:31   - Unknown word (Internal)      -- for I in Writes_Internal'Range loop
Engine/neo-world-graphics.adb:2026:17   - Unknown word (Resulting)     -- Resulting_Writes (I)        :
Engine/neo-world-graphics.adb:2026:55   - Unknown word (Internal)      -- I) := Writes_Internal (I).Set;
Engine/neo-world-graphics.adb:2027:17   - Unknown word (Resulting)     -- Resulting_Writes (I).dstSet :
Engine/neo-world-graphics.adb:2028:27   - Unknown word (Internal)      -- if Writes_Internal (I).Is_Image then
Engine/neo-world-graphics.adb:2029:19   - Unknown word (Resulting)     -- Resulting_Writes (I).pImageInfo
Engine/neo-world-graphics.adb:202:50    - Unknown word (Swapchains)    -- pSwapchains => Swapchain
Engine/neo-world-graphics.adb:202:71    - Unknown word (Swapchain)     -- pSwapchains => Swapchain'Unchecked_Access,
Engine/neo-world-graphics.adb:2031:19   - Unknown word (Resulting)     -- Resulting_Writes (I).pBufferInfo
Engine/neo-world-graphics.adb:2038:19   - Unknown word (everything)    -- -- Bind everything
Engine/neo-world-graphics.adb:2039:64   - Unknown word (BIND)          -- Commands, VK_PIPELINE_BIND_POINT_GRAPHICS, Current
Engine/neo-world-graphics.adb:2039:75   - Unknown word (GRAPHICS)      -- PIPELINE_BIND_POINT_GRAPHICS, Current_Pipeline);
Engine/neo-world-graphics.adb:203:49    - Unknown word (wait)          -- waitSemaphoreCount => 1,
Engine/neo-world-graphics.adb:2041:70   - Unknown word (BIND)          -- lineBindPoint => VK_PIPELINE_BIND_POINT_GRAPHICS,
Engine/neo-world-graphics.adb:2041:81   - Unknown word (GRAPHICS)      -- PIPELINE_BIND_POINT_GRAPHICS,
Engine/neo-world-graphics.adb:2047:44   - Unknown word (Offsets)       -- pDynamicOffsets => null);
Engine/neo-world-graphics.adb:2051:68   - Unknown word (Vertices)      -- => Data.Mesh.Vertices.Data'Address,
Engine/neo-world-graphics.adb:2052:37   - Unknown word (Offsets)       -- pOffsets => Bind_Vertex
Engine/neo-world-graphics.adb:2058:14   - Unknown word (Draw)          -- -- Draw
Engine/neo-world-graphics.adb:2059:20   - Unknown word (Indexed)       -- vkCmdDrawIndexed (Frame.Commands, Int
Engine/neo-world-graphics.adb:2065:10   - Unknown word (Kill)          -- -- Kill the current Descriptor
Engine/neo-world-graphics.adb:206:105   - Unknown word (additional)   -- transition to avoid additional image barriers
Engine/neo-world-graphics.adb:206:122   - Unknown word (barriers)     -- avoid additional image barriers
Engine/neo-world-graphics.adb:206:37    - Unknown word (present)      -- Transition our swap image to present instead of having the
Engine/neo-world-graphics.adb:206:45    - Unknown word (instead)      -- swap image to present instead of having the renderpass
Engine/neo-world-graphics.adb:206:56    - Unknown word (having)       -- to present instead of having the renderpass do the
Engine/neo-world-graphics.adb:206:67    - Unknown word (renderpass)   -- instead of having the renderpass do the transition to
Engine/neo-world-graphics.adb:206:99    - Unknown word (avoid)        -- do the transition to avoid additional image barriers
Engine/neo-world-graphics.adb:207:100   - Unknown word (IGNORED)      -- amilyIndex => VK_QUEUE_FAMILY_IGNORED,
Engine/neo-world-graphics.adb:207:11    - Unknown word (Memory)       -- Image_Memory_Barrier : aliased VkImageMemo
Engine/neo-world-graphics.adb:207:18    - Unknown word (Barrier)      -- Image_Memory_Barrier : aliased VkImageMemoryBarrie
Engine/neo-world-graphics.adb:207:43    - Unknown word (Memory)       -- Barrier : aliased VkImageMemoryBarrier := (srcQueueFamilyInde
Engine/neo-world-graphics.adb:207:49    - Unknown word (Barrier)      -- aliased VkImageMemoryBarrier := (srcQueueFamilyIndex
Engine/neo-world-graphics.adb:208:100   - Unknown word (IGNORED)      -- amilyIndex => VK_QUEUE_FAMILY_IGNORED,
Engine/neo-world-graphics.adb:209:100   - Unknown word (UNDEFINED)    -- => VK_IMAGE_LAYOUT_UNDEFINED,
Engine/neo-world-graphics.adb:209:64    - Unknown word (Layout)       -- oldLayout => VK_IMAGE
Engine/neo-world-graphics.adb:209:93    - Unknown word (LAYOUT)       -- => VK_IMAGE_LAYOUT_UNDEFINED,
Engine/neo-world-graphics.adb:20:24     - Unknown word (Graphics)     -- package body Neo.World.Graphics is
Engine/neo-world-graphics.adb:210:100   - Unknown word (PRESENT)      -- => VK_IMAGE_LAYOUT_PRESENT_SRC_KHR,
Engine/neo-world-graphics.adb:210:64    - Unknown word (Layout)       -- newLayout => VK_IMAGE
Engine/neo-world-graphics.adb:210:93    - Unknown word (LAYOUT)       -- => VK_IMAGE_LAYOUT_PRESENT_SRC_KHR,
Engine/neo-world-graphics.adb:211:94    - Unknown word (COLOR)        -- AccessMask => VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT
Engine/neo-world-graphics.adb:212:112   - Unknown word (ASPECT)       -- aspectMask => VK_IMAGE_ASPECT_COLOR_BIT,
Engine/neo-world-graphics.adb:212:119   - Unknown word (COLOR)        -- => VK_IMAGE_ASPECT_COLOR_BIT,
Engine/neo-world-graphics.adb:212:61    - Unknown word (subresource)  -- subresourceRange => (aspectMask
Engine/neo-world-graphics.adb:212:85    - Unknown word (aspect)       -- subresourceRange => (aspectMask => VK_IMAGE
Engine/neo-world-graphics.adb:218:22    - Unknown word (submission)   -- -- Frame command submission settings
Engine/neo-world-graphics.adb:218:8     - Unknown word (Frame)        -- -- Frame command submission settings
Engine/neo-world-graphics.adb:219:31    - Unknown word (Unsigned)     -- Stage : aliased Int_Unsigned_C := VK_PIPELINE_STAGE
Engine/neo-world-graphics.adb:219:5     - Unknown word (Wait)         -- Wait_Stage : aliased Int
Engine/neo-world-graphics.adb:219:63    - Unknown word (COLOR)        -- = VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT
Engine/neo-world-graphics.adb:221:47    - Unknown word (Wait)         -- pWaitDstStageMask => Wait
Engine/neo-world-graphics.adb:221:70    - Unknown word (Wait)         -- pWaitDstStageMask => Wait_Stage'Unchecked_Access
Engine/neo-world-graphics.adb:222:46    - Unknown word (wait)         -- waitSemaphoreCount =>
Engine/neo-world-graphics.adb:229:53    - Unknown word (chain)        -- index from the swap chain if there is one
Engine/neo-world-graphics.adb:229:62    - Unknown word (there)        -- from the swap chain if there is one
Engine/neo-world-graphics.adb:230:16    - Unknown word (Acquire)      -- case vkAcquireNextImageKHR (Device
Engine/neo-world-graphics.adb:231:37    - Unknown word (swapchain)    -- swapchain => Swapchain,
Engine/neo-world-graphics.adb:231:52    - Unknown word (Swapchain)    -- swapchain => Swapchain,
Engine/neo-world-graphics.adb:232:37    - Unknown word (timeout)      -- timeout => Int_64_Unsigned
Engine/neo-world-graphics.adb:232:59    - Unknown word (Unsigned)     -- timeout => Int_64_Unsigned_C'Last,
Engine/neo-world-graphics.adb:233:68    - Unknown word (Acquire)      -- => Framebuffer (I).Acquire_Status,
Engine/neo-world-graphics.adb:234:37    - Unknown word (fence)        -- fence => NULL_PTR,
Engine/neo-world-graphics.adb:237:32    - Unknown word (DATE)         -- when VK_ERROR_OUT_OF_DATE_KHR | VK_SUBOPTIMAL
Engine/neo-world-graphics.adb:237:46    - Unknown word (SUBOPTIMAL)   -- OUT_OF_DATE_KHR | VK_SUBOPTIMAL_KHR => Trigger_Framebuffer
Engine/neo-world-graphics.adb:238:19    - Unknown word (TIMEOUT)      -- when VK_TIMEOUT | VK_NOT_READY | VK
Engine/neo-world-graphics.adb:238:36    - Unknown word (READY)        -- VK_TIMEOUT | VK_NOT_READY | VK_SUCCESS
Engine/neo-world-graphics.adb:239:70    - Unknown word (Program)      -- => raise Program_Error;
Engine/neo-world-graphics.adb:23:6      - Unknown word (Shader)       -- -- Shader --
Engine/neo-world-graphics.adb:242:12    - Unknown word (Housekeeping) -- -- Housekeeping
Engine/neo-world-graphics.adb:243:12    - Unknown word (GARBAGE)      -- if GARBAGE_POLLING_DURATION <=
Engine/neo-world-graphics.adb:243:20    - Unknown word (POLLING)      -- if GARBAGE_POLLING_DURATION <= Clock -
Engine/neo-world-graphics.adb:243:28    - Unknown word (DURATION)     -- if GARBAGE_POLLING_DURATION <= Clock - Last_Collect
Engine/neo-world-graphics.adb:243:53    - Unknown word (Collect)      -- DURATION <= Clock - Last_Collect_Time then
Engine/neo-world-graphics.adb:244:13    - Unknown word (Safe)         -- --Safe_Allocation.Finalize
Engine/neo-world-graphics.adb:244:18    - Unknown word (Allocation)   -- --Safe_Allocation.Finalize_Buffers;
Engine/neo-world-graphics.adb:245:16    - Unknown word (Collect)      -- Last_Collect_Time := Clock;
Engine/neo-world-graphics.adb:249:22    - Unknown word (POLLING)      -- delay WINDOW_POLLING_DURATION - (Clock -
Engine/neo-world-graphics.adb:249:30    - Unknown word (DURATION)     -- delay WINDOW_POLLING_DURATION - (Clock - Last_Frame
Engine/neo-world-graphics.adb:249:55    - Unknown word (Frame)        -- DURATION - (Clock - Last_Frame_Time); Last_Frame_Time
Engine/neo-world-graphics.adb:249:73    - Unknown word (Frame)        -- Last_Frame_Time); Last_Frame_Time := Clock;
Engine/neo-world-graphics.adb:251:12    - Unknown word (Wait)         -- -- Wait for the frame's commands
Engine/neo-world-graphics.adb:251:25    - Unknown word (frame's)      -- -- Wait for the frame's commands to finish execution
Engine/neo-world-graphics.adb:251:45    - Unknown word (finish)       -- frame's commands to finish execution the reinitialize
Engine/neo-world-graphics.adb:252:108   - Unknown word (Unsigned)     -- Access, VK_TRUE, Int_64_Unsigned_C'Last));
Engine/neo-world-graphics.adb:252:11    - Unknown word (Assert)       -- vkAssert (vkWaitForFences
Engine/neo-world-graphics.adb:252:21    - Unknown word (Wait)         -- vkAssert (vkWaitForFences (Device
Engine/neo-world-graphics.adb:252:28    - Unknown word (Fences)       -- vkAssert (vkWaitForFences (Device, 1, Framebuffer
Engine/neo-world-graphics.adb:252:68    - Unknown word (Fence)        -- 1, Framebuffer (I).Fence'Unchecked_Access, VK
Engine/neo-world-graphics.adb:252:95    - Unknown word (TRUE)         -- Unchecked_Access, VK_TRUE, Int_64_Unsigned_C'Last
Engine/neo-world-graphics.adb:253:11    - Unknown word (Assert)       -- vkAssert (vkResetFences
Engine/neo-world-graphics.adb:253:26    - Unknown word (Fences)       -- vkAssert (vkResetFences (Device, 1, Framebuffe
Engine/neo-world-graphics.adb:253:68    - Unknown word (Fence)        -- 1, Framebuffer (I).Fence'Unchecked_Access));
Engine/neo-world-graphics.adb:254:11    - Unknown word (Assert)       -- vkAssert (vkBeginCommandBuffer
Engine/neo-world-graphics.adb:256:11    - Unknown word (Assert)       -- vkAssert (vkFreeDescriptorSets
Engine/neo-world-graphics.adb:259:60    - Unknown word (Positive)     -- framebuffer := Framebuffer (Positive (Image_Index + 1)).Swapchain
Engine/neo-world-graphics.adb:259:88    - Unknown word (Swapchain)    -- Positive (Image_Index + 1)).Swapchain_Buffer;
Engine/neo-world-graphics.adb:260:101   - Unknown word (SUBPASS)      -- Unchecked_Access, VK_SUBPASS_CONTENTS_INLINE);
Engine/neo-world-graphics.adb:262:12    - Unknown word (Dispatch)     -- -- Dispatch to the appropriate rendering
Engine/neo-world-graphics.adb:262:28    - Unknown word (appropriate)  -- -- Dispatch to the appropriate rendering path
Engine/neo-world-graphics.adb:262:40    - Unknown word (rendering)    -- Dispatch to the appropriate rendering path
Engine/neo-world-graphics.adb:263:24    - Unknown word (Frame)        -- Renderer.Build_Frame (Framebuffer (I), View
Engine/neo-world-graphics.adb:263:9     - Unknown word (Renderer)     -- Renderer.Build_Frame (Framebuffer
Engine/neo-world-graphics.adb:267:15    - Unknown word (Memory)       -- Image_Memory_Barrier.image := Framebuffer
Engine/neo-world-graphics.adb:267:22    - Unknown word (Barrier)      -- Image_Memory_Barrier.image := Framebuffer
Engine/neo-world-graphics.adb:267:52    - Unknown word (Positive)     -- image := Framebuffer (Positive (Image_Index + 1)).Image
Engine/neo-world-graphics.adb:268:22    - Unknown word (Barrier)      -- vkCmdPipelineBarrier (commandBuffer
Engine/neo-world-graphics.adb:269:77    - Unknown word (COLOR)        -- > VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT
Engine/neo-world-graphics.adb:26:15     - Unknown word (shader)       -- -- Define a shader for each pass within
Engine/neo-world-graphics.adb:26:26     - Unknown word (each)         -- Define a shader for each pass within the backend
Engine/neo-world-graphics.adb:26:36     - Unknown word (within)       -- shader for each pass within the backend
Engine/neo-world-graphics.adb:270:77    - Unknown word (BOTTOM)       -- > VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT,
Engine/neo-world-graphics.adb:270:87    - Unknown word (PIPE)         -- PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT,
Engine/neo-world-graphics.adb:271:31    - Unknown word (dependency)   -- dependencyFlags => 0,
Engine/neo-world-graphics.adb:271:41    - Unknown word (Flags)        -- dependencyFlags => 0,
Engine/neo-world-graphics.adb:272:31    - Unknown word (memory)       -- memoryBarrierCount =
Engine/neo-world-graphics.adb:272:37    - Unknown word (Barrier)      -- memoryBarrierCount => 0,
Engine/neo-world-graphics.adb:273:32    - Unknown word (Memory)       -- pMemoryBarriers =>
Engine/neo-world-graphics.adb:273:38    - Unknown word (Barriers)     -- pMemoryBarriers => null,
Engine/neo-world-graphics.adb:274:37    - Unknown word (Memory)       -- bufferMemoryBarrierCount => 0,
Engine/neo-world-graphics.adb:275:44    - Unknown word (Barriers)     -- pBufferMemoryBarriers => null,
Engine/neo-world-graphics.adb:277:43    - Unknown word (Barriers)     -- pImageMemoryBarriers => Image_Memory
Engine/neo-world-graphics.adb:278:11    - Unknown word (Assert)       -- vkAssert (vkEndCommandBuffer
Engine/neo-world-graphics.adb:27:16     - Unknown word (Shader)       -- package body Shader is
Engine/neo-world-graphics.adb:280:31    - Unknown word (frame's)      -- Submit the current frame's commands
Engine/neo-world-graphics.adb:282:58    - Unknown word (Acquire)      -- := Framebuffer (I).Acquire_Status'Unchecked_Access
Engine/neo-world-graphics.adb:284:19    - Unknown word (Safe)         -- vkAssert (Safe_Queue.vkQueueSubmit
Engine/neo-world-graphics.adb:284:94    - Unknown word (Fence)        -- Access, Framebuffer (I).Fence));
Engine/neo-world-graphics.adb:286:21    - Unknown word (resulting)    -- -- Show the resulting image
Engine/neo-world-graphics.adb:287:9     - Unknown word (Present)      -- Present_Info.pWaitSemaphores
Engine/neo-world-graphics.adb:288:103   - Unknown word (SUBOPTIMAL)   -- OUT_OF_DATE_KHR | VK_SUBOPTIMAL_KHR then
Engine/neo-world-graphics.adb:288:12    - Unknown word (Safe)         -- if Safe_Queue.vkQueuePresent
Engine/neo-world-graphics.adb:288:30    - Unknown word (Present)      -- if Safe_Queue.vkQueuePresent (Present_Info'Unchecked
Engine/neo-world-graphics.adb:288:39    - Unknown word (Present)      -- Queue.vkQueuePresent (Present_Info'Unchecked_Access
Engine/neo-world-graphics.adb:288:89    - Unknown word (DATE)         -- in VK_ERROR_OUT_OF_DATE_KHR | VK_SUBOPTIMAL
Engine/neo-world-graphics.adb:28:40     - Unknown word (Shader)       -- Commit is begin Pipeline.Shader := Shaders.Element
Engine/neo-world-graphics.adb:28:50     - Unknown word (Shaders)      -- begin Pipeline.Shader := Shaders.Element (U (Path));
Engine/neo-world-graphics.adb:28:58     - Unknown word (Element)      -- Pipeline.Shader := Shaders.Element (U (Path)); end;
Engine/neo-world-graphics.adb:292:32    - Unknown word (frame)        -- Iterate the current frame
Engine/neo-world-graphics.adb:293:32    - Unknown word (Length)       -- = I mod Framebuffer'Length + 1;
Engine/neo-world-graphics.adb:304:33    - Unknown word (Safe)         -- Task : Backend_Tasks.Safe_Task;
Engine/neo-world-graphics.adb:30:23     - Unknown word (shader)       -- -- Register a new shader
Engine/neo-world-graphics.adb:312:49    - Unknown word (Unsigned)     -- ueueSubmit (submitCount : Int_Unsigned_C; pSubmits : Ptr_VkSubmitInf
Engine/neo-world-graphics.adb:312:62    - Unknown word (Submits)      -- ubmitCount : Int_Unsigned_C; pSubmits : Ptr_VkSubmitInfo;
Engine/neo-world-graphics.adb:312:90    - Unknown word (fence)        -- : Ptr_VkSubmitInfo; fence : Ptr) return Int_Unsigned
Engine/neo-world-graphics.adb:313:86    - Unknown word (Submits)      -- Queue, submitCount, pSubmits, Fence));
Engine/neo-world-graphics.adb:313:95    - Unknown word (Fence)        -- submitCount, pSubmits, Fence));
Engine/neo-world-graphics.adb:325:38    - Unknown word (Bits)         -- Usage_Bits : Int_Unsigned_C;
Engine/neo-world-graphics.adb:328:45    - Unknown word (Positive)     -- Count : Positive)
Engine/neo-world-graphics.adb:32:37     - Unknown word (Unsafe)       -- Insert (U (Path), (To_Unsafe_Vector (Stages), others
Engine/neo-world-graphics.adb:32:44     - Unknown word (Vector)       -- U (Path), (To_Unsafe_Vector (Stages), others =>
Engine/neo-world-graphics.adb:32:52     - Unknown word (Stages)       -- (To_Unsafe_Vector (Stages), others => <>));
Engine/neo-world-graphics.adb:32:7      - Unknown word (Shaders)      -- Shaders.Insert (U (Path), (To
Engine/neo-world-graphics.adb:331:71    - Unknown word (Bits)         -- usage => Usage_Bits or VK_BUFFER_USAGE_TRANSFER
Engine/neo-world-graphics.adb:332:57    - Unknown word (Mode)         -- sharingMode => VK_SHARING_MODE_EXCLUSIVE
Engine/neo-world-graphics.adb:332:76    - Unknown word (MODE)         -- sharingMode => VK_SHARING_MODE_EXCLUSIVE, others =
Engine/neo-world-graphics.adb:332:81    - Unknown word (EXCLUSIVE)    -- haringMode => VK_SHARING_MODE_EXCLUSIVE, others => <>);
Engine/neo-world-graphics.adb:335:12    - Unknown word (Allocation)   -- Safe_Allocation.Allocate_Buffer (Buffer
Engine/neo-world-graphics.adb:336:19    - Unknown word (Bind)         -- vkAssert (vkBindBufferMemory (Device
Engine/neo-world-graphics.adb:336:87    - Unknown word (Offset)       -- Device_Memory, Buffer.Offset));
Engine/neo-world-graphics.adb:341:14    - Unknown word (staging)      -- -- Set the staging buffer and submit the
Engine/neo-world-graphics.adb:341:69    - Unknown word (happens)      -- commands so the transfer happens within the protected
Engine/neo-world-graphics.adb:341:77    - Unknown word (within)       -- the transfer happens within the protected operation
Engine/neo-world-graphics.adb:346:36    - Unknown word (visible)      -- Move data from CPU host visible memory to GPU device
Engine/neo-world-graphics.adb:346:44    - Unknown word (memory)       -- from CPU host visible memory to GPU device memory
Engine/neo-world-graphics.adb:346:65    - Unknown word (memory)       -- memory to GPU device memory
Engine/neo-world-graphics.adb:349:14    - Unknown word (Sanity)       -- -- Sanity checks
Engine/neo-world-graphics.adb:34:21     - Unknown word (shader)       -- -- Verify the shader only has one of any
Engine/neo-world-graphics.adb:34:48     - Unknown word (given)        -- only has one of any given stage
Engine/neo-world-graphics.adb:354:27    - Unknown word (warnings)    -- pragma Warnings (Off); -- warnings: possible unprotected
Engine/neo-world-graphics.adb:354:37    - Unknown word (possible)    -- (Off); -- warnings: possible unprotected access to
Engine/neo-world-graphics.adb:354:8     - Unknown word (Warnings)     -- pragma Warnings (Off); -- warnings:
Engine/neo-world-graphics.adb:356:73    - Unknown word (Staging)     -- pCommandBuffers => Staging_Commands'Unchecked_Access
Engine/neo-world-graphics.adb:357:8     - Unknown word (Warnings)    -- pragma Warnings (On);
Engine/neo-world-graphics.adb:359:49    - Unknown word (Mapped)      -- : aliased VkMappedMemoryRange :=
Engine/neo-world-graphics.adb:360:76    - Unknown word (memory)      -- memory => Int_64_Unsigned_C
Engine/neo-world-graphics.adb:361:89    - Unknown word (Staging)     -- (Staging_Device_Memory)),others
Engine/neo-world-graphics.adb:363:35    - Unknown word (manipulation) -- Objects for raw data manipulation
Engine/neo-world-graphics.adb:366:59    - Unknown word (Staging)      -- To_Ptr (To_Int_Ptr (Staging_Data));
Engine/neo-world-graphics.adb:367:84    - Unknown word (Length)       -- _Unsigned_C (Source'Length), others => <>);
Engine/neo-world-graphics.adb:36:32     - Unknown word (Kind)         -- Stage : array (Stage_Kind) of Bool := (others
Engine/neo-world-graphics.adb:36:60     - Unknown word (False)        -- of Bool := (others => False);
Engine/neo-world-graphics.adb:371:46    - Unknown word (after)        -- command buffer only after the staging buffer is
Engine/neo-world-graphics.adb:371:56    - Unknown word (staging)      -- buffer only after the staging buffer is avaliable
Engine/neo-world-graphics.adb:371:74    - Unknown word (avaliable)    -- the staging buffer is avaliable
Engine/neo-world-graphics.adb:372:32    - Unknown word (Fences)       -- vkAssert (vkWaitForFences (Device, 1, Staging
Engine/neo-world-graphics.adb:372:56    - Unknown word (Staging)      -- aitForFences (Device, 1, Staging_Fence'Unchecked_Access
Engine/neo-world-graphics.adb:372:64    - Unknown word (Fence)        -- (Device, 1, Staging_Fence'Unchecked_Access, VK
Engine/neo-world-graphics.adb:372:91    - Unknown word (TRUE)         -- Unchecked_Access, VK_TRUE, Int_64_Unsigned_C'Last
Engine/neo-world-graphics.adb:373:30    - Unknown word (Fences)       -- vkAssert (vkResetFences (Device, 1, Staging
Engine/neo-world-graphics.adb:373:56    - Unknown word (Staging)      -- esetFences (Device, 1, Staging_Fence'Unchecked_Access
Engine/neo-world-graphics.adb:382:24    - Unknown word (Offset)       -- (bufferOffset => 0,
Engine/neo-world-graphics.adb:383:27    - Unknown word (Length)       -- bufferRowLength => 0,
Engine/neo-world-graphics.adb:384:29    - Unknown word (Height)       -- bufferImageHeight => 0,
Engine/neo-world-graphics.adb:385:23    - Unknown word (Offset)       -- imageOffset => (0, 0, 0),
Engine/neo-world-graphics.adb:386:23    - Unknown word (Extent)       -- imageExtent => (Buffer.Width
Engine/neo-world-graphics.adb:386:47    - Unknown word (Width)        -- imageExtent => (Buffer.Width, Buffer.Height, 1),
Engine/neo-world-graphics.adb:386:61    - Unknown word (Height)       -- Buffer.Width, Buffer.Height, 1),
Engine/neo-world-graphics.adb:387:23    - Unknown word (Subresource)  -- imageSubresource => (aspectMask
Engine/neo-world-graphics.adb:387:40    - Unknown word (aspect)       -- imageSubresource => (aspectMask => VK_IMAGE
Engine/neo-world-graphics.adb:387:67    - Unknown word (ASPECT)       -- aspectMask => VK_IMAGE_ASPECT_COLOR_BIT,
Engine/neo-world-graphics.adb:387:74    - Unknown word (COLOR)        -- => VK_IMAGE_ASPECT_COLOR_BIT,
Engine/neo-world-graphics.adb:38:18     - Unknown word (Stages)       -- for I of Stages loop
Engine/neo-world-graphics.adb:392:21    - Unknown word (Layout)       -- (oldLayout => VK_IMAGE
Engine/neo-world-graphics.adb:392:50    - Unknown word (LAYOUT)       -- => VK_IMAGE_LAYOUT_UNDEFINED,
Engine/neo-world-graphics.adb:392:57    - Unknown word (UNDEFINED)    -- => VK_IMAGE_LAYOUT_UNDEFINED,
Engine/neo-world-graphics.adb:393:21    - Unknown word (Layout)       -- newLayout => VK_IMAGE
Engine/neo-world-graphics.adb:393:50    - Unknown word (LAYOUT)       -- => VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL
Engine/neo-world-graphics.adb:393:70    - Unknown word (OPTIMAL)      -- LAYOUT_TRANSFER_DST_OPTIMAL,
Engine/neo-world-graphics.adb:394:57    - Unknown word (IGNORED)      -- amilyIndex => VK_QUEUE_FAMILY_IGNORED,
Engine/neo-world-graphics.adb:395:57    - Unknown word (IGNORED)      -- amilyIndex => VK_QUEUE_FAMILY_IGNORED,
Engine/neo-world-graphics.adb:399:18    - Unknown word (subresource)  -- subresourceRange => (aspectMask
Engine/neo-world-graphics.adb:399:42    - Unknown word (aspect)       -- subresourceRange => (aspectMask => VK_IMAGE
Engine/neo-world-graphics.adb:399:69    - Unknown word (ASPECT)       -- aspectMask => VK_IMAGE_ASPECT_COLOR_BIT,
Engine/neo-world-graphics.adb:39:27     - Unknown word (Kind)         -- if Has_Stage (I.Kind) then
Engine/neo-world-graphics.adb:406:37    - Unknown word (layout)       -- -- Transition image layout for transfer to the
Engine/neo-world-graphics.adb:408:92    - Unknown word (PIPE)         -- PIPELINE_STAGE_TOP_OF_PIPE_BIT,
Engine/neo-world-graphics.adb:40:26     - Unknown word (loading)      -- Error ("When loading shader " & Path & "
Engine/neo-world-graphics.adb:40:34     - Unknown word (shader)       -- Error ("When loading shader " & Path & " multiple
Engine/neo-world-graphics.adb:40:54     - Unknown word (multiple)     -- shader " & Path & " multiple " & I.Kind'Wide_Image
Engine/neo-world-graphics.adb:40:69     - Unknown word (Kind)         -- Path & " multiple " & I.Kind'Wide_Image & "'s were
Engine/neo-world-graphics.adb:40:74     - Unknown word (Wide)         -- multiple " & I.Kind'Wide_Image & "'s were found
Engine/neo-world-graphics.adb:40:91     - Unknown word (were)         -- Kind'Wide_Image & "'s were found");
Engine/neo-world-graphics.adb:40:96     - Unknown word (found)        -- Wide_Image & "'s were found");
Engine/neo-world-graphics.adb:410:39    - Unknown word (dependency)   -- dependencyFlags => 0,
Engine/neo-world-graphics.adb:410:49    - Unknown word (Flags)        -- dependencyFlags => 0,
Engine/neo-world-graphics.adb:411:39    - Unknown word (memory)       -- memoryBarrierCount =
Engine/neo-world-graphics.adb:412:46    - Unknown word (Barriers)     -- pMemoryBarriers => null,
Engine/neo-world-graphics.adb:414:52    - Unknown word (Barriers)     -- pBufferMemoryBarriers => null,
Engine/neo-world-graphics.adb:418:20    - Unknown word (Perform)      -- -- Perform the copy operation
Engine/neo-world-graphics.adb:41:19     - Unknown word (Program)      -- raise Program_Error;
Engine/neo-world-graphics.adb:422:88    - Unknown word (OPTIMAL)      -- LAYOUT_TRANSFER_DST_OPTIMAL,
Engine/neo-world-graphics.adb:426:37    - Unknown word (layout)       -- -- Transition image layout for reading from a shader
Engine/neo-world-graphics.adb:427:84    - Unknown word (OPTIMAL)      -- LAYOUT_TRANSFER_DST_OPTIMAL;
Engine/neo-world-graphics.adb:428:71    - Unknown word (SHADER)       -- := VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL;
Engine/neo-world-graphics.adb:428:88    - Unknown word (OPTIMAL)      -- LAYOUT_SHADER_READ_ONLY_OPTIMAL;
Engine/neo-world-graphics.adb:430:65    - Unknown word (SHADER)       -- dstAccessMask := VK_ACCESS_SHADER_READ_BIT;
Engine/neo-world-graphics.adb:433:94    - Unknown word (SHADER)       -- PIPELINE_STAGE_FRAGMENT_SHADER_BIT,
Engine/neo-world-graphics.adb:434:39    - Unknown word (dependency)   -- dependencyFlags => 0,
Engine/neo-world-graphics.adb:434:49    - Unknown word (Flags)        -- dependencyFlags => 0,
Engine/neo-world-graphics.adb:43:24     - Unknown word (Kind)         -- Has_Stage (I.Kind) := True;
Engine/neo-world-graphics.adb:43:33     - Unknown word (True)         -- Has_Stage (I.Kind) := True;
Engine/neo-world-graphics.adb:444:37    - Unknown word (flush)        -- Submit the queue and flush to the GPU
Engine/neo-world-graphics.adb:446:25    - Unknown word (Flush)        -- vkAssert (vkFlushMappedMemoryRanges (Device
Engine/neo-world-graphics.adb:446:30    - Unknown word (Mapped)       -- vkAssert (vkFlushMappedMemoryRanges (Device
Engine/neo-world-graphics.adb:450:12    - Unknown word (There)        -- -- There is nothing to stage
Engine/neo-world-graphics.adb:450:21    - Unknown word (nothing)      -- -- There is nothing to stage when we are
Engine/neo-world-graphics.adb:455:34    - Unknown word (flags)        -- Calculate the Vulkan memory flags based on our usage needs
Engine/neo-world-graphics.adb:455:59    - Unknown word (needs)        -- flags based on our usage needs
Engine/neo-world-graphics.adb:455:6     - Unknown word (Calculate)    -- -- Calculate the Vulkan memory flags
Engine/neo-world-graphics.adb:456:12    - Unknown word (Find)         -- function Find_Memory_Type_Index (Memory
Engine/neo-world-graphics.adb:456:48    - Unknown word (Bits)         -- Type_Index (Memory_Type_Bits : Int_Unsigned_C; Usage
Engine/neo-world-graphics.adb:457:17    - Unknown word (Preferred)    -- Properties, Preferred, Required : Int_Unsigned
Engine/neo-world-graphics.adb:457:28    - Unknown word (Required)     -- Properties, Preferred, Required : Int_Unsigned_C :=
Engine/neo-world-graphics.adb:460:10    - Unknown word (This)         -- -- This doesn't quite make sense
Engine/neo-world-graphics.adb:460:15    - Unknown word (doesn't)      -- -- This doesn't quite make sense...
Engine/neo-world-graphics.adb:460:23    - Unknown word (quite)        -- -- This doesn't quite make sense...
Engine/neo-world-graphics.adb:460:34    - Unknown word (sense)        -- This doesn't quite make sense...
Engine/neo-world-graphics.adb:462:34    - Unknown word (Preferred)    -- GPU_Usage => Preferred := VK_MEMORY_PROPERTY
Engine/neo-world-graphics.adb:462:50    - Unknown word (MEMORY)       -- => Preferred := VK_MEMORY_PROPERTY_DEVICE_LOCAL
Engine/neo-world-graphics.adb:463:34    - Unknown word (Preferred)    -- CPU_To_GPU_Usage => Preferred := VK_MEMORY_PROPERTY
Engine/neo-world-graphics.adb:463:50    - Unknown word (MEMORY)       -- Usage => Preferred := VK_MEMORY_PROPERTY_DEVICE_LOCAL
Engine/neo-world-graphics.adb:464:34    - Unknown word (Required)     -- Required := VK_MEMORY_PROPERTY
Engine/neo-world-graphics.adb:464:50    - Unknown word (MEMORY)       -- Required := VK_MEMORY_PROPERTY_HOST_VISIBLE
Engine/neo-world-graphics.adb:464:71    - Unknown word (VISIBLE)      -- MEMORY_PROPERTY_HOST_VISIBLE_BIT;
Engine/neo-world-graphics.adb:465:110   - Unknown word (COHERENT)     -- MEMORY_PROPERTY_HOST_COHERENT_BIT;
Engine/neo-world-graphics.adb:465:34    - Unknown word (Required)     -- CPU_Usage => Required := VK_MEMORY_PROPERTY
Engine/neo-world-graphics.adb:465:50    - Unknown word (MEMORY)       -- => Required  := VK_MEMORY_PROPERTY_HOST_VISIBLE
Engine/neo-world-graphics.adb:465:71    - Unknown word (VISIBLE)      -- MEMORY_PROPERTY_HOST_VISIBLE_BIT or VK_MEMORY_PROPERTY
Engine/neo-world-graphics.adb:465:89    - Unknown word (MEMORY)       -- HOST_VISIBLE_BIT or VK_MEMORY_PROPERTY_HOST_COHERENT
Engine/neo-world-graphics.adb:466:110   - Unknown word (COHERENT)     -- MEMORY_PROPERTY_HOST_COHERENT_BIT;
Engine/neo-world-graphics.adb:466:34    - Unknown word (Preferred)    -- GPU_To_CPU_Usage => Preferred := VK_MEMORY_PROPERTY
Engine/neo-world-graphics.adb:466:71    - Unknown word (CACHED)       -- MEMORY_PROPERTY_HOST_CACHED_BIT or VK_MEMORY_PROPERTY
Engine/neo-world-graphics.adb:467:34    - Unknown word (Required)     -- Required := VK_MEMORY_PROPERTY
Engine/neo-world-graphics.adb:467:71    - Unknown word (VISIBLE)      -- MEMORY_PROPERTY_HOST_VISIBLE_BIT;
Engine/neo-world-graphics.adb:470:17    - Unknown word (find)         -- -- Try to find a memory type that has
Engine/neo-world-graphics.adb:470:36    - Unknown word (that)         -- to find a memory type that has both required and
Engine/neo-world-graphics.adb:470:45    - Unknown word (both)         -- memory type that has both required and preferred
Engine/neo-world-graphics.adb:470:50    - Unknown word (required)    -- memory type that has both required and preferred properties
Engine/neo-world-graphics.adb:470:63    - Unknown word (preferred)   -- has both required and preferred properties
Engine/neo-world-graphics.adb:472:65    - Unknown word (Flags)       -- memoryTypes (I).propertyFlags;
Engine/neo-world-graphics.adb:473:25    - Unknown word (Bits)        -- if (Memory_Type_Bits and 2 ** (I - 1)) /
Engine/neo-world-graphics.adb:474:16    - Unknown word (Preferred)   -- and (Preferred = 0 or else (Properties
Engine/neo-world-graphics.adb:475:16    - Unknown word (Required)    -- and (Required = 0 or else (Properties
Engine/neo-world-graphics.adb:481:10    - Unknown word (Couldn't)    -- -- Couldn't find our ideal memory
Engine/neo-world-graphics.adb:481:19    - Unknown word (find)        -- -- Couldn't find our ideal memory type
Engine/neo-world-graphics.adb:481:28    - Unknown word (ideal)       -- - Couldn't find our ideal memory type, so match
Engine/neo-world-graphics.adb:481:63    - Unknown word (required)    -- type, so match on the required usage at least
Engine/neo-world-graphics.adb:481:81    - Unknown word (least)       -- the required usage at least
Engine/neo-world-graphics.adb:485:27    - Unknown word (Bits)        -- if (Memory_Type_Bits and 2 ** (I - 1)) /
Engine/neo-world-graphics.adb:491:18    - Unknown word (preferred)   -- -- Go with preferred usage when we can't
Engine/neo-world-graphics.adb:491:48    - Unknown word (even)        -- usage when we can't even match on required usage
Engine/neo-world-graphics.adb:491:62    - Unknown word (required)    -- can't even match on required usage
Engine/neo-world-graphics.adb:49:6      - Unknown word (Samper)       -- -- Samper --
Engine/neo-world-graphics.adb:501:13    - Unknown word (suitable)    -- -- No suitable memory types
Engine/neo-world-graphics.adb:502:13    - Unknown word (Program)     -- raise Program_Error;
Engine/neo-world-graphics.adb:506:6     - Unknown word (Allocation)  -- -- Allocation --
Engine/neo-world-graphics.adb:509:16    - Unknown word (wrapper)     -- -- Protected wrapper for allocating and managing
Engine/neo-world-graphics.adb:509:28    - Unknown word (allocating)  -- Protected wrapper for allocating and managing GPU memory
Engine/neo-world-graphics.adb:509:43    - Unknown word (managing)    -- wrapper for allocating and managing GPU memory (works closely
Engine/neo-world-graphics.adb:509:70    - Unknown word (closely)     -- managing GPU memory (works closely with Safe_Staging)
Engine/neo-world-graphics.adb:510:23    - Unknown word (Allocation)  -- protected body Safe_Allocation is
Engine/neo-world-graphics.adb:512:14    - Unknown word (something)   -- -- Put something in the garbage to be
Engine/neo-world-graphics.adb:512:31    - Unknown word (garbage)     -- Put something in the garbage to be collected by the
Engine/neo-world-graphics.adb:512:45    - Unknown word (collected)   -- in the garbage to be collected by the backend
Engine/neo-world-graphics.adb:513:17    - Unknown word (Throw)       -- procedure Throw_Away (Buffer : Buffer
Engine/neo-world-graphics.adb:513:23    - Unknown word (Away)        -- procedure Throw_Away (Buffer : Buffer_State
Engine/neo-world-graphics.adb:513:70    - Unknown word (Garbage)     -- State) is begin Buffered_Garbage.Append (Buffer); end
Engine/neo-world-graphics.adb:515:10    - Unknown word (Grab)        -- -- Grab some memory from a Heap
Engine/neo-world-graphics.adb:515:15    - Unknown word (some)        -- -- Grab some memory from a Heap
Engine/neo-world-graphics.adb:515:34    - Unknown word (Heap)        -- Grab some memory from a Heap
Engine/neo-world-graphics.adb:519:25    - Unknown word (Offset)      -- function Align (Offset, Alignment : Int_64
Engine/neo-world-graphics.adb:519:33    - Unknown word (Alignment)   -- function Align (Offset, Alignment : Int_64_Unsigned_C
Engine/neo-world-graphics.adb:520:13    - Unknown word (Alignment)   -- ((Alignment - 1 + Offset) and not
Engine/neo-world-graphics.adb:520:46    - Unknown word (Alignment)   -- + Offset) and not (Alignment - 1));
Engine/neo-world-graphics.adb:522:110   - Unknown word (Granularity) -- Vulkan spec "Buffer-Image Granularity"
Engine/neo-world-graphics.adb:522:25    - Unknown word (offsets)     -- -- Check if two offsets and sizes are suitable
Engine/neo-world-graphics.adb:522:37    - Unknown word (sizes)       -- Check if two offsets and sizes are suitable for the
Engine/neo-world-graphics.adb:522:47    - Unknown word (suitable)    -- offsets and sizes are suitable for the same page -
Engine/neo-world-graphics.adb:522:64    - Unknown word (same)        -- are suitable for the same page - see the Vulkan
Engine/neo-world-graphics.adb:522:91    - Unknown word (spec)        -- page - see the Vulkan spec "Buffer-Image Granularity
Engine/neo-world-graphics.adb:523:28    - Unknown word (Same)        -- function Can_Be_On_Same_Page (Offset_A, Size
Engine/neo-world-graphics.adb:524:83    - Unknown word (Granularity) -- Properties.limits.bufferImageGranularity - 1))) =
Engine/neo-world-graphics.adb:525:83    - Unknown word (Granularity) -- Properties.limits.bufferImageGranularity - 1))));
Engine/neo-world-graphics.adb:528:18    - Unknown word (that)        -- -- Check that the memory kinds do
Engine/neo-world-graphics.adb:528:34    - Unknown word (kinds)       -- Check that the memory kinds do not have a granularity
Engine/neo-world-graphics.adb:528:47    - Unknown word (have)        -- memory kinds do not have a granularity conflict
Engine/neo-world-graphics.adb:528:54    - Unknown word (granularity) -- kinds do not have a granularity conflict
Engine/neo-world-graphics.adb:528:66    - Unknown word (conflict)    -- not have a granularity conflict
Engine/neo-world-graphics.adb:529:22    - Unknown word (Granularity) -- function Has_Granularity_Conflict (Allocation
Engine/neo-world-graphics.adb:529:34    - Unknown word (Conflict)    -- function Has_Granularity_Conflict (Allocation_A, Allocation
Engine/neo-world-graphics.adb:529:44    - Unknown word (Allocation)  -- Granularity_Conflict (Allocation_A, Allocation_B : Allocation
Engine/neo-world-graphics.adb:52:18     - Unknown word (samplers)     -- -- Texture map samplers
Engine/neo-world-graphics.adb:52:6      - Unknown word (Texture)      -- -- Texture map samplers
Engine/neo-world-graphics.adb:533:88    - Unknown word (False)       -- => False,
Engine/neo-world-graphics.adb:534:61    - Unknown word (Linear)      -- Buffer_Allocation | Linear_Image_Allocation =>
Engine/neo-world-graphics.adb:534:97    - Unknown word (Optimal)     -- Allocation => TEST_B = Optimal_Image_Allocation,
Engine/neo-world-graphics.adb:535:41    - Unknown word (Optimal)     -- when Optimal_Image_Allocation
Engine/neo-world-graphics.adb:535:88    - Unknown word (False)       -- => False);
Engine/neo-world-graphics.adb:53:16     - Unknown word (Sampler)      -- package body Sampler is
Engine/neo-world-graphics.adb:540:17    - Unknown word (Aligned)     -- Offset, Aligned_Size :         Int_
Engine/neo-world-graphics.adb:541:16    - Unknown word (Requirements) -- Memory_Requirements : aliased VkMemoryRequiremen
Engine/neo-world-graphics.adb:541:48    - Unknown word (Requirements) -- quirements : aliased VkMemoryRequirements := (others => <>);
Engine/neo-world-graphics.adb:543:77    - Unknown word (Optimal)      -- = Image_Buffer then Optimal_Image_Allocation else
Engine/neo-world-graphics.adb:545:39    - Unknown word (given)        -- Allocate the buffer from a given chunk and Heap = the
Engine/neo-world-graphics.adb:545:45    - Unknown word (chunk)        -- buffer from a given chunk and Heap = the globals
Engine/neo-world-graphics.adb:545:55    - Unknown word (Heap)         -- from a given chunk and Heap = the globals above
Engine/neo-world-graphics.adb:545:74    - Unknown word (above)        -- and Heap = the globals above are used heavily
Engine/neo-world-graphics.adb:545:89    - Unknown word (heavily)      -- globals above are used heavily
Engine/neo-world-graphics.adb:546:33    - Unknown word (Chunk)        -- procedure Allocate_From_Chunk (Chunk : Ptr_Allocation
Engine/neo-world-graphics.adb:546:40    - Unknown word (Chunk)        -- Allocate_From_Chunk (Chunk : Ptr_Allocation_State
Engine/neo-world-graphics.adb:546:70    - Unknown word (Heap)         -- Ptr_Allocation_State; Heap_Cursor : Vector_Heap
Engine/neo-world-graphics.adb:546:75    - Unknown word (Cursor)       -- Allocation_State; Heap_Cursor : Vector_Heap.Cursor
Engine/neo-world-graphics.adb:546:84    - Unknown word (Vector)       -- State; Heap_Cursor : Vector_Heap.Cursor) is
Engine/neo-world-graphics.adb:546:91    - Unknown word (Heap)         -- Heap_Cursor : Vector_Heap.Cursor) is
Engine/neo-world-graphics.adb:546:96    - Unknown word (Cursor)       -- Cursor : Vector_Heap.Cursor) is
Engine/neo-world-graphics.adb:547:11    - Unknown word (Heap)         -- Heap : Heap_State := Element
Engine/neo-world-graphics.adb:547:32    - Unknown word (Element)      -- Heap : Heap_State := Element (Heap_Cursor);
Engine/neo-world-graphics.adb:547:46    - Unknown word (Cursor)       -- State := Element (Heap_Cursor);
Engine/neo-world-graphics.adb:54:25     - Unknown word (Unbound)      -- Current_Val : Str_Unbound := NULL_STR_UNBOUND
Engine/neo-world-graphics.adb:54:45     - Unknown word (UNBOUND)      -- Unbound := NULL_STR_UNBOUND;
Engine/neo-world-graphics.adb:550:31    - Unknown word (fitting)      -- -- Split the best fitting chunk when the size
Engine/neo-world-graphics.adb:550:39    - Unknown word (chunk)        -- Split the best fitting chunk when the size is not
Engine/neo-world-graphics.adb:550:69    - Unknown word (exact)        -- when the size is not an exact fit
Engine/neo-world-graphics.adb:551:16    - Unknown word (Chunk)        -- if Chunk.Size > Memory_Requirements
Engine/neo-world-graphics.adb:551:36    - Unknown word (Requirements) -- Chunk.Size > Memory_Requirements.size then
Engine/neo-world-graphics.adb:552:15    - Unknown word (Chunk)        -- Chunk.Next := new Allocation
Engine/neo-world-graphics.adb:553:79    - Unknown word (Requirements) -- => Offset + Memory_Requirements.size,
Engine/neo-world-graphics.adb:554:63    - Unknown word (Chunk)        -- Size => Chunk.Size - Aligned_Size
Engine/neo-world-graphics.adb:554:76    - Unknown word (Aligned)      -- => Chunk.Size - Aligned_Size,
Engine/neo-world-graphics.adb:557:51    - Unknown word (Previous)     -- Previous => Chunk);
Engine/neo-world-graphics.adb:558:36    - Unknown word (Requirements) -- Chunk.Size := Memory_Requirements.size;
Engine/neo-world-graphics.adb:562:27    - Unknown word (chunk)        -- -- Assign the chunk and mark it as allocated
Engine/neo-world-graphics.adb:562:37    - Unknown word (mark)         -- Assign the chunk and mark it as allocated
Engine/neo-world-graphics.adb:562:48    - Unknown word (allocated)    -- chunk and mark it as allocated
Engine/neo-world-graphics.adb:563:18    - Unknown word (Allocated)    -- Heap.Allocated := Heap.Allocated +
Engine/neo-world-graphics.adb:563:36    - Unknown word (Allocated)    -- Heap.Allocated := Heap.Allocated + Chunk.Size;
Engine/neo-world-graphics.adb:564:21    - Unknown word (Element)      -- Replace_Element (Heaps, Heap_Cursor
Engine/neo-world-graphics.adb:564:30    - Unknown word (Heaps)        -- Replace_Element (Heaps, Heap_Cursor, Heap)
Engine/neo-world-graphics.adb:564:42    - Unknown word (Cursor)       -- Element (Heaps, Heap_Cursor, Heap);
Engine/neo-world-graphics.adb:572:42    - Unknown word (Cursor)       -- Heap := Heap_Cursor;
Engine/neo-world-graphics.adb:581:29    - Unknown word (requirements) -- -- Get the memory requirements
Engine/neo-world-graphics.adb:587:32    - Unknown word (Find)         -- Memory_Type_Index := Find_Memory_Type_Index (Memory
Engine/neo-world-graphics.adb:589:37    - Unknown word (suitable)     -- Try to allocate from a suitable Heap
Engine/neo-world-graphics.adb:590:29    - Unknown word (Heaps)        -- for I in Iterate (Heaps) loop declare Heap
Engine/neo-world-graphics.adb:590:70    - Unknown word (Element)      -- Heap : Heap_State := Element (I); begin
Engine/neo-world-graphics.adb:592:48    - Unknown word (small)        -- current Heap is too small
Engine/neo-world-graphics.adb:593:73    - Unknown word (Allocated)    -- then Heap.Size - Heap.Allocated >= Memory_Requirements
Engine/neo-world-graphics.adb:595:18    - Unknown word (Find)         -- -- Find the best fit chunk
Engine/neo-world-graphics.adb:595:36    - Unknown word (chunk)        -- - Find the best fit chunk
Engine/neo-world-graphics.adb:597:15    - Unknown word (Inner)        -- Inner: while Current /= null
Engine/neo-world-graphics.adb:599:25    - Unknown word (example)      -- -- Only example chunks that are free
Engine/neo-world-graphics.adb:599:33    - Unknown word (chunks)       -- -- Only example chunks that are free
Engine/neo-world-graphics.adb:599:40    - Unknown word (that)         -- Only example chunks that are free
Engine/neo-world-graphics.adb:59:11     - Unknown word (Writes)       -- Writes.Append (Write_Descriptor
Engine/neo-world-graphics.adb:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo-world-graphics.adb:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo-world-graphics.adb:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo-world-graphics.adb:602:105   - Unknown word (chunk)        -- conflicts with the previous chunk
Engine/neo-world-graphics.adb:602:30    - Unknown word (offset)       -- -- Set the offset in case the current
Engine/neo-world-graphics.adb:602:57    - Unknown word (chunk's)      -- in case the current chunk's granularity conflicts
Engine/neo-world-graphics.adb:602:65    - Unknown word (granularity)  -- the current chunk's granularity conflicts with the previous
Engine/neo-world-graphics.adb:602:96    - Unknown word (previous)     -- ranularity conflicts with the previous chunk
Engine/neo-world-graphics.adb:603:72    - Unknown word (alignment)    -- Memory_Requirements.alignment);
Engine/neo-world-graphics.adb:604:30    - Unknown word (Previous)     -- if Current.Previous /= null and then Device
Engine/neo-world-graphics.adb:604:92    - Unknown word (Granularity)  -- Properties.limits.bufferImageGranularity > 1
Engine/neo-world-graphics.adb:605:40    - Unknown word (Same)         -- and then Can_Be_On_Same_Page (Current.Previous
Engine/neo-world-graphics.adb:605:59    - Unknown word (Previous)     -- On_Same_Page (Current.Previous.Offset, Current.Previous
Engine/neo-world-graphics.adb:605:84    - Unknown word (Previous)     -- Previous.Offset, Current.Previous.Size, Offset)
Engine/neo-world-graphics.adb:606:46    - Unknown word (Conflict)     -- then Has_Granularity_Conflict (Current.Previous.Kind
Engine/neo-world-graphics.adb:606:64    - Unknown word (Previous)     -- Granularity_Conflict (Current.Previous.Kind, Allocation)
Engine/neo-world-graphics.adb:60:42     - Unknown word (True)         -- (Is_Image => True,
Engine/neo-world-graphics.adb:611:37    - Unknown word (chunk's)      -- -- Check the next chunk's allocation for suitability
Engine/neo-world-graphics.adb:611:45    - Unknown word (allocation)   -- Check the next chunk's allocation for suitability
Engine/neo-world-graphics.adb:611:60    - Unknown word (suitability)  -- chunk's allocation for suitability
Engine/neo-world-graphics.adb:612:19    - Unknown word (Aligned)      -- Aligned_Size := Offset - Current
Engine/neo-world-graphics.adb:613:22    - Unknown word (Aligned)      -- if Aligned_Size <= Current.Size
Engine/neo-world-graphics.adb:615:24    - Unknown word (Bail)         -- -- Bail when the Heap is too
Engine/neo-world-graphics.adb:615:50    - Unknown word (small)        -- when the Heap is too small to allocate a new one
Engine/neo-world-graphics.adb:616:31    - Unknown word (Aligned)      -- exit when Aligned_Size + Heap.Allocated
Engine/neo-world-graphics.adb:616:51    - Unknown word (Allocated)    -- Aligned_Size + Heap.Allocated >= Heap.Size;
Engine/neo-world-graphics.adb:618:34    - Unknown word (granularity)  -- -- Check for granularity conflicts with the next
Engine/neo-world-graphics.adb:618:76    - Unknown word (before)       -- with the next chunk before allocating
Engine/neo-world-graphics.adb:618:83    - Unknown word (allocating)   -- the next chunk before allocating
Engine/neo-world-graphics.adb:61:48     - Unknown word (Layout)       -- Image_Info => (imageLayout => VK_IMAGE_LAYOUT
Engine/neo-world-graphics.adb:61:71     - Unknown word (LAYOUT)       -- imageLayout => VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL
Engine/neo-world-graphics.adb:61:78     - Unknown word (SHADER)       -- => VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL,
Engine/neo-world-graphics.adb:61:95     - Unknown word (OPTIMAL)      -- LAYOUT_SHADER_READ_ONLY_OPTIMAL,
Engine/neo-world-graphics.adb:620:45    - Unknown word (Same)         -- or else not Can_Be_On_Same_Page (Offset, Memory
Engine/neo-world-graphics.adb:621:51    - Unknown word (Conflict)     -- not Has_Granularity_Conflict (Allocation, Current
Engine/neo-world-graphics.adb:629:41    - Unknown word (within)       -- Advance to the chunk within the Heap
Engine/neo-world-graphics.adb:631:24    - Unknown word (Inner)        -- end loop Inner;
Engine/neo-world-graphics.adb:635:34    - Unknown word (since)        -- Allocate a new Heap since no suitable existing
Engine/neo-world-graphics.adb:635:43    - Unknown word (suitable)     -- a new Heap since no suitable existing ones could
Engine/neo-world-graphics.adb:635:52    - Unknown word (existing)     -- Heap since no suitable existing ones could be found
Engine/neo-world-graphics.adb:635:61    - Unknown word (ones)         -- no suitable existing ones could be found
Engine/neo-world-graphics.adb:635:66    - Unknown word (could)        -- suitable existing ones could be found
Engine/neo-world-graphics.adb:635:75    - Unknown word (found)        -- existing ones could be found
Engine/neo-world-graphics.adb:63:43     - Unknown word (sampler)      -- sampler => Image.Sampler
Engine/neo-world-graphics.adb:63:68     - Unknown word (Sampler)      -- sampler => Image.Sampler, others => <>),
Engine/neo-world-graphics.adb:640:71    - Unknown word (Visible)      -- else Max_Visible_Memory.Get) * MB), others
Engine/neo-world-graphics.adb:641:60    - Unknown word (allocation)   -- VkMemoryAllocateInfo := (allocationSize => Heap.Size,
Engine/neo-world-graphics.adb:645:27    - Unknown word (heap)         -- -- Make a new heap
Engine/neo-world-graphics.adb:64:46     - Unknown word (Binding)      -- Set => (dstBinding => Binding,
Engine/neo-world-graphics.adb:64:62     - Unknown word (Binding)      -- (dstBinding => Binding,
Engine/neo-world-graphics.adb:651:13    - Unknown word (Heaps)        -- Heaps.Append (Heap);
Engine/neo-world-graphics.adb:655:52    - Unknown word (Heaps)        -- Chunk (Heap.First_Chunk, Heaps.Last);
Engine/neo-world-graphics.adb:659:20    - Unknown word (unused)       -- -- Clear all unused heaps and unreferenced
Engine/neo-world-graphics.adb:659:27    - Unknown word (heaps)        -- -- Clear all unused heaps and unreferenced images
Engine/neo-world-graphics.adb:660:47    - Unknown word (Finalization) -- Buffers (Force_Total_Finalization : Bool := False) is
Engine/neo-world-graphics.adb:661:17    - Unknown word (Vector)       -- package Vector_Hashed_Buffer_Cursor
Engine/neo-world-graphics.adb:661:24    - Unknown word (Hashed)       -- package Vector_Hashed_Buffer_Cursor is new
Engine/neo-world-graphics.adb:661:52    - Unknown word (Vectors)      -- Buffer_Cursor is new Vectors (Hashed_Buffer.Cursor
Engine/neo-world-graphics.adb:661:61    - Unknown word (Hashed)       -- Cursor is new Vectors (Hashed_Buffer.Cursor);
Engine/neo-world-graphics.adb:662:25    - Unknown word (Vector)       -- Zombie_Images : Vector_Hashed_Buffer_Cursor
Engine/neo-world-graphics.adb:662:32    - Unknown word (Hashed)       -- Zombie_Images : Vector_Hashed_Buffer_Cursor.Unsafe
Engine/neo-world-graphics.adb:662:53    - Unknown word (Unsafe)       -- Hashed_Buffer_Cursor.Unsafe.Vector;
Engine/neo-world-graphics.adb:662:60    - Unknown word (Vector)       -- Buffer_Cursor.Unsafe.Vector;
Engine/neo-world-graphics.adb:662:9     - Unknown word (Zombie)       -- Zombie_Images : Vector_Hashed
Engine/neo-world-graphics.adb:663:13    - Unknown word (Hashed)       -- I : Hashed_Buffer.Cursor := Buffered
Engine/neo-world-graphics.adb:665:18    - Unknown word (pointers)     -- -- Chunk pointers for dealing with each
Engine/neo-world-graphics.adb:665:31    - Unknown word (dealing)      -- Chunk pointers for dealing with each heap's chunk
Engine/neo-world-graphics.adb:665:44    - Unknown word (each)         -- pointers for dealing with each heap's chunk list
Engine/neo-world-graphics.adb:665:49    - Unknown word (heap's)       -- for dealing with each heap's chunk list
Engine/neo-world-graphics.adb:66:81     - Unknown word (COMBINED)     -- VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER, others
Engine/neo-world-graphics.adb:66:96     - Unknown word (SAMPLER)      -- TYPE_COMBINED_IMAGE_SAMPLER, others => <>)));
Engine/neo-world-graphics.adb:672:14    - Unknown word (Look)         -- -- Look for unreferenced images
Engine/neo-world-graphics.adb:672:51    - Unknown word (them)         -- unreferenced images and add them to the garbage
Engine/neo-world-graphics.adb:672:63    - Unknown word (garbage)      -- and add them to the garbage
Engine/neo-world-graphics.adb:674:28    - Unknown word (Finalization) -- if Force_Total_Finalization or Buffered_Image.References
Engine/neo-world-graphics.adb:678:24    - Unknown word (Garbage)      -- Buffered_Garbage.Append (Buffered_Image
Engine/neo-world-graphics.adb:679:15    - Unknown word (Zombie)       -- Zombie_Images.Append (I);
Engine/neo-world-graphics.adb:681:13    - Unknown word (Hashed)       -- Hashed_Buffer.Unsafe.Next
Engine/neo-world-graphics.adb:681:27    - Unknown word (Unsafe)       -- Hashed_Buffer.Unsafe.Next (I);
Engine/neo-world-graphics.adb:684:105   - Unknown word (woes)         -- in-line due to cursor woes)
Engine/neo-world-graphics.adb:684:21    - Unknown word (zombie)       -- -- Remove zombie images freed from the
Engine/neo-world-graphics.adb:684:35    - Unknown word (freed)        -- Remove zombie images freed from the previous loop
Engine/neo-world-graphics.adb:684:50    - Unknown word (previous)     -- images freed from the previous loop (which can be done
Engine/neo-world-graphics.adb:684:65    - Unknown word (which)        -- from the previous loop (which can be done in-line
Engine/neo-world-graphics.adb:684:78    - Unknown word (done)         -- previous loop (which can be done in-line due to cursor
Engine/neo-world-graphics.adb:684:98    - Unknown word (cursor)       -- done in-line due to cursor woes)
Engine/neo-world-graphics.adb:685:15    - Unknown word (Zombie)       -- for Zombie of Zombie_Images loop
Engine/neo-world-graphics.adb:685:25    - Unknown word (Zombie)       -- for Zombie of Zombie_Images loop Buffered
Engine/neo-world-graphics.adb:685:68    - Unknown word (Zombie)       -- Buffered_Images.Delete (Zombie); end loop;
Engine/neo-world-graphics.adb:687:14    - Unknown word (Take)         -- -- Take out the trash...
Engine/neo-world-graphics.adb:688:15    - Unknown word (Piece)        -- for Piece of Buffered_Garbage
Engine/neo-world-graphics.adb:688:33    - Unknown word (Garbage)      -- for Piece of Buffered_Garbage loop
Engine/neo-world-graphics.adb:689:30    - Unknown word (Piece)        -- Heap := Element (Piece.Heap);
Engine/neo-world-graphics.adb:691:16    - Unknown word (Find)         -- -- Find the chunk corresponding
Engine/neo-world-graphics.adb:691:31    - Unknown word (corresponding) -- -- Find the chunk corresponding to the Memory
Engine/neo-world-graphics.adb:694:31    - Unknown word (Piece)         -- if Current.ID = Piece.ID then
Engine/neo-world-graphics.adb:695:20    - Unknown word (Piece)         -- if Piece.Kind /= Image_Buffer
Engine/neo-world-graphics.adb:695:77    - Unknown word (Piece)         -- vkDestroyBuffer (Device, Piece.Data, null); end if
Engine/neo-world-graphics.adb:697:20    - Unknown word (Mark)          -- -- Mark it as available
Engine/neo-world-graphics.adb:700:44    - Unknown word (previous)      -- Join the chunk with the previous one if it is free
Engine/neo-world-graphics.adb:710:20    - Unknown word (Same)          -- -- Same with the next chunk
Engine/neo-world-graphics.adb:719:35    - Unknown word (handle)        -- -- Modify Heap to handle new size
Engine/neo-world-graphics.adb:720:22    - Unknown word (Allocated)     -- Heap.Allocated := Heap.Allocated -
Engine/neo-world-graphics.adb:721:17    - Unknown word (Heaps)         -- Heaps.Replace_Element (Piece
Engine/neo-world-graphics.adb:727:20    - Unknown word (Garbage)       -- Buffered_Garbage.Clear;
Engine/neo-world-graphics.adb:729:14    - Unknown word (Kill)          -- -- Kill heaps with nothing left
Engine/neo-world-graphics.adb:729:19    - Unknown word (heaps)         -- -- Kill heaps with nothing left or
Engine/neo-world-graphics.adb:729:30    - Unknown word (nothing)       -- -- Kill heaps with nothing left or if we are killing
Engine/neo-world-graphics.adb:729:56    - Unknown word (killing)       -- nothing left or if we are killing all the heaps during
Engine/neo-world-graphics.adb:729:72    - Unknown word (heaps)         -- are killing all the heaps during shutdown
Engine/neo-world-graphics.adb:729:78    - Unknown word (during)        -- killing all the heaps during shutdown
Engine/neo-world-graphics.adb:72:6      - Unknown word (Uniform)      -- -- Uniform --
Engine/neo-world-graphics.adb:731:28    - Unknown word (Finalization)  -- if Force_Total_Finalization or Heaps.Element (J
Engine/neo-world-graphics.adb:733:32    - Unknown word (allocation)    -- -- Clear the GPU allocation
Engine/neo-world-graphics.adb:737:27    - Unknown word (chunks)        -- -- Free its chunks
Engine/neo-world-graphics.adb:75:41     - Unknown word (shader)       -- value a.k.a. global shader variable / parameter
Engine/neo-world-graphics.adb:75:7      - Unknown word (Uniform)      -- -- "Uniform" data value a.k.a. global
Engine/neo-world-graphics.adb:760:15    - Unknown word (Skeleton)      -- if Mesh.Skeleton /= null then
Engine/neo-world-graphics.adb:761:54    - Unknown word (Animated)      -- Buffered_Mesh_State'(Is_Animated => True,
Engine/neo-world-graphics.adb:761:68    - Unknown word (True)          -- State'(Is_Animated => True,
Engine/neo-world-graphics.adb:763:54    - Unknown word (Surface)       -- Buffer => Current_Surface.Weights,
Engine/neo-world-graphics.adb:764:62    - Unknown word (UNIFORM)       -- Bits => VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT,
Engine/neo-world-graphics.adb:766:52    - Unknown word (Length)        -- Data_Size => (Data'Length * Weight_State'Object
Engine/neo-world-graphics.adb:766:61    - Unknown word (Weight)        -- Size => (Data'Length * Weight_State'Object_Size)
Engine/neo-world-graphics.adb:767:51    - Unknown word (Animated)      -- Count => Mesh.Animated_Surfaces.Element (I
Engine/neo-world-graphics.adb:767:60    - Unknown word (Surfaces)      -- => Mesh.Animated_Surfaces.Element (I).Weights
Engine/neo-world-graphics.adb:769:54    - Unknown word (Animated)      -- Buffered_Mesh_State'(Is_Animated => False,
Engine/neo-world-graphics.adb:76:16     - Unknown word (Uniform)      -- package body Uniform is
Engine/neo-world-graphics.adb:773:10    - Unknown word (Verticies)     -- -- Verticies
Engine/neo-world-graphics.adb:774:54    - Unknown word (Vertices)      -- => Buffered_Mesh.Vertices,
Engine/neo-world-graphics.adb:776:45    - Unknown word (Vertices)      -- Data => Mesh.Vertices (1)'Address,
Engine/neo-world-graphics.adb:777:45    - Unknown word (Vertices)      -- Data_Size => Mesh.Vertices'Size,
Engine/neo-world-graphics.adb:77:23     - Unknown word (Positive)     -- Uniform_Index : Positive := 1;
Engine/neo-world-graphics.adb:77:7      - Unknown word (Uniform)      -- Uniform_Index : Positive :=
Engine/neo-world-graphics.adb:783:14    - Unknown word (Indicies)      -- Mesh_Indicies : Array_x2_Int_32_Unsigned
Engine/neo-world-graphics.adb:784:18    - Unknown word (Indicies)      -- for Mesh_Indicies'Address use Mesh.Indices
Engine/neo-world-graphics.adb:78:23     - Unknown word (Uniform)      -- Current_Val : Uniform_T;
Engine/neo-world-graphics.adb:793:14    - Unknown word (Indicies)      -- -- Indicies
Engine/neo-world-graphics.adb:796:49    - Unknown word (Indicies)      -- Data => Mesh_Indicies'Address,
Engine/neo-world-graphics.adb:797:49    - Unknown word (Indicies)      -- Data_Size => Mesh_Indicies'Size,
Engine/neo-world-graphics.adb:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-world-graphics.adb:801:31    - Unknown word (Geometry)      -- Buffered_Meshes.Insert (Geometry_Name_Str.U (Mesh.Name
Engine/neo-world-graphics.adb:808:23    - Unknown word (Throw)         -- Safe_Allocation.Throw_Away (Buffered_Mesh
Engine/neo-world-graphics.adb:808:29    - Unknown word (Away)          -- Safe_Allocation.Throw_Away (Buffered_Mesh.Vertices
Engine/neo-world-graphics.adb:808:49    - Unknown word (Vertices)      -- Away (Buffered_Mesh.Vertices);
Engine/neo-world-graphics.adb:811:25    - Unknown word (Throw)         -- Safe_Allocation.Throw_Away (Buffered_Mesh
Engine/neo-world-graphics.adb:811:31    - Unknown word (Away)          -- Safe_Allocation.Throw_Away (Buffered_Mesh.Segments
Engine/neo-world-graphics.adb:812:14    - Unknown word (Surface)       -- --if Surface.Is_Animated then Safe
Engine/neo-world-graphics.adb:812:25    - Unknown word (Animated)      -- --if Surface.Is_Animated then Safe_Allocation
Engine/neo-world-graphics.adb:812:55    - Unknown word (Throw)         -- then Safe_Allocation.Throw_Away (Surface.Weights
Engine/neo-world-graphics.adb:812:61    - Unknown word (Away)          -- Safe_Allocation.Throw_Away (Surface.Weights); end
Engine/neo-world-graphics.adb:812:67    - Unknown word (Surface)       -- Allocation.Throw_Away (Surface.Weights); end if;
Engine/neo-world-graphics.adb:818:19    - Unknown word (Structures)    -- -- Acceleration Structures --
Engine/neo-world-graphics.adb:818:6     - Unknown word (Acceleration)  -- -- Acceleration Structures --
Engine/neo-world-graphics.adb:81:43     - Unknown word (Uniforms)     -- Buffer_State := Buffered_Uniforms.Element (U (Name_Id
Engine/neo-world-graphics.adb:81:52     - Unknown word (Element)      -- = Buffered_Uniforms.Element (U (Name_Id));
Engine/neo-world-graphics.adb:821:34    - Unknown word (Structure)     -- procedure Create_Top_Level_Structure is
Engine/neo-world-graphics.adb:822:18    - Unknown word (Structure)     -- -- Buffered_Structure : Buffer_State (Structure
Engine/neo-world-graphics.adb:822:44    - Unknown word (Structure)     -- Structure : Buffer_State (Structure_Object_Buffer);
Engine/neo-world-graphics.adb:823:22    - Unknown word (Structure)     -- - Acceleration_Structure_Memory_Info : aliased
Engine/neo-world-graphics.adb:823:56    - Unknown word (Bind)          -- Memory_Info : aliased VkBindAccelerationStructureMemoryInf
Engine/neo-world-graphics.adb:823:60    - Unknown word (Acceleration)  -- Info : aliased VkBindAccelerationStructureMemoryInfoNV
Engine/neo-world-graphics.adb:823:72    - Unknown word (Structure)     -- aliased VkBindAccelerationStructureMemoryInfoNV := (others
Engine/neo-world-graphics.adb:823:9     - Unknown word (Acceleration)  -- -- Acceleration_Structure_Memory_Info
Engine/neo-world-graphics.adb:824:56    - Unknown word (Acceleration)  -- Info : aliased VkAccelerationStructureCreateInfoNV
Engine/neo-world-graphics.adb:824:9     - Unknown word (Acceleration)  -- -- Acceleration_Structure_Info
Engine/neo-world-graphics.adb:825:41    - Unknown word (ACCELERATION)  -- typ => VK_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL
Engine/neo-world-graphics.adb:825:54    - Unknown word (STRUCTURE)     -- => VK_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL_NV,
Engine/neo-world-graphics.adb:827:21    - Unknown word (geometry)      -- -- geometryCount => 0, others =
Engine/neo-world-graphics.adb:831:22    - Unknown word (special)       -- - -- Get the special memory requirements
Engine/neo-world-graphics.adb:831:37    - Unknown word (requirements)  -- Get the special memory requirements
Engine/neo-world-graphics.adb:832:16    - Unknown word (Allocator)     -- -- Safe_Allocator.Allocate (Buffered_Structure
Engine/neo-world-graphics.adb:833:46    - Unknown word (acceleration)  -- Structure_Memory_Info.accelerationStructure := Buffered
Engine/neo-world-graphics.adb:835:23    - Unknown word (Bind)          -- vkAssert (vkBindAccelerationStructureMemoryNV
Engine/neo-world-graphics.adb:837:24    - Unknown word (sepcial)       -- -- Fetch our sepcial "handle" used to Id
Engine/neo-world-graphics.adb:837:33    - Unknown word (handle)        -- Fetch our sepcial "handle" used to Id the structure
Engine/neo-world-graphics.adb:837:56    - Unknown word (structure)     -- handle" used to Id the structure somehow ???
Engine/neo-world-graphics.adb:837:66    - Unknown word (somehow)       -- to Id the structure somehow ???
Engine/neo-world-graphics.adb:838:47    - Unknown word (Handle)        -- vkGetAccelerationStructureHandleNV
Engine/neo-world-graphics.adb:839:88    - Unknown word (Handle)        -- Buffered_Structure.Handle'Unchecked_Access));
Engine/neo-world-graphics.adb:83:11     - Unknown word (Writes)       -- Writes.Append (Write_Descriptor
Engine/neo-world-graphics.adb:841:20    - Unknown word (Structures)    -- -- Buffered_Structures.Append (Buffered_Structure
Engine/neo-world-graphics.adb:844:20    - Unknown word (Structures)    -- -- Buffered_Structures.Insert (Path, Buffered
Engine/neo-world-graphics.adb:844:54    - Unknown word (Structures)    -- Insert (Path, Buffered_Structures);
Engine/neo-world-graphics.adb:847:24    - Unknown word (Bottom)        -- procedure Buffer_Bottom_Level_Structure (Path
Engine/neo-world-graphics.adb:849:23    - Unknown word (temporaries)   -- -- Result and temporaries
Engine/neo-world-graphics.adb:84:29     - Unknown word (False)        -- (Is_Image => False,
Engine/neo-world-graphics.adb:850:18    - Unknown word (Structures)   -- -- Buffered_Structures : Vector_Buffer_State
Engine/neo-world-graphics.adb:853:12    - Unknown word (Geometry)     -- -- -- Geometry
Engine/neo-world-graphics.adb:854:39    - Unknown word (Surface)      -- Mesh : Vector_Buffer_Surface.Unsafe.Vector := Buffered
Engine/neo-world-graphics.adb:854:47    - Unknown word (Unsafe)       -- Vector_Buffer_Surface.Unsafe.Vector := Buffered_Meshes
Engine/neo-world-graphics.adb:855:30    - Unknown word (Geometry)     -- Geometry : aliased VkGeometryNV := (geometryType
Engine/neo-world-graphics.adb:855:45    - Unknown word (geometry)     -- aliased VkGeometryNV := (geometryType => VK_GEOMETRY_TYPE
Engine/neo-world-graphics.adb:855:64    - Unknown word (GEOMETRY)     -- (geometryType => VK_GEOMETRY_TYPE_TRIANGLES_NV,
Engine/neo-world-graphics.adb:855:78    - Unknown word (TRIANGLES)    -- => VK_GEOMETRY_TYPE_TRIANGLES_NV,
Engine/neo-world-graphics.adb:855:9     - Unknown word (Geometry)     -- -- Geometry : aliased VkGeometryNV
Engine/neo-world-graphics.adb:856:45    - Unknown word (flags)        -- flags => VK_GEOMETRY
Engine/neo-world-graphics.adb:856:64    - Unknown word (GEOMETRY)     -- flags => VK_GEOMETRY_OPAQUE_BIT_NV,
Engine/neo-world-graphics.adb:856:73    - Unknown word (OPAQUE)       -- => VK_GEOMETRY_OPAQUE_BIT_NV,
Engine/neo-world-graphics.adb:857:45    - Unknown word (geometry)     -- geometry => (triangles =
Engine/neo-world-graphics.adb:857:62    - Unknown word (triangles)    -- geometry => (triangles => (vertexData   =>
Engine/neo-world-graphics.adb:857:92    - Unknown word (scene)        -- => (vertexData   => scene.vertices.buffer,
Engine/neo-world-graphics.adb:857:98    - Unknown word (vertices)     -- vertexData => scene.vertices.buffer,
Engine/neo-world-graphics.adb:858:92    - Unknown word (scene)        -- vertexCount => scene.vertexCount,
Engine/neo-world-graphics.adb:859:107   - Unknown word (stride)       -- vertexStride => vertexLayout.stride(),
Engine/neo-world-graphics.adb:859:84    - Unknown word (Stride)       -- --vertexStride => vertexLayout.stride
Engine/neo-world-graphics.adb:860:112   - Unknown word (SFLOAT)       -- VK_FORMAT_R32G32B32_SFLOAT,
Engine/neo-world-graphics.adb:861:92    - Unknown word (scene)        -- indexData => scene.indices.buffer,
Engine/neo-world-graphics.adb:862:92    - Unknown word (scene)        -- indexCount => scene.indexCount,
Engine/neo-world-graphics.adb:866:56    - Unknown word (Bind)         -- Memory_Info : aliased VkBindAccelerationStructureMemoryInf
Engine/neo-world-graphics.adb:868:13    - Unknown word (Geometries)   -- -- (pGeometries => geometries,
Engine/neo-world-graphics.adb:868:27    - Unknown word (geometries)   -- (pGeometries => geometries,
Engine/neo-world-graphics.adb:869:48    - Unknown word (ACCELERATION) -- typ => VK_ACCELERATION_STRUCTURE_TYPE_BOTTOM
Engine/neo-world-graphics.adb:869:61    - Unknown word (STRUCTURE)    -- => VK_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL_NV
Engine/neo-world-graphics.adb:869:76    - Unknown word (BOTTOM)       -- ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL_NV,
Engine/neo-world-graphics.adb:86:30     - Unknown word (offset)       -- offset => 0, -- Buffer.Offset
Engine/neo-world-graphics.adb:86:53     - Unknown word (Offset)       -- offset => 0, -- Buffer.Offset,
Engine/neo-world-graphics.adb:871:28    - Unknown word (geometry)     -- geometryCount => 1, others =
Engine/neo-world-graphics.adb:873:28    - Unknown word (Bottom)       -- -- Start of Create_Bottom_Level_Acceleration
Engine/neo-world-graphics.adb:875:15    - Unknown word (Geometry)     -- -- for Geometry of Mesh.Geometries loop
Engine/neo-world-graphics.adb:875:32    - Unknown word (Geometries)   -- for Geometry of Mesh.Geometries loop
Engine/neo-world-graphics.adb:878:24    - Unknown word (special)      -- -- Get the special memory requirements
Engine/neo-world-graphics.adb:878:39    - Unknown word (requirements) -- Get the special memory requirements
Engine/neo-world-graphics.adb:879:18    - Unknown word (Allocator)    -- -- Safe_Allocator.Allocate (Buffered_Structure
Engine/neo-world-graphics.adb:87:30     - Unknown word (rang)         -- rang => Uniform_T'Object
Engine/neo-world-graphics.adb:880:48    - Unknown word (acceleration) -- Structure_Memory_Info.accelerationStructure := Buffered
Engine/neo-world-graphics.adb:882:25    - Unknown word (Bind)         -- vkAssert (vkBindAccelerationStructureMemoryNV
Engine/neo-world-graphics.adb:884:26    - Unknown word (sepcial)      -- -- Fetch our sepcial "handle" used to Id
Engine/neo-world-graphics.adb:884:35    - Unknown word (handle)       -- Fetch our sepcial "handle" used to Id the structure
Engine/neo-world-graphics.adb:884:58    - Unknown word (structure)    -- handle" used to Id the structure somehow ???
Engine/neo-world-graphics.adb:884:68    - Unknown word (somehow)      -- to Id the structure somehow ???
Engine/neo-world-graphics.adb:885:49    - Unknown word (Handle)       -- vkGetAccelerationStructureHandleNV
Engine/neo-world-graphics.adb:886:90    - Unknown word (Handle)       -- Buffered_Structure.Handle'Unchecked_Access));
Engine/neo-world-graphics.adb:88:33     - Unknown word (Binding)      -- Set => (dstBinding => Binding,
Engine/neo-world-graphics.adb:88:49     - Unknown word (Binding)      -- (dstBinding => Binding,
Engine/neo-world-graphics.adb:899:22    - Unknown word (string)       -- -- Create a lookup string for Buffered_Images
Engine/neo-world-graphics.adb:899:49    - Unknown word (which)        -- for Buffered_Images which includes material settings
Engine/neo-world-graphics.adb:899:55    - Unknown word (includes)     -- Buffered_Images which includes material settings in
Engine/neo-world-graphics.adb:899:85    - Unknown word (addition)     -- material settings in addition the image path
Engine/neo-world-graphics.adb:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-world-graphics.adb:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-world-graphics.adb:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo-world-graphics.adb:900:70    - Unknown word (Unbound)      -- Material_State) return Str_Unbound is
Engine/neo-world-graphics.adb:901:44    - Unknown word (Wide)         -- Kind'Pos (Item.Filter)'Wide_Image & Clamp_Kind'Pos
Engine/neo-world-graphics.adb:901:57    - Unknown word (Clamp)        -- Filter)'Wide_Image & Clamp_Kind'Pos (Item.Clamp
Engine/neo-world-graphics.adb:901:78    - Unknown word (Clamp)        -- Clamp_Kind'Pos (Item.Clamp)'Wide_Image));
Engine/neo-world-graphics.adb:901:85    - Unknown word (Wide)         -- Kind'Pos (Item.Clamp)'Wide_Image));
Engine/neo-world-graphics.adb:903:13    - Unknown word (counters)     -- -- Manage counters for Buffered_Material
Engine/neo-world-graphics.adb:907:13    - Unknown word (counters)     -- -- Manage counters for Buffered_Image references
Engine/neo-world-graphics.adb:908:45    - Unknown word (Unbound)      -- Reference (Path : Str_Unbound) is Buffered_Image
Engine/neo-world-graphics.adb:90:68     - Unknown word (UNIFORM)     -- VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER, others => <
Engine/neo-world-graphics.adb:910:48    - Unknown word (Unbound)      -- Reference (Path : Str_Unbound) is Buffered_Image
Engine/neo-world-graphics.adb:913:24    - Unknown word (textures)     -- - Load a material's textures and mark it
Engine/neo-world-graphics.adb:913:37    - Unknown word (mark)         -- material's textures and mark it
Engine/neo-world-graphics.adb:916:20    - Unknown word (Unbound)      -- Hash : Str_Unbound;-- := Get_Material
Engine/neo-world-graphics.adb:918:15    - Unknown word (texture)      -- -- Buffer texture image
Engine/neo-world-graphics.adb:923:12    - Unknown word (Empty)        -- -- Empty paths mean no image
Engine/neo-world-graphics.adb:923:24    - Unknown word (mean)         -- -- Empty paths mean no image to be buffered
Engine/neo-world-graphics.adb:926:12    - Unknown word (Increment)    -- -- Increment the count if it is loaded
Engine/neo-world-graphics.adb:926:41    - Unknown word (loaded)       -- Increment the count if it is loaded already
Engine/neo-world-graphics.adb:926:48    - Unknown word (already)      -- count if it is loaded already
Engine/neo-world-graphics.adb:929:21    - Unknown word (texture)      -- -- Load the texture file to local memory
Engine/neo-world-graphics.adb:931:43    - Unknown word (TEXTURES)     -- Info.App_Path) & PATH_TEXTURES & Path, Image);
Engine/neo-world-graphics.adb:937:44    - Unknown word (Width)        -- Width => Int_Unsigned_C
Engine/neo-world-graphics.adb:937:76    - Unknown word (Width)        -- Int_Unsigned_C (Image.Width),
Engine/neo-world-graphics.adb:938:44    - Unknown word (Height)       -- Height => Int_Unsigned_C (Image
Engine/neo-world-graphics.adb:938:76    - Unknown word (Height)       -- Int_Unsigned_C (Image.Height), others => <>);
Engine/neo-world-graphics.adb:941:105   - Unknown word (ASPECT)       -- aspectMask => VK_IMAGE_ASPECT_COLOR_BIT,
Engine/neo-world-graphics.adb:941:61    - Unknown word (subresource)  -- subresourceRange => (aspectMask
Engine/neo-world-graphics.adb:941:82    - Unknown word (aspect)       -- subresourceRange => (aspectMask => VK_IMAGE_ASPECT
Engine/neo-world-graphics.adb:944:59    - Unknown word (Anisotropy)   -- VkSamplerCreateInfo := (maxAnisotropy => 1.0,
Engine/neo-world-graphics.adb:945:56    - Unknown word (anisotropy)   -- anisotropyEnable => VK_FALSE
Engine/neo-world-graphics.adb:945:86    - Unknown word (FALSE)        -- anisotropyEnable => VK_FALSE,
Engine/neo-world-graphics.adb:946:68    - Unknown word (Coordinates)  -- unnormalizedCoordinates => VK_FALSE,
Engine/neo-world-graphics.adb:946:86    - Unknown word (FALSE)        -- unnormalizedCoordinates => VK_FALSE,
Engine/neo-world-graphics.adb:947:86    - Unknown word (FALSE)        -- compareEnable => VK_FALSE,
Engine/neo-world-graphics.adb:948:103   - Unknown word (OPAQUE)       -- VK_BORDER_COLOR_INT_OPAQUE_BLACK,
Engine/neo-world-graphics.adb:948:56    - Unknown word (border)       -- borderColor =>
Engine/neo-world-graphics.adb:948:62    - Unknown word (Color)        -- borderColor => VK_BORDER
Engine/neo-world-graphics.adb:948:86    - Unknown word (BORDER)       -- borderColor => VK_BORDER_COLOR_INT_OPAQUE_BLACK
Engine/neo-world-graphics.adb:949:97    - Unknown word (NEVER)        -- => VK_COMPARE_OP_NEVER, others => <>);
Engine/neo-world-graphics.adb:950:52    - Unknown word (initial)      -- VkImageCreateInfo := (initialLayout => VK_IMAGE_LAYOUT
Engine/neo-world-graphics.adb:950:85    - Unknown word (UNDEFINED)    -- tialLayout => VK_IMAGE_LAYOUT_UNDEFINED,
Engine/neo-world-graphics.adb:951:59    - Unknown word (Mode)         -- sharingMode => VK_SHARING_MODE
Engine/neo-world-graphics.adb:951:80    - Unknown word (MODE)         -- sharingMode => VK_SHARING_MODE_EXCLUSIVE,
Engine/neo-world-graphics.adb:951:85    - Unknown word (EXCLUSIVE)    -- => VK_SHARING_MODE_EXCLUSIVE,
Engine/neo-world-graphics.adb:952:52    - Unknown word (tiling)       -- tiling => VK_IMAGE_TILING
Engine/neo-world-graphics.adb:952:78    - Unknown word (TILING)       -- tiling => VK_IMAGE_TILING_OPTIMAL,
Engine/neo-world-graphics.adb:957:52    - Unknown word (extent)       -- extent => (Int_Unsigned
Engine/neo-world-graphics.adb:957:92    - Unknown word (Width)        -- Int_Unsigned_C (Image.Width),
Engine/neo-world-graphics.adb:958:92    - Unknown word (Height)       -- Int_Unsigned_C (Image.Height), 1, others => <>),
Engine/neo-world-graphics.adb:95:53     - Unknown word (writes)      -- and save the index for writes/sets
Engine/neo-world-graphics.adb:960:52    - Unknown word (flags)        -- flags => (if Image
Engine/neo-world-graphics.adb:963:120   - Unknown word (Added)        -- BIT, others => <>); -- Added!
Engine/neo-world-graphics.adb:966:25    - Unknown word (sampler)      -- -- Create the sampler
Engine/neo-world-graphics.adb:968:18    - Unknown word (Linear)       -- when Linear_Filter =>
Engine/neo-world-graphics.adb:969:52    - Unknown word (LINEAR)       -- minFilter := VK_FILTER_LINEAR;
Engine/neo-world-graphics.adb:970:52    - Unknown word (LINEAR)       -- magFilter := VK_FILTER_LINEAR;
Engine/neo-world-graphics.adb:971:34    - Unknown word (Mode)         -- Sampler_Info.mipmapMode := VK_SAMPLER_MIPMAP
Engine/neo-world-graphics.adb:971:45    - Unknown word (SAMPLER)      -- Info.mipmapMode := VK_SAMPLER_MIPMAP_MODE_LINEAR;
Engine/neo-world-graphics.adb:971:60    - Unknown word (MODE)         -- = VK_SAMPLER_MIPMAP_MODE_LINEAR;
Engine/neo-world-graphics.adb:971:65    - Unknown word (LINEAR)       -- SAMPLER_MIPMAP_MODE_LINEAR;
Engine/neo-world-graphics.adb:972:18    - Unknown word (Nearest)      -- when Nearest_Filter =>
Engine/neo-world-graphics.adb:973:52    - Unknown word (NEAREST)      -- minFilter := VK_FILTER_NEAREST;
Engine/neo-world-graphics.adb:974:52    - Unknown word (NEAREST)      -- magFilter := VK_FILTER_NEAREST;
Engine/neo-world-graphics.adb:975:34    - Unknown word (Mode)         -- Sampler_Info.mipmapMode := VK_SAMPLER_MIPMAP
Engine/neo-world-graphics.adb:975:45    - Unknown word (SAMPLER)      -- Info.mipmapMode := VK_SAMPLER_MIPMAP_MODE_NEAREST
Engine/neo-world-graphics.adb:975:60    - Unknown word (MODE)         -- = VK_SAMPLER_MIPMAP_MODE_NEAREST;
Engine/neo-world-graphics.adb:975:65    - Unknown word (NEAREST)      -- SAMPLER_MIPMAP_MODE_NEAREST;
Engine/neo-world-graphics.adb:977:25    - Unknown word (Clamp)        -- case Material.Clamp is
Engine/neo-world-graphics.adb:978:21    - Unknown word (Clamp)        -- when No_Clamp =>
Engine/neo-world-graphics.adb:979:35    - Unknown word (Mode)         -- Sampler_Info.addressModeU := VK_SAMPLER_ADDRESS
Engine/neo-world-graphics.adb:979:47    - Unknown word (SAMPLER)      -- Info.addressModeU := VK_SAMPLER_ADDRESS_MODE_REPEAT
Engine/neo-world-graphics.adb:979:63    - Unknown word (MODE)         -- VK_SAMPLER_ADDRESS_MODE_REPEAT;
Engine/neo-world-graphics.adb:979:68    - Unknown word (REPEAT)       -- SAMPLER_ADDRESS_MODE_REPEAT;
Engine/neo-world-graphics.adb:97:16     - Unknown word (Uniforms)    -- Buffered_Uniforms.Insert (U (Name_ID)
Engine/neo-world-graphics.adb:980:47    - Unknown word (SAMPLER)      -- Info.addressModeV := VK_SAMPLER_ADDRESS_MODE_REPEAT
Engine/neo-world-graphics.adb:980:68    - Unknown word (REPEAT)       -- SAMPLER_ADDRESS_MODE_REPEAT;
Engine/neo-world-graphics.adb:981:68    - Unknown word (REPEAT)       -- SAMPLER_ADDRESS_MODE_REPEAT;
Engine/neo-world-graphics.adb:982:25    - Unknown word (Clamp)        -- when Normal_Clamp =>
Engine/neo-world-graphics.adb:983:68    - Unknown word (CLAMP)       -- SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE;
Engine/neo-world-graphics.adb:983:77    - Unknown word (EDGE)        -- ADDRESS_MODE_CLAMP_TO_EDGE;
Engine/neo-world-graphics.adb:984:68    - Unknown word (CLAMP)       -- SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE;
Engine/neo-world-graphics.adb:984:77    - Unknown word (EDGE)        -- ADDRESS_MODE_CLAMP_TO_EDGE;
Engine/neo-world-graphics.adb:985:68    - Unknown word (CLAMP)       -- SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE;
Engine/neo-world-graphics.adb:985:77    - Unknown word (EDGE)        -- ADDRESS_MODE_CLAMP_TO_EDGE;
Engine/neo-world-graphics.adb:987:28    - Unknown word (border)      -- Sampler_Info.borderColor := VK_BORDER_COLOR
Engine/neo-world-graphics.adb:987:34    - Unknown word (Color)       -- Sampler_Info.borderColor := VK_BORDER_COLOR
Engine/neo-world-graphics.adb:987:47    - Unknown word (BORDER)      -- Info.borderColor := VK_BORDER_COLOR_FLOAT_TRANSPARENT
Engine/neo-world-graphics.adb:988:68    - Unknown word (CLAMP)       -- SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER;
Engine/neo-world-graphics.adb:988:77    - Unknown word (BORDER)      -- ADDRESS_MODE_CLAMP_TO_BORDER;
Engine/neo-world-graphics.adb:989:68    - Unknown word (CLAMP)       -- SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER;
Engine/neo-world-graphics.adb:989:77    - Unknown word (BORDER)      -- ADDRESS_MODE_CLAMP_TO_BORDER;
Engine/neo-world-graphics.adb:98:47     - Unknown word (Kind)        -- Kind => Uniform_Buffer
Engine/neo-world-graphics.adb:990:77    - Unknown word (BORDER)      -- ADDRESS_MODE_CLAMP_TO_BORDER;
Engine/neo-world-graphics.adb:992:28    - Unknown word (border)      -- Sampler_Info.borderColor := VK_BORDER_COLOR
Engine/neo-world-graphics.adb:992:66    - Unknown word (OPAQUE)      -- VK_BORDER_COLOR_FLOAT_OPAQUE_BLACK;
Engine/neo-world-graphics.adb:99:47     - Unknown word (Binding)     -- Binding => Binding,
Engine/neo-world-graphics.ads:101:33    - Unknown word (Physical)     -- Limits : aliased VkPhysicalDeviceLimits
Engine/neo-world-graphics.ads:102:33    - Unknown word (Physical)     -- Properties : aliased VkPhysicalDeviceProperties
Engine/neo-world-graphics.ads:103:3     - Unknown word (Memory)       -- Memory_Properties : aliased
Engine/neo-world-graphics.ads:103:33    - Unknown word (Physical)     -- Properties : aliased VkPhysicalDeviceMemoryProperties
Engine/neo-world-graphics.ads:103:47    - Unknown word (Memory)       -- aliased VkPhysicalDeviceMemoryProperties := (others
Engine/neo-world-graphics.ads:106:6     - Unknown word (Memory)       -- -- Memory --
Engine/neo-world-graphics.ads:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-world-graphics.ads:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-world-graphics.ads:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo-world-graphics.ads:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-world-graphics.ads:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-world-graphics.ads:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-world-graphics.ads:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-world-graphics.ads:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-world-graphics.ads:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-world-graphics.ads:110:15    - Unknown word (Kind)         -- type Filter_Kind is (Nearest_Filter
Engine/neo-world-graphics.ads:110:28    - Unknown word (Nearest)      -- Filter_Kind is (Nearest_Filter, Linear_Filter
Engine/neo-world-graphics.ads:110:45    - Unknown word (Linear)       -- is (Nearest_Filter,  Linear_Filter);
Engine/neo-world-graphics.ads:111:15    - Unknown word (Kind)         -- type Buffer_Kind is (Uniform_Buffer
Engine/neo-world-graphics.ads:111:28    - Unknown word (Uniform)      -- Buffer_Kind is (Uniform_Buffer, Image_Buffer
Engine/neo-world-graphics.ads:111:64    - Unknown word (Other)        -- Image_Buffer, Other_Buffer);
Engine/neo-world-graphics.ads:112:14    - Unknown word (Kind)         -- type Usage_Kind is (GPU_Usage,
Engine/neo-world-graphics.ads:113:103   - Unknown word (Allocation)   -- Allocation, Optimal_Image_Allocation);
Engine/neo-world-graphics.ads:113:19    - Unknown word (Kind)         -- type Allocation_Kind is (Free_Allocation
Engine/neo-world-graphics.ads:113:33    - Unknown word (Allocation)   -- Allocation_Kind is (Free_Allocation, Buffer_Allocation,
Engine/neo-world-graphics.ads:113:52    - Unknown word (Allocation)   -- Free_Allocation, Buffer_Allocation, Linear_Image_Allocation
Engine/neo-world-graphics.ads:113:64    - Unknown word (Linear)       -- Buffer_Allocation, Linear_Image_Allocation, Optimal
Engine/neo-world-graphics.ads:113:77    - Unknown word (Allocation)   -- Allocation, Linear_Image_Allocation, Optimal_Image_Allocation
Engine/neo-world-graphics.ads:113:8     - Unknown word (Allocation)   -- type Allocation_Kind is (Free_Allocation
Engine/neo-world-graphics.ads:113:89    - Unknown word (Optimal)      -- Linear_Image_Allocation, Optimal_Image_Allocation);
Engine/neo-world-graphics.ads:115:13    - Unknown word (element)      -- -- Memory element within a Heap
Engine/neo-world-graphics.ads:115:21    - Unknown word (within)       -- -- Memory element within a Heap
Engine/neo-world-graphics.ads:115:30    - Unknown word (Heap)         -- Memory element within a Heap
Engine/neo-world-graphics.ads:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-world-graphics.ads:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-world-graphics.ads:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-world-graphics.ads:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-world-graphics.ads:120:7     - Unknown word (Offset)       -- Offset : Int_64_Unsigned
Engine/neo-world-graphics.ads:122:7     - Unknown word (Kind)         -- Kind : Allocation
Engine/neo-world-graphics.ads:123:13    - Unknown word (Previous)     -- Next, Previous : Ptr_Allocation_State
Engine/neo-world-graphics.ads:127:18    - Unknown word (allocatable)  -- -- Dynamically allocatable list of memory allocations
Engine/neo-world-graphics.ads:127:38    - Unknown word (memory)       -- allocatable list of memory allocations which share
Engine/neo-world-graphics.ads:127:45    - Unknown word (allocations)  -- allocatable list of memory allocations which share the same
Engine/neo-world-graphics.ads:127:57    - Unknown word (which)        -- of memory allocations which share the same usage
Engine/neo-world-graphics.ads:127:6     - Unknown word (Dynamically)  -- -- Dynamically allocatable list of
Engine/neo-world-graphics.ads:127:73    - Unknown word (same)         -- allocations which share the same usage
Engine/neo-world-graphics.ads:128:8     - Unknown word (Heap)         -- type Heap_State (Usage : Usage
Engine/neo-world-graphics.ads:130:7     - Unknown word (Offset)       -- Offset :         Int
Engine/neo-world-graphics.ads:131:7     - Unknown word (Allocated)    -- Allocated :         Int_6
Engine/neo-world-graphics.ads:132:13    - Unknown word (Chunk)        -- First_Chunk :         Ptr_Allocation
Engine/neo-world-graphics.ads:136:11    - Unknown word (Vector)       -- package Vector_Heap is new Neo.Core
Engine/neo-world-graphics.ads:136:18    - Unknown word (Heap)         -- package Vector_Heap is new Neo.Core.Vectors
Engine/neo-world-graphics.ads:136:39    - Unknown word (Vectors)      -- Heap is new Neo.Core.Vectors (Heap_State); use Vector
Engine/neo-world-graphics.ads:136:48    - Unknown word (Heap)         -- new Neo.Core.Vectors (Heap_State); use Vector_Heap
Engine/neo-world-graphics.ads:136:65    - Unknown word (Vector)       -- Vectors (Heap_State); use Vector_Heap.Unsafe;
Engine/neo-world-graphics.ads:136:72    - Unknown word (Heap)         -- Heap_State); use Vector_Heap.Unsafe;
Engine/neo-world-graphics.ads:136:77    - Unknown word (Unsafe)       -- State); use Vector_Heap.Unsafe;
Engine/neo-world-graphics.ads:138:20    - Unknown word (structure)    -- -- Internal data structure to aggregate VkBuffer
Engine/neo-world-graphics.ads:138:6     - Unknown word (Internal)     -- -- Internal data structure to aggregate
Engine/neo-world-graphics.ads:139:77    - Unknown word (Other)        -- Kind : Buffer_Kind := Other_Buffer) is record
Engine/neo-world-graphics.ads:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-world-graphics.ads:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-world-graphics.ads:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-world-graphics.ads:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-world-graphics.ads:140:31    - Unknown word (Vector)       -- Heap :         Vector_Heap.Cursor := Vector
Engine/neo-world-graphics.ads:140:43    - Unknown word (Cursor)       -- Vector_Heap.Cursor := Vector_Heap.NO_ELEMENT
Engine/neo-world-graphics.ads:140:68    - Unknown word (ELEMENT)      -- Cursor := Vector_Heap.NO_ELEMENT;
Engine/neo-world-graphics.ads:143:62    - Unknown word (bytes)        -- Unsigned_C := 0; -- In bytes
Engine/neo-world-graphics.ads:144:7     - Unknown word (Offset)       -- Offset :         Int
Engine/neo-world-graphics.ads:149:11    - Unknown word (Width)        -- Width :         Int_Unsigned
Engine/neo-world-graphics.ads:150:11    - Unknown word (Height)       -- Height :         Int_Unsigned
Engine/neo-world-graphics.ads:152:50    - Unknown word (Nearest)      -- Filter_Kind := Nearest_Filter;
Engine/neo-world-graphics.ads:154:11    - Unknown word (Sampler)      -- Sampler : aliased Ptr
Engine/neo-world-graphics.ads:154:65    - Unknown word (Sampler)      -- := NULL_PTR; -- VkSampler
Engine/neo-world-graphics.ads:155:14    - Unknown word (Uniform)      -- when Uniform_Buffer =>
Engine/neo-world-graphics.ads:156:11    - Unknown word (Binding)      -- Binding : Int_Unsigned_C
Engine/neo-world-graphics.ads:157:11    - Unknown word (Layout)       -- Layout_Set : Int_Unsigned_C
Engine/neo-world-graphics.ads:158:12    - Unknown word (Other)        -- when Other_Buffer => null; end
Engine/neo-world-graphics.ads:160:41    - Unknown word (Vectors)      -- Buffer is new Neo.Core.Vectors (Buffer_State);
Engine/neo-world-graphics.ads:161:11    - Unknown word (Hashed)       -- package Hashed_Buffer is new Neo.Core
Engine/neo-world-graphics.ads:161:41    - Unknown word (Hashed)       -- Buffer is new Neo.Core.Hashed (Buffer_State); use
Engine/neo-world-graphics.ads:161:68    - Unknown word (Hashed)       -- (Buffer_State); use Hashed_Buffer.Unsafe;
Engine/neo-world-graphics.ads:161:82    - Unknown word (Unsafe)       -- ; use Hashed_Buffer.Unsafe;
Engine/neo-world-graphics.ads:163:31    - Unknown word (segmenting)   -- Buffered mesh table with segmenting
Engine/neo-world-graphics.ads:165:22    - Unknown word (Unbound)      -- Material : Str_Unbound := NULL_STR_UNBOUND
Engine/neo-world-graphics.ads:165:43    - Unknown word (UNBOUND)      -- Unbound := NULL_STR_UNBOUND;
Engine/neo-world-graphics.ads:168:46    - Unknown word (Positive)     -- Mesh_Segment is array (Positive range <>) of Buffered
Engine/neo-world-graphics.ads:169:32    - Unknown word (Animated)     -- Buffered_Mesh_State (Is_Animated : Bool; Segment_Count
Engine/neo-world-graphics.ads:169:65    - Unknown word (Positive)     -- Bool; Segment_Count : Positive) is record
Engine/neo-world-graphics.ads:170:7     - Unknown word (Vertices)     -- Vertices : Buffer_State := (others
Engine/neo-world-graphics.ads:172:15    - Unknown word (Animated)     -- case Is_Animated is when True =>
Engine/neo-world-graphics.ads:172:32    - Unknown word (True)         -- Is_Animated is when True =>
Engine/neo-world-graphics.ads:174:12    - Unknown word (False)        -- when False => null; end case;
Engine/neo-world-graphics.ads:177:11    - Unknown word (Hashed)       -- package Hashed_Buffer_Mesh is new Neo
Engine/neo-world-graphics.ads:177:46    - Unknown word (Hashed)       -- Mesh is new Neo.Core.Hashed (Ptr_Buffered_Mesh_State
Engine/neo-world-graphics.ads:183:13    - Unknown word (Safe)         -- protected Safe_Queue is
Engine/neo-world-graphics.ads:184:23    - Unknown word (Present)      -- function vkQueuePresent (pPresentInfo : Ptr
Engine/neo-world-graphics.ads:184:33    - Unknown word (Present)      -- function vkQueuePresent (pPresentInfo : Ptr_VkPresentInfoKHR
Engine/neo-world-graphics.ads:184:53    - Unknown word (Present)      -- pPresentInfo : Ptr_VkPresentInfoKHR) -- const VkPresentInf
Engine/neo-world-graphics.ads:184:80    - Unknown word (Present)      -- VkPresentInfoKHR) -- const VkPresentInfoKHR*
Engine/neo-world-graphics.ads:187:33    - Unknown word (Submits)      -- pSubmits : Ptr_VkSubmitInfo
Engine/neo-world-graphics.ads:188:32    - Unknown word (fence)       -- fence : Ptr)
Engine/neo-world-graphics.ads:188:69    - Unknown word (Fence)       -- Ptr) -- VkFence
Engine/neo-world-graphics.ads:193:6     - Unknown word (Allocator)   -- -- Allocator --
Engine/neo-world-graphics.ads:196:13    - Unknown word (Safe)        -- protected Safe_Allocation is
Engine/neo-world-graphics.ads:197:17    - Unknown word (Throw)       -- procedure Throw_Away (Buffer
Engine/neo-world-graphics.ads:197:23    - Unknown word (Away)        -- procedure Throw_Away (Buffer : Buffer
Engine/neo-world-graphics.ads:199:47    - Unknown word (Finalization) -- Buffers (Force_Total_Finalization : Bool := False);
Engine/neo-world-graphics.ads:199:70    - Unknown word (False)        -- Finalization : Bool := False);
Engine/neo-world-graphics.ads:19:4      - Unknown word (Renderer)     -- -- Renderer for the global engine
Engine/neo-world-graphics.ads:201:16    - Unknown word (Garbage)      -- Buffered_Garbage : Vector_Buffer.Unsafe
Engine/neo-world-graphics.ads:201:40    - Unknown word (Unsafe)       -- Garbage : Vector_Buffer.Unsafe.Vector;
Engine/neo-world-graphics.ads:202:38    - Unknown word (Unsafe)       -- : Vector_Heap.Unsafe.Vector;
Engine/neo-world-graphics.ads:202:7     - Unknown word (Heaps)        -- Heaps : Vector
Engine/neo-world-graphics.ads:206:106   - Unknown word (Positive)     -- Size : Int_Ptr; Count : Positive);
Engine/neo-world-graphics.ads:206:42    - Unknown word (Bits)         -- Buffer_State; Usage_Bits : Int_Unsigned_C; Data
Engine/neo-world-graphics.ads:208:12    - Unknown word (Find)         -- function Find_Memory_Type_Index (Memory
Engine/neo-world-graphics.ads:208:48    - Unknown word (Bits)         -- Type_Index (Memory_Type_Bits : Int_Unsigned_C; Usage
Engine/neo-world-graphics.ads:20:19     - Unknown word (Graphics)     -- package Neo.World.Graphics is
Engine/neo-world-graphics.ads:219:12    - Unknown word (Uniforms)     -- Buffered_Uniforms : Hashed_Buffer.Unsafe
Engine/neo-world-graphics.ads:219:38    - Unknown word (Unsafe)       -- Uniforms : Hashed_Buffer.Unsafe.Map; -- Unsafe, should
Engine/neo-world-graphics.ads:219:61    - Unknown word (should)       -- Unsafe.Map; -- Unsafe, should only be used by the
Engine/neo-world-graphics.ads:220:38    - Unknown word (Safe)         -- Images : Hashed_Buffer.Safe_Map;
Engine/neo-world-graphics.ads:221:43    - Unknown word (Safe)         -- Hashed_Buffer_Mesh.Safe_Map;
Engine/neo-world-graphics.ads:222:40    - Unknown word (Safe)         -- Materials : Hashed_Material.Safe_Map;
Engine/neo-world-graphics.ads:224:23    - Unknown word (marking)      -- -- For user-defined marking and resource tracking
Engine/neo-world-graphics.ads:234:30    - Unknown word (Fence)        -- Fence, -- VkFence
Engine/neo-world-graphics.ads:234:7     - Unknown word (Fence)        -- Fence, -- VkFence
Engine/neo-world-graphics.ads:239:7     - Unknown word (Acquire)      -- Acquire_Status, -- VkSemaphore
Engine/neo-world-graphics.ads:244:46    - Unknown word (Vectors)      -- Framebuffer is new Neo.Core.Vectors (Framebuffer_State)
Engine/neo-world-graphics.ads:252:3     - Unknown word (Depth)        -- Depth_Image : Buffer
Engine/neo-world-graphics.ads:255:6     - Unknown word (Shaders)      -- -- Shaders --
Engine/neo-world-graphics.ads:258:14    - Unknown word (Uniforms)     -- type Array_Uniforms is array (1..64) of
Engine/neo-world-graphics.ads:258:47    - Unknown word (Unbound)      -- array (1..64) of Str_Unbound; -- Max uniforms is
Engine/neo-world-graphics.ads:258:63    - Unknown word (uniforms)     -- Str_Unbound; -- Max uniforms is 64
Engine/neo-world-graphics.ads:259:53    - Unknown word (Tesselation)  -- Stage, Vertex_Stage, Tesselation_Stage, Geometry_Stage
Engine/neo-world-graphics.ads:259:72    - Unknown word (Geometry)     -- Tesselation_Stage, Geometry_Stage);
Engine/neo-world-graphics.ads:261:7     - Unknown word (Program)      -- Program : aliased Ptr := NULL
Engine/neo-world-graphics.ads:262:24    - Unknown word (Uniforms)     -- Uniforms : Array_Uniforms := (others => NULL_STR
Engine/neo-world-graphics.ads:262:56    - Unknown word (UNBOUND)      -- (others => NULL_STR_UNBOUND);
Engine/neo-world-graphics.ads:262:7     - Unknown word (Uniforms)     -- Uniforms : Array_Uniforms :=
Engine/neo-world-graphics.ads:263:106   - Unknown word (could)        -- that access samplers... could be too rigid
Engine/neo-world-graphics.ads:263:119   - Unknown word (rigid)        -- samplers... could be too rigid
Engine/neo-world-graphics.ads:263:57    - Unknown word (stages)       -- Stage => -- Fragment stages are the only ones that
Engine/neo-world-graphics.ads:263:77    - Unknown word (ones)         -- stages are the only ones that access samplers
Engine/neo-world-graphics.ads:263:82    - Unknown word (that)         -- stages are the only ones that access samplers... could
Engine/neo-world-graphics.ads:263:94    - Unknown word (samplers)     -- only ones that access samplers... could be too rigid
Engine/neo-world-graphics.ads:267:40    - Unknown word (Vectors)      -- Stage is new Neo.Core.Vectors (Stage_State); use Vector
Engine/neo-world-graphics.ads:269:8     - Unknown word (Shader)       -- type Shader_State is record
Engine/neo-world-graphics.ads:26:25     - Unknown word (joint)        -- Size of the global joint buffer uniform size
Engine/neo-world-graphics.ads:26:38     - Unknown word (uniform)      -- global joint buffer uniform size in bytes and shader
Engine/neo-world-graphics.ads:26:54     - Unknown word (bytes)        -- buffer uniform size in bytes and shader accessability
Engine/neo-world-graphics.ads:26:64     - Unknown word (shader)       -- uniform size in bytes and shader accessability
Engine/neo-world-graphics.ads:26:71     - Unknown word (accessability) -- in bytes and shader accessability
Engine/neo-world-graphics.ads:270:7     - Unknown word (Stages)       -- Stages :
Engine/neo-world-graphics.ads:271:56    - Unknown word (Shader)       -- Vector_VkPipelineShaderStageCreateInfo.Unsafe
Engine/neo-world-graphics.ads:271:7     - Unknown word (Stages)       -- Stages_Info :
Engine/neo-world-graphics.ads:272:16    - Unknown word (Layout)       -- Pipeline_Layout : aliased Ptr
Engine/neo-world-graphics.ads:272:69    - Unknown word (Layout)       -- NULL_PTR; -- VkPipelineLayout
Engine/neo-world-graphics.ads:275:15    - Unknown word (Shader)       -- package Map_Shader is new Neo.Core.Hashed
Engine/neo-world-graphics.ads:275:46    - Unknown word (Shader)       -- new Neo.Core.Hashed (Shader_State);
Engine/neo-world-graphics.ads:277:21    - Unknown word (texture)      -- -- "Samplers" are texture parameters for GPU shaders
Engine/neo-world-graphics.ads:277:48    - Unknown word (shaders)      -- texture parameters for GPU shaders
Engine/neo-world-graphics.ads:277:7     - Unknown word (Samplers)     -- -- "Samplers" are texture parameters
Engine/neo-world-graphics.ads:279:5     - Unknown word (Binding)      -- Binding : Int_Unsigned_C;
Engine/neo-world-graphics.ads:27:16     - Unknown word (BINDING)       -- JOINT_BUFFER_BINDING : constant Int_Unsigned
Engine/neo-world-graphics.ads:27:3      - Unknown word (JOINT)         -- JOINT_BUFFER_BINDING :
Engine/neo-world-graphics.ads:27:42     - Unknown word (Unsigned)      -- BINDING : constant Int_Unsigned_C := 3;
Engine/neo-world-graphics.ads:281:11    - Unknown word (Sampler)      -- package Sampler is
Engine/neo-world-graphics.ads:284:20    - Unknown word (Binding)      -- function Get_Binding return Int_Unsigned
Engine/neo-world-graphics.ads:284:54    - Unknown word (Binding)      -- return Int_Unsigned_C is (Binding);
Engine/neo-world-graphics.ads:287:24    - Unknown word (accessable)   -- - Global parameters accessable to shaders
Engine/neo-world-graphics.ads:287:38    - Unknown word (shaders)      -- parameters accessable to shaders
Engine/neo-world-graphics.ads:28:16     - Unknown word (LAYOUT)        -- JOINT_BUFFER_LAYOUT_SET : constant Int_Unsigned
Engine/neo-world-graphics.ads:28:3      - Unknown word (JOINT)         -- JOINT_BUFFER_LAYOUT_SET :
Engine/neo-world-graphics.ads:28:42     - Unknown word (Unsigned)      -- LAYOUT_SET : constant Int_Unsigned_C := 3;
Engine/neo-world-graphics.ads:290:10    - Unknown word (Uniform)      -- type Uniform_T is private; -- Will
Engine/neo-world-graphics.ads:290:35    - Unknown word (Will)         -- Uniform_T is private; -- Will NOT work with array
Engine/neo-world-graphics.ads:290:79    - Unknown word (additional)   -- array types due to Ada's additional "dope"
Engine/neo-world-graphics.ads:290:91    - Unknown word (dope)         -- to Ada's additional "dope"
Engine/neo-world-graphics.ads:293:11    - Unknown word (Uniform)      -- package Uniform is
Engine/neo-world-graphics.ads:294:28    - Unknown word (Uniform)      -- procedure Set (Val : Uniform_T);
Engine/neo-world-graphics.ads:299:13    - Unknown word (stuff)        -- -- Shader stuff
Engine/neo-world-graphics.ads:299:6     - Unknown word (Shader)       -- -- Shader stuff
Engine/neo-world-graphics.ads:29:3      - Unknown word (JOINT)         -- JOINT_BUFFER_SIZE :
Engine/neo-world-graphics.ads:29:45     - Unknown word (Unsigned)      -- : constant Int_64_Unsigned_C := Int_64_Unsigned
Engine/neo-world-graphics.ads:29:66     - Unknown word (Unsigned)      -- Unsigned_C := Int_64_Unsigned_C (kB);
Engine/neo-world-graphics.ads:302:5     - Unknown word (Stages)       -- Stages : Vector_Stage.Unsafe
Engine/neo-world-graphics.ads:305:6     - Unknown word (Writes)       -- -- Writes to
Engine/neo-world-graphics.ads:306:51    - Unknown word (False)        -- (Is_Image : Bool := False) is record
Engine/neo-world-graphics.ads:309:14    - Unknown word (True)         -- when True => Image_Info  : aliased
Engine/neo-world-graphics.ads:310:14    - Unknown word (False)        -- when False => Buffer_Info : aliased
Engine/neo-world-graphics.ads:313:42    - Unknown word (Vectors)      -- Write_Descriptor is new Vectors (Write_Descriptor_State
Engine/neo-world-graphics.ads:315:3     - Unknown word (Writes)       -- Writes : Vector
Engine/neo-world-graphics.ads:316:3     - Unknown word (Shaders)      -- Shaders : Map_Shader
Engine/neo-world-graphics.ads:317:43    - Unknown word (main)         -- aliased Str_8_C := "main";
Engine/neo-world-graphics.ads:318:3     - Unknown word (Sampler)      -- Sampler_Count : Natural
Engine/neo-world-graphics.ads:31:19     - Unknown word (garbage)       -- -- Frequency of garbage collection
Engine/neo-world-graphics.ads:31:6      - Unknown word (Frequency)     -- -- Frequency of garbage collection
Engine/neo-world-graphics.ads:327:10    - Unknown word (Rasterization) -- -- Rasterization
Engine/neo-world-graphics.ads:328:12    - Unknown word (Mode)          -- Cull_Mode : Int_Unsigned
Engine/neo-world-graphics.ads:328:49    - Unknown word (CULL)          -- Int_Unsigned_C := VK_CULL_MODE_FRONT_BIT;
Engine/neo-world-graphics.ads:328:54    - Unknown word (MODE)          -- Unsigned_C := VK_CULL_MODE_FRONT_BIT;
Engine/neo-world-graphics.ads:328:7     - Unknown word (Cull)          -- Cull_Mode : Int
Engine/neo-world-graphics.ads:328:84    - Unknown word (Cull)          -- FRONT_BIT; -- VkCullModeFlagBits
Engine/neo-world-graphics.ads:328:88    - Unknown word (Mode)          -- BIT; -- VkCullModeFlagBits
Engine/neo-world-graphics.ads:328:92    - Unknown word (Flag)          -- -- VkCullModeFlagBits
Engine/neo-world-graphics.ads:328:96    - Unknown word (Bits)          -- -- VkCullModeFlagBits
Engine/neo-world-graphics.ads:329:60    - Unknown word (COUNTER)       -- Unsigned_C := VK_FRONT_FACE_COUNTER_CLOCKWISE; -- VkFrontFace
Engine/neo-world-graphics.ads:329:68    - Unknown word (CLOCKWISE)     -- VK_FRONT_FACE_COUNTER_CLOCKWISE; -- VkFrontFace
Engine/neo-world-graphics.ads:32:11     - Unknown word (POLLING)       -- GARBAGE_POLLING_DURATION : constant
Engine/neo-world-graphics.ads:32:19     - Unknown word (DURATION)      -- GARBAGE_POLLING_DURATION : constant Duration
Engine/neo-world-graphics.ads:32:3      - Unknown word (GARBAGE)       -- GARBAGE_POLLING_DURATION : constant
Engine/neo-world-graphics.ads:32:39     - Unknown word (Duration)      -- DURATION : constant Duration := 0.2;
Engine/neo-world-graphics.ads:330:11    - Unknown word (Mirror)        -- Has_Mirror_View : Bool
Engine/neo-world-graphics.ads:330:46    - Unknown word (False)         -- : Bool           := False;
Engine/neo-world-graphics.ads:331:19    - Unknown word (Offset)        -- Has_Polygon_Offset : Bool           :=
Engine/neo-world-graphics.ads:333:10    - Unknown word (Color)         -- -- Color blending
Engine/neo-world-graphics.ads:333:16    - Unknown word (blending)      -- -- Color blending
Engine/neo-world-graphics.ads:334:13    - Unknown word (Blend)         -- Color_Blend : Int_Unsigned
Engine/neo-world-graphics.ads:334:55    - Unknown word (BLEND)         -- Int_Unsigned_C := VK_BLEND_OP_ADD; -- VkBlendOp
Engine/neo-world-graphics.ads:334:7     - Unknown word (Color)         -- Color_Blend
Engine/neo-world-graphics.ads:334:79    - Unknown word (Blend)         -- BLEND_OP_ADD; -- VkBlendOp
Engine/neo-world-graphics.ads:335:13    - Unknown word (Blend)         -- Alpha_Blend : Int_Unsigned
Engine/neo-world-graphics.ads:335:55    - Unknown word (BLEND)         -- Int_Unsigned_C := VK_BLEND_OP_ADD; -- VkBlendOp
Engine/neo-world-graphics.ads:335:79    - Unknown word (Blend)         -- BLEND_OP_ADD; -- VkBlendOp
Engine/neo-world-graphics.ads:336:14    - Unknown word (Blend)         -- Source_Blend_Factor : Int_Unsigned
Engine/neo-world-graphics.ads:336:55    - Unknown word (BLEND)         -- Int_Unsigned_C := VK_BLEND_FACTOR_ZERO; -- VkBlendFactor
Engine/neo-world-graphics.ads:337:55    - Unknown word (BLEND)         -- Int_Unsigned_C := VK_BLEND_FACTOR_ZERO; -- VkBlendFactor
Engine/neo-world-graphics.ads:338:7     - Unknown word (Color)         -- Color_Mask
Engine/neo-world-graphics.ads:338:79    - Unknown word (Color)         -- -- VkColorComponentFlags
Engine/neo-world-graphics.ads:338:93    - Unknown word (Flags)         -- -- VkColorComponentFlags
Engine/neo-world-graphics.ads:340:10    - Unknown word (Depth)         -- -- Depth stencil
Engine/neo-world-graphics.ads:340:16    - Unknown word (stencil)       -- -- Depth stencil
Engine/neo-world-graphics.ads:341:49    - Unknown word (STENCIL)       -- Int_Unsigned_C := VK_STENCIL_OP_KEEP; -- VkStencilOp
Engine/neo-world-graphics.ads:341:60    - Unknown word (KEEP)          -- Unsigned_C := VK_STENCIL_OP_KEEP; -- VkStencilOp
Engine/neo-world-graphics.ads:341:72    - Unknown word (Stencil)       -- STENCIL_OP_KEEP; -- VkStencilOp
Engine/neo-world-graphics.ads:342:49    - Unknown word (STENCIL)       -- Int_Unsigned_C := VK_STENCIL_OP_KEEP; -- VkStencilOp
Engine/neo-world-graphics.ads:342:60    - Unknown word (KEEP)          -- Unsigned_C := VK_STENCIL_OP_KEEP; -- VkStencilOp
Engine/neo-world-graphics.ads:342:72    - Unknown word (Stencil)       -- STENCIL_OP_KEEP; -- VkStencilOp
Engine/neo-world-graphics.ads:343:13    - Unknown word (Depth)         -- Front_Depth_Fail : Int_Unsigned
Engine/neo-world-graphics.ads:343:49    - Unknown word (STENCIL)       -- Int_Unsigned_C := VK_STENCIL_OP_KEEP; -- VkStencilOp
Engine/neo-world-graphics.ads:343:60    - Unknown word (KEEP)          -- Unsigned_C := VK_STENCIL_OP_KEEP; -- VkStencilOp
Engine/neo-world-graphics.ads:343:72    - Unknown word (Stencil)       -- STENCIL_OP_KEEP; -- VkStencilOp
Engine/neo-world-graphics.ads:344:49    - Unknown word (STENCIL)       -- Int_Unsigned_C := VK_STENCIL_OP_KEEP; -- VkStencilOp
Engine/neo-world-graphics.ads:344:60    - Unknown word (KEEP)          -- Unsigned_C := VK_STENCIL_OP_KEEP; -- VkStencilOp
Engine/neo-world-graphics.ads:344:7     - Unknown word (Back)          -- Back_Fail : Int
Engine/neo-world-graphics.ads:344:72    - Unknown word (Stencil)       -- STENCIL_OP_KEEP; -- VkStencilOp
Engine/neo-world-graphics.ads:345:49    - Unknown word (STENCIL)       -- Int_Unsigned_C := VK_STENCIL_OP_KEEP; -- VkStencilOp
Engine/neo-world-graphics.ads:345:60    - Unknown word (KEEP)          -- Unsigned_C := VK_STENCIL_OP_KEEP; -- VkStencilOp
Engine/neo-world-graphics.ads:345:7     - Unknown word (Back)          -- Back_Pass : Int
Engine/neo-world-graphics.ads:345:72    - Unknown word (Stencil)       -- STENCIL_OP_KEEP; -- VkStencilOp
Engine/neo-world-graphics.ads:346:12    - Unknown word (Depth)         -- Back_Depth_Fail : Int_Unsigned
Engine/neo-world-graphics.ads:346:7     - Unknown word (Back)          -- Back_Depth_Fail : Int
Engine/neo-world-graphics.ads:347:60    - Unknown word (NEVER)         -- Unsigned_C := VK_COMPARE_OP_NEVER; -- VkCompareOp
Engine/neo-world-graphics.ads:348:60    - Unknown word (NEVER)         -- Unsigned_C := VK_COMPARE_OP_NEVER; -- VkCompareOp
Engine/neo-world-graphics.ads:34:23     - Unknown word (formats)       -- -- Acceptable image formats for our render targets
Engine/neo-world-graphics.ads:34:6      - Unknown word (Acceptable)    -- -- Acceptable image formats for our
Engine/neo-world-graphics.ads:352:14    - Unknown word (Bounds)        -- Depths_Bounds_Test : Bool
Engine/neo-world-graphics.ads:352:7     - Unknown word (Depths)        -- Depths_Bounds_Test : Bool
Engine/neo-world-graphics.ads:353:11    - Unknown word (Back)          -- Has_Back_Stencil : Bool
Engine/neo-world-graphics.ads:35:111    - Unknown word (SRGB)          -- VK_COLOR_SPACE_SRGB_NONLINEAR_KHR);
Engine/neo-world-graphics.ads:35:116    - Unknown word (NONLINEAR)     -- VK_COLOR_SPACE_SRGB_NONLINEAR_KHR);
Engine/neo-world-graphics.ads:35:13     - Unknown word (SWAPCHAIN)     -- SUPPORTED_SWAPCHAIN_FORMAT : constant VkSurfaceFo
Engine/neo-world-graphics.ads:35:43     - Unknown word (Surface)       -- FORMAT : constant VkSurfaceFormatKHR := (VK_FORMAT
Engine/neo-world-graphics.ads:35:85     - Unknown word (UNORM)         -- (VK_FORMAT_B8G8R8A8_UNORM, VK_COLOR_SPACE
Engine/neo-world-graphics.ads:35:99     - Unknown word (COLOR)         -- G8R8A8_UNORM, VK_COLOR_SPACE_SRGB_NONLINEAR
Engine/neo-world-graphics.ads:362:37    - Unknown word (caching)       -- pipelines for reference/caching
Engine/neo-world-graphics.ads:362:6     - Unknown word (Stored)        -- -- Stored pipelines for reference
Engine/neo-world-graphics.ads:364:3     - Unknown word (Previous)      -- Previous_Pipeline : Buffered
Engine/neo-world-graphics.ads:368:6     - Unknown word (Drawing)       -- -- Drawing --
Engine/neo-world-graphics.ads:36:110    - Unknown word (UNORM)         -- UINT, VK_FORMAT_D24_UNORM_S8_UINT);
Engine/neo-world-graphics.ads:36:13     - Unknown word (DEPTH)         -- SUPPORTED_DEPTH_FORMATS : constant
Engine/neo-world-graphics.ads:36:19     - Unknown word (FORMATS)       -- SUPPORTED_DEPTH_FORMATS : constant Array
Engine/neo-world-graphics.ads:36:51     - Unknown word (Unsigned)      -- constant Array_Int_Unsigned_C := (VK_FORMAT_D32
Engine/neo-world-graphics.ads:36:80     - Unknown word (SFLOAT)        -- C := (VK_FORMAT_D32_SFLOAT_S8_UINT, VK_FORMAT_D
Engine/neo-world-graphics.ads:372:36    - Unknown word (Interaction)   -- Interaction_Kind is (Shadow_Interaction, Direct_Interaction
Engine/neo-world-graphics.ads:372:56    - Unknown word (Interaction)   -- Interaction, Direct_Interaction, Translucent_Interaction
Engine/neo-world-graphics.ads:372:69    - Unknown word (Translucent)   -- Direct_Interaction, Translucent_Interaction);
Engine/neo-world-graphics.ads:372:8     - Unknown word (Interaction)   -- type Interaction_Kind is (Shadow_Interaction
Engine/neo-world-graphics.ads:372:81    - Unknown word (Interaction)   -- Interaction, Translucent_Interaction);
Engine/neo-world-graphics.ads:377:25    - Unknown word (Matrix)        -- MVP : Matrix_4D := ZERO_MATRIX_4D
Engine/neo-world-graphics.ads:377:43    - Unknown word (MATRIX)        -- : Matrix_4D := ZERO_MATRIX_4D;
Engine/neo-world-graphics.ads:378:25    - Unknown word (Matrix)        -- Local_To_Global : Matrix_4D := ZERO_MATRIX_4D
Engine/neo-world-graphics.ads:378:43    - Unknown word (MATRIX)        -- : Matrix_4D := ZERO_MATRIX_4D;
Engine/neo-world-graphics.ads:379:25    - Unknown word (Matrix)        -- Local_To_Eye : Matrix_4D := ZERO_MATRIX_4D
Engine/neo-world-graphics.ads:379:43    - Unknown word (MATRIX)        -- : Matrix_4D := ZERO_MATRIX_4D;
Engine/neo-world-graphics.ads:382:31    - Unknown word (Animated)      -- Bottom_Level_State (Is_Animated : Bool := False) is
Engine/neo-world-graphics.ads:382:8     - Unknown word (Bottom)        -- type Bottom_Level_State (Is_Animated
Engine/neo-world-graphics.ads:383:41    - Unknown word (Unbound)       -- Map : Hashed_Str_Unbound.Unsafe.Map;
Engine/neo-world-graphics.ads:384:106   - Unknown word (surfaces)      -- -- All of the mesh surfaces must also be animated
Engine/neo-world-graphics.ads:384:115   - Unknown word (must)          -- of the mesh surfaces must also be animated
Engine/neo-world-graphics.ads:384:120   - Unknown word (also)          -- the mesh surfaces must also be animated
Engine/neo-world-graphics.ads:384:128   - Unknown word (animated)      -- surfaces must also be animated
Engine/neo-world-graphics.ads:384:58    - Unknown word (Unbound)       -- Buffered_Mesh_State; --Str_Unbound := NULL_STR_UNBOUND
Engine/neo-world-graphics.ads:384:78    - Unknown word (UNBOUND)       -- Unbound := NULL_STR_UNBOUND; -- All of the mesh
Engine/neo-world-graphics.ads:387:27    - Unknown word (Matrix)       -- Scissor : Matrix_4D := ZERO_MATRIX
Engine/neo-world-graphics.ads:387:47    - Unknown word (MATRIX)       -- Matrix_4D := ZERO_MATRIX_4D;
Engine/neo-world-graphics.ads:387:7     - Unknown word (Scissor)       -- Scissor : Matrix_
Engine/neo-world-graphics.ads:388:19    - Unknown word (Hack)         -- Model_Depth_Hack : Bool        := False
Engine/neo-world-graphics.ads:389:20    - Unknown word (Hack)         -- Weapon_Depth_Hack : Bool        := False
Engine/neo-world-graphics.ads:389:7     - Unknown word (Weapon)       -- Weapon_Depth_Hack : Bool
Engine/neo-world-graphics.ads:391:17    - Unknown word (Animated)     -- --case Is_Animated is when True => Pose
Engine/neo-world-graphics.ads:391:34    - Unknown word (True)         -- Is_Animated is when True => Pose : Treed_Joint
Engine/neo-world-graphics.ads:391:42    - Unknown word (Pose)         -- Animated is when True => Pose : Treed_Joint.Unsafe
Engine/neo-world-graphics.ads:391:49    - Unknown word (Treed)        -- when True => Pose : Treed_Joint.Unsafe.Tree; when
Engine/neo-world-graphics.ads:391:55    - Unknown word (Joint)        -- True => Pose : Treed_Joint.Unsafe.Tree; when False
Engine/neo-world-graphics.ads:393:18    - Unknown word (Bottom)       -- package Vector_Bottom_Level_State is
Engine/neo-world-graphics.ads:393:69    - Unknown word (Bottom)       -- new Neo.Core.Vectors (Bottom_Level_State);
Engine/neo-world-graphics.ads:394:18    - Unknown word (Cursor)       -- package Vector_Cursor_Bottom_Level_State is
Engine/neo-world-graphics.ads:394:25    - Unknown word (Bottom)       -- package Vector_Cursor_Bottom_Level_State is new Neo
Engine/neo-world-graphics.ads:394:76    - Unknown word (Bottom)       -- Core.Vectors (Vector_Bottom_Level_State.Cursor)
Engine/neo-world-graphics.ads:394:95    - Unknown word (Cursor)       -- Vector_Bottom_Level_State.Cursor);
Engine/neo-world-graphics.ads:395:64    - Unknown word (Cursor)       -- Interaction_Kind) of Vector_Cursor_Bottom_Level_State.Unsafe
Engine/neo-world-graphics.ads:395:8     - Unknown word (Interaction)  -- type Interaction_Array is array (Interaction
Engine/neo-world-graphics.ads:398:32    - Unknown word (Unbound)      -- Material : Str_Unbound := NULL_STR_UNBOUND
Engine/neo-world-graphics.ads:398:52    - Unknown word (UNBOUND)      -- Unbound := NULL_STR_UNBOUND;
Engine/neo-world-graphics.ads:399:15    - Unknown word (Projection)   -- Inverse_Projection : Matrix_4D   := ZERO
Engine/neo-world-graphics.ads:399:28    - Unknown word (Matrix)       -- Inverse_Projection : Matrix_4D := ZERO_MATRIX
Engine/neo-world-graphics.ads:399:48    - Unknown word (MATRIX)       -- Matrix_4D := ZERO_MATRIX_4D;
Engine/neo-world-graphics.ads:399:7     - Unknown word (Inverse)      -- Inverse_Projection : Matrix
Engine/neo-world-graphics.ads:39:44     - Unknown word (Char)          -- constant Array_Ptr_Char_8_C := (C (VK_KHR_MAINTENANCE
Engine/neo-world-graphics.ads:400:7     - Unknown word (Projection)   -- Projection : Matrix_4D
Engine/neo-world-graphics.ads:401:7     - Unknown word (Scissor)      -- Scissor : Matrix
Engine/neo-world-graphics.ads:404:7     - Unknown word (Interactions) -- Interactions : Interaction
Engine/neo-world-graphics.ads:410:12    - Unknown word (Stamp)        -- Time_Stamp : Time        := Clock
Engine/neo-world-graphics.ads:410:36    - Unknown word (Clock)        -- Stamp : Time        := Clock;
Engine/neo-world-graphics.ads:411:10    - Unknown word (Mirror)       -- Is_Mirror : Bool        := False
Engine/neo-world-graphics.ads:414:7     - Unknown word (Scissor)      -- Scissor : Matrix_4D   :
Engine/neo-world-graphics.ads:416:7     - Unknown word (Surfaces)     -- Surfaces : Vector_Bottom_Level
Engine/neo-world-graphics.ads:416:75    - Unknown word (distance)     -- Vector; -- Sorted by distance from origin
Engine/neo-world-graphics.ads:417:37    - Unknown word (Each)         -- : Array_Light; -- Each light kind vector is
Engine/neo-world-graphics.ads:417:48    - Unknown word (kind)         -- Light; -- Each light kind vector is sorted by
Engine/neo-world-graphics.ads:417:53    - Unknown word (vector)       -- -- Each light kind vector is sorted by distance
Engine/neo-world-graphics.ads:417:7     - Unknown word (Lights)       -- Lights : Array_Light;
Engine/neo-world-graphics.ads:417:73    - Unknown word (distance)     -- vector is sorted by distance from the light interaction
Engine/neo-world-graphics.ads:417:97    - Unknown word (interaction)  -- distance from the light interaction
Engine/neo-world-graphics.ads:421:25    - Unknown word (between)      -- Global data shared between the frontend and backend
Engine/neo-world-graphics.ads:423:3     - Unknown word (Joint)        -- Joint_Buffer : Buffer_State
Engine/neo-world-graphics.ads:423:43    - Unknown word (JOINT)        -- Buffer_State := (Size => JOINT_BUFFER_SIZE, others
Engine/neo-world-graphics.ads:425:13    - Unknown word (Draw)         -- procedure Draw (Data : Bottom_Level
Engine/neo-world-graphics.ads:425:46    - Unknown word (Frame)        -- Bottom_Level_State; Frame : in out Framebuffer
Engine/neo-world-graphics.ads:426:24    - Unknown word (Drawing)      -- procedure Initialize_Drawing;
Engine/neo-world-graphics.ads:427:22    - Unknown word (Drawing)      -- procedure Finalize_Drawing;
Engine/neo-world-graphics.ads:42:67     - Unknown word (BIND)          -- C (VK_KHR_BIND_MEMORY2),
Engine/neo-world-graphics.ads:42:72     - Unknown word (MEMORY)        -- C (VK_KHR_BIND_MEMORY2),
Engine/neo-world-graphics.ads:430:6     - Unknown word (Implementation) -- -- Implementation --
Engine/neo-world-graphics.ads:436:11    - Unknown word (Renderer)       -- package Renderer is
Engine/neo-world-graphics.ads:437:23    - Unknown word (Frame)          -- procedure Build_Frame (Frame : in out Framebuffer
Engine/neo-world-graphics.ads:437:30    - Unknown word (Frame)          -- procedure Build_Frame (Frame : in out Framebuffer
Engine/neo-world-graphics.ads:44:67     - Unknown word (SWAPCHAIN)     -- C (VK_KHR_SWAPCHAIN_EXTENSION),
Engine/neo-world-graphics.ads:45:71     - Unknown word (MEMORY)        -- C (VK_KHR_GET_MEMORY_REQUIREMENTS2));
Engine/neo-world-graphics.ads:45:78     - Unknown word (REQUIREMENTS)  -- C (VK_KHR_GET_MEMORY_REQUIREMENTS2));
Engine/neo-world-graphics.ads:46:3      - Unknown word (DEBUGING)      -- DEBUGING_EXTENSIONS : constant
Engine/neo-world-graphics.ads:46:44     - Unknown word (Char)          -- constant Array_Ptr_Char_8_C := (-- C (VK_EXT
Engine/neo-world-graphics.ads:47:72     - Unknown word (LUNARG)        -- -- C (VK_LAYER_LUNARG_API_DUMP_EXTENSION)
Engine/neo-world-graphics.ads:47:83     - Unknown word (DUMP)          -- VK_LAYER_LUNARG_API_DUMP_EXTENSION),
Engine/neo-world-graphics.ads:48:74     - Unknown word (KHRONOS)       -- 1 => C (VK_LAYER_KHRONOS_VALIDATION));
Engine/neo-world-graphics.ads:50:41     - Unknown word (Animated)      -- Static_Vertex_State and Animated_Vertex_State from Neo
Engine/neo-world-graphics.ads:50:6      - Unknown word (Must)          -- -- Must match Static_Vertex
Engine/neo-world-graphics.ads:51:10     - Unknown word (BINDING)       -- VERTEX_BINDING : aliased VkVertexInputBin
Engine/neo-world-graphics.ads:51:44     - Unknown word (Binding)       -- aliased VkVertexInputBindingDescription := (binding
Engine/neo-world-graphics.ads:51:67     - Unknown word (binding)       -- exInputBindingDescription := (binding => 0,
Engine/neo-world-graphics.ads:52:67     - Unknown word (stride)        -- stride => Vertex_State'Object
Engine/neo-world-graphics.ads:55:98     - Unknown word (SFLOAT)        -- VK_FORMAT_R32G32B32_SFLOAT, -- Position
Engine/neo-world-graphics.ads:57:66     - Unknown word (offset)        -- offset => 0, others => <
Engine/neo-world-graphics.ads:58:98     - Unknown word (SFLOAT)        -- VK_FORMAT_R32G32B32_SFLOAT, -- Normal
Engine/neo-world-graphics.ads:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo-world-graphics.ads:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo-world-graphics.ads:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo-world-graphics.ads:60:66     - Unknown word (offset)        -- offset => Vector_3D'Object
Engine/neo-world-graphics.ads:60:78     - Unknown word (Vector)        -- offset => Vector_3D'Object_Size / Byte
Engine/neo-world-graphics.ads:61:109    - Unknown word (Texture)       -- R32G32_SFLOAT, -- Texture_Coordiante
Engine/neo-world-graphics.ads:61:117    - Unknown word (Coordiante)    -- SFLOAT, -- Texture_Coordiante
Engine/neo-world-graphics.ads:61:95     - Unknown word (SFLOAT)        -- => VK_FORMAT_R32G32_SFLOAT, -- Texture_Coordiante
Engine/neo-world-graphics.ads:63:66     - Unknown word (offset)        -- offset => Vector_3D'Object
Engine/neo-world-graphics.ads:63:78     - Unknown word (Vector)        -- offset => Vector_3D'Object_Size / Byte
Engine/neo-world-graphics.ads:66:6      - Unknown word (Handles)       -- -- Handles --
Engine/neo-world-graphics.ads:71:3      - Unknown word (Surface)       -- Surface, -- VkSurfaceKH
Engine/neo-world-graphics.ads:71:31     - Unknown word (Surface)       -- -- VkSurfaceKHR
Engine/neo-world-graphics.ads:73:3      - Unknown word (Swapchain)     -- Swapchain, -- VkSwapchainKH
Engine/neo-world-graphics.ads:73:31     - Unknown word (Swapchain)     -- Swapchain, -- VkSwapchainKHR
Engine/neo-world-graphics.ads:77:12     - Unknown word (Layout)        -- Pipeline_Layout, -- VkPipelineLayout
Engine/neo-world-graphics.ads:77:39     - Unknown word (Layout)        -- -- VkPipelineLayout
Engine/neo-world-graphics.ads:79:3      - Unknown word (Physical)      -- Physical_Device, -- VkPhysicalDe
Engine/neo-world-graphics.ads:79:31     - Unknown word (Physical)      -- Physical_Device, -- VkPhysicalDevice
Engine/neo-world-graphics.ads:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-world-graphics.ads:81:18     - Unknown word (Memory)        -- Staging_Device_Memory, -- VkDeviceMemory
Engine/neo-world-graphics.ads:81:3      - Unknown word (Staging)       -- Staging_Device_Memory, -- VkDeviceMem
Engine/neo-world-graphics.ads:81:37     - Unknown word (Memory)        -- Device_Memory, -- VkDeviceMemory
Engine/neo-world-graphics.ads:82:3      - Unknown word (Staging)       -- Staging_Command_Pool, -- VkCommandPo
Engine/neo-world-graphics.ads:83:3      - Unknown word (Staging)       -- Staging_Commands, -- VkCommandBu
Engine/neo-world-graphics.ads:84:3      - Unknown word (Staging)       -- Staging_Buffer, -- VkBuffer
Engine/neo-world-graphics.ads:85:11     - Unknown word (Fence)         -- Staging_Fence, -- VkFence
Engine/neo-world-graphics.ads:85:3      - Unknown word (Staging)       -- Staging_Fence, -- VkFence
Engine/neo-world-graphics.ads:85:31     - Unknown word (Fence)         -- Fence, -- VkFence
Engine/neo-world-graphics.ads:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-world-graphics.ads:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-world-graphics.ads:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo-world-graphics.ads:94:3      - Unknown word (Swapchain)     -- Swapchain_Info : aliased VkSwapchain
Engine/neo-world-graphics.ads:94:33     - Unknown word (Swapchain)     -- Info : aliased VkSwapchainCreateInfoKHR
Engine/neo-world-graphics.ads:95:3      - Unknown word (Swapchain)     -- Swapchain_Format : aliased VkSurfaceFo
Engine/neo-world-graphics.ads:95:33     - Unknown word (Surface)       -- Format : aliased VkSurfaceFormatKHR
Engine/neo-world-graphics.ads:96:3      - Unknown word (Depth)         -- Depth_Format : aliased
Engine/neo-world-graphics.ads:96:33     - Unknown word (Surface)       -- Format : aliased VkSurfaceFormatKHR
Engine/neo-world-graphics.ads:97:40     - Unknown word (Capabilities)  -- : aliased VkSurfaceCapabilitiesKHR := (others
Engine/neo-world-graphics.ads:98:11     - Unknown word (Extent)       -- Surface_Extent : aliased VkExtent
Engine/neo-world-graphics.ads:98:33     - Unknown word (Extent)       -- Extent : aliased VkExtent2D
Engine/neo-world-impulses.adb:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-world-impulses.adb:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-world-impulses.adb:10:110    - Unknown word (warranty)     -- without even the implied warranty of                -
Engine/neo-world-impulses.adb:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-world-impulses.adb:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-world-impulses.adb:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-world-impulses.adb:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-world-impulses.adb:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-world-impulses.adb:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-world-impulses.adb:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-world-impulses.adb:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-world-impulses.adb:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-world-impulses.adb:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-world-impulses.adb:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-world-impulses.adb:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-world-impulses.adb:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-world-impulses.adb:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-world-impulses.adb:16:24     - Unknown word (Impulses)     -- package body Neo.World.Impulses is
Engine/neo-world-impulses.adb:22:13     - Unknown word (Callback)     -- procedure Callback_Enter_Game (Args : Vector
Engine/neo-world-impulses.adb:22:41     - Unknown word (Vector)       -- Callback_Enter_Game (Args : Vector_Impulse_Arg.Unsafe_Array
Engine/neo-world-impulses.adb:22:48     - Unknown word (Impulse)      -- Game (Args : Vector_Impulse_Arg.Unsafe_Array) is
Engine/neo-world-impulses.adb:22:60     - Unknown word (Unsafe)       -- Vector_Impulse_Arg.Unsafe_Array) is
Engine/neo-world-impulses.adb:24:28     - Unknown word (Press)        -- if Args (Args'First).Press.Down and then In_Main
Engine/neo-world-impulses.adb:24:51     - Unknown word (Main)         -- Press.Down and then In_Main_Window then
Engine/neo-world-impulses.adb:25:42     - Unknown word (False)        -- Get then In_Menu.Set (False);
Engine/neo-world-impulses.adb:26:32     - Unknown word (Occupied)     -- else Game_Entry_Status.Occupied (True); end if;
Engine/neo-world-impulses.adb:26:42     - Unknown word (True)         -- Entry_Status.Occupied (True); end if;
Engine/neo-world-impulses.adb:34:13     - Unknown word (Callback)     -- procedure Callback_Exit_To_Menu (Args
Engine/neo-world-impulses.adb:34:43     - Unknown word (Vector)       -- Exit_To_Menu (Args : Vector_Impulse_Arg.Unsafe_Array
Engine/neo-world-impulses.adb:34:50     - Unknown word (Impulse)      -- Menu (Args : Vector_Impulse_Arg.Unsafe_Array) is
Engine/neo-world-impulses.adb:34:62     - Unknown word (Unsafe)       -- Vector_Impulse_Arg.Unsafe_Array) is
Engine/neo-world-impulses.adb:36:28     - Unknown word (Press)        -- if Args (Args'First).Press.Down then In_Menu.Set
Engine/neo-world-impulses.adb:36:57     - Unknown word (True)         -- Down then In_Menu.Set (True); end if;
Engine/neo-world-impulses.adb:43:13     - Unknown word (Callback)     -- procedure Callback_Fullscreen (Args : Vector
Engine/neo-world-impulses.adb:43:41     - Unknown word (Vector)       -- Callback_Fullscreen (Args : Vector_Impulse_Arg.Unsafe_Array
Engine/neo-world-impulses.adb:43:48     - Unknown word (Impulse)      -- Fullscreen (Args : Vector_Impulse_Arg.Unsafe_Array) is
Engine/neo-world-impulses.adb:43:60     - Unknown word (Unsafe)       -- Vector_Impulse_Arg.Unsafe_Array) is
Engine/neo-world-impulses.adb:45:28     - Unknown word (Press)        -- if Args (Args'First).Press.Down then
Engine/neo-world-impulses.adb:46:25     - Unknown word (Mode)         -- Mode.Set ((case Mode.Get is
Engine/neo-world-impulses.adb:46:9      - Unknown word (Mode)         -- Mode.Set ((case Mode.Get
Engine/neo-world-impulses.adb:47:27     - Unknown word (Multi)        -- when Multi_Monitor_Mode | Fullscreen
Engine/neo-world-impulses.adb:47:41     - Unknown word (Mode)         -- when Multi_Monitor_Mode | Fullscreen_Mode =
Engine/neo-world-impulses.adb:47:59     - Unknown word (Mode)         -- Monitor_Mode | Fullscreen_Mode => Windowed_Mode,
Engine/neo-world-impulses.adb:47:67     - Unknown word (Windowed)     -- Fullscreen_Mode => Windowed_Mode,
Engine/neo-world-impulses.adb:47:76     - Unknown word (Mode)         -- Fullscreen_Mode => Windowed_Mode,
Engine/neo-world-impulses.adb:48:27     - Unknown word (Windowed)     -- when Windowed_Mode => Fullscreen_Mode
Engine/neo-world-impulses.adb:5:52      - Unknown word (Copyright)  -- Copyright (C) 2016 Justin Squirek
Engine/neo-world-impulses.adb:5:71      - Unknown word (Justin)     -- Copyright (C) 2016 Justin Squirek
Engine/neo-world-impulses.adb:5:78      - Unknown word (Squirek)    -- Copyright (C) 2016 Justin Squirek
Engine/neo-world-impulses.adb:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-world-impulses.adb:8:30      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-world-impulses.adb:8:70      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-world-impulses.adb:8:87      - Unknown word (later)        -- at your option) any later version.
Engine/neo-world-impulses.ads:11:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-world-impulses.ads:11:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-world-impulses.ads:11:110    - Unknown word (warranty)     -- without even the implied warranty of                -
Engine/neo-world-impulses.ads:11:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-world-impulses.ads:11:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-world-impulses.ads:11:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-world-impulses.ads:11:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-world-impulses.ads:11:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-world-impulses.ads:11:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-world-impulses.ads:12:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-world-impulses.ads:12:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-world-impulses.ads:12:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-world-impulses.ads:12:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-world-impulses.ads:14:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-world-impulses.ads:14:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-world-impulses.ads:14:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-world-impulses.ads:14:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-world-impulses.ads:20:19     - Unknown word (Impulses)     -- package Neo.World.Impulses is
Engine/neo-world-impulses.ads:26:13     - Unknown word (Callback)     -- procedure Callback_Enter_Game (Args : Vector
Engine/neo-world-impulses.ads:26:41     - Unknown word (Vector)       -- Callback_Enter_Game (Args : Vector_Impulse_Arg.Unsafe_Array
Engine/neo-world-impulses.ads:26:48     - Unknown word (Impulse)      -- Game (Args : Vector_Impulse_Arg.Unsafe_Array);
Engine/neo-world-impulses.ads:26:60     - Unknown word (Unsafe)       -- Vector_Impulse_Arg.Unsafe_Array);
Engine/neo-world-impulses.ads:27:29     - Unknown word (Impulse)      -- package Enter_Game is new Impulse ("entermenu", Callback
Engine/neo-world-impulses.ads:27:39     - Unknown word (entermenu)    -- Game is new Impulse ("entermenu", Callback_Enter_Game
Engine/neo-world-impulses.ads:27:51     - Unknown word (Callback)     -- Impulse ("entermenu", Callback_Enter_Game);
Engine/neo-world-impulses.ads:36:13     - Unknown word (Callback)     -- procedure Callback_Exit_To_Menu (Args
Engine/neo-world-impulses.ads:36:43     - Unknown word (Vector)       -- Exit_To_Menu (Args : Vector_Impulse_Arg.Unsafe_Array
Engine/neo-world-impulses.ads:36:50     - Unknown word (Impulse)      -- Menu (Args : Vector_Impulse_Arg.Unsafe_Array);
Engine/neo-world-impulses.ads:36:62     - Unknown word (Unsafe)       -- Vector_Impulse_Arg.Unsafe_Array);
Engine/neo-world-impulses.ads:37:31     - Unknown word (Impulse)      -- Exit_To_Menu is new Impulse ("exittomenu", Callback
Engine/neo-world-impulses.ads:37:41     - Unknown word (exittomenu)   -- Menu is new Impulse ("exittomenu", Callback_Exit_To_Menu
Engine/neo-world-impulses.ads:37:54     - Unknown word (Callback)     -- Impulse ("exittomenu", Callback_Exit_To_Menu);
Engine/neo-world-impulses.ads:46:13     - Unknown word (Callback)     -- procedure Callback_Fullscreen (Args : Vector
Engine/neo-world-impulses.ads:46:41     - Unknown word (Vector)       -- Callback_Fullscreen (Args : Vector_Impulse_Arg.Unsafe_Array
Engine/neo-world-impulses.ads:46:48     - Unknown word (Impulse)      -- Fullscreen (Args : Vector_Impulse_Arg.Unsafe_Array);
Engine/neo-world-impulses.ads:46:60     - Unknown word (Unsafe)       -- Vector_Impulse_Arg.Unsafe_Array);
Engine/neo-world-impulses.ads:47:39     - Unknown word (togglemode)   -- Fullscreen is new Impulse ("togglemode", Callback_Fullscreen
Engine/neo-world-impulses.ads:6:52      - Unknown word (Copyright)  -- Copyright (C) 2016 Justin Squirek
Engine/neo-world-impulses.ads:6:71      - Unknown word (Justin)     -- Copyright (C) 2016 Justin Squirek
Engine/neo-world-impulses.ads:6:78      - Unknown word (Squirek)    -- Copyright (C) 2016 Justin Squirek
Engine/neo-world-impulses.ads:8:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-world-impulses.ads:9:30      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-world-impulses.ads:9:70      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-world-impulses.ads:9:87      - Unknown word (later)        -- at your option) any later version.
Engine/neo-world-menu.adb:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-world-menu.adb:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-world-menu.adb:10:110    - Unknown word (warranty)     -- without even the implied warranty of                -
Engine/neo-world-menu.adb:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-world-menu.adb:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-world-menu.adb:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-world-menu.adb:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-world-menu.adb:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-world-menu.adb:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-world-menu.adb:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-world-menu.adb:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-world-menu.adb:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-world-menu.adb:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-world-menu.adb:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-world-menu.adb:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-world-menu.adb:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-world-menu.adb:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-world-menu.adb:5:52      - Unknown word (Copyright)  -- Copyright (C) 2016 Justin Squirek
Engine/neo-world-menu.adb:5:71      - Unknown word (Justin)     -- Copyright (C) 2016 Justin Squirek
Engine/neo-world-menu.adb:5:78      - Unknown word (Squirek)    -- Copyright (C) 2016 Justin Squirek
Engine/neo-world-menu.adb:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-world-menu.adb:8:30      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-world-menu.adb:8:70      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-world-menu.adb:8:87      - Unknown word (later)        -- at your option) any later version.
Engine/neo-world-menu.ads:100:108   - Unknown word (Percent)      -- Deceleration : Real_Percent := 0.0);
Engine/neo-world-menu.ads:100:74    - Unknown word (Acceleration) -- To : Point_2D;       Acceleration, Deceleration : Real
Engine/neo-world-menu.ads:100:88    - Unknown word (Deceleration) -- Acceleration, Deceleration : Real_Percent := 0
Engine/neo-world-menu.ads:101:108   - Unknown word (Percent)      -- Deceleration : Real_Percent := 0.0);
Engine/neo-world-menu.ads:101:58    - Unknown word (Border)       -- Element_State; To : Border_State; Acceleration
Engine/neo-world-menu.ads:101:74    - Unknown word (Acceleration) -- To : Border_State;   Acceleration, Deceleration : Real
Engine/neo-world-menu.ads:101:88    - Unknown word (Deceleration) -- State; Acceleration, Deceleration : Real_Percent := 0
Engine/neo-world-menu.ads:102:108   - Unknown word (Percent)      -- Deceleration : Real_Percent := 0.0);
Engine/neo-world-menu.ads:102:58    - Unknown word (Orientation)  -- Element_State; To : Orientation_4D; Acceleration, Deceleratio
Engine/neo-world-menu.ads:102:74    - Unknown word (Acceleration) -- To : Orientation_4D; Acceleration, Deceleration : Real
Engine/neo-world-menu.ads:102:88    - Unknown word (Deceleration) -- Orientation_4D; Acceleration, Deceleration : Real_Percent := 0
Engine/neo-world-menu.ads:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-world-menu.ads:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-world-menu.ads:10:110    - Unknown word (warranty)     -- without even the implied warranty of                -
Engine/neo-world-menu.ads:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-world-menu.ads:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-world-menu.ads:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-world-menu.ads:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-world-menu.ads:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-world-menu.ads:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-world-menu.ads:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-world-menu.ads:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-world-menu.ads:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-world-menu.ads:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-world-menu.ads:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-world-menu.ads:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-world-menu.ads:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-world-menu.ads:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-world-menu.ads:18:17     - Unknown word (Treed)        -- UI_Elements : Treed_UI_Element.Safe.Tree
Engine/neo-world-menu.ads:18:26     - Unknown word (Element)      -- Elements : Treed_UI_Element.Safe.Tree;
Engine/neo-world-menu.ads:18:34     - Unknown word (Safe)         -- Elements : Treed_UI_Element.Safe.Tree;
Engine/neo-world-menu.ads:18:6      - Unknown word (Elements)     -- UI_Elements : Treed_UI_Element.Safe
Engine/neo-world-menu.ads:27:18     - Unknown word (Kind)         -- type Alignment_Kind (Left_Alignment, Middle
Engine/neo-world-menu.ads:27:29     - Unknown word (Alignment)    -- Alignment_Kind (Left_Alignment, Middle_Alightment,
Engine/neo-world-menu.ads:27:40     - Unknown word (Middle)       -- Kind (Left_Alignment, Middle_Alightment, Right_Alightment
Engine/neo-world-menu.ads:27:47     - Unknown word (Alightment)   -- Left_Alignment, Middle_Alightment, Right_Alightment);
Engine/neo-world-menu.ads:27:65     - Unknown word (Alightment)   -- Middle_Alightment, Right_Alightment);
Engine/neo-world-menu.ads:27:8      - Unknown word (Alignment)    -- type Alignment_Kind (Left_Alignment
Engine/neo-world-menu.ads:29:15     - Unknown word (Kind)         -- type Casing_Kind (Title_Case, Upper_Case
Engine/neo-world-menu.ads:29:33     - Unknown word (Upper)        -- Casing_Kind (Title_Case, Upper_Case, Lower_Case);
Engine/neo-world-menu.ads:29:45     - Unknown word (Lower)        -- Title_Case, Upper_Case, Lower_Case);
Engine/neo-world-menu.ads:29:8      - Unknown word (Casing)       -- type Casing_Kind (Title_Case, Upper
Engine/neo-world-menu.ads:31:16     - Unknown word (Kind)         -- type Element_Kind (Simple_Element, World
Engine/neo-world-menu.ads:31:22     - Unknown word (Simple)       -- type Element_Kind (Simple_Element, World_Element
Engine/neo-world-menu.ads:31:29     - Unknown word (Element)      -- Element_Kind (Simple_Element, World_Element, Edit
Engine/neo-world-menu.ads:31:44     - Unknown word (Element)      -- Simple_Element, World_Element, Edit_Element, Choice
Engine/neo-world-menu.ads:31:53     - Unknown word (Edit)         -- Element, World_Element, Edit_Element, Choice_Element
Engine/neo-world-menu.ads:31:58     - Unknown word (Element)      -- World_Element, Edit_Element, Choice_Element, Cinematic
Engine/neo-world-menu.ads:31:67     - Unknown word (Choice)       -- Element, Edit_Element, Choice_Element, Cinematic_Element
Engine/neo-world-menu.ads:31:8      - Unknown word (Element)      -- type Element_Kind (Simple_Element
Engine/neo-world-menu.ads:31:83     - Unknown word (Cinematic)    -- Element, Choice_Element, Cinematic_Element,
Engine/neo-world-menu.ads:32:22     - Unknown word (Slider)       -- Slider_Element, List_Element
Engine/neo-world-menu.ads:32:53     - Unknown word (Bind)         -- Element, List_Element,  Bind_Element, Render_Element
Engine/neo-world-menu.ads:34:23     - Unknown word (Kind)         -- type Element_State (Kind : Element_Kind) is record
Engine/neo-world-menu.ads:34:38     - Unknown word (Kind)         -- State (Kind : Element_Kind) is record
Engine/neo-world-menu.ads:35:26     - Unknown word (Border)       -- Border : Border_State := (others
Engine/neo-world-menu.ads:35:7      - Unknown word (Border)       -- Border : Border_State
Engine/neo-world-menu.ads:36:26     - Unknown word (Orientation)  -- Orientation : Orientation_4D := (others => <>
Engine/neo-world-menu.ads:36:7      - Unknown word (Orientation)  -- Orientation : Orientation_
Engine/neo-world-menu.ads:37:44     - Unknown word (True)         -- : Bool           := True;
Engine/neo-world-menu.ads:38:10     - Unknown word (Visible)      -- Is_Visible : Bool
Engine/neo-world-menu.ads:38:44     - Unknown word (True)         -- : Bool           := True;
Engine/neo-world-menu.ads:39:30     - Unknown word (Unbound)      -- Material : Str_Unbound := NULL_STR_UNBOUND
Engine/neo-world-menu.ads:39:53     - Unknown word (UNBOUND)      -- Unbound := NULL_STR_UNBOUND;
Engine/neo-world-menu.ads:40:12     - Unknown word (Font)         -- Text_Font : Str_Unbound
Engine/neo-world-menu.ads:40:30     - Unknown word (Unbound)      -- Text_Font : Str_Unbound := NULL_STR_UNBOUND
Engine/neo-world-menu.ads:40:53     - Unknown word (UNBOUND)      -- Unbound := NULL_STR_UNBOUND;
Engine/neo-world-menu.ads:41:31     - Unknown word (Percent)      -- Text_Scale : Real_Percent := 15.0;
Engine/neo-world-menu.ads:42:12     - Unknown word (Color)        -- Text_Color : Color_State
Engine/neo-world-menu.ads:42:26     - Unknown word (Color)        -- Text_Color : Color_State := BLACK_COLOR
Engine/neo-world-menu.ads:42:50     - Unknown word (COLOR)        -- Color_State := BLACK_COLOR;
Engine/neo-world-menu.ads:43:18     - Unknown word (Color)        -- Text_Hover_Color : Color_State    :=
Engine/neo-world-menu.ads:43:26     - Unknown word (Color)        -- Text_Hover_Color : Color_State := GREY_COLOR
Engine/neo-world-menu.ads:43:44     - Unknown word (GREY)         -- : Color_State    := GREY_COLOR;
Engine/neo-world-menu.ads:43:49     - Unknown word (COLOR)        -- Color_State := GREY_COLOR;
Engine/neo-world-menu.ads:44:14     - Unknown word (Color)        -- Border_Color : Color_State
Engine/neo-world-menu.ads:44:44     - Unknown word (COLOR)        -- : Color_State    := COLOR_LIGHT_BLUE;
Engine/neo-world-menu.ads:44:56     - Unknown word (BLUE)         -- State := COLOR_LIGHT_BLUE;
Engine/neo-world-menu.ads:44:7      - Unknown word (Border)       -- Border_Color : Color_State
Engine/neo-world-menu.ads:45:44     - Unknown word (COLOR)        -- : Color_State    := COLOR_SKY_BLUE;
Engine/neo-world-menu.ads:45:54     - Unknown word (BLUE)         -- State := COLOR_SKY_BLUE;
Engine/neo-world-menu.ads:45:7      - Unknown word (Background)   -- Background_Color : Color_State
Engine/neo-world-menu.ads:48:11     - Unknown word (Camera)       -- Camera_Entity : Str_Unbound
Engine/neo-world-menu.ads:48:31     - Unknown word (Unbound)      -- Camera_Entity : Str_Unbound := NULL_STR_UNBOUND
Engine/neo-world-menu.ads:48:51     - Unknown word (UNBOUND)      -- Unbound := NULL_STR_UNBOUND;
Engine/neo-world-menu.ads:50:11     - Unknown word (Elapsed)      -- Elapsed : Duration;
Engine/neo-world-menu.ads:50:24     - Unknown word (Duration)     -- Elapsed : Duration;
Engine/neo-world-menu.ads:53:30     - Unknown word (Unbound)      -- Model : Str_Unbound := NULL_STR_UNBOUND
Engine/neo-world-menu.ads:53:50     - Unknown word (UNBOUND)      -- Unbound := NULL_STR_UNBOUND;
Engine/neo-world-menu.ads:54:11     - Unknown word (Animation)    -- Animation : Str_Unbound :=
Engine/neo-world-menu.ads:54:30     - Unknown word (Unbound)      -- Animation : Str_Unbound := NULL_STR_UNBOUND
Engine/neo-world-menu.ads:54:50     - Unknown word (UNBOUND)      -- Unbound := NULL_STR_UNBOUND;
Engine/neo-world-menu.ads:55:41     - Unknown word (COLOR)        -- Color : Color_State := COLOR_WHITE;
Engine/neo-world-menu.ads:55:47     - Unknown word (WHITE)        -- Color_State := COLOR_WHITE;
Engine/neo-world-menu.ads:59:16     - Unknown word (Offset)      -- View_Offset :
Engine/neo-world-menu.ads:5:52      - Unknown word (Copyright)  -- Copyright (C) 2016 Justin Squirek
Engine/neo-world-menu.ads:5:71      - Unknown word (Justin)     -- Copyright (C) 2016 Justin Squirek
Engine/neo-world-menu.ads:5:78      - Unknown word (Squirek)    -- Copyright (C) 2016 Justin Squirek
Engine/neo-world-menu.ads:63:18     - Unknown word (Choice)      -- when Choice_Element =>
Engine/neo-world-menu.ads:66:15     - Unknown word (Multiple)    -- Multiple_Select : Bool := False
Engine/neo-world-menu.ads:66:43     - Unknown word (False)       -- Multiple_Select : Bool := False;
Engine/neo-world-menu.ads:67:19     - Unknown word (Offsets)     -- Tab_Offsets : Vector_Positive
Engine/neo-world-menu.ads:67:35     - Unknown word (Vector)      -- Tab_Offsets : Vector_Positive.Unsafe.Vector
Engine/neo-world-menu.ads:67:42     - Unknown word (Positive)    -- Offsets : Vector_Positive.Unsafe.Vector;
Engine/neo-world-menu.ads:67:51     - Unknown word (Unsafe)      -- : Vector_Positive.Unsafe.Vector;
Engine/neo-world-menu.ads:67:58     - Unknown word (Vector)      -- Vector_Positive.Unsafe.Vector;
Engine/neo-world-menu.ads:68:19     - Unknown word (Aligns)      -- Tab_Aligns : Vector_Alignment
Engine/neo-world-menu.ads:68:35     - Unknown word (Vector)      -- Tab_Aligns : Vector_Alignment.Unsafe.Vector
Engine/neo-world-menu.ads:68:42     - Unknown word (Alignment)   -- Aligns : Vector_Alignment.Unsafe.Vector;
Engine/neo-world-menu.ads:68:52     - Unknown word (Unsafe)      -- : Vector_Alignment.Unsafe.Vector;
Engine/neo-world-menu.ads:68:59     - Unknown word (Vector)      -- Vector_Alignment.Unsafe.Vector;
Engine/neo-world-menu.ads:69:35     - Unknown word (Vector)      -- Options : Vector_Vector_Str_Unbound.Unsafe
Engine/neo-world-menu.ads:69:61     - Unknown word (Unsafe)      -- Vector_Vector_Str_Unbound.Unsafe.Vector;
Engine/neo-world-menu.ads:70:42     - Unknown word (Positive)    -- Current_Selection : Vector_Positive.Unsafe.Vector;
Engine/neo-world-menu.ads:70:51     - Unknown word (Unsafe)      -- Selection : Vector_Positive.Unsafe.Vector;
Engine/neo-world-menu.ads:71:18     - Unknown word (Edit)        -- when Edit_Element =>
Engine/neo-world-menu.ads:72:37     - Unknown word (Edit)        -- Kind : Edit_Kind := ;
Engine/neo-world-menu.ads:73:15     - Unknown word (Maximum)     -- Maximum_Characters : Positive
Engine/neo-world-menu.ads:73:23     - Unknown word (Characters)  -- Maximum_Characters : Positive  := 100
Engine/neo-world-menu.ads:73:37     - Unknown word (Positive)    -- Maximum_Characters : Positive := 100;
Engine/neo-world-menu.ads:74:23     - Unknown word (Wrapped)     -- Is_Word_Wrapped : Bool      := False
Engine/neo-world-menu.ads:74:50     - Unknown word (False)       -- Wrapped : Bool      := False;
Engine/neo-world-menu.ads:75:50     - Unknown word (False)       -- : Bool      := False;
Engine/neo-world-menu.ads:76:18     - Unknown word (Bottom)      -- Is_Bottom_Scrolling : Bool
Engine/neo-world-menu.ads:76:25     - Unknown word (Scrolling)   -- Is_Bottom_Scrolling : Bool      := False
Engine/neo-world-menu.ads:76:50     - Unknown word (False)       -- Scrolling : Bool      := False;
Engine/neo-world-menu.ads:77:50     - Unknown word (False)       -- : Bool      := False;
Engine/neo-world-menu.ads:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-world-menu.ads:80:18     - Unknown word (Slider)      -- when Slider_Element =>
Engine/neo-world-menu.ads:81:15     - Unknown word (Slider)      -- Slider_Background : Str_Unbound
Engine/neo-world-menu.ads:81:22     - Unknown word (Background)  -- Slider_Background : Str_Unbound := NULL
Engine/neo-world-menu.ads:86:6      - Unknown word (Callbacks)   -- -- Callbacks
Engine/neo-world-menu.ads:87:64     - Unknown word (Seconds)     -- in out Element_State; Seconds : Duration) is abstract
Engine/neo-world-menu.ads:87:74     - Unknown word (Duration)    -- Element_State; Seconds : Duration) is abstract;
Engine/neo-world-menu.ads:88:16     - Unknown word (Frame)       -- procedure On_Frame (Element :
Engine/neo-world-menu.ads:8:30      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-world-menu.ads:8:70      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-world-menu.ads:8:87      - Unknown word (later)        -- at your option) any later version.
Engine/neo-world-menu.ads:91:16     - Unknown word (Cursor)      -- procedure On_Cursor_Enter (Element : in
Engine/neo-world-menu.ads:92:16     - Unknown word (Cursor)      -- procedure On_Cursor_Exit (Element : in
Engine/neo-world-menu.ads:99:108    - Unknown word (Percent)      -- Deceleration : Real_Percent := 0.0);
Engine/neo-world-menu.ads:99:58     - Unknown word (Degrees)     -- Element_State; To : Degrees; Acceleration
Engine/neo-world-menu.ads:99:74     - Unknown word (Acceleration) -- To : Degrees;        Acceleration, Deceleration : Real
Engine/neo-world-menu.ads:99:88     - Unknown word (Deceleration) -- Acceleration, Deceleration : Real_Percent := 0
Engine/neo-world-network.adb:100:43    - Unknown word (packet)         -- Printf ("connectResponse packet while not connecting
Engine/neo-world-network.adb:100:60    - Unknown word (connecting)     -- nectResponse packet while not connecting. Ignored.\n");
Engine/neo-world-network.adb:100:73    - Unknown word (Ignored)        -- while not connecting.  Ignored.\n");
Engine/neo-world-network.adb:104:50    - Unknown word (different)      -- connectResponse from a different address.  Ignored.\n
Engine/neo-world-network.adb:104:70    - Unknown word (Ignored)        -- different address.  Ignored.\n" );
Engine/neo-world-network.adb:105:30    - Unknown word (should)         -- Com_Printf( "%s should have been %s\n", NET
Engine/neo-world-network.adb:105:37    - Unknown word (have)           -- Com_Printf( "%s should have been %s\n", NET_AdrToString
Engine/neo-world-network.adb:105:42    - Unknown word (been)           -- Printf( "%s should have been %s\n", NET_AdrToString
Engine/neo-world-network.adb:105:63    - Unknown word (String)         -- been %s\n", NET_AdrToString( from ),
Engine/neo-world-network.adb:106:25    - Unknown word (String)         -- NET_AdrToString( clc.serverAddress
Engine/neo-world-network.adb:109:12    - Unknown word (Netchan)        -- Netchan_Setup (NS_CLIENT, &clc
Engine/neo-world-network.adb:109:20    - Unknown word (Setup)          -- Netchan_Setup (NS_CLIENT, &clc.netchan
Engine/neo-world-network.adb:109:43    - Unknown word (netchan)        -- Setup (NS_CLIENT, &clc.netchan, from, Cvar_VariableValue
Engine/neo-world-network.adb:109:83    - Unknown word (qport)          -- VariableValue( "net_qport" ) );
Engine/neo-world-network.adb:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-world-network.adb:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-world-network.adb:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo-world-network.adb:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-world-network.adb:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-world-network.adb:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-world-network.adb:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-world-network.adb:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-world-network.adb:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-world-network.adb:111:20    - Unknown word (Packet)         -- clc.lastPacketSentTime = -9999;
Engine/neo-world-network.adb:111:26    - Unknown word (Sent)           -- clc.lastPacketSentTime = -9999;   -- send
Engine/neo-world-network.adb:111:60    - Unknown word (packet)         -- 99; -- send first packet immediately
Engine/neo-world-network.adb:111:67    - Unknown word (immediately)    -- - send first packet immediately
Engine/neo-world-network.adb:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-world-network.adb:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-world-network.adb:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-world-network.adb:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-world-network.adb:123:18    - Unknown word (scene)          -- -- Load the scene and submit server messages
Engine/neo-world-network.adb:125:12    - Unknown word (Packet)         -- for Packet of Server_Packets loop
Engine/neo-world-network.adb:125:29    - Unknown word (Packets)        -- for Packet of Server_Packets loop
Engine/neo-world-network.adb:126:18    - Unknown word (Packet)         -- Current_Packet := Decompress (Decompress
Engine/neo-world-network.adb:126:60    - Unknown word (Packet)         -- Decompress (Current_Packet), Last_Packet);
Engine/neo-world-network.adb:127:10    - Unknown word (Frame)          -- Frame.Set (Current_Packet
Engine/neo-world-network.adb:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-world-network.adb:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-world-network.adb:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-world-network.adb:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-world-network.adb:146:27    - Unknown word (just)           -- -- if the server just shut down, flush the
Engine/neo-world-network.adb:146:32    - Unknown word (shut)           -- if the server just shut down, flush the events
Engine/neo-world-network.adb:146:43    - Unknown word (flush)          -- server just shut down, flush the events
Engine/neo-world-network.adb:151:20    - Unknown word (Bytes)          -- int headerBytes;
Engine/neo-world-network.adb:153:16    - Unknown word (cursize)        -- if msg->cursize >= 4 && *(int *)msg
Engine/neo-world-network.adb:154:10    - Unknown word (char)           -- char *s;
Engine/neo-world-network.adb:155:10    - Unknown word (char)           -- char *c;
Engine/neo-world-network.adb:157:35    - Unknown word (skip)           -- ReadLong( msg );  -- skip the -1
Engine/neo-world-network.adb:158:22    - Unknown word (String)         -- s = MSG_ReadStringLine( msg );
Engine/neo-world-network.adb:159:22    - Unknown word (String)         -- Cmd_TokenizeString( s );
Engine/neo-world-network.adb:161:27    - Unknown word (packet)         -- Com_DPrintf ("CL packet %s: %s\n", NET_AdrToString
Engine/neo-world-network.adb:161:54    - Unknown word (String)         -- %s: %s\n", NET_AdrToString(from), c);
Engine/neo-world-network.adb:163:46    - Unknown word (connecting)     -- from the server we are connecting to
Engine/neo-world-network.adb:164:17    - Unknown word (stricmp)        -- if !Q_stricmp(c, "challengeResponse
Engine/neo-world-network.adb:165:32    - Unknown word (CONNECTING)     -- if cls.state != CA_CONNECTING ) {
Engine/neo-world-network.adb:166:27    - Unknown word (Unwanted)       -- Com_Printf( "Unwanted challenge response received
Engine/neo-world-network.adb:166:55    - Unknown word (received)       -- Unwanted challenge response received. Ignored.\n" );
Engine/neo-world-network.adb:166:66    - Unknown word (Ignored)        -- response received.  Ignored.\n" );
Engine/neo-world-network.adb:168:41    - Unknown word (repsonse)       -- start sending challenge repsonse instead of challenge
Engine/neo-world-network.adb:168:50    - Unknown word (instead)        -- sending challenge repsonse instead of challenge request
Engine/neo-world-network.adb:168:79    - Unknown word (packets)        -- of challenge request packets
Engine/neo-world-network.adb:169:30    - Unknown word (atoi)           -- clc.challenge = atoi(Cmd_Argv(1));
Engine/neo-world-network.adb:170:29    - Unknown word (CHALLENGING)    -- cls.state = CA_CHALLENGING;
Engine/neo-world-network.adb:174:17    - Unknown word (take)           -- -- take this address as the
Engine/neo-world-network.adb:174:22    - Unknown word (this)          -- -- take this address as the new server
Engine/neo-world-network.adb:174:63    - Unknown word (This)          -- new server address.  This allows
Engine/neo-world-network.adb:174:68    - Unknown word (allows)        -- server address.  This allows
Engine/neo-world-network.adb:175:26    - Unknown word (proxy)         -- -- a server proxy to hand off connections
Engine/neo-world-network.adb:175:35    - Unknown word (hand)          -- - a server proxy to hand off connections to multiple
Engine/neo-world-network.adb:175:59    - Unknown word (multiple)      -- hand off connections to multiple servers
Engine/neo-world-network.adb:183:17    - Unknown word (stricmp)       -- if !Q_stricmp(c, "connectResponse
Engine/neo-world-network.adb:188:23    - Unknown word (Kind)          -- case Message.Kind is
Engine/neo-world-network.adb:191:14    - Unknown word (char)          -- char info[MAX_INFO_STRING
Engine/neo-world-network.adb:191:34    - Unknown word (STRING)        -- char info[MAX_INFO_STRING];
Engine/neo-world-network.adb:192:14    - Unknown word (char)          -- char* str;
Engine/neo-world-network.adb:193:14    - Unknown word (char)          -- char *infoString;
Engine/neo-world-network.adb:194:20    - Unknown word (prot)          -- int prot;
Engine/neo-world-network.adb:196:20    - Unknown word (this)          -- -- if this isn't the correct protocol
Engine/neo-world-network.adb:196:35    - Unknown word (correct)       -- - if this isn't the correct protocol version, ignore
Engine/neo-world-network.adb:196:43    - Unknown word (protocol)      -- this isn't the correct protocol version, ignore it
Engine/neo-world-network.adb:197:14    - Unknown word (prot)          -- prot = atoi( Info_ValueForKey
Engine/neo-world-network.adb:197:21    - Unknown word (atoi)          -- prot = atoi( Info_ValueForKey( infoString
Engine/neo-world-network.adb:197:58    - Unknown word (protocol)      -- ValueForKey( infoString, "protocol" ) );
Engine/neo-world-network.adb:198:19    - Unknown word (prot)          -- if ( prot != PROTOCOL_VERSION
Engine/neo-world-network.adb:198:27    - Unknown word (PROTOCOL)      -- if ( prot != PROTOCOL_VERSION ) {
Engine/neo-world-network.adb:199:30    - Unknown word (Different)     -- Com_DPrintf( "Different protocol info packet
Engine/neo-world-network.adb:199:40    - Unknown word (protocol)      -- DPrintf( "Different protocol info packet: %s\n",
Engine/neo-world-network.adb:199:54    - Unknown word (packet)        -- Different protocol info packet: %s\n", infoString
Engine/neo-world-network.adb:19:9      - Unknown word (Frame)        -- -- -- Frame --
Engine/neo-world-network.adb:202:33    - Unknown word (waiting)       -- -- iterate servers waiting for ping response
Engine/neo-world-network.adb:203:30    - Unknown word (PINGREQUESTS)  -- for (i=0; i<MAX_PINGREQUESTS; i++)
Engine/neo-world-network.adb:205:24    - Unknown word (pinglist)      -- if ( cl_pinglist[i].adr.port && !cl_pinglist
Engine/neo-world-network.adb:205:52    - Unknown word (pinglist)      -- pinglist[i].adr.port && !cl_pinglist[i].time && NET_CompareAdr
Engine/neo-world-network.adb:205:97    - Unknown word (pinglist)      -- CompareAdr( from, cl_pinglist[i].adr ) )
Engine/neo-world-network.adb:208:21    - Unknown word (pinglist)      -- cl_pinglist[i].time = cls.realtime
Engine/neo-world-network.adb:208:58    - Unknown word (pinglist)      -- = cls.realtime - cl_pinglist[i].start + 1;
Engine/neo-world-network.adb:211:20    - Unknown word (strncpyz)      -- Q_strncpyz( cl_pinglist[i].info
Engine/neo-world-network.adb:212:21    - Unknown word (tack)          -- -- tack on the net type
Engine/neo-world-network.adb:213:32    - Unknown word (sure)          -- -- NOTE: make sure these types are in sync
Engine/neo-world-network.adb:213:37    - Unknown word (these)         -- -- NOTE: make sure these types are in sync with
Engine/neo-world-network.adb:213:70    - Unknown word (netnames)      -- are in sync with the netnames strings in the UI
Engine/neo-world-network.adb:213:79    - Unknown word (strings)       -- sync with the netnames strings in the UI
Engine/neo-world-network.adb:216:28    - Unknown word (BROADCAST)     -- case NA_BROADCAST:
Engine/neo-world-network.adb:220:22    - Unknown word (break)         -- break;
Engine/neo-world-network.adb:222:28    - Unknown word (BROADCAST)     -- case NA_BROADCAST_IPX:
Engine/neo-world-network.adb:225:22    - Unknown word (break)         -- break;
Engine/neo-world-network.adb:229:22    - Unknown word (break)         -- break;
Engine/neo-world-network.adb:22:15     - Unknown word (Runlength)    -- -- function Runlength_Encode_Delta (Orignal
Engine/neo-world-network.adb:22:25     - Unknown word (Encode)       -- function Runlength_Encode_Delta (Orignal, Current
Engine/neo-world-network.adb:22:39     - Unknown word (Orignal)      -- Runlength_Encode_Delta (Orignal, Current : Frame_State
Engine/neo-world-network.adb:22:58     - Unknown word (Frame)        -- (Orignal, Current : Frame_State) return Stream
Engine/neo-world-network.adb:231:61    - Unknown word (nettype)       -- cl_pinglist[i].info, "nettype", va("%d", type) );
Engine/neo-world-network.adb:236:24    - Unknown word (just)          -- -- if not just sent a local broadcast
Engine/neo-world-network.adb:236:29    - Unknown word (sent)          -- -- if not just sent a local broadcast or
Engine/neo-world-network.adb:236:42    - Unknown word (broadcast)     -- not just sent a local broadcast or pinging local servers
Engine/neo-world-network.adb:236:55    - Unknown word (pinging)       -- a local broadcast or pinging local servers
Engine/neo-world-network.adb:240:36    - Unknown word (OTHER)         -- for ( i = 0 ; i < MAX_OTHER_SERVERS ; i++ ) {
Engine/neo-world-network.adb:241:19    - Unknown word (empty)         -- -- empty slot
Engine/neo-world-network.adb:243:18    - Unknown word (break)         -- break;
Engine/neo-world-network.adb:245:19    - Unknown word (avoid)         -- -- avoid duplicate
Engine/neo-world-network.adb:245:25    - Unknown word (duplicate)     -- -- avoid duplicate
Engine/neo-world-network.adb:24:19     - Unknown word (Original)     -- -- for I in Original_Bits loop
Engine/neo-world-network.adb:24:28     - Unknown word (Bits)         -- for I in Original_Bits loop
Engine/neo-world-network.adb:250:28    - Unknown word (OTHER)         -- if ( i == MAX_OTHER_SERVERS ) {
Engine/neo-world-network.adb:251:34    - Unknown word (OTHER)         -- Com_DPrintf( "MAX_OTHER_SERVERS hit, dropping
Engine/neo-world-network.adb:251:53    - Unknown word (dropping)      -- MAX_OTHER_SERVERS hit, dropping infoResponse\n" );
Engine/neo-world-network.adb:254:21    - Unknown word (this)          -- -- add this to the list
Engine/neo-world-network.adb:255:18    - Unknown word (numlocalservers) -- cls.numlocalservers = i+1;
Engine/neo-world-network.adb:267:34    - Unknown word (punkbuster)      -- cls.localServers[i].punkbuster = 0;
Engine/neo-world-network.adb:268:16    - Unknown word (strncpyz)        -- Q_strncpyz( info, MSG_ReadString
Engine/neo-world-network.adb:268:64    - Unknown word (STRING)          -- ReadString( msg ), MAX_INFO_STRING );
Engine/neo-world-network.adb:277:34    - Unknown word (STRING)          -- char info[MAX_INFO_STRING];
Engine/neo-world-network.adb:27:39     - Unknown word (Frame)        -- Decode_Delta (Current : Frame_State; Next : Stream
Engine/neo-world-network.adb:27:74     - Unknown word (Frame)        -- Next : Stream) return Frame_State is
Engine/neo-world-network.adb:282:34    - Unknown word (SERVERSTATUSREQUESTS) -- for (i = 0; i < MAX_SERVERSTATUSREQUESTS; i++) {
Engine/neo-world-network.adb:285:18    - Unknown word (break)                -- break;
Engine/neo-world-network.adb:288:23    - Unknown word (didn't)               -- -- if we didn't request this server
Engine/neo-world-network.adb:288:38    - Unknown word (this)                 -- if we didn't request this server status
Engine/neo-world-network.adb:294:18    - Unknown word (sprintf)              -- Com_sprintf(&serverStatus->string
Engine/neo-world-network.adb:294:41    - Unknown word (string)               -- sprintf(&serverStatus->string[len], sizeof(serverStatus
Engine/neo-world-network.adb:294:75    - Unknown word (string)               -- sizeof(serverStatus->string)-len, "%s", s);
Engine/neo-world-network.adb:295:32    - Unknown word (print)                -- if (serverStatus->print) {
Engine/neo-world-network.adb:297:19    - Unknown word (print)                -- -- print cvars
Engine/neo-world-network.adb:305:40    - Unknown word (STRING)               -- if (l >= MAX_INFO_STRING-1)
Engine/neo-world-network.adb:322:41    - Unknown word (string)               -- strlen(serverStatus->string);
Engine/neo-world-network.adb:323:18    - Unknown word (sprintf)              -- Com_sprintf(&serverStatus->string
Engine/neo-world-network.adb:323:41    - Unknown word (string)               -- sprintf(&serverStatus->string[len], sizeof(serverStatus
Engine/neo-world-network.adb:323:75    - Unknown word (string)               -- sizeof(serverStatus->string)-len, "\\");
Engine/neo-world-network.adb:324:32    - Unknown word (print)                -- if (serverStatus->print) {
Engine/neo-world-network.adb:325:30    - Unknown word (Players)              -- Com_Printf("\nPlayers:\n");
Engine/neo-world-network.adb:330:20    - Unknown word (sprintf)              -- Com_sprintf(&serverStatus->string
Engine/neo-world-network.adb:331:34    - Unknown word (print)                -- if (serverStatus->print) {
Engine/neo-world-network.adb:333:18    - Unknown word (sscanf)               -- sscanf(s, "%d %d", &score,
Engine/neo-world-network.adb:334:22    - Unknown word (strchr)               -- s = strchr(s, ' ');
Engine/neo-world-network.adb:336:24    - Unknown word (strchr)               -- s = strchr(s+1, ' ');
Engine/neo-world-network.adb:340:25    - Unknown word (unknown)              -- s = "unknown";
Engine/neo-world-network.adb:345:18    - Unknown word (sprintf)              -- Com_sprintf(&serverStatus->string
Engine/neo-world-network.adb:346:39    - Unknown word (Milliseconds)         -- serverStatus->time = Com_Milliseconds();
Engine/neo-world-network.adb:348:38    - Unknown word (qfalse)               -- serverStatus->pending = qfalse;
Engine/neo-world-network.adb:349:32    - Unknown word (print)                -- if (serverStatus->print) {
Engine/neo-world-network.adb:350:30    - Unknown word (retrieved)            -- serverStatus->retrieved = qtrue;
Engine/neo-world-network.adb:350:42    - Unknown word (qtrue)                -- serverStatus->retrieved = qtrue;
Engine/neo-world-network.adb:353:34    - Unknown word (AUTHORIZING)          -- if ( cls.state < CA_AUTHORIZING ) {
Engine/neo-world-network.adb:357:46    - Unknown word (netchan)              -- CompareAdr( from, clc.netchan.remoteAddress ) ) {
Engine/neo-world-network.adb:360:23    - Unknown word (have)                 -- -- if we have received packets within
Engine/neo-world-network.adb:360:28    - Unknown word (received)             -- -- if we have received packets within three
Engine/neo-world-network.adb:360:37    - Unknown word (packets)              -- if we have received packets within three seconds
Engine/neo-world-network.adb:360:45    - Unknown word (within)               -- have received packets within three seconds, ignore
Engine/neo-world-network.adb:360:58    - Unknown word (seconds)              -- packets within three seconds, ignore it
Engine/neo-world-network.adb:361:21    - Unknown word (might)                -- -- (it might be a malicious spoof
Engine/neo-world-network.adb:361:32    - Unknown word (malicious)            -- -- (it might be a malicious spoof)
Engine/neo-world-network.adb:361:42    - Unknown word (spoof)                -- might be a malicious spoof)
Engine/neo-world-network.adb:365:17    - Unknown word (drop)                 -- -- drop the connection
Engine/neo-world-network.adb:366:34    - Unknown word (disconnected)         -- Com_Printf( "Server disconnected for unknown reason\n
Engine/neo-world-network.adb:366:51    - Unknown word (unknown)              -- Server disconnected for unknown reason\n" );
Engine/neo-world-network.adb:367:51    - Unknown word (disconnected)         -- errorMessage", "Server disconnected for unknown reason\n
Engine/neo-world-network.adb:367:68    - Unknown word (unknown)              -- Server disconnected for unknown reason\n" );
Engine/neo-world-network.adb:368:29    - Unknown word (qtrue)                -- CL_Disconnect( qtrue );
Engine/neo-world-network.adb:369:17    - Unknown word (Echo)                 -- when Echo_Message =>
Engine/neo-world-network.adb:36:12     - Unknown word (sequence)     -- -- 4 sequence number (high bit set
Engine/neo-world-network.adb:36:48     - Unknown word (oversize)     -- (high bit set if an oversize fragment)
Engine/neo-world-network.adb:371:16    - Unknown word (strncpyz)             -- Q_strncpyz( clc.serverMessage,
Engine/neo-world-network.adb:376:44    - Unknown word (SERVERSPERPACKET)     -- serverAddress_t addresses[MAX_SERVERSPERPACKET];
Engine/neo-world-network.adb:377:24    - Unknown word (numservers)           -- int numservers;
Engine/neo-world-network.adb:378:24    - Unknown word (buffptr)              -- byte* buffptr;
Engine/neo-world-network.adb:379:24    - Unknown word (buffend)              -- byte* buffend;
Engine/neo-world-network.adb:37:11     - Unknown word (optional)     -- -- <optional reliable commands>
Engine/neo-world-network.adb:37:20     - Unknown word (reliable)     -- -- <optional reliable commands>
Engine/neo-world-network.adb:381:22    - Unknown word (numglobalservers)     -- if (cls.numglobalservers == -1) {
Engine/neo-world-network.adb:382:35    - Unknown word (lack)                 -- -- state to detect lack of servers or lack of
Engine/neo-world-network.adb:382:54    - Unknown word (lack)                -- detect lack of servers or lack of response
Engine/neo-world-network.adb:383:20    - Unknown word (numglobalservers)    -- cls.numglobalservers = 0;
Engine/neo-world-network.adb:386:22    - Unknown word (nummplayerservers)   -- if (cls.nummplayerservers == -1) {
Engine/neo-world-network.adb:387:20    - Unknown word (nummplayerservers)   -- cls.nummplayerservers = 0;
Engine/neo-world-network.adb:389:17    - Unknown word (parse)               -- -- parse through server response
Engine/neo-world-network.adb:389:23    - Unknown word (through)             -- -- parse through server response string
Engine/neo-world-network.adb:390:14    - Unknown word (numservers)          -- numservers = 0;
Engine/neo-world-network.adb:391:14    - Unknown word (buffptr)             -- buffptr = msg->data;
Engine/neo-world-network.adb:392:14    - Unknown word (buffend)             -- buffend = buffptr + msg-
Engine/neo-world-network.adb:392:27    - Unknown word (buffptr)             -- buffend = buffptr + msg->cursize;
Engine/neo-world-network.adb:392:42    - Unknown word (cursize)             -- = buffptr + msg->cursize;
Engine/neo-world-network.adb:393:21    - Unknown word (buffptr)             -- while (buffptr+1 < buffend) {
Engine/neo-world-network.adb:393:33    - Unknown word (buffend)             -- while (buffptr+1 < buffend) {
Engine/neo-world-network.adb:394:30    - Unknown word (initial)             -- -- advance to initial token
Engine/neo-world-network.adb:396:23    - Unknown word (buffptr)             -- if (*buffptr++ == '\\')
Engine/neo-world-network.adb:399:33    - Unknown word (buffend)             -- while (buffptr < buffend);
Engine/neo-world-network.adb:39:24     - Unknown word (reliable)     -- - 4 last client reliable command
Engine/neo-world-network.adb:400:32    - Unknown word (buffend)             -- if ( buffptr >= buffend - 6 ) {
Engine/neo-world-network.adb:403:19    - Unknown word (parse)               -- -- parse out ip
Engine/neo-world-network.adb:404:26    - Unknown word (numservers)          -- addresses[numservers].ip[0] = *buffptr++
Engine/neo-world-network.adb:405:26    - Unknown word (numservers)          -- addresses[numservers].ip[1] = *buffptr++
Engine/neo-world-network.adb:406:26    - Unknown word (numservers)          -- addresses[numservers].ip[2] = *buffptr++
Engine/neo-world-network.adb:408:19    - Unknown word (parse)               -- -- parse out port
Engine/neo-world-network.adb:41:12     - Unknown word (lastframe)    -- -- 1 lastframe for delta compression
Engine/neo-world-network.adb:41:32     - Unknown word (compression)  -- lastframe for delta compression
Engine/neo-world-network.adb:423:38    - Unknown word (SERVERSPERPACKET)    -- if (numservers >= MAX_SERVERSPERPACKET) {
Engine/neo-world-network.adb:426:19    - Unknown word (parse)               -- -- parse out EOT
Engine/neo-world-network.adb:42:12     - Unknown word (snap)         -- -- 1 snapFlags
Engine/neo-world-network.adb:42:16     - Unknown word (Flags)        -- -- 1 snapFlags
Engine/neo-world-network.adb:432:28    - Unknown word (numglobalservers)    -- count = cls.numglobalservers;
Engine/neo-world-network.adb:435:28    - Unknown word (nummplayerservers)   -- count = cls.nummplayerservers;
Engine/neo-world-network.adb:436:26    - Unknown word (OTHER)               -- max = MAX_OTHER_SERVERS;
Engine/neo-world-network.adb:43:12     - Unknown word (area)         -- -- 1 areaBytes
Engine/neo-world-network.adb:43:16     - Unknown word (Bytes)        -- -- 1 areaBytes
Engine/neo-world-network.adb:440:95    - Unknown word (mplayer)             -- globalServers[count] : &cls.mplayerServers[count];
Engine/neo-world-network.adb:445:20    - Unknown word (getting)             -- -- if getting the global list
Engine/neo-world-network.adb:448:27    - Unknown word (couldn't)            -- -- if we couldn't store the servers in
Engine/neo-world-network.adb:448:61    - Unknown word (main)                -- store the servers in the main list anymore
Engine/neo-world-network.adb:448:71    - Unknown word (anymore)             -- servers in the main list anymore
Engine/neo-world-network.adb:44:11     - Unknown word (areabytes)    -- -- <areabytes>
Engine/neo-world-network.adb:451:23    - Unknown word (just)                -- -- just store the addresses
Engine/neo-world-network.adb:451:54    - Unknown word (additional)          -- the addresses in an additional list
Engine/neo-world-network.adb:45:11     - Unknown word (playerstate)  -- -- <playerstate>
Engine/neo-world-network.adb:462:20    - Unknown word (numglobalservers)    -- cls.numglobalservers = count;
Engine/neo-world-network.adb:465:20    - Unknown word (nummplayerservers)   -- cls.nummplayerservers = count;
Engine/neo-world-network.adb:468:37    - Unknown word (parsed)              -- Com_Printf("%d servers parsed (total %d)\n", numservers
Engine/neo-world-network.adb:46:11     - Unknown word (packetentities) -- -- <packetentities>
Engine/neo-world-network.adb:470:24    - Unknown word (Unknown)             -- Com_DPrintf ("Unknown connectionless packet
Engine/neo-world-network.adb:470:32    - Unknown word (connectionless)      -- Com_DPrintf ("Unknown connectionless packet command.\n")
Engine/neo-world-network.adb:470:47    - Unknown word (packet)              -- Unknown connectionless packet command.\n");
Engine/neo-world-network.adb:474:38    - Unknown word (sequenced)           -- -- can't be a valid sequenced packet
Engine/neo-world-network.adb:476:16    - Unknown word (cursize)             -- if msg->cursize < 4 then
Engine/neo-world-network.adb:477:27    - Unknown word (Runt)                -- Com_Printf ("%s: Runt packet\n",NET_AdrToStringfrom
Engine/neo-world-network.adb:477:51    - Unknown word (Stringfrom)          -- Runt packet\n",NET_AdrToStringfrom ));
Engine/neo-world-network.adb:481:23    - Unknown word (Adrfrom)             -- if !NET_CompareAdrfrom, clc.netchan.remoteAddress
Engine/neo-world-network.adb:481:36    - Unknown word (netchan)             -- CompareAdrfrom, clc.netchan.remoteAddress ) then
Engine/neo-world-network.adb:482:27    - Unknown word (sequenced)           -- Com_DPrintf ("%s:sequenced packet without connection
Engine/neo-world-network.adb:482:75    - Unknown word (Stringfrom)          -- connection\n",NET_AdrToStringfrom ) );
Engine/neo-world-network.adb:486:15    - Unknown word (Netchan)             -- if !CL_Netchan_Process&clc.netchan
Engine/neo-world-network.adb:486:35    - Unknown word (netchan)             -- Netchan_Process&clc.netchan, msg) then
Engine/neo-world-network.adb:487:35    - Unknown word (duplicated)          -- -- out of order, duplicated, etc
Engine/neo-world-network.adb:489:25    - Unknown word (different)           -- -- the header is different lengths for reliable
Engine/neo-world-network.adb:489:35    - Unknown word (lengths)             -- header is different lengths for reliable and unreliable
Engine/neo-world-network.adb:489:47    - Unknown word (reliable)            -- different lengths for reliable and unreliable messages
Engine/neo-world-network.adb:489:60    - Unknown word (unreliable)         -- lengths for reliable and unreliable messages
Engine/neo-world-network.adb:490:14    - Unknown word (Bytes)              -- headerBytes = msg->readcount;
Engine/neo-world-network.adb:490:27    - Unknown word (readcount)          -- headerBytes = msg->readcount;
Engine/neo-world-network.adb:491:11    - Unknown word (track)              -- -- track the last message received
Engine/neo-world-network.adb:491:34    - Unknown word (received)           -- track the last message received so it can be returned
Engine/neo-world-network.adb:491:56    - Unknown word (returned)           -- received so it can be returned in
Engine/neo-world-network.adb:492:28    - Unknown word (allowing)           -- -- client messages, allowing the server to detect
Engine/neo-world-network.adb:492:60    - Unknown word (dropped)            -- the server to detect a dropped
Engine/neo-world-network.adb:493:11    - Unknown word (gamestate)          -- -- gamestate
Engine/neo-world-network.adb:494:25    - Unknown word (Sequence)           -- clc.serverMessageSequence = LittleLong*(int *
Engine/neo-world-network.adb:494:36    - Unknown word (Little)             -- serverMessageSequence = LittleLong*(int *)msg->data
Engine/neo-world-network.adb:496:11    - Unknown word (Parse)              -- CL_ParseServerMessagemsg;
Engine/neo-world-network.adb:496:22    - Unknown word (Messagemsg)         -- CL_ParseServerMessagemsg;
Engine/neo-world-network.adb:497:20    - Unknown word (know)               -- -- we don't know if it is ok to save
Engine/neo-world-network.adb:497:47    - Unknown word (demo)               -- if it is ok to save a demo message until
Engine/neo-world-network.adb:498:11    - Unknown word (after)              -- -- after we have parsed the frame
Engine/neo-world-network.adb:498:20    - Unknown word (have)               -- -- after we have parsed the frame
Engine/neo-world-network.adb:498:25    - Unknown word (parsed)             -- -- after we have parsed the frame
Engine/neo-world-network.adb:498:36    - Unknown word (frame)              -- after we have parsed the frame
Engine/neo-world-network.adb:499:15    - Unknown word (demorecording)      -- if clc.demorecording && !clc.demowaiting
Engine/neo-world-network.adb:499:37    - Unknown word (demowaiting)        -- demorecording && !clc.demowaiting then
Engine/neo-world-network.adb:500:18    - Unknown word (Demo)               -- CL_WriteDemoMessage msg, headerBytes
Engine/neo-world-network.adb:500:41    - Unknown word (Bytes)              -- WriteDemoMessage msg, headerBytes );
Engine/neo-world-network.adb:501:30    - Unknown word (sequence)           -- -- write the packet sequence
Engine/neo-world-network.adb:502:33    - Unknown word (Sequence)           -- len = clc.serverMessageSequence;
Engine/neo-world-network.adb:503:10    - Unknown word (swlen)              -- swlen = LittleLong( len )
Engine/neo-world-network.adb:503:18    - Unknown word (Little)             -- swlen = LittleLong( len );
Engine/neo-world-network.adb:504:21    - Unknown word (swlen)              -- FS_Write (&swlen, 4, clc.demofile);
Engine/neo-world-network.adb:504:35    - Unknown word (demofile)           -- Write (&swlen, 4, clc.demofile);
Engine/neo-world-network.adb:506:13    - Unknown word (skip)               -- -- skip the packet sequencing
Engine/neo-world-network.adb:506:29    - Unknown word (sequencing)         -- -- skip the packet sequencing information
Engine/neo-world-network.adb:507:21    - Unknown word (cursize)            -- len = msg->cursize - headerBytes;
Engine/neo-world-network.adb:507:37    - Unknown word (Bytes)              -- msg->cursize - headerBytes;
Engine/neo-world-network.adb:508:10    - Unknown word (swlen)              -- swlen = LittleLong(len);
Engine/neo-world-network.adb:508:18    - Unknown word (Little)             -- swlen = LittleLong(len);
Engine/neo-world-network.adb:509:21    - Unknown word (swlen)              -- FS_Write (&swlen, 4, clc.demofile);
Engine/neo-world-network.adb:509:35    - Unknown word (demofile)           -- Write (&swlen, 4, clc.demofile);
Engine/neo-world-network.adb:510:55    - Unknown word (demofile)           -- headerBytes, len, clc.demofile );
Engine/neo-world-network.adb:514:25    - Unknown word (just)               -- -- if the server just shut down, flush the
Engine/neo-world-network.adb:514:30    - Unknown word (shut)               -- if the server just shut down, flush the events
Engine/neo-world-network.adb:514:41    - Unknown word (flush)              -- server just shut down, flush the events
Engine/neo-world-network.adb:520:9     - Unknown word (Recieve)            -- -- Recieve
Engine/neo-world-network.adb:530:2     - Unknown word (Simple)             -- Simple udp server
Engine/neo-world-network.adb:536:17    - Unknown word (socket)             -- #include&lt;sys/socket.h&gt;
Engine/neo-world-network.adb:538:26    - Unknown word (length)             -- define BUFLEN 512	//Max length of buffer
Engine/neo-world-network.adb:538:9     - Unknown word (BUFLEN)             -- #define BUFLEN 512	//Max length of
Engine/neo-world-network.adb:539:33    - Unknown word (which)              -- PORT 8888	//The port on which to listen for incoming
Engine/neo-world-network.adb:539:42    - Unknown word (listen)             -- The port on which to listen for incoming data
Engine/neo-world-network.adb:53:14     - Unknown word (Transmit)       -- -- Netchan_TransmitNextFragment
Engine/neo-world-network.adb:53:6      - Unknown word (Netchan)        -- -- Netchan_TransmitNextFragment
Engine/neo-world-network.adb:541:1     - Unknown word (void)               -- void die(char *s)
Engine/neo-world-network.adb:543:2     - Unknown word (perror)             -- perror(s);
Engine/neo-world-network.adb:547:10    - Unknown word (void)               -- int main(void)
Engine/neo-world-network.adb:547:5     - Unknown word (main)               -- int main(void)
Engine/neo-world-network.adb:549:31    - Unknown word (other)              -- sockaddr_in si_me, si_other;
Engine/neo-world-network.adb:549:9     - Unknown word (sockaddr)           -- struct sockaddr_in si_me, si_other;
Engine/neo-world-network.adb:551:29    - Unknown word (other)              -- i, slen = sizeof(si_other) , recv_len;
Engine/neo-world-network.adb:552:11    - Unknown word (BUFLEN)             -- char buf[BUFLEN];
Engine/neo-world-network.adb:554:17    - Unknown word (socket)             -- //create a UDP socket
Engine/neo-world-network.adb:555:25    - Unknown word (SOCK)              -- ((s=socket(AF_INET, SOCK_DGRAM, IPPROTO_UDP)
Engine/neo-world-network.adb:555:30    - Unknown word (DGRAM)             -- socket(AF_INET, SOCK_DGRAM, IPPROTO_UDP)) == -
Engine/neo-world-network.adb:555:37    - Unknown word (IPPROTO)           -- AF_INET, SOCK_DGRAM, IPPROTO_UDP)) == -1)
Engine/neo-world-network.adb:555:9     - Unknown word (socket)            -- if ((s=socket(AF_INET, SOCK_DGRAM
Engine/neo-world-network.adb:557:13    - Unknown word (socket)            -- die(&quot;socket&quot;);
Engine/neo-world-network.adb:557:20    - Unknown word (quot)              -- die(&quot;socket&quot;);
Engine/neo-world-network.adb:557:8     - Unknown word (quot)              -- die(&quot;socket&quot;);
Engine/neo-world-network.adb:560:18    - Unknown word (structure)         -- // zero out the structure
Engine/neo-world-network.adb:564:19    - Unknown word (htons)             -- si_me.sin_port = htons(PORT);
Engine/neo-world-network.adb:565:26    - Unknown word (htonl)             -- me.sin_addr.s_addr = htonl(INADDR_ANY);
Engine/neo-world-network.adb:565:32    - Unknown word (INADDR)            -- addr.s_addr = htonl(INADDR_ANY);
Engine/neo-world-network.adb:567:4     - Unknown word (bind)              -- //bind socket to port
Engine/neo-world-network.adb:567:9     - Unknown word (socket)            -- //bind socket to port
Engine/neo-world-network.adb:568:23    - Unknown word (sockaddr)          -- if( bind(s , (struct sockaddr*)&amp;si_me, sizeof
Engine/neo-world-network.adb:568:6     - Unknown word (bind)              -- if( bind(s , (struct sockaddr
Engine/neo-world-network.adb:570:13    - Unknown word (bind)              -- die(&quot;bind&quot;);
Engine/neo-world-network.adb:570:18    - Unknown word (quot)              -- die(&quot;bind&quot;);
Engine/neo-world-network.adb:570:8     - Unknown word (quot)              -- die(&quot;bind&quot;);
Engine/neo-world-network.adb:573:4     - Unknown word (keep)              -- //keep listening for data
Engine/neo-world-network.adb:573:9     - Unknown word (listening)         -- //keep listening for data
Engine/neo-world-network.adb:576:11    - Unknown word (quot)              -- printf(&quot;Waiting for data...
Engine/neo-world-network.adb:576:16    - Unknown word (Waiting)           -- printf(&quot;Waiting for data...&quot;);
Engine/neo-world-network.adb:577:3     - Unknown word (fflush)            -- fflush(stdout);
Engine/neo-world-network.adb:579:20    - Unknown word (some)              -- //try to receive some data, this is a blocking
Engine/neo-world-network.adb:579:31    - Unknown word (this)              -- to receive some data, this is a blocking call
Engine/neo-world-network.adb:579:41    - Unknown word (blocking)          -- some data, this is a blocking call
Engine/neo-world-network.adb:579:50    - Unknown word (call)              -- this is a blocking call
Engine/neo-world-network.adb:580:19    - Unknown word (recvfrom)          -- if ((recv_len = recvfrom(s, buf, BUFLEN, 0,
Engine/neo-world-network.adb:580:36    - Unknown word (BUFLEN)            -- len = recvfrom(s, buf, BUFLEN, 0, (struct sockaddr
Engine/neo-world-network.adb:580:55    - Unknown word (sockaddr)          -- BUFLEN, 0, (struct sockaddr *) &amp;si_other, &amp
Engine/neo-world-network.adb:580:75    - Unknown word (other)             -- sockaddr *) &amp;si_other, &amp;slen)) == -1)
Engine/neo-world-network.adb:582:14    - Unknown word (recvfrom)          -- die(&quot;recvfrom()&quot;);
Engine/neo-world-network.adb:586:16    - Unknown word (Received)          -- printf(&quot;Received packet from %s:%d\n
Engine/neo-world-network.adb:586:57    - Unknown word (ntoa)              -- %s:%d\n&quot;, inet_ntoa(si_other.sin_addr),
Engine/neo-world-network.adb:586:65    - Unknown word (other)             -- quot;, inet_ntoa(si_other.sin_addr), ntohs(si
Engine/neo-world-network.adb:586:82    - Unknown word (ntohs)             -- si_other.sin_addr), ntohs(si_other.sin_port))
Engine/neo-world-network.adb:586:91    - Unknown word (other)             -- sin_addr), ntohs(si_other.sin_port));
Engine/neo-world-network.adb:589:35    - Unknown word (same)              -- the client with the same data
Engine/neo-world-network.adb:590:43    - Unknown word (sockaddr)          -- recv_len, 0, (struct sockaddr*) &amp;si_other, slen
Engine/neo-world-network.adb:590:7     - Unknown word (sendto)            -- if (sendto(s, buf, recv_len, 0
Engine/neo-world-network.adb:592:14    - Unknown word (sendto)            -- die(&quot;sendto()&quot;);
Engine/neo-world-network.adb:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo-world-network.adb:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo-world-network.adb:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo-world-network.adb:606:8     - Unknown word (beginprocedure)    -- -- beginprocedure Server is
Engine/neo-world-network.adb:611:16    - Unknown word (nothing)           -- -- -- Do nothing if its not the time
Engine/neo-world-network.adb:611:57    - Unknown word (frame)             -- the time for the next frame
Engine/neo-world-network.adb:616:20    - Unknown word (frame)             -- -- -- Do the frame
Engine/neo-world-network.adb:618:17    - Unknown word (Residual)          -- -- Server.Residual_Time := Server.Residual
Engine/neo-world-network.adb:618:41    - Unknown word (Residual)          -- Residual_Time := Server.Residual_Timel + msec;
Engine/neo-world-network.adb:618:50    - Unknown word (Timel)             -- Time := Server.Residual_Timel + msec;
Engine/neo-world-network.adb:618:58    - Unknown word (msec)              -- Server.Residual_Timel + msec;
Engine/neo-world-network.adb:619:61    - Unknown word (Residual)          -- Frame (svs.time + Server.Residual_Time);
Engine/neo-world-network.adb:621:13    - Unknown word (Wait)              -- -- -- Wait for a packet or if we
Engine/neo-world-network.adb:621:44    - Unknown word (ready)             -- packet or if we are ready for a frame
Engine/neo-world-network.adb:621:56    - Unknown word (frame)             -- if we are ready for a frame
Engine/neo-world-network.adb:622:23    - Unknown word (Residual)          -- -- elsif sv.timeResidual < Frame_Time then
Engine/neo-world-network.adb:623:16    - Unknown word (Sleep)             -- -- NET_Sleep (Frame_Time - sv.timeResidual
Engine/neo-world-network.adb:623:43    - Unknown word (Residual)          -- Frame_Time - sv.timeResidual);
Engine/neo-world-network.adb:626:20    - Unknown word (infostrings)       -- -- -- Update infostrings and send the data to
Engine/neo-world-network.adb:626:57    - Unknown word (relevent)          -- send the data to all relevent clients ???
Engine/neo-world-network.adb:633:34    - Unknown word (Frames)            -- for Frame in Client.Frames loop
Engine/neo-world-network.adb:634:47    - Unknown word (Acked)             -- Total + Frame.Message_Acked - Frame.Message_Sent
Engine/neo-world-network.adb:634:69    - Unknown word (Sent)              -- Acked - Frame.Message_Sent;
Engine/neo-world-network.adb:636:72    - Unknown word (Frames)           -- else Total / Client.Frames.Length);
Engine/neo-world-network.adb:636:79    - Unknown word (Length)           -- Total / Client.Frames.Length);
Engine/neo-world-network.adb:640:19    - Unknown word (timeouts)         -- -- -- Check timeouts
Engine/neo-world-network.adb:643:15    - Unknown word (Correct)          -- -- -- Correct message times across
Engine/neo-world-network.adb:643:31    - Unknown word (times)            -- -- Correct message times across map changes
Engine/neo-world-network.adb:643:37    - Unknown word (across)           -- Correct message times across map changes
Engine/neo-world-network.adb:646:15    - Unknown word (Cure)             -- -- -- Cure a zombie if it is not
Engine/neo-world-network.adb:646:22    - Unknown word (zombie)           -- -- -- Cure a zombie if it is not past the
Engine/neo-world-network.adb:646:42    - Unknown word (past)             -- zombie if it is not past the point of no return
Engine/neo-world-network.adb:647:30    - Unknown word (Zombie)           -- if Client.State = Zombie_State and Client.Last
Engine/neo-world-network.adb:647:73    - Unknown word (Zombie)           -- Client.Last_Packet_Time < Zombie_Point then
Engine/neo-world-network.adb:648:21    - Unknown word (Switching)        -- -- Line ("Switching " & Client.Name & "
Engine/neo-world-network.adb:648:70    - Unknown word (Zombie)           -- to Free_State from Zombie_State.")
Engine/neo-world-network.adb:64:37     - Unknown word (recieved)       -- Fetch and decompress all recieved messages
Engine/neo-world-network.adb:652:15    - Unknown word (Drop)             -- -- -- Drop a timeout
Engine/neo-world-network.adb:652:22    - Unknown word (timeout)          -- -- -- Drop a timeout
Engine/neo-world-network.adb:653:76    - Unknown word (Drop)             -- Client.Last_Packet_Time < Drop_Point then
Engine/neo-world-network.adb:654:17    - Unknown word (Drop)             -- -- SV_DropClient (cl, "timed out
Engine/neo-world-network.adb:654:34    - Unknown word (timed)            -- SV_DropClient (cl, "timed out");
Engine/neo-world-network.adb:657:21    - Unknown word (Timeout)          -- -- Client.Timeout_Count;
Engine/neo-world-network.adb:664:36    - Unknown word (Unsent)           -- if Client.Channel.Has_Unsent_Fragments then
Engine/neo-world-network.adb:665:123   - Unknown word (Unsent)           -- Length - Client.Channel.Unsent_Fragment_Start);
Engine/neo-world-network.adb:665:84    - Unknown word (Channal)          -- RateMSec (Client, Client.Channal.Unsent_Length - Client
Engine/neo-world-network.adb:665:92    - Unknown word (Unsent)           -- Client, Client.Channal.Unsent_Length - Client.Channel
Engine/neo-world-network.adb:665:99    - Unknown word (Length)           -- Client.Channal.Unsent_Length - Client.Channel.Unsent
Engine/neo-world-network.adb:666:16    - Unknown word (Netchan)          -- -- Netchan_TransmitNextFragment
Engine/neo-world-network.adb:666:24    - Unknown word (Transmit)         -- - Netchan_TransmitNextFragment( &client
Engine/neo-world-network.adb:666:55    - Unknown word (netchan)          -- ransmitNextFragment( &client->netchan );
Engine/neo-world-network.adb:667:37    - Unknown word (unsent)           -- if (!client->netchan.unsentFragments)
Engine/neo-world-network.adb:669:26    - Unknown word (sure)             -- -- make sure the netchan queue has
Engine/neo-world-network.adb:669:53    - Unknown word (been)             -- the netchan queue has been properly initialized
Engine/neo-world-network.adb:669:58    - Unknown word (properly)         -- netchan queue has been properly initialized (you never
Engine/neo-world-network.adb:669:67    - Unknown word (initialized)      -- queue has been properly initialized (you never know)
Engine/neo-world-network.adb:669:84    - Unknown word (never)            -- properly initialized (you never know)
Engine/neo-world-network.adb:669:90    - Unknown word (know)             -- initialized (you never know)
Engine/neo-world-network.adb:671:34    - Unknown word (DROP)             -- Com_Error(ERR_DROP, "netchan queue is not
Engine/neo-world-network.adb:671:62    - Unknown word (properly)         -- netchan queue is not properly initialized in SV_Netchan
Engine/neo-world-network.adb:671:71    - Unknown word (initialized)      -- queue is not properly initialized in SV_Netchan_TransmitNextFra
Engine/neo-world-network.adb:671:89    - Unknown word (Netchan)          -- properly initialized in SV_Netchan_TransmitNextFragment
Engine/neo-world-network.adb:671:97    - Unknown word (Transmit)         -- initialized in SV_Netchan_TransmitNextFragment\n");
Engine/neo-world-network.adb:673:43    - Unknown word (transmitted)      -- the last fragment was transmitted, check wether we have
Engine/neo-world-network.adb:673:62    - Unknown word (wether)           -- was transmitted, check wether we have queued messages
Engine/neo-world-network.adb:673:72    - Unknown word (have)             -- transmitted, check wether we have queued messages
Engine/neo-world-network.adb:676:46    - Unknown word (Transmit)         -- DPrintf("#462 Netchan_TransmitNextFragment: popping
Engine/neo-world-network.adb:676:68    - Unknown word (popping)          -- TransmitNextFragment: popping a queued message for
Engine/neo-world-network.adb:676:97    - Unknown word (transmit)         -- a queued message for transmit\n");
Engine/neo-world-network.adb:678:31    - Unknown word (Encode)           -- SV_Netchan_Encode( client, &netbuf->msg
Engine/neo-world-network.adb:679:28    - Unknown word (Transmit)         -- Netchan_Transmit( &client->netchan, netbuf
Engine/neo-world-network.adb:679:68    - Unknown word (cursize)          -- netchan, netbuf->msg.cursize, netbuf->msg.data )
Engine/neo-world-network.adb:67:14     - Unknown word (Handle)         -- -- Handle messages accordingly
Engine/neo-world-network.adb:67:30     - Unknown word (accordingly)    -- -- Handle messages accordingly
Engine/neo-world-network.adb:683:70    - Unknown word (emptied)          -- TransmitNextFragment: emptied queue\n");
Engine/neo-world-network.adb:687:70    - Unknown word (remaining)        -- TransmitNextFragment: remaining queued message\n");
Engine/neo-world-network.adb:68:24     - Unknown word (Kind)           -- case Message.Kind is
Engine/neo-world-network.adb:692:36    - Unknown word (MSGLEN)           -- byte msg_buf[MAX_MSGLEN];
Engine/neo-world-network.adb:696:24    - Unknown word (need)             -- - -- bots need to have their snapshots
Engine/neo-world-network.adb:696:37    - Unknown word (their)            -- - bots need to have their snapshots build, but
Engine/neo-world-network.adb:697:29    - Unknown word (them)             -- -- the query them directly without needing
Engine/neo-world-network.adb:697:34    - Unknown word (directly)         -- -- the query them directly without needing to be
Engine/neo-world-network.adb:697:51    - Unknown word (needing)          -- them directly without needing to be sent
Engine/neo-world-network.adb:697:65    - Unknown word (sent)             -- without needing to be sent
Engine/neo-world-network.adb:698:29    - Unknown word (gentity)          -- if ( client->gentity && client->gentity-
Engine/neo-world-network.adb:698:48    - Unknown word (gentity)          -- >gentity && client->gentity->r.svFlags & SVF_BOT
Engine/neo-world-network.adb:698:61    - Unknown word (Flags)            -- client->gentity->r.svFlags & SVF_BOT ) {
Engine/neo-world-network.adb:702:20    - Unknown word (allowoverflow)    -- -- msg.allowoverflow = qtrue;
Engine/neo-world-network.adb:702:36    - Unknown word (qtrue)            -- msg.allowoverflow = qtrue;
Engine/neo-world-network.adb:704:34    - Unknown word (know)             -- -- let the client know which reliable clientCommands
Engine/neo-world-network.adb:704:39    - Unknown word (which)            -- let the client know which reliable clientCommands
Engine/neo-world-network.adb:704:45    - Unknown word (reliable)        -- the client know which reliable clientCommands we have
Engine/neo-world-network.adb:706:32    - Unknown word (reliable)        -- -- (re)send any reliable server commands
Engine/neo-world-network.adb:708:37    - Unknown word (relevant)        -- - send over all the relevant entityState_t
Engine/neo-world-network.adb:70:31     - Unknown word (repsonses)      -- -- Send challenge repsonses instead of request packets
Engine/neo-world-network.adb:70:41     - Unknown word (instead)        -- challenge repsonses instead of request packets and
Engine/neo-world-network.adb:70:60     - Unknown word (packets)        -- repsonses instead of request packets and address changes
Engine/neo-world-network.adb:713:29    - Unknown word (overflow)        -- -- check for overflow
Engine/neo-world-network.adb:714:25    - Unknown word (overflowed)      -- if ( msg.overflowed ) {
Engine/neo-world-network.adb:715:44    - Unknown word (overflowed)      -- Printf ("WARNING: msg overflowed for %s\n", client->name
Engine/neo-world-network.adb:724:20    - Unknown word (Mode)            -- -- if Server_Mode.Get = Dedicated_Mode
Engine/neo-world-network.adb:724:41    - Unknown word (Mode)            -- Mode.Get = Dedicated_Mode and Server.Time >= Server
Engine/neo-world-network.adb:727:28    - Unknown word (needed)          -- -- Resolve if needed
Engine/neo-world-network.adb:728:24    - Unknown word (Modified)        -- - if Master.Modified then
Engine/neo-world-network.adb:729:23    - Unknown word (Modified)        -- -- Master.Modified := False;
Engine/neo-world-network.adb:729:35    - Unknown word (False)           -- Master.Modified := False;
Engine/neo-world-network.adb:72:47     - Unknown word (Connecting)     -- Server_View.Status /= Connecting_State then
Engine/neo-world-network.adb:730:23    - Unknown word (Resolving)       -- -- Line ("Resolving " & Master.Name & "
Engine/neo-world-network.adb:734:25    - Unknown word (Couldn't)        -- Line ("Couldn't resolve address: "
Engine/neo-world-network.adb:73:24     - Unknown word (Ignoring)       -- Line ("Ignoring spurious challenge from
Engine/neo-world-network.adb:73:33     - Unknown word (spurious)       -- Line ("Ignoring spurious challenge from server
Engine/neo-world-network.adb:742:40    - Unknown word (resolved)        -- Line (Master.Name & " resolved to " & Master.IP &
Engine/neo-world-network.adb:746:26    - Unknown word (Print)           -- Out_Of_Band_Print (Server, Master.Address
Engine/neo-world-network.adb:76:45     - Unknown word (Challenging)    -- Server_View.State := Challenging_State;
Engine/neo-world-network.adb:77:24     - Unknown word (Packet)         -- Client.Packet_Count := 0;
Engine/neo-world-network.adb:79:110    - Unknown word (multiple)       -- hand off connections to multiple servers
Engine/neo-world-network.adb:79:62     - Unknown word (Allow)          -- := Message.From; -- Allow a server proxy to hand
Engine/neo-world-network.adb:79:77     - Unknown word (proxy)          -- From; -- Allow a server proxy to hand off connections
Engine/neo-world-network.adb:79:86     - Unknown word (hand)           -- Allow a server proxy to hand off connections to multiple
Engine/neo-world-network.adb:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-world-network.adb:85:24     - Unknown word (Ignoring)       -- Line ("Ignoring spurious connection
Engine/neo-world-network.adb:85:33     - Unknown word (spurious)       -- Line ("Ignoring spurious connection reply from
Engine/neo-world-network.adb:87:24     - Unknown word (Ignoring)       -- Line ("Ignoring connection reply from
Engine/neo-world-network.adb:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-world-network.adb:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-world-network.adb:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo-world-network.adb:91:26     - Unknown word (Ignoring)       -- Line ("Ignoring duplicate connection
Engine/neo-world-network.adb:91:35     - Unknown word (duplicate)      -- Line ("Ignoring duplicate connection reply from
Engine/neo-world-network.adb:96:39     - Unknown word (received)       -- Printf ("Dup connect received. Ignored.\n");
Engine/neo-world-network.adb:96:50     - Unknown word (Ignored)        -- Dup connect received.  Ignored.\n");
Engine/neo-world-network.adb:99:32     - Unknown word (CHALLENGING)    -- if cls.state != CA_CHALLENGING ) {
Engine/neo-world-network.ads:102:11    - Unknown word (punkbuster)      -- -- punkbuster :  := 0;
Engine/neo-world-network.ads:104:30    - Unknown word (Unbound)         -- Map : Str_Unbound := ;
Engine/neo-world-network.ads:105:30    - Unknown word (Unbound)         -- Game : Str_Unbound := ;
Engine/neo-world-network.ads:107:26    - Unknown word (Positive)        -- Capacity : Positive := ;
Engine/neo-world-network.ads:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-world-network.ads:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-world-network.ads:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo-world-network.ads:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-world-network.ads:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-world-network.ads:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-world-network.ads:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-world-network.ads:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-world-network.ads:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-world-network.ads:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-world-network.ads:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-world-network.ads:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-world-network.ads:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-world-network.ads:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-world-network.ads:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-world-network.ads:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-world-network.ads:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-world-network.ads:19:10     - Unknown word (Frame)        -- -- -- Frame --
Engine/neo-world-network.ads:22:19     - Unknown word (Kind)         -- -- type Origin_Kind is (Client_Origin, Server
Engine/neo-world-network.ads:24:12     - Unknown word (Frame)        -- -- type Frame_State (Kind : Origin
Engine/neo-world-network.ads:24:25     - Unknown word (Kind)         -- type Frame_State (Kind : Origin_Kind) is record
Engine/neo-world-network.ads:24:39     - Unknown word (Kind)         -- State (Kind : Origin_Kind) is record
Engine/neo-world-network.ads:25:16     - Unknown word (Kind)         -- -- case Kind is
Engine/neo-world-network.ads:36:25     - Unknown word (Pack)         -- end record with Pack;
Engine/neo-world-network.ads:42:19     - Unknown word (Kind)         -- -- type Client_Kind is (Remote_Client, Server
Engine/neo-world-network.ads:43:46     - Unknown word (Zombie)       -- Kind is (Free_State, Zombie_State, Connected_State
Engine/neo-world-network.ads:43:77     - Unknown word (Primed)       -- State, Connected_State, Primed_State, Active_State
Engine/neo-world-network.ads:46:22     - Unknown word (Vector)       -- - Messages : Vector_Str_Unbound.Unsafe.Vector
Engine/neo-world-network.ads:46:33     - Unknown word (Unbound)      -- Messages : Vector_Str_Unbound.Unsafe.Vector;
Engine/neo-world-network.ads:46:41     - Unknown word (Unsafe)       -- Vector_Str_Unbound.Unsafe.Vector;
Engine/neo-world-network.ads:46:48     - Unknown word (Vector)       -- Vector_Str_Unbound.Unsafe.Vector;
Engine/neo-world-network.ads:48:11     - Unknown word (Handle)       -- -- Handle : Str_Unbound
Engine/neo-world-network.ads:48:26     - Unknown word (Unbound)      -- Handle : Str_Unbound := NULL_STR_UNBOUND
Engine/neo-world-network.ads:48:52     - Unknown word (UNBOUND)      -- Unbound := NULL_STR_UNBOUND;
Engine/neo-world-network.ads:54:19     - Unknown word (Frame)        -- -- Frame_Delta :  := ;
Engine/neo-world-network.ads:56:19     - Unknown word (Packet)       -- -- Packet_Time :  := ;
Engine/neo-world-network.ads:59:24     - Unknown word (Delayed)      -- Rate_Delayed :  := ;
Engine/neo-world-network.ads:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo-world-network.ads:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo-world-network.ads:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo-world-network.ads:60:19     - Unknown word (Frames)       -- -- Frames :  := ;
Engine/neo-world-network.ads:63:28     - Unknown word (Wait)         -- Snapshot_Wait :  := ;
Engine/neo-world-network.ads:70:11     - Unknown word (Area)         -- -- Area_Location :  := ;
Engine/neo-world-network.ads:73:11     - Unknown word (Sent)         -- -- Sent_Time :  := ;
Engine/neo-world-network.ads:75:11     - Unknown word (numlocalservers) -- -- numlocalservers :  := 0= i+1;
Engine/neo-world-network.ads:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-world-network.ads:82:32     - Unknown word (Controlled)      -- Server_State is new Controlled with tagged record
Engine/neo-world-network.ads:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-world-network.ads:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-world-network.ads:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo-world-physics.adb:100:19    - Unknown word (friction)         -- sceneDesc.frictionType = PxFrictionType
Engine/neo-world-physics.adb:100:55    - Unknown word (DIRECTIONAL)      -- PxFrictionType::eTWO_DIRECTIONAL;
Engine/neo-world-physics.adb:103:17    - Unknown word (broad)            -- sceneDesc.broadPhaseType = mParams.mBroadPhas
Engine/neo-world-physics.adb:103:22    - Unknown word (Phase)            -- sceneDesc.broadPhaseType = mParams.mBroadPhaseType
Engine/neo-world-physics.adb:103:43    - Unknown word (Broad)            -- broadPhaseType = mParams.mBroadPhaseType;
Engine/neo-world-physics.adb:103:48    - Unknown word (Phase)            -- roadPhaseType = mParams.mBroadPhaseType;
Engine/neo-world-physics.adb:104:23    - Unknown word (Passes)           -- sceneDesc.ccdMaxPasses = mParams.mMaxNbCCDPasses
Engine/neo-world-physics.adb:104:49    - Unknown word (Passes)           -- dMaxPasses = mParams.mMaxNbCCDPasses;
Engine/neo-world-physics.adb:107:17    - Unknown word (Using)            -- printf("Using GPU\n");
Engine/neo-world-physics.adb:108:19    - Unknown word (flags)            -- sceneDesc.flags |= PxSceneFlag::eENABLE
Engine/neo-world-physics.adb:109:19    - Unknown word (broad)            -- sceneDesc.broadPhaseType = PxBroadPhaseType
Engine/neo-world-physics.adb:109:38    - Unknown word (Broad)            -- sceneDesc.broadPhaseType = PxBroadPhaseType::eGPU;
Engine/neo-world-physics.adb:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-world-physics.adb:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-world-physics.adb:10:110    - Unknown word (warranty)     -- without even the implied warranty of                -
Engine/neo-world-physics.adb:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-world-physics.adb:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-world-physics.adb:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-world-physics.adb:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-world-physics.adb:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-world-physics.adb:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-world-physics.adb:113:37    - Unknown word (temp)             -- sceneDesc.gpuDynamicsConfig.tempBufferCapacity *= 2;
Engine/neo-world-physics.adb:117:37    - Unknown word (heap)             -- sceneDesc.gpuDynamicsConfig.heapCapacity *= 2;
Engine/neo-world-physics.adb:118:37    - Unknown word (found)            -- sceneDesc.gpuDynamicsConfig.foundLostPairsCapacity *=
Engine/neo-world-physics.adb:118:42    - Unknown word (Lost)             -- gpuDynamicsConfig.foundLostPairsCapacity *= 2;
Engine/neo-world-physics.adb:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-world-physics.adb:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-world-physics.adb:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-world-physics.adb:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-world-physics.adb:120:11    - Unknown word (Cuda)             -- PxCudaContextManagerDesc cudaContext
Engine/neo-world-physics.adb:120:34    - Unknown word (cuda)             -- PxCudaContextManagerDesc cudaContextManagerDesc;
Engine/neo-world-physics.adb:121:39    - Unknown word (Mode)             -- cudaContextManagerDesc.interopMode = PxCudaInteropMode
Engine/neo-world-physics.adb:121:48    - Unknown word (Cuda)             -- xtManagerDesc.interopMode = PxCudaInteropMode::OGL_INTEROP
Engine/neo-world-physics.adb:121:59    - Unknown word (Mode)             -- interopMode = PxCudaInteropMode::OGL_INTEROP;
Engine/neo-world-physics.adb:121:9     - Unknown word (cuda)             -- cudaContextManagerDesc.interopMode
Engine/neo-world-physics.adb:122:10    - Unknown word (Cuda)             -- gCudaContextManager = PxCreateCudaC
Engine/neo-world-physics.adb:122:39    - Unknown word (Cuda)             -- gCudaContextManager = PxCreateCudaContextManager(*mFoundation
Engine/neo-world-physics.adb:122:72    - Unknown word (cuda)             -- aContextManager(*mFoundation, cudaContextManagerDesc);
Engine/neo-world-physics.adb:124:13    - Unknown word (Cuda)             -- if(gCudaContextManager) then
Engine/neo-world-physics.adb:132:118   - Unknown word (dispatch)         -- dispatcher, used by GRB to dispatch CUDA kernels.
Engine/neo-world-physics.adb:132:127   - Unknown word (CUDA)             -- used by GRB to dispatch CUDA kernels.
Engine/neo-world-physics.adb:132:132   - Unknown word (kernels)          -- GRB to dispatch CUDA kernels.
Engine/neo-world-physics.adb:132:91    - Unknown word (dispatcher)       -- puDispatcher(); --Set the GPU dispatcher, used by GRB to dispatch
Engine/neo-world-physics.adb:137:7     - Unknown word (ASSERT)           -- ASSERT(mScene);
Engine/neo-world-physics.adb:139:19    - Unknown word (Broad)            -- if(mParams.mBroadPhaseType==PxBroadPhaseType
Engine/neo-world-physics.adb:139:37    - Unknown word (Broad)            -- mParams.mBroadPhaseType==PxBroadPhaseType::eMBP) then
Engine/neo-world-physics.adb:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-world-physics.adb:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-world-physics.adb:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-world-physics.adb:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-world-physics.adb:142:24    - Unknown word (Bounds)           -- if(desc.mGlobalBounds.IsValid()) then
Engine/neo-world-physics.adb:143:31    - Unknown word (Bounds)           -- min.x = desc.mGlobalBounds.GetMin(0);
Engine/neo-world-physics.adb:144:31    - Unknown word (Bounds)           -- min.y = desc.mGlobalBounds.GetMin(1);
Engine/neo-world-physics.adb:145:31    - Unknown word (Bounds)           -- min.z = desc.mGlobalBounds.GetMin(2);
Engine/neo-world-physics.adb:146:31    - Unknown word (Bounds)           -- max.x = desc.mGlobalBounds.GetMax(0);
Engine/neo-world-physics.adb:157:114   - Unknown word (Subdiv)           -- globalBounds, mParams.mMBPSubdivLevel);
Engine/neo-world-physics.adb:160:18    - Unknown word (bounds)           -- region.bounds = regions[i];
Engine/neo-world-physics.adb:161:30    - Unknown word (void)             -- region.userData = (void*)i;
Engine/neo-world-physics.adb:168:7     - Unknown word (PINT)             -- PINT_MATERIAL_CREATE Desc
Engine/neo-world-physics.adb:171:13    - Unknown word (Restitution)      -- Desc.mRestitution = 0.0f;
Engine/neo-world-physics.adb:177:11    - Unknown word (Joint)            -- -- Make_Joint --
Engine/neo-world-physics.adb:180:106   - Unknown word (jointed)          -- enable_collision_between_jointed, const EditableParams
Engine/neo-world-physics.adb:180:121   - Unknown word (Editable)         -- between_jointed, const EditableParams& params)
Engine/neo-world-physics.adb:180:18    - Unknown word (Joint)            -- procedure Make_Joint (PxPhysics& physics
Engine/neo-world-physics.adb:180:51    - Unknown word (PINT)             -- PxPhysics& physics, const PINT_JOINT_CREATE& desc,
Engine/neo-world-physics.adb:180:56    - Unknown word (JOINT)            -- physics, const PINT_JOINT_CREATE& desc, bool enable
Engine/neo-world-physics.adb:180:88    - Unknown word (collision)        -- CREATE& desc, bool enable_collision_between_jointed, const
Engine/neo-world-physics.adb:180:98    - Unknown word (between)          -- bool enable_collision_between_jointed, const EditableParams
Engine/neo-world-physics.adb:181:23    - Unknown word (joint)            -- const bool use_d6_joint = params.mUseD6Joint
Engine/neo-world-physics.adb:181:44    - Unknown word (Joint)            -- joint = params.mUseD6Joint;
Engine/neo-world-physics.adb:182:23    - Unknown word (projection)       -- const bool enable_projection = params.mEnableJointProjecti
Engine/neo-world-physics.adb:182:50    - Unknown word (Joint)            -- projection = params.mEnableJointProjection;
Engine/neo-world-physics.adb:182:55    - Unknown word (Projection)       -- params.mEnableJointProjection;
Engine/neo-world-physics.adb:183:17    - Unknown word (projection)       -- const float projection_linear_tolerance = params
Engine/neo-world-physics.adb:183:28    - Unknown word (linear)           -- const float projection_linear_tolerance = params.mProjectio
Engine/neo-world-physics.adb:183:35    - Unknown word (tolerance)       -- float projection_linear_tolerance = params.mProjectionLinearTol
Engine/neo-world-physics.adb:183:55    - Unknown word (Projection)      -- tolerance = params.mProjectionLinearTolerance;
Engine/neo-world-physics.adb:183:65    - Unknown word (Linear)          -- = params.mProjectionLinearTolerance;
Engine/neo-world-physics.adb:183:71    - Unknown word (Tolerance)       -- params.mProjectionLinearTolerance;
Engine/neo-world-physics.adb:184:17    - Unknown word (projection)      -- const float projection_angular_tolerance =
Engine/neo-world-physics.adb:184:28    - Unknown word (angular)         -- const float projection_angular_tolerance = params.mProjectio
Engine/neo-world-physics.adb:184:36    - Unknown word (tolerance)       -- float projection_angular_tolerance = params.mProjectionAngularTo
Engine/neo-world-physics.adb:184:56    - Unknown word (Projection)      -- tolerance = params.mProjectionAngularTolerance * DEGTORAD
Engine/neo-world-physics.adb:184:66    - Unknown word (Angular)         -- = params.mProjectionAngularTolerance * DEGTORAD
Engine/neo-world-physics.adb:184:73    - Unknown word (Tolerance)       -- params.mProjectionAngularTolerance * DEGTORAD;
Engine/neo-world-physics.adb:184:85    - Unknown word (DEGTORAD)        -- mProjectionAngularTolerance * DEGTORAD;
Engine/neo-world-physics.adb:185:12    - Unknown word (Actor)           -- PxRigidActor* actor0 = (PxRigidActor
Engine/neo-world-physics.adb:185:19    - Unknown word (actor)           -- PxRigidActor* actor0 = (PxRigidActor*)desc
Engine/neo-world-physics.adb:185:31    - Unknown word (Rigid)           -- PxRigidActor* actor0 = (PxRigidActor*)desc.mObject0
Engine/neo-world-physics.adb:185:36    - Unknown word (Actor)           -- xRigidActor* actor0 = (PxRigidActor*)desc.mObject0;
Engine/neo-world-physics.adb:185:7     - Unknown word (Rigid)           -- PxRigidActor* actor0 = (PxRigidActor
Engine/neo-world-physics.adb:186:12    - Unknown word (Actor)           -- PxRigidActor* actor1 = (PxRigidActor
Engine/neo-world-physics.adb:186:19    - Unknown word (actor)           -- PxRigidActor* actor1 = (PxRigidActor*)desc
Engine/neo-world-physics.adb:186:31    - Unknown word (Rigid)           -- PxRigidActor* actor1 = (PxRigidActor*)desc.mObject1
Engine/neo-world-physics.adb:186:36    - Unknown word (Actor)           -- xRigidActor* actor1 = (PxRigidActor*)desc.mObject1;
Engine/neo-world-physics.adb:186:7     - Unknown word (Rigid)           -- PxRigidActor* actor1 = (PxRigidActor
Engine/neo-world-physics.adb:187:7     - Unknown word (Joint)           -- PxJoint* CreatedJoint = null
Engine/neo-world-physics.adb:189:18    - Unknown word (Kind)            -- case Joint.Kind is
Engine/neo-world-physics.adb:191:14    - Unknown word (Spherical)       -- when Spherical_Joint =>
Engine/neo-world-physics.adb:192:17    - Unknown word (PINT)            -- const PINT_SPHERICAL_JOINT_CREATE
Engine/neo-world-physics.adb:192:22    - Unknown word (SPHERICAL)       -- const PINT_SPHERICAL_JOINT_CREATE& jc = static
Engine/neo-world-physics.adb:192:32    - Unknown word (JOINT)           -- const PINT_SPHERICAL_JOINT_CREATE& jc = static
Engine/neo-world-physics.adb:192:58    - Unknown word (cast)            -- CREATE& jc = static_cast<const PINT_SPHERICAL
Engine/neo-world-physics.adb:192:69    - Unknown word (PINT)            -- = static_cast<const PINT_SPHERICAL_JOINT_CREATE
Engine/neo-world-physics.adb:192:74    - Unknown word (SPHERICAL)       -- static_cast<const PINT_SPHERICAL_JOINT_CREATE&>(desc
Engine/neo-world-physics.adb:192:84    - Unknown word (JOINT)           -- const PINT_SPHERICAL_JOINT_CREATE&>(desc);
Engine/neo-world-physics.adb:193:21    - Unknown word (joint)           -- if(use_d6_joint)
Engine/neo-world-physics.adb:194:101   - Unknown word (actor)           -- (jc.mLocalPivot0)), actor1, PxTransform(ToPxVec
Engine/neo-world-physics.adb:194:139   - Unknown word (Pivot)           -- PxTransform(ToPxVec3(jc.mLocalPivot1)));
Engine/neo-world-physics.adb:194:53    - Unknown word (actor)           -- JointCreate(physics, actor0, PxTransform(ToPxVec
Engine/neo-world-physics.adb:194:91    - Unknown word (Pivot)           -- PxTransform(ToPxVec3(jc.mLocalPivot0)), actor1, PxTransform
Engine/neo-world-physics.adb:197:18    - Unknown word (Motion)          -- j.setMotion(PxD6Axis::eTWIST, PxD
Engine/neo-world-physics.adb:197:29    - Unknown word (Axis)            -- j.setMotion(PxD6Axis::eTWIST, PxD6Motion
Engine/neo-world-physics.adb:197:36    - Unknown word (TWIST)           -- setMotion(PxD6Axis::eTWIST, PxD6Motion::eFREE)
Engine/neo-world-physics.adb:197:47    - Unknown word (Motion)          -- PxD6Axis::eTWIST, PxD6Motion::eFREE);
Engine/neo-world-physics.adb:198:18    - Unknown word (Motion)          -- j.setMotion(PxD6Axis::eSWING1, PxD
Engine/neo-world-physics.adb:198:29    - Unknown word (Axis)            -- j.setMotion(PxD6Axis::eSWING1, PxD6Motion
Engine/neo-world-physics.adb:198:36    - Unknown word (SWING)           -- setMotion(PxD6Axis::eSWING1, PxD6Motion::eFREE
Engine/neo-world-physics.adb:198:48    - Unknown word (Motion)          -- PxD6Axis::eSWING1, PxD6Motion::eFREE);
Engine/neo-world-physics.adb:199:18    - Unknown word (Motion)          -- j.setMotion(PxD6Axis::eSWING2, PxD
Engine/neo-world-physics.adb:199:29    - Unknown word (Axis)            -- j.setMotion(PxD6Axis::eSWING2, PxD6Motion
Engine/neo-world-physics.adb:199:36    - Unknown word (SWING)           -- setMotion(PxD6Axis::eSWING2, PxD6Motion::eFREE
Engine/neo-world-physics.adb:200:101   - Unknown word (tolerance)       -- projection_angular_tolerance);
Engine/neo-world-physics.adb:200:13    - Unknown word (Setup)           -- SetupD6Projection(j, enable
Engine/neo-world-physics.adb:200:20    - Unknown word (Projection)      -- SetupD6Projection(j, enable_projection
Engine/neo-world-physics.adb:200:41    - Unknown word (projection)      -- Projection(j, enable_projection, projection_linear_tolerance
Engine/neo-world-physics.adb:200:53    - Unknown word (projection)      -- enable_projection, projection_linear_tolerance, projection
Engine/neo-world-physics.adb:200:64    - Unknown word (linear)          -- projection, projection_linear_tolerance, projection
Engine/neo-world-physics.adb:200:71    - Unknown word (tolerance)       -- projection, projection_linear_tolerance, projection_angular
Engine/neo-world-physics.adb:200:93    - Unknown word (angular)         -- tolerance, projection_angular_tolerance);
Engine/neo-world-physics.adb:202:105   - Unknown word (Pivot)           -- PxTransform(ToPxVec3(jc.mLocalPivot0)), actor1, PxTransform
Engine/neo-world-physics.adb:202:15    - Unknown word (Spherical)       -- PxSphericalJoint* j = PxSphericalJointCre
Engine/neo-world-physics.adb:202:153   - Unknown word (Pivot)           -- PxTransform(ToPxVec3(jc.mLocalPivot1)));
Engine/neo-world-physics.adb:202:37    - Unknown word (Spherical)       -- PxSphericalJoint* j = PxSphericalJointCreate(physics,
Engine/neo-world-physics.adb:202:67    - Unknown word (actor)           -- SphericalJointCreate(physics, actor0, PxTransform(ToPxVec
Engine/neo-world-physics.adb:206:18    - Unknown word (Angular)         -- -- Angular tolerance not used for
Engine/neo-world-physics.adb:206:26    - Unknown word (tolerance)       -- -- Angular tolerance not used for spherical
Engine/neo-world-physics.adb:206:49    - Unknown word (spherical)       -- tolerance not used for spherical joints
Engine/neo-world-physics.adb:206:59    - Unknown word (joints)          -- not used for spherical joints
Engine/neo-world-physics.adb:207:20    - Unknown word (Projection)      -- j.setProjectionLinearTolerance(projection
Engine/neo-world-physics.adb:207:30    - Unknown word (Linear)          -- j.setProjectionLinearTolerance(projection
Engine/neo-world-physics.adb:207:36    - Unknown word (Tolerance)       -- j.setProjectionLinearTolerance(projection_linear_tolerance
Engine/neo-world-physics.adb:207:57    - Unknown word (linear)          -- ionLinearTolerance(projection_linear_tolerance);
Engine/neo-world-physics.adb:211:14    - Unknown word (Hinge)           -- when Hinge_Joint =>
Engine/neo-world-physics.adb:212:17    - Unknown word (PINT)           -- const PINT_HINGE_JOINT_CREATE&
Engine/neo-world-physics.adb:212:22    - Unknown word (HINGE)          -- const PINT_HINGE_JOINT_CREATE& jc = static
Engine/neo-world-physics.adb:212:28    - Unknown word (JOINT)          -- const PINT_HINGE_JOINT_CREATE& jc = static
Engine/neo-world-physics.adb:212:54    - Unknown word (cast)           -- CREATE& jc = static_cast<const PINT_HINGE_JOINT
Engine/neo-world-physics.adb:212:70    - Unknown word (HINGE)          -- static_cast<const PINT_HINGE_JOINT_CREATE&>(desc
Engine/neo-world-physics.adb:212:76    - Unknown word (JOINT)          -- cast<const PINT_HINGE_JOINT_CREATE&>(desc);
Engine/neo-world-physics.adb:213:19    - Unknown word (Quat)           -- const PxQuat q0 = ComputeJointQuat
Engine/neo-world-physics.adb:213:41    - Unknown word (Quat)           -- PxQuat q0 = ComputeJointQuat(actor0, ToPxVec3(jc
Engine/neo-world-physics.adb:213:72    - Unknown word (Axis)           -- , ToPxVec3(jc.mLocalAxis0));
Engine/neo-world-physics.adb:214:19    - Unknown word (Quat)           -- const PxQuat q1 = ComputeJointQuat
Engine/neo-world-physics.adb:214:41    - Unknown word (Quat)           -- PxQuat q1 = ComputeJointQuat(actor1, ToPxVec3(jc
Engine/neo-world-physics.adb:214:72    - Unknown word (Axis)           -- , ToPxVec3(jc.mLocalAxis1));
Engine/neo-world-physics.adb:215:21    - Unknown word (joint)          -- if(use_d6_joint)
Engine/neo-world-physics.adb:216:91    - Unknown word (Pivot)          -- PxTransform(ToPxVec3(jc.mLocalPivot0), q0), actor1, PxTransform
Engine/neo-world-physics.adb:219:36    - Unknown word (TWIST)          -- setMotion(PxD6Axis::eTWIST, PxD6Motion::eFREE)
Engine/neo-world-physics.adb:220:28    - Unknown word (Angle)          -- if(jc.mMinLimitAngle!=MIN_FLOAT || jc.mMaxLimitAng
Engine/neo-world-physics.adb:220:60    - Unknown word (Angle)          -- FLOAT || jc.mMaxLimitAngle!=MAX_FLOAT) then
Engine/neo-world-physics.adb:221:39    - Unknown word (Distance)       -- const float limitContactDistance = 0.05f;
Engine/neo-world-physics.adb:222:22    - Unknown word (Angular)        -- PxJointAngularLimitPair limit(0.0f
Engine/neo-world-physics.adb:222:69    - Unknown word (Distance)       -- f, 0.0f, limitContactDistance);
Engine/neo-world-physics.adb:223:21    - Unknown word (lower)          -- limit.lower = -jc.mMaxLimitAngle
Engine/neo-world-physics.adb:223:47    - Unknown word (Angle)          -- = -jc.mMaxLimitAngle;
Engine/neo-world-physics.adb:224:21    - Unknown word (upper)          -- limit.upper = -jc.mMinLimitAngle
Engine/neo-world-physics.adb:224:47    - Unknown word (Angle)          -- = -jc.mMinLimitAngle;
Engine/neo-world-physics.adb:225:21    - Unknown word (lower)          -- limit.lower = jc.mMinLimitAngle
Engine/neo-world-physics.adb:225:46    - Unknown word (Angle)          -- lower = jc.mMinLimitAngle;
Engine/neo-world-physics.adb:226:21    - Unknown word (upper)          -- limit.upper = jc.mMaxLimitAngle
Engine/neo-world-physics.adb:227:20    - Unknown word (Twist)          -- j.setTwistLimit(limit);
Engine/neo-world-physics.adb:228:38    - Unknown word (TWIST)          -- setMotion(PxD6Axis::eTWIST, PxD6Motion::eLIMITED
Engine/neo-world-physics.adb:22:66     - Unknown word (Edges)        -- mPCM, mPrecomputeActiveEdges,
Engine/neo-world-physics.adb:230:13    - Unknown word (Setup)          -- SetupD6Projection(j, enable
Engine/neo-world-physics.adb:230:64    - Unknown word (linear)         -- projection, projection_linear_tolerance, projection
Engine/neo-world-physics.adb:230:93    - Unknown word (angular)        -- tolerance, projection_angular_tolerance);
Engine/neo-world-physics.adb:232:15    - Unknown word (Revolute)       -- PxRevoluteJoint* j = PxRevoluteJointCrea
Engine/neo-world-physics.adb:232:36    - Unknown word (Revolute)       -- PxRevoluteJoint* j = PxRevoluteJointCreate(physics,
Engine/neo-world-physics.adb:236:39    - Unknown word (Distance)       -- const float limitContactDistance = 0.05f;
Engine/neo-world-physics.adb:237:22    - Unknown word (Angular)        -- PxJointAngularLimitPair limit(0.0f
Engine/neo-world-physics.adb:237:69    - Unknown word (Distance)       -- f, 0.0f, limitContactDistance);
Engine/neo-world-physics.adb:238:21    - Unknown word (lower)          -- limit.lower = -jc.mMaxLimitAngle
Engine/neo-world-physics.adb:239:21    - Unknown word (upper)          -- limit.upper = -jc.mMinLimitAngle
Engine/neo-world-physics.adb:23:26     - Unknown word (Gauss)        -- mGaussMapLimit, mMeshCookingHint
Engine/neo-world-physics.adb:23:46     - Unknown word (Cooking)      -- mGaussMapLimit, mMeshCookingHint, mMidPhaseType,
Engine/neo-world-physics.adb:23:53     - Unknown word (Hint)         -- mGaussMapLimit, mMeshCookingHint, mMidPhaseType,
Engine/neo-world-physics.adb:23:63     - Unknown word (Phase)        -- mMeshCookingHint, mMidPhaseType,
Engine/neo-world-physics.adb:240:21    - Unknown word (lower)          -- limit.lower = jc.mMinLimitAngle
Engine/neo-world-physics.adb:241:21    - Unknown word (upper)          -- limit.upper = jc.mMaxLimitAngle
Engine/neo-world-physics.adb:243:20    - Unknown word (Revolute)       -- j.setRevoluteJointFlag(PxRevoluteJointFlag
Engine/neo-world-physics.adb:243:40    - Unknown word (Revolute)       -- setRevoluteJointFlag(PxRevoluteJointFlag::eLIMIT_ENABLED
Engine/neo-world-physics.adb:243:75    - Unknown word (true)           -- uteJointFlag::eLIMIT_ENABLED, true);
Engine/neo-world-physics.adb:246:30    - Unknown word (Linear)         -- j.setProjectionLinearTolerance(projection
Engine/neo-world-physics.adb:246:36    - Unknown word (Tolerance)      -- j.setProjectionLinearTolerance(projection_linear_tolerance
Engine/neo-world-physics.adb:246:57    - Unknown word (linear)         -- ionLinearTolerance(projection_linear_tolerance);
Engine/neo-world-physics.adb:247:30    - Unknown word (Angular)        -- j.setProjectionAngularTolerance(projection
Engine/neo-world-physics.adb:247:58    - Unknown word (angular)        -- onAngularTolerance(projection_angular_tolerance);
Engine/neo-world-physics.adb:24:44     - Unknown word (Pruner)       -- mNbThreads, mStaticPruner, mDynamicPruner, mSQDynamicRe
Engine/neo-world-physics.adb:24:60     - Unknown word (Pruner)       -- mStaticPruner, mDynamicPruner, mSQDynamicRebuildRateHint
Engine/neo-world-physics.adb:24:89     - Unknown word (Hint)         -- mSQDynamicRebuildRateHint,
Engine/neo-world-physics.adb:252:14    - Unknown word (Prismatic)      -- when Prismatic_Joint =>
Engine/neo-world-physics.adb:253:14    - Unknown word (Distance)       -- when Distance_Joint =>
Engine/neo-world-physics.adb:258:16    - Unknown word (angular)        -- // projection_angular_tolerance *= DEGTORAD
Engine/neo-world-physics.adb:258:37    - Unknown word (DEGTORAD)       -- angular_tolerance *= DEGTORAD;
Engine/neo-world-physics.adb:25:38     - Unknown word (Friction)     -- mEnableOneDirFriction, mEnableTwoDirFriction
Engine/neo-world-physics.adb:25:61     - Unknown word (Friction)     -- eOneDirFriction, mEnableTwoDirFriction, mBroadPhaseType, mMaxNbCCDPa
Engine/neo-world-physics.adb:25:72     - Unknown word (Broad)        -- mEnableTwoDirFriction, mBroadPhaseType, mMaxNbCCDPasses
Engine/neo-world-physics.adb:25:77     - Unknown word (Phase)        -- mEnableTwoDirFriction, mBroadPhaseType, mMaxNbCCDPasses
Engine/neo-world-physics.adb:25:97     - Unknown word (Passes)       -- mBroadPhaseType, mMaxNbCCDPasses)
Engine/neo-world-physics.adb:263:21    - Unknown word (SPHERICAL)      -- case PINT_JOINT_SPHERICAL:
Engine/neo-world-physics.adb:266:5     - Unknown word (break)          -- break;
Engine/neo-world-physics.adb:268:21    - Unknown word (HINGE)          -- case PINT_JOINT_HINGE:
Engine/neo-world-physics.adb:272:5     - Unknown word (break)          -- break;
Engine/neo-world-physics.adb:276:50    - Unknown word (cast)           -- CREATE& jc = static_cast<const PINT_FIXED_JOINT
Engine/neo-world-physics.adb:278:17    - Unknown word (joint)          -- if(use_d6_joint)
Engine/neo-world-physics.adb:27:7      - Unknown word (Tolerances)   -- PxTolerancesScale scale;
Engine/neo-world-physics.adb:284:9     - Unknown word (Setup)          -- SetupD6Projection(j, enable
Engine/neo-world-physics.adb:294:26    - Unknown word (Linear)         -- j.setProjectionLinearTolerance(projection
Engine/neo-world-physics.adb:299:5     - Unknown word (break)          -- break;
Engine/neo-world-physics.adb:29:15     - Unknown word (Allocator)    -- gDefaultAllocator = new PEEL_PhysX3_AllocatorCa
Engine/neo-world-physics.adb:29:31     - Unknown word (PEEL)         -- gDefaultAllocator = new PEEL_PhysX3_AllocatorCallback
Engine/neo-world-physics.adb:29:36     - Unknown word (Phys)         -- gDefaultAllocator = new PEEL_PhysX3_AllocatorCallback
Engine/neo-world-physics.adb:29:43     - Unknown word (Allocator)    -- ltAllocator = new PEEL_PhysX3_AllocatorCallback;
Engine/neo-world-physics.adb:29:52     - Unknown word (Callback)     -- PEEL_PhysX3_AllocatorCallback;
Engine/neo-world-physics.adb:301:21    - Unknown word (PRISMATIC)      -- case PINT_JOINT_PRISMATIC:
Engine/neo-world-physics.adb:303:18    - Unknown word (PRISMATIC)      -- const PINT_PRISMATIC_JOINT_CREATE& jc = static
Engine/neo-world-physics.adb:303:54    - Unknown word (cast)           -- CREATE& jc = static_cast<const PINT_PRISMATIC
Engine/neo-world-physics.adb:303:70    - Unknown word (PRISMATIC)      -- static_cast<const PINT_PRISMATIC_JOINT_CREATE&>(desc
Engine/neo-world-physics.adb:305:15    - Unknown word (Quat)           -- const PxQuat q0 = ComputeJointQuat
Engine/neo-world-physics.adb:308:22    - Unknown word (joint)          -- if(0 && use_d6_joint)
Engine/neo-world-physics.adb:30:20     - Unknown word (Callback)     -- gDefaultErrorCallback = new PEEL_PhysX3_ErrorCallba
Engine/neo-world-physics.adb:30:35     - Unknown word (PEEL)         -- gDefaultErrorCallback = new PEEL_PhysX3_ErrorCallback
Engine/neo-world-physics.adb:30:40     - Unknown word (Phys)         -- faultErrorCallback = new PEEL_PhysX3_ErrorCallback;
Engine/neo-world-physics.adb:30:52     - Unknown word (Callback)     -- new PEEL_PhysX3_ErrorCallback;
Engine/neo-world-physics.adb:317:9     - Unknown word (Setup)          -- SetupD6Projection(j, enable
Engine/neo-world-physics.adb:31:72     - Unknown word (Allocator)    -- FOUNDATION_VERSION, *gDefaultAllocator, *gDefaultErrorCallback
Engine/neo-world-physics.adb:31:97     - Unknown word (Callback)     -- faultAllocator, *gDefaultErrorCallback);
Engine/neo-world-physics.adb:321:11    - Unknown word (Prismatic)      -- PxPrismaticJoint* j = PxPrismaticJointCre
Engine/neo-world-physics.adb:321:33    - Unknown word (Prismatic)      -- PxPrismaticJoint* j = PxPrismaticJointCreate(physics,
Engine/neo-world-physics.adb:329:109   - Unknown word (Spring)        -- mSpringStiffness, jc.mSpringDamping));
Engine/neo-world-physics.adb:329:115   - Unknown word (Damping)       -- mSpringStiffness, jc.mSpringDamping));
Engine/neo-world-physics.adb:329:24    - Unknown word (Linear)         -- const PxJointLinearLimitPair Limits(jc.mMinLimit
Engine/neo-world-physics.adb:329:77    - Unknown word (Spring)         -- mMinLimit, jc.mMaxLimit, PxSpring(jc.mSpringStiffness
Engine/neo-world-physics.adb:329:88    - Unknown word (Spring)         -- mMaxLimit, PxSpring(jc.mSpringStiffness, jc.mSpringDamping
Engine/neo-world-physics.adb:329:94    - Unknown word (Stiffness)     -- PxSpring(jc.mSpringStiffness, jc.mSpringDamping)
Engine/neo-world-physics.adb:32:7      - Unknown word (Assert)       -- Assert (mFoundation);
Engine/neo-world-physics.adb:331:16    - Unknown word (Prismatic)     -- j.setPrismaticJointFlag(PxPrismaticJointFlag
Engine/neo-world-physics.adb:331:37    - Unknown word (Prismatic)     -- setPrismaticJointFlag(PxPrismaticJointFlag::eLIMIT_ENABLED
Engine/neo-world-physics.adb:331:73    - Unknown word (true)          -- ticJointFlag::eLIMIT_ENABLED, true);
Engine/neo-world-physics.adb:334:73    - Unknown word (false)         -- ticJointFlag::eLIMIT_ENABLED, false);
Engine/neo-world-physics.adb:343:5     - Unknown word (break)         -- break;
Engine/neo-world-physics.adb:345:21    - Unknown word (DISTANCE)      -- case PINT_JOINT_DISTANCE:
Engine/neo-world-physics.adb:347:18    - Unknown word (DISTANCE)      -- const PINT_DISTANCE_JOINT_CREATE& jc = static
Engine/neo-world-physics.adb:347:53    - Unknown word (cast)          -- CREATE& jc = static_cast<const PINT_DISTANCE
Engine/neo-world-physics.adb:347:69    - Unknown word (DISTANCE)      -- static_cast<const PINT_DISTANCE_JOINT_CREATE&>(desc
Engine/neo-world-physics.adb:355:58    - Unknown word (DISTANCE)      -- PxDistanceJointFlag::eMAX_DISTANCE_ENABLED, true);
Engine/neo-world-physics.adb:355:76    - Unknown word (true)          -- eMAX_DISTANCE_ENABLED, true);
Engine/neo-world-physics.adb:357:61    - Unknown word (DISTANCE)      -- PxDistanceJointFlag::eMAX_DISTANCE_ENABLED, false);
Engine/neo-world-physics.adb:357:79    - Unknown word (false)         -- eMAX_DISTANCE_ENABLED, false);
Engine/neo-world-physics.adb:362:76    - Unknown word (true)          -- eMIN_DISTANCE_ENABLED, true);
Engine/neo-world-physics.adb:364:79    - Unknown word (false)         -- eMIN_DISTANCE_ENABLED, false);
Engine/neo-world-physics.adb:36:9      - Unknown word (ASSERT)       -- ASSERT(mProfileZoneManager
Engine/neo-world-physics.adb:373:5     - Unknown word (break)         -- break;
Engine/neo-world-physics.adb:378:15    - Unknown word (collision)     -- if(enable_collision_between_jointed)
Engine/neo-world-physics.adb:378:25    - Unknown word (between)       -- if(enable_collision_between_jointed)
Engine/neo-world-physics.adb:378:33    - Unknown word (jointed)       -- enable_collision_between_jointed)
Engine/neo-world-physics.adb:379:33    - Unknown word (Flags)         -- CreatedJoint.setConstraintFlags(PxConstraintFlag::eCOLLISION
Engine/neo-world-physics.adb:379:58    - Unknown word (COLLISION)     -- raintFlags(PxConstraintFlag::eCOLLISION_ENABLED);
Engine/neo-world-physics.adb:381:55    - Unknown word (VISUALIZATION) -- traintFlag(PxConstraintFlag::eVISUALIZATION, true);
Engine/neo-world-physics.adb:382:55    - Unknown word (PROJECTION)    -- traintFlag(PxConstraintFlag::ePROJECTION, enable_projection)
Engine/neo-world-physics.adb:383:8     - Unknown word (PHYSX)         -- #ifdef PHYSX_SUPPORT_DISABLE_PREPROCESSING
Engine/neo-world-physics.adb:387:12    - Unknown word (PHYSX)         -- #ifndef IS_PHYSX_3_2
Engine/neo-world-physics.adb:388:17    - Unknown word (inverse)       -- const float inverse_inertia_scale = params
Engine/neo-world-physics.adb:388:25    - Unknown word (inertia)       -- const float inverse_inertia_scale = params.mInverseInerti
Engine/neo-world-physics.adb:388:49    - Unknown word (Inverse)       -- inertia_scale = params.mInverseInertiaScale;
Engine/neo-world-physics.adb:388:56    - Unknown word (Inertia)       -- scale = params.mInverseInertiaScale;
Engine/neo-world-physics.adb:389:17    - Unknown word (inverse)       -- const float inverse_mass_scale = params
Engine/neo-world-physics.adb:389:25    - Unknown word (mass)          -- const float inverse_mass_scale = params.mInverseMassSc
Engine/neo-world-physics.adb:389:46    - Unknown word (Inverse)       -- mass_scale = params.mInverseMassScale;
Engine/neo-world-physics.adb:389:53    - Unknown word (Mass)          -- scale = params.mInverseMassScale;
Engine/neo-world-physics.adb:391:11    - Unknown word (PHYSX)         -- #ifndef PHYSX_REMOVE_JOINT_32_COMPATIBILITY
Engine/neo-world-physics.adb:393:55    - Unknown word (DEPRECATED)    -- traintFlag(PxConstraintFlag::eDEPRECATED_32_COMPATIBILITY, enable
Engine/neo-world-physics.adb:395:16    - Unknown word (inertia)       -- if(inverse_inertia_scale>=0.0f)
Engine/neo-world-physics.adb:395:8     - Unknown word (inverse)       -- if(inverse_inertia_scale>=0.0f
Engine/neo-world-physics.adb:397:26    - Unknown word (Inertia)       -- CreatedJoint.setInvInertiaScale0(inverse_inertia
Engine/neo-world-physics.adb:397:40    - Unknown word (inverse)       -- setInvInertiaScale0(inverse_inertia_scale);
Engine/neo-world-physics.adb:397:48    - Unknown word (inertia)       -- setInvInertiaScale0(inverse_inertia_scale);
Engine/neo-world-physics.adb:398:26    - Unknown word (Inertia)       -- CreatedJoint.setInvInertiaScale1(inverse_inertia
Engine/neo-world-physics.adb:398:40    - Unknown word (inverse)       -- setInvInertiaScale1(inverse_inertia_scale);
Engine/neo-world-physics.adb:398:48    - Unknown word (inertia)       -- setInvInertiaScale1(inverse_inertia_scale);
Engine/neo-world-physics.adb:39:75     - Unknown word (false)        -- mFoundation, scale, false, null);
Engine/neo-world-physics.adb:401:16    - Unknown word (mass)          -- if(inverse_mass_scale>=0.0f)
Engine/neo-world-physics.adb:403:26    - Unknown word (Mass)          -- CreatedJoint.setInvMassScale0(inverse_mass_scale
Engine/neo-world-physics.adb:403:45    - Unknown word (mass)          -- setInvMassScale0(inverse_mass_scale);
Engine/neo-world-physics.adb:404:26    - Unknown word (Mass)          -- CreatedJoint.setInvMassScale1(inverse_mass_scale
Engine/neo-world-physics.adb:404:45    - Unknown word (mass)          -- setInvMassScale1(inverse_mass_scale);
Engine/neo-world-physics.adb:407:10    - Unknown word (Stabilization) -- // - Stabilization can create artefacts
Engine/neo-world-physics.adb:407:35    - Unknown word (artefacts)     -- Stabilization can create artefacts on jointed objects so
Engine/neo-world-physics.adb:407:48    - Unknown word (jointed)       -- create artefacts on jointed objects so we just disable
Engine/neo-world-physics.adb:407:70    - Unknown word (just)          -- jointed objects so we just disable it
Engine/neo-world-physics.adb:408:10    - Unknown word (Ropes)         -- // - Ropes and thin cables can
Engine/neo-world-physics.adb:408:113   - Unknown word (just)          -- depenetration velocity. So we just disable
Engine/neo-world-physics.adb:408:20    - Unknown word (thin)          -- // - Ropes and thin cables can go through
Engine/neo-world-physics.adb:408:25    - Unknown word (cables)        -- // - Ropes and thin cables can go through each
Engine/neo-world-physics.adb:408:39    - Unknown word (through)       -- and thin cables can go through each other easily if
Engine/neo-world-physics.adb:408:47    - Unknown word (each)          -- cables can go through each other easily if we limit
Engine/neo-world-physics.adb:408:52    - Unknown word (other)         -- can go through each other easily if we limit their
Engine/neo-world-physics.adb:408:58    - Unknown word (easily)        -- go through each other easily if we limit their depenetrati
Engine/neo-world-physics.adb:408:77    - Unknown word (their)         -- other easily if we limit their depenetration velocity
Engine/neo-world-physics.adb:408:83    - Unknown word (depenetration) -- easily if we limit their depenetration velocity. So we just
Engine/neo-world-physics.adb:408:97    - Unknown word (velocity)      -- their depenetration velocity. So we just disable
Engine/neo-world-physics.adb:409:25    - Unknown word (jointed)       -- // this feature for jointed & articulated objects
Engine/neo-world-physics.adb:409:35    - Unknown word (articulated)   -- feature for jointed & articulated objects.
Engine/neo-world-physics.adb:409:8     - Unknown word (this)          -- // this feature for jointed
Engine/neo-world-physics.adb:40:7      - Unknown word (ASSERT)       -- ASSERT(mPhysics);
Engine/neo-world-physics.adb:410:28    - Unknown word (Concrete)      -- actor0 && actor0.getConcreteType()==PxConcreteType
Engine/neo-world-physics.adb:410:46    - Unknown word (Concrete)      -- getConcreteType()==PxConcreteType::eRIGID_DYNAMIC
Engine/neo-world-physics.adb:410:61    - Unknown word (RIGID)         -- )==PxConcreteType::eRIGID_DYNAMIC)
Engine/neo-world-physics.adb:412:9     - Unknown word (Rigid)         -- PxRigidDynamic* RD = static
Engine/neo-world-physics.adb:413:22    - Unknown word (STABILIZATION) -- ifdef PHYSX_SUPPORT_STABILIZATION_FLAG
Engine/neo-world-physics.adb:413:36    - Unknown word (FLAG)          -- SUPPORT_STABILIZATION_FLAG
Engine/neo-world-physics.adb:413:8     - Unknown word (PHYSX)         -- #ifdef PHYSX_SUPPORT_STABILIZATION
Engine/neo-world-physics.adb:414:13    - Unknown word (Stabilization) -- RD.setStabilizationThreshold(0.0f);
Engine/neo-world-physics.adb:414:26    - Unknown word (Threshold)     -- RD.setStabilizationThreshold(0.0f);
Engine/neo-world-physics.adb:415:16    - Unknown word (Depenetration) -- RD.setMaxDepenetrationVelocity(MAX_FLOAT);
Engine/neo-world-physics.adb:415:29    - Unknown word (Velocity)      -- RD.setMaxDepenetrationVelocity(MAX_FLOAT);
Engine/neo-world-physics.adb:418:28    - Unknown word (Concrete)      -- actor1 && actor1.getConcreteType()==PxConcreteType
Engine/neo-world-physics.adb:418:46    - Unknown word (Concrete)      -- getConcreteType()==PxConcreteType::eRIGID_DYNAMIC
Engine/neo-world-physics.adb:418:61    - Unknown word (RIGID)         -- )==PxConcreteType::eRIGID_DYNAMIC)
Engine/neo-world-physics.adb:421:22    - Unknown word (STABILIZATION) -- ifdef PHYSX_SUPPORT_STABILIZATION_FLAG
Engine/neo-world-physics.adb:421:36    - Unknown word (FLAG)          -- SUPPORT_STABILIZATION_FLAG
Engine/neo-world-physics.adb:421:8     - Unknown word (PHYSX)         -- #ifdef PHYSX_SUPPORT_STABILIZATION
Engine/neo-world-physics.adb:422:13    - Unknown word (Stabilization) -- RD.setStabilizationThreshold(0.0f);
Engine/neo-world-physics.adb:422:26    - Unknown word (Threshold)     -- RD.setStabilizationThreshold(0.0f);
Engine/neo-world-physics.adb:423:16    - Unknown word (Depenetration) -- RD.setMaxDepenetrationVelocity(MAX_FLOAT);
Engine/neo-world-physics.adb:423:29    - Unknown word (Velocity)      -- RD.setMaxDepenetrationVelocity(MAX_FLOAT);
Engine/neo-world-physics.adb:435:19    - Unknown word (Phys)          -- for I in 1..PhysX_Steps.Get loop
Engine/neo-world-physics.adb:436:13    - Unknown word (Torque)        -- for Torque of Torques loop
Engine/neo-world-physics.adb:436:23    - Unknown word (Torques)       -- for Torque of Torques loop
Engine/neo-world-physics.adb:437:58    - Unknown word (Handle)        -- GetRigidBody(Current.mHandle);
Engine/neo-world-physics.adb:438:30    - Unknown word (Torque)        -- const PxVec3 GlobalTorque = RigidBody.getGlobalPose
Engine/neo-world-physics.adb:438:58    - Unknown word (Pose)          -- RigidBody.getGlobalPose().rotate(ToPxVec3(Current
Engine/neo-world-physics.adb:438:95    - Unknown word (Torque)        -- ToPxVec3(Current.mLocalTorque));
Engine/neo-world-physics.adb:439:24    - Unknown word (Torque)        -- RigidBody.addTorque(GlobalTorque, PxForceMode
Engine/neo-world-physics.adb:439:37    - Unknown word (Torque)        -- RigidBody.addTorque(GlobalTorque, PxForceMode::eACCELERATION
Engine/neo-world-physics.adb:439:52    - Unknown word (Mode)          -- GlobalTorque, PxForceMode::eACCELERATION, true
Engine/neo-world-physics.adb:439:59    - Unknown word (ACCELERATION)  -- GlobalTorque, PxForceMode::eACCELERATION, true);
Engine/neo-world-physics.adb:43:7      - Unknown word (ASSERT)       -- ASSERT(status);
Engine/neo-world-physics.adb:441:39    - Unknown word (Scratch)       -- simulate(sdt, null, GetScratchPad(), GetScratchPadSize
Engine/neo-world-physics.adb:441:56    - Unknown word (Scratch)       -- GetScratchPad(), GetScratchPadSize());
Engine/neo-world-physics.adb:444:13    - Unknown word (Torques)       -- mLocalTorques.clear();
Engine/neo-world-physics.adb:446:64    - Unknown word (Dyna)          -- mParams.mUseRaycastCCD_DynaDyna);
Engine/neo-world-physics.adb:446:68    - Unknown word (Dyna)          -- mParams.mUseRaycastCCD_DynaDyna);
Engine/neo-world-physics.adb:45:18     - Unknown word (Dispatcher)   -- gDefaultCPUDispatcher = PxDefaultCpuDispatcherCreat
Engine/neo-world-physics.adb:45:43     - Unknown word (Dispatcher)   -- ltCPUDispatcher = PxDefaultCpuDispatcherCreate(mParams.mNbThreads
Engine/neo-world-physics.adb:47:37     - Unknown word (Flags)        -- PxMeshPreprocessingFlags(PxMeshPreprocessingFlag
Engine/neo-world-physics.adb:47:62     - Unknown word (Flag)         -- ssingFlags(PxMeshPreprocessingFlag::eWELD_VERTICES));
Engine/neo-world-physics.adb:47:69     - Unknown word (WELD)         -- PxMeshPreprocessingFlag::eWELD_VERTICES));
Engine/neo-world-physics.adb:47:74     - Unknown word (VERTICES)     -- xMeshPreprocessingFlag::eWELD_VERTICES));
Engine/neo-world-physics.adb:48:9      - Unknown word (Cooking)      -- PxCookingParams Params(scale)
Engine/neo-world-physics.adb:49:14     - Unknown word (midphase)     -- Params.midphaseDesc.setToDefault(mParams
Engine/neo-world-physics.adb:49:52     - Unknown word (Phase)        -- setToDefault(mParams.mMidPhaseType);
Engine/neo-world-physics.adb:50:18     - Unknown word (Cooking)      -- Params.meshCookingHint = mParams.mMeshCookingHin
Engine/neo-world-physics.adb:50:25     - Unknown word (Hint)         -- Params.meshCookingHint = mParams.mMeshCookingHint
Engine/neo-world-physics.adb:50:45     - Unknown word (Cooking)      -- eshCookingHint = mParams.mMeshCookingHint;
Engine/neo-world-physics.adb:50:52     - Unknown word (Hint)         -- mParams.mMeshCookingHint;
Engine/neo-world-physics.adb:51:119    - Unknown word (Flag)         -- PxMeshPreprocessingFlag::eDISABLE_ACTIVE_EDGES
Engine/neo-world-physics.adb:51:141    - Unknown word (EDGES)        -- ocessingFlag::eDISABLE_ACTIVE_EDGES_PRECOMPUTE;
Engine/neo-world-physics.adb:51:62     - Unknown word (Edges)        -- mParams.mPrecomputeActiveEdges ? PxMeshPreprocessingFlags
Engine/neo-world-physics.adb:51:89     - Unknown word (Flags)        -- PxMeshPreprocessingFlags(0) : PxMeshPreprocessingFlag
Engine/neo-world-physics.adb:53:20     - Unknown word (Weld)         -- Params.meshWeldTolerance = 0.001f;
Engine/neo-world-physics.adb:53:24     - Unknown word (Tolerance)    -- Params.meshWeldTolerance = 0.001f;
Engine/neo-world-physics.adb:56:14     - Unknown word (gauss)        -- Params.gaussMapLimit = mParams.mGaussMapLi
Engine/neo-world-physics.adb:56:39     - Unknown word (Gauss)        -- gaussMapLimit = mParams.mGaussMapLimit;
Engine/neo-world-physics.adb:58:34     - Unknown word (true)         -- Params.BUILD_GPU_DATA = true;
Engine/neo-world-physics.adb:5:52      - Unknown word (Copyright)  -- Copyright (C) 2016 Justin Squirek
Engine/neo-world-physics.adb:5:71      - Unknown word (Justin)     -- Copyright (C) 2016 Justin Squirek
Engine/neo-world-physics.adb:5:78      - Unknown word (Squirek)    -- Copyright (C) 2016 Justin Squirek
Engine/neo-world-physics.adb:60:8      - Unknown word (Cooking)      -- mCooking = PxCreateCooking(PX
Engine/neo-world-physics.adb:61:7      - Unknown word (ASSERT)       -- ASSERT(mCooking);
Engine/neo-world-physics.adb:63:13     - Unknown word (Helper)       -- gPVDHelper = new PVDHelper(mPhysics
Engine/neo-world-physics.adb:63:29     - Unknown word (Helper)       -- gPVDHelper = new PVDHelper(mPhysics);
Engine/neo-world-physics.adb:64:13     - Unknown word (Helper)       -- gPVDHelper.togglePvdConnection
Engine/neo-world-physics.adb:64:20     - Unknown word (toggle)       -- gPVDHelper.togglePvdConnection();
Engine/neo-world-physics.adb:66:12     - Unknown word (Phys)         -- mPhys>getPvdConnectionManager
Engine/neo-world-physics.adb:66:46     - Unknown word (Handler)      -- getPvdConnectionManager().addHandler(*gPVDHelper);
Engine/neo-world-physics.adb:66:59     - Unknown word (Helper)       -- tionManager().addHandler(*gPVDHelper);
Engine/neo-world-physics.adb:70:19     - Unknown word (scene)        -- PxSceneDesc sceneDesc(scale);
Engine/neo-world-physics.adb:70:9      - Unknown word (Scene)        -- PxSceneDesc sceneDesc(scale
Engine/neo-world-physics.adb:71:17     - Unknown word (gravity)      -- sceneDesc.gravity = ToPxVec3(desc.mGravity
Engine/neo-world-physics.adb:71:43     - Unknown word (Gravity)      -- gravity = ToPxVec3(desc.mGravity);
Engine/neo-world-physics.adb:71:7      - Unknown word (scene)        -- sceneDesc.gravity = ToPxVec
Engine/neo-world-physics.adb:74:15     - Unknown word (scene)       -- -- sceneDesc.contactModifyCallback
Engine/neo-world-physics.adb:74:38     - Unknown word (Callback)    -- sceneDesc.contactModifyCallback = &gContactModifyCallback
Engine/neo-world-physics.adb:75:15     - Unknown word (scene)       -- -- sceneDesc.filterShader
Engine/neo-world-physics.adb:75:31     - Unknown word (Shader)      -- sceneDesc.filterShader = ContactModifySimulat
Engine/neo-world-physics.adb:75:76     - Unknown word (Shader)      -- ContactModifySimulationFilterShader;
Engine/neo-world-physics.adb:77:118    - Unknown word (Shader)      -- PxDefaultSimulationFilterShader;
Engine/neo-world-physics.adb:77:15     - Unknown word (scene)       -- -- sceneDesc.filterShader
Engine/neo-world-physics.adb:77:31     - Unknown word (Shader)      -- sceneDesc.filterShader = mParams.mUseCCD
Engine/neo-world-physics.adb:77:84     - Unknown word (Shader)      -- CCDSimulationFilterShader : PxDefaultSimulationFilterSh
Engine/neo-world-physics.adb:78:20     - Unknown word (SETUP)       -- -- #ifdef SETUP_FILTERING
Engine/neo-world-physics.adb:78:26     - Unknown word (FILTERING)   -- -- #ifdef SETUP_FILTERING
Engine/neo-world-physics.adb:79:53     - Unknown word (Vehicle)     -- filterShader = SampleVehicleFilterShader;
Engine/neo-world-physics.adb:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-world-physics.adb:83:20     - Unknown word (Dispatcher)  -- sceneDesc.cpuDispatcher = gDefaultCPUDispatcher
Engine/neo-world-physics.adb:83:46     - Unknown word (Dispatcher)  -- cpuDispatcher = gDefaultCPUDispatcher;
Engine/neo-world-physics.adb:84:20     - Unknown word (Dispatcher)  -- sceneDesc.cpuDispatcher = gDefaultCPUDispatche
Engine/neo-world-physics.adb:85:23     - Unknown word (Structure)   -- sceneDesc.staticStructure = mParams.mStaticPruner
Engine/neo-world-physics.adb:85:55     - Unknown word (Pruner)      -- = mParams.mStaticPruner;
Engine/neo-world-physics.adb:86:24     - Unknown word (Structure)   -- sceneDesc.dynamicStructure = mParams.mDynamicPruner
Engine/neo-world-physics.adb:86:57     - Unknown word (Pruner)      -- = mParams.mDynamicPruner;
Engine/neo-world-physics.adb:87:39     - Unknown word (Hint)        -- dynamicTreeRebuildRateHint= mParams.mSQDynamicRebuildRat
Engine/neo-world-physics.adb:89:10     - Unknown word (Scene)       -- SetSceneFlag(sceneDesc, PxSceneFlag
Engine/neo-world-physics.adb:89:15     - Unknown word (Flag)        -- SetSceneFlag(sceneDesc, PxSceneFlag
Engine/neo-world-physics.adb:89:33     - Unknown word (Scene)       -- SetSceneFlag(sceneDesc, PxSceneFlag::eENABLE_PCM,
Engine/neo-world-physics.adb:89:38     - Unknown word (Flag)        -- etSceneFlag(sceneDesc, PxSceneFlag::eENABLE_PCM,
Engine/neo-world-physics.adb:8:30      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-world-physics.adb:8:70      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-world-physics.adb:8:87      - Unknown word (later)        -- at your option) any later version.
Engine/neo-world-physics.adb:90:10     - Unknown word (Scene)       -- SetSceneFlag(sceneDesc, PxSceneFlag
Engine/neo-world-physics.adb:90:15     - Unknown word (Flag)        -- SetSceneFlag(sceneDesc, PxSceneFlag
Engine/neo-world-physics.adb:90:33     - Unknown word (Scene)       -- SetSceneFlag(sceneDesc, PxSceneFlag::eADAPTIVE_FORCE
Engine/neo-world-physics.adb:90:45     - Unknown word (ADAPTIVE)    -- sceneDesc, PxSceneFlag::eADAPTIVE_FORCE, mParams
Engine/neo-world-physics.adb:90:75     - Unknown word (Adaptive)    -- FORCE, mParams.mAdaptiveForce);
Engine/neo-world-physics.adb:91:52     - Unknown word (STABILIZATION) -- PxSceneFlag::eENABLE_STABILIZATION, mParams.mStabilization
Engine/neo-world-physics.adb:91:79     - Unknown word (Stabilization) -- STABILIZATION, mParams.mStabilization);
Engine/neo-world-physics.adb:92:52     - Unknown word (ACTIVETRANSFORMS) -- PxSceneFlag::eENABLE_ACTIVETRANSFORMS, mParams.mEnableActiveTransf
Engine/neo-world-physics.adb:92:92     - Unknown word (Transforms)       -- mParams.mEnableActiveTransforms);
Engine/neo-world-physics.adb:96:31     - Unknown word (Friction)         -- mParams.mEnableOneDirFriction)
Engine/neo-world-physics.adb:97:19     - Unknown word (friction)         -- sceneDesc.frictionType = PxFrictionType
Engine/neo-world-physics.adb:97:36     - Unknown word (Friction)         -- sceneDesc.frictionType = PxFrictionType::eONE_DIRECTIONAL
Engine/neo-world-physics.adb:97:55     - Unknown word (DIRECTIONAL)      -- PxFrictionType::eONE_DIRECTIONAL;
Engine/neo-world-physics.adb:99:31     - Unknown word (Friction)         -- mParams.mEnableTwoDirFriction)
Engine/neo-world-physics.ads:1007:105  - Unknown word (itself)         -- engine, *before* the test itself is setup.
Engine/neo-world-physics.ads:1007:115  - Unknown word (setup)          -- the test itself is setup.
Engine/neo-world-physics.ads:1007:16   - Unknown word (scene)          -- //! Contains scene-related parameters.
Engine/neo-world-physics.ads:1007:42   - Unknown word (This)           -- related parameters. This is used to initialize
Engine/neo-world-physics.ads:1007:69   - Unknown word (each)           -- is used to initialize each PINT engine, *before
Engine/neo-world-physics.ads:1007:7    - Unknown word (Contains)       -- //! Contains scene-related parameters
Engine/neo-world-physics.ads:1007:88   - Unknown word (before)         -- initialize each PINT engine, *before* the test itself is
Engine/neo-world-physics.ads:1011:41   - Unknown word (Setup)          -- mTestName; // Setup by the system
Engine/neo-world-physics.ads:1016:32   - Unknown word (Calls)          -- mNbSimulateCallsPerFrame(1),
Engine/neo-world-physics.ads:1016:40   - Unknown word (Frame)          -- mNbSimulateCallsPerFrame(1),
Engine/neo-world-physics.ads:1017:22   - Unknown word (Timestep)       -- mTimestep (1.0f/60.0f)
Engine/neo-world-physics.ads:1019:28   - Unknown word (Bounds)         -- mGlobalBounds.SetEmpty();
Engine/neo-world-physics.ads:1019:38   - Unknown word (Empty)          -- mGlobalBounds.SetEmpty();
Engine/neo-world-physics.ads:1022:109  - Unknown word (some)           -- need them. Otherwise some
Engine/neo-world-physics.ads:1022:28   - Unknown word (this)           -- If set by the test, this is used to setup the
Engine/neo-world-physics.ads:1022:44   - Unknown word (setup)          -- test, this is used to setup the broadphase bounds
Engine/neo-world-physics.ads:1022:54   - Unknown word (broadphase)     -- is used to setup the broadphase bounds in engines that
Engine/neo-world-physics.ads:1022:65   - Unknown word (bounds)         -- setup the broadphase bounds in engines that need
Engine/neo-world-physics.ads:1022:83   - Unknown word (that)           -- broadphase bounds in engines that need them. Otherwise
Engine/neo-world-physics.ads:1022:88   - Unknown word (need)           -- bounds in engines that need them. Otherwise some
Engine/neo-world-physics.ads:1022:93   - Unknown word (them)           -- in engines that need them. Otherwise some
Engine/neo-world-physics.ads:1022:99   - Unknown word (Otherwise)      -- engines that need them. Otherwise some
Engine/neo-world-physics.ads:1023:16   - Unknown word (bounds)         -- // default bounds are used. Fine-tuning
Engine/neo-world-physics.ads:1023:33   - Unknown word (Fine)           -- default bounds are used. Fine-tuning the bounds may
Engine/neo-world-physics.ads:1023:60   - Unknown word (improve)        -- tuning the bounds may improve the broadphase performance
Engine/neo-world-physics.ads:1023:72   - Unknown word (broadphase)     -- bounds may improve the broadphase performance.
Engine/neo-world-physics.ads:1023:83   - Unknown word (performance)    -- improve the broadphase performance.
Engine/neo-world-physics.ads:1024:28   - Unknown word (Bounds)         -- AABB mGlobalBounds;
Engine/neo-world-physics.ads:1024:9    - Unknown word (AABB)           -- AABB mGlobalBounds
Engine/neo-world-physics.ads:1026:109  - Unknown word (them)           -- per test. Just write them
Engine/neo-world-physics.ads:1026:15   - Unknown word (poses)          -- // Camera poses for current test. You
Engine/neo-world-physics.ads:1026:69   - Unknown word (CAMERA)         -- define up to PINT_MAX_CAMERA_POSES poses per test
Engine/neo-world-physics.ads:1026:76   - Unknown word (POSES)          -- up to PINT_MAX_CAMERA_POSES poses per test. Just
Engine/neo-world-physics.ads:1026:82   - Unknown word (poses)          -- PINT_MAX_CAMERA_POSES poses per test. Just write
Engine/neo-world-physics.ads:1026:98   - Unknown word (Just)           -- POSES poses per test. Just write them
Engine/neo-world-physics.ads:1027:35   - Unknown word (PEEL)           -- sequentially in the array, PEEL will automatically find
Engine/neo-world-physics.ads:1027:40   - Unknown word (will)           -- quentially in the array, PEEL will automatically find how
Engine/neo-world-physics.ads:1027:45   - Unknown word (automatically)  -- the array, PEEL will automatically find how many there
Engine/neo-world-physics.ads:1027:59   - Unknown word (find)          -- PEEL will automatically find how many there are.
Engine/neo-world-physics.ads:1027:68   - Unknown word (many)          -- automatically find how many there are.
Engine/neo-world-physics.ads:1027:73   - Unknown word (there)         -- automatically find how many there are.
Engine/neo-world-physics.ads:1027:8    - Unknown word (sequentially)   -- // sequentially in the array, PEEL will
Engine/neo-world-physics.ads:1028:42   - Unknown word (CAMERA)        -- mCamera[PINT_MAX_CAMERA_POSES];
Engine/neo-world-physics.ads:1028:49   - Unknown word (POSES)         -- mCamera[PINT_MAX_CAMERA_POSES];
Engine/neo-world-physics.ads:102:5     - Unknown word (Pint)         -- PintShape mType
Engine/neo-world-physics.ads:1030:16   - Unknown word (vector)        -- // Gravity vector for current test.
Engine/neo-world-physics.ads:1033:27   - Unknown word (calls)         -- Number of simulate calls per render frame. It
Engine/neo-world-physics.ads:1033:44   - Unknown word (frame)         -- simulate calls per render frame. It is usually 1 but
Engine/neo-world-physics.ads:1033:57   - Unknown word (usually)       -- render frame. It is usually 1 but it can be set
Engine/neo-world-physics.ads:1033:88   - Unknown word (more)          -- but it can be set to more than 1 to
Engine/neo-world-physics.ads:1033:93   - Unknown word (than)          -- it can be set to more than 1 to
Engine/neo-world-physics.ads:1034:21   - Unknown word (speed)         -- // artificially speed up the test scene.
Engine/neo-world-physics.ads:1034:39   - Unknown word (scene)         -- rtificially speed up the test scene.
Engine/neo-world-physics.ads:1034:8    - Unknown word (artificially)  -- // artificially speed up the test scene
Engine/neo-world-physics.ads:1035:34   - Unknown word (Calls)         -- udword mNbSimulateCallsPerFrame;
Engine/neo-world-physics.ads:1035:42   - Unknown word (Frame)         -- mNbSimulateCallsPerFrame;
Engine/neo-world-physics.ads:1037:34   - Unknown word (call)          -- Timestep for one simulate call. It is usually 1/60
Engine/neo-world-physics.ads:1037:46   - Unknown word (usually)       -- simulate call. It is usually 1/60 (for 60Hz).
Engine/neo-world-physics.ads:104:5     - Unknown word (Quat)        -- Quat mLocalRot
Engine/neo-world-physics.ads:106:14    - Unknown word (Renderer)    -- PintShapeRenderer* mRenderer;
Engine/neo-world-physics.ads:106:30    - Unknown word (Renderer)    -- PintShapeRenderer* mRenderer;
Engine/neo-world-physics.ads:106:5     - Unknown word (Pint)        -- PintShapeRenderer* mRenderer
Engine/neo-world-physics.ads:1080:80   - Unknown word (Extents)       -- f, float z=0.0f) : mExtents(x, y, z)
Engine/neo-world-physics.ads:1084:48   - Unknown word (extents)       -- CREATE(const Point& extents) : mExtents(extents
Engine/neo-world-physics.ads:1084:60   - Unknown word (Extents)       -- const Point& extents) : mExtents(extents)
Engine/neo-world-physics.ads:1084:68   - Unknown word (extents)       -- extents) : mExtents(extents)
Engine/neo-world-physics.ads:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-world-physics.ads:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-world-physics.ads:10:110    - Unknown word (warranty)     -- without even the implied warranty of                -
Engine/neo-world-physics.ads:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-world-physics.ads:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-world-physics.ads:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-world-physics.ads:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-world-physics.ads:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-world-physics.ads:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-world-physics.ads:1126:28   - Unknown word (Surface)       -- SurfaceInterface mSurface;
Engine/neo-world-physics.ads:1126:5    - Unknown word (Surface)       -- SurfaceInterface mSurface
Engine/neo-world-physics.ads:1137:37   - Unknown word (true)          -- mAddToWorld (true)
Engine/neo-world-physics.ads:1141:22   - Unknown word (Linear)        -- mLinearVelocity.Zero();
Engine/neo-world-physics.ads:114:11    - Unknown word (char)        -- const char* mTestName
Engine/neo-world-physics.ads:114:41    - Unknown word (Setup)       -- mTestName; // Setup by the system
Engine/neo-world-physics.ads:1150:23   - Unknown word (Linear)        -- Point mLinearVelocity;
Engine/neo-world-physics.ads:1153:46   - Unknown word (negative)      -- mMassForInertia; // If negative, use the same as mMass
Engine/neo-world-physics.ads:1153:64   - Unknown word (same)          -- If negative, use the same as mMass.
Engine/neo-world-physics.ads:118:22    - Unknown word (Gravity)     -- mGravity (0.0f, 0.0f,
Engine/neo-world-physics.ads:119:32    - Unknown word (Calls)       -- mNbSimulateCallsPerFrame(1),
Engine/neo-world-physics.ads:119:40    - Unknown word (Frame)       -- mNbSimulateCallsPerFrame(1),
Engine/neo-world-physics.ads:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-world-physics.ads:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-world-physics.ads:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-world-physics.ads:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-world-physics.ads:120:22    - Unknown word (Timestep)    -- mTimestep (1.0f/60.0f)
Engine/neo-world-physics.ads:1217:26   - Unknown word (temp)          -- //###temp
Engine/neo-world-physics.ads:1218:28   - Unknown word (Anchor)        -- mGlobalAnchor.SetNotUsed();
Engine/neo-world-physics.ads:1239:28   - Unknown word (Stiffness)     -- mSpringStiffness(0.0f),
Engine/neo-world-physics.ads:1240:28   - Unknown word (Damping)       -- mSpringDamping (0.0f)
Engine/neo-world-physics.ads:126:6     - Unknown word (Joint)       -- -- Joint --
Engine/neo-world-physics.ads:1289:15   - Unknown word (ARTICULATION)  -- struct PINT_ARTICULATION_CREATE : public Allocateable
Engine/neo-world-physics.ads:1291:24   - Unknown word (ARTICULATION)  -- PINT_ARTICULATION_CREATE()
Engine/neo-world-physics.ads:129:23    - Unknown word (Undefined)   -- type Joint_Kind is (Undefined_Joint, Sphere_Joint
Engine/neo-world-physics.ads:129:33    - Unknown word (Joint)       -- Joint_Kind is (Undefined_Joint, Sphere_Joint, Hinge
Engine/neo-world-physics.ads:129:40    - Unknown word (Sphere)      -- is (Undefined_Joint, Sphere_Joint, Hinge_Joint,
Engine/neo-world-physics.ads:129:47    - Unknown word (Joint)       -- Undefined_Joint, Sphere_Joint, Hinge_Joint,   Prismatic
Engine/neo-world-physics.ads:129:54    - Unknown word (Hinge)       -- Joint, Sphere_Joint, Hinge_Joint, Prismatic_Joint
Engine/neo-world-physics.ads:129:69    - Unknown word (Prismatic)   -- Joint, Hinge_Joint,   Prismatic_Joint, Fixed_Joint,
Engine/neo-world-physics.ads:129:8     - Unknown word (Joint)       -- type Joint_Kind is (Undefined_Joint
Engine/neo-world-physics.ads:129:99    - Unknown word (Distance)    -- Joint, Fixed_Joint, Distance_Joint);
Engine/neo-world-physics.ads:1300:22   - Unknown word (Internal)      -- mInternalCompliance (0.0f),
Engine/neo-world-physics.ads:1305:28   - Unknown word (Orientation)   -- mTargetOrientation.SetNotUsed();
Engine/neo-world-physics.ads:1308:28   - Unknown word (Orientation)   -- Quat mTargetOrientation;
Engine/neo-world-physics.ads:130:38    - Unknown word (Impulse)     -- Kind is (Force_Action, Impulse_Action);
Engine/neo-world-physics.ads:1311:23   - Unknown word (Internal)      -- float mInternalCompliance;
Engine/neo-world-physics.ads:1325:27   - Unknown word (Lower)         -- mTwistLowerLimit (0.0f),
Engine/neo-world-physics.ads:1326:27   - Unknown word (Upper)         -- mTwistUpperLimit (0.0f),
Engine/neo-world-physics.ads:132:45    - Unknown word (HINGE)       -- PINT_HINGE_JOINT_CREATE()
Engine/neo-world-physics.ads:1340:30   - Unknown word (Lower)         -- float mTwistLowerLimit;
Engine/neo-world-physics.ads:1341:30   - Unknown word (Upper)         -- float mTwistUpperLimit;
Engine/neo-world-physics.ads:134:40    - Unknown word (HINGE)       -- mType = PINT_JOINT_HINGE;
Engine/neo-world-physics.ads:135:27    - Unknown word (Pivot)       -- mLocalPivot0.Zero();
Engine/neo-world-physics.ads:1367:40   - Unknown word (slip)          -- LS_4WD, // limited slip differential for car
Engine/neo-world-physics.ads:1367:73   - Unknown word (driven)        -- differential for car with 4 driven wheels
Engine/neo-world-physics.ads:1367:80   - Unknown word (wheels)        -- for car with 4 driven wheels
Engine/neo-world-physics.ads:1368:21   - Unknown word (FRONTWD)       -- DIFFERENTIAL_LS_FRONTWD, // limited slip differentia
Engine/neo-world-physics.ads:1368:42   - Unknown word (slip)          -- FRONTWD, // limited slip differential for car
Engine/neo-world-physics.ads:1368:79   - Unknown word (wheel)         -- fferential for car with front-wheel drive
Engine/neo-world-physics.ads:1368:85   - Unknown word (drive)         -- car with front-wheel drive
Engine/neo-world-physics.ads:1369:21   - Unknown word (REARWD)        -- DIFFERENTIAL_LS_REARWD, // limited slip
Engine/neo-world-physics.ads:1369:74   - Unknown word (rear)          -- differential for car with rear-wheel drive
Engine/neo-world-physics.ads:136:27    - Unknown word (Pivot)       -- mLocalPivot1.Zero();
Engine/neo-world-physics.ads:1370:67   - Unknown word (driven)        -- differential for car with 4 driven wheels
Engine/neo-world-physics.ads:1370:74   - Unknown word (wheels)        -- for car with 4 driven wheels
Engine/neo-world-physics.ads:1371:23   - Unknown word (FRONTWD)       -- DIFFERENTIAL_OPEN_FRONTWD, // open differential
Engine/neo-world-physics.ads:1372:23   - Unknown word (REARWD)        -- DIFFERENTIAL_OPEN_REARWD, // open differential
Engine/neo-world-physics.ads:1372:66   - Unknown word (rear)          -- differential for car with rear-wheel drive
Engine/neo-world-physics.ads:1376:21   - Unknown word (currently)     -- // This struct is currently based on the PhysX API
Engine/neo-world-physics.ads:1376:6    - Unknown word (This)          -- // This struct is currently
Engine/neo-world-physics.ads:137:27    - Unknown word (Axis)        -- mLocalAxis0.Zero();
Engine/neo-world-physics.ads:1381:32   - Unknown word (Coeff)         -- mChassisMOICoeffY (0.0f),
Engine/neo-world-physics.ads:1387:41   - Unknown word (Rear)          -- mWheelMaxBrakeTorqueRear (0.0f),
Engine/neo-world-physics.ads:138:27    - Unknown word (Axis)        -- mLocalAxis1.Zero();
Engine/neo-world-physics.ads:1390:34   - Unknown word (Multiplier)    -- mTireFrictionMultiplier (0.0f),
Engine/neo-world-physics.ads:1392:31   - Unknown word (Omega)         -- mEngineMaxOmega (0.0f),
Engine/neo-world-physics.ads:1393:22   - Unknown word (Gears)         -- mGearsSwitchTime (0.0f
Engine/neo-world-physics.ads:1394:22   - Unknown word (Clutch)        -- mClutchStrength (0.0f
Engine/neo-world-physics.ads:1396:29   - Unknown word (Compression)   -- mSuspMaxCompression (0.0f),
Engine/neo-world-physics.ads:1399:32   - Unknown word (Damper)        -- mSuspSpringDamperRate (0.0f),
Engine/neo-world-physics.ads:139:30    - Unknown word (Angle)       -- mMinLimitAngle = MIN_FLOAT;
Engine/neo-world-physics.ads:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-world-physics.ads:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-world-physics.ads:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-world-physics.ads:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-world-physics.ads:1401:42   - Unknown word (Compr)         -- mSuspCamberAngleAtMaxCompr (0.0f),
Engine/neo-world-physics.ads:140:30    - Unknown word (Angle)       -- mMaxLimitAngle = MAX_FLOAT;
Engine/neo-world-physics.ads:1414:112  - Unknown word (chassis)       -- the y-component of the chassis moment of inertia."
Engine/neo-world-physics.ads:1414:120  - Unknown word (moment)        -- component of the chassis moment of inertia."
Engine/neo-world-physics.ads:1414:130  - Unknown word (inertia)       -- the chassis moment of inertia."
Engine/neo-world-physics.ads:1414:18   - Unknown word (tweaking)      -- // "A bit of tweaking here.  The car will
Engine/neo-world-physics.ads:1414:27   - Unknown word (here)          -- "A bit of tweaking here. The car will have
Engine/neo-world-physics.ads:1414:42   - Unknown word (will)          -- tweaking here.  The car will have more responsive
Engine/neo-world-physics.ads:1414:47   - Unknown word (have)          -- here. The car will have more responsive turning
Engine/neo-world-physics.ads:1414:52   - Unknown word (more)          -- The car will have more responsive turning if
Engine/neo-world-physics.ads:1414:57   - Unknown word (responsive)    -- The car will have more responsive turning if we reduce
Engine/neo-world-physics.ads:1414:68   - Unknown word (turning)       -- have more responsive turning if we reduce the y-component
Engine/neo-world-physics.ads:1415:33   - Unknown word (Coeff)         -- mChassisMOICoeffY; // See PxVehicleChassi
Engine/neo-world-physics.ads:141:26    - Unknown word (temp)        -- //###temp
Engine/neo-world-physics.ads:1420:8    - Unknown word (Wheels)        -- // Wheels
Engine/neo-world-physics.ads:1422:52   - Unknown word (supports)     -- mWheelOffset[4]; // Only supports 4-wheeled vehicles for
Engine/neo-world-physics.ads:1422:63   - Unknown word (wheeled)      -- // Only supports 4-wheeled vehicles for now
Engine/neo-world-physics.ads:1422:71   - Unknown word (vehicles)     -- Only supports 4-wheeled vehicles for now
Engine/neo-world-physics.ads:1428:35   - Unknown word (Multiplier)   -- mTireFrictionMultiplier;
Engine/neo-world-physics.ads:142:28    - Unknown word (Anchor)      -- mGlobalAnchor.SetNotUsed();
Engine/neo-world-physics.ads:1432:32   - Unknown word (Omega)        -- mEngineMaxOmega; // See PxVehicleEngineD
Engine/neo-world-physics.ads:143:28    - Unknown word (Axis)        -- mGlobalAxis.SetNotUsed();
Engine/neo-world-physics.ads:1444:33   - Unknown word (Damper)       -- mSuspSpringDamperRate; // See PxVehicleSuspe
Engine/neo-world-physics.ads:1446:43   - Unknown word (Compr)        -- mSuspCamberAngleAtMaxCompr; // See PxVehicleSuspensionD
Engine/neo-world-physics.ads:1455:41   - Unknown word (explanations) -- PintCaps ctor comments for explanations about the caps.
Engine/neo-world-physics.ads:1455:54   - Unknown word (about)        -- comments for explanations about the caps.
Engine/neo-world-physics.ads:1455:64   - Unknown word (caps)         -- explanations about the caps.
Engine/neo-world-physics.ads:1460:19   - Unknown word (Rigid)        -- bool mSupportRigidBodySimulation;
Engine/neo-world-physics.ads:1461:19   - Unknown word (Cylinders)    -- bool mSupportCylinders;
Engine/neo-world-physics.ads:1462:19   - Unknown word (Convexes)     -- bool mSupportConvexes;
Engine/neo-world-physics.ads:1465:19   - Unknown word (Kinematics)   -- bool mSupportKinematics;
Engine/neo-world-physics.ads:1467:19   - Unknown word (Compounds)    -- bool mSupportCompounds;
Engine/neo-world-physics.ads:146:28    - Unknown word (Pivot)       -- Point mLocalPivot0;
Engine/neo-world-physics.ads:1470:19   - Unknown word (Spherical)    -- bool mSupportSphericalJoints;
Engine/neo-world-physics.ads:1471:19   - Unknown word (Hinge)        -- bool mSupportHingeJoints;
Engine/neo-world-physics.ads:1473:19   - Unknown word (Prismatic)    -- bool mSupportPrismaticJoints;
Engine/neo-world-physics.ads:1475:19   - Unknown word (Articulations) -- bool mSupportArticulations;
Engine/neo-world-physics.ads:1477:19   - Unknown word (Phantoms)      -- bool mSupportPhantoms;
Engine/neo-world-physics.ads:147:28    - Unknown word (Pivot)       -- Point mLocalPivot1;
Engine/neo-world-physics.ads:148:28    - Unknown word (Axis)        -- Point mLocalAxis0;
Engine/neo-world-physics.ads:1490:19   - Unknown word (Vehicles)      -- bool mSupportVehicles;
Engine/neo-world-physics.ads:1493:14   - Unknown word (Disabled)      -- struct PintDisabledGroups : public Allocateable
Engine/neo-world-physics.ads:149:28    - Unknown word (Axis)        -- Point mLocalAxis1;
Engine/neo-world-physics.ads:1509:19   - Unknown word (Impact)        -- Point mImpact;
Engine/neo-world-physics.ads:150:31    - Unknown word (Angle)       -- mMinLimitAngle;
Engine/neo-world-physics.ads:1512:20   - Unknown word (Triangle)      -- udword mTriangleIndex;
Engine/neo-world-physics.ads:151:31    - Unknown word (Angle)       -- mMaxLimitAngle;
Engine/neo-world-physics.ads:152:10    - Unknown word (temp)        -- //###temp
Engine/neo-world-physics.ads:153:29    - Unknown word (Anchor)      -- Point mGlobalAnchor;
Engine/neo-world-physics.ads:1578:30   - Unknown word (Triangle)      -- virtual void        DrawTriangle (const Point
Engine/neo-world-physics.ads:1579:30   - Unknown word (Wirefame)      -- virtual void        DrawWirefameAABB (const AABB
Engine/neo-world-physics.ads:1580:30   - Unknown word (Wirefame)      -- virtual void        DrawWirefameOBB (const OBB
Engine/neo-world-physics.ads:1589:92   - Unknown word (sphere)        -- PintSphereSweepData* sphere_sweep_data, const PintRaycast
Engine/neo-world-physics.ads:1590:92   - Unknown word (capsule)       -- PintCapsuleSweepData* capsule_sweep_data, const PintRaycast
Engine/neo-world-physics.ads:1591:92   - Unknown word (convex)        -- PintConvexSweepData* convex_sweep_data, const PintRaycast
Engine/neo-world-physics.ads:1593:95   - Unknown word (sphere)        -- PintSphereOverlapData* sphere_overlap_data, const
Engine/neo-world-physics.ads:1597:97   - Unknown word (capsule)       -- PintCapsuleOverlapData* capsule_overlap_data, const
Engine/neo-world-physics.ads:1601:12   - Unknown word (Flag)          -- enum PintFlag
Engine/neo-world-physics.ads:1604:14   - Unknown word (RAYTRACING)    -- PINT_HAS_RAYTRACING_WINDOW = (1<<1),
Engine/neo-world-physics.ads:1605:51   - Unknown word (RAYTRACING)    -- PINT_IS_ACTIVE|PINT_HAS_RAYTRACING_WINDOW,
Engine/neo-world-physics.ads:1616:51   - Unknown word (been)          -- implemented function %s has been called. Test may behave
Engine/neo-world-physics.ads:1616:56   - Unknown word (called)        -- function %s has been called. Test may behave incorrectly
Engine/neo-world-physics.ads:1616:73   - Unknown word (behave)        -- been called. Test may behave incorrectly.\n", GetName
Engine/neo-world-physics.ads:1616:80   - Unknown word (incorrectly)   -- called. Test may behave incorrectly.\n", GetName(), name
Engine/neo-world-physics.ads:1620:44   - Unknown word (caps)          -- GetCaps(PintCaps& caps) const
Engine/neo-world-physics.ads:1621:31   - Unknown word (Flags)         -- virtual udword        GetFlags() const
Engine/neo-world-physics.ads:1623:50   - Unknown word (gravity)       -- SetGravity(const Point& gravity)
Engine/neo-world-physics.ads:1626:35   - Unknown word (Profiled)      -- void UpdateNonProfiled(float dt)
Engine/neo-world-physics.ads:1627:30   - Unknown word (Main)          -- virtual Point        GetMainColor()
Engine/neo-world-physics.ads:1627:34   - Unknown word (Color)         -- Point GetMainColor()
Engine/neo-world-physics.ads:1628:45   - Unknown word (renderer)      -- Render(PintRender& renderer)
Engine/neo-world-physics.ads:162:21    - Unknown word (Gravity)     -- procedure Set_Gravity
Engine/neo-world-physics.ads:1635:33   - Unknown word (Phantom)       -- void* CreatePhantom(const AABB& box)
Engine/neo-world-physics.ads:1661:8    - Unknown word (Deprecated)    -- // Deprecated
Engine/neo-world-physics.ads:1663:164  - Unknown word (Impulse)       -- NotImplemented("AddWorldImpulseAtWorldPos"); }
Engine/neo-world-physics.ads:1663:34   - Unknown word (Impulse)       -- void AddWorldImpulseAtWorldPos(PintObjectHandle
Engine/neo-world-physics.ads:1663:96   - Unknown word (impulse)       -- const Point& world_impulse, const Point& world
Engine/neo-world-physics.ads:1664:85   - Unknown word (torque)        -- const Point& local_torque)
Engine/neo-world-physics.ads:1667:83   - Unknown word (angular)       -- handle, const Point& angular_velocity)
Engine/neo-world-physics.ads:1667:91   - Unknown word (velocity)      -- const Point& angular_velocity)
Engine/neo-world-physics.ads:166:32    - Unknown word (Scene)       -- Scene : Ptr_PxScene;
Engine/neo-world-physics.ads:166:7     - Unknown word (Scene)       -- Scene : Ptr_PxScene
Engine/neo-world-physics.ads:1672:56   - Unknown word (shapes)        -- GetShapes(PintObjectHandle* shapes, PintObjectHandle handle
Engine/neo-world-physics.ads:1678:16   - Unknown word (releases)      -- // Creates/releases an optional per-thread
Engine/neo-world-physics.ads:1678:28   - Unknown word (optional)      -- Creates/releases an optional per-thread structure
Engine/neo-world-physics.ads:1678:48   - Unknown word (structure)     -- optional per-thread structure (e.g. caches) for scene
Engine/neo-world-physics.ads:1678:64   - Unknown word (caches)        -- thread structure (e.g. caches) for scene queries.
Engine/neo-world-physics.ads:1678:8    - Unknown word (Creates)       -- // Creates/releases an optional
Engine/neo-world-physics.ads:167:32    - Unknown word (Cooking)     -- Cooking : Ptr_PxCooking;
Engine/neo-world-physics.ads:167:7     - Unknown word (Cooking)     -- Cooking : Ptr_PxCooking
Engine/neo-world-physics.ads:1682:8    - Unknown word (Experimental)  -- // Experimental convex sweep support
Engine/neo-world-physics.ads:1683:105  - Unknown word (they)          -- data in the sweeps (they can all share the same
Engine/neo-world-physics.ads:1683:11   - Unknown word (there)         -- // So there is a design issue here
Engine/neo-world-physics.ads:1683:128  - Unknown word (same)          -- they can all share the same data)
Engine/neo-world-physics.ads:1683:35   - Unknown word (here)          -- there is a design issue here. For simpler shapes
Engine/neo-world-physics.ads:1683:45   - Unknown word (simpler)       -- design issue here. For simpler shapes we don't need
Engine/neo-world-physics.ads:1683:53   - Unknown word (shapes)        -- issue here. For simpler shapes we don't need per-plugin
Engine/neo-world-physics.ads:1683:69   - Unknown word (need)          -- simpler shapes we don't need per-plugin data in the
Engine/neo-world-physics.ads:1684:111  - Unknown word (dependent)     -- data becomes engine dependent. The following methods
Engine/neo-world-physics.ads:1684:126  - Unknown word (following)     -- engine dependent. The following methods
Engine/neo-world-physics.ads:1684:16   - Unknown word (convexes)      -- // but for convexes we need to create per
Engine/neo-world-physics.ads:1684:96   - Unknown word (becomes)       -- the convex sweep data becomes engine dependent. The
Engine/neo-world-physics.ads:1685:20   - Unknown word (this)          -- // try to make this work with the existing
Engine/neo-world-physics.ads:1685:39   - Unknown word (existing)      -- make this work with the existing infrastructure.
Engine/neo-world-physics.ads:1685:48   - Unknown word (infrastructure) -- work with the existing infrastructure.
Engine/neo-world-physics.ads:1686:165  - Unknown word (INVALID)        -- CreateConvexObject"); return INVALID_ID; }
Engine/neo-world-physics.ads:1689:107  - Unknown word (libs)           -- equivalent in other libs.
Engine/neo-world-physics.ads:1689:21   - Unknown word (currently)      -- // Aggregates - currently based on the PhysX API
Engine/neo-world-physics.ads:1689:66   - Unknown word (later)          -- PhysX API, may change later to support the equivalent
Engine/neo-world-physics.ads:1689:87   - Unknown word (equivalent)     -- later to support the equivalent in other libs.
Engine/neo-world-physics.ads:1690:77   - Unknown word (self)           -- max_size, bool enable_self_collision)
Engine/neo-world-physics.ads:1690:82   - Unknown word (collision)      -- size, bool enable_self_collision)
Engine/neo-world-physics.ads:1694:110  - Unknown word (libs)           -- equivalent in other libs.
Engine/neo-world-physics.ads:1694:69   - Unknown word (later)          -- PhysX API, may change later to support the equivalent
Engine/neo-world-physics.ads:1694:8    - Unknown word (Articulations)  -- // Articulations - currently based on
Engine/neo-world-physics.ads:1694:90   - Unknown word (equivalent)     -- later to support the equivalent in other libs.
Engine/neo-world-physics.ads:1695:38   - Unknown word (Articulation)   -- PintObjectHandle CreateArticulation(const PINT_ARTICULATION
Engine/neo-world-physics.ads:1696:137  - Unknown word (articulation)   -- CREATE&, PintObjectHandle articulation) { NotImplemented(
Engine/neo-world-physics.ads:1696:38   - Unknown word (Articulated)    -- PintObjectHandle CreateArticulatedObject(const PINT_OBJECT
Engine/neo-world-physics.ads:1697:66   - Unknown word (articulation)   -- ationToScene(PintObjectHandle articulation)
Engine/neo-world-physics.ads:16:14     - Unknown word (Phys)         -- with Neo.API.PhysX; use Neo.API.PhysX
Engine/neo-world-physics.ads:16:33     - Unknown word (Phys)         -- API.PhysX; use Neo.API.PhysX;
Engine/neo-world-physics.ads:1700:8    - Unknown word (Vehicles)       -- // Vehicles - WIP
Engine/neo-world-physics.ads:1701:96   - Unknown word (vehicle)        -- PINT_VEHICLE_CREATE& vehicle)
Engine/neo-world-physics.ads:1702:59   - Unknown word (vehicle)        -- VehicleInput(PintObjectHandle vehicle, const PINT_VEHICLE
Engine/neo-world-physics.ads:1717:72   - Unknown word (helper)         -- parent, PintGUIHelper& helper) = 0;
Engine/neo-world-physics.ads:1725:11   - Unknown word (SAFE)           -- #define SAFE_RELEASE(x) if(x) {
Engine/neo-world-physics.ads:1732:44   - Unknown word (Rigid)          -- ntObjectHandle CreateHandle(PxRigidActor* actor)
Engine/neo-world-physics.ads:1732:49   - Unknown word (Actor)          -- CreateHandle(PxRigidActor* actor)
Engine/neo-world-physics.ads:1732:56   - Unknown word (actor)          -- CreateHandle(PxRigidActor* actor)
Engine/neo-world-physics.ads:1734:18   - Unknown word (binary)         -- const size_t binary = size_t(actor);
Engine/neo-world-physics.ads:1734:34   - Unknown word (actor)          -- size_t binary = size_t(actor);
Engine/neo-world-physics.ads:1735:14   - Unknown word (binary)         -- ASSERT(!(binary&1));
Engine/neo-world-physics.ads:1735:5    - Unknown word (ASSERT)         -- ASSERT(!(binary&1));
Engine/neo-world-physics.ads:1736:29   - Unknown word (binary)         -- return PintObjectHandle(binary);
Engine/neo-world-physics.ads:1739:51   - Unknown word (shape)          -- CreateHandle(PxShape* shape)
Engine/neo-world-physics.ads:173:11    - Unknown word (Scene)       -- PxScene* mScene;
Engine/neo-world-physics.ads:173:28    - Unknown word (Scene)       -- PxScene* mScene;
Engine/neo-world-physics.ads:1741:18   - Unknown word (binary)         -- const size_t binary = size_t(shape);
Engine/neo-world-physics.ads:1741:34   - Unknown word (shape)          -- size_t binary = size_t(shape);
Engine/neo-world-physics.ads:1742:14   - Unknown word (binary)         -- ASSERT(!(binary&1));
Engine/neo-world-physics.ads:1742:5    - Unknown word (ASSERT)         -- ASSERT(!(binary&1));
Engine/neo-world-physics.ads:1746:14   - Unknown word (Rigid)          -- inline_ PxRigidActor* GetActorFromHandle
Engine/neo-world-physics.ads:1746:19   - Unknown word (Actor)          -- inline_ PxRigidActor* GetActorFromHandle
Engine/neo-world-physics.ads:1746:29   - Unknown word (Actor)          -- inline_ PxRigidActor* GetActorFromHandle(PintObjectHandle
Engine/neo-world-physics.ads:1749:37   - Unknown word (Rigid)          -- binary & 1) ? null : (PxRigidActor*)binary;
Engine/neo-world-physics.ads:1749:42   - Unknown word (Actor)          -- 1) ? null : (PxRigidActor*)binary;
Engine/neo-world-physics.ads:174:11    - Unknown word (Cooking)     -- PxCooking* mCooking;
Engine/neo-world-physics.ads:174:30    - Unknown word (Cooking)     -- PxCooking* mCooking;
Engine/neo-world-physics.ads:1758:26   - Unknown word (Callback)       -- class PEEL_PhysX3_ErrorCallback : public PxErrorCallback
Engine/neo-world-physics.ads:1758:51   - Unknown word (Callback)       -- ErrorCallback : public PxErrorCallback
Engine/neo-world-physics.ads:1758:9    - Unknown word (PEEL)           -- class PEEL_PhysX3_ErrorCallback
Engine/neo-world-physics.ads:1761:26   - Unknown word (Callback)       -- PEEL_PhysX3_ErrorCallback() {}
Engine/neo-world-physics.ads:1761:9    - Unknown word (PEEL)           -- PEEL_PhysX3_ErrorCallback
Engine/neo-world-physics.ads:1762:32   - Unknown word (Callback)       -- virtual ~PEEL_PhysX3_ErrorCallback() {}
Engine/neo-world-physics.ads:1767:21   - Unknown word (Allocator)      -- class PEEL_PhysX3_AllocatorCallback : public PxAllocatorC
Engine/neo-world-physics.ads:1767:30   - Unknown word (Callback)       -- PEEL_PhysX3_AllocatorCallback : public PxAllocatorCallback
Engine/neo-world-physics.ads:1767:50   - Unknown word (Allocator)      -- AllocatorCallback : public PxAllocatorCallback
Engine/neo-world-physics.ads:176:14    - Unknown word (vector)      -- std::vector<PxConvexMesh*> mConvexObject
Engine/neo-world-physics.ads:176:23    - Unknown word (Convex)      -- std::vector<PxConvexMesh*> mConvexObjects
Engine/neo-world-physics.ads:176:38    - Unknown word (Convex)      -- vector<PxConvexMesh*> mConvexObjects;
Engine/neo-world-physics.ads:1779:25   - Unknown word (Allocator)      -- PEEL_PhysX3_AllocatorCallback();
Engine/neo-world-physics.ads:1780:31   - Unknown word (Allocator)      -- virtual ~PEEL_PhysX3_AllocatorCallback();
Engine/neo-world-physics.ads:1787:25   - Unknown word (Memory)         -- udword mCurrentMemory;
Engine/neo-world-physics.ads:178:15    - Unknown word (Editable)    -- const EditableParams& mParams;
Engine/neo-world-physics.ads:1791:9    - Unknown word (Memory)         -- class MemoryOutputStream : public
Engine/neo-world-physics.ads:1794:13   - Unknown word (Memory)         -- MemoryOutputStream(PEEL_PhysX
Engine/neo-world-physics.ads:1794:44   - Unknown word (Allocator)      -- emoryOutputStream(PEEL_PhysX3_AllocatorCallback* allocator=null
Engine/neo-world-physics.ads:1794:63   - Unknown word (allocator)      -- _AllocatorCallback* allocator=null);
Engine/neo-world-physics.ads:1795:19   - Unknown word (Memory)         -- virtual ~MemoryOutputStream();
Engine/neo-world-physics.ads:1808:9    - Unknown word (Memory)         -- class MemoryInputData : public PxInputData
Engine/neo-world-physics.ads:1811:47   - Unknown word (length)         -- ryInputData(PxU8* data, PxU32 length);
Engine/neo-world-physics.ads:1814:19   - Unknown word (Length)         -- PxU32 getLength() const;
Engine/neo-world-physics.ads:1815:15   - Unknown word (seek)           -- void seek(PxU32 pos);
Engine/neo-world-physics.ads:1816:16   - Unknown word (tell)           -- PxU32 tell() const;
Engine/neo-world-physics.ads:1827:33   - Unknown word (shape)          -- SetGroup(PxShape& shape, PxU16 collision_group
Engine/neo-world-physics.ads:1827:46   - Unknown word (collision)      -- PxShape& shape, PxU16 collision_group);
Engine/neo-world-physics.ads:182:5     - Unknown word (PEEL)        -- * PEEL - Physics Engine Evaluation
Engine/neo-world-physics.ads:1831:10   - Unknown word (Editable)       -- struct EditableParams
Engine/neo-world-physics.ads:1833:21   - Unknown word (Editable)       -- EditableParams();
Engine/neo-world-physics.ads:1834:8    - Unknown word (Main)           -- // Main
Engine/neo-world-physics.ads:1836:22   - Unknown word (SCRATCH)        -- ifdef PHYSX_SUPPORT_SCRATCH_BUFFER
Engine/neo-world-physics.ads:1836:8    - Unknown word (PHYSX)          -- #ifdef PHYSX_SUPPORT_SCRATCH_BUFFER
Engine/neo-world-physics.ads:1837:26   - Unknown word (Scratch)        -- udword mScratchSize;
Engine/neo-world-physics.ads:1839:25   - Unknown word (BROADPHASE)     -- ifdef PHYSX_SUPPORT_PX_BROADPHASE_TYPE
Engine/neo-world-physics.ads:1839:8    - Unknown word (PHYSX)          -- #ifdef PHYSX_SUPPORT_PX_BROADPHASE
Engine/neo-world-physics.ads:183:24    - Unknown word (Pierre)      -- Copyright (C) 2012 Pierre Terdiman
Engine/neo-world-physics.ads:183:31    - Unknown word (Terdiman)    -- Copyright (C) 2012 Pierre Terdiman
Engine/neo-world-physics.ads:183:5     - Unknown word (Copyright)   -- * Copyright (C) 2012 Pierre Terdiman
Engine/neo-world-physics.ads:1840:12   - Unknown word (Phase)          -- PxBroadPhaseType::Enum mBroadPhaseTyp
Engine/neo-world-physics.ads:1840:34   - Unknown word (Broad)          -- PxBroadPhaseType::Enum mBroadPhaseType;
Engine/neo-world-physics.ads:1840:39   - Unknown word (Phase)          -- oadPhaseType::Enum mBroadPhaseType;
Engine/neo-world-physics.ads:1840:7    - Unknown word (Broad)          -- PxBroadPhaseType::Enum
Engine/neo-world-physics.ads:1841:29   - Unknown word (Subdiv)        -- udword mMBPSubdivLevel;
Engine/neo-world-physics.ads:1845:22   - Unknown word (ANGULAR)       -- ifdef PHYSX_SUPPORT_ANGULAR_CCD
Engine/neo-world-physics.ads:1845:8    - Unknown word (PHYSX)         -- #ifdef PHYSX_SUPPORT_ANGULAR_CCD
Engine/neo-world-physics.ads:1848:8    - Unknown word (PHYSX)         -- #ifdef PHYSX_SUPPORT_RAYCAST_CCD
Engine/neo-world-physics.ads:1850:38   - Unknown word (Dyna)          -- mUseRaycastCCD_DynaDyna;
Engine/neo-world-physics.ads:1850:42   - Unknown word (Dyna)          -- mUseRaycastCCD_DynaDyna;
Engine/neo-world-physics.ads:1854:22   - Unknown word (TIGHT)         -- ifdef PHYSX_SUPPORT_TIGHT_CONVEX_BOUNDS
Engine/neo-world-physics.ads:1854:35   - Unknown word (BOUNDS)        -- SUPPORT_TIGHT_CONVEX_BOUNDS
Engine/neo-world-physics.ads:1854:8    - Unknown word (PHYSX)         -- #ifdef PHYSX_SUPPORT_TIGHT_CONVEX
Engine/neo-world-physics.ads:1855:27   - Unknown word (Tight)         -- bool mUseTightConvexBounds;
Engine/neo-world-physics.ads:1855:38   - Unknown word (Bounds)        -- mUseTightConvexBounds;
Engine/neo-world-physics.ads:1858:26   - Unknown word (FLAG)          -- ifdef PHYSX_SUPPORT_SSE_FLAG
Engine/neo-world-physics.ads:1861:36   - Unknown word (Transforms)    -- mEnableActiveTransforms;
Engine/neo-world-physics.ads:1863:24   - Unknown word (Flush)         -- bool mFlushSimulation;
Engine/neo-world-physics.ads:1865:27   - Unknown word (Full)          -- bool mUseFullPvdConnection;
Engine/neo-world-physics.ads:1873:22   - Unknown word (SUBSTEPS)      -- ifdef PHYSX_SUPPORT_SUBSTEPS
Engine/neo-world-physics.ads:1874:28   - Unknown word (Substeps)      -- udword mNbSubsteps;
Engine/neo-world-physics.ads:1878:30   - Unknown word (Sleeping)      -- mEnableSleeping;
Engine/neo-world-physics.ads:1879:31   - Unknown word (Strong)        -- mDisableStrongFriction;
Engine/neo-world-physics.ads:1882:24   - Unknown word (Adaptive)      -- bool mAdaptiveForce;
Engine/neo-world-physics.ads:1883:22   - Unknown word (STABILIZATION) -- ifdef PHYSX_SUPPORT_STABILIZATION_FLAG
Engine/neo-world-physics.ads:1883:36   - Unknown word (FLAG)          -- SUPPORT_STABILIZATION_FLAG
Engine/neo-world-physics.ads:1884:24   - Unknown word (Stabilization) -- bool mStabilization;
Engine/neo-world-physics.ads:1887:34   - Unknown word (Passes)        -- mMaxNbCCDPasses;
Engine/neo-world-physics.ads:1889:26   - Unknown word (Solver)        -- udword mSolverIterationCountPos;
Engine/neo-world-physics.ads:1889:32   - Unknown word (Iteration)     -- mSolverIterationCountPos;
Engine/neo-world-physics.ads:1890:26   - Unknown word (Solver)        -- udword mSolverIterationCountVel;
Engine/neo-world-physics.ads:1890:32   - Unknown word (Iteration)     -- mSolverIterationCountVel;
Engine/neo-world-physics.ads:1891:25   - Unknown word (Linear)        -- float mLinearDamping;
Engine/neo-world-physics.ads:1894:26   - Unknown word (DEPEN)         -- ifdef PHYSX_SUPPORT_MAX_DEPEN_VELOCITY
Engine/neo-world-physics.ads:1894:32   - Unknown word (VELOCITY)      -- PHYSX_SUPPORT_MAX_DEPEN_VELOCITY
Engine/neo-world-physics.ads:1895:28   - Unknown word (Depen)         -- float mMaxDepenVelocity;
Engine/neo-world-physics.ads:1897:25   - Unknown word (Sleep)         -- float mSleepThreshold;
Engine/neo-world-physics.ads:1897:30   - Unknown word (Threshold)     -- float mSleepThreshold;
Engine/neo-world-physics.ads:1900:14   - Unknown word (Structure)     -- PxPruningStructureType::Enum mStaticPruner
Engine/neo-world-physics.ads:1900:42   - Unknown word (Pruner)        -- ngStructureType::Enum mStaticPruner;
Engine/neo-world-physics.ads:1900:7    - Unknown word (Pruning)       -- PxPruningStructureType::Enum
Engine/neo-world-physics.ads:1901:14   - Unknown word (Structure)     -- PxPruningStructureType::Enum mDynamicPruner
Engine/neo-world-physics.ads:1901:43   - Unknown word (Pruner)        -- gStructureType::Enum mDynamicPruner;
Engine/neo-world-physics.ads:1901:7    - Unknown word (Pruning)       -- PxPruningStructureType::Enum
Engine/neo-world-physics.ads:1902:46   - Unknown word (Hint)          -- mSQDynamicRebuildRateHint;
Engine/neo-world-physics.ads:1903:26   - Unknown word (Flag)          -- bool mSQFlag;
Engine/neo-world-physics.ads:1905:26   - Unknown word (Initial)       -- bool mSQInitialOverlap;
Engine/neo-world-physics.ads:1906:28   - Unknown word (Manual)        -- bool mSQManualFlushUpdates;
Engine/neo-world-physics.ads:1906:34   - Unknown word (Flush)         -- mSQManualFlushUpdates;
Engine/neo-world-physics.ads:1907:26   - Unknown word (Precise)       -- bool mSQPreciseSweeps;
Engine/neo-world-physics.ads:1910:35   - Unknown word (Projection)    -- mEnableJointProjection;
Engine/neo-world-physics.ads:191:11    - Unknown word (Pint)        -- #include "PintDef.h"
Engine/neo-world-physics.ads:1920:25   - Unknown word (Projection)    -- float mProjectionLinearTolerance;
Engine/neo-world-physics.ads:1920:41   - Unknown word (Tolerance)     -- mProjectionLinearTolerance;
Engine/neo-world-physics.ads:1921:25   - Unknown word (Projection)    -- float mProjectionAngularTolerance;
Engine/neo-world-physics.ads:1921:42   - Unknown word (Tolerance)     -- mProjectionAngularTolerance;
Engine/neo-world-physics.ads:1923:25   - Unknown word (Inverse)       -- float mInverseInertiaScale;
Engine/neo-world-physics.ads:1924:25   - Unknown word (Inverse)       -- float mInverseMassScale;
Engine/neo-world-physics.ads:1926:22   - Unknown word (ARTICULATIONS) -- ifdef PHYSX_SUPPORT_ARTICULATIONS
Engine/neo-world-physics.ads:1927:8    - Unknown word (Articulations) -- // Articulations
Engine/neo-world-physics.ads:1929:29   - Unknown word (Projection)    -- udword mMaxProjectionIterations;
Engine/neo-world-physics.ads:1929:39   - Unknown word (Iterations)    -- mMaxProjectionIterations;
Engine/neo-world-physics.ads:1930:25   - Unknown word (Separation)    -- float mSeparationTolerance;
Engine/neo-world-physics.ads:1930:35   - Unknown word (Tolerance)     -- mSeparationTolerance;
Engine/neo-world-physics.ads:1931:34   - Unknown word (Drive)         -- mExternalDriveIterations;
Engine/neo-world-physics.ads:1931:39   - Unknown word (Iterations)    -- mExternalDriveIterations;
Engine/neo-world-physics.ads:1932:26   - Unknown word (Internal)      -- udword mInternalDriveIterations;
Engine/neo-world-physics.ads:1932:34   - Unknown word (Drive)         -- mInternalDriveIterations;
Engine/neo-world-physics.ads:1932:39   - Unknown word (Iterations)    -- mInternalDriveIterations;
Engine/neo-world-physics.ads:1934:8    - Unknown word (Cooking)       -- // Cooking
Engine/neo-world-physics.ads:1935:30   - Unknown word (MIDPHASE)      -- PHYSX_SUPPORT_PX_MESH_MIDPHASE
Engine/neo-world-physics.ads:1936:14   - Unknown word (Phase)         -- PxMeshMidPhase::Enum mMidPhaseType
Engine/neo-world-physics.ads:1936:35   - Unknown word (Phase)         -- PxMeshMidPhase::Enum mMidPhaseType;
Engine/neo-world-physics.ads:1938:30   - Unknown word (COOKING)       -- PHYSX_SUPPORT_PX_MESH_COOKING_HINT
Engine/neo-world-physics.ads:1938:38   - Unknown word (HINT)          -- SUPPORT_PX_MESH_COOKING_HINT
Engine/neo-world-physics.ads:1939:18   - Unknown word (Hint)          -- PxMeshCookingHint::Enum mMeshCookingHint
Engine/neo-world-physics.ads:1939:46   - Unknown word (Hint)          -- Enum mMeshCookingHint;
Engine/neo-world-physics.ads:1941:35   - Unknown word (GAUSSMAP)      -- SUPPORT_USER_DEFINED_GAUSSMAP_LIMIT
Engine/neo-world-physics.ads:1942:26   - Unknown word (Gauss)         -- udword mGaussMapLimit;
Engine/neo-world-physics.ads:1944:37   - Unknown word (EDGES)         -- SUPPORT_DISABLE_ACTIVE_EDGES_PRECOMPUTE
Engine/neo-world-physics.ads:1945:40   - Unknown word (Edges)         -- mPrecomputeActiveEdges;
Engine/neo-world-physics.ads:1950:101  - Unknown word (shape)         -- CREATE* create, PxShape& shape, PxU16 collision_group
Engine/neo-world-physics.ads:1950:114  - Unknown word (collision)     -- PxShape& shape, PxU16 collision_group, bool debug_viz
Engine/neo-world-physics.ads:1950:146  - Unknown word (flag)          -- group, bool debug_viz_flag)
Engine/neo-world-physics.ads:1950:18   - Unknown word (Setup)         -- inline_ void  SetupShape(const EditableParams
Engine/neo-world-physics.ads:1950:35   - Unknown word (Editable)      -- void SetupShape(const EditableParams& params, const
Engine/neo-world-physics.ads:1952:16   - Unknown word (Flag)          -- // shape.setFlag(PxShapeFlag::eSIMULATION
Engine/neo-world-physics.ads:1952:28   - Unknown word (Flag)          -- shape.setFlag(PxShapeFlag::eSIMULATION_SHAPE,
Engine/neo-world-physics.ads:1952:7    - Unknown word (shape)         -- // shape.setFlag(PxShapeFlag
Engine/neo-world-physics.ads:1953:33   - Unknown word (SCENE)         -- setFlag(PxShapeFlag::eSCENE_QUERY_SHAPE, params
Engine/neo-world-physics.ads:1954:33   - Unknown word (VISUALIZATION) -- setFlag(PxShapeFlag::eVISUALIZATION, debug_viz_flag);
Engine/neo-world-physics.ads:1954:58   - Unknown word (flag)          -- eVISUALIZATION, debug_viz_flag);
Engine/neo-world-physics.ads:1955:39   - Unknown word (SWEPT)         -- setFlag(PxShapeFlag::eUSE_SWEPT_BOUNDS, gUseCCD);
Engine/neo-world-physics.ads:1955:45   - Unknown word (BOUNDS)        -- PxShapeFlag::eUSE_SWEPT_BOUNDS, gUseCCD);
Engine/neo-world-physics.ads:1963:35   - Unknown word (that)          -- query filter data so that we can filter out all
Engine/neo-world-physics.ads:1963:62   - Unknown word (shapes)        -- we can filter out all shapes - debug purpose
Engine/neo-world-physics.ads:1963:77   - Unknown word (purpose)       -- out all shapes - debug purpose
Engine/neo-world-physics.ads:1963:8    - Unknown word (Setup)         -- // Setup query filter data so
Engine/neo-world-physics.ads:196:20    - Unknown word (CAMERA)      -- #define PINT_MAX_CAMERA_POSES 16
Engine/neo-world-physics.ads:196:27    - Unknown word (POSES)       -- define PINT_MAX_CAMERA_POSES 16
Engine/neo-world-physics.ads:1970:29   - Unknown word (collision)     -- PhysX3::SetGroup(shape, collision_group);
Engine/neo-world-physics.ads:1976:41   - Unknown word (Editable)      -- SharedPhysX(const EditableParams& params);
Engine/neo-world-physics.ads:1979:54   - Unknown word (gravity)       -- SetGravity(const Point& gravity);
Engine/neo-world-physics.ads:1990:100  - Unknown word (impulse)       -- const Point& world_impulse, const Point& world
Engine/neo-world-physics.ads:1991:89   - Unknown word (torque)        -- const Point& local_torque);
Engine/neo-world-physics.ads:1994:87   - Unknown word (angular)       -- handle, const Point& angular_velocity);
Engine/neo-world-physics.ads:1994:95   - Unknown word (velocity)      -- const Point& angular_velocity);
Engine/neo-world-physics.ads:2007:81   - Unknown word (self)          -- max_size, bool enable_self_collision);
Engine/neo-world-physics.ads:200:16    - Unknown word (UNDEFINED)   -- PINT_SHAPE_UNDEFINED,
Engine/neo-world-physics.ads:2012:141  - Unknown word (articulation)  -- CREATE&, PintObjectHandle articulation);
Engine/neo-world-physics.ads:201:16    - Unknown word (SPHERE)      -- PINT_SHAPE_SPHERE,
Engine/neo-world-physics.ads:2029:118  - Unknown word (pint)          -- ticulationLink* parent, Pint& pint, const PINT_OBJECT_CREATE
Engine/neo-world-physics.ads:202:16    - Unknown word (CAPSULE)     -- PINT_SHAPE_CAPSULE,
Engine/neo-world-physics.ads:2030:86   - Unknown word (Actor)         -- CREATE& desc, PxRigidActor* actor){}
Engine/neo-world-physics.ads:2030:93   - Unknown word (actor)         -- desc, PxRigidActor* actor){}
Engine/neo-world-physics.ads:2032:49   - Unknown word (renderer)      -- Render(PintRender& renderer);
Engine/neo-world-physics.ads:203:16    - Unknown word (CYLINDER)    -- PINT_SHAPE_CYLINDER,
Engine/neo-world-physics.ads:2040:14   - Unknown word (vector)        -- std::vector<PxConvexMesh*> mConvexObject
Engine/neo-world-physics.ads:2045:47   - Unknown word (Tolerances)    -- CreateCooking(const PxTolerancesScale& scale, PxMeshPreprocess
Engine/neo-world-physics.ads:2045:90   - Unknown word (Flags)         -- PxMeshPreprocessingFlags mesh_preprocess_params
Engine/neo-world-physics.ads:2048:125  - Unknown word (renderer)      -- PintShapeRenderer* renderer);
Engine/neo-world-physics.ads:2048:74   - Unknown word (vert)          -- Point* verts, udword vertCount, PxConvexFlags
Engine/neo-world-physics.ads:2048:93   - Unknown word (Flags)         -- udword vertCount, PxConvexFlags flags, PintShapeRenderer
Engine/neo-world-physics.ads:2048:99   - Unknown word (flags)         -- vertCount, PxConvexFlags flags, PintShapeRenderer*
Engine/neo-world-physics.ads:2049:103  - Unknown word (renderer)      -- PintShapeRenderer* renderer);
Engine/neo-world-physics.ads:2049:11   - Unknown word (Triangle)      -- PxTriangleMesh* CreateTriangleMes
Engine/neo-world-physics.ads:2049:57   - Unknown word (Surface)       -- CreateTriangleMesh(const SurfaceInterface& surface, PintShapeR
Engine/neo-world-physics.ads:2049:75   - Unknown word (surface)       -- const SurfaceInterface& surface, PintShapeRenderer*
Engine/neo-world-physics.ads:2051:22   - Unknown word (SCRATCH)       -- ifdef PHYSX_SUPPORT_SCRATCH_BUFFER
Engine/neo-world-physics.ads:2052:34   - Unknown word (Scratch)       -- void* GetScratchPad() { return
Engine/neo-world-physics.ads:2052:64   - Unknown word (Scratch)       -- ScratchPad() { return mScratchPad; }
Engine/neo-world-physics.ads:2053:35   - Unknown word (Scratch)       -- udword GetScratchPadSize() const  { return
Engine/neo-world-physics.ads:2053:70   - Unknown word (Scratch)       -- ) const  { return mScratchPadSize; }
Engine/neo-world-physics.ads:2058:54   - Unknown word (rigid)         -- SetupDynamic(PxRigidDynamic& rigidDynamic, const PINT_OBJECT
Engine/neo-world-physics.ads:205:16    - Unknown word (CONVEX)      -- PINT_SHAPE_CONVEX,
Engine/neo-world-physics.ads:2069:22   - Unknown word (SCRATCH)       -- ifdef PHYSX_SUPPORT_SCRATCH_BUFFER
Engine/neo-world-physics.ads:2095:14   - Unknown word (vector)        -- std::vector<PxMaterial*> mMaterials
Engine/neo-world-physics.ads:2096:37   - Unknown word (Convexes)      -- vector<ConvexRender> mConvexes;
Engine/neo-world-physics.ads:2101:67   - Unknown word (torque)        -- const Point& local_torque) :
Engine/neo-world-physics.ads:2103:32   - Unknown word (torque)        -- mLocalTorque(local_torque)
Engine/neo-world-physics.ads:2109:41   - Unknown word (Torques)       -- LocalTorque> mLocalTorques;
Engine/neo-world-physics.ads:2113:21   - Unknown word (Sleeping)      -- inline_ void SetupSleeping(T* dynamic, bool enable
Engine/neo-world-physics.ads:2113:54   - Unknown word (sleeping)      -- dynamic, bool enable_sleeping)
Engine/neo-world-physics.ads:2116:16   - Unknown word (sleeping)      -- if(!enable_sleeping)
Engine/neo-world-physics.ads:2117:16   - Unknown word (wake)          -- dynamic->wakeUp(9999999999.0f);
Engine/neo-world-physics.ads:2119:14   - Unknown word (wake)          -- dynamic->wakeUp();
Engine/neo-world-physics.ads:211:16    - Unknown word (UNDEFINED)   -- PINT_JOINT_UNDEFINED,
Engine/neo-world-physics.ads:2120:16   - Unknown word (sleeping)      -- if(!enable_sleeping)
Engine/neo-world-physics.ads:2121:19   - Unknown word (Wake)          -- dynamic->setWakeCounter(9999999999.0f
Engine/neo-world-physics.ads:2121:23   - Unknown word (Counter)       -- dynamic->setWakeCounter(9999999999.0f);
Engine/neo-world-physics.ads:2125:66   - Unknown word (flag)          -- desc, PxSceneFlag::Enum flag, bool b)
Engine/neo-world-physics.ads:2128:12   - Unknown word (flags)         -- desc.flags |= flag;
Engine/neo-world-physics.ads:2128:22   - Unknown word (flag)          -- desc.flags |= flag;
Engine/neo-world-physics.ads:212:16    - Unknown word (SPHERICAL)   -- PINT_JOINT_SPHERICAL, // Spherical joint
Engine/neo-world-physics.ads:212:31    - Unknown word (Spherical)   -- JOINT_SPHERICAL, // Spherical joint a.k.a. point-to
Engine/neo-world-physics.ads:212:41    - Unknown word (joint)       -- SPHERICAL, // Spherical joint a.k.a. point-to-point
Engine/neo-world-physics.ads:212:96    - Unknown word (socket)      -- constraint a.k.a. ball-and-socket
Engine/neo-world-physics.ads:2130:12   - Unknown word (flags)         -- desc.flags &= ~flag;
Engine/neo-world-physics.ads:2136:26   - Unknown word (Modification)  -- virtual void      UIModificationCallback() = 0;
Engine/neo-world-physics.ads:213:16    - Unknown word (HINGE)       -- PINT_JOINT_HINGE, // Hinge joints
Engine/neo-world-physics.ads:213:29    - Unknown word (Hinge)       -- PINT_JOINT_HINGE, // Hinge joints a.k.a. revolute
Engine/neo-world-physics.ads:213:49    - Unknown word (revolute)    -- Hinge joints a.k.a. revolute joints
Engine/neo-world-physics.ads:2141:71   - Unknown word (helper)        -- parent, PintGUIHelper& helper, UICallback& callback
Engine/neo-world-physics.ads:2141:91   - Unknown word (callback)      -- helper, UICallback& callback, udword nb_debug_viz
Engine/neo-world-physics.ads:214:16    - Unknown word (PRISMATIC)   -- PINT_JOINT_PRISMATIC, // Prismatic joints
Engine/neo-world-physics.ads:214:31    - Unknown word (Prismatic)   -- JOINT_PRISMATIC, // Prismatic joints, a.k.a. slider
Engine/neo-world-physics.ads:214:56    - Unknown word (slider)      -- Prismatic joints, a.k.a. slider constraints
Engine/neo-world-physics.ads:216:16    - Unknown word (DISTANCE)    -- PINT_JOINT_DISTANCE, // Distance joints
Engine/neo-world-physics.ads:216:30    - Unknown word (Distance)    -- JOINT_DISTANCE, // Distance joints
Engine/neo-world-physics.ads:21:12     - Unknown word (Shape)        -- enum PintShape
Engine/neo-world-physics.ads:21:8      - Unknown word (Pint)         -- enum PintShape
Engine/neo-world-physics.ads:222:17    - Unknown word (IMPULSE)     -- PINT_ACTION_IMPULSE,
Engine/neo-world-physics.ads:225:18    - Unknown word (Renderer)    -- class PintShapeRenderer : public Allocateable
Engine/neo-world-physics.ads:225:37    - Unknown word (Allocateable) -- PintShapeRenderer : public Allocateable
Engine/neo-world-physics.ads:228:28    - Unknown word (Renderer)     -- PintShapeRenderer() {}
Engine/neo-world-physics.ads:231:14    - Unknown word (void)         -- virtual void Render(const
Engine/neo-world-physics.ads:231:43    - Unknown word (pose)         -- Render(const PR& pose) = 0;
Engine/neo-world-physics.ads:232:14    - Unknown word (void)         -- virtual void SetColor(const
Engine/neo-world-physics.ads:232:29    - Unknown word (Color)        -- virtual void        SetColor(const Point& color,
Engine/neo-world-physics.ads:232:48    - Unknown word (color)        -- SetColor(const Point& color, bool isStatic)  =
Engine/neo-world-physics.ads:233:14    - Unknown word (void)         -- virtual void SetShadows(bool
Engine/neo-world-physics.ads:233:29    - Unknown word (Shadows)      -- virtual void        SetShadows(bool flag)
Engine/neo-world-physics.ads:233:42    - Unknown word (flag)         -- SetShadows(bool flag) = 0;
Engine/neo-world-physics.ads:237:10    - Unknown word (Camera)       -- struct CameraPose
Engine/neo-world-physics.ads:237:16    - Unknown word (Pose)         -- struct CameraPose
Engine/neo-world-physics.ads:239:15    - Unknown word (Pose)         -- CameraPose()
Engine/neo-world-physics.ads:239:9     - Unknown word (Camera)       -- CameraPose()
Engine/neo-world-physics.ads:23:10     - Unknown word (SHAPE)        -- PINT_SHAPE_UNDEFINED,
Engine/neo-world-physics.ads:23:16     - Unknown word (UNDEFINED)    -- PINT_SHAPE_UNDEFINED,
Engine/neo-world-physics.ads:23:5      - Unknown word (PINT)         -- PINT_SHAPE_UNDEFINED,
Engine/neo-world-physics.ads:240:15    - Unknown word (Pose)         -- CameraPose(const Point& pos, const
Engine/neo-world-physics.ads:240:9     - Unknown word (Camera)       -- CameraPose(const Point& pos
Engine/neo-world-physics.ads:242:11    - Unknown word (operator)     -- bool operator == (const CameraPose
Engine/neo-world-physics.ads:242:30    - Unknown word (Camera)       -- operator == (const CameraPose& other)  const
Engine/neo-world-physics.ads:242:36    - Unknown word (Pose)         -- operator == (const CameraPose& other)  const
Engine/neo-world-physics.ads:242:42    - Unknown word (other)        -- (const CameraPose& other) const
Engine/neo-world-physics.ads:244:20    - Unknown word (other)        -- return mPos==other.mPos && mDir==other
Engine/neo-world-physics.ads:244:40    - Unknown word (other)        -- other.mPos && mDir==other.mDir;
Engine/neo-world-physics.ads:247:11    - Unknown word (operator)     -- bool operator != (const CameraPose
Engine/neo-world-physics.ads:247:30    - Unknown word (Camera)       -- operator != (const CameraPose& other)  const
Engine/neo-world-physics.ads:247:36    - Unknown word (Pose)         -- operator != (const CameraPose& other)  const
Engine/neo-world-physics.ads:247:42    - Unknown word (other)        -- (const CameraPose& other) const
Engine/neo-world-physics.ads:249:20    - Unknown word (other)        -- return mPos!=other.mPos || mDir!=other
Engine/neo-world-physics.ads:24:10     - Unknown word (SHAPE)        -- PINT_SHAPE_SPHERE,
Engine/neo-world-physics.ads:24:16     - Unknown word (SPHERE)       -- PINT_SHAPE_SPHERE,
Engine/neo-world-physics.ads:24:5      - Unknown word (PINT)         -- PINT_SHAPE_SPHERE,
Engine/neo-world-physics.ads:256:105   - Unknown word (itself)       -- engine, *before* the test itself is setup.
Engine/neo-world-physics.ads:256:115   - Unknown word (setup)        -- the test itself is setup.
Engine/neo-world-physics.ads:256:16    - Unknown word (scene)        -- //! Contains scene-related parameters.
Engine/neo-world-physics.ads:256:42    - Unknown word (This)         -- related parameters. This is used to initialize
Engine/neo-world-physics.ads:256:69    - Unknown word (each)         -- is used to initialize each PINT engine, *before
Engine/neo-world-physics.ads:256:7     - Unknown word (Contains)     -- //! Contains scene-related parameters
Engine/neo-world-physics.ads:256:88    - Unknown word (before)       -- initialize each PINT engine, *before* the test itself is
Engine/neo-world-physics.ads:257:36    - Unknown word (Allocateable) -- WORLD_CREATE : public Allocateable
Engine/neo-world-physics.ads:25:10     - Unknown word (SHAPE)        -- PINT_SHAPE_CAPSULE,
Engine/neo-world-physics.ads:25:16     - Unknown word (CAPSULE)      -- PINT_SHAPE_CAPSULE,
Engine/neo-world-physics.ads:25:5      - Unknown word (PINT)         -- PINT_SHAPE_CAPSULE,
Engine/neo-world-physics.ads:260:11    - Unknown word (char)         -- const char* mTestName
Engine/neo-world-physics.ads:260:41    - Unknown word (Setup)        -- mTestName; // Setup by the system
Engine/neo-world-physics.ads:264:22    - Unknown word (Gravity)      -- mGravity (0.0f, 0.0f,
Engine/neo-world-physics.ads:265:32    - Unknown word (Calls)        -- mNbSimulateCallsPerFrame(1),
Engine/neo-world-physics.ads:265:40    - Unknown word (Frame)        -- mNbSimulateCallsPerFrame(1),
Engine/neo-world-physics.ads:266:22    - Unknown word (Timestep)     -- mTimestep (1.0f/60.0f)
Engine/neo-world-physics.ads:268:28    - Unknown word (Bounds)       -- mGlobalBounds.SetEmpty();
Engine/neo-world-physics.ads:268:38    - Unknown word (Empty)        -- mGlobalBounds.SetEmpty();
Engine/neo-world-physics.ads:26:10     - Unknown word (SHAPE)        -- PINT_SHAPE_CYLINDER,
Engine/neo-world-physics.ads:26:16     - Unknown word (CYLINDER)     -- PINT_SHAPE_CYLINDER,
Engine/neo-world-physics.ads:26:5      - Unknown word (PINT)         -- PINT_SHAPE_CYLINDER,
Engine/neo-world-physics.ads:271:109   - Unknown word (some)         -- need them. Otherwise some
Engine/neo-world-physics.ads:271:28    - Unknown word (this)         -- If set by the test, this is used to setup the
Engine/neo-world-physics.ads:271:44    - Unknown word (setup)        -- test, this is used to setup the broadphase bounds
Engine/neo-world-physics.ads:271:54    - Unknown word (broadphase)   -- is used to setup the broadphase bounds in engines that
Engine/neo-world-physics.ads:271:65    - Unknown word (bounds)       -- setup the broadphase bounds in engines that need
Engine/neo-world-physics.ads:271:83    - Unknown word (that)         -- broadphase bounds in engines that need them. Otherwise
Engine/neo-world-physics.ads:271:88    - Unknown word (need)         -- bounds in engines that need them. Otherwise some
Engine/neo-world-physics.ads:271:93    - Unknown word (them)         -- in engines that need them. Otherwise some
Engine/neo-world-physics.ads:271:99    - Unknown word (Otherwise)    -- engines that need them. Otherwise some
Engine/neo-world-physics.ads:272:16    - Unknown word (bounds)       -- // default bounds are used. Fine-tuning
Engine/neo-world-physics.ads:272:33    - Unknown word (Fine)         -- default bounds are used. Fine-tuning the bounds may
Engine/neo-world-physics.ads:272:49    - Unknown word (bounds)       -- used. Fine-tuning the bounds may improve the broadphase
Engine/neo-world-physics.ads:272:60    - Unknown word (improve)      -- tuning the bounds may improve the broadphase performance
Engine/neo-world-physics.ads:272:72    - Unknown word (broadphase)   -- bounds may improve the broadphase performance.
Engine/neo-world-physics.ads:272:83    - Unknown word (performance)  -- improve the broadphase performance.
Engine/neo-world-physics.ads:273:28    - Unknown word (Bounds)       -- AABB mGlobalBounds;
Engine/neo-world-physics.ads:273:9     - Unknown word (AABB)         -- AABB mGlobalBounds
Engine/neo-world-physics.ads:275:109   - Unknown word (them)         -- per test. Just write them
Engine/neo-world-physics.ads:275:15    - Unknown word (poses)        -- // Camera poses for current test. You
Engine/neo-world-physics.ads:275:69    - Unknown word (CAMERA)       -- define up to PINT_MAX_CAMERA_POSES poses per test
Engine/neo-world-physics.ads:275:76    - Unknown word (POSES)        -- up to PINT_MAX_CAMERA_POSES poses per test. Just
Engine/neo-world-physics.ads:275:82    - Unknown word (poses)        -- PINT_MAX_CAMERA_POSES poses per test. Just write
Engine/neo-world-physics.ads:275:98    - Unknown word (Just)         -- POSES poses per test. Just write them
Engine/neo-world-physics.ads:276:35    - Unknown word (PEEL)         -- sequentially in the array, PEEL will automatically find
Engine/neo-world-physics.ads:276:40    - Unknown word (will)         -- quentially in the array, PEEL will automatically find how
Engine/neo-world-physics.ads:276:45    - Unknown word (automatically) -- the array, PEEL will automatically find how many there
Engine/neo-world-physics.ads:276:59    - Unknown word (find)          -- PEEL will automatically find how many there are.
Engine/neo-world-physics.ads:276:68    - Unknown word (many)          -- automatically find how many there are.
Engine/neo-world-physics.ads:276:73    - Unknown word (there)         -- automatically find how many there are.
Engine/neo-world-physics.ads:276:8     - Unknown word (sequentially) -- // sequentially in the array, PEEL will
Engine/neo-world-physics.ads:277:42    - Unknown word (CAMERA)        -- mCamera[PINT_MAX_CAMERA_POSES];
Engine/neo-world-physics.ads:277:49    - Unknown word (POSES)         -- mCamera[PINT_MAX_CAMERA_POSES];
Engine/neo-world-physics.ads:279:16    - Unknown word (vector)        -- // Gravity vector for current test.
Engine/neo-world-physics.ads:279:8     - Unknown word (Gravity)       -- // Gravity vector for current test
Engine/neo-world-physics.ads:27:10     - Unknown word (SHAPE)        -- PINT_SHAPE_BOX,
Engine/neo-world-physics.ads:27:5      - Unknown word (PINT)         -- PINT_SHAPE_BOX,
Engine/neo-world-physics.ads:280:23    - Unknown word (Gravity)       -- Point mGravity;
Engine/neo-world-physics.ads:282:27    - Unknown word (calls)         -- Number of simulate calls per render frame. It
Engine/neo-world-physics.ads:282:44    - Unknown word (frame)         -- simulate calls per render frame. It is usually 1 but
Engine/neo-world-physics.ads:282:57    - Unknown word (usually)       -- render frame. It is usually 1 but it can be set
Engine/neo-world-physics.ads:282:88    - Unknown word (more)          -- but it can be set to more than 1 to
Engine/neo-world-physics.ads:282:93    - Unknown word (than)          -- it can be set to more than 1 to
Engine/neo-world-physics.ads:283:21    - Unknown word (speed)         -- // artificially speed up the test scene.
Engine/neo-world-physics.ads:283:39    - Unknown word (scene)         -- rtificially speed up the test scene.
Engine/neo-world-physics.ads:283:8     - Unknown word (artificially)  -- // artificially speed up the test scene
Engine/neo-world-physics.ads:284:34    - Unknown word (Calls)         -- udword mNbSimulateCallsPerFrame;
Engine/neo-world-physics.ads:284:42    - Unknown word (Frame)         -- mNbSimulateCallsPerFrame;
Engine/neo-world-physics.ads:284:9     - Unknown word (udword)        -- udword mNbSimulateCallsPerFra
Engine/neo-world-physics.ads:286:34    - Unknown word (call)          -- Timestep for one simulate call. It is usually 1/60
Engine/neo-world-physics.ads:286:46    - Unknown word (usually)       -- simulate call. It is usually 1/60 (for 60Hz).
Engine/neo-world-physics.ads:286:8     - Unknown word (Timestep)      -- // Timestep for one simulate call
Engine/neo-world-physics.ads:287:23    - Unknown word (Timestep)      -- float mTimestep;
Engine/neo-world-physics.ads:289:19    - Unknown word (char)          -- inline const char* GetTestName()
Engine/neo-world-physics.ads:28:16     - Unknown word (CONVEX)       -- PINT_SHAPE_CONVEX,
Engine/neo-world-physics.ads:292:41    - Unknown word (Allocateable)  -- MATERIAL_CREATE : public Allocateable
Engine/neo-world-physics.ads:295:28    - Unknown word (Friction)      -- mStaticFriction (0.0f),
Engine/neo-world-physics.ads:296:29    - Unknown word (Friction)      -- mDynamicFriction (0.0f),
Engine/neo-world-physics.ads:297:22    - Unknown word (Restitution)   -- mRestitution (0.0f)
Engine/neo-world-physics.ads:301:29    - Unknown word (Friction)      -- float mStaticFriction;
Engine/neo-world-physics.ads:302:30    - Unknown word (Friction)      -- float mDynamicFriction;
Engine/neo-world-physics.ads:303:23    - Unknown word (Restitution)   -- float mRestitution;
Engine/neo-world-physics.ads:306:37    - Unknown word (Allocateable)  -- SHAPE_CREATE : public Allocateable
Engine/neo-world-physics.ads:320:5     - Unknown word (Quat)          -- Quat mLocalRot
Engine/neo-world-physics.ads:326:15    - Unknown word (SPHERE)        -- struct PINT_SPHERE_CREATE : PINT_SHAPE
Engine/neo-world-physics.ads:328:24    - Unknown word (SPHERE)        -- PINT_SPHERE_CREATE(float radius
Engine/neo-world-physics.ads:32:12     - Unknown word (Joint)        -- enum PintJoint
Engine/neo-world-physics.ads:32:8      - Unknown word (Pint)         -- enum PintJoint
Engine/neo-world-physics.ads:330:41    - Unknown word (SPHERE)        -- mType = PINT_SHAPE_SPHERE;
Engine/neo-world-physics.ads:336:15    - Unknown word (CAPSULE)       -- struct PINT_CAPSULE_CREATE : PINT_SHAPE
Engine/neo-world-physics.ads:338:106   - Unknown word (Height)        -- mRadius(radius), mHalfHeight(half_height)
Engine/neo-world-physics.ads:338:118   - Unknown word (height)        -- radius), mHalfHeight(half_height)
Engine/neo-world-physics.ads:338:24    - Unknown word (CAPSULE)       -- PINT_CAPSULE_CREATE(float radius
Engine/neo-world-physics.ads:338:69    - Unknown word (height)        -- radius=0.0f, float half_height=0.0f) : mRadius(radius
Engine/neo-world-physics.ads:340:41    - Unknown word (CAPSULE)       -- mType = PINT_SHAPE_CAPSULE;
Engine/neo-world-physics.ads:344:27    - Unknown word (Height)        -- float mHalfHeight;
Engine/neo-world-physics.ads:347:15    - Unknown word (CYLINDER)      -- struct PINT_CYLINDER_CREATE : PINT_SHAPE
Engine/neo-world-physics.ads:349:107   - Unknown word (Height)        -- mRadius(radius), mHalfHeight(half_height)
Engine/neo-world-physics.ads:349:119   - Unknown word (height)        -- radius), mHalfHeight(half_height)
Engine/neo-world-physics.ads:349:24    - Unknown word (CYLINDER)      -- PINT_CYLINDER_CREATE(float radius
Engine/neo-world-physics.ads:349:70    - Unknown word (height)        -- radius=0.0f, float half_height=0.0f) : mRadius(radius
Engine/neo-world-physics.ads:34:10     - Unknown word (JOINT)        -- PINT_JOINT_UNDEFINED,
Engine/neo-world-physics.ads:34:16     - Unknown word (UNDEFINED)    -- PINT_JOINT_UNDEFINED,
Engine/neo-world-physics.ads:351:41    - Unknown word (CYLINDER)      -- mType = PINT_SHAPE_CYLINDER;
Engine/neo-world-physics.ads:355:27    - Unknown word (Height)        -- float mHalfHeight;
Engine/neo-world-physics.ads:35:10     - Unknown word (JOINT)        -- PINT_JOINT_SPHERICAL, // Spherical
Engine/neo-world-physics.ads:35:16     - Unknown word (SPHERICAL)    -- PINT_JOINT_SPHERICAL, // Spherical joint
Engine/neo-world-physics.ads:35:31     - Unknown word (Spherical)    -- JOINT_SPHERICAL, // Spherical joint a.k.a. point-to
Engine/neo-world-physics.ads:35:41     - Unknown word (joint)        -- SPHERICAL, // Spherical joint a.k.a. point-to-point
Engine/neo-world-physics.ads:35:96     - Unknown word (socket)       -- constraint a.k.a. ball-and-socket
Engine/neo-world-physics.ads:360:80    - Unknown word (Extents)       -- f, float z=0.0f) : mExtents(x, y, z)
Engine/neo-world-physics.ads:364:48    - Unknown word (extents)       -- CREATE(const Point& extents) : mExtents(extents
Engine/neo-world-physics.ads:364:60    - Unknown word (Extents)       -- const Point& extents) : mExtents(extents)
Engine/neo-world-physics.ads:364:68    - Unknown word (extents)       -- extents) : mExtents(extents)
Engine/neo-world-physics.ads:369:23    - Unknown word (Extents)       -- Point mExtents;
Engine/neo-world-physics.ads:36:10     - Unknown word (JOINT)        -- PINT_JOINT_HINGE, // Hinge joints
Engine/neo-world-physics.ads:36:16     - Unknown word (HINGE)        -- PINT_JOINT_HINGE, // Hinge joints
Engine/neo-world-physics.ads:36:29     - Unknown word (Hinge)        -- PINT_JOINT_HINGE, // Hinge joints a.k.a. revolute
Engine/neo-world-physics.ads:36:35     - Unknown word (joints)       -- JOINT_HINGE, // Hinge joints a.k.a. revolute joints
Engine/neo-world-physics.ads:36:49     - Unknown word (revolute)     -- Hinge joints a.k.a. revolute joints
Engine/neo-world-physics.ads:36:58     - Unknown word (joints)       -- joints a.k.a. revolute joints
Engine/neo-world-physics.ads:372:15    - Unknown word (CONVEX)        -- struct PINT_CONVEX_DATA_CREATE : public
Engine/neo-world-physics.ads:372:43    - Unknown word (Allocateable)  -- DATA_CREATE : public Allocateable
Engine/neo-world-physics.ads:374:24    - Unknown word (CONVEX)        -- PINT_CONVEX_DATA_CREATE(udword nb
Engine/neo-world-physics.ads:374:43    - Unknown word (udword)        -- PINT_CONVEX_DATA_CREATE(udword nb_verts=0, const Point
Engine/neo-world-physics.ads:374:53    - Unknown word (verts)         -- DATA_CREATE(udword nb_verts=0, const Point* verts
Engine/neo-world-physics.ads:374:75    - Unknown word (verts)         -- verts=0, const Point* verts=null) :
Engine/neo-world-physics.ads:375:24    - Unknown word (Verts)         -- mNbVerts (nb_verts),
Engine/neo-world-physics.ads:375:35    - Unknown word (verts)         -- mNbVerts (nb_verts),
Engine/neo-world-physics.ads:376:22    - Unknown word (Verts)         -- mVerts (verts),
Engine/neo-world-physics.ads:376:32    - Unknown word (verts)         -- mVerts (verts),
Engine/neo-world-physics.ads:37:10     - Unknown word (JOINT)        -- PINT_JOINT_PRISMATIC, // Prismatic
Engine/neo-world-physics.ads:37:16     - Unknown word (PRISMATIC)    -- PINT_JOINT_PRISMATIC, // Prismatic joints
Engine/neo-world-physics.ads:37:31     - Unknown word (Prismatic)    -- JOINT_PRISMATIC, // Prismatic joints, a.k.a. slider
Engine/neo-world-physics.ads:37:41     - Unknown word (joints)       -- PRISMATIC, // Prismatic joints, a.k.a. slider constraints
Engine/neo-world-physics.ads:37:56     - Unknown word (slider)       -- Prismatic joints, a.k.a. slider constraints
Engine/neo-world-physics.ads:381:26    - Unknown word (Verts)         -- udword mNbVerts;
Engine/neo-world-physics.ads:381:5     - Unknown word (udword)        -- udword mNbVerts
Engine/neo-world-physics.ads:382:26    - Unknown word (Verts)         -- const Point*        mVerts;
Engine/neo-world-physics.ads:386:15    - Unknown word (CONVEX)        -- struct PINT_CONVEX_CREATE : PINT_SHAPE
Engine/neo-world-physics.ads:388:38    - Unknown word (udword)        -- PINT_CONVEX_CREATE(udword nb_verts=0, const Point
Engine/neo-world-physics.ads:388:48    - Unknown word (verts)         -- CONVEX_CREATE(udword nb_verts=0, const Point* verts
Engine/neo-world-physics.ads:389:24    - Unknown word (Verts)         -- mNbVerts (nb_verts),
Engine/neo-world-physics.ads:38:10     - Unknown word (JOINT)        -- PINT_JOINT_FIXED, // Fixed joints
Engine/neo-world-physics.ads:38:35     - Unknown word (joints)       -- JOINT_FIXED, // Fixed joints
Engine/neo-world-physics.ads:395:5     - Unknown word (udword)        -- udword mNbVerts
Engine/neo-world-physics.ads:39:16     - Unknown word (DISTANCE)     -- PINT_JOINT_DISTANCE, // Distance joints
Engine/neo-world-physics.ads:39:30     - Unknown word (Distance)     -- JOINT_DISTANCE, // Distance joints
Engine/neo-world-physics.ads:39:39     - Unknown word (joints)       -- DISTANCE, // Distance joints
Engine/neo-world-physics.ads:406:28    - Unknown word (Surface)       -- SurfaceInterface mSurface;
Engine/neo-world-physics.ads:406:5     - Unknown word (Surface)       -- SurfaceInterface mSurface
Engine/neo-world-physics.ads:412:22    - Unknown word (Shapes)        -- mShapes (null),
Engine/neo-world-physics.ads:413:22    - Unknown word (Mass)          -- mMass (0.0f),
Engine/neo-world-physics.ads:414:22    - Unknown word (Mass)          -- mMassForInertia (-1.0f),
Engine/neo-world-physics.ads:414:29    - Unknown word (Inertia)       -- mMassForInertia (-1.0f),
Engine/neo-world-physics.ads:415:22    - Unknown word (Collision)     -- mCollisionGroup (0),
Engine/neo-world-physics.ads:416:22    - Unknown word (Kinematic)    -- mKinematic (false),
Engine/neo-world-physics.ads:416:36    - Unknown word (false)        -- mKinematic (false),
Engine/neo-world-physics.ads:417:37    - Unknown word (true)         -- mAddToWorld (true)
Engine/neo-world-physics.ads:421:22    - Unknown word (Linear)       -- mLinearVelocity.Zero();
Engine/neo-world-physics.ads:421:28    - Unknown word (Velocity)     -- mLinearVelocity.Zero();
Engine/neo-world-physics.ads:422:22    - Unknown word (Angular)      -- mAngularVelocity.Zero();
Engine/neo-world-physics.ads:422:29    - Unknown word (Velocity)     -- mAngularVelocity.Zero();
Engine/neo-world-physics.ads:423:30    - Unknown word (Offset)       -- mCOMLocalOffset.Zero();
Engine/neo-world-physics.ads:426:32    - Unknown word (Shapes)       -- PINT_SHAPE_CREATE* mShapes;
Engine/neo-world-physics.ads:428:5     - Unknown word (Quat)         -- Quat mRotation
Engine/neo-world-physics.ads:429:31    - Unknown word (Offset)       -- mCOMLocalOffset;
Engine/neo-world-physics.ads:430:23    - Unknown word (Linear)       -- Point mLinearVelocity;
Engine/neo-world-physics.ads:430:29    - Unknown word (Velocity)     -- Point mLinearVelocity;
Engine/neo-world-physics.ads:431:23    - Unknown word (Angular)      -- Point mAngularVelocity;
Engine/neo-world-physics.ads:431:30    - Unknown word (Velocity)     -- Point mAngularVelocity;
Engine/neo-world-physics.ads:432:23    - Unknown word (Mass)         -- float mMass;
Engine/neo-world-physics.ads:433:23    - Unknown word (Mass)         -- float mMassForInertia; // If negative
Engine/neo-world-physics.ads:433:30    - Unknown word (Inertia)      -- float mMassForInertia; // If negative, use
Engine/neo-world-physics.ads:433:46    - Unknown word (negative)     -- mMassForInertia; // If negative, use the same as mMass
Engine/neo-world-physics.ads:433:64    - Unknown word (same)         -- If negative, use the same as mMass.
Engine/neo-world-physics.ads:433:73    - Unknown word (Mass)         -- negative, use the same as mMass.
Engine/neo-world-physics.ads:434:30    - Unknown word (Collision)    -- PintCollisionGroup mCollisionGroup; // 0-31
Engine/neo-world-physics.ads:434:9     - Unknown word (Collision)    -- PintCollisionGroup mCollisionGroup
Engine/neo-world-physics.ads:435:22    - Unknown word (Kinematic)    -- bool mKinematic;
Engine/neo-world-physics.ads:438:28    - Unknown word (Shapes)       -- udword GetNbShapes() const
Engine/neo-world-physics.ads:440:30    - Unknown word (Shapes)       -- udword NbShapes = 0;
Engine/neo-world-physics.ads:441:62    - Unknown word (Shapes)       -- CREATE* CurrentShape = mShapes;
Engine/neo-world-physics.ads:461:15    - Unknown word (Handle)       -- PintObjectHandle mObject0;
Engine/neo-world-physics.ads:462:15    - Unknown word (Handle)       -- PintObjectHandle mObject1;
Engine/neo-world-physics.ads:465:15    - Unknown word (SPHERICAL)    -- struct PINT_SPHERICAL_JOINT_CREATE : PINT
Engine/neo-world-physics.ads:467:24    - Unknown word (SPHERICAL)    -- PINT_SPHERICAL_JOINT_CREATE()
Engine/neo-world-physics.ads:469:40    - Unknown word (SPHERICAL)    -- mType = PINT_JOINT_SPHERICAL;
Engine/neo-world-physics.ads:470:27    - Unknown word (Pivot)        -- mLocalPivot0.Zero();
Engine/neo-world-physics.ads:473:57    - Unknown word (Handle)       -- JOINT_CREATE(PintObjectHandle object0, PintObjectHandle
Engine/neo-world-physics.ads:473:83    - Unknown word (Handle)       -- jectHandle object0, PintObjectHandle object1, const Point
Engine/neo-world-physics.ads:486:15    - Unknown word (HINGE)        -- struct PINT_HINGE_JOINT_CREATE : PINT
Engine/neo-world-physics.ads:495:30    - Unknown word (Angle)        -- mMinLimitAngle = MIN_FLOAT;
Engine/neo-world-physics.ads:497:26    - Unknown word (temp)         -- //###temp
Engine/neo-world-physics.ads:498:28    - Unknown word (Anchor)       -- mGlobalAnchor.SetNotUsed();
Engine/neo-world-physics.ads:508:10    - Unknown word (temp)         -- //###temp
Engine/neo-world-physics.ads:509:29    - Unknown word (Anchor)       -- Point mGlobalAnchor;
Engine/neo-world-physics.ads:513:15    - Unknown word (PRISMATIC)    -- struct PINT_PRISMATIC_JOINT_CREATE : PINT
Engine/neo-world-physics.ads:515:26    - Unknown word (PRISMATIC)    -- PINT_PRISMATIC_JOINT_CREATE() :
Engine/neo-world-physics.ads:519:22    - Unknown word (Spring)       -- mSpringStiffness(0.0f),
Engine/neo-world-physics.ads:519:28    - Unknown word (Stiffness)    -- mSpringStiffness(0.0f),
Engine/neo-world-physics.ads:520:22    - Unknown word (Spring)       -- mSpringDamping (0.0f)
Engine/neo-world-physics.ads:520:28    - Unknown word (Damping)      -- mSpringDamping (0.0f)
Engine/neo-world-physics.ads:522:40    - Unknown word (PRISMATIC)    -- mType = PINT_JOINT_PRISMATIC;
Engine/neo-world-physics.ads:535:23    - Unknown word (Spring)       -- float mSpringStiffness;
Engine/neo-world-physics.ads:535:29    - Unknown word (Stiffness)    -- float mSpringStiffness;
Engine/neo-world-physics.ads:536:23    - Unknown word (Spring)       -- float mSpringDamping;
Engine/neo-world-physics.ads:536:29    - Unknown word (Damping)      -- float mSpringDamping;
Engine/neo-world-physics.ads:552:15    - Unknown word (DISTANCE)     -- struct PINT_DISTANCE_JOINT_CREATE : PINT
Engine/neo-world-physics.ads:554:24    - Unknown word (DISTANCE)     -- PINT_DISTANCE_JOINT_CREATE()
Engine/neo-world-physics.ads:556:40    - Unknown word (DISTANCE)     -- mType = PINT_JOINT_DISTANCE;
Engine/neo-world-physics.ads:559:25    - Unknown word (Distance)     -- mMinDistance = -1.0f;
Engine/neo-world-physics.ads:560:25    - Unknown word (Distance)     -- mMaxDistance = -1.0f;
Engine/neo-world-physics.ads:569:15    - Unknown word (ARTICULATION) -- struct PINT_ARTICULATION_CREATE : public Allocateable
Engine/neo-world-physics.ads:571:24    - Unknown word (ARTICULATION) -- PINT_ARTICULATION_CREATE()
Engine/neo-world-physics.ads:576:15    - Unknown word (ARTICULATED)  -- struct PINT_ARTICULATED_MOTOR_CREATE : public
Engine/neo-world-physics.ads:578:24    - Unknown word (ARTICULATED)  -- PINT_ARTICULATED_MOTOR_CREATE() :
Engine/neo-world-physics.ads:580:22    - Unknown word (Internal)     -- mInternalCompliance (0.0f),
Engine/neo-world-physics.ads:581:22    - Unknown word (Stiffness)    -- mStiffness (0.0f),
Engine/neo-world-physics.ads:582:22    - Unknown word (Damping)      -- mDamping (0.0f)
Engine/neo-world-physics.ads:584:28    - Unknown word (Velocity)     -- mTargetVelocity.SetNotUsed();
Engine/neo-world-physics.ads:585:28    - Unknown word (Orientation)  -- mTargetOrientation.SetNotUsed();
Engine/neo-world-physics.ads:588:28    - Unknown word (Orientation)  -- Quat mTargetOrientation;
Engine/neo-world-physics.ads:588:5     - Unknown word (Quat)         -- Quat mTargetOrientation
Engine/neo-world-physics.ads:591:23    - Unknown word (Internal)     -- float mInternalCompliance;
Engine/neo-world-physics.ads:592:23    - Unknown word (Stiffness)    -- float mStiffness;
Engine/neo-world-physics.ads:593:23    - Unknown word (Damping)      -- float mDamping;
Engine/neo-world-physics.ads:596:15    - Unknown word (ARTICULATED)  -- struct PINT_ARTICULATED_BODY_CREATE : public
Engine/neo-world-physics.ads:598:24    - Unknown word (ARTICULATED)  -- PINT_ARTICULATED_BODY_CREATE() :
Engine/neo-world-physics.ads:5:52      - Unknown word (Copyright)  -- Copyright (C) 2016 Justin Squirek
Engine/neo-world-physics.ads:5:71      - Unknown word (Justin)     -- Copyright (C) 2016 Justin Squirek
Engine/neo-world-physics.ads:5:78      - Unknown word (Squirek)    -- Copyright (C) 2016 Justin Squirek
Engine/neo-world-physics.ads:603:22    - Unknown word (Swing)        -- mSwingYLimit (0.0f),
Engine/neo-world-physics.ads:604:22    - Unknown word (Swing)        -- mSwingZLimit (0.0f),
Engine/neo-world-physics.ads:605:22    - Unknown word (Twist)        -- mTwistLowerLimit (0.0f),
Engine/neo-world-physics.ads:605:27    - Unknown word (Lower)        -- mTwistLowerLimit (0.0f),
Engine/neo-world-physics.ads:606:22    - Unknown word (Twist)        -- mTwistUpperLimit (0.0f),
Engine/neo-world-physics.ads:606:27    - Unknown word (Upper)        -- mTwistUpperLimit (0.0f),
Engine/neo-world-physics.ads:607:28    - Unknown word (Twist)        -- mEnableTwistLimit (false),
Engine/neo-world-physics.ads:607:41    - Unknown word (false)        -- mEnableTwistLimit (false),
Engine/neo-world-physics.ads:608:28    - Unknown word (Swing)        -- mEnableSwingLimit (false),
Engine/neo-world-physics.ads:608:41    - Unknown word (false)        -- mEnableSwingLimit (false),
Engine/neo-world-physics.ads:610:37    - Unknown word (false)        -- mUseMotor (false)
Engine/neo-world-physics.ads:614:15    - Unknown word (Handle)       -- PintObjectHandle mParent;
Engine/neo-world-physics.ads:618:25    - Unknown word (Swing)        -- float mSwingYLimit;
Engine/neo-world-physics.ads:619:25    - Unknown word (Swing)        -- float mSwingZLimit;
Engine/neo-world-physics.ads:620:25    - Unknown word (Twist)        -- float mTwistLowerLimit;
Engine/neo-world-physics.ads:620:30    - Unknown word (Lower)        -- float mTwistLowerLimit;
Engine/neo-world-physics.ads:621:25    - Unknown word (Twist)        -- float mTwistUpperLimit;
Engine/neo-world-physics.ads:621:30    - Unknown word (Upper)        -- float mTwistUpperLimit;
Engine/neo-world-physics.ads:626:10    - Unknown word (ARTICULATED)  -- PINT_ARTICULATED_MOTOR_CREATE mMotor
Engine/neo-world-physics.ads:629:15    - Unknown word (VEHICLE)      -- struct PINT_VEHICLE_INPUT : public Allocateable
Engine/neo-world-physics.ads:631:14    - Unknown word (VEHICLE)      -- PINT_VEHICLE_INPUT() :
Engine/neo-world-physics.ads:632:25    - Unknown word (false)        -- mAccelerate (false),
Engine/neo-world-physics.ads:645:12    - Unknown word (Vehicle)      -- enum PintVehicleDifferential
Engine/neo-world-physics.ads:645:19    - Unknown word (Differential) -- enum PintVehicleDifferential
Engine/neo-world-physics.ads:647:40    - Unknown word (slip)         -- LS_4WD, // limited slip differential for car
Engine/neo-world-physics.ads:647:45    - Unknown word (differential) -- // limited slip differential for car with 4 driven
Engine/neo-world-physics.ads:647:5     - Unknown word (DIFFERENTIAL) -- DIFFERENTIAL_LS_4WD, // limited
Engine/neo-world-physics.ads:647:73    - Unknown word (driven)       -- differential for car with 4 driven wheels
Engine/neo-world-physics.ads:647:80    - Unknown word (wheels)       -- for car with 4 driven wheels
Engine/neo-world-physics.ads:648:21    - Unknown word (FRONTWD)      -- DIFFERENTIAL_LS_FRONTWD, // limited slip differentia
Engine/neo-world-physics.ads:648:42    - Unknown word (slip)         -- FRONTWD, // limited slip differential for car
Engine/neo-world-physics.ads:648:47    - Unknown word (differential) -- FRONTWD, // limited slip differential for car with front-wheel
Engine/neo-world-physics.ads:648:5     - Unknown word (DIFFERENTIAL) -- DIFFERENTIAL_LS_FRONTWD, // limited
Engine/neo-world-physics.ads:648:79    - Unknown word (wheel)        -- fferential for car with front-wheel drive
Engine/neo-world-physics.ads:648:85    - Unknown word (drive)        -- car with front-wheel drive
Engine/neo-world-physics.ads:649:21    - Unknown word (REARWD)       -- DIFFERENTIAL_LS_REARWD, // limited slip
Engine/neo-world-physics.ads:649:43    - Unknown word (slip)         -- REARWD, // limited slip differential for car
Engine/neo-world-physics.ads:649:48    - Unknown word (differential) -- // limited slip differential for car with rear-wheel
Engine/neo-world-physics.ads:649:5     - Unknown word (DIFFERENTIAL) -- DIFFERENTIAL_LS_REARWD, // limited
Engine/neo-world-physics.ads:649:74    - Unknown word (rear)         -- differential for car with rear-wheel drive
Engine/neo-world-physics.ads:649:79    - Unknown word (wheel)        -- ifferential for car with rear-wheel drive
Engine/neo-world-physics.ads:649:85    - Unknown word (drive)        -- car with rear-wheel drive
Engine/neo-world-physics.ads:650:39    - Unknown word (differential) -- OPEN_4WD, // open differential for car with 4 driven
Engine/neo-world-physics.ads:650:5     - Unknown word (DIFFERENTIAL) -- DIFFERENTIAL_OPEN_4WD, // open
Engine/neo-world-physics.ads:650:67    - Unknown word (driven)       -- differential for car with 4 driven wheels
Engine/neo-world-physics.ads:650:74    - Unknown word (wheels)       -- for car with 4 driven wheels
Engine/neo-world-physics.ads:651:23    - Unknown word (FRONTWD)      -- DIFFERENTIAL_OPEN_FRONTWD, // open differential
Engine/neo-world-physics.ads:651:41    - Unknown word (differential) -- OPEN_FRONTWD, // open differential for car with front-wheel
Engine/neo-world-physics.ads:651:5     - Unknown word (DIFFERENTIAL) -- DIFFERENTIAL_OPEN_FRONTWD, // open
Engine/neo-world-physics.ads:651:73    - Unknown word (wheel)        -- fferential for car with front-wheel drive
Engine/neo-world-physics.ads:651:79    - Unknown word (drive)        -- car with front-wheel drive
Engine/neo-world-physics.ads:652:23    - Unknown word (REARWD)       -- DIFFERENTIAL_OPEN_REARWD, // open differential
Engine/neo-world-physics.ads:652:66    - Unknown word (rear)         -- differential for car with rear-wheel drive
Engine/neo-world-physics.ads:652:71    - Unknown word (wheel)        -- ifferential for car with rear-wheel drive
Engine/neo-world-physics.ads:652:77    - Unknown word (drive)        -- car with rear-wheel drive
Engine/neo-world-physics.ads:656:21    - Unknown word (currently)    -- // This struct is currently based on the PhysX API
Engine/neo-world-physics.ads:656:44    - Unknown word (Phys)         -- currently based on the PhysX API.
Engine/neo-world-physics.ads:656:6     - Unknown word (This)         -- // This struct is currently
Engine/neo-world-physics.ads:657:15    - Unknown word (VEHICLE)      -- struct PINT_VEHICLE_CREATE : public Allocateable
Engine/neo-world-physics.ads:659:24    - Unknown word (VEHICLE)      -- PINT_VEHICLE_CREATE() :
Engine/neo-world-physics.ads:660:22    - Unknown word (Chassis)      -- mChassisMass (0.0f),
Engine/neo-world-physics.ads:661:22    - Unknown word (Chassis)      -- mChassisMOICoeffY (0.0f
Engine/neo-world-physics.ads:661:32    - Unknown word (Coeff)        -- mChassisMOICoeffY (0.0f),
Engine/neo-world-physics.ads:662:22    - Unknown word (Chassis)      -- mChassisCMOffsetY (0.0f
Engine/neo-world-physics.ads:662:31    - Unknown word (Offset)       -- mChassisCMOffsetY (0.0f),
Engine/neo-world-physics.ads:663:22    - Unknown word (Chassis)      -- mChassisCMOffsetZ (0.0f
Engine/neo-world-physics.ads:663:31    - Unknown word (Offset)       -- mChassisCMOffsetZ (0.0f),
Engine/neo-world-physics.ads:664:40    - Unknown word (Offset)       -- mForceApplicationCMOffsetY (0.0f),
Engine/neo-world-physics.ads:665:22    - Unknown word (Wheel)        -- mWheelMass (0.0f)
Engine/neo-world-physics.ads:666:22    - Unknown word (Wheel)        -- mWheelMaxBrakeTorqueFront
Engine/neo-world-physics.ads:666:35    - Unknown word (Torque)       -- mWheelMaxBrakeTorqueFront (0.0f),
Engine/neo-world-physics.ads:667:22    - Unknown word (Wheel)        -- mWheelMaxBrakeTorqueRear
Engine/neo-world-physics.ads:667:35    - Unknown word (Torque)       -- mWheelMaxBrakeTorqueRear (0.0f),
Engine/neo-world-physics.ads:667:41    - Unknown word (Rear)         -- mWheelMaxBrakeTorqueRear (0.0f),
Engine/neo-world-physics.ads:668:22    - Unknown word (Wheel)        -- mWheelMaxSteerFront (
Engine/neo-world-physics.ads:668:30    - Unknown word (Steer)        -- mWheelMaxSteerFront (0.0f),
Engine/neo-world-physics.ads:669:22    - Unknown word (Wheel)        -- mWheelMaxSteerRear (0
Engine/neo-world-physics.ads:669:30    - Unknown word (Steer)        -- mWheelMaxSteerRear (0.0f),
Engine/neo-world-physics.ads:669:35    - Unknown word (Rear)         -- mWheelMaxSteerRear (0.0f),
Engine/neo-world-physics.ads:670:26    - Unknown word (Friction)     -- mTireFrictionMultiplier (0.0f)
Engine/neo-world-physics.ads:670:34    - Unknown word (Multiplier)   -- mTireFrictionMultiplier (0.0f),
Engine/neo-world-physics.ads:671:32    - Unknown word (Torque)       -- mEnginePeakTorque (0.0f),
Engine/neo-world-physics.ads:672:31    - Unknown word (Omega)        -- mEngineMaxOmega (0.0f),
Engine/neo-world-physics.ads:673:22    - Unknown word (Gears)        -- mGearsSwitchTime (0.0f
Engine/neo-world-physics.ads:674:22    - Unknown word (Clutch)       -- mClutchStrength (0.0f
Engine/neo-world-physics.ads:674:28    - Unknown word (Strength)     -- mClutchStrength (0.0f),
Engine/neo-world-physics.ads:675:22    - Unknown word (Differential) -- mDifferential (DIFFERENTIAL
Engine/neo-world-physics.ads:676:22    - Unknown word (Susp)         -- mSuspMaxCompression
Engine/neo-world-physics.ads:676:29    - Unknown word (Compression)  -- mSuspMaxCompression (0.0f),
Engine/neo-world-physics.ads:677:22    - Unknown word (Susp)         -- mSuspMaxDroop (0.0f
Engine/neo-world-physics.ads:677:29    - Unknown word (Droop)        -- mSuspMaxDroop (0.0f),
Engine/neo-world-physics.ads:678:22    - Unknown word (Susp)         -- mSuspSpringStrength
Engine/neo-world-physics.ads:678:26    - Unknown word (Spring)       -- mSuspSpringStrength (0.0f)
Engine/neo-world-physics.ads:678:32    - Unknown word (Strength)     -- mSuspSpringStrength (0.0f),
Engine/neo-world-physics.ads:679:22    - Unknown word (Susp)         -- mSuspSpringDamperRate
Engine/neo-world-physics.ads:679:32    - Unknown word (Damper)       -- mSuspSpringDamperRate (0.0f),
Engine/neo-world-physics.ads:680:22    - Unknown word (Susp)         -- mSuspCamberAngleAtRest
Engine/neo-world-physics.ads:680:26    - Unknown word (Camber)       -- mSuspCamberAngleAtRest (0.0f
Engine/neo-world-physics.ads:681:26    - Unknown word (Camber)       -- mSuspCamberAngleAtMaxCompr (0.
Engine/neo-world-physics.ads:681:42    - Unknown word (Compr)        -- mSuspCamberAngleAtMaxCompr (0.0f),
Engine/neo-world-physics.ads:682:26    - Unknown word (Camber)       -- mSuspCamberAngleAtMaxDroop (0.
Engine/neo-world-physics.ads:682:42    - Unknown word (Droop)        -- mSuspCamberAngleAtMaxDroop (0.0f)
Engine/neo-world-physics.ads:691:8     - Unknown word (Chassis)      -- // Chassis
Engine/neo-world-physics.ads:693:52    - Unknown word (Vehicle)      -- mChassisMass; // See PxVehicleChassisData::mMass for
Engine/neo-world-physics.ads:694:112   - Unknown word (chassis)      -- the y-component of the chassis moment of inertia."
Engine/neo-world-physics.ads:694:120   - Unknown word (moment)       -- component of the chassis moment of inertia."
Engine/neo-world-physics.ads:694:130   - Unknown word (inertia)      -- the chassis moment of inertia."
Engine/neo-world-physics.ads:694:18    - Unknown word (tweaking)     -- // "A bit of tweaking here.  The car will
Engine/neo-world-physics.ads:694:27    - Unknown word (here)         -- "A bit of tweaking here. The car will have
Engine/neo-world-physics.ads:694:42    - Unknown word (will)         -- tweaking here.  The car will have more responsive
Engine/neo-world-physics.ads:694:47    - Unknown word (have)         -- here. The car will have more responsive turning
Engine/neo-world-physics.ads:694:52    - Unknown word (more)         -- The car will have more responsive turning if
Engine/neo-world-physics.ads:694:57    - Unknown word (responsive)   -- The car will have more responsive turning if we reduce
Engine/neo-world-physics.ads:694:68    - Unknown word (turning)      -- have more responsive turning if we reduce the y-component
Engine/neo-world-physics.ads:695:33    - Unknown word (Coeff)        -- mChassisMOICoeffY; // See PxVehicleChassi
Engine/neo-world-physics.ads:695:55    - Unknown word (Vehicle)      -- assisMOICoeffY; // See PxVehicleChassisData::mMOI for
Engine/neo-world-physics.ads:696:55    - Unknown word (Vehicle)      -- assisCMOffsetY; // See PxVehicleChassisData::mCMOffset
Engine/neo-world-physics.ads:697:55    - Unknown word (Vehicle)      -- assisCMOffsetZ; // See PxVehicleChassisData::mCMOffset
Engine/neo-world-physics.ads:700:8     - Unknown word (Wheels)       -- // Wheels
Engine/neo-world-physics.ads:702:52    - Unknown word (supports)     -- mWheelOffset[4]; // Only supports 4-wheeled vehicles for
Engine/neo-world-physics.ads:702:63    - Unknown word (wheeled)      -- // Only supports 4-wheeled vehicles for now
Engine/neo-world-physics.ads:702:71    - Unknown word (vehicles)     -- Only supports 4-wheeled vehicles for now
Engine/neo-world-physics.ads:704:36    - Unknown word (Torque)       -- mWheelMaxBrakeTorqueFront; // See PxVehicleWheelD
Engine/neo-world-physics.ads:704:86    - Unknown word (Torque)       -- PxVehicleWheelData::mMaxBrakeTorque for details
Engine/neo-world-physics.ads:705:42    - Unknown word (Rear)         -- mWheelMaxBrakeTorqueRear; // See PxVehicleWheelData
Engine/neo-world-physics.ads:706:31    - Unknown word (Steer)        -- mWheelMaxSteerFront; // See PxVehicleWhee
Engine/neo-world-physics.ads:706:77    - Unknown word (Steer)        -- PxVehicleWheelData::mMaxSteer for details
Engine/neo-world-physics.ads:707:31    - Unknown word (Steer)        -- mWheelMaxSteerRear; // See PxVehicleWhe
Engine/neo-world-physics.ads:707:36    - Unknown word (Rear)         -- mWheelMaxSteerRear; // See PxVehicleWheelDa
Engine/neo-world-physics.ads:708:35    - Unknown word (Multiplier)   -- mTireFrictionMultiplier;
Engine/neo-world-physics.ads:712:32    - Unknown word (Omega)        -- mEngineMaxOmega; // See PxVehicleEngineD
Engine/neo-world-physics.ads:712:76    - Unknown word (Omega)        -- PxVehicleEngineData::mMaxOmega for details
Engine/neo-world-physics.ads:713:8     - Unknown word (Gears)        -- // Gears
Engine/neo-world-physics.ads:714:23    - Unknown word (Gears)        -- float mGearsSwitchTime; // See
Engine/neo-world-physics.ads:714:61    - Unknown word (Gears)        -- // See PxVehicleGearsData::mSwitchTime for
Engine/neo-world-physics.ads:715:8     - Unknown word (Clutch)       -- // Clutch
Engine/neo-world-physics.ads:716:23    - Unknown word (Clutch)       -- float mClutchStrength; // See
Engine/neo-world-physics.ads:716:29    - Unknown word (Strength)     -- float mClutchStrength; // See PxVehicleClutchD
Engine/neo-world-physics.ads:716:60    - Unknown word (Clutch)       -- // See PxVehicleClutchData::mStrength for details
Engine/neo-world-physics.ads:716:73    - Unknown word (Strength)     -- PxVehicleClutchData::mStrength for details
Engine/neo-world-physics.ads:717:8     - Unknown word (Differential) -- // Differential
Engine/neo-world-physics.ads:718:16    - Unknown word (Differential) -- PintVehicleDifferential mDifferential;
Engine/neo-world-physics.ads:718:33    - Unknown word (Differential) -- PintVehicleDifferential mDifferential; // See PxVehicleDiffe
Engine/neo-world-physics.ads:720:8     - Unknown word (Suspension)   -- // Suspension
Engine/neo-world-physics.ads:721:30    - Unknown word (Compression)  -- float mSuspMaxCompression; // See PxVehicleSuspensio
Engine/neo-world-physics.ads:721:62    - Unknown word (Suspension)   -- // See PxVehicleSuspensionData::mMaxCompression
Engine/neo-world-physics.ads:721:82    - Unknown word (Compression)  -- PxVehicleSuspensionData::mMaxCompression for details
Engine/neo-world-physics.ads:722:30    - Unknown word (Droop)        -- float mSuspMaxDroop; // See PxVehicleSuspe
Engine/neo-world-physics.ads:722:60    - Unknown word (Suspension)   -- // See PxVehicleSuspensionData::mMaxDroop for details
Engine/neo-world-physics.ads:722:80    - Unknown word (Droop)        -- PxVehicleSuspensionData::mMaxDroop for details
Engine/neo-world-physics.ads:723:33    - Unknown word (Strength)     -- mSuspSpringStrength; // See PxVehicleSuspensio
Engine/neo-world-physics.ads:723:62    - Unknown word (Suspension)   -- // See PxVehicleSuspensionData::mSpringStrength
Engine/neo-world-physics.ads:724:33    - Unknown word (Damper)       -- mSuspSpringDamperRate; // See PxVehicleSuspe
Engine/neo-world-physics.ads:724:64    - Unknown word (Suspension)   -- // See PxVehicleSuspensionData::mSpringDamperRate
Engine/neo-world-physics.ads:724:87    - Unknown word (Damper)       -- VehicleSuspensionData::mSpringDamperRate for details
Engine/neo-world-physics.ads:725:27    - Unknown word (Camber)       -- float mSuspCamberAngleAtRest; // See
Engine/neo-world-physics.ads:725:82    - Unknown word (Camber)       -- PxVehicleSuspensionData::mCamberAtRest for details
Engine/neo-world-physics.ads:726:43    - Unknown word (Compr)        -- mSuspCamberAngleAtMaxCompr; // See PxVehicleSuspensionD
Engine/neo-world-physics.ads:726:95    - Unknown word (Compression)  -- leSuspensionData::mCamberAtMaxCompression for details
Engine/neo-world-physics.ads:727:43    - Unknown word (Droop)        -- mSuspCamberAngleAtMaxDroop; // See PxVehicleSuspensionD
Engine/neo-world-physics.ads:735:18    - Unknown word (Caps)         -- // See the PintCaps ctor comments for explanation
Engine/neo-world-physics.ads:735:41    - Unknown word (explanations) -- PintCaps ctor comments for explanations about the caps.
Engine/neo-world-physics.ads:735:54    - Unknown word (about)        -- comments for explanations about the caps.
Engine/neo-world-physics.ads:735:64    - Unknown word (caps)         -- explanations about the caps.
Engine/neo-world-physics.ads:736:14    - Unknown word (Caps)         -- struct PintCaps : public Allocateable
Engine/neo-world-physics.ads:738:13    - Unknown word (Caps)         -- PintCaps();
Engine/neo-world-physics.ads:740:19    - Unknown word (Rigid)        -- bool mSupportRigidBodySimulation;
Engine/neo-world-physics.ads:741:19    - Unknown word (Cylinders)    -- bool mSupportCylinders;
Engine/neo-world-physics.ads:742:19    - Unknown word (Convexes)     -- bool mSupportConvexes;
Engine/neo-world-physics.ads:744:26    - Unknown word (Inertia)      -- bool mSupportMassForInertia;
Engine/neo-world-physics.ads:745:19    - Unknown word (Kinematics)   -- bool mSupportKinematics;
Engine/neo-world-physics.ads:746:19    - Unknown word (Collision)    -- bool mSupportCollisionGroups;
Engine/neo-world-physics.ads:747:19    - Unknown word (Compounds)    -- bool mSupportCompounds;
Engine/neo-world-physics.ads:750:19    - Unknown word (Spherical)    -- bool mSupportSphericalJoints;
Engine/neo-world-physics.ads:750:28    - Unknown word (Joints)       -- bool mSupportSphericalJoints;
Engine/neo-world-physics.ads:751:19    - Unknown word (Hinge)        -- bool mSupportHingeJoints;
Engine/neo-world-physics.ads:751:24    - Unknown word (Joints)       -- bool mSupportHingeJoints;
Engine/neo-world-physics.ads:752:24    - Unknown word (Joints)       -- bool mSupportFixedJoints;
Engine/neo-world-physics.ads:753:19    - Unknown word (Prismatic)    -- bool mSupportPrismaticJoints;
Engine/neo-world-physics.ads:753:28    - Unknown word (Joints)       -- bool mSupportPrismaticJoints;
Engine/neo-world-physics.ads:754:27    - Unknown word (Joints)       -- bool mSupportDistanceJoints;
Engine/neo-world-physics.ads:755:19    - Unknown word (Articulations) -- bool mSupportArticulations;
Engine/neo-world-physics.ads:757:19    - Unknown word (Phantoms)      -- bool mSupportPhantoms;
Engine/neo-world-physics.ads:75:6      - Unknown word (Shape)        -- -- Shape --
Engine/neo-world-physics.ads:760:22    - Unknown word (Sweeps)        -- bool mSupportBoxSweeps;
Engine/neo-world-physics.ads:761:19    - Unknown word (Sphere)        -- bool mSupportSphereSweeps;
Engine/neo-world-physics.ads:761:25    - Unknown word (Sweeps)        -- bool mSupportSphereSweeps;
Engine/neo-world-physics.ads:762:19    - Unknown word (Capsule)       -- bool mSupportCapsuleSweeps;
Engine/neo-world-physics.ads:762:26    - Unknown word (Sweeps)        -- bool mSupportCapsuleSweeps;
Engine/neo-world-physics.ads:763:19    - Unknown word (Convex)        -- bool mSupportConvexSweeps;
Engine/neo-world-physics.ads:763:25    - Unknown word (Sweeps)        -- bool mSupportConvexSweeps;
Engine/neo-world-physics.ads:765:19    - Unknown word (Sphere)        -- bool mSupportSphereOverlaps;
Engine/neo-world-physics.ads:765:25    - Unknown word (Overlaps)      -- bool mSupportSphereOverlaps;
Engine/neo-world-physics.ads:766:22    - Unknown word (Overlaps)      -- bool mSupportBoxOverlaps;
Engine/neo-world-physics.ads:767:19    - Unknown word (Capsule)       -- bool mSupportCapsuleOverlaps;
Engine/neo-world-physics.ads:767:26    - Unknown word (Overlaps)      -- bool mSupportCapsuleOverlaps;
Engine/neo-world-physics.ads:768:19    - Unknown word (Convex)        -- bool mSupportConvexOverlaps;
Engine/neo-world-physics.ads:768:25    - Unknown word (Overlaps)      -- bool mSupportConvexOverlaps;
Engine/neo-world-physics.ads:770:19    - Unknown word (Vehicles)      -- bool mSupportVehicles;
Engine/neo-world-physics.ads:773:14    - Unknown word (Disabled)      -- struct PintDisabledGroups : public Allocateable
Engine/neo-world-physics.ads:775:19    - Unknown word (Disabled)      -- PintDisabledGroups(PintCollisionGroup
Engine/neo-world-physics.ads:775:38    - Unknown word (Collision)     -- PintDisabledGroups(PintCollisionGroup group0, PintCollisionGro
Engine/neo-world-physics.ads:789:19    - Unknown word (Impact)        -- Point mImpact;
Engine/neo-world-physics.ads:78:14     - Unknown word (Kind)         -- type Shape_Kind is (Sphere_Shape, Capsule
Engine/neo-world-physics.ads:78:23     - Unknown word (Sphere)       -- type Shape_Kind is (Sphere_Shape, Capsule_Shape
Engine/neo-world-physics.ads:78:30     - Unknown word (Shape)        -- Shape_Kind is (Sphere_Shape, Capsule_Shape, Cylinder
Engine/neo-world-physics.ads:78:37     - Unknown word (Capsule)      -- Kind is (Sphere_Shape, Capsule_Shape, Cylinder_Shape
Engine/neo-world-physics.ads:78:45     - Unknown word (Shape)        -- Sphere_Shape, Capsule_Shape, Cylinder_Shape,  Box
Engine/neo-world-physics.ads:78:52     - Unknown word (Cylinder)     -- Shape, Capsule_Shape, Cylinder_Shape, Box_Shape, Convex
Engine/neo-world-physics.ads:78:8      - Unknown word (Shape)        -- type Shape_Kind is (Sphere_Shape
Engine/neo-world-physics.ads:78:80     - Unknown word (Convex)       -- Cylinder_Shape, Box_Shape, Convex_Shape, Mesh_Shape);
Engine/neo-world-physics.ads:792:20    - Unknown word (Triangle)      -- udword mTriangleIndex;
Engine/neo-world-physics.ads:795:14    - Unknown word (Overlap)       -- struct PintOverlapObjectHit : public Allocateabl
Engine/neo-world-physics.ads:79:21     - Unknown word (Kind)         -- type Shape_State (Kind : Shape_Kind) is record
Engine/neo-world-physics.ads:79:34     - Unknown word (Kind)         -- State (Kind : Shape_Kind) is record
Engine/neo-world-physics.ads:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-world-physics.ads:807:20    - Unknown word (Overlap)       -- struct PintSphereOverlapData : public Allocateable
Engine/neo-world-physics.ads:812:17    - Unknown word (Overlap)       -- struct PintBoxOverlapData : public Allocateable
Engine/neo-world-physics.ads:817:21    - Unknown word (Overlap)       -- struct PintCapsuleOverlapData : public Allocateable
Engine/neo-world-physics.ads:822:20    - Unknown word (Overlap)       -- struct PintConvexOverlapData : public Allocateable
Engine/neo-world-physics.ads:828:14    - Unknown word (Sweep)         -- struct PintSweepData
Engine/neo-world-physics.ads:82:12     - Unknown word (Kind)         -- case Kind is
Engine/neo-world-physics.ads:834:17    - Unknown word (Sweep)         -- struct PintBoxSweepData : public PintBoxOverlapDa
Engine/neo-world-physics.ads:834:67    - Unknown word (Sweep)         -- intBoxOverlapData, public PintSweepData
Engine/neo-world-physics.ads:838:20    - Unknown word (Sweep)         -- struct PintSphereSweepData : public PintSphereOverla
Engine/neo-world-physics.ads:838:73    - Unknown word (Sweep)         -- SphereOverlapData, public PintSweepData
Engine/neo-world-physics.ads:83:14     - Unknown word (Sphere)       -- when Sphere_Shape | Cylinder_Shape
Engine/neo-world-physics.ads:83:29     - Unknown word (Cylinder)     -- when Sphere_Shape | Cylinder_Shape | Capsule_Shape
Engine/neo-world-physics.ads:83:46     - Unknown word (Capsule)      -- Shape | Cylinder_Shape | Capsule_Shape =>
Engine/neo-world-physics.ads:857:14    - Unknown word (void)          -- virtual void DrawLine
Engine/neo-world-physics.ads:857:26    - Unknown word (Draw)          -- virtual void        DrawLine (const
Engine/neo-world-physics.ads:857:94    - Unknown word (color)         -- Point& p1, const Point& color)
Engine/neo-world-physics.ads:858:113   - Unknown word (color)         -- Point& p2, const Point& color)
Engine/neo-world-physics.ads:858:14    - Unknown word (void)          -- virtual void DrawTriangle
Engine/neo-world-physics.ads:858:26    - Unknown word (Draw)          -- virtual void        DrawTriangle (const
Engine/neo-world-physics.ads:858:30    - Unknown word (Triangle)      -- virtual void        DrawTriangle (const Point
Engine/neo-world-physics.ads:859:26    - Unknown word (Draw)          -- virtual void        DrawWirefameAABB
Engine/neo-world-physics.ads:859:30    - Unknown word (Wirefame)      -- virtual void        DrawWirefameAABB (const AABB
Engine/neo-world-physics.ads:859:38    - Unknown word (AABB)          -- void DrawWirefameAABB (const AABB&
Engine/neo-world-physics.ads:859:57    - Unknown word (AABB)          -- rawWirefameAABB (const AABB& box, const Point& color
Engine/neo-world-physics.ads:859:81    - Unknown word (color)         -- AABB& box, const Point& color)
Engine/neo-world-physics.ads:85:16     - Unknown word (Kind)         -- case Kind is
Engine/neo-world-physics.ads:860:26    - Unknown word (Draw)          -- virtual void        DrawWirefameOBB
Engine/neo-world-physics.ads:860:30    - Unknown word (Wirefame)      -- virtual void        DrawWirefameOBB (const OBB
Engine/neo-world-physics.ads:860:81    - Unknown word (color)         -- OBB& box, const Point& color)
Engine/neo-world-physics.ads:861:26    - Unknown word (Draw)          -- virtual void        DrawSphere (float
Engine/neo-world-physics.ads:861:73    - Unknown word (pose)          -- float radius, const PR& pose)
Engine/neo-world-physics.ads:862:61    - Unknown word (extents)       -- (const Point& extents, const PR& pose)
Engine/neo-world-physics.ads:862:80    - Unknown word (pose)          -- extents, const PR& pose)
Engine/neo-world-physics.ads:863:70    - Unknown word (height)        -- float radius, float height, const PR& pose)
Engine/neo-world-physics.ads:863:88    - Unknown word (pose)          -- float height, const PR& pose)
Engine/neo-world-physics.ads:865:122   - Unknown word (hits)          -- const PintRaycastHit* hits, const Point& color
Engine/neo-world-physics.ads:866:123   - Unknown word (hits)          -- const PintBooleanHit* hits, const Point& color
Engine/neo-world-physics.ads:868:124   - Unknown word (hits)          -- const PintRaycastHit* hits, const Point& color
Engine/neo-world-physics.ads:868:90    - Unknown word (sweep)         -- PintBoxSweepData* box_sweep_data, const PintRaycastHit
Engine/neo-world-physics.ads:869:133   - Unknown word (hits)          -- const PintRaycastHit* hits, const Point& color
Engine/neo-world-physics.ads:869:92    - Unknown word (sphere)        -- PintSphereSweepData* sphere_sweep_data, const PintRaycast
Engine/neo-world-physics.ads:869:99    - Unknown word (sweep)         -- PintSphereSweepData* sphere_sweep_data, const PintRaycastHit
Engine/neo-world-physics.ads:86:18     - Unknown word (Cylider)      -- when Cylider_Shape | Capsule_Shape
Engine/neo-world-physics.ads:86:34     - Unknown word (Capsule)      -- when Cylider_Shape | Capsule_Shape =>
Engine/neo-world-physics.ads:870:100   - Unknown word (sweep)         -- PintCapsuleSweepData* capsule_sweep_data, const PintRaycastHit
Engine/neo-world-physics.ads:870:134   - Unknown word (hits)          -- const PintRaycastHit* hits, const Point& color
Engine/neo-world-physics.ads:870:92    - Unknown word (capsule)       -- PintCapsuleSweepData* capsule_sweep_data, const PintRaycast
Engine/neo-world-physics.ads:871:92    - Unknown word (convex)        -- PintConvexSweepData* convex_sweep_data, const PintRaycast
Engine/neo-world-physics.ads:871:99    - Unknown word (sweep)         -- PintConvexSweepData* convex_sweep_data, const PintRaycastHit
Engine/neo-world-physics.ads:873:102   - Unknown word (overlap)       -- PintSphereOverlapData* sphere_overlap_data, const PintBooleanHit
Engine/neo-world-physics.ads:873:95    - Unknown word (sphere)        -- PintSphereOverlapData* sphere_overlap_data, const
Engine/neo-world-physics.ads:874:104   - Unknown word (overlap)       -- PintSphereOverlapData* sphere_overlap_data, const PintOverlapObject
Engine/neo-world-physics.ads:874:97    - Unknown word (sphere)        -- PintSphereOverlapData* sphere_overlap_data, const
Engine/neo-world-physics.ads:875:95    - Unknown word (overlap)       -- PintBoxOverlapData* box_overlap_data, const PintBooleanHit
Engine/neo-world-physics.ads:876:97    - Unknown word (overlap)       -- PintBoxOverlapData* box_overlap_data, const PintOverlapObject
Engine/neo-world-physics.ads:877:105   - Unknown word (overlap)       -- ntCapsuleOverlapData* capsule_overlap_data, const PintBooleanHit
Engine/neo-world-physics.ads:877:97    - Unknown word (capsule)       -- PintCapsuleOverlapData* capsule_overlap_data, const
Engine/neo-world-physics.ads:878:99    - Unknown word (capsule)       -- PintCapsuleOverlapData* capsule_overlap_data, const
Engine/neo-world-physics.ads:87:20     - Unknown word (Height)       -- Half_Height : Real;
Engine/neo-world-physics.ads:881:12    - Unknown word (Flag)          -- enum PintFlag
Engine/neo-world-physics.ads:884:14    - Unknown word (RAYTRACING)    -- PINT_HAS_RAYTRACING_WINDOW = (1<<1),
Engine/neo-world-physics.ads:885:51    - Unknown word (RAYTRACING)    -- PINT_IS_ACTIVE|PINT_HAS_RAYTRACING_WINDOW,
Engine/neo-world-physics.ads:891:31    - Unknown word (Helper)        -- Pint() : mOMHelper(null), mSQHelper(null
Engine/neo-world-physics.ads:891:48    - Unknown word (Helper)        -- mOMHelper(null), mSQHelper(null), mUserData(null
Engine/neo-world-physics.ads:894:46    - Unknown word (char)          -- NotImplemented(const char* name)
Engine/neo-world-physics.ads:896:51    - Unknown word (been)          -- implemented function %s has been called. Test may behave
Engine/neo-world-physics.ads:896:56    - Unknown word (called)       -- function %s has been called. Test may behave incorrectly
Engine/neo-world-physics.ads:896:73    - Unknown word (behave)       -- been called. Test may behave incorrectly.\n", GetName
Engine/neo-world-physics.ads:896:80    - Unknown word (incorrectly)  -- called. Test may behave incorrectly.\n", GetName(), name
Engine/neo-world-physics.ads:899:20    - Unknown word (char)         -- virtual const char* GetName()
Engine/neo-world-physics.ads:8:30      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-world-physics.ads:8:70      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-world-physics.ads:8:87      - Unknown word (later)        -- at your option) any later version.
Engine/neo-world-physics.ads:900:29    - Unknown word (Caps)         -- virtual void        GetCaps(PintCaps& caps)  const
Engine/neo-world-physics.ads:900:38    - Unknown word (Caps)         -- void GetCaps(PintCaps& caps)  const
Engine/neo-world-physics.ads:900:44    - Unknown word (caps)         -- GetCaps(PintCaps& caps) const
Engine/neo-world-physics.ads:901:31    - Unknown word (Flags)        -- virtual udword        GetFlags() const
Engine/neo-world-physics.ads:903:50    - Unknown word (gravity)      -- SetGravity(const Point& gravity)
Engine/neo-world-physics.ads:906:35    - Unknown word (Profiled)     -- void UpdateNonProfiled(float dt)
Engine/neo-world-physics.ads:907:30    - Unknown word (Main)         -- virtual Point        GetMainColor()
Engine/neo-world-physics.ads:907:34    - Unknown word (Color)        -- Point GetMainColor()
Engine/neo-world-physics.ads:908:45    - Unknown word (renderer)     -- Render(PintRender& renderer)
Engine/neo-world-physics.ads:910:29    - Unknown word (Disabled)     -- virtual void        SetDisabledGroups(udword nb_groups
Engine/neo-world-physics.ads:910:72    - Unknown word (Disabled)     -- nb_groups, const PintDisabledGroups* groups)
Engine/neo-world-physics.ads:912:57    - Unknown word (handle)       -- eleaseObject(PintObjectHandle handle)
Engine/neo-world-physics.ads:915:137   - Unknown word (Phantom)      -- NotImplemented("CreatePhantom"); return null
Engine/neo-world-physics.ads:915:33    - Unknown word (Phantom)      -- void* CreatePhantom(const AABB& box)
Engine/neo-world-physics.ads:915:47    - Unknown word (AABB)         -- CreatePhantom(const AABB& box)
Engine/neo-world-physics.ads:916:177   - Unknown word (Phantom)      -- NotImplemented("BatchRaycastsPhantom"); return 0;  }
Engine/neo-world-physics.ads:916:41    - Unknown word (Phantom)      -- BatchRaycastsPhantom(udword nb, PintRaycastHit
Engine/neo-world-physics.ads:922:8     - Unknown word (Sweeps)       -- // Sweeps
Engine/neo-world-physics.ads:923:137   - Unknown word (sweeps)       -- const PintBoxSweepData* sweeps) { NotImplemented
Engine/neo-world-physics.ads:924:141   - Unknown word (sweeps)       -- PintSphereSweepData* sweeps) { NotImplemented
Engine/neo-world-physics.ads:925:143   - Unknown word (sweeps)       -- PintCapsuleSweepData* sweeps) { NotImplemented
Engine/neo-world-physics.ads:926:8     - Unknown word (Overlaps)     -- // Overlaps
Engine/neo-world-physics.ads:927:145   - Unknown word (overlaps)     -- PintSphereOverlapData* overlaps) { NotImplemented
Engine/neo-world-physics.ads:928:153   - Unknown word (overlaps)     -- PintSphereOverlapData* overlaps) { NotImplemented
Engine/neo-world-physics.ads:929:141   - Unknown word (overlaps)     -- PintBoxOverlapData* overlaps) { NotImplemented
Engine/neo-world-physics.ads:930:149   - Unknown word (overlaps)     -- PintBoxOverlapData* overlaps) { NotImplemented
Engine/neo-world-physics.ads:931:147   - Unknown word (overlaps)     -- PintCapsuleOverlapData* overlaps) { NotImplemented
Engine/neo-world-physics.ads:934:108   - Unknown word (handle)       -- context, PintObjectHandle handle, udword nb, const PintSphereO
Engine/neo-world-physics.ads:934:185   - Unknown word (Find)         -- { NotImplemented("FindTriangles_MeshSphereOverlap
Engine/neo-world-physics.ads:934:189   - Unknown word (Triangles)    -- NotImplemented("FindTriangles_MeshSphereOverlap")
Engine/neo-world-physics.ads:934:28    - Unknown word (Find)         -- virtual udword        FindTriangles_MeshSphereOverlap
Engine/neo-world-physics.ads:934:32    - Unknown word (Triangles)    -- virtual udword        FindTriangles_MeshSphereOverlap
Engine/neo-world-physics.ads:935:105   - Unknown word (handle)       -- context, PintObjectHandle handle, udword nb, const PintBoxOver
Engine/neo-world-physics.ads:935:181   - Unknown word (Find)         -- { NotImplemented("FindTriangles_MeshBoxOverlap
Engine/neo-world-physics.ads:935:185   - Unknown word (Triangles)    -- NotImplemented("FindTriangles_MeshBoxOverlap");
Engine/neo-world-physics.ads:935:28    - Unknown word (Find)         -- virtual udword        FindTriangles_MeshBoxOverlap
Engine/neo-world-physics.ads:935:32    - Unknown word (Triangles)    -- virtual udword        FindTriangles_MeshBoxOverlap (PintSQThread
Engine/neo-world-physics.ads:936:107   - Unknown word (handle)       -- context, PintObjectHandle handle, udword nb, const PintCapsule
Engine/neo-world-physics.ads:936:28    - Unknown word (Find)         -- virtual udword        FindTriangles_MeshCapsuleOverlap
Engine/neo-world-physics.ads:936:32    - Unknown word (Triangles)    -- virtual udword        FindTriangles_MeshCapsuleOverlap(PintSQThre
Engine/neo-world-physics.ads:938:61    - Unknown word (handle)       -- rldTransform(PintObjectHandle handle)
Engine/neo-world-physics.ads:939:79    - Unknown word (pose)         -- bjectHandle handle, const PR& pose)
Engine/neo-world-physics.ads:93:42     - Unknown word (UNDEFINED)    -- mType (PINT_SHAPE_UNDEFINED),
Engine/neo-world-physics.ads:941:8     - Unknown word (Deprecated)   -- // Deprecated
Engine/neo-world-physics.ads:943:164   - Unknown word (Impulse)      -- NotImplemented("AddWorldImpulseAtWorldPos"); }
Engine/neo-world-physics.ads:943:34    - Unknown word (Impulse)      -- void AddWorldImpulseAtWorldPos(PintObjectHandle
Engine/neo-world-physics.ads:943:96    - Unknown word (impulse)      -- const Point& world_impulse, const Point& world
Engine/neo-world-physics.ads:944:85    - Unknown word (torque)       -- const Point& local_torque)
Engine/neo-world-physics.ads:946:131   - Unknown word (Angular)      -- NotImplemented("GetAngularVelocity"); return Point
Engine/neo-world-physics.ads:946:30    - Unknown word (Angular)      -- virtual Point        GetAngularVelocity(PintObjectHandle
Engine/neo-world-physics.ads:947:29    - Unknown word (Angular)      -- virtual void        SetAngularVelocity(PintObjectHandle
Engine/neo-world-physics.ads:947:83    - Unknown word (angular)      -- handle, const Point& angular_velocity)
Engine/neo-world-physics.ads:947:91    - Unknown word (velocity)     -- const Point& angular_velocity)
Engine/neo-world-physics.ads:950:133   - Unknown word (Inertia)      -- NotImplemented("GetLocalInertia"); return Point(0.
Engine/neo-world-physics.ads:950:35    - Unknown word (Inertia)      -- Point GetLocalInertia(PintObjectHandle handle
Engine/neo-world-physics.ads:952:56    - Unknown word (shapes)       -- GetShapes(PintObjectHandle* shapes, PintObjectHandle handle
Engine/neo-world-physics.ads:953:69    - Unknown word (Quat)         -- intObjectHandle handle, const Quat& q)
Engine/neo-world-physics.ads:955:138   - Unknown word (Kinematic)    -- NotImplemented("SetKinematicPose"); return false
Engine/neo-world-physics.ads:955:29    - Unknown word (Kinematic)    -- virtual bool        SetKinematicPose(PintObjectHandle
Engine/neo-world-physics.ads:956:29    - Unknown word (Kinematic)    -- virtual bool        SetKinematicPose(PintObjectHandle
Engine/neo-world-physics.ads:958:16    - Unknown word (releases)     -- // Creates/releases an optional per-thread
Engine/neo-world-physics.ads:958:28    - Unknown word (optional)     -- Creates/releases an optional per-thread structure
Engine/neo-world-physics.ads:958:48    - Unknown word (structure)    -- optional per-thread structure (e.g. caches) for scene
Engine/neo-world-physics.ads:958:64    - Unknown word (caches)       -- thread structure (e.g. caches) for scene queries.
Engine/neo-world-physics.ads:958:76    - Unknown word (scene)        -- structure (e.g. caches) for scene queries.
Engine/neo-world-physics.ads:958:8     - Unknown word (Creates)      -- // Creates/releases an optional
Engine/neo-world-physics.ads:95:22     - Unknown word (Renderer)     -- mRenderer (null),
Engine/neo-world-physics.ads:962:21    - Unknown word (convex)       -- // Experimental convex sweep support
Engine/neo-world-physics.ads:962:28    - Unknown word (sweep)        -- Experimental convex sweep support
Engine/neo-world-physics.ads:962:8     - Unknown word (Experimental) -- // Experimental convex sweep support
Engine/neo-world-physics.ads:963:105   - Unknown word (they)         -- data in the sweeps (they can all share the same
Engine/neo-world-physics.ads:963:11    - Unknown word (there)        -- // So there is a design issue here
Engine/neo-world-physics.ads:963:128   - Unknown word (same)         -- they can all share the same data)
Engine/neo-world-physics.ads:963:35    - Unknown word (here)         -- there is a design issue here. For simpler shapes
Engine/neo-world-physics.ads:963:45    - Unknown word (simpler)      -- design issue here. For simpler shapes we don't need
Engine/neo-world-physics.ads:963:53    - Unknown word (shapes)       -- issue here. For simpler shapes we don't need per-plugin
Engine/neo-world-physics.ads:963:69    - Unknown word (need)         -- simpler shapes we don't need per-plugin data in the
Engine/neo-world-physics.ads:963:97    - Unknown word (sweeps)       -- per-plugin data in the sweeps (they can all share
Engine/neo-world-physics.ads:964:111   - Unknown word (dependent)    -- data becomes engine dependent. The following methods
Engine/neo-world-physics.ads:964:126   - Unknown word (following)    -- engine dependent. The following methods
Engine/neo-world-physics.ads:964:16    - Unknown word (convexes)     -- // but for convexes we need to create per
Engine/neo-world-physics.ads:964:28    - Unknown word (need)         -- but for convexes we need to create per-plugin
Engine/neo-world-physics.ads:964:54    - Unknown word (convex)       -- to create per-plugin convex objects, and the convex
Engine/neo-world-physics.ads:964:78    - Unknown word (convex)       -- convex objects, and the convex sweep data becomes engine
Engine/neo-world-physics.ads:964:96    - Unknown word (becomes)      -- the convex sweep data becomes engine dependent. The
Engine/neo-world-physics.ads:965:20    - Unknown word (this)         -- // try to make this work with the existing
Engine/neo-world-physics.ads:965:39    - Unknown word (existing)     -- make this work with the existing infrastructure.
Engine/neo-world-physics.ads:965:48    - Unknown word (infrastructure) -- work with the existing infrastructure.
Engine/neo-world-physics.ads:966:165   - Unknown word (INVALID)        -- CreateConvexObject"); return INVALID_ID; }
Engine/neo-world-physics.ads:967:137   - Unknown word (sweeps)         -- PintConvexSweepData* sweeps) { NotImplemented(
Engine/neo-world-physics.ads:969:107   - Unknown word (libs)           -- equivalent in other libs.
Engine/neo-world-physics.ads:969:21    - Unknown word (currently)      -- // Aggregates - currently based on the PhysX API
Engine/neo-world-physics.ads:969:44    - Unknown word (Phys)           -- currently based on the PhysX API, may change later
Engine/neo-world-physics.ads:969:66    - Unknown word (later)          -- PhysX API, may change later to support the equivalent
Engine/neo-world-physics.ads:969:87    - Unknown word (equivalent)     -- later to support the equivalent in other libs.
Engine/neo-world-physics.ads:970:77    - Unknown word (self)           -- max_size, bool enable_self_collision)
Engine/neo-world-physics.ads:970:82    - Unknown word (collision)      -- size, bool enable_self_collision)
Engine/neo-world-physics.ads:972:40    - Unknown word (Scene)          -- AddAggregateToScene(PintObjectHandle aggregate
Engine/neo-world-physics.ads:974:110   - Unknown word (libs)           -- equivalent in other libs.
Engine/neo-world-physics.ads:974:24    - Unknown word (currently)      -- // Articulations - currently based on the PhysX API
Engine/neo-world-physics.ads:974:47    - Unknown word (Phys)           -- currently based on the PhysX API, may change later
Engine/neo-world-physics.ads:974:69    - Unknown word (later)          -- PhysX API, may change later to support the equivalent
Engine/neo-world-physics.ads:974:8     - Unknown word (Articulations)  -- // Articulations - currently based on
Engine/neo-world-physics.ads:974:90    - Unknown word (equivalent)     -- later to support the equivalent in other libs.
Engine/neo-world-physics.ads:975:143   - Unknown word (Articulation)   -- NotImplemented("CreateArticulation"); return null;  }
Engine/neo-world-physics.ads:975:38    - Unknown word (Articulation)   -- PintObjectHandle CreateArticulation(const PINT_ARTICULATION
Engine/neo-world-physics.ads:975:62    - Unknown word (ARTICULATION)   -- CreateArticulation(const PINT_ARTICULATION_CREATE&)
Engine/neo-world-physics.ads:976:137   - Unknown word (articulation)   -- CREATE&, PintObjectHandle articulation) { NotImplemented(
Engine/neo-world-physics.ads:976:176   - Unknown word (Articulated)    -- NotImplemented("CreateArticulatedObject"); return null
Engine/neo-world-physics.ads:976:38    - Unknown word (Articulated)    -- PintObjectHandle CreateArticulatedObject(const PINT_OBJECT
Engine/neo-world-physics.ads:977:134   - Unknown word (Articulation)   -- NotImplemented("AddArticulationToScene"); return false
Engine/neo-world-physics.ads:977:29    - Unknown word (Articulation)   -- virtual bool        AddArticulationToScene(PintObjectHandle
Engine/neo-world-physics.ads:977:66    - Unknown word (articulation)   -- ationToScene(PintObjectHandle articulation)
Engine/neo-world-physics.ads:978:151   - Unknown word (Articulated)    -- NotImplemented("SetArticulatedMotor"); }
Engine/neo-world-physics.ads:978:29    - Unknown word (Articulated)    -- virtual void        SetArticulatedMotor(PintObjectHandle
Engine/neo-world-physics.ads:980:8     - Unknown word (Vehicles)       -- // Vehicles - WIP
Engine/neo-world-physics.ads:981:80    - Unknown word (VEHICLE)        -- VehicleData& data, const PINT_VEHICLE_CREATE& vehicle)
Engine/neo-world-physics.ads:981:96    - Unknown word (vehicle)        -- PINT_VEHICLE_CREATE& vehicle)
Engine/neo-world-physics.ads:982:59    - Unknown word (vehicle)        -- VehicleInput(PintObjectHandle vehicle, const PINT_VEHICLE
Engine/neo-world-physics.ads:986:31    - Unknown word (Helper)         -- ObjectsManager* mOMHelper;
Engine/neo-world-physics.ads:987:27    - Unknown word (Helper)         -- PintSQ* mSQHelper;
Engine/neo-world-physics.ads:997:64    - Unknown word (Helper)         -- IceWidget* parent, PintGUIHelper& helper)  = 0;
Engine/neo-world-physics.ads:997:72    - Unknown word (helper)         -- parent, PintGUIHelper& helper) = 0;
Engine/neo-world.adb:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-world.adb:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-world.adb:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo-world.adb:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-world.adb:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-world.adb:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-world.adb:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-world.adb:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-world.adb:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-world.adb:110:20    - Unknown word (Calendar)     -- Start : Ada.Calendar.Time;
Engine/neo-world.adb:112:45    - Unknown word (MAPS)         -- Info.App_Path) & PATH_MAPS & Path, Map);
Engine/neo-world.adb:117:27    - Unknown word (geometry)     -- -- Line ("Buffer geometry: " & Geometry_Name_Str
Engine/neo-world.adb:117:41    - Unknown word (Geometry)     -- Buffer geometry: " & Geometry_Name_Str.S (Entity.Mesh
Engine/neo-world.adb:119:37    - Unknown word (Geometry)     -- Entity.Mesh.Name /= Geometry_Name_Str.NULL_STR then
Engine/neo-world.adb:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-world.adb:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-world.adb:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-world.adb:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-world.adb:127:17    - Unknown word (geometry)     -- -- Buffer geometry
Engine/neo-world.adb:128:11    - Unknown word (Geometry)     -- for Geometry_Mesh of Map.Geometry
Engine/neo-world.adb:128:32    - Unknown word (Geometry)     -- Geometry_Mesh of Map.Geometry loop
Engine/neo-world.adb:130:20    - Unknown word (Clock)        -- Start := Clock;
Engine/neo-world.adb:132:82    - Unknown word (Duration)     -- Mesh.Name) & " in" & Duration'Wide_Image (Clock -
Engine/neo-world.adb:132:91    - Unknown word (Wide)        -- & " in" & Duration'Wide_Image (Clock - Start
Engine/neo-world.adb:139:10    - Unknown word (Setup)       -- -- Setup camera
Engine/neo-world.adb:139:16    - Unknown word (camera)      -- -- Setup camera
Engine/neo-world.adb:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-world.adb:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-world.adb:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-world.adb:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-world.adb:140:29    - Unknown word (Element)     -- Pos := Map.Entities.Element (U ("info_player_start
Engine/neo-world.adb:141:37    - Unknown word (some)        -- Pos.Z + 90.0; -- Add some height so we aren't
Engine/neo-world.adb:141:42    - Unknown word (height)      -- + 90.0; -- Add some height so we aren't on the
Engine/neo-world.adb:141:55    - Unknown word (aren't)      -- Add some height so we aren't on the floor
Engine/neo-world.adb:141:69    - Unknown word (floor)       -- so we aren't on the floor
Engine/neo-world.adb:142:31    - Unknown word (Vector)      -- Camera.Set_Position (To_Vector_3D (Pos));
Engine/neo-world.adb:142:7     - Unknown word (Camera)      -- Camera.Set_Position (To_Vector
Engine/neo-world.adb:143:15    - Unknown word (Occupied)    -- In_Game.Occupied (True);
Engine/neo-world.adb:143:25    - Unknown word (True)        -- In_Game.Occupied (True);
Engine/neo-world.adb:148:17    - Unknown word (Hashed)      -- Materials : Hashed_Material.Unsafe.Map
Engine/neo-world.adb:148:33    - Unknown word (Unsafe)      -- Materials : Hashed_Material.Unsafe.Map;
Engine/neo-world.adb:151:82    - Unknown word (ogex)        -- PATH_MATERIALS), "*.ogex");
Engine/neo-world.adb:154:36    - Unknown word (Full)        -- Materials (To_Str_16 (Full_Name (Directory)), Materials
Engine/neo-world.adb:156:23    - Unknown word (More)        -- exit when not More_Entries (Search);
Engine/neo-world.adb:156:28    - Unknown word (Entries)     -- exit when not More_Entries (Search);
Engine/neo-world.adb:17:16     - Unknown word (Graphics)     -- with Neo.World.Graphics; use Neo.World.Graphics
Engine/neo-world.adb:17:40     - Unknown word (Graphics)     -- Graphics; use Neo.World.Graphics;
Engine/neo-world.adb:19:15     - Unknown word (Math)         -- with Neo.Core.Math;
Engine/neo-world.adb:20:14     - Unknown word (Math)         -- use Neo.Core.Math.Calc_32;
Engine/neo-world.adb:23:7      - Unknown word (Geometry)     -- use Geometry_Name_Str;
Engine/neo-world.adb:26:6      - Unknown word (Camera)       -- -- Camera --
Engine/neo-world.adb:29:18     - Unknown word (Safe)         -- protected body Safe_Camera is
Engine/neo-world.adb:29:23     - Unknown word (Camera)       -- protected body Safe_Camera is
Engine/neo-world.adb:30:35     - Unknown word (Vector)       -- Set_Position (Val : Vector_3D) is begin Position
Engine/neo-world.adb:32:19     - Unknown word (Pitch)        -- procedure Set_Pitch (Val : Real)
Engine/neo-world.adb:32:55     - Unknown word (Pitch)        -- Real) is begin Pitch := Val; Update; end
Engine/neo-world.adb:33:26     - Unknown word (Matrix)       -- function View return Matrix_4D is (Look_At (Position
Engine/neo-world.adb:33:40     - Unknown word (Look)         -- return Matrix_4D is (Look_At (Position, Position
Engine/neo-world.adb:33:70     - Unknown word (Direction)    -- Position, Position + Direction, Up));
Engine/neo-world.adb:34:27     - Unknown word (Direction)    -- procedure Move (Dir : Direction_Kind; Start_Time : Time
Engine/neo-world.adb:34:37     - Unknown word (Kind)         -- Move (Dir : Direction_Kind; Start_Time : Time)
Engine/neo-world.adb:37:111    - Unknown word (Speed)        -- Start_Time) * Move_Speed);
Engine/neo-world.adb:37:16     - Unknown word (Backward)     -- when Backward_Direction => Position
Engine/neo-world.adb:37:25     - Unknown word (Direction)    -- when Backward_Direction => Position := Position
Engine/neo-world.adb:37:62     - Unknown word (Direction)    -- Position := Position + (Direction * Real_32 (Clock - Start
Engine/neo-world.adb:37:83     - Unknown word (Clock)        -- Direction * Real_32 (Clock - Start_Time)  * Move
Engine/neo-world.adb:38:111    - Unknown word (Speed)        -- Start_Time) * Move_Speed);
Engine/neo-world.adb:38:24     - Unknown word (Direction)    -- when Forward_Direction => Position := Position
Engine/neo-world.adb:38:83     - Unknown word (Clock)        -- Direction * Real_32 (Clock - Start_Time)  * Move
Engine/neo-world.adb:39:104    - Unknown word (Clock)        -- Direction, Up)) * Real_32 (Clock - Start_Time) * Move
Engine/neo-world.adb:39:131    - Unknown word (Speed)        -- Start_Time) * Move_Speed * 3.0);
Engine/neo-world.adb:40:104    - Unknown word (Clock)        -- Direction, Up)) * Real_32 (Clock - Start_Time) * Move
Engine/neo-world.adb:40:131    - Unknown word (Speed)        -- Start_Time) * Move_Speed * 3.0);
Engine/neo-world.adb:43:15     - Unknown word (Look)         -- procedure Look (X_Offset, Y_Offset
Engine/neo-world.adb:43:23     - Unknown word (Offset)       -- procedure Look (X_Offset, Y_Offset : Int; Clamp
Engine/neo-world.adb:43:33     - Unknown word (Offset)       -- procedure Look (X_Offset, Y_Offset : Int; Clamp : Bool
Engine/neo-world.adb:43:47     - Unknown word (Clamp)        -- Offset, Y_Offset : Int; Clamp : Bool := True) is
Engine/neo-world.adb:43:63     - Unknown word (True)         -- Int; Clamp : Bool := True) is
Engine/neo-world.adb:45:26     - Unknown word (Sensitivity)  -- Yaw := Yaw   + Sensitivity * (Real_32 (X_Offset
Engine/neo-world.adb:45:52     - Unknown word (Offset)       -- Sensitivity * (Real_32 (X_Offset) * (100.0 / Real_32
Engine/neo-world.adb:45:87     - Unknown word (Width)        -- 0 / Real_32 (Window_Width.Get)));
Engine/neo-world.adb:46:18     - Unknown word (Pitch)        -- Pitch := Pitch + Sensitivity * (Real
Engine/neo-world.adb:46:26     - Unknown word (Sensitivity)  -- Pitch := Pitch + Sensitivity * (Real_32 (Y_Offset
Engine/neo-world.adb:46:52     - Unknown word (Offset)       -- Sensitivity * (Real_32 (Y_Offset) * (100.0 / Real_32
Engine/neo-world.adb:46:87     - Unknown word (Height)       -- 0 / Real_32 (Window_Height.Get)));
Engine/neo-world.adb:46:9      - Unknown word (Pitch)        -- Pitch := Pitch + Sensitivity
Engine/neo-world.adb:47:12     - Unknown word (Clamp)        -- if Clamp then
Engine/neo-world.adb:48:14     - Unknown word (Pitch)        -- if Pitch > (PI / 2.0) - 0.01
Engine/neo-world.adb:59:30     - Unknown word (Vector)       -- Direction := Normal (Vector_3D'(X => Cos (Yaw)
Engine/neo-world.adb:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo-world.adb:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo-world.adb:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo-world.adb:68:6      - Unknown word (Scene)        -- -- Scene --
Engine/neo-world.adb:72:35     - Unknown word (Memory)       -- Load_Map (Path : Str; Memory : Memory_Kind) is
Engine/neo-world.adb:72:44     - Unknown word (Memory)       -- Path : Str; Memory : Memory_Kind) is
Engine/neo-world.adb:72:51     - Unknown word (Kind)         -- Str; Memory : Memory_Kind) is
Engine/neo-world.adb:75:45     - Unknown word (MAPS)         -- Info.App_Path) & PATH_MAPS & Path, Map);
Engine/neo-world.adb:76:10     - Unknown word (Memory)       -- if Memory /= CPU_Memory then
Engine/neo-world.adb:76:24     - Unknown word (Memory)       -- if Memory /= CPU_Memory then
Engine/neo-world.adb:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-world.adb:82:14     - Unknown word (Memory)       -- --if Memory = GPU_Memroy then
Engine/neo-world.adb:82:27     - Unknown word (Memroy)       -- --if Memory = GPU_Memroy then
Engine/neo-world.adb:87:53     - Unknown word (Kind)         -- Str; Memory : Memory_Kind) is
Engine/neo-world.adb:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-world.adb:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-world.adb:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo-world.adb:95:51     - Unknown word (Kind)         -- Str; Memory : Memory_Kind) is
Engine/neo-world.adb:99:53     - Unknown word (Kind)         -- Str; Memory : Memory_Kind) is
Engine/neo-world.ads:101:20    - Unknown word (Unused)       -- --procedure Free_Unused_Meshes (Path : Str;
Engine/neo-world.ads:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo-world.ads:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo-world.ads:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo-world.ads:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo-world.ads:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo-world.ads:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo-world.ads:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo-world.ads:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo-world.ads:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo-world.ads:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo-world.ads:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo-world.ads:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo-world.ads:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo-world.ads:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo-world.ads:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo-world.ads:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo-world.ads:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo-world.ads:19:15     - Unknown word (Texture)      -- with Neo.Data.Texture; use Neo.Data.Texture
Engine/neo-world.ads:19:37     - Unknown word (Texture)      -- Texture; use Neo.Data.Texture;
Engine/neo-world.ads:21:15     - Unknown word (Math)         -- with Neo.Core.Math; use Neo.Core.Math
Engine/neo-world.ads:21:37     - Unknown word (Math)         -- Math; use Neo.Core.Math;
Engine/neo-world.ads:23:15     - Unknown word (Strings)      -- with Neo.Core.Strings; use Neo.Core.Strings
Engine/neo-world.ads:23:37     - Unknown word (Strings)      -- Strings; use Neo.Core.Strings;
Engine/neo-world.ads:25:15     - Unknown word (Maps)         -- with Neo.Core.Maps; use Neo.Core.Maps
Engine/neo-world.ads:25:37     - Unknown word (Maps)         -- Maps; use Neo.Core.Maps;
Engine/neo-world.ads:26:15     - Unknown word (Hashed)       -- with Neo.Core.Hashed;
Engine/neo-world.ads:27:15     - Unknown word (Ordered)      -- with Neo.Core.Ordered;
Engine/neo-world.ads:28:15     - Unknown word (Vectors)      -- with Neo.Core.Vectors;
Engine/neo-world.ads:30:10     - Unknown word (Numerics)     -- with Ada.Numerics; use Ada.Numerics;
Engine/neo-world.ads:30:28     - Unknown word (Numerics)     -- Ada.Numerics; use Ada.Numerics;
Engine/neo-world.ads:31:10     - Unknown word (Calendar)     -- with Ada.Calendar; use Ada.Calendar;
Engine/neo-world.ads:31:28     - Unknown word (Calendar)     -- Ada.Calendar; use Ada.Calendar;
Engine/neo-world.ads:36:6      - Unknown word (Camera)       -- -- Camera --
Engine/neo-world.ads:39:10     - Unknown word (ZOOM)         -- CAMERA_ZOOM : constant Real
Engine/neo-world.ads:39:3      - Unknown word (CAMERA)       -- CAMERA_ZOOM : constant
Engine/neo-world.ads:40:3      - Unknown word (CAMERA)       -- CAMERA_FOV : constant
Engine/neo-world.ads:41:3      - Unknown word (CAMERA)       -- CAMERA_YAW : constant
Engine/neo-world.ads:42:10     - Unknown word (PITCH)        -- CAMERA_PITCH : constant Real
Engine/neo-world.ads:42:3      - Unknown word (CAMERA)       -- CAMERA_PITCH : constant
Engine/neo-world.ads:43:10     - Unknown word (SPEED)        -- CAMERA_SPEED : constant Real
Engine/neo-world.ads:43:3      - Unknown word (CAMERA)       -- CAMERA_SPEED : constant
Engine/neo-world.ads:44:10     - Unknown word (SENSITIVITY)  -- CAMERA_SENSITIVITY : constant Real :=
Engine/neo-world.ads:46:18     - Unknown word (Kind)         -- type Direction_Kind is (Forward_Direction
Engine/neo-world.ads:46:35     - Unknown word (Direction)    -- Direction_Kind is (Forward_Direction, Backward_Direction
Engine/neo-world.ads:46:46     - Unknown word (Backward)     -- (Forward_Direction, Backward_Direction, Left_Direction
Engine/neo-world.ads:46:55     - Unknown word (Direction)    -- Direction, Backward_Direction, Left_Direction, Right
Engine/neo-world.ads:46:71     - Unknown word (Direction)    -- Backward_Direction, Left_Direction, Right_Direction);
Engine/neo-world.ads:46:8      - Unknown word (Direction)    -- type Direction_Kind is (Forward_Direction
Engine/neo-world.ads:46:88     - Unknown word (Direction)    -- Left_Direction, Right_Direction);
Engine/neo-world.ads:48:18     - Unknown word (Safe)         -- protected type Safe_Camera is
Engine/neo-world.ads:48:23     - Unknown word (Camera)       -- protected type Safe_Camera is
Engine/neo-world.ads:49:28     - Unknown word (Matrix)       -- function View return Matrix_4D;
Engine/neo-world.ads:51:37     - Unknown word (Vector)       -- Set_Position (Val : Vector_3D);
Engine/neo-world.ads:53:21     - Unknown word (Pitch)        -- procedure Set_Pitch (Val : Real);
Engine/neo-world.ads:54:47     - Unknown word (Kind)         -- (Dir : Direction_Kind; Start_Time : Time)
Engine/neo-world.ads:55:17     - Unknown word (Look)         -- procedure Look (X_Offset, Y
Engine/neo-world.ads:55:33     - Unknown word (Offset)       -- procedure Look         (X_Offset, Y_Offset : Int; Clamp
Engine/neo-world.ads:55:43     - Unknown word (Offset)       -- (X_Offset, Y_Offset : Int; Clamp : Bool
Engine/neo-world.ads:55:57     - Unknown word (Clamp)        -- Offset, Y_Offset : Int; Clamp : Bool := True);
Engine/neo-world.ads:55:73     - Unknown word (True)         -- Int; Clamp : Bool := True);
Engine/neo-world.ads:57:42     - Unknown word (SENSITIVITY)  -- Real := CAMERA_SENSITIVITY;
Engine/neo-world.ads:57:7      - Unknown word (Sensitivity)  -- Sensitivity : Real      := CAMERA
Engine/neo-world.ads:58:42     - Unknown word (ZOOM)         -- Real := CAMERA_ZOOM;
Engine/neo-world.ads:58:7      - Unknown word (Zoom)         -- Zoom : Real
Engine/neo-world.ads:59:12     - Unknown word (Speed)        -- Move_Speed : Real      := CAMERA
Engine/neo-world.ads:59:42     - Unknown word (SPEED)        -- Real := CAMERA_SPEED;
Engine/neo-world.ads:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo-world.ads:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo-world.ads:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo-world.ads:61:42     - Unknown word (PITCH)        -- Real := CAMERA_PITCH;
Engine/neo-world.ads:61:7      - Unknown word (Pitch)        -- Pitch : Real
Engine/neo-world.ads:62:22     - Unknown word (Vector)       -- Right : Vector_3D := ZERO_VECTOR_3D
Engine/neo-world.ads:62:40     - Unknown word (VECTOR)       -- : Vector_3D := ZERO_VECTOR_3D;
Engine/neo-world.ads:63:22     - Unknown word (Vector)       -- Up : Vector_3D := ZERO_VECTOR_3D
Engine/neo-world.ads:63:40     - Unknown word (VECTOR)       -- : Vector_3D := ZERO_VECTOR_3D;
Engine/neo-world.ads:64:22     - Unknown word (Vector)       -- Position : Vector_3D := ZERO_VECTOR_3D
Engine/neo-world.ads:64:40     - Unknown word (VECTOR)       -- : Vector_3D := ZERO_VECTOR_3D;
Engine/neo-world.ads:65:22     - Unknown word (Vector)       -- Direction : Vector_3D := ZERO_VECTOR_3D
Engine/neo-world.ads:65:40     - Unknown word (VECTOR)       -- : Vector_3D := ZERO_VECTOR_3D;
Engine/neo-world.ads:73:15     - Unknown word (Safe)         -- In_Game : Safe_Status;
Engine/neo-world.ads:74:15     - Unknown word (Safe)         -- Map : Safe_Map.T;
Engine/neo-world.ads:75:15     - Unknown word (Safe)         -- Camera : Safe_Camera;
Engine/neo-world.ads:75:20     - Unknown word (Camera)       -- Camera : Safe_Camera;
Engine/neo-world.ads:75:3      - Unknown word (Camera)       -- Camera : Safe_Camera;
Engine/neo-world.ads:76:15     - Unknown word (Hashed)       -- Entities : Hashed_Entity.Safe_Map;
Engine/neo-world.ads:76:29     - Unknown word (Safe)         -- Entities : Hashed_Entity.Safe_Map;
Engine/neo-world.ads:77:15     - Unknown word (Hashed)      -- Maps : Hashed_Map.Safe_Map;
Engine/neo-world.ads:77:3      - Unknown word (Maps)        -- Maps : Hashed_Map.Safe
Engine/neo-world.ads:78:15     - Unknown word (Hashed)      -- Meshes : Hashed_Mesh.Safe_Map;
Engine/neo-world.ads:79:15     - Unknown word (Hashed)      -- Materials : Hashed_Material.Safe_Map;
Engine/neo-world.ads:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo-world.ads:80:22     - Unknown word (Skeleton)    -- Skeletons : Hashed_Skeleton.Safe_Map;
Engine/neo-world.ads:80:3      - Unknown word (Skeletons)   -- Skeletons : Hashed_Skeleton.Safe
Engine/neo-world.ads:83:6      - Unknown word (Scene)       -- -- Scene --
Engine/neo-world.ads:87:11     - Unknown word (Singleplayer) -- Has_Singleplayer : Bool := False;
Engine/neo-world.ads:87:37     - Unknown word (False)        -- Singleplayer : Bool := False;
Engine/neo-world.ads:88:11     - Unknown word (Deathmatch)   -- Has_Deathmatch : Bool := False
Engine/neo-world.ads:88:37     - Unknown word (False)        -- Deathmatch : Bool := False;
Engine/neo-world.ads:89:16     - Unknown word (Deathmatch)   -- Has_Team_Deathmatch : Bool := False;
Engine/neo-world.ads:89:37     - Unknown word (False)        -- Deathmatch : Bool := False;
Engine/neo-world.ads:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo-world.ads:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo-world.ads:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo-world.ads:90:37     - Unknown word (False)        -- Man : Bool := False;
Engine/neo-world.ads:91:11     - Unknown word (Tourney)      -- Has_Tourney : Bool := False
Engine/neo-world.ads:91:37     - Unknown word (False)        -- Tourney : Bool := False;
Engine/neo-world.ads:94:15     - Unknown word (Kind)         -- type Memory_Kind is (GPU_Memory, CPU
Engine/neo-world.ads:94:28     - Unknown word (Memory)       -- Memory_Kind is (GPU_Memory, CPU_Memory, GPU_And
Engine/neo-world.ads:94:40     - Unknown word (Memory)       -- is (GPU_Memory, CPU_Memory, GPU_And_CPU_Memory
Engine/neo-world.ads:94:60     - Unknown word (Memory)       -- Memory, GPU_And_CPU_Memory);
Engine/neo-world.ads:94:8      - Unknown word (Memory)       -- type Memory_Kind is (GPU_Memory
Engine/neo-world.ads:97:47     - Unknown word (Memory)       -- (Path : Str; Memory : Memory_Kind);
Engine/neo-world.ads:97:63     - Unknown word (Kind)         -- Str; Memory : Memory_Kind);
Engine/neo-world.ads:98:63     - Unknown word (Kind)         -- Str; Memory : Memory_Kind);
Engine/neo.adb:101:32    - Unknown word (Safe)         -- function Get  return Safe_T is (Data);
Engine/neo.adb:105:21    - Unknown word (Discrete)     -- package body Safe_Discrete is
Engine/neo.adb:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo.adb:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo.adb:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo.adb:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo.adb:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo.adb:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo.adb:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo.adb:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo.adb:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo.adb:119:6     - Unknown word (Timing)       -- -- Timing --
Engine/neo.adb:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo.adb:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo.adb:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo.adb:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo.adb:122:46    - Unknown word (started)      -- the application was started
Engine/neo.adb:123:24    - Unknown word (Clock)        -- START_TIME : Time := Clock;
Engine/neo.adb:126:14    - Unknown word (duration)     -- -- Get the duration of the current timer
Engine/neo.adb:127:109   - Unknown word (Clock)        -- then Timer.Last else Clock - Timer.Start));
Engine/neo.adb:127:16    - Unknown word (Duration)     -- function Get_Duration (Timer : Timer_State
Engine/neo.adb:127:54    - Unknown word (Duration)     -- Timer_State) return Duration is ((if Timer.Is_Stopped
Engine/neo.adb:127:80    - Unknown word (Stopped)      -- Duration is ((if Timer.Is_Stopped then Timer.Last else
Engine/neo.adb:129:61    - Unknown word (being)        -- raise an error if it not being used properly
Engine/neo.adb:129:72    - Unknown word (properly)     -- if it not being used properly
Engine/neo.adb:132:35    - Unknown word (Stopped)      -- Assert (not Timer.Is_Stopped); Timer := (Is_Stopped
Engine/neo.adb:132:58    - Unknown word (Stopped)      -- Stopped); Timer := (Is_Stopped => False, Start => Clock
Engine/neo.adb:132:69    - Unknown word (False)        -- Timer := (Is_Stopped => False, Start => Clock, others
Engine/neo.adb:132:85    - Unknown word (Clock)        -- Stopped => False, Start => Clock, others => <>);
Engine/neo.adb:136:31    - Unknown word (Stopped)      -- pragma Assert (Timer.Is_Stopped); Timer := (Is_Stopped
Engine/neo.adb:136:54    - Unknown word (Stopped)      -- Stopped); Timer := (Is_Stopped => True,  Last  => Timer
Engine/neo.adb:136:65    - Unknown word (True)         -- Timer := (Is_Stopped => True, Last  => Timer.Start
Engine/neo.adb:136:95    - Unknown word (Clock)        -- Last => Timer.Start - Clock, others => <>);
Engine/neo.adb:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo.adb:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo.adb:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo.adb:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo.adb:140:6     - Unknown word (Conversions)  -- -- Conversions --
Engine/neo.adb:143:16    - Unknown word (conversions)  -- -- Character conversions
Engine/neo.adb:143:6     - Unknown word (Character)    -- -- Character conversions
Engine/neo.adb:144:15    - Unknown word (Char)         -- function To_Char_8 (Item : Char_16) return
Engine/neo.adb:144:30    - Unknown word (Char)         -- function To_Char_8 (Item : Char_16) return Char_8 is
Engine/neo.adb:144:46    - Unknown word (Char)         -- Item : Char_16) return Char_8 is
Engine/neo.adb:145:30    - Unknown word (Char)         -- Char_16'Pos (Item) > Char_8'Pos (Char_8'Last)
Engine/neo.adb:145:60    - Unknown word (CHAR)         -- Pos (Char_8'Last) then CHAR_REPLACEMENT else Char
Engine/neo.adb:145:65    - Unknown word (REPLACEMENT)  -- Char_8'Last) then CHAR_REPLACEMENT else Char_8'Val (Char
Engine/neo.adb:145:9     - Unknown word (Char)         -- (if Char_16'Pos (Item) > Char
Engine/neo.adb:147:60    - Unknown word (CHAR)         -- Pos (Char_8'Last) then CHAR_REPLACEMENT else Char
Engine/neo.adb:147:65    - Unknown word (REPLACEMENT)  -- Char_8'Last) then CHAR_REPLACEMENT else Char_8'Val (Char
Engine/neo.adb:149:74    - Unknown word (CHAR)         -- Last) then To_Char_16 (CHAR_REPLACEMENT) else Char
Engine/neo.adb:149:79    - Unknown word (REPLACEMENT)  -- then To_Char_16 (CHAR_REPLACEMENT) else Char_16'Val (Char
Engine/neo.adb:151:13    - Unknown word (conversions)  -- -- String conversions
Engine/neo.adb:151:6     - Unknown word (String)       -- -- String conversions
Engine/neo.adb:190:18    - Unknown word (Unbound)      -- Buffer : Str_Unbound := NULL_STR_UNBOUND
Engine/neo.adb:190:38    - Unknown word (UNBOUND)      -- Unbound := NULL_STR_UNBOUND;
Engine/neo.adb:193:35    - Unknown word (CHAR)         -- when Item (I) = NULL_CHAR_16_C;
Engine/neo.adb:200:18    - Unknown word (Unbound)      -- Buffer : Str_Unbound := NULL_STR
Engine/neo.adb:200:46    - Unknown word (UNBOUND)      -- := NULL_STR_UNBOUND;
Engine/neo.adb:201:5     - Unknown word (Temp)         -- Temp : Ptr_Const_Char_
Engine/neo.adb:203:13    - Unknown word (Temp)         -- while Temp.all /= NULL_CHAR_16
Engine/neo.adb:203:30    - Unknown word (CHAR)         -- while Temp.all /= NULL_CHAR_16_C loop
Engine/neo.adb:205:37    - Unknown word (Temp)         -- = Buffer & Char_16 (Temp.all);
Engine/neo.adb:206:63    - Unknown word (Temp)         -- To_Ptr (To_Int_Ptr (Temp) + Char_16_C'Size /
Engine/neo.adb:206:9     - Unknown word (Temp)         -- Temp := To_Ptr_Const_Char
Engine/neo.adb:212:20    - Unknown word (Unbound)      -- Buffer : Str_8_Unbound := NULL_STR_8_UNBOUND
Engine/neo.adb:212:42    - Unknown word (UNBOUND)      -- Unbound := NULL_STR_8_UNBOUND;
Engine/neo.adb:223:17    - Unknown word (string)       -- -- Integer to string with a changable base
Engine/neo.adb:223:31    - Unknown word (changable)    -- Integer to string with a changable base (e.g. decimal to
Engine/neo.adb:223:52    - Unknown word (decimal)      -- changable base (e.g. decimal to binary or hex)
Engine/neo.adb:223:63    - Unknown word (binary)       -- base (e.g. decimal to binary or hex)
Engine/neo.adb:224:56    - Unknown word (Positive)     -- Item : Num_T; Base : Positive; Do_Pad_Zeros : Bool
Engine/neo.adb:224:73    - Unknown word (Zeros)        -- Base : Positive; Do_Pad_Zeros : Bool := True) return
Engine/neo.adb:224:89    - Unknown word (True)        -- Pad_Zeros : Bool := True) return Str is
Engine/neo.adb:225:41    - Unknown word (Modular)     -- Text_IO is new Ada_IO.Modular_IO (Num_T);
Engine/neo.adb:226:18    - Unknown word (Unbound)     -- Buffer : Str_Unbound := NULL_STR_UNBOUND
Engine/neo.adb:226:40    - Unknown word (UNBOUND)     -- Unbound := NULL_STR_UNBOUND;
Engine/neo.adb:22:19     - Unknown word (Assert)       -- procedure Debug_Assert (Val : Int_Unsigned
Engine/neo.adb:22:37     - Unknown word (Unsigned)     -- Debug_Assert (Val : Int_Unsigned_C) is begin if Is
Engine/neo.adb:22:82     - Unknown word (Assert)       -- if Is_Debugging then Assert (Val /= 0);        end
Engine/neo.adb:230:32    - Unknown word (Trim)        -- Base = 10 then return Trim (Input, Both); end if
Engine/neo.adb:230:45    - Unknown word (Both)        -- return Trim (Input, Both); end if;
Engine/neo.adb:231:33    - Unknown word (Trim)        -- Buffer := To_Str_Unbound (Trim (Input, Both));
Engine/neo.adb:231:46    - Unknown word (Both)        -- Unbound (Trim (Input, Both));
Engine/neo.adb:232:26    - Unknown word (Trim)        -- Delete (Buffer, 1, Trim (Base'Img, Both)'Length
Engine/neo.adb:232:42    - Unknown word (Both)        -- 1, Trim (Base'Img, Both)'Length + 1);
Engine/neo.adb:234:40    - Unknown word (Zeros)       -- Num_T'Last and Do_Pad_Zeros then
Engine/neo.adb:23:19     - Unknown word (Assert)       -- procedure Debug_Assert (Val : Int_16_Unsigned
Engine/neo.adb:23:40     - Unknown word (Unsigned)     -- Assert (Val : Int_16_Unsigned_C) is begin if Is_Debugging
Engine/neo.adb:23:82     - Unknown word (Assert)       -- if Is_Debugging then Assert (Val /= 0);        end
Engine/neo.adb:240:15    - Unknown word (string)      -- -- Float to string
Engine/neo.adb:246:10    - Unknown word (Obtain)      -- -- Obtain Val's image and decide
Engine/neo.adb:246:33    - Unknown word (decide)      -- Obtain Val's image and decide whether to use exponent
Engine/neo.adb:246:40    - Unknown word (whether)     -- Val's image and decide whether to use exponent notation
Engine/neo.adb:246:55    - Unknown word (exponent)    -- decide whether to use exponent notation if we encounter
Engine/neo.adb:246:64    - Unknown word (notation)    -- whether to use exponent notation if we encounter something
Engine/neo.adb:246:79    - Unknown word (encounter)   -- exponent notation if we encounter something ridiculous
Engine/neo.adb:246:89    - Unknown word (something)   -- notation if we encounter something ridiculous
Engine/neo.adb:246:99    - Unknown word (ridiculous)  -- encounter something ridiculous
Engine/neo.adb:24:19     - Unknown word (Assert)       -- procedure Debug_Assert (Val : Int_C)
Engine/neo.adb:253:10    - Unknown word (Trim)        -- -- Trim zeros
Engine/neo.adb:253:15    - Unknown word (zeros)       -- -- Trim zeros
Engine/neo.adb:260:36    - Unknown word (Both)        -- To_Str (Trim (Result, Both));
Engine/neo.adb:29:34     - Unknown word (Unsigned)     -- Assert (Val : Int_16_Unsigned_C) is begin Assert
Engine/neo.adb:30:31     - Unknown word (Unsigned)     -- procedure Assert (Val : Int_Unsigned_C) is begin Assert
Engine/neo.adb:38:20     - Unknown word (call)         -- -- Get the call stack at the point of
Engine/neo.adb:38:75     - Unknown word (through)      -- so we can return it through an exception message
Engine/neo.adb:41:31     - Unknown word (Unbound)      -- Result : Str_8_Unbound := NULL_STR_8_UNBOUND
Engine/neo.adb:41:53     - Unknown word (UNBOUND)      -- Unbound := NULL_STR_8_UNBOUND;
Engine/neo.adb:43:15     - Unknown word (Length)       -- Chain_Length : Natural       :=
Engine/neo.adb:43:9      - Unknown word (Chain)        -- Chain_Length : Natural
Engine/neo.adb:44:42     - Unknown word (False)        -- At : Boolean       := False;
Engine/neo.adb:46:11     - Unknown word (Call)         -- Call_Chain (Traces, Chain
Engine/neo.adb:46:16     - Unknown word (Chain)        -- Call_Chain (Traces, Chain_Length
Engine/neo.adb:46:31     - Unknown word (Chain)        -- Call_Chain (Traces, Chain_Length);
Engine/neo.adb:46:37     - Unknown word (Length)       -- Chain (Traces, Chain_Length);
Engine/neo.adb:48:100    - Unknown word (restrictions) -- exception message length restrictions - see RM 11.4.1(18)
Engine/neo.adb:48:26     - Unknown word (endings)      -- -- Change line endings and ignore subprogram
Engine/neo.adb:48:45     - Unknown word (subprogram)   -- line endings and ignore subprogram names due to dated exception
Engine/neo.adb:48:69     - Unknown word (dated)        -- subprogram names due to dated exception message length
Engine/neo.adb:48:93     - Unknown word (length)       -- dated exception message length restrictions - see RM
Engine/neo.adb:49:23     - Unknown word (Symbolic)     -- for Item of Symbolic_Traceback (Traces) loop
Engine/neo.adb:50:23     - Unknown word (ASCII)        -- if Item = ASCII.LF then
Engine/neo.adb:52:25     - Unknown word (False)        -- Hit_At := False;
Engine/neo.adb:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo.adb:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo.adb:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo.adb:60:14     - Unknown word (Trim)         -- -- Trim irrelevant bits
Engine/neo.adb:60:19     - Unknown word (irrelevant)   -- -- Trim irrelevant bits
Engine/neo.adb:60:30     - Unknown word (bits)         -- -- Trim irrelevant bits
Engine/neo.adb:61:11     - Unknown word (Tail)         -- Tail (Result, Length (Result
Engine/neo.adb:61:25     - Unknown word (Length)       -- Tail (Result, Length (Result) - Index (Result
Engine/neo.adb:62:11     - Unknown word (Tail)         -- Tail (Result, Length (Result
Engine/neo.adb:62:25     - Unknown word (Length)       -- Tail (Result, Length (Result) - Index (Result
Engine/neo.adb:63:44     - Unknown word (main)         -- Index (Result, "b__main");
Engine/neo.adb:65:44     - Unknown word (Length)       -- Head_Index - EOL_8'Length);
Engine/neo.adb:67:14     - Unknown word (Propagate)    -- -- Propagate the exception with the
Engine/neo.adb:67:47     - Unknown word (trimmed)      -- the exception with the trimmed stack trace as its message
Engine/neo.adb:68:17     - Unknown word (Program)      -- raise Program_Error with To_Str_8
Engine/neo.adb:77:18     - Unknown word (Safe)         -- protected body Safe_Status is
Engine/neo.adb:78:17     - Unknown word (Occupied)     -- procedure Occupied (Val : Bool) is begin
Engine/neo.adb:79:16     - Unknown word (Occupied)     -- function Occupied return Bool is begin
Engine/neo.adb:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo.adb:83:6      - Unknown word (Counter)      -- -- Counter --
Engine/neo.adb:86:18     - Unknown word (Safe)         -- protected body Safe_Counter is
Engine/neo.adb:86:23     - Unknown word (Counter)      -- protected body Safe_Counter is
Engine/neo.adb:89:17     - Unknown word (Increment)    -- procedure Increment (Amount : Int) is begin
Engine/neo.adb:89:28     - Unknown word (Amount)       -- procedure Increment (Amount : Int) is begin Count
Engine/neo.adb:89:68     - Unknown word (Amount)       -- begin Count := Count - Amount; end;
Engine/neo.adb:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo.adb:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo.adb:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo.adb:90:17     - Unknown word (Decrement)    -- procedure Decrement (Amount : Int) is begin
Engine/neo.adb:90:28     - Unknown word (Amount)       -- procedure Decrement (Amount : Int) is begin Count
Engine/neo.adb:90:68     - Unknown word (Amount)       -- begin Count := Count + Amount; end;
Engine/neo.adb:91:17     - Unknown word (Increment)    -- procedure Increment is begin
Engine/neo.adb:92:17     - Unknown word (Decrement)    -- procedure Decrement is begin
Engine/neo.adb:96:6      - Unknown word (Safe)         -- -- Safe --
Engine/neo.adb:99:16     - Unknown word (Safe)         -- package body Safe is
Engine/neo.ads:101:36    - Unknown word (MEMORY)         -- is mod MEMORY_SIZE;
Engine/neo.ads:102:14    - Unknown word (Percent)        -- type Int_8_Percent is range 1..
Engine/neo.ads:102:56    - Unknown word (Percent)        -- range 1..100; for Int_8_Percent'Size use 8;
Engine/neo.ads:103:14    - Unknown word (Unsigned)       -- type Int_2_Unsigned is mod 2 ** 2
Engine/neo.ads:104:14    - Unknown word (Unsigned)       -- type Int_4_Unsigned is mod 2 ** 4
Engine/neo.ads:105:17    - Unknown word (Unsigned)       -- subtype Int_8_Unsigned is Unsigned_8;
Engine/neo.ads:105:32    - Unknown word (Unsigned)       -- Int_8_Unsigned is Unsigned_8;
Engine/neo.ads:106:17    - Unknown word (Unsigned)       -- subtype Int_8_Unsigned_C is Interfaces.C.Unsigned
Engine/neo.ads:107:17    - Unknown word (Signed)         -- subtype Int_8_Signed is Short_Short
Engine/neo.ads:108:17    - Unknown word (Signed)         -- subtype Int_8_Signed_C is Interfaces.C
Engine/neo.ads:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Engine/neo.ads:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Engine/neo.ads:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Engine/neo.ads:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Engine/neo.ads:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Engine/neo.ads:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Engine/neo.ads:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Engine/neo.ads:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Engine/neo.ads:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Engine/neo.ads:110:17    - Unknown word (Positive)       -- subtype Int_8_Positive is Int_8_Unsigned
Engine/neo.ads:113:18    - Unknown word (Signed)         -- subtype Int_16_Signed is Short_Integer
Engine/neo.ads:114:18    - Unknown word (Signed)         -- subtype Int_16_Signed_C is Interfaces.C
Engine/neo.ads:116:18    - Unknown word (Positive)       -- subtype Int_16_Positive is Int_8_Unsigned
Engine/neo.ads:119:18    - Unknown word (Signed)         -- subtype Int_32_Signed is Integer;
Engine/neo.ads:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Engine/neo.ads:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Engine/neo.ads:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Engine/neo.ads:11:96     - Unknown word (more)         -- General Public License for more details.
Engine/neo.ads:122:18    - Unknown word (Positive)       -- subtype Int_32_Positive is Positive;
Engine/neo.ads:122:32    - Unknown word (Positive)       -- Int_32_Positive is Positive;
Engine/neo.ads:128:18    - Unknown word (Positive)       -- subtype Int_64_Positive is Int_64_Signed range
Engine/neo.ads:131:21    - Unknown word (reals)          -- -- Floating point reals
Engine/neo.ads:136:19    - Unknown word (Percent)        -- subtype Real_64_Percent is Real_64 range 0
Engine/neo.ads:137:54    - Unknown word (Percent)        -- Real_64 range -Real_64_Percent'Last..Real_64_Percent
Engine/neo.ads:137:76    - Unknown word (Percent)        -- Percent'Last..Real_64_Percent'Last;
Engine/neo.ads:138:19    - Unknown word (Degree)         -- subtype Real_64_Degree is Real_64 range
Engine/neo.ads:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Engine/neo.ads:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Engine/neo.ads:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Engine/neo.ads:13:8      - Unknown word (should)       -- -- You should have received a copy
Engine/neo.ads:144:19    - Unknown word (Degree)         -- subtype Real_32_Degree is Real_32 range
Engine/neo.ads:148:34    - Unknown word (Element)        -- Array_Stream is Stream_Element_Array;
Engine/neo.ads:16:6      - Unknown word (GNAT)         -- with GNAT.Compiler_Version;
Engine/neo.ads:175:24    - Unknown word (convience)      -- - Abbreviations for convience
Engine/neo.ads:175:6     - Unknown word (Abbreviations)  -- -- Abbreviations for convience
Engine/neo.ads:178:40    - Unknown word (Element)        -- is Stream_Element;
Engine/neo.ads:179:11    - Unknown word (Nibble)         -- subtype Nibble is Int_
Engine/neo.ads:17:21     - Unknown word (Symbolic)     -- with GNAT.Traceback.Symbolic; use GNAT
Engine/neo.ads:17:46     - Unknown word (GNAT)         -- Symbolic; use GNAT.Traceback.Symbolic;
Engine/neo.ads:17:6      - Unknown word (GNAT)         -- with GNAT.Traceback.Symbolic;
Engine/neo.ads:17:61     - Unknown word (Symbolic)     -- use GNAT.Traceback.Symbolic;
Engine/neo.ads:187:16    - Unknown word (Degree)         -- subtype Real_Degree is Real_64_Degree
Engine/neo.ads:187:41    - Unknown word (Degree)         -- Degree is Real_64_Degree;
Engine/neo.ads:18:46     - Unknown word (GNAT)         -- use GNAT.Traceback;
Engine/neo.ads:18:6      - Unknown word (GNAT)         -- with GNAT.Traceback;
Engine/neo.ads:197:15    - Unknown word (Unbound)        -- subtype Str_Unbound is Str_16_Unbound
Engine/neo.ads:197:40    - Unknown word (Unbound)        -- Unbound is Str_16_Unbound;
Engine/neo.ads:201:16    - Unknown word (conversions)    -- -- Unchecked conversions
Engine/neo.ads:226:19    - Unknown word (string)         -- -- Prerequisite string constants
Engine/neo.ads:226:26    - Unknown word (constants)      -- Prerequisite string constants
Engine/neo.ads:226:6     - Unknown word (Prerequisite)   -- -- Prerequisite string constants
Engine/neo.ads:227:3     - Unknown word (CHAR)           -- CHAR_REPLACEMENT : constant
Engine/neo.ads:227:8     - Unknown word (REPLACEMENT)    -- CHAR_REPLACEMENT : constant Char_
Engine/neo.ads:228:52    - Unknown word (ASCII)          -- constant Char_8         := ASCII.NUL;
Engine/neo.ads:228:8     - Unknown word (CHAR)           -- NULL_CHAR_8 : constant
Engine/neo.ads:229:8     - Unknown word (CHAR)           -- NULL_CHAR_8_C : constant
Engine/neo.ads:230:8     - Unknown word (CHAR)           -- NULL_CHAR_16 : constant
Engine/neo.ads:230:86    - Unknown word (CHAR)           -- (Char_8'Pos (NULL_CHAR_8));
Engine/neo.ads:236:15    - Unknown word (UNBOUND)        -- NULL_STR_32_UNBOUND : constant Str_32_Unbound
Engine/neo.ads:236:57    - Unknown word (UNBOUNDED)      -- Str_32_Unbound := NULL_UNBOUNDED_WIDE_WIDE_STRING;
Engine/neo.ads:236:67    - Unknown word (WIDE)           -- Unbound := NULL_UNBOUNDED_WIDE_WIDE_STRING;
Engine/neo.ads:236:72    - Unknown word (WIDE)           -- NULL_UNBOUNDED_WIDE_WIDE_STRING;
Engine/neo.ads:236:77    - Unknown word (STRING)         -- UNBOUNDED_WIDE_WIDE_STRING;
Engine/neo.ads:237:15    - Unknown word (UNBOUND)        -- NULL_STR_16_UNBOUND : constant Str_16_Unbound
Engine/neo.ads:237:57    - Unknown word (UNBOUNDED)      -- Str_16_Unbound := NULL_UNBOUNDED_WIDE_STRING;
Engine/neo.ads:237:67    - Unknown word (WIDE)           -- Unbound := NULL_UNBOUNDED_WIDE_STRING;
Engine/neo.ads:237:72    - Unknown word (STRING)         -- NULL_UNBOUNDED_WIDE_STRING;
Engine/neo.ads:238:12    - Unknown word (UNBOUND)        -- NULL_STR_UNBOUND : constant Str_1
Engine/neo.ads:238:64    - Unknown word (UNBOUND)        -- Unbound := NULL_STR_16_UNBOUND;
Engine/neo.ads:23:13     - Unknown word (Multiprocessors) -- with System.Multiprocessors; use System
Engine/neo.ads:23:53     - Unknown word (Multiprocessors) -- use System.Multiprocessors;
Engine/neo.ads:240:14    - Unknown word (UNBOUND)        -- NULL_STR_8_UNBOUND : constant Str_8_Unbound
Engine/neo.ads:240:57    - Unknown word (UNBOUNDED)      -- Str_8_Unbound := NULL_UNBOUNDED_STRING;
Engine/neo.ads:240:67    - Unknown word (STRING)         -- Unbound := NULL_UNBOUNDED_STRING;
Engine/neo.ads:245:13    - Unknown word (conversions)    -- -- String conversions
Engine/neo.ads:248:124   - Unknown word (binary)         -- Str_16; -- For hex or binary strings
Engine/neo.ads:248:131   - Unknown word (strings)        -- - For hex or binary strings
Engine/neo.ads:248:73    - Unknown word (Zeros)          -- Base : Positive; Do_Pad_Zeros : Bool := True) return
Engine/neo.ads:248:89    - Unknown word (True)           -- Pad_Zeros : Bool := True) return Str_16; -- For
Engine/neo.ads:252:112   - Unknown word (REPLACEMENT)    -- To_String (Item, CHAR_REPLACEMENT));
Engine/neo.ads:25:21     - Unknown word (Elements)        -- with System.Storage_Elements; use System
Engine/neo.ads:25:61     - Unknown word (Elements)        -- use System.Storage_Elements;
Engine/neo.ads:280:104   - Unknown word (True)           -- is (To_Ada (Item, True));
Engine/neo.ads:281:104   - Unknown word (True)           -- is (To_C   (Item, True));
Engine/neo.ads:28:10     - Unknown word (Numerics)        -- with Ada.Numerics;
Engine/neo.ads:28:50     - Unknown word (Numerics)        -- use Ada.Numerics;
Engine/neo.ads:29:10     - Unknown word (Exceptions)      -- with Ada.Exceptions;
Engine/neo.ads:29:50     - Unknown word (Exceptions)      -- use Ada.Exceptions;
Engine/neo.ads:30:10     - Unknown word (Finalization)    -- with Ada.Finalization; use
Engine/neo.ads:30:50     - Unknown word (Finalization)    -- use Ada.Finalization;
Engine/neo.ads:310:108   - Unknown word (This)           -- renames To_Str_16; -- This function should be named
Engine/neo.ads:310:122   - Unknown word (should)         -- 6; -- This function should be named "S"
Engine/neo.ads:32:10     - Unknown word (Calendar)        -- with Ada.Calendar;
Engine/neo.ads:32:50     - Unknown word (Calendar)        -- use Ada.Calendar;
Engine/neo.ads:332:13    - Unknown word (constants)      -- -- String constants requiring conversions
Engine/neo.ads:332:23    - Unknown word (requiring)      -- -- String constants requiring conversions
Engine/neo.ads:332:33    - Unknown word (conversions)    -- constants requiring conversions
Engine/neo.ads:33:10     - Unknown word (Calendar)        -- with Ada.Calendar.Formatting;
Engine/neo.ads:33:19     - Unknown word (Formatting)      -- with Ada.Calendar.Formatting; use Ada
Engine/neo.ads:33:50     - Unknown word (Calendar)        -- use Ada.Calendar.Formatting;
Engine/neo.ads:33:59     - Unknown word (Formatting)      -- use Ada.Calendar.Formatting;
Engine/neo.ads:34:10     - Unknown word (Characters)      -- with Ada.Characters.Latin_1;
Engine/neo.ads:34:21     - Unknown word (Latin)           -- with Ada.Characters.Latin_1; use Ada
Engine/neo.ads:34:50     - Unknown word (Characters)      -- use Ada.Characters.Latin_1;
Engine/neo.ads:34:61     - Unknown word (Latin)           -- use Ada.Characters.Latin_1;
Engine/neo.ads:355:30    - Unknown word (separator)      -- need to get the path separator explicitly because Windows
Engine/neo.ads:355:40    - Unknown word (explicitly)     -- get the path separator explicitly because Windows uses
Engine/neo.ads:355:51    - Unknown word (because)       -- separator explicitly because Windows uses backslashes
Engine/neo.ads:355:67    - Unknown word (uses)          -- explicitly because Windows uses backslashes
Engine/neo.ads:355:72    - Unknown word (backslashes)   -- because Windows uses backslashes
Engine/neo.ads:355:9     - Unknown word (need)           -- -- We need to get the path separator
Engine/neo.ads:356:17    - Unknown word (Separator)     -- function Path_Separator return Char is ((if
Engine/neo.ads:357:39    - Unknown word (Separator)     -- return Char renames Path_Separator; -- For convience
Engine/neo.ads:357:57    - Unknown word (convience)     -- Path_Separator; -- For convience
Engine/neo.ads:35:10     - Unknown word (Characters)      -- with Ada.Characters.Wide_Latin_1;
Engine/neo.ads:35:21     - Unknown word (Wide)            -- with Ada.Characters.Wide_Latin_1;
Engine/neo.ads:35:26     - Unknown word (Latin)           -- Ada.Characters.Wide_Latin_1;
Engine/neo.ads:363:45    - Unknown word (calls)         -- imported C function calls. They raise a Program
Engine/neo.ads:363:52    - Unknown word (They)          -- imported C function calls. They raise a Program_Error
Engine/neo.ads:363:6     - Unknown word (Assertion)     -- -- Assertion to check imported C
Engine/neo.ads:363:65    - Unknown word (Program)       -- calls. They raise a Program_Error if the value is
Engine/neo.ads:364:13    - Unknown word (Assert)        -- procedure Assert (Val : Bool);
Engine/neo.ads:365:13    - Unknown word (Assert)        -- procedure Assert (Val : Ptr);
Engine/neo.ads:366:13    - Unknown word (Assert)        -- procedure Assert (Val : Int_Ptr);
Engine/neo.ads:367:13    - Unknown word (Assert)        -- procedure Assert (Val : Int_C);
Engine/neo.ads:368:13    - Unknown word (Assert)        -- procedure Assert (Val : Int_Unsigned
Engine/neo.ads:36:10     - Unknown word (Characters)      -- with Ada.Characters.Wide_Wide_Latin_1;
Engine/neo.ads:36:21     - Unknown word (Wide)            -- with Ada.Characters.Wide_Wide_Latin_1;
Engine/neo.ads:36:26     - Unknown word (Wide)            -- Ada.Characters.Wide_Wide_Latin_1;
Engine/neo.ads:36:31     - Unknown word (Latin)           -- Characters.Wide_Wide_Latin_1;
Engine/neo.ads:379:13    - Unknown word (procedures)    -- -- Ignore procedures swallow the result of
Engine/neo.ads:379:24    - Unknown word (swallow)       -- - Ignore procedures swallow the result of C functions
Engine/neo.ads:379:58    - Unknown word (that)          -- result of C functions that return useless results
Engine/neo.ads:379:70    - Unknown word (useless)       -- functions that return useless results
Engine/neo.ads:37:10     - Unknown word (Characters)      -- with Ada.Characters.Handling;
Engine/neo.ads:37:21     - Unknown word (Handling)        -- with Ada.Characters.Handling; use Ada
Engine/neo.ads:37:61     - Unknown word (Handling)        -- use Ada.Characters.Handling;
Engine/neo.ads:38:10     - Unknown word (Wide)            -- with Ada.Wide_Characters.Handling
Engine/neo.ads:38:26     - Unknown word (Handling)        -- Ada.Wide_Characters.Handling; use Ada.Wide
Engine/neo.ads:38:50     - Unknown word (Wide)            -- Handling; use Ada.Wide_Characters.Handling
Engine/neo.ads:38:66     - Unknown word (Handling)        -- Ada.Wide_Characters.Handling;
Engine/neo.ads:391:22    - Unknown word (safe)          -- -- A mutex or task-safe flag, however you want
Engine/neo.ads:391:27    - Unknown word (flag)          -- A mutex or task-safe flag, however you want to
Engine/neo.ads:391:33    - Unknown word (however)       -- mutex or task-safe flag, however you want to look at
Engine/neo.ads:391:45    - Unknown word (want)          -- safe flag, however you want to look at it...
Engine/neo.ads:391:53    - Unknown word (look)          -- however you want to look at it...
Engine/neo.ads:392:18    - Unknown word (Safe)          -- protected type Safe_Status with Lock_Free
Engine/neo.ads:393:17    - Unknown word (Occupied)      -- procedure Occupied (Val : Bool);
Engine/neo.ads:394:16    - Unknown word (Occupied)      -- function Occupied return Bool;
Engine/neo.ads:396:24    - Unknown word (False)         -- Status : Bool := False;
Engine/neo.ads:39:15     - Unknown word (Identification)  -- with Ada.Task_Identification; use Ada
Engine/neo.ads:39:55     - Unknown word (Identification)  -- use Ada.Task_Identification;
Engine/neo.ads:400:6     - Unknown word (Counter)       -- -- Counter --
Engine/neo.ads:403:18    - Unknown word (Safe)          -- protected type Safe_Counter with Lock_Free
Engine/neo.ads:403:23    - Unknown word (Counter)       -- protected type Safe_Counter with Lock_Free is
Engine/neo.ads:406:17    - Unknown word (Increment)     -- procedure Increment (Amount : Int);
Engine/neo.ads:406:28    - Unknown word (Amount)        -- procedure Increment (Amount : Int);
Engine/neo.ads:407:17    - Unknown word (Increment)     -- procedure Increment;
Engine/neo.ads:408:17    - Unknown word (Decrement)     -- procedure Decrement (Amount : Int);
Engine/neo.ads:408:28    - Unknown word (Amount)        -- procedure Decrement (Amount : Int);
Engine/neo.ads:409:17    - Unknown word (Decrement)     -- procedure Decrement;
Engine/neo.ads:40:8      - Unknown word (Warnings)        -- pragma Warnings (Off);
Engine/neo.ads:415:6     - Unknown word (Safe)          -- -- Safe --
Engine/neo.ads:419:10    - Unknown word (Safe)          -- type Safe_T is private;
Engine/neo.ads:41:10     - Unknown word (Strings)         -- with Ada.Strings.Superbounded;
Engine/neo.ads:41:18     - Unknown word (Superbounded)    -- with Ada.Strings.Superbounded; use Ada.Strings
Engine/neo.ads:41:50     - Unknown word (Strings)         -- perbounded; use Ada.Strings.Superbounded;
Engine/neo.ads:41:58     - Unknown word (Superbounded)    -- use Ada.Strings.Superbounded;
Engine/neo.ads:420:15    - Unknown word (Safe)          -- Initial : Safe_T;
Engine/neo.ads:420:5     - Unknown word (Initial)       -- Initial : Safe_T;
Engine/neo.ads:426:28    - Unknown word (Initial)       -- Data : Safe_T := Initial;
Engine/neo.ads:42:10     - Unknown word (Strings)         -- with Ada.Strings.Wide_Superbounded;
Engine/neo.ads:42:23     - Unknown word (Superbounded)    -- with Ada.Strings.Wide_Superbounded; use Ada.Strings
Engine/neo.ads:42:50     - Unknown word (Strings)         -- Superbounded; use Ada.Strings.Wide_Superbounded;
Engine/neo.ads:42:63     - Unknown word (Superbounded)    -- use Ada.Strings.Wide_Superbounded;
Engine/neo.ads:432:5     - Unknown word (Initial)       -- Initial : Safe_T;
Engine/neo.ads:433:16    - Unknown word (Discrete)      -- package Safe_Discrete is
Engine/neo.ads:438:28    - Unknown word (Initial)       -- Data : Safe_T := Initial;
Engine/neo.ads:43:10     - Unknown word (Strings)         -- with Ada.Strings.Wide_Wide_Superbounded
Engine/neo.ads:43:28     - Unknown word (Superbounded)    -- Ada.Strings.Wide_Wide_Superbounded; use Ada.Strings.Wide
Engine/neo.ads:444:5     - Unknown word (Initial)       -- Initial : Safe_T;
Engine/neo.ads:44:8      - Unknown word (Warnings)        -- pragma Warnings (On);
Engine/neo.ads:460:20    - Unknown word (Duration)      -- Last : Duration := 0.0;
Engine/neo.ads:461:10    - Unknown word (Stopped)       -- Is_Stopped : Bool     := False
Engine/neo.ads:461:32    - Unknown word (False)         -- Stopped : Bool     := False;
Engine/neo.ads:464:16    - Unknown word (Duration)      -- function Get_Duration (Timer :        Timer
Engine/neo.ads:464:63    - Unknown word (Duration)      -- Timer_State) return Duration;
Engine/neo.ads:469:6     - Unknown word (Sizes)         -- -- Sizes --
Engine/neo.ads:477:6     - Unknown word (Color)         -- -- Color --
Engine/neo.ads:480:42    - Unknown word (Blue)          -- is record Red, Green, Blue, Alpha : Byte := 16
Engine/neo.ads:480:8     - Unknown word (Color)         -- type Color_State is record Red
Engine/neo.ads:481:33    - Unknown word (Color)         -- COLOR : constant Color_State := (16#FF#, 1
Engine/neo.ads:481:8     - Unknown word (COLOR)         -- NULL_COLOR : constant Color
Engine/neo.ads:482:3     - Unknown word (COLOR)         -- COLOR_RED : constant
Engine/neo.ads:482:33    - Unknown word (Color)         -- : constant Color_State := (16#FF#, 1
Engine/neo.ads:483:3     - Unknown word (COLOR)         -- COLOR_TAN : constant
Engine/neo.ads:483:33    - Unknown word (Color)         -- : constant Color_State := (16#D2#, 1
Engine/neo.ads:484:3     - Unknown word (COLOR)         -- COLOR_BLUE : constant
Engine/neo.ads:484:9     - Unknown word (BLUE)          -- COLOR_BLUE : constant Color
Engine/neo.ads:485:3     - Unknown word (COLOR)         -- COLOR_PINK : constant
Engine/neo.ads:485:9     - Unknown word (PINK)          -- COLOR_PINK : constant Color
Engine/neo.ads:486:9     - Unknown word (AQUA)          -- COLOR_AQUA : constant Color
Engine/neo.ads:487:9     - Unknown word (GRAY)          -- COLOR_GRAY : constant Color
Engine/neo.ads:488:9     - Unknown word (CYAN)          -- COLOR_CYAN : constant Color
Engine/neo.ads:489:9     - Unknown word (TEAL)          -- COLOR_TEAL : constant Color
Engine/neo.ads:490:9     - Unknown word (LIME)          -- COLOR_LIME : constant Color
Engine/neo.ads:491:9     - Unknown word (PUCE)          -- COLOR_PUCE : constant Color
Engine/neo.ads:492:9     - Unknown word (PLUM)          -- COLOR_PLUM : constant Color
Engine/neo.ads:493:9     - Unknown word (MAUVE)         -- COLOR_MAUVE : constant Color
Engine/neo.ads:495:9     - Unknown word (WHITE)         -- COLOR_WHITE : constant Color
Engine/neo.ads:497:9     - Unknown word (KHAKI)         -- COLOR_KHAKI : constant Color
Engine/neo.ads:498:9     - Unknown word (IVORY)         -- COLOR_IVORY : constant Color
Engine/neo.ads:499:9     - Unknown word (BEIGE)         -- COLOR_BEIGE : constant Color
Engine/neo.ads:49:18     - Unknown word (Unbounded)       -- with Ada.Strings.Unbounded; use Ada
Engine/neo.ads:49:58     - Unknown word (Unbounded)       -- use Ada.Strings.Unbounded;
Engine/neo.ads:500:9     - Unknown word (WHEAT)         -- COLOR_WHEAT : constant Color
Engine/neo.ads:501:9     - Unknown word (CORAL)         -- COLOR_CORAL : constant Color
Engine/neo.ads:503:9     - Unknown word (SILVER)        -- COLOR_SILVER : constant Color
Engine/neo.ads:504:9     - Unknown word (YELLOW)       -- COLOR_YELLOW : constant Color
Engine/neo.ads:505:9     - Unknown word (ORANGE)       -- COLOR_ORANGE : constant Color
Engine/neo.ads:506:9     - Unknown word (VIOLET)       -- COLOR_VIOLET : constant Color
Engine/neo.ads:507:9     - Unknown word (PURPLE)       -- COLOR_PURPLE : constant Color
Engine/neo.ads:508:9     - Unknown word (SALMON)       -- COLOR_SALMON : constant Color
Engine/neo.ads:509:9     - Unknown word (INDIGO)       -- COLOR_INDIGO : constant Color
Engine/neo.ads:50:23     - Unknown word (Unbounded)       -- with Ada.Strings.Wide_Unbounded; use Ada.Strings
Engine/neo.ads:50:63     - Unknown word (Unbounded)       -- use Ada.Strings.Wide_Unbounded;
Engine/neo.ads:510:9     - Unknown word (MAROON)       -- COLOR_MAROON : constant Color
Engine/neo.ads:511:9     - Unknown word (GOLDEN)       -- COLOR_GOLDEN : constant Color
Engine/neo.ads:512:9     - Unknown word (MAGENTA)      -- COLOR_MAGENTA : constant Color
Engine/neo.ads:513:9     - Unknown word (FUCHSIA)      -- COLOR_FUCHSIA : constant Color
Engine/neo.ads:514:9     - Unknown word (CRIMSON)      -- COLOR_CRIMSON : constant Color
Engine/neo.ads:515:9     - Unknown word (LAVENDER)     -- COLOR_LAVENDER : constant Color
Engine/neo.ads:516:13    - Unknown word (BLUE)         -- COLOR_SKY_BLUE : constant Color
Engine/neo.ads:517:9     - Unknown word (CHARCOAL)     -- COLOR_CHARCOAL : constant Color
Engine/neo.ads:518:13    - Unknown word (PINK)         -- COLOR_HOT_PINK : constant Color
Engine/neo.ads:519:14    - Unknown word (BLUE)         -- COLOR_NAVY_BLUE : constant Color
Engine/neo.ads:519:9     - Unknown word (NAVY)         -- COLOR_NAVY_BLUE : constant Color
Engine/neo.ads:51:28     - Unknown word (Unbounded)       -- Ada.Strings.Wide_Wide_Unbounded; use Ada.Strings
Engine/neo.ads:520:9     - Unknown word (GOLDEN)       -- COLOR_GOLDEN_ROD : constant Color
Engine/neo.ads:521:15    - Unknown word (BLUE)         -- COLOR_LIGHT_BLUE : constant Color_State
Engine/neo.ads:522:15    - Unknown word (BLUE)         -- COLOR_ROYAL_BLUE : constant Color_State
Engine/neo.ads:523:9     - Unknown word (AQUAMARINE)   -- COLOR_AQUAMARINE : constant Color_State
Engine/neo.ads:524:9     - Unknown word (CHARTREUSE)   -- COLOR_CHARTREUSE : constant Color_State
Engine/neo.ads:525:9     - Unknown word (FOREST)       -- COLOR_FOREST_GREEN : constant Color
Engine/neo.ads:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Engine/neo.ads:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Engine/neo.ads:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Engine/neo.ads:61:11     - Unknown word (constants)       -- -- String constants and base data types
Engine/neo.ads:61:4      - Unknown word (String)          -- -- String constants and base data
Engine/neo.ads:70:11     - Unknown word (Latin)           -- package Latin_32 renames Ada.Characters
Engine/neo.ads:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Engine/neo.ads:80:11     - Unknown word (Char)            -- subtype Char_8_C is Char;
Engine/neo.ads:80:24     - Unknown word (Char)            -- subtype Char_8_C  is Char;
Engine/neo.ads:81:11     - Unknown word (Char)            -- subtype Char_8 is Character;
Engine/neo.ads:81:24     - Unknown word (Character)       -- subtype Char_8    is Character;
Engine/neo.ads:82:11     - Unknown word (Char)            -- subtype Char_16_C is WChar_T;
Engine/neo.ads:83:11     - Unknown word (Char)            -- subtype Char_16 is Wide_Character
Engine/neo.ads:83:29     - Unknown word (Character)       -- subtype Char_16   is Wide_Character;
Engine/neo.ads:84:34     - Unknown word (Character)       -- Char_32 is Wide_Wide_Character;
Engine/neo.ads:88:29     - Unknown word (String)          -- subtype Str_8          is String;
Engine/neo.ads:89:18     - Unknown word (Unbound)         -- subtype Str_32_Unbound is Unbounded_Wide_Wide
Engine/neo.ads:89:49     - Unknown word (String)          -- Unbounded_Wide_Wide_String;
Engine/neo.ads:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Engine/neo.ads:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Engine/neo.ads:8:94      - Unknown word (later)        -- at your option) any later version.
Engine/neo.ads:90:18     - Unknown word (Unbound)         -- subtype Str_16_Unbound is Unbounded_Wide_String
Engine/neo.ads:90:44     - Unknown word (String)          -- Unbound is Unbounded_Wide_String;
Engine/neo.ads:91:17     - Unknown word (Unbound)         -- subtype Str_8_Unbound is Unbounded_String
Engine/neo.ads:91:39     - Unknown word (String)         -- Unbound is Unbounded_String;
Errors:
Games/DOOM/Base/impulses.adb:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Games/DOOM/Base/impulses.adb:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Games/DOOM/Base/impulses.adb:10:110    - Unknown word (warranty)     -- without even the implied warranty of                -
Games/DOOM/Base/impulses.adb:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Games/DOOM/Base/impulses.adb:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Games/DOOM/Base/impulses.adb:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Games/DOOM/Base/impulses.adb:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Games/DOOM/Base/impulses.adb:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Games/DOOM/Base/impulses.adb:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Games/DOOM/Base/impulses.adb:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Games/DOOM/Base/impulses.adb:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Games/DOOM/Base/impulses.adb:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Games/DOOM/Base/impulses.adb:11:96     - Unknown word (more)         -- General Public License for more details.
Games/DOOM/Base/impulses.adb:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Games/DOOM/Base/impulses.adb:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Games/DOOM/Base/impulses.adb:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Games/DOOM/Base/impulses.adb:13:8      - Unknown word (should)       -- -- You should have received a copy
Games/DOOM/Base/impulses.adb:16:14     - Unknown word (Impulses)     -- package body Impulses is
Games/DOOM/Base/impulses.adb:19:6      - Unknown word (Movement)     -- -- Movement --
Games/DOOM/Base/impulses.adb:22:14     - Unknown word (Callback)     -- procedure Callback_Move_Backward (Args
Games/DOOM/Base/impulses.adb:22:28     - Unknown word (Backward)     -- procedure Callback_Move_Backward (Args : Vector_Impulse
Games/DOOM/Base/impulses.adb:22:45     - Unknown word (Vector)       -- Move_Backward (Args : Vector_Impulse_Arg.Unsafe_Array
Games/DOOM/Base/impulses.adb:22:52     - Unknown word (Impulse)      -- Backward (Args : Vector_Impulse_Arg.Unsafe_Array) is
Games/DOOM/Base/impulses.adb:22:64     - Unknown word (Unsafe)       -- Vector_Impulse_Arg.Unsafe_Array) is
Games/DOOM/Base/impulses.adb:24:28     - Unknown word (Press)        -- if Args (Args'First).Press.Down and not In_Menu
Games/DOOM/Base/impulses.adb:25:26     - Unknown word (Backward)     -- Player_One.Move (Backward_Direction, Args (Args
Games/DOOM/Base/impulses.adb:25:35     - Unknown word (Direction)    -- Player_One.Move (Backward_Direction, Args (Args'First).Press
Games/DOOM/Base/impulses.adb:25:64     - Unknown word (Press)        -- Direction, Args (Args'First).Press.Last);
Games/DOOM/Base/impulses.adb:28:13     - Unknown word (Callback)     -- procedure Callback_Move_Forward (Args
Games/DOOM/Base/impulses.adb:28:43     - Unknown word (Vector)       -- Move_Forward (Args : Vector_Impulse_Arg.Unsafe_Array
Games/DOOM/Base/impulses.adb:28:50     - Unknown word (Impulse)      -- Forward (Args : Vector_Impulse_Arg.Unsafe_Array) is
Games/DOOM/Base/impulses.adb:28:62     - Unknown word (Unsafe)       -- Vector_Impulse_Arg.Unsafe_Array) is
Games/DOOM/Base/impulses.adb:30:28     - Unknown word (Press)        -- if Args (Args'First).Press.Down and not In_Menu
Games/DOOM/Base/impulses.adb:31:34     - Unknown word (Direction)    -- Player_One.Move (Forward_Direction, Args (Args'First).Press
Games/DOOM/Base/impulses.adb:31:63     - Unknown word (Press)        -- Direction, Args (Args'First).Press.Last);
Games/DOOM/Base/impulses.adb:34:14     - Unknown word (Callback)     -- procedure Callback_Move_Right (Args : Vector
Games/DOOM/Base/impulses.adb:34:42     - Unknown word (Vector)       -- Callback_Move_Right (Args : Vector_Impulse_Arg.Unsafe_Array
Games/DOOM/Base/impulses.adb:34:49     - Unknown word (Impulse)      -- Right (Args : Vector_Impulse_Arg.Unsafe_Array) is
Games/DOOM/Base/impulses.adb:34:61     - Unknown word (Unsafe)       -- Vector_Impulse_Arg.Unsafe_Array) is
Games/DOOM/Base/impulses.adb:36:28     - Unknown word (Press)        -- if Args (Args'First).Press.Down and not In_Menu
Games/DOOM/Base/impulses.adb:37:32     - Unknown word (Direction)    -- Player_One.Move (Right_Direction, Args (Args'First).Press
Games/DOOM/Base/impulses.adb:40:13     - Unknown word (Callback)     -- procedure Callback_Move_Left (Args : Vector
Games/DOOM/Base/impulses.adb:40:40     - Unknown word (Vector)       -- Callback_Move_Left (Args : Vector_Impulse_Arg.Unsafe_Array
Games/DOOM/Base/impulses.adb:40:47     - Unknown word (Impulse)      -- Left (Args : Vector_Impulse_Arg.Unsafe_Array) is
Games/DOOM/Base/impulses.adb:40:59     - Unknown word (Unsafe)       -- Vector_Impulse_Arg.Unsafe_Array) is
Games/DOOM/Base/impulses.adb:43:31     - Unknown word (Direction)    -- Player_One.Move (Left_Direction, Args (Args'First).Press
Games/DOOM/Base/impulses.adb:48:6      - Unknown word (Look)         -- -- Look --
Games/DOOM/Base/impulses.adb:51:13     - Unknown word (Callback)     -- procedure Callback_Look (Args : Vector
Games/DOOM/Base/impulses.adb:51:22     - Unknown word (Look)         -- procedure Callback_Look (Args : Vector_Impulse
Games/DOOM/Base/impulses.adb:51:35     - Unknown word (Vector)       -- Callback_Look (Args : Vector_Impulse_Arg.Unsafe_Array
Games/DOOM/Base/impulses.adb:51:42     - Unknown word (Impulse)      -- Look (Args : Vector_Impulse_Arg.Unsafe_Array) is
Games/DOOM/Base/impulses.adb:51:54     - Unknown word (Unsafe)       -- Vector_Impulse_Arg.Unsafe_Array) is
Games/DOOM/Base/impulses.adb:54:20     - Unknown word (Look)         -- Player_One.Look (Args (Args'First).Cursor
Games/DOOM/Base/impulses.adb:54:44     - Unknown word (Cursor)       -- Look (Args (Args'First).Cursor.X, Args (Args'First
Games/DOOM/Base/impulses.adb:54:72     - Unknown word (Cursor)       -- X, Args (Args'First).Cursor.Y);
Games/DOOM/Base/impulses.adb:5:52      - Unknown word (Copyright)  -- Copyright (C) 2016 Justin Squirek
Games/DOOM/Base/impulses.adb:5:71      - Unknown word (Justin)     -- Copyright (C) 2016 Justin Squirek
Games/DOOM/Base/impulses.adb:5:78      - Unknown word (Squirek)    -- Copyright (C) 2016 Justin Squirek
Games/DOOM/Base/impulses.adb:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Games/DOOM/Base/impulses.adb:8:30      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Games/DOOM/Base/impulses.adb:8:70      - Unknown word (your)         -- the License, or (at your option) any later version
Games/DOOM/Base/impulses.adb:8:87      - Unknown word (later)        -- at your option) any later version.
Games/DOOM/Base/impulses.ads:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Games/DOOM/Base/impulses.ads:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Games/DOOM/Base/impulses.ads:10:110    - Unknown word (warranty)     -- without even the implied warranty of                -
Games/DOOM/Base/impulses.ads:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Games/DOOM/Base/impulses.ads:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Games/DOOM/Base/impulses.ads:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Games/DOOM/Base/impulses.ads:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Games/DOOM/Base/impulses.ads:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Games/DOOM/Base/impulses.ads:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Games/DOOM/Base/impulses.ads:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Games/DOOM/Base/impulses.ads:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Games/DOOM/Base/impulses.ads:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Games/DOOM/Base/impulses.ads:11:96     - Unknown word (more)         -- General Public License for more details.
Games/DOOM/Base/impulses.ads:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Games/DOOM/Base/impulses.ads:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Games/DOOM/Base/impulses.ads:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Games/DOOM/Base/impulses.ads:13:8      - Unknown word (should)       -- -- You should have received a copy
Games/DOOM/Base/impulses.ads:17:15     - Unknown word (Math)         -- with Neo.Core.Math; use Neo.Core.Math;
Games/DOOM/Base/impulses.ads:17:34     - Unknown word (Math)         -- Core.Math; use Neo.Core.Math;
Games/DOOM/Base/impulses.ads:22:14     - Unknown word (Math)         -- use Neo.Core.Math.Calc_32;
Games/DOOM/Base/impulses.ads:24:10     - Unknown word (Numerics)     -- with Ada.Numerics; use Ada.Numerics;
Games/DOOM/Base/impulses.ads:24:28     - Unknown word (Numerics)     -- Ada.Numerics; use Ada.Numerics;
Games/DOOM/Base/impulses.ads:25:10     - Unknown word (Calendar)     -- with Ada.Calendar; use Ada.Calendar;
Games/DOOM/Base/impulses.ads:25:28     - Unknown word (Calendar)     -- Ada.Calendar; use Ada.Calendar;
Games/DOOM/Base/impulses.ads:27:9      - Unknown word (Impulses)     -- package Impulses is
Games/DOOM/Base/impulses.ads:30:6      - Unknown word (Movement)     -- -- Movement --
Games/DOOM/Base/impulses.ads:36:13     - Unknown word (Callback)     -- procedure Callback_Move_Forward (Args
Games/DOOM/Base/impulses.ads:36:43     - Unknown word (Vector)       -- Move_Forward (Args : Vector_Impulse_Arg.Unsafe_Array
Games/DOOM/Base/impulses.ads:36:50     - Unknown word (Impulse)      -- Forward (Args : Vector_Impulse_Arg.Unsafe_Array);
Games/DOOM/Base/impulses.ads:36:62     - Unknown word (Unsafe)       -- Vector_Impulse_Arg.Unsafe_Array);
Games/DOOM/Base/impulses.ads:37:31     - Unknown word (Impulse)      -- Move_Forward is new Impulse ("moveforward", Callback
Games/DOOM/Base/impulses.ads:37:41     - Unknown word (moveforward)  -- Forward is new Impulse ("moveforward", Callback_Move_Forward
Games/DOOM/Base/impulses.ads:37:55     - Unknown word (Callback)     -- Impulse ("moveforward", Callback_Move_Forward, Rapid
Games/DOOM/Base/impulses.ads:37:78     - Unknown word (Rapid)        -- Callback_Move_Forward, Rapid => True);
Games/DOOM/Base/impulses.ads:37:87     - Unknown word (True)         -- Move_Forward, Rapid => True);
Games/DOOM/Base/impulses.ads:39:13     - Unknown word (Callback)     -- procedure Callback_Move_Left (Args : Vector
Games/DOOM/Base/impulses.ads:39:40     - Unknown word (Vector)       -- Callback_Move_Left (Args : Vector_Impulse_Arg.Unsafe_Array
Games/DOOM/Base/impulses.ads:39:47     - Unknown word (Impulse)      -- Left (Args : Vector_Impulse_Arg.Unsafe_Array);
Games/DOOM/Base/impulses.ads:39:59     - Unknown word (Unsafe)       -- Vector_Impulse_Arg.Unsafe_Array);
Games/DOOM/Base/impulses.ads:40:28     - Unknown word (Impulse)      -- package Move_Left is new Impulse ("moveleft", Callback
Games/DOOM/Base/impulses.ads:40:38     - Unknown word (moveleft)     -- Left is new Impulse ("moveleft", Callback_Move_Left
Games/DOOM/Base/impulses.ads:40:49     - Unknown word (Callback)     -- Impulse ("moveleft", Callback_Move_Left, Rapid =>
Games/DOOM/Base/impulses.ads:40:69     - Unknown word (Rapid)        -- Callback_Move_Left, Rapid => True);
Games/DOOM/Base/impulses.ads:40:78     - Unknown word (True)         -- Move_Left, Rapid => True);
Games/DOOM/Base/impulses.ads:42:13     - Unknown word (Callback)     -- procedure Callback_Move_Right (Args : Vector
Games/DOOM/Base/impulses.ads:42:41     - Unknown word (Vector)       -- Callback_Move_Right (Args : Vector_Impulse_Arg.Unsafe_Array
Games/DOOM/Base/impulses.ads:42:48     - Unknown word (Impulse)      -- Right (Args : Vector_Impulse_Arg.Unsafe_Array);
Games/DOOM/Base/impulses.ads:42:60     - Unknown word (Unsafe)       -- Vector_Impulse_Arg.Unsafe_Array);
Games/DOOM/Base/impulses.ads:43:39     - Unknown word (moveright)    -- Right is new Impulse ("moveright", Callback_Move_Right
Games/DOOM/Base/impulses.ads:43:72     - Unknown word (Rapid)        -- Callback_Move_Right, Rapid => True);
Games/DOOM/Base/impulses.ads:43:81     - Unknown word (True)         -- Move_Right, Rapid => True);
Games/DOOM/Base/impulses.ads:45:27     - Unknown word (Backward)     -- procedure Callback_Move_Backward (Args : Vector_Impulse
Games/DOOM/Base/impulses.ads:45:44     - Unknown word (Vector)       -- Move_Backward (Args : Vector_Impulse_Arg.Unsafe_Array
Games/DOOM/Base/impulses.ads:45:63     - Unknown word (Unsafe)       -- Vector_Impulse_Arg.Unsafe_Array);
Games/DOOM/Base/impulses.ads:46:16     - Unknown word (Backward)     -- package Move_Backward is new Impulse ("moveback
Games/DOOM/Base/impulses.ads:46:42     - Unknown word (moveback)     -- Backward is new Impulse ("moveback", Callback_Move_Backward
Games/DOOM/Base/impulses.ads:46:67     - Unknown word (Backward)     -- moveback", Callback_Move_Backward, Rapid => True);
Games/DOOM/Base/impulses.ads:46:77     - Unknown word (Rapid)        -- Callback_Move_Backward, Rapid => True);
Games/DOOM/Base/impulses.ads:46:86     - Unknown word (True)         -- Move_Backward, Rapid => True);
Games/DOOM/Base/impulses.ads:49:6      - Unknown word (Look)         -- -- Look --
Games/DOOM/Base/impulses.ads:52:22     - Unknown word (Look)         -- procedure Callback_Look (Args : Vector_Impulse
Games/DOOM/Base/impulses.ads:52:35     - Unknown word (Vector)       -- Callback_Look (Args : Vector_Impulse_Arg.Unsafe_Array
Games/DOOM/Base/impulses.ads:52:54     - Unknown word (Unsafe)       -- Vector_Impulse_Arg.Unsafe_Array);
Games/DOOM/Base/impulses.ads:53:11     - Unknown word (Look)         -- package Look is new Impulse ("look
Games/DOOM/Base/impulses.ads:53:33     - Unknown word (look)         -- Look is new Impulse ("look", Callback_Look);
Games/DOOM/Base/impulses.ads:53:49     - Unknown word (Look)         -- Impulse ("look", Callback_Look);
Games/DOOM/Base/impulses.ads:5:52      - Unknown word (Copyright)  -- Copyright (C) 2016 Justin Squirek
Games/DOOM/Base/impulses.ads:5:71      - Unknown word (Justin)     -- Copyright (C) 2016 Justin Squirek
Games/DOOM/Base/impulses.ads:5:78      - Unknown word (Squirek)    -- Copyright (C) 2016 Justin Squirek
Games/DOOM/Base/impulses.ads:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Games/DOOM/Base/impulses.ads:8:30      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Games/DOOM/Base/impulses.ads:8:70      - Unknown word (your)         -- the License, or (at your option) any later version
Games/DOOM/Base/impulses.ads:8:87      - Unknown word (later)        -- at your option) any later version.
Games/DOOM/Base/main-menu.adb:10:102    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
Games/DOOM/Base/main-menu.adb:10:11     - Unknown word (distributed)  -- -- Neo is distributed in the hope that it
Games/DOOM/Base/main-menu.adb:10:110    - Unknown word (warranty)     -- without even the implied warranty of         --
Games/DOOM/Base/main-menu.adb:10:30     - Unknown word (hope)         -- is distributed in the hope that it will be useful
Games/DOOM/Base/main-menu.adb:10:35     - Unknown word (that)         -- distributed in the hope that it will be useful, but
Games/DOOM/Base/main-menu.adb:10:43     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
Games/DOOM/Base/main-menu.adb:10:51     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
Games/DOOM/Base/main-menu.adb:10:75     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
Games/DOOM/Base/main-menu.adb:10:93     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
Games/DOOM/Base/main-menu.adb:11:23     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
Games/DOOM/Base/main-menu.adb:11:37     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Games/DOOM/Base/main-menu.adb:11:48     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Games/DOOM/Base/main-menu.adb:11:96     - Unknown word (more)         -- General Public License for more details.
Games/DOOM/Base/main-menu.adb:13:15     - Unknown word (have)         -- -- You should have received a copy of the
Games/DOOM/Base/main-menu.adb:13:20     - Unknown word (received)     -- -- You should have received a copy of the GNU General
Games/DOOM/Base/main-menu.adb:13:70     - Unknown word (along)        -- General Public License along with Neo. If not, see
Games/DOOM/Base/main-menu.adb:13:8      - Unknown word (should)       -- -- You should have received a copy
Games/DOOM/Base/main-menu.adb:18:11     - Unknown word (Main)         -- separate (Main) procedure Menu is
Games/DOOM/Base/main-menu.adb:21:36     - Unknown word (their)        -- the materials (without their associated textures
Games/DOOM/Base/main-menu.adb:21:53     - Unknown word (textures)     -- without their associated textures)
Games/DOOM/Base/main-menu.adb:26:18     - Unknown word (scene)        -- Title ("Load scene");
Games/DOOM/Base/main-menu.adb:27:22     - Unknown word (testmap)      -- Initialize_Map ("testmap");
Games/DOOM/Base/main-menu.adb:31:12     - Unknown word (Started)      -- Line ("Started game");
Games/DOOM/Base/main-menu.adb:5:50      - Unknown word (Copyright)  -- Copyright (C) 2020 Justin Squirek
Games/DOOM/Base/main-menu.adb:5:69      - Unknown word (Justin)     -- Copyright (C) 2020 Justin Squirek
Games/DOOM/Base/main-menu.adb:5:76      - Unknown word (Squirek)    -- Copyright (C) 2020 Justin Squirek
Games/DOOM/Base/main-menu.adb:7:34      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
Games/DOOM/Base/main-menu.adb:8:37      - Unknown word (either)       -- Software Foundation, either version 3 of the License
Games/DOOM/Base/main-menu.adb:8:77      - Unknown word (your)         -- the License, or (at your option) any later version
Games/DOOM/Base/main-menu.adb:8:94      - Unknown word (later)        -- at your option) any later version.
Games/DOOM/Logs/Squirek.txt:117:15    - Unknown word (mover)         -- Buffered func_mover_6 in 0.000208000s
Games/DOOM/Logs/Squirek.txt:118:15    - Unknown word (mover)         -- Buffered func_mover_5 in 0.000175300s
Games/DOOM/Logs/Squirek.txt:119:15    - Unknown word (mover)         -- Buffered func_mover_4 in 0.000129300s
Games/DOOM/Logs/Squirek.txt:11:1      - Unknown word (Graphics)   -- Graphics API: Vulkan 1.2.155
Games/DOOM/Logs/Squirek.txt:120:15    - Unknown word (mover)         -- Buffered func_mover_3 in 0.000139400s
Games/DOOM/Logs/Squirek.txt:15:1      - Unknown word (Loaded)     -- Loaded aaduffyTest in 0.00
Games/DOOM/Logs/Squirek.txt:15:8      - Unknown word (aaduffy)    -- Loaded aaduffyTest in 0.002639800s
Games/DOOM/Logs/Squirek.txt:162:15    - Unknown word (mover)         -- Buffered func_mover_1 in 0.000291900s
Games/DOOM/Logs/Squirek.txt:16:1      - Unknown word (Loaded)     -- Loaded alphalabs in 0.0011
Games/DOOM/Logs/Squirek.txt:16:8      - Unknown word (alphalabs)  -- Loaded alphalabs in 0.001143800s
Games/DOOM/Logs/Squirek.txt:17:1      - Unknown word (Loaded)     -- Loaded andy in 0.066132300s
Games/DOOM/Logs/Squirek.txt:17:8      - Unknown word (andy)       -- Loaded andy in 0.066132300s
Games/DOOM/Logs/Squirek.txt:186:11    - Unknown word (area)          -- Buffered _area0 in 0.294469700s
Games/DOOM/Logs/Squirek.txt:187:11    - Unknown word (area)          -- Buffered _area1 in 0.183595700s
Games/DOOM/Logs/Squirek.txt:188:11    - Unknown word (area)          -- Buffered _area2 in 0.075279100s
Games/DOOM/Logs/Squirek.txt:189:11    - Unknown word (area)          -- Buffered _area4 in 0.031034900s
Games/DOOM/Logs/Squirek.txt:18:1      - Unknown word (Loaded)     -- Loaded atest in 0.00268670
Games/DOOM/Logs/Squirek.txt:18:8      - Unknown word (atest)      -- Loaded atest in 0.002686700s
Games/DOOM/Logs/Squirek.txt:190:11    - Unknown word (area)          -- Buffered _area5 in 0.000148500s
Games/DOOM/Logs/Squirek.txt:19:1      - Unknown word (Loaded)     -- Loaded base_door in 0.0050
Games/DOOM/Logs/Squirek.txt:19:13     - Unknown word (door)       -- Loaded base_door in 0.005077800s
Games/DOOM/Logs/Squirek.txt:204:17    - Unknown word (LOST)          -- VK_ERROR_DEVICE_LOST.. :[
Games/DOOM/Logs/Squirek.txt:205:1     - Unknown word (PROGRAM)       -- PROGRAM_ERROR
Games/DOOM/Logs/Squirek.txt:207:14    - Unknown word (graphics)      -- at neo-world-graphics.adb:451
Games/DOOM/Logs/Squirek.txt:208:14    - Unknown word (graphics)      -- at neo-world-graphics.adb:92
Games/DOOM/Logs/Squirek.txt:209:14    - Unknown word (graphics)      -- at neo-world-graphics.adb:1823
Games/DOOM/Logs/Squirek.txt:20:13     - Unknown word (floor)      -- Loaded base_floor in 0.008729100s
Games/DOOM/Logs/Squirek.txt:210:14    - Unknown word (graphics)      -- at neo-world-graphics.adb:1860
Games/DOOM/Logs/Squirek.txt:211:14    - Unknown word (graphics)      -- at neo-world-graphics-renderer.adb:90
Games/DOOM/Logs/Squirek.txt:211:23    - Unknown word (renderer)      -- at neo-world-graphics-renderer.adb:90
Games/DOOM/Logs/Squirek.txt:22:13     - Unknown word (trim)       -- Loaded base_trim in 0.010901800s
Games/DOOM/Logs/Squirek.txt:23:13     - Unknown word (wall)       -- Loaded base_wall in 0.030917200s
Games/DOOM/Logs/Squirek.txt:24:8      - Unknown word (berserkhelmet) -- Loaded berserkhelmet in 0.000307700s
Games/DOOM/Logs/Squirek.txt:25:8      - Unknown word (caves)         -- Loaded caves in 0.005164900s
Games/DOOM/Logs/Squirek.txt:26:8      - Unknown word (characters)    -- Loaded characters in 0.005681300s
Games/DOOM/Logs/Squirek.txt:27:8      - Unknown word (char)          -- Loaded char_common in 0.0018990
Games/DOOM/Logs/Squirek.txt:28:8      - Unknown word (decals)        -- Loaded decals in 0.011290200s
Games/DOOM/Logs/Squirek.txt:30:8      - Unknown word (door)          -- Loaded door in 0.000254700s
Games/DOOM/Logs/Squirek.txt:31:8      - Unknown word (duffy)         -- Loaded duffyTest in 0.000689000s
Games/DOOM/Logs/Squirek.txt:32:8      - Unknown word (enpro)         -- Loaded enpro in 0.005489300s
Games/DOOM/Logs/Squirek.txt:34:8      - Unknown word (glass)         -- Loaded glass in 0.000637900s
Games/DOOM/Logs/Squirek.txt:36:8      - Unknown word (hell)          -- Loaded hell in 0.007503200s
Games/DOOM/Logs/Squirek.txt:38:8      - Unknown word (invisible)     -- Loaded invisible in 0.002342300s
Games/DOOM/Logs/Squirek.txt:40:8      - Unknown word (jerry)         -- Loaded jerry in 0.000281200s
Games/DOOM/Logs/Squirek.txt:41:8      - Unknown word (kentest)       -- Loaded kentest in 0.001587000s
Games/DOOM/Logs/Squirek.txt:42:8      - Unknown word (ktest)         -- Loaded ktest in 0.000707500s
Games/DOOM/Logs/Squirek.txt:44:12     - Unknown word (floor)         -- Loaded lab_floor in 0.000220600s
Games/DOOM/Logs/Squirek.txt:45:8      - Unknown word (lights)        -- Loaded lights in 0.003186100s
Games/DOOM/Logs/Squirek.txt:47:8      - Unknown word (mapobjects)    -- Loaded mapobjects in 0.031584900s
Games/DOOM/Logs/Squirek.txt:48:8      - Unknown word (Maxtextures)   -- Loaded Maxtextures in 0.001430800s
Games/DOOM/Logs/Squirek.txt:49:8      - Unknown word (mcity)         -- Loaded mcity in 0.006512600s
Games/DOOM/Logs/Squirek.txt:4:1       - Unknown word (Started)    -- Started by Squirek on 2021-
Games/DOOM/Logs/Squirek.txt:4:12      - Unknown word (Squirek)    -- Started by Squirek on 2021-02-01 07:13
Games/DOOM/Logs/Squirek.txt:50:8      - Unknown word (misc)          -- Loaded misc in 0.000707000s
Games/DOOM/Logs/Squirek.txt:51:8      - Unknown word (monsters)      -- Loaded monsters in 0.010497700s
Games/DOOM/Logs/Squirek.txt:52:8      - Unknown word (morgue)        -- Loaded morgue in 0.000420100s
Games/DOOM/Logs/Squirek.txt:53:11     - Unknown word (lights)        -- Loaded mp_lights in 0.001082900s
Games/DOOM/Logs/Squirek.txt:56:8      - Unknown word (other)         -- Loaded other in 0.000396700s
Games/DOOM/Logs/Squirek.txt:57:8      - Unknown word (outside)       -- Loaded outside in 0.003384600s
Games/DOOM/Logs/Squirek.txt:58:8      - Unknown word (particles)     -- Loaded particles in 0.003787500s
Games/DOOM/Logs/Squirek.txt:59:8      - Unknown word (patd)          -- Loaded patd in 0.000247600s
Games/DOOM/Logs/Squirek.txt:5:7       - Unknown word (DOOM)       -- Game: DOOM 64 w/ debugging
Games/DOOM/Logs/Squirek.txt:60:8      - Unknown word (patricktest)   -- Loaded patricktest in 0.007672500s
Games/DOOM/Logs/Squirek.txt:61:8      - Unknown word (phook)         -- Loaded phook in 0.000347400s
Games/DOOM/Logs/Squirek.txt:64:14     - Unknown word (door)          -- Loaded recyc_door in 0.000223200s
Games/DOOM/Logs/Squirek.txt:64:8      - Unknown word (recyc)         -- Loaded recyc_door in 0.000223200s
Games/DOOM/Logs/Squirek.txt:65:14     - Unknown word (floor)         -- Loaded recyc_floor in 0.000232400s
Games/DOOM/Logs/Squirek.txt:65:8      - Unknown word (recyc)         -- Loaded recyc_floor in 0.00023240
Games/DOOM/Logs/Squirek.txt:66:14     - Unknown word (trim)          -- Loaded recyc_trim in 0.000393600s
Games/DOOM/Logs/Squirek.txt:66:8      - Unknown word (recyc)         -- Loaded recyc_trim in 0.000393600s
Games/DOOM/Logs/Squirek.txt:67:14     - Unknown word (wall)          -- Loaded recyc_wall in 0.000970100s
Games/DOOM/Logs/Squirek.txt:67:8      - Unknown word (recyc)         -- Loaded recyc_wall in 0.000970100s
Games/DOOM/Logs/Squirek.txt:68:8      - Unknown word (rock)          -- Loaded rock in 0.001734200s
Games/DOOM/Logs/Squirek.txt:69:8      - Unknown word (senetemp)      -- Loaded senetemp in 0.070494200s
Games/DOOM/Logs/Squirek.txt:71:12     - Unknown word (multiplayer)   -- Loaded sfx_multiplayer in 0.000414900s
Games/DOOM/Logs/Squirek.txt:72:14     - Unknown word (Demo)          -- Loaded shaderDemo in 0.000350400s
Games/DOOM/Logs/Squirek.txt:72:8      - Unknown word (shader)        -- Loaded shaderDemo in 0.000350400s
Games/DOOM/Logs/Squirek.txt:73:8      - Unknown word (skies)         -- Loaded skies in 0.000340700s
Games/DOOM/Logs/Squirek.txt:74:8      - Unknown word (sound)         -- Loaded sound in 0.000445200s
Games/DOOM/Logs/Squirek.txt:75:8      - Unknown word (stevetest)     -- Loaded stevetest in 0.001267600s
Games/DOOM/Logs/Squirek.txt:76:8      - Unknown word (stone)         -- Loaded stone in 0.000385400s
Games/DOOM/Logs/Squirek.txt:78:8      - Unknown word (vehicles)      -- Loaded vehicles in 0.000730600s
Games/DOOM/Logs/Squirek.txt:79:8      - Unknown word (Venom)         -- Loaded Venom_menu in 0.000258500s
Games/DOOM/Logs/Squirek.txt:7:11      - Unknown word (GNAT)       -- Compiler: GNAT Pro 22.0w (20210120
Games/DOOM/Logs/Squirek.txt:80:19     - Unknown word (players)       -- Loaded Venom_menu_players_d3 in 0.000671500s
Games/DOOM/Logs/Squirek.txt:80:8      - Unknown word (Venom)         -- Loaded Venom_menu_players_d3 in
Games/DOOM/Logs/Squirek.txt:82:8      - Unknown word (washroom)      -- Loaded washroom in 0.001489400s
Games/DOOM/Logs/Squirek.txt:83:8      - Unknown word (weapons)       -- Loaded weapons in 0.004903800s
Games/DOOM/Logs/Squirek.txt:84:21     - Unknown word (shotgun)       -- Loaded weapon_super_shotgun in 0.000246200s
Games/DOOM/Logs/Squirek.txt:84:8      - Unknown word (weapon)        -- Loaded weapon_super_shotgun in 0.
Games/DOOM/Logs/Squirek.txt:85:8      - Unknown word (zgraeme)       -- Loaded zgraeme in 0.001468200s
Games/DOOM/Logs/Squirek.txt:89:8      - Unknown word (testmap)       -- Loaded testmap in 0.182662100s
Games/DOOM/Logs/Squirek.txt:8:112     - Unknown word (OSXSAVE)    -- FXSR, FMA3, HTT, F16C, OSXSAVE, POPCNT, CMOV, LZCNT
Games/DOOM/Logs/Squirek.txt:8:12      - Unknown word (VENDOR)     -- CPU: INTEL_VENDOR w/ (MMX, SSE, SSE2,
Games/DOOM/Logs/Squirek.txt:8:121     - Unknown word (POPCNT)     -- HTT, F16C, OSXSAVE, POPCNT, CMOV, LZCNT)
Games/DOOM/Logs/Squirek.txt:8:129     - Unknown word (CMOV)       -- C, OSXSAVE, POPCNT, CMOV, LZCNT)
Games/DOOM/Logs/Squirek.txt:8:135     - Unknown word (LZCNT)      -- OSXSAVE, POPCNT, CMOV, LZCNT)
Games/DOOM/Logs/Squirek.txt:8:45      - Unknown word (SSSE)       -- MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, PCLMULQDQ
Games/DOOM/Logs/Squirek.txt:8:68      - Unknown word (PCLMULQDQ)  -- SSSE3, SSE4.1, SSE4.2, PCLMULQDQ, AVX, AES, FXSR, FMA
Games/DOOM/Logs/Squirek.txt:8:89      - Unknown word (FXSR)       -- PCLMULQDQ, AVX, AES, FXSR, FMA3, HTT, F16C, OSXSAVE
Games/DOOM/Resource/locale.csv:2:105     - Unknown word (vous)       -- est survenue, voudriez-vous voir plus d'informations
Games/DOOM/Resource/locale.csv:2:110     - Unknown word (voir)       -- survenue, voudriez-vous voir plus d'informations
Games/DOOM/Resource/locale.csv:2:115     - Unknown word (plus)       -- voudriez-vous voir plus d'informations?",OK
Games/DOOM/Resource/locale.csv:2:120     - Unknown word (d'informations) -- voudriez-vous voir plus d'informations?",OK,asdf,,,,,,,,,
Games/DOOM/Resource/locale.csv:2:15      - Unknown word (occurred)   -- "An error has occurred, would �,�you like to
Games/DOOM/Resource/locale.csv:2:25      - Unknown word (would)      -- error has occurred, would �,�you like to view
Games/DOOM/Resource/locale.csv:2:38      - Unknown word (like)       -- occurred, would �,�you like to view more information
Games/DOOM/Resource/locale.csv:2:51      - Unknown word (more)       -- �,�you like to view more information?","Une erreur
Games/DOOM/Resource/locale.csv:2:75      - Unknown word (erreur)     -- more information?","Une erreur est survenue, voudriez
Games/DOOM/Resource/locale.csv:2:86      - Unknown word (survenue)   -- information?","Une erreur est survenue, voudriez-vous voir
Games/DOOM/Resource/locale.csv:2:96      - Unknown word (voudriez)   -- erreur est survenue, voudriez-vous voir plus d'informations
Games/DOOM/config.txt:10:3      - Unknown word (widex)      -- w_widex 4
Games/DOOM/config.txt:11:3      - Unknown word (maxuploadmb) -- r_maxuploadmb 64
Games/DOOM/config.txt:12:3      - Unknown word (widey)       -- w_widey 3
Games/DOOM/config.txt:13:3      - Unknown word (maxhostmb)   -- r_maxhostmb 64
Games/DOOM/config.txt:14:3      - Unknown word (height)      -- w_height 600
Games/DOOM/config.txt:15:3      - Unknown word (width)       -- w_width 800
Games/DOOM/config.txt:2:30      - Unknown word (simply)     -- restore default values simply delete this file.
Games/DOOM/config.txt:2:44      - Unknown word (this)       -- values simply delete this file.
Games/DOOM/config.txt:5:17      - Unknown word (MODE)       -- w_mode WINDOWED_MODE
Games/DOOM/config.txt:5:3       - Unknown word (mode)       -- w_mode WINDOWED_MODE
Games/DOOM/config.txt:5:8       - Unknown word (WINDOWED)   -- w_mode WINDOWED_MODE
Games/DOOM/config.txt:7:3       - Unknown word (maxgpumb)   -- r_maxgpumb 128
Games/DOOM/config.txt:8:3       - Unknown word (narrowx)    -- w_narrowx 16
Games/DOOM/config.txt:9:3       - Unknown word (narrowy)    -- w_narrowy 9
Tools/compile-idmap.bat:1:2       - Unknown word (echo)       -- @echo off
Tools/compile-idmap.bat:2:14      - Unknown word (DOOM)       -- >../../Games/DOOM/Assets/Maps/delta4.idmap
Tools/compile-idmap.bat:2:26      - Unknown word (Maps)       -- ./Games/DOOM/Assets/Maps/delta4.idmap (
Tools/compile-idmap.bat:2:38      - Unknown word (idmap)      -- DOOM/Assets/Maps/delta4.idmap (
Tools/compile-idmap.bat:2:8       - Unknown word (Games)      -- >../../Games/DOOM/Assets/Maps/delta
Tools/compile-idmap.bat:3:32      - Unknown word (idmap)      -- Python27/python ./compile-idmap.py "../../Games/DOOM
Tools/compile-idmap.bat:3:48      - Unknown word (Games)      -- compile-idmap.py "../../Games/DOOM/Assets/Uncompiled
Tools/compile-idmap.bat:3:54      - Unknown word (DOOM)       -- idmap.py "../../Games/DOOM/Assets/Uncompiled/Maps
Tools/compile-idmap.bat:3:66      - Unknown word (Uncompiled) -- ./Games/DOOM/Assets/Uncompiled/Maps/delta4"
Tools/compile-idmap.bat:3:77      - Unknown word (Maps)       -- DOOM/Assets/Uncompiled/Maps/delta4"
Tools/compile-idmap.py:101:23    - Unknown word (Vertices)   -- vertices { /* numVertices = */ 32
Tools/compile-idmap.py:101:6     - Unknown word (vertices)   -- ## vertices { /* numVertices =
Tools/compile-idmap.py:107:20    - Unknown word (Edges)      -- ## edges { /* numEdges = */ 73
Tools/compile-idmap.py:107:6     - Unknown word (edges)      -- ## edges { /* numEdges = */
Tools/compile-idmap.py:11:4      - Unknown word (indicies)   -- in_indicies = False
Tools/compile-idmap.py:120:6     - Unknown word (polygons)   -- ## polygons /* polygonMemory =
Tools/compile-idmap.py:121:79    - Unknown word (textures)   -- ) ( -208 256 256 ) "textures/base_wall/lfwall13f
Tools/compile-idmap.py:121:93    - Unknown word (wall)       -- 56 ) "textures/base_wall/lfwall13f3"
Tools/compile-idmap.py:121:98    - Unknown word (lfwall)     -- "textures/base_wall/lfwall13f3"
Tools/compile-idmap.py:122:76    - Unknown word (textures)   -- ) ( -192 256 256 ) "textures/base_wall/lfwall13f
Tools/compile-idmap.py:122:90    - Unknown word (wall)       -- 56 ) "textures/base_wall/lfwall13f3"
Tools/compile-idmap.py:122:95    - Unknown word (lfwall)     -- "textures/base_wall/lfwall13f3"
Tools/compile-idmap.py:123:78    - Unknown word (textures)   -- ) ( -192 256 256 ) "textures/base_wall/lfwall13f
Tools/compile-idmap.py:123:92    - Unknown word (wall)       -- 56 ) "textures/base_wall/lfwall13f3"
Tools/compile-idmap.py:123:97    - Unknown word (lfwall)     -- "textures/base_wall/lfwall13f3"
Tools/compile-idmap.py:126:17    - Unknown word (brush)      -- ## brushes /* brushMemory = */ 840 {
Tools/compile-idmap.py:126:6     - Unknown word (brushes)    -- ## brushes /* brushMemory = */
Tools/compile-idmap.py:147:18    - Unknown word (vertices)   -- if re.search(r'vertices', line):
Tools/compile-idmap.py:150:20    - Unknown word (edges)      -- elif re.search(r'edges', line):
Tools/compile-idmap.py:152:33    - Unknown word (unsigned)   -- indent + "EdgeArray {unsigned_int32[4] {"
Tools/compile-idmap.py:156:20    - Unknown word (polygons)   -- elif re.search(r'polygons', line):
Tools/compile-idmap.py:159:20    - Unknown word (brushes)    -- elif re.search(r'brushes', line):
Tools/compile-idmap.py:161:22    - Unknown word (Brush)      -- line = indent + "BrushArray {"
Tools/compile-idmap.py:164:8     - Unknown word (Collision)  -- ## CollisionModel header
Tools/compile-idmap.py:165:20    - Unknown word (collision)  -- if re.search(r'collisionModel', line):
Tools/compile-idmap.py:166:23    - Unknown word (collision)  -- line = re.sub(r'collisionModel \"', "CollisionModel
Tools/compile-idmap.py:166:44    - Unknown word (Collision)  -- collisionModel \"', "CollisionModel $", line)
Tools/compile-idmap.py:173:25    - Unknown word (Checksum)   -- line = 'GeometryChecksum {unsigned_int64 {'
Tools/compile-idmap.py:173:35    - Unknown word (unsigned)   -- 'GeometryChecksum {unsigned_int64 {' + line + '
Tools/compile-idmap.py:175:31    - Unknown word (verticies)  -- Special processing for verticies
Tools/compile-idmap.py:178:17    - Unknown word (brace)      -- ## Ending brace
Tools/compile-idmap.py:182:23    - Unknown word (groupend)   -- if next_line_is_groupend (next_line):
Tools/compile-idmap.py:191:31    - Unknown word (edges)      -- Special processing for edges
Tools/compile-idmap.py:194:17    - Unknown word (brace)      -- ## Ending brace
Tools/compile-idmap.py:202:25    - Unknown word (groupend)   -- if next_line_is_groupend (next_line):
Tools/compile-idmap.py:212:17    - Unknown word (brace)      -- ## Ending brace
Tools/compile-idmap.py:216:23    - Unknown word (groupend)   -- if next_line_is_groupend (next_line):
Tools/compile-idmap.py:222:31    - Unknown word (polygons)   -- Special processing for polygons
Tools/compile-idmap.py:225:7     - Unknown word (brace)      -- braceCount = 0
Tools/compile-idmap.py:228:11    - Unknown word (brace)      -- braceCount = braceCount +
Tools/compile-idmap.py:246:10    - Unknown word (Ditch)      -- ## Ditch the rounded braces
Tools/compile-idmap.py:246:20    - Unknown word (rounded)    -- ## Ditch the rounded braces
Tools/compile-idmap.py:246:28    - Unknown word (braces)     -- # Ditch the rounded braces
Tools/compile-idmap.py:250:16    - Unknown word (textures)   -- ## Fixup textures
Tools/compile-idmap.py:251:23    - Unknown word (textures)   -- line = re.sub(r'textures/', "", line)
Tools/compile-idmap.py:255:31    - Unknown word (brushes)    -- Special processing for brushes
Tools/compile-idmap.py:260:24    - Unknown word (playerclip) -- if re.search(r'playerclip', line):
Tools/compile-idmap.py:268:24    - Unknown word (monsterclip) -- if re.search(r'monsterclip', line):
Tools/compile-idmap.py:270:24    - Unknown word (moveableclip) -- if re.search(r'moveableclip', line):
Tools/compile-idmap.py:271:46    - Unknown word (Moveable)     -- indent + indent + 'Moveable {bool {true}}\n' + line
Tools/compile-idmap.py:274:24    - Unknown word (blood)        -- if re.search(r'blood', line):
Tools/compile-idmap.py:275:46    - Unknown word (Blood)        -- indent + indent + 'Blood {bool {true}}\n' + line
Tools/compile-idmap.py:27:18     - Unknown word (groupend)   -- def next_line_is_groupend (line):
Tools/compile-idmap.py:280:24    - Unknown word (flashlight)   -- if re.search(r'flashlight_trigger', line):
Tools/compile-idmap.py:281:46    - Unknown word (Flashlight)   -- indent + indent + 'Flashlight {bool {true}}\n' + line
Tools/compile-idmap.py:282:24    - Unknown word (corpse)       -- if re.search(r'corpse', line):
Tools/compile-idmap.py:283:46    - Unknown word (Corpse)       -- indent + indent + 'Corpse {bool {true}}\n' + line
Tools/compile-idmap.py:284:24    - Unknown word (ikclip)       -- if re.search(r'ikclip', line):
Tools/compile-idmap.py:285:46    - Unknown word (Animation)    -- indent + indent + 'Animation {bool {true}}\n' + line
Tools/compile-idmap.py:286:28    - Unknown word (obstacle)     -- if re.search(r'aas_obstacle', line):
Tools/compile-idmap.py:287:37    - Unknown word (Obstacle)     -- indent + indent + 'Obstacle {bool {true}}\n' + line
Tools/compile-idmap.py:302:35    - Unknown word (Collision)    -- indent + indent + 'CollisionBrush {\n' + indent
Tools/compile-idmap.py:302:44    - Unknown word (Brush)        -- indent + 'CollisionBrush {\n' + indent + indent
Tools/compile-idmap.py:306:25    - Unknown word (groupend)     -- if next_line_is_groupend (next_line):
Tools/compile-idmap.py:311:10    - Unknown word (Ditch)        -- ## Ditch the rounded braces
Tools/compile-idmap.py:311:20    - Unknown word (rounded)      -- ## Ditch the rounded braces
Tools/compile-idmap.py:311:28    - Unknown word (braces)       -- # Ditch the rounded braces
Tools/compile-idmap.py:315:16    - Unknown word (separation)   -- ## Add comma separation between number groups
Tools/compile-idmap.py:315:27    - Unknown word (between)      -- Add comma separation between number groups on the
Tools/compile-idmap.py:316:54    - Unknown word (separation)   -- {', '},{', do_comma_separation (line)))
Tools/compile-idmap.py:327:4     - Unknown word (Dewm)         -- ## DewmAAS "1.07"
Tools/compile-idmap.py:32:14     - Unknown word (separation) -- def do_comma_separation (line):
Tools/compile-idmap.py:333:6     - Unknown word (bboxes)       -- ## bboxes
Tools/compile-idmap.py:338:11    - Unknown word (Brush)        -- ## writeBrushMap = 0
Tools/compile-idmap.py:339:12    - Unknown word (Flood)        -- ## playerFlood = 0
Tools/compile-idmap.py:340:11    - Unknown word (Swim)         -- ## allowSwimReachabilities = 0
Tools/compile-idmap.py:340:15    - Unknown word (Reachabilities) -- ## allowSwimReachabilities = 0
Tools/compile-idmap.py:341:14    - Unknown word (Reachabilities) -- ## allowFlyReachabilities = 0
Tools/compile-idmap.py:347:9     - Unknown word (Fall)           -- ## maxFallHeight = 64
Tools/compile-idmap.py:34:16     - Unknown word (separation) -- ## Add comma separation between numbers
Tools/compile-idmap.py:34:27     - Unknown word (between)    -- Add comma separation between numbers
Tools/compile-idmap.py:350:14    - Unknown word (Crouching)      -- ## tt_startCrouching = 100
Tools/compile-idmap.py:352:21    - Unknown word (Ledge)          -- ## tt_startWalkOffLedge = 100
Tools/compile-idmap.py:354:4     - Unknown word (planes)         -- ## planes 1302 {
Tools/compile-idmap.py:360:4     - Unknown word (vertices)       -- ## vertices 157 {
Tools/compile-idmap.py:365:4     - Unknown word (edges)          -- ## edges 215 {
Tools/compile-idmap.py:389:4     - Unknown word (areas)          -- ## areas 75 {
Tools/compile-idmap.py:40:16     - Unknown word (were)       -- ## Numbers were found
Tools/compile-idmap.py:413:4     - Unknown word (portals)        -- ## portals 3 {
Tools/compile-idmap.py:434:13    - Unknown word (proc)           -- ## init_for_proc ##
Tools/compile-idmap.py:437:14    - Unknown word (proc)           -- def init_for_proc ():
Tools/compile-idmap.py:439:6     - Unknown word (indicies)       -- in_indicies = False
Tools/compile-idmap.py:444:12    - Unknown word (proc)           -- ## process_proc_line ##
Tools/compile-idmap.py:447:7     - Unknown word (Proc)           -- ## mapProcFile003
Tools/compile-idmap.py:449:40    - Unknown word (Surfaces)       -- = */ "_area0" /* numSurfaces = */ 3
Tools/compile-idmap.py:451:39    - Unknown word (wall)           -- */ { "textures/base_wall/lfwall27d" /* numVerts
Tools/compile-idmap.py:451:44    - Unknown word (lfwall)         -- "textures/base_wall/lfwall27d" /* numVerts = *
Tools/compile-idmap.py:451:61    - Unknown word (Verts)          -- wall/lfwall27d" /* numVerts = */ 4 /* numIndexes
Tools/compile-idmap.py:457:39    - Unknown word (wall)           -- */ { "textures/base_wall/lfwall27b" /* numVerts
Tools/compile-idmap.py:457:44    - Unknown word (lfwall)         -- "textures/base_wall/lfwall27b" /* numVerts = *
Tools/compile-idmap.py:457:61    - Unknown word (Verts)          -- wall/lfwall27b" /* numVerts = */ 4 /* numIndexes
Tools/compile-idmap.py:463:62    - Unknown word (Verts)          -- wall/lfwall13f3" /* numVerts = */ 16 /* numIndexes
Tools/compile-idmap.py:472:13    - Unknown word (Portals)        -- ## interAreaPortals { /* numAreas = */
Tools/compile-idmap.py:472:29    - Unknown word (Areas)          -- interAreaPortals { /* numAreas = */ 34 /* numIAP =
Tools/compile-idmap.py:472:4     - Unknown word (inter)          -- ## interAreaPortals { /* numAreas
Tools/compile-idmap.py:474:9     - Unknown word (inter)          -- ## /* interAreaPortal format is
Tools/compile-idmap.py:484:36    - Unknown word (areas)          -- negative child numbers are areas: (-1-child) */
Tools/compile-idmap.py:490:33    - Unknown word (prelight)       -- shadowModel { /* name = */ "_prelight_nkd_light_163"
Tools/compile-idmap.py:492:12    - Unknown word (Verts)          -- ## /* numVerts = */ 148 /* noCaps
Tools/compile-idmap.py:492:32    - Unknown word (Caps)           -- numVerts = */ 148 /* noCaps = */ 84 /* noFrontCaps
Tools/compile-idmap.py:492:55    - Unknown word (Caps)           -- noCaps = */ 84 /* noFrontCaps = */ 156 /* numIndexes
Tools/compile-idmap.py:502:13    - Unknown word (proc)           -- def process_proc_line (line, next_line
Tools/compile-idmap.py:504:13    - Unknown word (indicies)       -- global in_indicies
Tools/compile-idmap.py:527:32    - Unknown word (Surfaces)       -- re.sub (r'\" /\* numSurfaces = \*/', ' //', line
Tools/compile-idmap.py:534:29    - Unknown word (sanatize)       -- Get the material and sanatize it
Tools/compile-idmap.py:545:8     - Unknown word (indicies)       -- in_indicies = False
Tools/compile-idmap.py:549:21    - Unknown word (inter)          -- elif re.search (r'interAreaPortals {', line
Tools/compile-idmap.py:549:30    - Unknown word (Portals)        -- re.search (r'interAreaPortals {', line):
Tools/compile-idmap.py:57:23     - Unknown word (needs)      -- ## String key value needs to be wrapped in quotes
Tools/compile-idmap.py:580:26    - Unknown word (crap)           -- ## Ignore trailing crap
Tools/compile-idmap.py:585:20    - Unknown word (separation)     -- ## Add comma separation for verticies
Tools/compile-idmap.py:585:35    - Unknown word (verticies)      -- comma separation for verticies
Tools/compile-idmap.py:586:17    - Unknown word (indicies)       -- if not in_indicies:
Tools/compile-idmap.py:592:51    - Unknown word (accordingly)    -- last line and output accordingly
Tools/compile-idmap.py:595:83    - Unknown word (unsigned)       -- IndexArray\n {\n         unsigned_int32\n {'
Tools/compile-idmap.py:613:18    - Unknown word (care)           -- ## We only care if we are looking at
Tools/compile-idmap.py:613:33    - Unknown word (looking)        -- only care if we are looking at data
Tools/compile-idmap.py:619:47    - Unknown word (unsigned)       -- / ', '\n   {\n      unsigned_int[3] {{', line)
Tools/compile-idmap.py:61:9      - Unknown word (must)       -- ## We must have found one
Tools/compile-idmap.py:622:15    - Unknown word (braces)         -- rounded_braces = re.search (r' \('
Tools/compile-idmap.py:622:7     - Unknown word (rounded)        -- rounded_braces = re.search
Tools/compile-idmap.py:623:111   - Unknown word (rounded)        -- float[3] {' + line [rounded_braces.start (0):]
Tools/compile-idmap.py:623:119   - Unknown word (braces)         -- {' + line [rounded_braces.start (0):] + '}'
Tools/compile-idmap.py:623:21    - Unknown word (rounded)        -- line = line [:rounded_braces.start (0)] +
Tools/compile-idmap.py:623:29    - Unknown word (braces)         -- line = line [:rounded_braces.start (0)] + '}}\n
Tools/compile-idmap.py:626:19    - Unknown word (commas)         -- ## Clean up commas
Tools/compile-idmap.py:643:33    - Unknown word (Verts)          -- line = re.sub (r'/\* numVerts = \*/ ', '   VertexCount
Tools/compile-idmap.py:644:33    - Unknown word (Caps)           -- line = re.sub (r' /\* noCaps = \*/ ', '}}\n   NoCaps
Tools/compile-idmap.py:644:57    - Unknown word (Caps)           -- noCaps = \*/ ', '}}\n   NoCaps {int32 {', line)
Tools/compile-idmap.py:645:38    - Unknown word (Caps)           -- re.sub (r' /\* noFrontCaps = \*/ ', '}}\n   NoFrontCaps
Tools/compile-idmap.py:647:69    - Unknown word (unsigned)       -- '}}\n PlaneBits {unsigned_int32 {', line)
Tools/compile-idmap.py:651:10    - Unknown word (Verticies)      -- ## Verticies
Tools/compile-idmap.py:667:10    - Unknown word (Indicies)       -- ## Indicies
Tools/compile-idmap.py:681:50    - Unknown word (Areas)          -- ', '}}}\n      ChildAreas {int32[2] {{', line
Tools/compile-idmap.py:69:32     - Unknown word (curly)      -- types need an extra curly level
Tools/compile-idmap.py:705:19    - Unknown word (worldspawn)     -- ## "classname" "worldspawn"
Tools/compile-idmap.py:706:19    - Unknown word (locationseparator) -- ## "name" "info_locationseparator_4"
Tools/compile-idmap.py:709:9     - Unknown word (brush)             -- ## // brush 0
Tools/compile-idmap.py:711:8     - Unknown word (brush)             -- ## brushDef3
Tools/compile-idmap.py:713:80    - Unknown word (nodraw)            -- ) "textures/common/nodraw" 0 0 0
Tools/compile-idmap.py:714:77    - Unknown word (nodraw)            -- ) "textures/common/nodraw" 0 0 0
Tools/compile-idmap.py:715:80    - Unknown word (nodraw)            -- ) "textures/common/nodraw" 0 0 0
Tools/compile-idmap.py:716:80    - Unknown word (nodraw)            -- ) "textures/common/nodraw" 0 0 0
Tools/compile-idmap.py:717:80    - Unknown word (nodraw)            -- ) "textures/common/nodraw" 0 0 0
Tools/compile-idmap.py:722:9     - Unknown word (primitive)         -- ## // primitive 0
Tools/compile-idmap.py:736:9     - Unknown word (primitive)         -- ## // primitive 1
Tools/compile-idmap.py:740:20    - Unknown word (decals)            -- ## "textures/decals/cam_base"
Tools/compile-idmap.py:75:31     - Unknown word (discrete)   -- Otherwise it is a normal discrete or numeric kind
Tools/compile-idmap.py:75:6      - Unknown word (Otherwise)  -- ## Otherwise it is a normal discrete
Tools/compile-idmap.py:765:20    - Unknown word (Crap)              -- scope.append ('Crap')
Tools/compile-idmap.py:775:22    - Unknown word (brush)             -- if re.search (r'// brush', line):
Tools/compile-idmap.py:777:21    - Unknown word (brush)             -- elif re.search (r'brushDef3', line):
Tools/compile-idmap.py:779:24    - Unknown word (primitive)         -- elif re.search (r'// primitive', line):
Tools/compile-idmap.py:804:17    - Unknown word (care)              -- ## We don't care about non-entities
Tools/compile-idmap.py:808:20    - Unknown word (scene)             -- ## Collect the scene models so we can know
Tools/compile-idmap.py:808:43    - Unknown word (know)              -- scene models so we can know the truth
Tools/compile-idmap.py:81:6      - Unknown word (Give)       -- ## Give the result
Tools/compile-idmap.py:821:51    - Unknown word (Camera)            -- line, "editor_drLastCameraAngle", "LastCamAng"
Tools/compile-idmap.py:821:57    - Unknown word (Angle)             -- "editor_drLastCameraAngle", "LastCamAng",  "float
Tools/compile-idmap.py:822:51    - Unknown word (Camera)            -- line, "editor_drLastCameraPos", "LastCamPos"
Tools/compile-idmap.py:826:21    - Unknown word (Uknown)            -- line = "   // Uknown attribute: " + line
Tools/compile-idmap.py:835:25    - Unknown word (proc)              -- file_formats = ('map', 'proc') #, 'cm')
Tools/compile-idmap.py:868:19    - Unknown word (remaining)         -- ## Handle the remaining line
Tools/compile-idmap.py:872:28    - Unknown word (curly)             -- We have to append a curly when we have encountered
Tools/compile-idmap.py:872:47    - Unknown word (encountered)       -- a curly when we have encountered at least one entity
Tools/compile-idmap.py:885:5     - Unknown word (modl)              -- for modl in models.keys ():
Tools/compile-idmap.py:886:10    - Unknown word (modl)              -- print (modl)
Tools/compile-idmap.py:99:4      - Unknown word (collision)  -- ## collisionModel "worldMap" {
Tools/compile-materials.bat:1:2       - Unknown word (echo)       -- @echo off
Tools/compile-materials.bat:2:14      - Unknown word (DOOM)       -- >../../Games/DOOM/Assets/Maps/delta4.idmap
Tools/compile-materials.bat:2:26      - Unknown word (Maps)       -- ./Games/DOOM/Assets/Maps/delta4.idmap (
Tools/compile-materials.bat:2:38      - Unknown word (idmap)      -- DOOM/Assets/Maps/delta4.idmap (
Tools/compile-materials.bat:2:8       - Unknown word (Games)      -- >../../Games/DOOM/Assets/Maps/delta
Tools/compile-materials.bat:3:32      - Unknown word (idmap)      -- Python27/python ./compile-idmap.py "../../Games/DOOM
Tools/compile-materials.bat:3:48      - Unknown word (Games)      -- compile-idmap.py "../../Games/DOOM/Assets/Uncompiled
Tools/compile-materials.bat:3:54      - Unknown word (DOOM)       -- idmap.py "../../Games/DOOM/Assets/Uncompiled/Maps
Tools/compile-materials.bat:3:66      - Unknown word (Uncompiled) -- ./Games/DOOM/Assets/Uncompiled/Maps/delta4"
Tools/compile-materials.bat:3:77      - Unknown word (Maps)       -- DOOM/Assets/Uncompiled/Maps/delta4"
Tools/compile-materials.py:101:11    - Unknown word (blended)         -- ## A "blended" texture
Tools/compile-materials.py:101:20    - Unknown word (texture)         -- ## A "blended" texture
Tools/compile-materials.py:104:23    - Unknown word (modes)           -- ## Handle blend modes
Tools/compile-materials.py:105:27    - Unknown word (iffuse)          -- if re.search (r'[dD]iffuse[mM]ap', line):
Tools/compile-materials.py:108:29    - Unknown word (pecular)         -- elif re.search (r'[sS]pecular[mM]ap', line):
Tools/compile-materials.py:10:33     - Unknown word (stedoorframered) -- textures/base_door/stedoorframered_add.tga
Tools/compile-materials.py:117:17    - Unknown word (blended)         -- ## Handle a blended texture and ignore other
Tools/compile-materials.py:117:25    - Unknown word (texture)         -- ## Handle a blended texture and ignore other attributes
Tools/compile-materials.py:120:23    - Unknown word (addnormals)      -- if re.search (r'addnormals', line):
Tools/compile-materials.py:123:20    - Unknown word (Texture)         -- print ('   Texture (attrib = "diffuse"
Tools/compile-materials.py:123:39    - Unknown word (diffuse)         -- Texture (attrib = "diffuse") {string {\"' + get
Tools/compile-materials.py:125:20    - Unknown word (Texture)         -- print ('   Texture (attrib = "specular
Tools/compile-materials.py:125:39    - Unknown word (specular)        -- Texture (attrib = "specular") {string {\"' + get
Tools/compile-materials.py:127:20    - Unknown word (Texture)         -- print ('   Texture (attrib = "normal")
Tools/compile-materials.py:129:24    - Unknown word (diffuse)         -- ## Normal path for diffuse, specular, and normal
Tools/compile-materials.py:129:33    - Unknown word (specular)        -- Normal path for diffuse, specular, and normal textures
Tools/compile-materials.py:130:28    - Unknown word (iffuse)          -- elif re.search (r'^[dD]iffuse[mM]ap', line):
Tools/compile-materials.py:131:18    - Unknown word (Texture)         -- print ('   Texture (attrib = "diffuse"
Tools/compile-materials.py:131:37    - Unknown word (diffuse)         -- Texture (attrib = "diffuse") {string {\"' + get
Tools/compile-materials.py:133:28    - Unknown word (pecular)         -- elif re.search (r'^[sS]pecular[mM]ap', line):
Tools/compile-materials.py:134:18    - Unknown word (Texture)         -- print ('   Texture (attrib = "specular
Tools/compile-materials.py:134:37    - Unknown word (specular)        -- Texture (attrib = "specular") {string {\"' + get
Tools/compile-materials.py:139:28    - Unknown word (editorimage)     -- elif re.search (r'^qer_editorimage', line):
Tools/compile-materials.py:159:15    - Unknown word (remaining)       -- ## Handle the remaining line
Tools/compile-materials.py:15:8      - Unknown word (blend)           -- ## blend add
Tools/compile-materials.py:16:33     - Unknown word (stedoorframegrn) -- textures/base_door/stedoorframegrn_add.tga
Tools/compile-materials.py:175:25    - Unknown word (needs)           -- ## String key value needs to be wrapped in quotes
Tools/compile-materials.py:179:11    - Unknown word (must)            -- # ## We must have found one
Tools/compile-materials.py:187:34    - Unknown word (curly)           -- types need an extra curly level
Tools/compile-materials.py:193:33    - Unknown word (discrete)        -- Otherwise it is a normal discrete or numeric kind
Tools/compile-materials.py:193:8     - Unknown word (Otherwise)       -- # ## Otherwise it is a normal discrete
Tools/compile-materials.py:199:8     - Unknown word (Give)            -- # ## Give the result
Tools/compile-materials.py:1:18      - Unknown word (door)       -- ## textures/base_door/light_panel1
Tools/compile-materials.py:1:4       - Unknown word (textures)   -- ## textures/base_door/light_panel
Tools/compile-materials.py:30:15     - Unknown word (savegames)       -- TEX_PATH = r'(savegames|fonts|textures|guis
Tools/compile-materials.py:30:25     - Unknown word (fonts)           -- PATH = r'(savegames|fonts|textures|guis|ui|guisurfs
Tools/compile-materials.py:30:48     - Unknown word (guisurfs)        -- fonts|textures|guis|ui|guisurfs|particles|lights|models
Tools/compile-materials.py:30:57     - Unknown word (particles)       -- textures|guis|ui|guisurfs|particles|lights|models|env)[
Tools/compile-materials.py:30:67     - Unknown word (lights)          -- ui|guisurfs|particles|lights|models|env)[\\/][a-z
Tools/compile-materials.py:3:10      - Unknown word (editorimage) -- ## qer_editorimage textures/base_door/stedoorfra
Tools/compile-materials.py:3:22      - Unknown word (textures)    -- # qer_editorimage textures/base_door/stedoorframe
Tools/compile-materials.py:3:36      - Unknown word (door)        -- editorimage textures/base_door/stedoorframe2.tga
Tools/compile-materials.py:3:41      - Unknown word (stedoorframe) -- ditorimage textures/base_door/stedoorframe2.tga
Tools/compile-materials.py:40:1      - Unknown word (blend)           -- blend_mode = 0
Tools/compile-materials.py:41:4      - Unknown word (blend)           -- is_blend = False
Tools/compile-materials.py:42:5      - Unknown word (diffuse)         -- did_diffuse = False
Tools/compile-materials.py:43:5      - Unknown word (specular)        -- did_specular = False
Tools/compile-materials.py:44:5      - Unknown word (bumpmap)         -- did_bumpmap = False
Tools/compile-materials.py:4:16      - Unknown word (textures)     -- ## bumpmap   textures/base_door/stedoorframe
Tools/compile-materials.py:4:30      - Unknown word (door)         -- bumpmap textures/base_door/stedoorframe2_local
Tools/compile-materials.py:4:35      - Unknown word (stedoorframe) -- textures/base_door/stedoorframe2_local.tga
Tools/compile-materials.py:4:6       - Unknown word (bumpmap)      -- ## bumpmap textures/base_door
Tools/compile-materials.py:5:20      - Unknown word (textures)     -- ## diffusemap    textures/base_door/stedoorframe
Tools/compile-materials.py:5:34      - Unknown word (door)         -- diffusemap textures/base_door/stedoorframe2_d.tga
Tools/compile-materials.py:5:39      - Unknown word (stedoorframe) -- textures/base_door/stedoorframe2_d.tga
Tools/compile-materials.py:5:6       - Unknown word (diffusemap)   -- ## diffusemap textures/base_door
Tools/compile-materials.py:67:13     - Unknown word (blend)           -- global is_blend
Tools/compile-materials.py:6:20      - Unknown word (textures)     -- ## specularmap   textures/base_door/stedoorframe
Tools/compile-materials.py:6:34      - Unknown word (door)         -- specularmap textures/base_door/stedoorframe2_s.tga
Tools/compile-materials.py:6:39      - Unknown word (stedoorframe) -- textures/base_door/stedoorframe2_s.tga
Tools/compile-materials.py:6:6       - Unknown word (specularmap)  -- ## specularmap textures/base_door
Tools/compile-materials.py:83:16     - Unknown word (Crap)            -- s.append ('Crap')
Tools/compile-materials.py:9:8       - Unknown word (blend)        -- ## blend add
Tools/spm_export.py:104:13    - Unknown word (mantissa)        -- mantissa >>= F16_MANTISSA_SHIFT
Tools/spm_export.py:104:30    - Unknown word (MANTISSA)        -- mantissa >>= F16_MANTISSA_SHIFT
Tools/spm_export.py:105:59    - Unknown word (mantissa)        -- F16_EXPONENT_SHIFT | mantissa
Tools/spm_export.py:10:3      - Unknown word (furnished)   -- # furnished to do so, subject to
Tools/spm_export.py:10:38     - Unknown word (following)   -- do so, subject to the following conditions:
Tools/spm_export.py:12:57     - Unknown word (shall)       -- this permission notice shall be included in all
Tools/spm_export.py:12:66     - Unknown word (included)    -- permission notice shall be included in all
Tools/spm_export.py:13:13     - Unknown word (substantial) -- # copies or substantial portions of the Software
Tools/spm_export.py:13:25     - Unknown word (portions)    -- copies or substantial portions of the Software.
Tools/spm_export.py:13:3      - Unknown word (copies)      -- # copies or substantial portions
Tools/spm_export.py:155:10    - Unknown word (Matrix)          -- def writeMatrixAsLocRotScale(mat):
Tools/spm_export.py:156:27    - Unknown word (decompose)       -- loc, rot, scale = mat.decompose()
Tools/spm_export.py:15:19     - Unknown word (PROVIDED)    -- # THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY
Tools/spm_export.py:15:45     - Unknown word (WARRANTY)    -- PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
Tools/spm_export.py:164:20    - Unknown word (armature)        -- def getUniqueFrame(armature):
Tools/spm_export.py:166:17    - Unknown word (animation)       -- if armature.animation_data and armature.animation
Tools/spm_export.py:166:36    - Unknown word (armature)        -- armature.animation_data and armature.animation_data.action
Tools/spm_export.py:166:45    - Unknown word (animation)       -- animation_data and armature.animation_data.action:
Tools/spm_export.py:166:8     - Unknown word (armature)        -- if armature.animation_data and armature
Tools/spm_export.py:167:15    - Unknown word (armature)        -- ipo = armature.animation_data.action
Tools/spm_export.py:167:24    - Unknown word (animation)       -- ipo = armature.animation_data.action.fcurves
Tools/spm_export.py:167:46    - Unknown word (fcurves)         -- animation_data.action.fcurves
Tools/spm_export.py:168:13    - Unknown word (curve)           -- for curve in ipo:
Tools/spm_export.py:169:17    - Unknown word (pose)            -- if "pose" in curve.data_path
Tools/spm_export.py:169:26    - Unknown word (curve)           -- if "pose" in curve.data_path:
Tools/spm_export.py:16:12     - Unknown word (INCLUDING)   -- # IMPLIED, INCLUDING BUT NOT LIMITED TO THE
Tools/spm_export.py:16:3      - Unknown word (IMPLIED)     -- # IMPLIED, INCLUDING BUT NOT LIMITED
Tools/spm_export.py:16:45     - Unknown word (WARRANTIES)  -- BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
Tools/spm_export.py:170:33    - Unknown word (curve)           -- for keyframe in curve.keyframe_points:
Tools/spm_export.py:178:17    - Unknown word (animation)       -- if armature.animation_data and armature.animation
Tools/spm_export.py:178:45    - Unknown word (animation)       -- animation_data and armature.animation_data.nla_tracks:
Tools/spm_export.py:178:8     - Unknown word (armature)        -- if armature.animation_data and armature
Tools/spm_export.py:179:17    - Unknown word (track)           -- for nla_track in armature.animation
Tools/spm_export.py:17:17     - Unknown word (PARTICULAR)  -- # FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
Tools/spm_export.py:17:3      - Unknown word (FITNESS)     -- # FITNESS FOR A PARTICULAR PURPOSE
Tools/spm_export.py:17:40     - Unknown word (NONINFRINGEMENT) -- PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
Tools/spm_export.py:17:69     - Unknown word (SHALL)           -- NONINFRINGEMENT. IN NO EVENT SHALL THE
Tools/spm_export.py:180:34    - Unknown word (track)           -- for nla_strip in nla_track.strips:
Tools/spm_export.py:180:40    - Unknown word (strips)          -- nla_strip in nla_track.strips:
Tools/spm_export.py:181:37    - Unknown word (track)           -- max_frame = int(nla_track.strips[-1].frame_end
Tools/spm_export.py:181:43    - Unknown word (strips)          -- frame = int(nla_track.strips[-1].frame_end)
Tools/spm_export.py:184:29    - Unknown word (curve)           -- for curve in action_group.channels
Tools/spm_export.py:185:45    - Unknown word (curve)           -- for keyframe in curve.keyframe_points:
Tools/spm_export.py:18:24     - Unknown word (HOLDERS)         -- AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM
Tools/spm_export.py:18:3      - Unknown word (AUTHORS)         -- # AUTHORS OR COPYRIGHT HOLDERS
Tools/spm_export.py:18:35     - Unknown word (LIABLE)          -- COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES
Tools/spm_export.py:18:57     - Unknown word (DAMAGES)         -- LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
Tools/spm_export.py:196:17    - Unknown word (pose)            -- if armature.pose and armature.pose.bones
Tools/spm_export.py:196:35    - Unknown word (pose)            -- armature.pose and armature.pose.bones:
Tools/spm_export.py:196:40    - Unknown word (bones)           -- pose and armature.pose.bones:
Tools/spm_export.py:197:13    - Unknown word (pose)            -- for pose_bone in armature.pose
Tools/spm_export.py:197:35    - Unknown word (pose)            -- pose_bone in armature.pose.bones:
Tools/spm_export.py:197:40    - Unknown word (bones)          -- bone in armature.pose.bones:
Tools/spm_export.py:19:14     - Unknown word (WHETHER)         -- # LIABILITY, WHETHER IN AN ACTION OF CONTRACT
Tools/spm_export.py:19:3      - Unknown word (LIABILITY)       -- # LIABILITY, WHETHER IN AN ACTION
Tools/spm_export.py:19:38     - Unknown word (CONTRACT)        -- WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
Tools/spm_export.py:19:48     - Unknown word (TORT)            -- ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
Tools/spm_export.py:19:56     - Unknown word (OTHERWISE)       -- OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
Tools/spm_export.py:19:67     - Unknown word (ARISING)         -- TORT OR OTHERWISE, ARISING FROM,
Tools/spm_export.py:201:71    - Unknown word (fcurves)        -- animation_data.action.fcurves
Tools/spm_export.py:20:65     - Unknown word (DEALINGS)        -- OR THE USE OR OTHER DEALINGS IN THE
Tools/spm_export.py:217:50    - Unknown word (scene)          -- #bpy.context.scene.frame_set(global_key
Tools/spm_export.py:218:50    - Unknown word (scene)          -- #bpy.context.scene.frame_current = global
Tools/spm_export.py:220:50    - Unknown word (scene)          -- #bpy.context.scene.update()
Tools/spm_export.py:221:52    - Unknown word (influence)      -- #if constraint.influence == 0.0:
Tools/spm_export.py:230:11    - Unknown word (please)         -- ' please remove the armature
Tools/spm_export.py:249:7     - Unknown word (accumulated)    -- m_accumulated_bone = 0
Tools/spm_export.py:24:12     - Unknown word (Exporter)        -- Name: 'SPM Exporter (.spm)...'
Tools/spm_export.py:256:35    - Unknown word (bones)          -- pose_bone in arm.pose.bones:
Tools/spm_export.py:259:30    - Unknown word (triangles)      -- buildIndex(self, all_triangles):
Tools/spm_export.py:25:1      - Unknown word (Blender)         -- Blender: 270
Tools/spm_export.py:260:13    - Unknown word (triangle)       -- for triangle in all_triangles:
Tools/spm_export.py:260:29    - Unknown word (triangles)      -- for triangle in all_triangles:
Tools/spm_export.py:261:16    - Unknown word (triangle)       -- if triangle.m_armature_name != self
Tools/spm_export.py:265:21    - Unknown word (joint)          -- for joint_and_weight in triangle
Tools/spm_export.py:265:31    - Unknown word (weight)         -- for joint_and_weight in triangle.m_all_joints
Tools/spm_export.py:265:41    - Unknown word (triangle)       -- joint_and_weight in triangle.m_all_joints_weights
Tools/spm_export.py:265:56    - Unknown word (joints)         -- weight in triangle.m_all_joints_weights[i]:
Tools/spm_export.py:268:24    - Unknown word (joint)          -- if joint_and_weight[0] in self
Tools/spm_export.py:268:34    - Unknown word (weight)         -- if joint_and_weight[0] in self.m_bone_names
Tools/spm_export.py:269:46    - Unknown word (joint)          -- if self.m_bone_names[joint_and_weight[0]] == 9
Tools/spm_export.py:269:56    - Unknown word (weight)         -- bone_names[joint_and_weight[0]] == 99999999:
Tools/spm_export.py:270:47    - Unknown word (joint)          -- self.m_bone_names[joint_and_weight[0]] = ExportArm
Tools/spm_export.py:270:57    - Unknown word (weight)         -- bone_names[joint_and_weight[0]] = ExportArm.m_accumulated
Tools/spm_export.py:270:82    - Unknown word (accumulated)    -- weight[0]] = ExportArm.m_accumulated_bone
Tools/spm_export.py:271:29    - Unknown word (triangle)       -- triangle.m_all_joints[i][found
Tools/spm_export.py:271:44    - Unknown word (joints)         -- triangle.m_all_joints[i][found] = ExportArm
Tools/spm_export.py:271:75    - Unknown word (accumulated)    -- found] = ExportArm.m_accumulated_bone
Tools/spm_export.py:272:29    - Unknown word (triangle)       -- triangle.m_all_weights[i][found
Tools/spm_export.py:272:64    - Unknown word (joint)          -- weights[i][found] = joint_and_weight[1]
Tools/spm_export.py:272:74    - Unknown word (weight)         -- [found] = joint_and_weight[1]
Tools/spm_export.py:273:41    - Unknown word (accumulated)    -- ExportArm.m_accumulated_bone += 1
Tools/spm_export.py:275:44    - Unknown word (joints)         -- triangle.m_all_joints[i][found] = \
Tools/spm_export.py:27:27     - Unknown word (paritioned)      -- Tooltip: 'Export to space paritioned mesh file format (.spm
Tools/spm_export.py:297:14    - Unknown word (Armature)       -- def writeArmature(self):
Tools/spm_export.py:300:56    - Unknown word (bones)          -- len(self.m_arm.data.bones))
Tools/spm_export.py:302:69    - Unknown word (bones)          -- len(self.m_arm.data.bones)
Tools/spm_export.py:308:33    - Unknown word (Matrix)         -- tmp_buf += writeMatrixAsLocRotScale(bone.matrix
Tools/spm_export.py:308:58    - Unknown word (matrix)         -- writeMatrixAsLocRotScale(bone.matrix_local.inverted_safe
Tools/spm_export.py:308:71    - Unknown word (inverted)       -- LocRotScale(bone.matrix_local.inverted_safe())
Tools/spm_export.py:31:3      - Unknown word (bpydoc)          -- __bpydoc__ = """\
Tools/spm_export.py:333:53    - Unknown word (matrix)         -- mat = pose_bone.parent.matrix.inverted_safe() * pose
Tools/spm_export.py:333:60    - Unknown word (inverted)       -- pose_bone.parent.matrix.inverted_safe() * pose_bone.matrix
Tools/spm_export.py:333:88    - Unknown word (matrix)         -- inverted_safe() * pose_bone.matrix
Tools/spm_export.py:336:50    - Unknown word (matrix)         -- bone_mat = pose_bone.matrix.copy()
Tools/spm_export.py:338:51    - Unknown word (matrix)         -- bone_mat = self.m_arm.matrix_world * pose_bone.matrix
Tools/spm_export.py:339:37    - Unknown word (Matrix)         -- tmp_buf += writeMatrixAsLocRotScale(bone_mat
Tools/spm_export.py:350:16    - Unknown word (tangent)        -- self.m_tangent = []
Tools/spm_export.py:351:16    - Unknown word (joints)         -- self.m_joints = []
Tools/spm_export.py:35:25     - Unknown word (paritioned)      -- "name": "SPM (Space paritioned mesh) Model Exporter
Tools/spm_export.py:35:48     - Unknown word (Exporter)        -- paritioned mesh) Model Exporter",
Tools/spm_export.py:361:55    - Unknown word (joints)         -- ], 3)) + str(self.m_joints[0]) +\
Tools/spm_export.py:363:20    - Unknown word (tangent)        -- str(self.m_tangent[3])) if Vertex.m_cmp
Tools/spm_export.py:368:55    - Unknown word (tangent)        -- ], 3)) + str(self.m_tangent[3]))
Tools/spm_export.py:36:31     - Unknown word (blender)         -- description": "Exports a blender scene or object to the
Tools/spm_export.py:36:39     - Unknown word (scene)           -- "Exports a blender scene or object to the SPM
Tools/spm_export.py:36:86     - Unknown word (Kart)            -- format (the SuperTuxKart mesh format)",
Tools/spm_export.py:38:6      - Unknown word (blender)         -- "blender": (2, 7, 0),
Tools/spm_export.py:395:16    - Unknown word (tangent)        -- self.m_tangent[3] == other.m_tangent
Tools/spm_export.py:395:38    - Unknown word (tangent)        -- tangent[3] == other.m_tangent[3] if Vertex.m_cmp_joint
Tools/spm_export.py:411:39    - Unknown word (vcolor)         -- writeVertex(self, uv_1, uv_2, vcolor, write_joints, need
Tools/spm_export.py:417:12    - Unknown word (vcolor)         -- if vcolor:
Tools/spm_export.py:43:53     - Unknown word (mathutils)       -- struct, math, string, mathutils, bmesh
Tools/spm_export.py:43:64     - Unknown word (bmesh)           -- string, mathutils, bmesh
Tools/spm_export.py:445:7     - Unknown word (Triangle)       -- class Triangle:
Tools/spm_export.py:457:16    - Unknown word (texture)        -- self.m_texture_one = ""
Tools/spm_export.py:458:16    - Unknown word (texture)        -- self.m_texture_two = ""
Tools/spm_export.py:459:16    - Unknown word (texture)        -- self.m_texture_cmp = ""
Tools/spm_export.py:463:13    - Unknown word (Vertices)       -- def get3Vertices(self):
Tools/spm_export.py:464:9     - Unknown word (vertices)       -- vertices = []
Tools/spm_export.py:466:13    - Unknown word (vertices)       -- vertices.append(Vertex())
Tools/spm_export.py:467:13    - Unknown word (vertices)       -- vertices[i].m_position = self
Tools/spm_export.py:468:13    - Unknown word (vertices)       -- vertices[i].m_normal = self.m
Tools/spm_export.py:469:13    - Unknown word (vertices)       -- vertices[i].m_color = self.m
Tools/spm_export.py:46:5      - Unknown word (scene)           -- the_scene = None
Tools/spm_export.py:499:9     - Unknown word (exporter)       -- # (main exporter function)
Tools/spm_export.py:49:3      - Unknown word (Axis)            -- # Axis conversion
Tools/spm_export.py:502:14    - Unknown word (boxes)          -- bounding_boxes = [99999999.0, 0.0,
Tools/spm_export.py:50:1      - Unknown word (axis)            -- axis_conversion = mathutils
Tools/spm_export.py:50:19     - Unknown word (mathutils)       -- axis_conversion = mathutils.Matrix([[1,0,0,0],[
Tools/spm_export.py:50:29     - Unknown word (Matrix)          -- conversion = mathutils.Matrix([[1,0,0,0],[0,0,1,0
Tools/spm_export.py:517:9     - Unknown word (triangles)      -- all_triangles = []
Tools/spm_export.py:521:42    - Unknown word (than)           -- static_mesh_frame is less than 1, changing it")
Tools/spm_export.py:521:50    - Unknown word (changing)       -- frame is less than 1, changing it")
Tools/spm_export.py:535:18    - Unknown word (triangles)      -- tangents_triangles_dict = {}
Tools/spm_export.py:535:9     - Unknown word (tangents)       -- tangents_triangles_dict = {}
Tools/spm_export.py:540:27    - Unknown word (mathutils)      -- mesh_matrix = mathutils.Matrix()
Tools/spm_export.py:540:37    - Unknown word (Matrix)         -- mesh_matrix = mathutils.Matrix()
Tools/spm_export.py:543:27    - Unknown word (axis)           -- exported_matrix = axis_conversion * mesh_matrix
Tools/spm_export.py:543:9     - Unknown word (exported)       -- exported_matrix = axis_conversion
Tools/spm_export.py:548:40    - Unknown word (please)         -- {} has no vertices, please check it'.format(obj
Tools/spm_export.py:551:14    - Unknown word (bmesh)         -- bm = bmesh.new()
Tools/spm_export.py:553:42    - Unknown word (exported)      -- transform(bm, matrix = exported_matrix, verts = bm.verts
Tools/spm_export.py:553:59    - Unknown word (verts)         -- matrix = exported_matrix, verts = bm.verts)
Tools/spm_export.py:553:70    - Unknown word (verts)         -- exported_matrix, verts = bm.verts)
Tools/spm_export.py:553:9     - Unknown word (bmesh)         -- bmesh.ops.transform(bm, matrix
Tools/spm_export.py:555:13    - Unknown word (bmesh)         -- bmesh.ops.triangulate(bm,
Tools/spm_export.py:555:23    - Unknown word (triangulate)   -- bmesh.ops.triangulate(bm, faces = bm.faces
Tools/spm_export.py:556:32    - Unknown word (winding)       -- reverse the triangle winding for coordinate system
Tools/spm_export.py:556:44    - Unknown word (coordinate)    -- triangle winding for coordinate system in stk
Tools/spm_export.py:557:9     - Unknown word (bmesh)         -- bmesh.ops.reverse_faces(bm
Tools/spm_export.py:561:19    - Unknown word (tessface)      -- mesh.calc_tessface()
Tools/spm_export.py:562:21    - Unknown word (tessfaces)     -- if len(mesh.tessfaces) == 0:
Tools/spm_export.py:563:37    - Unknown word (please)        -- print('{} has no faces, please check it'.format(obj
Tools/spm_export.py:568:22    - Unknown word (tessface)      -- if (len(mesh.tessface_uv_textures) > 1):
Tools/spm_export.py:568:34    - Unknown word (textures)      -- len(mesh.tessface_uv_textures) > 1):
Tools/spm_export.py:569:22    - Unknown word (tessface)      -- if (mesh.tessface_uv_textures.active is
Tools/spm_export.py:569:34    - Unknown word (textures)      -- if (mesh.tessface_uv_textures.active is None):
Tools/spm_export.py:572:24    - Unknown word (tessface)      -- elif (len(mesh.tessface_uv_textures) > 0):
Tools/spm_export.py:572:36    - Unknown word (textures)      -- len(mesh.tessface_uv_textures) > 0):
Tools/spm_export.py:573:22    - Unknown word (tessface)      -- if (mesh.tessface_uv_textures.active is
Tools/spm_export.py:573:34    - Unknown word (textures)      -- if (mesh.tessface_uv_textures.active is None):
Tools/spm_export.py:582:11    - Unknown word (Smooth)        -- # Smooth tangents ourselves
Tools/spm_export.py:582:18    - Unknown word (tangents)      -- # Smooth tangents ourselves
Tools/spm_export.py:582:27    - Unknown word (ourselves)     -- # Smooth tangents ourselves
Tools/spm_export.py:584:30    - Unknown word (polygons)      -- for poly in mesh.polygons:
Tools/spm_export.py:585:26    - Unknown word (smooth)        -- poly.use_smooth = False
Tools/spm_export.py:590:23    - Unknown word (tangents)      -- mesh.calc_tangents()
Tools/spm_export.py:591:30    - Unknown word (polygons)      -- for poly in mesh.polygons:
Tools/spm_export.py:592:19    - Unknown word (Because)       -- # Because of triangulated
Tools/spm_export.py:592:30    - Unknown word (triangulated)  -- # Because of triangulated
Tools/spm_export.py:594:28    - Unknown word (Triangle)      -- poly_tri = Triangle()
Tools/spm_export.py:596:67    - Unknown word (loops)         -- append(mesh.vertices[mesh.loops[li].vertex_index].co
Tools/spm_export.py:597:31    - Unknown word (mathutils)     -- loc_tan = mathutils.Vector(mesh.loops[li
Tools/spm_export.py:597:53    - Unknown word (loops)         -- mathutils.Vector(mesh.loops[li].tangent)
Tools/spm_export.py:5:17      - Unknown word (hereby)     -- # Permission is hereby granted, free of charge
Tools/spm_export.py:5:24      - Unknown word (granted)    -- Permission is hereby granted, free of charge, to
Tools/spm_export.py:5:41      - Unknown word (charge)     -- hereby granted, free of charge, to any person obtaining
Tools/spm_export.py:5:63      - Unknown word (obtaining)  -- charge, to any person obtaining a copy
Tools/spm_export.py:600:64    - Unknown word (loops)         -- ], loc_tan[2], mesh.loops[li].bitangent_sign)
Tools/spm_export.py:600:74    - Unknown word (bitangent)     -- tan[2], mesh.loops[li].bitangent_sign))
Tools/spm_export.py:602:17    - Unknown word (tangents)      -- tangents_triangles_dict[poly
Tools/spm_export.py:602:26    - Unknown word (triangles)     -- tangents_triangles_dict[poly_tri] = poly
Tools/spm_export.py:604:36    - Unknown word (tessfaces)     -- f in enumerate(mesh.tessfaces):
Tools/spm_export.py:605:13    - Unknown word (texture)       -- texture_one = ""
Tools/spm_export.py:606:13    - Unknown word (texture)       -- texture_two = ""
Tools/spm_export.py:608:37    - Unknown word (textures)      -- if mesh.tessface_uv_textures[0].data[i].image !=
Tools/spm_export.py:617:29    - Unknown word (boxes)         -- if bounding_boxes[0] == 99999999.0:
Tools/spm_export.py:618:30    - Unknown word (boxes)         -- bounding_boxes[0] = vertices[0]
Tools/spm_export.py:619:30    - Unknown word (boxes)         -- bounding_boxes[1] = vertices[1]
Tools/spm_export.py:620:30    - Unknown word (boxes)         -- bounding_boxes[2] = vertices[2]
Tools/spm_export.py:640:27    - Unknown word (mathutils)     -- nor_vec = mathutils.Vector(mesh.vertices
Tools/spm_export.py:655:25    - Unknown word (vcolor)        -- vcolor = mesh.tessface_vertex
Tools/spm_export.py:657:25    - Unknown word (vcolor)        -- vcolor = mesh.tessface_vertex
Tools/spm_export.py:659:25    - Unknown word (vcolor)        -- vcolor = mesh.tessface_vertex
Tools/spm_export.py:672:18    - Unknown word (Triangle)      -- t1 = Triangle()
Tools/spm_export.py:673:15    - Unknown word (Because)       -- # Because of triangulated
Tools/spm_export.py:673:26    - Unknown word (triangulated)  -- # Because of triangulated
Tools/spm_export.py:687:26    - Unknown word (tangents)      -- if t1 in tangents_triangles_dict:
Tools/spm_export.py:6:76      - Unknown word (deal)       -- the "Software"), to deal
Tools/spm_export.py:711:26    - Unknown word (Triangle)      -- t2 = Triangle()
Tools/spm_export.py:729:59    - Unknown word (uvmap)         -- in the list) have no uvmap'.format(exp_obj[0].name
Tools/spm_export.py:733:21    - Unknown word (accumulated)   -- ExportArm.m_accumulated_bone = 0
Tools/spm_export.py:738:9     - Unknown word (useless)       -- useless_arm = True
Tools/spm_export.py:743:21    - Unknown word (useless)       -- useless_arm = False
Tools/spm_export.py:746:12    - Unknown word (useless)       -- if useless_arm:
Tools/spm_export.py:756:35    - Unknown word (SPMS)          -- version, 3 bit type : SPMS SPMA SPMN
Tools/spm_export.py:756:40    - Unknown word (SPMA)          -- version, 3 bit type : SPMS SPMA SPMN
Tools/spm_export.py:756:45    - Unknown word (SPMN)          -- bit type : SPMS SPMA SPMN
Tools/spm_export.py:757:19    - Unknown word (partitioned)   -- # SPMS (space partitioned split mesh not supported
Tools/spm_export.py:757:7     - Unknown word (SPMS)          -- # SPMS (space partitioned split
Tools/spm_export.py:791:10    - Unknown word (SPMS)          -- # No SPMS so always 1 sector count
Tools/spm_export.py:791:27    - Unknown word (sector)        -- No SPMS so always 1 sector count
Tools/spm_export.py:7:27      - Unknown word (restriction) -- the Software without restriction, including without limitation
Tools/spm_export.py:7:40      - Unknown word (including)   -- without restriction, including without limitation the
Tools/spm_export.py:7:58      - Unknown word (limitation)  -- estriction, including without limitation the rights
Tools/spm_export.py:7:73      - Unknown word (rights)      -- without limitation the rights
Tools/spm_export.py:817:21    - Unknown word (bitangent)     -- bitangent_sign = vertices_dict
Tools/spm_export.py:818:42    - Unknown word (accumlated)    -- print("All tangents accumlated:")
Tools/spm_export.py:825:58    - Unknown word (bitangent)     -- tangent[1], tangent[2], bitangent_sign)
Tools/spm_export.py:83:13     - Unknown word (MANTISSA)        -- F16_MANTISSA_BITS = 0x3ff
Tools/spm_export.py:845:38    - Unknown word (Vertices)      -- list = triangle.get3Vertices()
Tools/spm_export.py:84:13     - Unknown word (MANTISSA)        -- F16_MANTISSA_SHIFT = (23 - F16_EXPONENT
Tools/spm_export.py:864:48    - Unknown word (Armature)      -- dict[arm_name].writeArmature()
Tools/spm_export.py:873:12    - Unknown word (Exported)      -- print("Exported in", (end - start))
Tools/spm_export.py:877:8     - Unknown word (idname)        -- bl_idname = ("screen.spm_confirm
Tools/spm_export.py:878:31    - Unknown word (Overwrite)     -- label = ("File Exists, Overwrite?")
Tools/spm_export.py:882:26    - Unknown word (props)         -- return wm.invoke_props_dialog(self)
Tools/spm_export.py:88:22     - Unknown word (hexlify)         -- b = binascii.hexlify(a)
Tools/spm_export.py:891:8     - Unknown word (idname)        -- bl_idname = ("screen.spm_export
Tools/spm_export.py:894:20    - Unknown word (props)         -- filepath = bpy.props.StringProperty(subtype
Tools/spm_export.py:895:20    - Unknown word (props)         -- selected = bpy.props.BoolProperty(name="Export
Tools/spm_export.py:896:20    - Unknown word (props)        -- localsp = bpy.props.BoolProperty(name="Use
Tools/spm_export.py:896:5     - Unknown word (localsp)       -- localsp = bpy.props.BoolProperty
Tools/spm_export.py:896:55    - Unknown word (coordinates)  -- BoolProperty(name="Use local coordinates", default = False)
Tools/spm_export.py:897:26    - Unknown word (props)          -- applymodifiers = bpy.props.BoolProperty(name="Apply
Tools/spm_export.py:897:5     - Unknown word (applymodifiers) -- applymodifiers = bpy.props.BoolProperty
Tools/spm_export.py:898:50    - Unknown word (splitting)      -- BoolProperty(name="Do mesh splitting (for space partitioning
Tools/spm_export.py:898:71    - Unknown word (partitioning)   -- splitting (for space partitioning)", default = False)
Tools/spm_export.py:899:23    - Unknown word (asking)         -- overwrite_without_asking = bpy.props.BoolProperty
Tools/spm_export.py:899:5     - Unknown word (overwrite)      -- overwrite_without_asking = bpy
Tools/spm_export.py:899:61    - Unknown word (Overwrite)      -- props.BoolProperty(name="Overwrite without asking", default
Tools/spm_export.py:899:79    - Unknown word (asking)         -- name="Overwrite without asking", default = False)
Tools/spm_export.py:8:41      - Unknown word (distribute)  -- modify, merge, publish, distribute, sublicense, and/or
Tools/spm_export.py:8:53      - Unknown word (sublicense)  -- publish, distribute, sublicense, and/or sell
Tools/spm_export.py:8:72      - Unknown word (sell)        -- sublicense, and/or sell
Tools/spm_export.py:900:77    - Unknown word (animated)       -- Export keyframes only for animated mesh", default = True
Tools/spm_export.py:903:51    - Unknown word (Calculate)      -- props.BoolProperty(name="Calculate tangent and bitangent
Tools/spm_export.py:903:73    - Unknown word (bitangent)      -- Calculate tangent and bitangent sign for mesh", default
Tools/spm_export.py:907:34    - Unknown word (blend)          -- blend_filepath = context.blend_data.filepath
Tools/spm_export.py:907:9     - Unknown word (blend)          -- blend_filepath = context.blend
Tools/spm_export.py:908:16    - Unknown word (blend)          -- if not blend_filepath:
Tools/spm_export.py:909:13    - Unknown word (blend)          -- blend_filepath = "Untitled
Tools/spm_export.py:909:31    - Unknown word (Untitled)       -- blend_filepath = "Untitled.spm"
Tools/spm_export.py:911:13    - Unknown word (blend)          -- blend_filepath = os.path.splitext
Tools/spm_export.py:914:32    - Unknown word (fileselect)     -- context.window_manager.fileselect_add(self)
Tools/spm_export.py:922:50    - Unknown word (localsp)        -- local-space" ] = self.localsp
Tools/spm_export.py:923:50    - Unknown word (applymodifiers) -- apply-modifiers"] = self.applymodifiers
Tools/spm_export.py:949:59    - Unknown word (overwrite)      -- filepath) and not self.overwrite_without_asking:
Tools/spm_export.py:949:77    - Unknown word (asking)         -- self.overwrite_without_asking:
Tools/spm_export.py:94:9      - Unknown word (mantissa)        -- mantissa = f32 & 0x007fffff
Tools/spm_export.py:961:49    - Unknown word (idname)         -- SPM_Export_Operator.bl_idname, text="SPM (.spm)")
Tools/spm_export.py:98:16     - Unknown word (mantissa)        -- if mantissa:
Tools/spm_export.py:99:25     - Unknown word (mantissa)        -- f16 |= (mantissa & F16_MANTISSA_BITS
Tools/spm_export.py:99:40     - Unknown word (MANTISSA)        -- |= (mantissa & F16_MANTISSA_BITS)
Tools/spm_export.py:9:3       - Unknown word (copies)      -- # copies of the Software, and
Tools/spm_export.py:9:34      - Unknown word (permit)      -- the Software, and to permit persons to whom the
Tools/spm_export.py:9:41      - Unknown word (persons)     -- Software, and to permit persons to whom the Software
Tools/spm_export.py:9:52      - Unknown word (whom)        -- to permit persons to whom the Software is
Tools/spm_import.py:106:12    - Unknown word (verts)           -- bm.verts.new((x, z, y))
Tools/spm_import.py:108:31    - Unknown word (calculate)       -- # Unused, auto re-calculate later
Tools/spm_import.py:10:3      - Unknown word (furnished)   -- # furnished to do so, subject to
Tools/spm_import.py:10:38     - Unknown word (following)   -- do so, subject to the following conditions:
Tools/spm_import.py:110:17    - Unknown word (vcolor)          -- if read_vcolor:
Tools/spm_import.py:127:21    - Unknown word (tangent)         -- if read_tangent:
Tools/spm_import.py:12:57     - Unknown word (shall)       -- this permission notice shall be included in all
Tools/spm_import.py:12:66     - Unknown word (included)    -- permission notice shall be included in all
Tools/spm_import.py:130:15    - Unknown word (skinned)         -- if is_skinned:
Tools/spm_import.py:13:13     - Unknown word (substantial) -- # copies or substantial portions of the Software
Tools/spm_import.py:13:25     - Unknown word (portions)    -- copies or substantial portions of the Software.
Tools/spm_import.py:13:3      - Unknown word (copies)      -- # copies or substantial portions
Tools/spm_import.py:145:22    - Unknown word (adding)          -- # Required after adding / removing vertices
Tools/spm_import.py:145:31    - Unknown word (removing)        -- Required after adding / removing vertices and before
Tools/spm_import.py:145:60    - Unknown word (accessing)       -- vertices and before accessing them
Tools/spm_import.py:145:70    - Unknown word (them)            -- and before accessing them
Tools/spm_import.py:147:8     - Unknown word (verts)           -- bm.verts.ensure_lookup_table
Tools/spm_import.py:148:19    - Unknown word (actually)        -- # Required to actually retrieve the indices
Tools/spm_import.py:148:62    - Unknown word (they)            -- indices later on (or they stay -1).
Tools/spm_import.py:148:67    - Unknown word (stay)            -- indices later on (or they stay -1).
Tools/spm_import.py:149:8     - Unknown word (verts)           -- bm.verts.index_update()
Tools/spm_import.py:152:29    - Unknown word (verts)           -- bm.faces.new(bm.verts[j] for j in reversed
Tools/spm_import.py:157:13    - Unknown word (vcolor)          -- if read_vcolor:
Tools/spm_import.py:158:26    - Unknown word (loops)           -- color_layer = bm.loops.layers.color.new()
Tools/spm_import.py:15:19     - Unknown word (PROVIDED)    -- # THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY
Tools/spm_import.py:15:45     - Unknown word (WARRANTY)    -- PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
Tools/spm_import.py:160:23    - Unknown word (loops)           -- uv_layer = bm.loops.layers.uv.new()
Tools/spm_import.py:163:27    - Unknown word (loops)           -- uv_layer_two = bm.loops.layers.uv.new()
Tools/spm_import.py:16:12     - Unknown word (INCLUDING)   -- # IMPLIED, INCLUDING BUT NOT LIMITED TO THE
Tools/spm_import.py:16:3      - Unknown word (IMPLIED)     -- # IMPLIED, INCLUDING BUT NOT LIMITED
Tools/spm_import.py:16:45     - Unknown word (WARRANTIES)  -- BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
Tools/spm_import.py:171:26    - Unknown word (loops)           -- for loop in face.loops:
Tools/spm_import.py:172:21    - Unknown word (vcolor)          -- if read_vcolor:
Tools/spm_import.py:173:56    - Unknown word (vert)            -- vertices_list[loop.vert.index][0]
Tools/spm_import.py:175:57    - Unknown word (vert)            -- (vertices_list[loop.vert.index][1][0],
Tools/spm_import.py:176:40    - Unknown word (vert)            -- vertices_list[loop.vert.index][1][1])
Tools/spm_import.py:178:61    - Unknown word (vert)            -- (vertices_list[loop.vert.index][1][2],
Tools/spm_import.py:17:17     - Unknown word (PARTICULAR)  -- # FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
Tools/spm_import.py:17:3      - Unknown word (FITNESS)     -- # FITNESS FOR A PARTICULAR PURPOSE
Tools/spm_import.py:17:40     - Unknown word (NONINFRINGEMENT) -- PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
Tools/spm_import.py:17:69     - Unknown word (SHALL)           -- NONINFRINGEMENT. IN NO EVENT SHALL THE
Tools/spm_import.py:181:22    - Unknown word (doubles)         -- bmesh.ops.remove_doubles(bm, verts = bm.verts
Tools/spm_import.py:181:34    - Unknown word (verts)           -- ops.remove_doubles(bm, verts = bm.verts)
Tools/spm_import.py:181:5     - Unknown word (bmesh)           -- bmesh.ops.remove_doubles(bm
Tools/spm_import.py:185:22    - Unknown word (polygons)        -- for poly in mesh.polygons:
Tools/spm_import.py:186:18    - Unknown word (smooth)          -- poly.use_smooth = True
Tools/spm_import.py:188:17    - Unknown word (scene)           -- bpy.context.scene.objects.link(obj)
Tools/spm_import.py:18:24     - Unknown word (HOLDERS)         -- AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM
Tools/spm_import.py:18:3      - Unknown word (AUTHORS)         -- # AUTHORS OR COPYRIGHT HOLDERS
Tools/spm_import.py:18:35     - Unknown word (LIABLE)          -- COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES
Tools/spm_import.py:18:57     - Unknown word (DAMAGES)         -- LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
Tools/spm_import.py:19:14     - Unknown word (WHETHER)         -- # LIABILITY, WHETHER IN AN ACTION OF CONTRACT
Tools/spm_import.py:19:3      - Unknown word (LIABILITY)       -- # LIABILITY, WHETHER IN AN ACTION
Tools/spm_import.py:19:38     - Unknown word (CONTRACT)        -- WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
Tools/spm_import.py:19:48     - Unknown word (TORT)            -- ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
Tools/spm_import.py:19:56     - Unknown word (OTHERWISE)       -- OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
Tools/spm_import.py:19:67     - Unknown word (ARISING)         -- TORT OR OTHERWISE, ARISING FROM,
Tools/spm_import.py:20:65     - Unknown word (DEALINGS)        -- OR THE USE OR OTHER DEALINGS IN THE
Tools/spm_import.py:227:19    - Unknown word (SPMS)            -- header = "SPMS"
Tools/spm_import.py:229:19    - Unknown word (SPMA)            -- header = "SPMA"
Tools/spm_import.py:231:19    - Unknown word (SPMN)            -- header = "SPMN";
Tools/spm_import.py:235:10    - Unknown word (vcolor)         -- read_vcolor = byte >> 1 & 0x01;
Tools/spm_import.py:236:10    - Unknown word (tangent)        -- read_tangent = byte >> 2 & 0x01;
Tools/spm_import.py:237:29    - Unknown word (SPMA)           -- skinned = header == "SPMA";
Tools/spm_import.py:237:8     - Unknown word (skinned)        -- is_skinned = header == "SPMA";
Tools/spm_import.py:239:12    - Unknown word (useless)        -- # Skip useless bounding box
Tools/spm_import.py:25:1      - Unknown word (Blender)         -- Blender: 270
Tools/spm_import.py:261:13    - Unknown word (partitioned)    -- # Space partitioned mesh sector count, should
Tools/spm_import.py:261:30    - Unknown word (sector)         -- Space partitioned mesh sector count, should be 1
Tools/spm_import.py:262:5     - Unknown word (sector)         -- sector_count = struct.unpack
Tools/spm_import.py:264:28    - Unknown word (sector)         -- for sector in range(0, sector_count):
Tools/spm_import.py:264:9     - Unknown word (sector)         -- for sector in range(0, sector_count
Tools/spm_import.py:272:48    - Unknown word (tangent)        -- normal, read_vcolor, read_tangent,
Tools/spm_import.py:275:20    - Unknown word (skinned)        -- is_skinned, material_map, material
Tools/spm_import.py:276:23    - Unknown word (SPMS)           -- if header == "SPMS":
Tools/spm_import.py:27:24     - Unknown word (paritioned)      -- Tooltip: 'Import space paritioned mesh file format (.spm
Tools/spm_import.py:284:8     - Unknown word (idname)         -- bl_idname = ("screen.spm_import
Tools/spm_import.py:287:23    - Unknown word (props)          -- filter_glob = bpy.props.StringProperty(default
Tools/spm_import.py:288:26    - Unknown word (props)          -- extra_tex_path = bpy.props.StringProperty(name
Tools/spm_import.py:288:53    - Unknown word (Texture)        -- StringProperty(name="Texture path",\
Tools/spm_import.py:289:38    - Unknown word (textures)       -- Extra directory for textures, importer will search
Tools/spm_import.py:289:69    - Unknown word (recursively)    -- importer will search recursively")
Tools/spm_import.py:297:17    - Unknown word (scene)          -- context.scene.update()
Tools/spm_import.py:302:49    - Unknown word (idname)         -- SPM_Import_Operator.bl_idname, text="SPM (.spm)")
Tools/spm_import.py:31:3      - Unknown word (bpydoc)          -- __bpydoc__ = """\
Tools/spm_import.py:35:25     - Unknown word (paritioned)      -- "name": "SPM (Space paritioned mesh) Model Importer
Tools/spm_import.py:36:52     - Unknown word (Kart)            -- SPM files (the SuperTuxKart mesh format)",
Tools/spm_import.py:38:6      - Unknown word (blender)         -- "blender": (2, 7, 0),
Tools/spm_import.py:43:8      - Unknown word (bmesh)           -- import bmesh, bpy, bpy_extras, os
Tools/spm_import.py:47:5      - Unknown word (reinterpret)     -- def reinterpretCastIntToFloat(int_val
Tools/spm_import.py:5:17      - Unknown word (hereby)     -- # Permission is hereby granted, free of charge
Tools/spm_import.py:5:24      - Unknown word (granted)    -- Permission is hereby granted, free of charge, to
Tools/spm_import.py:5:41      - Unknown word (charge)     -- hereby granted, free of charge, to any person obtaining
Tools/spm_import.py:5:63      - Unknown word (obtaining)  -- charge, to any person obtaining a copy
Tools/spm_import.py:64:24     - Unknown word (reinterpret)     -- return reinterpretCastIntToFloat(int(s
Tools/spm_import.py:6:76      - Unknown word (deal)       -- the "Software"), to deal
Tools/spm_import.py:74:24     - Unknown word (reinterpret)     -- return reinterpretCastIntToFloat(int((s
Tools/spm_import.py:76:24     - Unknown word (reinterpret)     -- return reinterpretCastIntToFloat(int((s
Tools/spm_import.py:7:27      - Unknown word (restriction) -- the Software without restriction, including without limitation
Tools/spm_import.py:7:40      - Unknown word (including)   -- without restriction, including without limitation the
Tools/spm_import.py:7:58      - Unknown word (limitation)  -- estriction, including without limitation the rights
Tools/spm_import.py:7:73      - Unknown word (rights)      -- without limitation the rights
Tools/spm_import.py:81:16     - Unknown word (reinterpret)     -- return reinterpretCastIntToFloat(int((s
Tools/spm_import.py:83:29     - Unknown word (vertices)        -- generateMeshBuffer(spm, vertices_count, indices_count
Tools/spm_import.py:84:42     - Unknown word (vcolor)          -- read_normal, read_vcolor, read_tangent,
Tools/spm_import.py:84:55     - Unknown word (tangent)         -- normal, read_vcolor, read_tangent,
Tools/spm_import.py:85:43     - Unknown word (skinned)         -- uv_one, uv_two, is_skinned, material_map,
Tools/spm_import.py:8:41      - Unknown word (distribute)  -- modify, merge, publish, distribute, sublicense, and/or
Tools/spm_import.py:8:53      - Unknown word (sublicense)  -- publish, distribute, sublicense, and/or sell
Tools/spm_import.py:8:72      - Unknown word (sell)        -- sublicense, and/or sell
Tools/spm_import.py:93:10     - Unknown word (bmesh)           -- bm = bmesh.new()
Tools/spm_import.py:96:5      - Unknown word (vertices)        -- vertices_list = []
Tools/spm_import.py:98:14     - Unknown word (vertices)        -- 4 if vertices_count > 65535 else
Tools/spm_import.py:98:47     - Unknown word (vertices)        -- count > 65535 else 2 if vertices_count > 255 else 1
Tools/spm_import.py:99:26     - Unknown word (vertices)        -- for vert in range(0, vertices_count):
Tools/spm_import.py:99:9      - Unknown word (vert)            -- for vert in range(0, vertices
Tools/spm_import.py:9:3       - Unknown word (copies)      -- # copies of the Software, and
Tools/spm_import.py:9:34      - Unknown word (permit)      -- the Software, and to permit persons to whom the
Tools/spm_import.py:9:41      - Unknown word (persons)     -- Software, and to permit persons to whom the Software
Tools/spm_import.py:9:52      - Unknown word (whom)        -- to permit persons to whom the Software is
Tools/stk_kart.py:100:40    - Unknown word (exporter)     -- Cannot find the spm exporter, make sure you installed
Tools/stk_kart.py:100:55    - Unknown word (sure)         -- the spm exporter, make sure you installed it properly
Tools/stk_kart.py:103:17    - Unknown word (headlights)   -- f.write(' <headlights>\n')
Tools/stk_kart.py:104:5     - Unknown word (instancing)   -- instancing_objects = {}
Tools/stk_kart.py:105:17    - Unknown word (Headlights)   -- for obj in lHeadlights:
Tools/stk_kart.py:108:16    - Unknown word (straight)     -- if straight_frame == -1:
Tools/stk_kart.py:109:32    - Unknown word (striaght)     -- print("Missing striaght frame for saving straight
Tools/stk_kart.py:109:51    - Unknown word (saving)       -- Missing striaght frame for saving straight location")
Tools/stk_kart.py:109:58    - Unknown word (straight)     -- striaght frame for saving straight location")
Tools/stk_kart.py:10:28     - Unknown word (Kart)       -- Tooltip: 'Export a SuperTuxKart kart'
Tools/stk_kart.py:10:33     - Unknown word (kart)       -- Export a SuperTuxKart kart'
Tools/stk_kart.py:112:25    - Unknown word (scene)        -- bpy.context.scene.frame_set(straight_frame
Tools/stk_kart.py:112:41    - Unknown word (straight)     -- context.scene.frame_set(straight_frame)
Tools/stk_kart.py:113:31    - Unknown word (matrix)       -- loc, rot, scale = obj.matrix_world.decompose()
Tools/stk_kart.py:113:44    - Unknown word (decompose)    -- scale = obj.matrix_world.decompose()
Tools/stk_kart.py:114:22    - Unknown word (euler)        -- rot = rot.to_euler('XZY')
Tools/stk_kart.py:122:45    - Unknown word (headlight)    -- = getProperty(obj, 'headlight_color', '255 255 25
Tools/stk_kart.py:122:9     - Unknown word (headlight)    -- headlight_color = getProperty
Tools/stk_kart.py:123:12    - Unknown word (headlight)    -- if headlight_color != '255 255 2
Tools/stk_kart.py:124:56    - Unknown word (headlight)    -- color=\"%s\"\n' % headlight_color)
Tools/stk_kart.py:126:9     - Unknown word (exported)     -- exported_name = obj.name
Tools/stk_kart.py:127:29    - Unknown word (instancing)   -- if obj.data.name in instancing_objects:
Tools/stk_kart.py:128:13    - Unknown word (exported)     -- exported_name = instancing_objects
Tools/stk_kart.py:128:29    - Unknown word (instancing)   -- exported_name = instancing_objects[obj.data.name
Tools/stk_kart.py:12:17     - Unknown word (Joerg)      -- __author__ = ["Joerg Henrichs (hiker), Marianne
Tools/stk_kart.py:12:23     - Unknown word (Henrichs)   -- author__ = ["Joerg Henrichs (hiker), Marianne Gagnon
Tools/stk_kart.py:12:33     - Unknown word (hiker)      -- = ["Joerg Henrichs (hiker), Marianne Gagnon (Auria
Tools/stk_kart.py:12:41     - Unknown word (Marianne)   -- Joerg Henrichs (hiker), Marianne Gagnon (Auria), xapantu
Tools/stk_kart.py:12:50     - Unknown word (Gagnon)     -- Henrichs (hiker), Marianne Gagnon (Auria), xapantu"]
Tools/stk_kart.py:12:58     - Unknown word (Auria)      -- hiker), Marianne Gagnon (Auria), xapantu"]
Tools/stk_kart.py:12:66     - Unknown word (xapantu)    -- Marianne Gagnon (Auria), xapantu"]
Tools/stk_kart.py:130:13    - Unknown word (instancing)   -- instancing_objects[obj.data.name
Tools/stk_kart.py:131:24    - Unknown word (scene)        -- global the_scene
Tools/stk_kart.py:132:17    - Unknown word (scene)        -- the_scene.obj_list = [obj]
Tools/stk_kart.py:133:39    - Unknown word (localsp)      -- ops.screen.spm_export(localsp=True, filepath=path
Tools/stk_kart.py:134:46    - Unknown word (tangent)      -- export_tangent='precalculate_tangents
Tools/stk_kart.py:134:55    - Unknown word (precalculate) -- export_tangent='precalculate_tangents' in bpy.context
Tools/stk_kart.py:134:68    - Unknown word (tangents)     -- tangent='precalculate_tangents' in bpy.context.scene
Tools/stk_kart.py:134:93    - Unknown word (scene)        -- tangents' in bpy.context.scene\
Tools/stk_kart.py:135:62    - Unknown word (precalculate) -- and bpy.context.scene['precalculate_tangents'] == 'true
Tools/stk_kart.py:135:75    - Unknown word (tangents)     -- scene['precalculate_tangents'] == 'true',
Tools/stk_kart.py:136:39    - Unknown word (overwrite)    -- overwrite_without_asking=True
Tools/stk_kart.py:136:57    - Unknown word (asking)       -- overwrite_without_asking=True)
Tools/stk_kart.py:139:56    - Unknown word (exported)     -- model="%s.spm"/>\n' % exported_name)
Tools/stk_kart.py:13:17     - Unknown word (supertuxkart) -- __url__ = ["supertuxkart.sourceforge.net"]
Tools/stk_kart.py:13:30     - Unknown word (sourceforge)  -- = ["supertuxkart.sourceforge.net"]
Tools/stk_kart.py:141:18    - Unknown word (headlights)   -- f.write(' </headlights>\n')
Tools/stk_kart.py:144:14    - Unknown word (weighted)     -- # Save speed weighted
Tools/stk_kart.py:145:14    - Unknown word (Weighted)     -- def saveSpeedWeighted(f, lSpeedWeighted, path
Tools/stk_kart.py:145:32    - Unknown word (Weighted)     -- saveSpeedWeighted(f, lSpeedWeighted, path, straight_frame
Tools/stk_kart.py:145:48    - Unknown word (straight)     -- lSpeedWeighted, path, straight_frame):
Tools/stk_kart.py:146:18    - Unknown word (Weighted)     -- if len(lSpeedWeighted) == 0:
Tools/stk_kart.py:149:40    - Unknown word (exporter)     -- Cannot find the spm exporter, make sure you installed
Tools/stk_kart.py:149:55    - Unknown word (sure)         -- the spm exporter, make sure you installed it properly
Tools/stk_kart.py:152:23    - Unknown word (weighted)     -- f.write(' <speed-weighted-objects>\n')
Tools/stk_kart.py:153:5     - Unknown word (instancing)   -- instancing_objects = {}
Tools/stk_kart.py:154:22    - Unknown word (Weighted)     -- for obj in lSpeedWeighted:
Tools/stk_kart.py:158:32    - Unknown word (striaght)     -- print("Missing striaght frame for saving straight
Tools/stk_kart.py:158:51    - Unknown word (saving)       -- Missing striaght frame for saving straight location")
Tools/stk_kart.py:15:3      - Unknown word (bpydoc)       -- __bpydoc__ = """\
Tools/stk_kart.py:162:31    - Unknown word (matrix)       -- loc, rot, scale = obj.matrix_world.decompose()
Tools/stk_kart.py:162:44    - Unknown word (decompose)    -- scale = obj.matrix_world.decompose()
Tools/stk_kart.py:163:22    - Unknown word (euler)        -- rot = rot.to_euler('XZY')
Tools/stk_kart.py:172:57    - Unknown word (weighted)     -- getProperty(obj, "speed-weighted-strength-factor", -
Tools/stk_kart.py:172:66    - Unknown word (strength)     -- obj, "speed-weighted-strength-factor", -1.0))
Tools/stk_kart.py:172:9     - Unknown word (strength)     -- strength_factor = float(getProperty
Tools/stk_kart.py:173:57    - Unknown word (weighted)     -- getProperty(obj, "speed-weighted-speed-factor", -
Tools/stk_kart.py:174:57    - Unknown word (weighted)     -- getProperty(obj, "speed-weighted-texture-speed-x", 0
Tools/stk_kart.py:174:66    - Unknown word (texture)      -- obj, "speed-weighted-texture-speed-x", 0.0))
Tools/stk_kart.py:174:9     - Unknown word (texture)      -- texture_speed_x = float(getProperty
Tools/stk_kart.py:175:66    - Unknown word (texture)      -- obj, "speed-weighted-texture-speed-y", 0.0))
Tools/stk_kart.py:175:9     - Unknown word (texture)      -- texture_speed_y = float(getProperty
Tools/stk_kart.py:178:12    - Unknown word (strength)     -- if strength_factor >= 0.0:
Tools/stk_kart.py:179:29    - Unknown word (strength)     -- attr = attr + ' strength-factor="%f"' % strength
Tools/stk_kart.py:179:53    - Unknown word (strength)     -- strength-factor="%f"' % strength_factor
Tools/stk_kart.py:182:12    - Unknown word (texture)      -- if texture_speed_x != 0.0 or texture
Tools/stk_kart.py:186:9     - Unknown word (exported)     -- exported_name = obj.name
Tools/stk_kart.py:188:13    - Unknown word (exported)     -- exported_name = instancing_objects
Tools/stk_kart.py:18:27     - Unknown word (Joerg)        -- Copyright (C) 2009-2011 Joerg Henrichs, Marianne Gagnon
Tools/stk_kart.py:18:33     - Unknown word (Henrichs)     -- (C) 2009-2011 Joerg Henrichs, Marianne Gagnon, Xapantu
Tools/stk_kart.py:18:43     - Unknown word (Marianne)     -- 011 Joerg Henrichs, Marianne Gagnon, Xapantu
Tools/stk_kart.py:18:52     - Unknown word (Gagnon)       -- Joerg Henrichs, Marianne Gagnon, Xapantu
Tools/stk_kart.py:18:60     - Unknown word (Xapantu)      -- Henrichs, Marianne Gagnon, Xapantu
Tools/stk_kart.py:193:39    - Unknown word (localsp)      -- ops.screen.spm_export(localsp=True, filepath=path
Tools/stk_kart.py:194:46    - Unknown word (tangent)      -- export_tangent='precalculate_tangents
Tools/stk_kart.py:194:55    - Unknown word (precalculate) -- export_tangent='precalculate_tangents' in bpy.context
Tools/stk_kart.py:194:68    - Unknown word (tangents)     -- tangent='precalculate_tangents' in bpy.context.scene
Tools/stk_kart.py:195:62    - Unknown word (precalculate) -- and bpy.context.scene['precalculate_tangents'] == 'true
Tools/stk_kart.py:195:75    - Unknown word (tangents)     -- scene['precalculate_tangents'] == 'true',
Tools/stk_kart.py:196:39    - Unknown word (overwrite)    -- overwrite_without_asking=True
Tools/stk_kart.py:196:57    - Unknown word (asking)       -- overwrite_without_asking=True)
Tools/stk_kart.py:204:20    - Unknown word (Wheels)       -- def saveWheels(f, lWheels, path):
Tools/stk_kart.py:204:9     - Unknown word (Wheels)       -- def saveWheels(f, lWheels, path):
Tools/stk_kart.py:205:13    - Unknown word (Wheels)       -- if len(lWheels) == 0:
Tools/stk_kart.py:208:40    - Unknown word (exporter)     -- Cannot find the spm exporter, make sure you installed
Tools/stk_kart.py:208:55    - Unknown word (sure)         -- the spm exporter, make sure you installed it properly
Tools/stk_kart.py:211:13    - Unknown word (Wheels)       -- if len(lWheels)!=4:
Tools/stk_kart.py:212:35    - Unknown word (wheels)       -- warning("Warning - %d wheels specified" % len(lWheels
Tools/stk_kart.py:212:60    - Unknown word (Wheels)       -- wheels specified" % len(lWheels))
Tools/stk_kart.py:215:27    - Unknown word (rear)         -- "wheel-rear-right.spm", "wheel
Tools/stk_kart.py:215:52    - Unknown word (rear)         -- right.spm", "wheel-rear-left.spm" )
Tools/stk_kart.py:216:50    - Unknown word (rear)         -- right', 'front-left', 'rear-right', 'rear-left'
Tools/stk_kart.py:216:6     - Unknown word (Sides)        -- lSides = ('front-right
Tools/stk_kart.py:216:64    - Unknown word (rear)         -- left', 'rear-right', 'rear-left')
Tools/stk_kart.py:218:17    - Unknown word (wheels)       -- f.write(' <wheels>\n')
Tools/stk_kart.py:21:22     - Unknown word (Kart)         -- "name": "SuperTuxKart Kart Exporter",
Tools/stk_kart.py:21:27     - Unknown word (Kart)         -- name": "SuperTuxKart Kart Exporter",
Tools/stk_kart.py:21:32     - Unknown word (Exporter)     -- "SuperTuxKart Kart Exporter",
Tools/stk_kart.py:221:18    - Unknown word (stylen)       -- # If old stylen names are given, use
Tools/stk_kart.py:221:35    - Unknown word (given)        -- old stylen names are given, use them to determine
Tools/stk_kart.py:221:46    - Unknown word (them)         -- names are given, use them to determine
Tools/stk_kart.py:223:20    - Unknown word (WHEELFRONT)   -- #if name=="WHEELFRONT.R":
Tools/stk_kart.py:225:22    - Unknown word (WHEELFRONT)   -- #elif name=="WHEELFRONT.L":
Tools/stk_kart.py:227:22    - Unknown word (WHEELREAR)    -- #elif name=="WHEELREAR.R":
Tools/stk_kart.py:229:22    - Unknown word (WHEELREAR)    -- #elif name=="WHEELREAR.L":
Tools/stk_kart.py:22:31     - Unknown word (blender)      -- description": "Exports a blender character/kart to SuperTuxKar
Tools/stk_kart.py:22:49     - Unknown word (kart)         -- a blender character/kart to SuperTuxKart",
Tools/stk_kart.py:22:65     - Unknown word (Kart)         -- character/kart to SuperTuxKart",
Tools/stk_kart.py:233:11    - Unknown word (Otherwise)    -- # Otherwise the new style 'type
Tools/stk_kart.py:234:14    - Unknown word (coordinates)  -- # y coordinates to determine where the
Tools/stk_kart.py:234:55    - Unknown word (belongs)      -- determine where the wheel belongs to.
Tools/stk_kart.py:23:16     - Unknown word (Joerg)        -- "author": "Joerg Henrichs, Marianne Gagnon
Tools/stk_kart.py:23:22     - Unknown word (Henrichs)     -- "author": "Joerg Henrichs, Marianne Gagnon, Xapantu
Tools/stk_kart.py:23:32     - Unknown word (Marianne)     -- author": "Joerg Henrichs, Marianne Gagnon, Xapantu",
Tools/stk_kart.py:23:41     - Unknown word (Gagnon)       -- Joerg Henrichs, Marianne Gagnon, Xapantu",
Tools/stk_kart.py:23:49     - Unknown word (Xapantu)      -- Henrichs, Marianne Gagnon, Xapantu",
Tools/stk_kart.py:243:22    - Unknown word (Sides)        -- % ( lSides[index], wheel.location
Tools/stk_kart.py:251:35    - Unknown word (localsp)      -- ops.screen.spm_export(localsp=False, filepath=path
Tools/stk_kart.py:252:42    - Unknown word (tangent)      -- export_tangent='precalculate_tangents
Tools/stk_kart.py:252:51    - Unknown word (precalculate) -- export_tangent='precalculate_tangents' in bpy.context
Tools/stk_kart.py:252:64    - Unknown word (tangents)     -- tangent='precalculate_tangents' in bpy.context.scene
Tools/stk_kart.py:254:35    - Unknown word (overwrite)    -- overwrite_without_asking=True
Tools/stk_kart.py:254:53    - Unknown word (asking)       -- overwrite_without_asking=True)
Tools/stk_kart.py:25:6      - Unknown word (blender)      -- "blender": (2, 5, 9),
Tools/stk_kart.py:260:18    - Unknown word (wheels)       -- f.write(' </wheels>\n')
Tools/stk_kart.py:263:21    - Unknown word (animations)   -- # Saves any defined animations to the kart.xml file
Tools/stk_kart.py:263:3     - Unknown word (Saves)        -- # Saves any defined animations
Tools/stk_kart.py:263:39    - Unknown word (kart)         -- defined animations to the kart.xml file.
Tools/stk_kart.py:264:9     - Unknown word (Animations)   -- def saveAnimations(f):
Tools/stk_kart.py:269:18    - Unknown word (animation)    -- # search for animation
Tools/stk_kart.py:270:6     - Unknown word (Anims)        -- lAnims = []
Tools/stk_kart.py:271:6     - Unknown word (Markers)      -- lMarkersFound = []
Tools/stk_kart.py:274:16    - Unknown word (markers)      -- # Find markers at this frame
Tools/stk_kart.py:275:40    - Unknown word (markers)      -- in the_scene.timeline_markers:
Tools/stk_kart.py:279:57    - Unknown word (winning)      -- right", "left", "start-winning", "start-winning-loop
Tools/stk_kart.py:279:74    - Unknown word (winning)      -- start-winning", "start-winning-loop",
Tools/stk_kart.py:280:26    - Unknown word (winning)      -- "end-winning", "start-losing", "start
Tools/stk_kart.py:280:43    - Unknown word (losing)       -- end-winning", "start-losing", "start-losing-loop
Tools/stk_kart.py:280:59    - Unknown word (losing)       -- start-losing", "start-losing-loop", "end-losing"
Tools/stk_kart.py:280:78    - Unknown word (losing)       -- start-losing-loop", "end-losing",
Tools/stk_kart.py:281:28    - Unknown word (explosion)    -- "start-explosion", "end-explosion",
Tools/stk_kart.py:281:45    - Unknown word (explosion)    -- start-explosion", "end-explosion", "start-jump", "start
Tools/stk_kart.py:282:22    - Unknown word (turning)      -- "turning-l", "center", "turning
Tools/stk_kart.py:282:45    - Unknown word (turning)      -- turning-l", "center", "turning-r", "repeat-losing"
Tools/stk_kart.py:282:65    - Unknown word (losing)       -- turning-r", "repeat-losing", "repeat-winning",
Tools/stk_kart.py:282:82    - Unknown word (winning)      -- repeat-losing", "repeat-winning",
Tools/stk_kart.py:283:22    - Unknown word (backpedal)    -- "backpedal-left", "backpedal",
Tools/stk_kart.py:283:40    - Unknown word (backpedal)    -- "backpedal-left", "backpedal", "backpedal-right"
Tools/stk_kart.py:283:53    - Unknown word (backpedal)    -- left", "backpedal", "backpedal-right", "selection-start
Tools/stk_kart.py:284:37    - Unknown word (turning)      -- if markerName=="turning-l": markerName="left
Tools/stk_kart.py:285:37    - Unknown word (turning)      -- if markerName=="turning-r": markerName="right
Tools/stk_kart.py:288:44    - Unknown word (losing)       -- markerName=="repeat-losing": markerName="start
Tools/stk_kart.py:289:44    - Unknown word (winning)      -- markerName=="repeat-winning": markerName="start
Tools/stk_kart.py:290:22    - Unknown word (Anims)        -- lAnims.append( (markerName
Tools/stk_kart.py:291:22    - Unknown word (Markers)      -- lMarkersFound.append(markerName
Tools/stk_kart.py:293:28    - Unknown word (Markers)      -- (not "straight" in lMarkersFound) or (not "left
Tools/stk_kart.py:293:61    - Unknown word (Markers)      -- or (not "left" in lMarkersFound) or (not "right
Tools/stk_kart.py:293:95    - Unknown word (Markers)      -- or (not "right" in lMarkersFound):
Tools/stk_kart.py:294:22    - Unknown word (Could)        -- log_warning('Could not find markers left
Tools/stk_kart.py:294:37    - Unknown word (markers)      -- warning('Could not find markers left/straight/right
Tools/stk_kart.py:294:85    - Unknown word (steering)     -- in frames %i to %i, steering animations may not work
Tools/stk_kart.py:294:94    - Unknown word (animations)   -- frames %i to %i, steering animations may not work' %  (first
Tools/stk_kart.py:297:22    - Unknown word (Could)        -- log_warning('Could not find markers for
Tools/stk_kart.py:297:37    - Unknown word (markers)      -- warning('Could not find markers for win/lose animations
Tools/stk_kart.py:297:53    - Unknown word (lose)         -- find markers for win/lose animations in frames
Tools/stk_kart.py:297:58    - Unknown word (animations)   -- markers for win/lose animations in frames %i to %i,
Tools/stk_kart.py:297:93    - Unknown word (lose)         -- frames %i to %i, win/lose animations may not work
Tools/stk_kart.py:297:98    - Unknown word (animations)   -- frames %i to %i, win/lose animations may not work' %  (first
Tools/stk_kart.py:300:9     - Unknown word (Anims)        -- if lAnims:
Tools/stk_kart.py:301:21    - Unknown word (animations)   -- f.write(' <animations %s = "%s"' % (lAnims
Tools/stk_kart.py:301:47    - Unknown word (Anims)        -- animations %s = "%s"' % (lAnims[0][0], lAnims[0][1]
Tools/stk_kart.py:301:61    - Unknown word (Anims)        -- ' % (lAnims[0][0], lAnims[0][1]))
Tools/stk_kart.py:308:12    - Unknown word (saving)       -- # Code for saving kart specific sounds
Tools/stk_kart.py:308:19    - Unknown word (kart)         -- # Code for saving kart specific sounds. This
Tools/stk_kart.py:308:33    - Unknown word (sounds)       -- saving kart specific sounds. This is not yet supported
Tools/stk_kart.py:309:30    - Unknown word (plase)        -- ll leave the code in plase
Tools/stk_kart.py:310:9     - Unknown word (Sounds)       -- def saveSounds(f, engine_sfx):
Tools/stk_kart.py:311:6     - Unknown word (Sounds)       -- lSounds = []
Tools/stk_kart.py:312:38    - Unknown word (Sounds)       -- sfx: lSounds.append( ("engine",
Tools/stk_kart.py:313:14    - Unknown word (sound)        -- #if kart_sound_horn.val != "": lSounds
Tools/stk_kart.py:313:20    - Unknown word (horn)         -- #if kart_sound_horn.val != "": lSounds
Tools/stk_kart.py:313:38    - Unknown word (Sounds)       -- sound_horn.val != "": lSounds.append( ("horn-sound
Tools/stk_kart.py:313:55    - Unknown word (horn)         -- : lSounds.append( ("horn-sound", kart_sound_horn
Tools/stk_kart.py:313:60    - Unknown word (sound)        -- lSounds.append( ("horn-sound", kart_sound_horn.val
Tools/stk_kart.py:313:73    - Unknown word (sound)        -- ("horn-sound", kart_sound_horn.val ))
Tools/stk_kart.py:313:79    - Unknown word (horn)         -- horn-sound", kart_sound_horn.val ))
Tools/stk_kart.py:313:9     - Unknown word (kart)         -- #if kart_sound_horn.val !=
Tools/stk_kart.py:314:14    - Unknown word (sound)        -- #if kart_sound_crash.val != "": lSounds
Tools/stk_kart.py:314:20    - Unknown word (crash)        -- #if kart_sound_crash.val != "": lSounds.append
Tools/stk_kart.py:314:38    - Unknown word (Sounds)       -- sound_crash.val != "": lSounds.append( ("crash-sound
Tools/stk_kart.py:314:55    - Unknown word (crash)        -- : lSounds.append( ("crash-sound",kart_sound_crash
Tools/stk_kart.py:314:61    - Unknown word (sound)        -- lSounds.append( ("crash-sound",kart_sound_crash.val
Tools/stk_kart.py:314:79    - Unknown word (crash)        -- crash-sound",kart_sound_crash.val))
Tools/stk_kart.py:315:20    - Unknown word (shoot)        -- #if kart_sound_shoot.val != "" :lSounds.append
Tools/stk_kart.py:315:55    - Unknown word (shoot)        -- :lSounds.append( ("shoot-sound",kart_sound_shoot
Tools/stk_kart.py:315:79    - Unknown word (shoot)        -- shoot-sound",kart_sound_shoot.val))
Tools/stk_kart.py:317:20    - Unknown word (explode)      -- #if kart_sound_explode.val!="" :lSounds.append
Tools/stk_kart.py:317:55    - Unknown word (explode)      -- :lSounds.append( ("explode-sound",kart_sound_explode
Tools/stk_kart.py:317:81    - Unknown word (explode)      -- explode-sound",kart_sound_explode.val))
Tools/stk_kart.py:320:20    - Unknown word (zipper)       -- #if kart_sound_zipper.val!= "" :lSounds.append
Tools/stk_kart.py:320:55    - Unknown word (zipper)       -- :lSounds.append( ("zipper-sound",kart_sound_zipper
Tools/stk_kart.py:320:80    - Unknown word (zipper)       -- zipper-sound",kart_sound_zipper.val))
Tools/stk_kart.py:325:21    - Unknown word (sounds)       -- f.write(' <sounds %s = "%s"'%(lSounds
Tools/stk_kart.py:33:31     - Unknown word (might)        -- get an error here, it might be
Tools/stk_kart.py:343:20    - Unknown word (Incorrect)    -- log_error("Incorrect kart color")
Tools/stk_kart.py:348:20    - Unknown word (Incorrect)    -- log_error("Incorrect kart color")
Tools/stk_kart.py:34:2      - Unknown word (because)      -- #because you don't have Python
Tools/stk_kart.py:356:20    - Unknown word (Incorrect)    -- log_error("Incorrect kart color")
Tools/stk_kart.py:359:28    - Unknown word (wheels)       -- Get the kart and all wheels
Tools/stk_kart.py:365:11    - Unknown word (Weighted)    -- lSpeedWeighted = []
Tools/stk_kart.py:366:6     - Unknown word (Headlights)  -- lHeadlights = []
Tools/stk_kart.py:369:9     - Unknown word (stktype)     -- stktype = getProperty(obj,
Tools/stk_kart.py:371:12    - Unknown word (stktype)     -- if stktype=="WHEEL":
Tools/stk_kart.py:373:14    - Unknown word (stktype)     -- elif stktype=="NITRO-EMITTER":
Tools/stk_kart.py:373:24    - Unknown word (NITRO)       -- elif stktype=="NITRO-EMITTER":
Tools/stk_kart.py:373:30    - Unknown word (EMITTER)     -- elif stktype=="NITRO-EMITTER":
Tools/stk_kart.py:375:14    - Unknown word (stktype)     -- elif stktype=="SPEED-WEIGHTED":
Tools/stk_kart.py:375:30    - Unknown word (WEIGHTED)    -- elif stktype=="SPEED-WEIGHTED":
Tools/stk_kart.py:377:14    - Unknown word (stktype)     -- elif stktype=="IGNORE":
Tools/stk_kart.py:379:24    - Unknown word (HEADLIGHT)   -- elif stktype=="HEADLIGHT":
Tools/stk_kart.py:384:25    - Unknown word (WHEELFRONT)  -- #elif name in ["WHEELFRONT.R","WHEELFRONT.L",
Tools/stk_kart.py:384:40    - Unknown word (WHEELFRONT)  -- in ["WHEELFRONT.R","WHEELFRONT.L", \
Tools/stk_kart.py:385:25    - Unknown word (WHEELREAR)   -- # "WHEELREAR.R", "WHEELREAR.L"
Tools/stk_kart.py:385:40    - Unknown word (WHEELREAR)   -- "WHEELREAR.R", "WHEELREAR.L" ]:
Tools/stk_kart.py:388:22    - Unknown word (limitations) -- # Due to limitations with the spm exporter
Tools/stk_kart.py:388:47    - Unknown word (exporter)    -- limitations with the spm exporter animated
Tools/stk_kart.py:388:56    - Unknown word (animated)    -- with the spm exporter animated
Tools/stk_kart.py:389:23    - Unknown word (must)        -- # objects must be first in the list
Tools/stk_kart.py:38:6      - Unknown word (mathutils)    -- from mathutils import *
Tools/stk_kart.py:390:49    - Unknown word (Armature)    -- and obj.parent.type=="Armature":
Tools/stk_kart.py:3:3       - Unknown word (setq)       -- #(setq tab-width 4)
Tools/stk_kart.py:417:18    - Unknown word (medium)      -- kart_type = 'medium'
Tools/stk_kart.py:418:9     - Unknown word (karttype)    -- if 'karttype' in the_scene:
Tools/stk_kart.py:419:32    - Unknown word (karttype)    -- kart_type = the_scene['karttype']
Tools/stk_kart.py:41:5      - Unknown word (scene)        -- the_scene = None
Tools/stk_kart.py:423:19    - Unknown word (Generated)   -- f.write('<!-- Generated with script from SVN
Tools/stk_kart.py:443:26    - Unknown word (Animations)  -- straight_frame = saveAnimations(f)
Tools/stk_kart.py:452:32    - Unknown word (striaght)    -- print("Missing striaght frame for saving straight
Tools/stk_kart.py:452:51    - Unknown word (saving)      -- Missing striaght frame for saving straight location")
Tools/stk_kart.py:455:42    - Unknown word (matrix)      -- scale = hat_object.matrix_world.decompose()
Tools/stk_kart.py:455:55    - Unknown word (decompose)   -- object.matrix_world.decompose()
Tools/stk_kart.py:456:26    - Unknown word (euler)       -- rot = rot.to_euler('XZY')
Tools/stk_kart.py:45:1      - Unknown word (thelist)      -- thelist = []
Tools/stk_kart.py:463:42    - Unknown word (matrix)      -- scale = hat_object.matrix_world.decompose()
Tools/stk_kart.py:463:55    - Unknown word (decompose)   -- object.matrix_world.decompose()
Tools/stk_kart.py:465:26    - Unknown word (euler)       -- rot = rot.to_euler('XZY')
Tools/stk_kart.py:471:13    - Unknown word (Lean)        -- if 'kartLean' in the_scene and len
Tools/stk_kart.py:471:55    - Unknown word (Lean)        -- and len(the_scene['kartLean']) > 0:
Tools/stk_kart.py:472:21    - Unknown word (lean)        -- f.write(' <lean max="' + the_scene[
Tools/stk_kart.py:472:50    - Unknown word (Lean)        -- "' + the_scene['kartLean'] + '"/>\n')
Tools/stk_kart.py:473:54    - Unknown word (exhaust)     -- scene and len(the_scene['exhaust_xml']) > 0:
Tools/stk_kart.py:473:9     - Unknown word (exhaust)     -- if 'exhaust_xml' in the_scene and
Tools/stk_kart.py:474:21    - Unknown word (exhaust)     -- f.write(' <exhaust file="' + the_scene
Tools/stk_kart.py:474:50    - Unknown word (exhaust)     -- file="' + the_scene['exhaust_xml'] + '"/>\n')
Tools/stk_kart.py:47:12     - Unknown word (thelist)      -- global thelist
Tools/stk_kart.py:482:40    - Unknown word (exporter)    -- Cannot find the spm exporter, make sure you installed
Tools/stk_kart.py:482:55    - Unknown word (sure)        -- the spm exporter, make sure you installed it properly
Tools/stk_kart.py:485:31    - Unknown word (localsp)     -- ops.screen.spm_export(localsp=False, filepath=path
Tools/stk_kart.py:486:38    - Unknown word (tangent)     -- export_tangent='precalculate_tangents
Tools/stk_kart.py:488:31    - Unknown word (overwrite)   -- overwrite_without_asking=True
Tools/stk_kart.py:488:49    - Unknown word (asking)      -- overwrite_without_asking=True, static_mesh_frame
Tools/stk_kart.py:48:12     - Unknown word (thelist)      -- return thelist
Tools/stk_kart.py:491:32    - Unknown word (Blender)     -- export.write_spm_file(Blender.sys.join(path, model
Tools/stk_kart.py:496:60    - Unknown word (sure)        -- material exporter, make sure you installed it properly
Tools/stk_kart.py:4:3       - Unknown word (setq)       -- #(setq py-indent-offset `4
Tools/stk_kart.py:508:5     - Unknown word (savescene)   -- def savescene_callback(path):
Tools/stk_kart.py:50:12     - Unknown word (thelist)      -- global thelist
Tools/stk_kart.py:517:8     - Unknown word (idname)      -- bl_idname = ("screen.stk_kart
Tools/stk_kart.py:519:20    - Unknown word (props)       -- filepath = bpy.props.StringProperty(subtype
Tools/stk_kart.py:51:5      - Unknown word (thelist)      -- thelist = value
Tools/stk_kart.py:524:41    - Unknown word (must)        -- report({'ERROR'}, "You must be in object mode")
Tools/stk_kart.py:525:28    - Unknown word (must)        -- log_error("You must be in object mode")
Tools/stk_kart.py:532:34    - Unknown word (blend)       -- blend_filepath = context.blend_data.filepath
Tools/stk_kart.py:532:9     - Unknown word (blend)       -- blend_filepath = context.blend
Tools/stk_kart.py:533:16    - Unknown word (blend)       -- if not blend_filepath:
Tools/stk_kart.py:534:13    - Unknown word (blend)       -- blend_filepath = "Untitled
Tools/stk_kart.py:534:31    - Unknown word (Untitled)    -- blend_filepath = "Untitled"
Tools/stk_kart.py:537:13    - Unknown word (blend)       -- blend_filepath = os.path.splitext
Tools/stk_kart.py:540:32    - Unknown word (fileselect)  -- context.window_manager.fileselect_add(self)
Tools/stk_kart.py:546:41    - Unknown word (must)        -- report({'ERROR'}, "You must be in object mode")
Tools/stk_kart.py:547:28    - Unknown word (must)        -- log_error("You must be in object mode")
Tools/stk_kart.py:556:28    - Unknown word (ugly)        -- # FIXME: silly and ugly hack, the list of objects
Tools/stk_kart.py:556:33    - Unknown word (hack)        -- FIXME: silly and ugly hack, the list of objects
Tools/stk_kart.py:556:72    - Unknown word (passed)      -- objects to export is passed through
Tools/stk_kart.py:558:54    - Unknown word (track)       -- export script and the track export script do this
Tools/stk_kart.py:558:97    - Unknown word (sight)       -- this!! conflicts in sight?
Tools/stk_kart.py:559:19    - Unknown word (Scene)       -- bpy.types.Scene.obj_list = property
Tools/stk_kart.py:562:9     - Unknown word (savescene)   -- savescene_callback(os.path.dirname
Tools/stk_kart.py:566:8     - Unknown word (idname)      -- bl_idname = ("screen.stk_kart
Tools/stk_kart.py:575:8     - Unknown word (idname)      -- bl_idname = ("screen.stk_kart
Tools/stk_kart.py:585:16    - Unknown word (Exporter)    -- class STK_Kart_Exporter_Panel(bpy.types.Panel
Tools/stk_kart.py:586:22    - Unknown word (Exporter)    -- bl_label = "Kart Exporter"
Tools/stk_kart.py:627:78    - Unknown word (COPYDOWN)    -- text="Copy Log", icon='COPYDOWN')
Tools/stk_kart.py:633:54    - Unknown word (idname)      -- Kart_Export_Operator.bl_idname, text="STK Kart")
Tools/stk_kart.py:65:18     - Unknown word (logic)        -- # Returns a game logic property
Tools/stk_kart.py:65:3      - Unknown word (Returns)      -- # Returns a game logic property
Tools/stk_kart.py:73:3      - Unknown word (Returns)      -- # Returns the version of this
Tools/stk_kart.py:7:12      - Unknown word (Kart)       -- Name: 'STK Kart Exporter (.irrkart)
Tools/stk_kart.py:7:17      - Unknown word (Exporter)   -- Name: 'STK Kart Exporter (.irrkart)...'
Tools/stk_kart.py:7:28      - Unknown word (irrkart)    -- STK Kart Exporter (.irrkart)...'
Tools/stk_kart.py:81:14     - Unknown word (emitter)      -- # Save nitro emitter
Tools/stk_kart.py:81:8      - Unknown word (nitro)        -- # Save nitro emitter
Tools/stk_kart.py:82:14     - Unknown word (Emitter)      -- def saveNitroEmitter(f, lNitroEmitter, path
Tools/stk_kart.py:82:26     - Unknown word (Nitro)        -- saveNitroEmitter(f, lNitroEmitter, path):
Tools/stk_kart.py:82:31     - Unknown word (Emitter)      -- saveNitroEmitter(f, lNitroEmitter, path):
Tools/stk_kart.py:82:9      - Unknown word (Nitro)        -- def saveNitroEmitter(f, lNitroEmitter
Tools/stk_kart.py:83:13     - Unknown word (Nitro)        -- if len(lNitroEmitter) != 2:
Tools/stk_kart.py:83:18     - Unknown word (Emitter)      -- if len(lNitroEmitter) != 2:
Tools/stk_kart.py:84:35     - Unknown word (nitro)        -- warning("Warning - %d nitro emitter specified. Only
Tools/stk_kart.py:84:41     - Unknown word (emitter)      -- "Warning - %d nitro emitter specified. Only 2 are
Tools/stk_kart.py:84:87     - Unknown word (Nitro)        -- are allowed" % len(lNitroEmitter))
Tools/stk_kart.py:84:92     - Unknown word (Emitter)      -- allowed" % len(lNitroEmitter))
Tools/stk_kart.py:87:17     - Unknown word (nitro)        -- f.write(' <nitro-emitter>\n')
Tools/stk_kart.py:87:23     - Unknown word (emitter)      -- f.write(' <nitro-emitter>\n')
Tools/stk_kart.py:88:19     - Unknown word (nitro)        -- f.write(' <nitro-emitter-a position
Tools/stk_kart.py:88:25     - Unknown word (emitter)      -- f.write(' <nitro-emitter-a position = "%f %f
Tools/stk_kart.py:89:21     - Unknown word (Nitro)        -- % (lNitroEmitter[0].location.x
Tools/stk_kart.py:89:26     - Unknown word (Emitter)      -- % (lNitroEmitter[0].location.x, lNitroEmitter
Tools/stk_kart.py:8:1       - Unknown word (Blender)    -- Blender: 259
Tools/stk_kart.py:90:19     - Unknown word (nitro)        -- f.write(' <nitro-emitter-b position
Tools/stk_kart.py:90:25     - Unknown word (emitter)      -- f.write(' <nitro-emitter-b position = "%f %f
Tools/stk_kart.py:96:24     - Unknown word (Headlights)   -- def saveHeadlights(f, lHeadlights, path, straight_frame
Tools/stk_kart.py:96:42     - Unknown word (straight)     -- lHeadlights, path, straight_frame):
Tools/stk_kart.py:96:9      - Unknown word (Headlights)   -- def saveHeadlights(f, lHeadlights, path
Tools/stk_kart.py:97:13     - Unknown word (Headlights)   -- if len(lHeadlights) == 0:
Tools/stk_material_export.py:100:13    - Unknown word (shader)       -- 'shader' : {
Tools/stk_material_export.py:101:13    - Unknown word (splatting)    -- 'splatting_texture_1' : {'default
Tools/stk_material_export.py:101:23    - Unknown word (texture)      -- 'splatting_texture_1' : {'default':
Tools/stk_material_export.py:101:66    - Unknown word (shader)       -- default': "", 'parent': ('shader','splatting'), 'type
Tools/stk_material_export.py:101:75    - Unknown word (splatting)    -- parent': ('shader','splatting'), 'type': 'string'
Tools/stk_material_export.py:102:13    - Unknown word (splatting)    -- 'splatting_texture_2' : {'default
Tools/stk_material_export.py:102:23    - Unknown word (texture)      -- 'splatting_texture_2' : {'default':
Tools/stk_material_export.py:102:66    - Unknown word (shader)       -- default': "", 'parent': ('shader','splatting'), 'type
Tools/stk_material_export.py:102:75    - Unknown word (splatting)    -- parent': ('shader','splatting'), 'type': 'string'
Tools/stk_material_export.py:103:13    - Unknown word (splatting)    -- 'splatting_texture_3' : {'default
Tools/stk_material_export.py:103:23    - Unknown word (texture)      -- 'splatting_texture_3' : {'default':
Tools/stk_material_export.py:103:66    - Unknown word (shader)       -- default': "", 'parent': ('shader','splatting'), 'type
Tools/stk_material_export.py:104:23    - Unknown word (texture)      -- 'splatting_texture_4' : {'default':
Tools/stk_material_export.py:106:13    - Unknown word (gloss)        -- 'gloss_map' :
Tools/stk_material_export.py:107:13    - Unknown word (clampu)       -- 'clampu' : {
Tools/stk_material_export.py:108:13    - Unknown word (clampv)       -- 'clampv' : {
Tools/stk_material_export.py:109:13    - Unknown word (grass)        -- 'grass_speed' :
Tools/stk_material_export.py:109:76    - Unknown word (grass)        -- parent': ('shader','grass'), 'type': 'number'
Tools/stk_material_export.py:10:3      - Unknown word (bpydoc)       -- __bpydoc__ = """\
Tools/stk_material_export.py:110:13    - Unknown word (grass)        -- 'grass_amplitude' :
Tools/stk_material_export.py:110:19    - Unknown word (amplitude)    -- 'grass_amplitude' : {'default'
Tools/stk_material_export.py:110:77    - Unknown word (grass)        -- parent': ('shader','grass'), 'type': 'number'
Tools/stk_material_export.py:113:15    - Unknown word (props)        -- other_mat_props = {
Tools/stk_material_export.py:115:13    - Unknown word (collision)    -- 'collision_detect' : {'default
Tools/stk_material_export.py:116:13    - Unknown word (collision)    -- 'collision_particles' : {'default
Tools/stk_material_export.py:116:23    - Unknown word (particles)    -- 'collision_particles' : {'default': ""
Tools/stk_material_export.py:116:65    - Unknown word (collision)    -- default': "", 'parent': 'collision_detect', 'type': 'string
Tools/stk_material_export.py:117:13    - Unknown word (collision)    -- 'collision_reaction' : {'default
Tools/stk_material_export.py:117:23    - Unknown word (reaction)     -- 'collision_reaction' : {'default': "none
Tools/stk_material_export.py:117:69    - Unknown word (collision)    -- "none", 'parent': 'collision_detect', 'type': 'string
Tools/stk_material_export.py:118:13    - Unknown word (falling)      -- 'falling_effect' : {'default
Tools/stk_material_export.py:121:20    - Unknown word (axis)         -- 'mirror_axis' : {'default
Tools/stk_material_export.py:124:18    - Unknown word (adhesion)     -- 'high_adhesion' : {'default
Tools/stk_material_export.py:126:13    - Unknown word (slowdown)     -- 'slowdown_time' : {'default
Tools/stk_material_export.py:126:70    - Unknown word (slowdown)     -- 1.0, 'parent': 'use_slowdown', 'type': 'number'}
Tools/stk_material_export.py:127:70    - Unknown word (slowdown)     -- 1.0, 'parent': 'use_slowdown', 'type': 'number'}
Tools/stk_material_export.py:128:19    - Unknown word (splash)       -- 'water_splash' : {'default
Tools/stk_material_export.py:129:13    - Unknown word (colorizable)  -- 'colorizable' : {'default
Tools/stk_material_export.py:130:13    - Unknown word (colorization) -- 'colorization_factor' : {'default
Tools/stk_material_export.py:130:66    - Unknown word (colorizable)  -- default': 0.0, 'parent': 'colorizable', 'type': 'number'}
Tools/stk_material_export.py:131:13    - Unknown word (colorization) -- 'colorization_mask' : {'default
Tools/stk_material_export.py:131:65    - Unknown word (colorizable)  -- default': "", 'parent': 'colorizable', 'type': 'string'}
Tools/stk_material_export.py:132:65    - Unknown word (colorizable)  -- default': "", 'parent': 'colorizable', 'type': 'string'}
Tools/stk_material_export.py:135:19    - Unknown word (bsys)         -- #start_time = bsys.time()
Tools/stk_material_export.py:140:19    - Unknown word (Generated)    -- f.write("<!-- Generated with script from SVN
Tools/stk_material_export.py:143:5     - Unknown word (blendfile)    -- blendfile_dir = os.path.dirname
Tools/stk_material_export.py:144:14    - Unknown word (limage)       -- for i in limage:
Tools/stk_material_export.py:14:22     - Unknown word (Kart)         -- "name": "SuperTuxKart Material Exporter",
Tools/stk_material_export.py:14:36     - Unknown word (Exporter)     -- SuperTuxKart Material Exporter",
Tools/stk_material_export.py:150:64    - Unknown word (blend)        -- same directory as the blend file
Tools/stk_material_export.py:152:53    - Unknown word (blendfile)    -- subdir(abs_texture_path, blendfile_dir):
Tools/stk_material_export.py:158:10    - Unknown word (Particle)     -- sParticle = ""
Tools/stk_material_export.py:159:10    - Unknown word (Zipper)       -- sZipper = ""
Tools/stk_material_export.py:15:61     - Unknown word (Kart)         -- properties to the SuperTuxKart track format",
Tools/stk_material_export.py:15:66     - Unknown word (track)        -- to the SuperTuxKart track format",
Tools/stk_material_export.py:160:12    - Unknown word (Soundeffect)  -- hasSoundeffect = (convertTextToYN(getIdPrope
Tools/stk_material_export.py:161:12    - Unknown word (Particle)     -- hasParticle = (convertTextToYN(getIdPrope
Tools/stk_material_export.py:161:58    - Unknown word (particle)     -- ertTextToYN(getIdProperty(i, "particle", "no")) == "Y")
Tools/stk_material_export.py:162:12    - Unknown word (Zipper)       -- hasZipper = (convertTextToYN(getIdPrope
Tools/stk_material_export.py:162:56    - Unknown word (zipper)       -- ertTextToYN(getIdProperty(i, "zipper", "no")) == "Y")
Tools/stk_material_export.py:164:52    - Unknown word (that)         -- list of defaults so that it can be modified.
Tools/stk_material_export.py:16:16     - Unknown word (Joerg)        -- "author": "Joerg Henrichs, Marianne Gagnon
Tools/stk_material_export.py:16:22     - Unknown word (Henrichs)     -- "author": "Joerg Henrichs, Marianne Gagnon",
Tools/stk_material_export.py:16:32     - Unknown word (Marianne)     -- author": "Joerg Henrichs, Marianne Gagnon",
Tools/stk_material_export.py:16:41     - Unknown word (Gagnon)       -- Joerg Henrichs, Marianne Gagnon",
Tools/stk_material_export.py:174:49    - Unknown word (props)        -- materials(other_mat_props, sp_mat_props)
Tools/stk_material_export.py:174:63    - Unknown word (props)        -- other_mat_props, sp_mat_props)
Tools/stk_material_export.py:181:14    - Unknown word (Correct)      -- #Correct for all the ways booleans
Tools/stk_material_export.py:181:34    - Unknown word (ways)         -- Correct for all the ways booleans can be represented
Tools/stk_material_export.py:181:55    - Unknown word (represented)  -- ways booleans can be represented (true/false;yes/no;zero
Tools/stk_material_export.py:185:14    - Unknown word (These)        -- #These items pertain to the
Tools/stk_material_export.py:185:26    - Unknown word (pertain)      -- #These items pertain to the soundeffects
Tools/stk_material_export.py:185:41    - Unknown word (soundeffects) -- items pertain to the soundeffects (starting with sfx_
Tools/stk_material_export.py:185:55    - Unknown word (starting)     -- to the soundeffects (starting with sfx_)
Tools/stk_material_export.py:187:17    - Unknown word (stripped)     -- strippedName = AProperty.strip
Tools/stk_material_export.py:189:104   - Unknown word (pitch)        -- , 'min_pitch', 'max_pitch', 'positional', 'volume
Tools/stk_material_export.py:189:20    - Unknown word (stripped)     -- if strippedName in ['filename',
Tools/stk_material_export.py:189:50    - Unknown word (rolloff)      -- strippedName in ['filename', 'rolloff', 'min_speed', 'max
Tools/stk_material_export.py:189:91    - Unknown word (pitch)        -- , 'max_speed', 'min_pitch', 'max_pitch', 'positional
Tools/stk_material_export.py:18:6      - Unknown word (blender)      -- "blender": (2, 5, 9),
Tools/stk_material_export.py:191:55    - Unknown word (stripped)     -- s %s=\"%.2f\""%(sSFX,strippedName,currentValue)
Tools/stk_material_export.py:193:53    - Unknown word (stripped)     -- %s %s=\"%s\""%(sSFX,strippedName,currentValue)
Tools/stk_material_export.py:194:56    - Unknown word (PARTICLE)     -- upper().startswith("PARTICLE_"):
Tools/stk_material_export.py:195:18    - Unknown word (These)        -- #These items pertain to the
Tools/stk_material_export.py:195:30    - Unknown word (pertain)      -- #These items pertain to the particles (starting
Tools/stk_material_export.py:195:45    - Unknown word (particles)    -- items pertain to the particles (starting with particle
Tools/stk_material_export.py:195:56    - Unknown word (starting)     -- pertain to the particles (starting with particle_)
Tools/stk_material_export.py:195:70    - Unknown word (particle)     -- particles (starting with particle_)
Tools/stk_material_export.py:196:17    - Unknown word (stripped)     -- strippedName = AProperty.strip
Tools/stk_material_export.py:196:55    - Unknown word (PARTICLE)     -- AProperty.strip()[len("PARTICLE_"):]
Tools/stk_material_export.py:197:18    - Unknown word (Particle)     -- sParticle = "%s %s=\"%s\""%(sParticle
Tools/stk_material_export.py:197:46    - Unknown word (Particle)     -- sParticle = "%s %s=\"%s\""%(sParticle,strippedName,currentValue
Tools/stk_material_export.py:198:56    - Unknown word (ZIPPER)       -- upper().startswith("ZIPPER_"):
Tools/stk_material_export.py:199:18    - Unknown word (These)        -- #These items pertain to the
Tools/stk_material_export.py:199:30    - Unknown word (pertain)      -- #These items pertain to the zippers (starting
Tools/stk_material_export.py:199:45    - Unknown word (zippers)      -- items pertain to the zippers (starting with zipper
Tools/stk_material_export.py:199:54    - Unknown word (starting)     -- pertain to the zippers (starting with zipper_)
Tools/stk_material_export.py:199:68    - Unknown word (zipper)       -- zippers (starting with zipper_)
Tools/stk_material_export.py:200:55    - Unknown word (ZIPPER)       -- AProperty.strip()[len("ZIPPER_"):]
Tools/stk_material_export.py:202:18    - Unknown word (Zipper)       -- sZipper = "%s %s=\"%s\""%(sZipper
Tools/stk_material_export.py:202:44    - Unknown word (Zipper)       -- sZipper = "%s %s=\"%s\""%(sZipper,strippedName.replace
Tools/stk_material_export.py:204:18    - Unknown word (These)        -- #These items are standard items
Tools/stk_material_export.py:209:58    - Unknown word (another)      -- property is conditional on another
Tools/stk_material_export.py:212:30    - Unknown word (Passed)       -- conditionPassed = False
Tools/stk_material_export.py:214:34    - Unknown word (Passed)       -- conditionPassed = True
Tools/stk_material_export.py:217:38    - Unknown word (Passed)       -- conditionPassed = True
Tools/stk_material_export.py:219:34    - Unknown word (Passed)       -- conditionPassed = True
Tools/stk_material_export.py:222:78    - Unknown word (Passed)       -- default'] and conditionPassed:
Tools/stk_material_export.py:227:34    - Unknown word (blender)      -- # In blender, proeprties use '_'
Tools/stk_material_export.py:227:43    - Unknown word (proeprties)   -- # In blender, proeprties use '_', but STK still
Tools/stk_material_export.py:227:77    - Unknown word (expects)      -- use '_', but STK still expects '-'
Tools/stk_material_export.py:230:34    - Unknown word (blender)      -- # In blender, proeprties use '_'
Tools/stk_material_export.py:230:43    - Unknown word (proeprties)   -- # In blender, proeprties use '_', but STK still
Tools/stk_material_export.py:230:77    - Unknown word (expects)      -- use '_', but STK still expects '-'
Tools/stk_material_export.py:234:25    - Unknown word (Soundeffect)  -- if sImage or hasSoundeffect or hasParticle or hasZipper
Tools/stk_material_export.py:234:43    - Unknown word (Particle)     -- hasSoundeffect or hasParticle or hasZipper:
Tools/stk_material_export.py:234:58    - Unknown word (Zipper)       -- or hasParticle or hasZipper:
Tools/stk_material_export.py:238:19    - Unknown word (Soundeffect)  -- if hasSoundeffect:
Tools/stk_material_export.py:241:35    - Unknown word (particles)    -- sImage="%s>\n <particles%s/" % (sImage,sParticle
Tools/stk_material_export.py:243:35    - Unknown word (zipper)       -- sImage="%s>\n <zipper%s/" % (sImage,sZipper
Tools/stk_material_export.py:244:23    - Unknown word (Soundeffect)  -- if not hasSoundeffect and not hasParticle
Tools/stk_material_export.py:254:12    - Unknown word (bsys)         -- #print bsys.time()-start_time,"seconds
Tools/stk_material_export.py:258:39    - Unknown word (exporter)     -- screen.stk_material_exporter")
Tools/stk_material_export.py:258:8     - Unknown word (idname)       -- bl_idname = ("screen.stk_material
Tools/stk_material_export.py:2:21      - Unknown word (Exporter)   -- Name: 'STK Material Exporter...'
Tools/stk_material_export.py:39:3      - Unknown word (Gets)         -- # Gets an id property of an
Tools/stk_material_export.py:39:37     - Unknown word (returning)    -- property of an object, returning the default if the id
Tools/stk_material_export.py:3:1       - Unknown word (Blender)    -- Blender: 259
Tools/stk_material_export.py:56:17     - Unknown word (ways)         -- # Write several ways of writing true/false
Tools/stk_material_export.py:5:28      - Unknown word (Kart)       -- Tooltip: 'Export a SuperTuxKart track scene'
Tools/stk_material_export.py:5:33      - Unknown word (track)      -- Export a SuperTuxKart track scene'
Tools/stk_material_export.py:5:39      - Unknown word (scene)      -- a SuperTuxKart track scene'
Tools/stk_material_export.py:69:3      - Unknown word (Writes)       -- # Writes the materials files
Tools/stk_material_export.py:69:50     - Unknown word (texture)      -- which includes all texture definitions
Tools/stk_material_export.py:70:14     - Unknown word (Blenders)     -- # (remember: Blenders "image" objects are
Tools/stk_material_export.py:70:4      - Unknown word (remember)     -- # (remember: Blenders "image" objects
Tools/stk_material_export.py:71:3      - Unknown word (Please)       -- # Please use the STKProperty
Tools/stk_material_export.py:74:30     - Unknown word (blender)      -- Work around the bug in blender where textures keep
Tools/stk_material_export.py:74:44     - Unknown word (textures)     -- bug in blender where textures keep disappearing, by
Tools/stk_material_export.py:74:58     - Unknown word (disappearing) -- where textures keep disappearing, by forcefully pinning
Tools/stk_material_export.py:74:75     - Unknown word (forcefully)   -- keep disappearing, by forcefully pinning all textures
Tools/stk_material_export.py:74:86     - Unknown word (pinning)      -- disappearing, by forcefully pinning all textures.
Tools/stk_material_export.py:74:98     - Unknown word (textures)     -- forcefully pinning all textures.
Tools/stk_material_export.py:79:5      - Unknown word (limage)       -- limage = bpy.data.images
Tools/stk_material_export.py:7:16      - Unknown word (Joerg)      -- __author__ = ["Joerg Henrichs (hiker), Marianne
Tools/stk_material_export.py:7:22      - Unknown word (Henrichs)   -- _author__ = ["Joerg Henrichs (hiker), Marianne Gagnon
Tools/stk_material_export.py:7:32      - Unknown word (hiker)      -- = ["Joerg Henrichs (hiker), Marianne Gagnon (Auria
Tools/stk_material_export.py:7:40      - Unknown word (Marianne)   -- Joerg Henrichs (hiker), Marianne Gagnon (Auria)"]
Tools/stk_material_export.py:7:49      - Unknown word (Gagnon)     -- Henrichs (hiker), Marianne Gagnon (Auria)"]
Tools/stk_material_export.py:7:57      - Unknown word (Auria)      -- hiker), Marianne Gagnon (Auria)"]
Tools/stk_material_export.py:81:5      - Unknown word (materfound)   -- materfound = False
Tools/stk_material_export.py:82:14     - Unknown word (limage)       -- for i in limage:
Tools/stk_material_export.py:84:13     - Unknown word (materfound)   -- materfound = True
Tools/stk_material_export.py:86:12     - Unknown word (materfound)   -- if not materfound:
Tools/stk_material_export.py:8:13      - Unknown word (supertuxkart) -- __url__ = ["supertuxkart.sourceforge.net"]
Tools/stk_material_export.py:8:26      - Unknown word (sourceforge)  -- url__ = ["supertuxkart.sourceforge.net"]
Tools/stk_material_export.py:90:12     - Unknown word (props)        -- sp_mat_props = {
Tools/stk_material_export.py:91:13     - Unknown word (shader)       -- 'shader_name' :
Tools/stk_material_export.py:99:13     - Unknown word (props)        -- old_mat_props = {
Tools/stk_panel.py:1001:34   - Unknown word (DEHLT)          -- icon = 'CHECKBOX_DEHLT'
Tools/stk_panel.py:1008:129  - Unknown word (emboss)         -- ", icon=icon, emboss=False)
Tools/stk_panel.py:1008:59   - Unknown word (tglbool)        -- generateOpName("screen.stk_tglbool_", curr.fullid, curr
Tools/stk_panel.py:1014:34   - Unknown word (recursively)    -- self.recursivelyAddProperties(curr.subproperti
Tools/stk_panel.py:1016:34   - Unknown word (recursively)    -- self.recursivelyAddProperties(curr.subproperti
Tools/stk_panel.py:102:4     - Unknown word (props)        -- #! props a list of properties
Tools/stk_panel.py:1034:42   - Unknown word (DEHLT)          -- icon = 'CHECKBOX_DEHLT'
Tools/stk_panel.py:1062:26   - Unknown word (recursively)    -- self.recursivelyAddProperties(curr.values
Tools/stk_panel.py:1070:110  - Unknown word (TRIA)           -- id), text="", icon='TRIA_DOWN')
Tools/stk_panel.py:1077:52   - Unknown word (Blender)        -- int or float property (Blender chooses the correct
Tools/stk_panel.py:1077:60   - Unknown word (chooses)        -- float property (Blender chooses the correct widget from
Tools/stk_panel.py:1077:72   - Unknown word (correct)        -- Blender chooses the correct widget from the type
Tools/stk_panel.py:1080:71   - Unknown word (slider)         -- id + '"]', text="", slider=True)
Tools/stk_panel.py:1088:31   - Unknown word (TRACK)          -- label = STK_PER_OBJECT_TRACK_PROPERTIES[0]
Tools/stk_panel.py:1097:12   - Unknown word (track)          -- is_track = ("is_stk_track" in
Tools/stk_panel.py:1114:44   - Unknown word (TRACK)          -- curr in STK_PER_OBJECT_TRACK_PROPERTIES[1]:
Tools/stk_panel.py:1120:44   - Unknown word (KART)           -- curr in STK_PER_OBJECT_KART_PROPERTIES[1]:
Tools/stk_panel.py:1126:19   - Unknown word (Scene)          -- class SuperTuxKartScenePanel(bpy.types.Panel
Tools/stk_panel.py:1127:22   - Unknown word (PROPS)          -- bl_label = SCENE_PROPS[0]
Tools/stk_panel.py:1139:31   - Unknown word (PROPS)          -- for curr in SCENE_PROPS[1]:
Tools/stk_panel.py:113:38    - Unknown word (Propery)      -- isinstance(props[p], StkProperyGroup):
Tools/stk_panel.py:114:47    - Unknown word (subproperties) -- teProperties(object, props[p].subproperties)
Tools/stk_panel.py:1155:21   - Unknown word (texture)        -- bpy.ops.texture.new()
Tools/stk_panel.py:1156:22   - Unknown word (textures)       -- bpy.data.textures[-1].name = "STKPreviewTexture
Tools/stk_panel.py:1156:53   - Unknown word (Texture)        -- ].name = "STKPreviewTexture"
Tools/stk_panel.py:1157:22   - Unknown word (textures)       -- bpy.data.textures["STKPreviewTexture"
Tools/stk_panel.py:1157:42   - Unknown word (Texture)        -- textures["STKPreviewTexture"].type = 'IMAGE'
Tools/stk_panel.py:1158:22   - Unknown word (textures)       -- bpy.data.textures["STKPreviewTexture"
Tools/stk_panel.py:1158:42   - Unknown word (Texture)        -- textures["STKPreviewTexture"].use_preview_alpha
Tools/stk_panel.py:1160:30   - Unknown word (caught)         -- print("Exception caught in createPreviewTexture
Tools/stk_panel.py:1160:53   - Unknown word (Texture)        -- caught in createPreviewTexture")
Tools/stk_panel.py:1170:58   - Unknown word (BLENDER)        -- export", "Export", icon='BLENDER')
Tools/stk_panel.py:1175:12   - Unknown word (Picker)         -- class ImagePickerMenu(bpy.types.Menu)
Tools/stk_panel.py:1188:9    - Unknown word (blend)          -- blend_path = os.path.abspath
Tools/stk_panel.py:1195:101  - Unknown word (blend)          -- filepath)).startswith(blend_path)): continue
Tools/stk_panel.py:1202:31   - Unknown word (Picker)         -- register_class(ImagePickerMenu)
Tools/stk_panel.py:1214:23   - Unknown word (Texture)        -- if "STKPreviewTexture" not in bpy.data.textures
Tools/stk_panel.py:1214:48   - Unknown word (textures)       -- eviewTexture" not in bpy.data.textures:
Tools/stk_panel.py:1217:44   - Unknown word (textures)       -- TKPreviewTexture" in bpy.data.textures:
Tools/stk_panel.py:1223:53   - Unknown word (texture)        -- can't create preview texture!")
Tools/stk_panel.py:124:65    - Unknown word (subproperties) -- props[p].values[v].subproperties)
Tools/stk_panel.py:1254:31   - Unknown word (Sorry)          -- layout.label("Sorry, no image preview available
Tools/stk_panel.py:1256:27   - Unknown word (Sorry)          -- layout.label("Sorry, no image preview available
Tools/stk_panel.py:1277:15   - Unknown word (Lightmap)       -- #class STK_AddLightmap(bpy.types.Operator)
Tools/stk_panel.py:127:55    - Unknown word (subproperties) -- teProperties(object, props[p].subproperties)
Tools/stk_panel.py:1280:30   - Unknown word (texture)        -- bpy.ops.mesh.uv_texture_add()
Tools/stk_panel.py:1283:30   - Unknown word (texture)       -- bpy.ops.mesh.uv_texture_add()
Tools/stk_panel.py:1284:58   - Unknown word (Lightmap)      -- textures[-1].name = 'Lightmap'
Tools/stk_panel.py:1286:34   - Unknown word (Lightmap)      -- register_class(STK_AddLightmap)
Tools/stk_panel.py:1296:75   - Unknown word (banana)        -- name="values", default='banana',
Tools/stk_panel.py:1297:53   - Unknown word (banana)        -- items=[('banana', 'Banana', 'Banana
Tools/stk_panel.py:1297:63   - Unknown word (Banana)        -- items=[('banana', 'Banana', 'Banana'),
Tools/stk_panel.py:1297:73   - Unknown word (Banana)        -- banana', 'Banana', 'Banana'),
Tools/stk_panel.py:1298:67   - Unknown word (Gift)          -- ('item', 'Item (Gift Box)', 'Item (Gift Box
Tools/stk_panel.py:1298:86   - Unknown word (Gift)          -- (Gift Box)', 'Item (Gift Box)'),
Tools/stk_panel.py:1300:53   - Unknown word (nitro)         -- ('nitro_big', 'Nitro (Big)'
Tools/stk_panel.py:1300:66   - Unknown word (Nitro)         -- ('nitro_big', 'Nitro (Big)', 'Nitro (big
Tools/stk_panel.py:1300:81   - Unknown word (Nitro)         -- big', 'Nitro (Big)', 'Nitro (big)'),
Tools/stk_panel.py:1301:53   - Unknown word (nitro)         -- ('nitro_small', 'Nitro (Small
Tools/stk_panel.py:1301:68   - Unknown word (Nitro)         -- ('nitro_small', 'Nitro (Small)', 'Nitro (Small
Tools/stk_panel.py:1301:85   - Unknown word (Nitro)         -- , 'Nitro (Small)', 'Nitro (Small)'),
Tools/stk_panel.py:1303:53   - Unknown word (blue)          -- ('blue_flag', 'Blue flag',
Tools/stk_panel.py:1303:66   - Unknown word (Blue)          -- ('blue_flag', 'Blue flag', 'Blue flag')
Tools/stk_panel.py:1303:79   - Unknown word (Blue)          -- flag', 'Blue flag', 'Blue flag'),
Tools/stk_panel.py:1304:102  - Unknown word (Emitter)       -- Emitter', 'Particle Emitter'),
Tools/stk_panel.py:1304:53   - Unknown word (particle)      -- ('particle_emitter', 'Particle
Tools/stk_panel.py:1304:62   - Unknown word (emitter)       -- ('particle_emitter', 'Particle Emitter
Tools/stk_panel.py:1304:73   - Unknown word (Particle)      -- particle_emitter', 'Particle Emitter', 'Particle
Tools/stk_panel.py:1304:82   - Unknown word (Emitter)       -- emitter', 'Particle Emitter', 'Particle Emitter
Tools/stk_panel.py:1304:93   - Unknown word (Particle)      -- Particle Emitter', 'Particle Emitter'),
Tools/stk_panel.py:1305:57   - Unknown word (emitter)       -- ('sfx_emitter', 'Sound Emitter',
Tools/stk_panel.py:1305:68   - Unknown word (Sound)         -- ('sfx_emitter', 'Sound Emitter', 'Sound Emitter
Tools/stk_panel.py:1305:74   - Unknown word (Emitter)       -- sfx_emitter', 'Sound Emitter', 'Sound Emitter'),
Tools/stk_panel.py:1305:85   - Unknown word (Sound)         -- , 'Sound Emitter', 'Sound Emitter'),
Tools/stk_panel.py:1305:91   - Unknown word (Emitter)       -- Sound Emitter', 'Sound Emitter'),
Tools/stk_panel.py:1306:118  - Unknown word (battle)        -- Start position (for battle mode)')
Tools/stk_panel.py:1306:82   - Unknown word (battle)        -- Start position (for battle mode)', 'Start position
Tools/stk_panel.py:1311:38   - Unknown word (LAMP)          -- ops.object.add(type='LAMP', location=bpy.data
Tools/stk_panel.py:1311:63   - Unknown word (scenes)        -- , location=bpy.data.scenes[0].cursor_location)
Tools/stk_panel.py:1314:34   - Unknown word (LAMP)          -- if curr.type == 'LAMP' and curr.select:
Tools/stk_panel.py:1317:35   - Unknown word (sphere)        -- curr.data.use_sphere = True
Tools/stk_panel.py:1320:64   - Unknown word (scenes)        -- , location=bpy.data.scenes[0].cursor_location)
Tools/stk_panel.py:1329:41   - Unknown word (nitro)         -- elif self.value == 'nitro_big' or self.value
Tools/stk_panel.py:1329:70   - Unknown word (nitro)         -- big' or self.value == 'nitro_small' :
Tools/stk_panel.py:1330:49   - Unknown word (CONE)          -- curr.empty_draw_type = 'CONE'
Tools/stk_panel.py:1331:45   - Unknown word (emitter)       -- elif self.value == 'sfx_emitter':
Tools/stk_panel.py:1332:49   - Unknown word (SPHERE)        -- curr.empty_draw_type = 'SPHERE'
Tools/stk_panel.py:1345:19   - Unknown word (banana)        -- def menu_func_add_banana(self, context):
Tools/stk_panel.py:1354:19   - Unknown word (Supertuxkart)  -- name="Supertuxkart assets (data) folder
Tools/stk_panel.py:1359:45   - Unknown word (exporting)     -- Delete all old files when exporting a track in a folder
Tools/stk_panel.py:1365:103  - Unknown word (Please)        -- tracks', 'textures', etc. Please enter an absolute path
Tools/stk_panel.py:1365:68   - Unknown word (karts)         -- contains folders named 'karts', 'tracks', 'textures
Tools/stk_panel.py:1371:8    - Unknown word (stkpanel)      -- #class stkpanel_set_user_preferences
Tools/stk_panel.py:1372:26   - Unknown word (stkpanel)      -- bl_idname = "object.stkpanel_set_user_preferences
Tools/stk_panel.py:1378:16   - Unknown word (prefs)         -- # addon_prefs = user_preferences.addons
Tools/stk_panel.py:1381:25   - Unknown word (prefs)         -- (addon_prefs.filepath, addon_prefs
Tools/stk_panel.py:1381:47   - Unknown word (prefs)         -- prefs.filepath, addon_prefs.number, addon_prefs
Tools/stk_panel.py:1381:67   - Unknown word (prefs)         -- prefs.number, addon_prefs.boolean))
Tools/stk_panel.py:1389:48   - Unknown word (banana)        -- append(menu_func_add_banana)
Tools/stk_panel.py:1391:31   - Unknown word (stkpanel)      -- utils.register_class(stkpanel_set_user_preferences
Tools/stk_panel.py:164:43    - Unknown word (rops)          -- ui_dict["soft_min"] = rops[p].min
Tools/stk_panel.py:179:69    - Unknown word (subproperties) -- p].values[object[p]].subproperties)
Tools/stk_panel.py:182:51    - Unknown word (subproperties) -- teProperties(object, props[p].subproperties)
Tools/stk_panel.py:193:28    - Unknown word (fullid)        -- generateOpName(prefix, fullid, id):
Tools/stk_panel.py:194:21    - Unknown word (fullid)        -- if len(prefix + fullid + '_' + id) > 60:
Tools/stk_panel.py:195:36    - Unknown word (fullid)        -- prefix + simpleHash(fullid) + '_' + id
Tools/stk_panel.py:197:25    - Unknown word (fullid)        -- return prefix + fullid + '_' + id
Tools/stk_panel.py:19:10     - Unknown word (props)        -- from bpy.props import StringProperty
Tools/stk_panel.py:201:29    - Unknown word (directly)      -- you use this property directly (and not a subclass
Tools/stk_panel.py:201:49    - Unknown word (subclass)      -- directly (and not a subclass), you get a simple text
Tools/stk_panel.py:203:43    - Unknown word (fullid)        -- id, name, default, fullid, doc="(No documentation
Tools/stk_panel.py:212:51    - Unknown word (another)       -- type a reference to another object (or a property
Tools/stk_panel.py:213:7     - Unknown word (another)       -- #! of another object) with an optional
Tools/stk_panel.py:215:35    - Unknown word (blender)       -- the id of the blender id-property
Tools/stk_panel.py:219:30    - Unknown word (taking)        -- filter a lambda taking arguments "self" and
Tools/stk_panel.py:219:72    - Unknown word (that)          -- self" and "object", and that returns
Tools/stk_panel.py:219:77    - Unknown word (returns)       -- and "object", and that returns
Tools/stk_panel.py:220:49    - Unknown word (displayed)     -- parameter 'object' is to be displayed in the dropdown of this
Tools/stk_panel.py:222:49    - Unknown word (unconditionally) -- to append to the menu unconditionally (a list of tuples of
Tools/stk_panel.py:222:76    - Unknown word (tuples)          -- unconditionally (a list of tuples of
Tools/stk_panel.py:224:30    - Unknown word (taking)          -- identifier a lambda taking arguments "self" and
Tools/stk_panel.py:224:72    - Unknown word (that)            -- self" and "object", and that returns
Tools/stk_panel.py:224:77    - Unknown word (returns)         -- and "object", and that returns
Tools/stk_panel.py:225:49    - Unknown word (that)            -- value) of an object that should be put in this
Tools/stk_panel.py:227:30    - Unknown word (taking)          -- text a lambda taking arguments "self" and
Tools/stk_panel.py:227:72    - Unknown word (that)            -- self" and "object", and that returns
Tools/stk_panel.py:227:77    - Unknown word (returns)         -- and "object", and that returns
Tools/stk_panel.py:228:48    - Unknown word (apear)           -- user-visible string to apear in the dropdown for
Tools/stk_panel.py:22:9      - Unknown word (SCENE)        -- CONTEXT_SCENE = 1
Tools/stk_panel.py:243:16    - Unknown word (idname)          -- bl_idname = select_op_name
Tools/stk_panel.py:261:21    - Unknown word (Picker)          -- class ObjectPickerMenu(bpy.types.Menu)
Tools/stk_panel.py:268:35    - Unknown word (Kart)            -- bl_label = ("SuperTuxKart Object Picker Menu
Tools/stk_panel.py:268:47    - Unknown word (Picker)          -- SuperTuxKart Object Picker Menu (" + id + ")")
Tools/stk_panel.py:274:17    - Unknown word (seen)            -- seen_objs = {}
Tools/stk_panel.py:282:71    - Unknown word (seen)            -- and object_id not in seen_objs:
Tools/stk_panel.py:284:29    - Unknown word (seen)            -- seen_objs[object_id] = True
Tools/stk_panel.py:28:32     - Unknown word (SCENE)        -- contextLevel == CONTEXT_SCENE:
Tools/stk_panel.py:290:40    - Unknown word (Picker)          -- register_class(ObjectPickerMenu)
Tools/stk_panel.py:299:29    - Unknown word (that)            -- that are to be shown when
Tools/stk_panel.py:299:44    - Unknown word (shown)           -- that are to be shown when this enum item
Tools/stk_panel.py:29:24     - Unknown word (scene)        -- return context.scene
Tools/stk_panel.py:315:35    - Unknown word (blender)         -- the id of the blender id-property
Tools/stk_panel.py:317:33    - Unknown word (offered)         -- the choices offered by this enum, as a list
Tools/stk_panel.py:31:40     - Unknown word (scene)        -- selected_image' in context.scene:
Tools/stk_panel.py:326:24    - Unknown word (dictionnary)     -- #! @param values A dictionnary of type { 'value' :
Tools/stk_panel.py:32:38     - Unknown word (scene)        -- selected_image = context.scene['selected_image']
Tools/stk_panel.py:333:58    - Unknown word (stkmenu)         -- generateOpName("screen.stkmenu_set_", fullid, id)
Tools/stk_panel.py:337:20    - Unknown word (blender)         -- values_for_blender_unsorted = []
Tools/stk_panel.py:341:28    - Unknown word (blender)         -- values_for_blender_unsorted.append( (curr
Tools/stk_panel.py:347:48    - Unknown word (stkmenu)         -- generateOpName("screen.stkmenu_set_", fullid, id)
Tools/stk_panel.py:348:35    - Unknown word (Kart)            -- bl_label = ("SuperTuxKart set " + id)
Tools/stk_panel.py:374:35    - Unknown word (Kart)            -- bl_label = ("SuperTuxKart set " + id)
Tools/stk_panel.py:392:56    - Unknown word (them)            -- properties are needed, create them
Tools/stk_panel.py:39:8      - Unknown word (idname)       -- bl_idname = ("screen.stk_unset
Tools/stk_panel.py:3:22      - Unknown word (Kart)       -- "name": "SuperTuxKart Panel",
Tools/stk_panel.py:402:44    - Unknown word (gives)           -- be selected at once. gives a text property containing
Tools/stk_panel.py:402:66    - Unknown word (containing)      -- gives a text property containing
Tools/stk_panel.py:407:33    - Unknown word (offered)         -- the choices offered by this enum, as a list
Tools/stk_panel.py:413:24    - Unknown word (dictionnary)     -- #! @param values A dictionnary of type { 'value' :
Tools/stk_panel.py:467:32    - Unknown word (displays)        -- pseudo-property that only displays some text
Tools/stk_panel.py:47:18     - Unknown word (Props)        -- class STK_MissingProps_Object(bpy.types.Operator
Tools/stk_panel.py:482:35    - Unknown word (shown)           -- documentation shown to the user in a tooltip
Tools/stk_panel.py:48:38     - Unknown word (props)        -- "screen.stk_missing_props_" + str(CONTEXT_OBJECT
Tools/stk_panel.py:48:8      - Unknown word (idname)       -- bl_idname = ("screen.stk_missing
Tools/stk_panel.py:4:21      - Unknown word (Allows)     -- "description": "Allows editing object, scene
Tools/stk_panel.py:4:44      - Unknown word (scene)      -- Allows editing object, scene and material properties
Tools/stk_panel.py:4:86      - Unknown word (Kart)       -- properties for SuperTuxKart",
Tools/stk_panel.py:502:35    - Unknown word (shown)           -- documentation shown to the user in a tooltip
Tools/stk_panel.py:515:10    - Unknown word (Propery)         -- class StkProperyGroup(StkProperty):
Tools/stk_panel.py:519:18    - Unknown word (Propery)         -- super(StkProperyGroup, self).__init_
Tools/stk_panel.py:533:52    - Unknown word (tglbool)         -- generateOpName("screen.stk_tglbool_", fullid, id)
Tools/stk_panel.py:53:12     - Unknown word (track)        -- is_track = ("is_stk_track" in
Tools/stk_panel.py:53:29     - Unknown word (track)        -- is_track = ("is_stk_track" in context.scene and
Tools/stk_panel.py:53:47     - Unknown word (scene)        -- stk_track" in context.scene and context.scene["is
Tools/stk_panel.py:53:79     - Unknown word (track)        -- context.scene["is_stk_track"] == "true")
Tools/stk_panel.py:545:35    - Unknown word (scenes)          -- object = bpy.data.scenes[0]
Tools/stk_panel.py:55:12     - Unknown word (kart)         -- is_kart = ("is_stk_kart" in
Tools/stk_panel.py:55:28     - Unknown word (kart)         -- is_kart = ("is_stk_kart" in context.scene and
Tools/stk_panel.py:55:77     - Unknown word (kart)         -- context.scene["is_stk_kart"] == "true")
Tools/stk_panel.py:560:17    - Unknown word (propobject)      -- propobject = getObject(context
Tools/stk_panel.py:561:20    - Unknown word (propobject)      -- if propobject is None:
Tools/stk_panel.py:564:56    - Unknown word (them)            -- properties are needed, create them
Tools/stk_panel.py:566:38    - Unknown word (propobject)      -- createProperties(propobject, self.m_super_self.subpropert
Tools/stk_panel.py:573:24    - Unknown word (appears)         -- A boolean property (appears as a checkbox)
Tools/stk_panel.py:580:40    - Unknown word (shown)           -- that are to be shown when this checkbox is
Tools/stk_panel.py:582:25    - Unknown word (displayed)       -- displayed in a box
Tools/stk_panel.py:583:39    - Unknown word (shown)           -- documentation shown to the user in a tooltip
Tools/stk_panel.py:59:15     - Unknown word (kart)         -- if is_kart:
Tools/stk_panel.py:5:16      - Unknown word (Joerg)      -- "author": "Joerg Henrichs, Marianne Gagnon
Tools/stk_panel.py:5:22      - Unknown word (Henrichs)   -- "author": "Joerg Henrichs, Marianne Gagnon, Asciimonste
Tools/stk_panel.py:5:32      - Unknown word (Marianne)   -- author": "Joerg Henrichs, Marianne Gagnon, Asciimonster
Tools/stk_panel.py:5:41      - Unknown word (Gagnon)     -- Joerg Henrichs, Marianne Gagnon, Asciimonster",
Tools/stk_panel.py:5:49      - Unknown word (Asciimonster) -- Henrichs, Marianne Gagnon, Asciimonster",
Tools/stk_panel.py:606:52    - Unknown word (tglbool)         -- generateOpName("screen.stk_tglbool_", fullid, id)
Tools/stk_panel.py:61:40     - Unknown word (KART)         -- curr in STK_PER_OBJECT_KART_PROPERTIES[1]:
Tools/stk_panel.py:634:56    - Unknown word (them)            -- properties are needed, create them
Tools/stk_panel.py:64:17     - Unknown word (track)        -- elif is_track or is_node:
Tools/stk_panel.py:657:18    - Unknown word (picker)          -- #! Color picker operator (TODO: this
Tools/stk_panel.py:657:58    - Unknown word (mostly)          -- TODO: this operator is mostly for backwards compatibility
Tools/stk_panel.py:658:41    - Unknown word (blend)           -- blend files that come from
Tools/stk_panel.py:658:58    - Unknown word (come)            -- blend files that come from 2.4; blender 2
Tools/stk_panel.py:659:49    - Unknown word (could)           -- type we could use)
Tools/stk_panel.py:66:40     - Unknown word (TRACK)        -- curr in STK_PER_OBJECT_TRACK_PROPERTIES[1]:
Tools/stk_panel.py:682:17    - Unknown word (currcol)         -- currcol = [1.0, 1.0, 1.0]
Tools/stk_panel.py:689:21    - Unknown word (currcol)         -- currcol = list(map(eval, object
Tools/stk_panel.py:68:20     - Unknown word (creating)     -- print('creating', properties, 'on',
Tools/stk_panel.py:690:21    - Unknown word (currcol)         -- currcol[0] = currcol[0]/255
Tools/stk_panel.py:690:34    - Unknown word (currcol)         -- currcol[0] = currcol[0]/255.0
Tools/stk_panel.py:691:21    - Unknown word (currcol)         -- currcol[1] = currcol[1]/255
Tools/stk_panel.py:710:40    - Unknown word (picker)          -- row.template_color_picker(self, "temp_color",
Tools/stk_panel.py:710:73    - Unknown word (slider)          -- "temp_color", value_slider=True, cubic=False)
Tools/stk_panel.py:710:86    - Unknown word (cubic)           -- value_slider=True, cubic=False)
Tools/stk_panel.py:737:46    - Unknown word (idprefix)        -- valueNodes, contextLevel, idprefix):
Tools/stk_panel.py:73:18     - Unknown word (Props)        -- class STK_MissingProps_Scene(bpy.types.Operator
Tools/stk_panel.py:73:24     - Unknown word (Scene)        -- class STK_MissingProps_Scene(bpy.types.Operator)
Tools/stk_panel.py:747:30    - Unknown word (idprefix)        -- args["fullid"] = idprefix + '_' + node.getAttribute
Tools/stk_panel.py:749:73    - Unknown word (idprefix)        -- node, contextLevel, idprefix + '_' + node.getAttribute
Tools/stk_panel.py:74:38     - Unknown word (props)        -- "screen.stk_missing_props_" + str(CONTEXT_SCENE
Tools/stk_panel.py:74:60     - Unknown word (SCENE)        -- props_" + str(CONTEXT_SCENE))
Tools/stk_panel.py:74:8      - Unknown word (idname)       -- bl_idname = ("screen.stk_missing
Tools/stk_panel.py:760:41    - Unknown word (idprefix)        -- node, contextLevel, idprefix):
Tools/stk_panel.py:769:13    - Unknown word (defaultval)      -- defaultval = e.getAttribute("default
Tools/stk_panel.py:770:16    - Unknown word (defaultval)     -- if defaultval == "$user":
Tools/stk_panel.py:771:17    - Unknown word (defaultval)     -- defaultval = getpass.getuser()
Tools/stk_panel.py:774:74    - Unknown word (idprefix)       -- getAttribute("id"), fullid=idprefix+'_'+e.getAttribute(
Tools/stk_panel.py:775:79    - Unknown word (defaultval)     -- getAttribute("name"), default=defaultval,
Tools/stk_panel.py:779:79    - Unknown word (defaultval)     -- getAttribute("name"), default=defaultval))
Tools/stk_panel.py:7:6       - Unknown word (blender)      -- "blender": (2, 5, 9),
Tools/stk_panel.py:80:21     - Unknown word (SCENE)        -- for curr in SCENE_PROPS[1]:
Tools/stk_panel.py:80:27     - Unknown word (PROPS)        -- for curr in SCENE_PROPS[1]:
Tools/stk_panel.py:85:18     - Unknown word (Props)        -- class STK_MissingProps_Material(bpy.types.Operator
Tools/stk_panel.py:86:38     - Unknown word (props)        -- "screen.stk_missing_props_" + str(CONTEXT_MATERIAL
Tools/stk_panel.py:86:8      - Unknown word (idname)       -- bl_idname = ("screen.stk_missing
Tools/stk_panel.py:871:20    - Unknown word (Propery)        -- p = StkProperyGroup(**args)
Tools/stk_panel.py:938:1     - Unknown word (datapath)       -- datapath = None
Tools/stk_panel.py:940:53    - Unknown word (stkdata)        -- join(curr, "addons", "stkdata")):
Tools/stk_panel.py:941:50    - Unknown word (stkdata)        -- join(curr, "addons", "stkdata")
Tools/stk_panel.py:941:9     - Unknown word (datapath)       -- datapath = os.path.join(curr
Tools/stk_panel.py:944:4     - Unknown word (datapath)       -- if datapath is None:
Tools/stk_panel.py:945:23    - Unknown word (sure)           -- print("(STK) Make sure the stkdata folder is
Tools/stk_panel.py:945:32    - Unknown word (stkdata)        -- (STK) Make sure the stkdata folder is installed
Tools/stk_panel.py:947:40    - Unknown word (datapath)       -- Loading XML files from ", datapath)
Tools/stk_panel.py:949:34    - Unknown word (datapath)       -- path = os.path.join(datapath, "stk_panel_parameters
Tools/stk_panel.py:951:1     - Unknown word (SCENE)          -- SCENE_PROPS = []
Tools/stk_panel.py:951:7     - Unknown word (PROPS)          -- SCENE_PROPS = []
Tools/stk_panel.py:952:7     - Unknown word (PROPS)          -- SCENE_PROPS = getPropertiesFromXML
Tools/stk_panel.py:956:16    - Unknown word (TRACK)          -- STK_PER_OBJECT_TRACK_PROPERTIES = []
Tools/stk_panel.py:957:16    - Unknown word (TRACK)          -- STK_PER_OBJECT_TRACK_PROPERTIES = getPropertiesFro
Tools/stk_panel.py:959:1     - Unknown word (kart)           -- kart_params_path = os.path
Tools/stk_panel.py:961:16    - Unknown word (KART)           -- STK_PER_OBJECT_KART_PROPERTIES = []
Tools/stk_panel.py:962:16    - Unknown word (KART)           -- STK_PER_OBJECT_KART_PROPERTIES = getPropertiesFro
Tools/stk_panel.py:973:9     - Unknown word (recursively)    -- def recursivelyAddProperties(self, properties
Tools/stk_panel.py:980:36    - Unknown word (Propery)        -- isinstance(curr, StkProperyGroup):
Tools/stk_panel.py:983:25    - Unknown word (TRIA)           -- icon = 'TRIA_DOWN'
Tools/stk_panel.py:984:35    - Unknown word (scenes)         -- if id in bpy.data.scenes[0]:
Tools/stk_panel.py:985:38    - Unknown word (scenes)         -- state = bpy.data.scenes[0][id]
Tools/stk_panel.py:987:33    - Unknown word (TRIA)           -- icon = 'TRIA_DOWN'
Tools/stk_panel.py:989:33    - Unknown word (TRIA)           -- icon = 'TRIA_RIGHT'
Tools/stk_panel.py:991:118   - Unknown word (emboss)         -- curr.name, icon=icon, emboss=False)
Tools/stk_panel.py:991:57    - Unknown word (tglbool)        -- generateOpName("screen.stk_tglbool_", curr.fullid, curr
Tools/stk_panel.py:992:60    - Unknown word (maximize)       -- the operator to not maximize
Tools/stk_panel.py:996:30    - Unknown word (recursively)    -- self.recursivelyAddProperties(curr.subproperti
Tools/stk_panel.py:99:22     - Unknown word (creates)      -- ! Utility function, creates all properties in a
Tools/stk_panel.py:99:4      - Unknown word (Utility)      -- #! Utility function, creates all
Tools/stk_panel.py:99:50     - Unknown word (given)        -- all properties in a given object
Tools/stk_track.py:1001:22   - Unknown word (Drivelines)    -- if len(self.lDrivelines) == 0:
Tools/stk_track.py:1004:13   - Unknown word (Driveline)     -- mainDriveline = self.lDrivelines[
Tools/stk_track.py:1005:16   - Unknown word (Driveline)     -- if mainDriveline is None and getSceneProperty
Tools/stk_track.py:1008:45   - Unknown word (Cannons)       -- self.lChecks + self.lCannons # cannons at the end
Tools/stk_track.py:1008:55   - Unknown word (cannons)       -- lChecks + self.lCannons # cannons at the end, see #13
Tools/stk_track.py:100:22    - Unknown word (anim)         -- if anim_data and anim_data.action:
Tools/stk_track.py:100:8     - Unknown word (anim)         -- if anim_data and anim_data.action
Tools/stk_track.py:1015:21   - Unknown word (Cameras)       -- if self.lEndCameras:
Tools/stk_track.py:1016:29   - Unknown word (cameras)       -- f.write(" <end-cameras>\n")
Tools/stk_track.py:1017:31   - Unknown word (Cameras)       -- for i in self.lEndCameras:
Tools/stk_track.py:1018:54   - Unknown word (ahead)         -- getObjectProperty(i, "type", "ahead").lower()
Tools/stk_track.py:1019:27   - Unknown word (ahead)         -- if type=="ahead":
Tools/stk_track.py:101:15    - Unknown word (anim)         -- ipo = anim_data.action.fcurves
Tools/stk_track.py:101:32    - Unknown word (fcurves)      -- ipo = anim_data.action.fcurves
Tools/stk_track.py:1020:27   - Unknown word (ahead)         -- type="ahead_of_kart"
Tools/stk_track.py:1020:36   - Unknown word (kart)          -- type="ahead_of_kart"
Tools/stk_track.py:1022:34   - Unknown word (follow)        -- type="static_follow_kart"
Tools/stk_track.py:1022:41   - Unknown word (kart)          -- type="static_follow_kart"
Tools/stk_track.py:1024:43   - Unknown word (camera)        -- log_warning ("Unknown camera type %s - ignored."
Tools/stk_track.py:1028:31   - Unknown word (camera)        -- f.write(" <camera type=\"%s\" xyz=\"%s
Tools/stk_track.py:1030:30   - Unknown word (cameras)       -- f.write(" </end-cameras>\n")
Tools/stk_track.py:1034:7    - Unknown word (Finds)         -- # Finds the closest driveline
Tools/stk_track.py:1035:44   - Unknown word (between)       -- for which the distance between p and the drivelines
Tools/stk_track.py:1035:62   - Unknown word (drivelines)    -- distance between p and the drivelines start
Tools/stk_track.py:1036:28   - Unknown word (possible)      -- point is as small as possible. Returns the index of
Tools/stk_track.py:1036:38   - Unknown word (Returns)       -- as small as possible. Returns the index of the closest
Tools/stk_track.py:1036:71   - Unknown word (drivelines)    -- index of the closest drivelines.
Tools/stk_track.py:1050:32   - Unknown word (Remain)        -- the driveline from lRemain that is closest to any
Tools/stk_track.py:1050:69   - Unknown word (drivelines)    -- closest to any of the drivelines
Tools/stk_track.py:1052:49   - Unknown word (Remain)        -- tDrivelineToDrivelines(self, lRemain, lSorted):
Tools/stk_track.py:1053:9    - Unknown word (remain)        -- remain_index
Tools/stk_track.py:1054:38   - Unknown word (quad)          -- dist, sorted_index, min_quad) = lRemain[0].getDistanceToSt
Tools/stk_track.py:1054:47   - Unknown word (Remain)        -- index, min_quad) = lRemain[0].getDistanceToStart
Tools/stk_track.py:1055:32   - Unknown word (Remain)        -- for i in range(1, len(lRemain)):
Tools/stk_track.py:1056:27   - Unknown word (quad)          -- (dist, index, quad) = lRemain[i].getDistanceToSt
Tools/stk_track.py:1056:36   - Unknown word (Remain)        -- dist, index, quad) = lRemain[i].getDistanceToStart
Tools/stk_track.py:105:12    - Unknown word (Possible)     -- # ==== Possible values returned by blender
Tools/stk_track.py:105:40    - Unknown word (blender)      -- Possible values returned by blender ====
Tools/stk_track.py:1060:21   - Unknown word (quad)          -- min_quad = quad
Tools/stk_track.py:1061:17   - Unknown word (remain)        -- remain_index = i
Tools/stk_track.py:1062:17   - Unknown word (remain)        -- return (remain_index, sorted_index
Tools/stk_track.py:1065:22   - Unknown word (drivelines)    -- # Converts a new drivelines. New drivelines have
Tools/stk_track.py:1065:58   - Unknown word (following)     -- drivelines have the following structure:
Tools/stk_track.py:1065:68   - Unknown word (structure)     -- drivelines have the following structure:
Tools/stk_track.py:1065:7    - Unknown word (Converts)      -- # Converts a new drivelines. New
Tools/stk_track.py:1069:11   - Unknown word (starting)      -- # The starting quad of the drivelines
Tools/stk_track.py:1069:46   - Unknown word (marked)        -- of the drivelines is marked by two edges ending
Tools/stk_track.py:1069:60   - Unknown word (edges)         -- drivelines is marked by two edges ending in a
Tools/stk_track.py:106:7     - Unknown word (fcurves)      -- # fcurves[0].data_path
Tools/stk_track.py:1070:14   - Unknown word (otherwise)     -- # single otherwise unconnected vertex.
Tools/stk_track.py:1070:24   - Unknown word (unconnected)   -- # single otherwise unconnected vertex. These two vertices
Tools/stk_track.py:1070:44   - Unknown word (These)         -- unconnected vertex. These two vertices (and edges
Tools/stk_track.py:1070:68   - Unknown word (edges)         -- These two vertices (and edges) are
Tools/stk_track.py:1071:41   - Unknown word (they)          -- the actual driveline, they are only used to indicate
Tools/stk_track.py:1071:63   - Unknown word (indicate)      -- they are only used to indicate where
Tools/stk_track.py:1072:22   - Unknown word (starts)        -- # the drivelines starts. This data structure
Tools/stk_track.py:1072:40   - Unknown word (structure)     -- drivelines starts. This data structure is handled in the Driveline
Tools/stk_track.py:1072:53   - Unknown word (handled)       -- This data structure is handled in the Driveline
Tools/stk_track.py:1074:35   - Unknown word (sorts)         -- Additionally, this function sorts the end cameras according
Tools/stk_track.py:1074:49   - Unknown word (cameras)       -- function sorts the end cameras according to distance
Tools/stk_track.py:1074:57   - Unknown word (according)     -- sorts the end cameras according to distance
Tools/stk_track.py:1074:7    - Unknown word (Additionally)  -- # Additionally, this function sorts
Tools/stk_track.py:1075:48   - Unknown word (camera)        -- driveline - so the first end camera will be the camera
Tools/stk_track.py:1075:67   - Unknown word (camera)        -- end camera will be the camera
Tools/stk_track.py:1077:36   - Unknown word (Cameras)       -- convertDrivelinesAndSortEndCameras(self, lDrivelines, lSorted
Tools/stk_track.py:1079:54   - Unknown word (remaining)    -- drivelines, and all remaining drivelines
Tools/stk_track.py:107:29    - Unknown word (euler)        -- location, rotation_euler, scale
Tools/stk_track.py:1089:55   - Unknown word (starting)     -- drivelines in one list starting
Tools/stk_track.py:108:18    - Unknown word (extrapolation) -- # fcurves[0].extrapolation
Tools/stk_track.py:108:7     - Unknown word (fcurves)      -- # fcurves[0].extrapolation
Tools/stk_track.py:109:20    - Unknown word (LINEART)       -- # CONSTANT, LINEART
Tools/stk_track.py:10:13     - Unknown word (supertuxkart) -- __url__ = ["supertuxkart.sourceforge.net"]
Tools/stk_track.py:10:26     - Unknown word (sourceforge)  -- url__ = ["supertuxkart.sourceforge.net"]
Tools/stk_track.py:1101:48   - Unknown word (quads)        -- start quad index for all quads.
Tools/stk_track.py:1102:33   - Unknown word (Quad)         -- lSorted[-1].setStartQuadIndex(quad_index)
Tools/stk_track.py:1103:62   - Unknown word (Quads)        -- lSorted[-1].getNumberOfQuads()
Tools/stk_track.py:1107:37   - Unknown word (cameras)      -- Create a new list for all cameras, which also stores the
Tools/stk_track.py:1108:35   - Unknown word (camera)       -- quad index to which the camera is closest to, the distance
Tools/stk_track.py:1109:60   - Unknown word (important)    -- object. The order is important
Tools/stk_track.py:110:7     - Unknown word (fcurves)       -- # fcurves[0].keyframe_points[
Tools/stk_track.py:1110:11   - Unknown word (since)        -- # since this list is later sorted
Tools/stk_track.py:111:28    - Unknown word (BEZIER)        -- CONSTANT, LINEAR, BEZIER
Tools/stk_track.py:1128:36   - Unknown word (unnecessary)  -- After sorting remove the unnecessary distance and quad index
Tools/stk_track.py:1130:15   - Unknown word (Avoid)        -- # Avoid crash in case that some
Tools/stk_track.py:1130:21   - Unknown word (crash)        -- # Avoid crash in case that some problem
Tools/stk_track.py:1130:69   - Unknown word (happened)     -- problem with the camera happened,
Tools/stk_track.py:1131:34   - Unknown word (just)         -- and lEndCameras is just the blender camera,
Tools/stk_track.py:1135:11   - Unknown word (There)        -- # There were already two warning
Tools/stk_track.py:1135:17   - Unknown word (were)         -- # There were already two warning
Tools/stk_track.py:1135:51   - Unknown word (printed)      -- two warning messages printed at this stage, so just
Tools/stk_track.py:1135:77   - Unknown word (just)         -- printed at this stage, so just
Tools/stk_track.py:1136:26   - Unknown word (avoid)        -- # ignore this to avoid further crashes
Tools/stk_track.py:1136:32   - Unknown word (further)      -- ignore this to avoid further crashes
Tools/stk_track.py:1136:40   - Unknown word (crashes)      -- this to avoid further crashes
Tools/stk_track.py:113:20    - Unknown word (axis)          -- # Swap Y and Z axis
Tools/stk_track.py:1140:35   - Unknown word (needs)        -- last main driveline needs to be closed to the
Tools/stk_track.py:1145:23   - Unknown word (remaining)    -- # Now add the remaining drivelines one at a
Tools/stk_track.py:1145:68   - Unknown word (remaining)    -- at a time. From all remaining
Tools/stk_track.py:114:5     - Unknown word (axes)          -- axes = ['X', 'Z', 'Y']
Tools/stk_track.py:1150:14   - Unknown word (remain)       -- (remain_index, sorted_index
Tools/stk_track.py:1151:21   - Unknown word (remain)       -- lRemain[remain_index].setFromQuad(lSorted
Tools/stk_track.py:1151:42   - Unknown word (Quad)         -- remain_index].setFromQuad(lSorted[sorted_index
Tools/stk_track.py:1156:48   - Unknown word (quads)        -- start quad index for all quads.
Tools/stk_track.py:1157:33   - Unknown word (Quad)         -- lSorted[-1].setStartQuadIndex(quad_index)
Tools/stk_track.py:1158:62   - Unknown word (Quads)        -- lSorted[-1].getNumberOfQuads()
Tools/stk_track.py:1161:55   - Unknown word (quads)        -- with the list of all quads, and the track.graph
Tools/stk_track.py:1161:7    - Unknown word (Writes)       -- # Writes the track.quad file
Tools/stk_track.py:1162:12   - Unknown word (defining)     -- # file defining a graph node for each
Tools/stk_track.py:1162:71   - Unknown word (between)      -- and a basic connection between
Tools/stk_track.py:1164:14   - Unknown word (Quad)         -- def writeQuadAndGraph(self, sPath
Tools/stk_track.py:1165:23   - Unknown word (bsys)         -- #start_time = bsys.time()
Tools/stk_track.py:116:9     - Unknown word (curve)         -- for curve in ipo:
Tools/stk_track.py:1172:72   - Unknown word (exported)     -- driveline information exported!!!")
Tools/stk_track.py:1178:11   - Unknown word (That)         -- # That means that there were
Tools/stk_track.py:1178:16   - Unknown word (means)        -- # That means that there were some
Tools/stk_track.py:1178:27   - Unknown word (there)        -- # That means that there were some problems with
Tools/stk_track.py:1178:33   - Unknown word (were)         -- That means that there were some problems with the
Tools/stk_track.py:1179:14   - Unknown word (doesn't)      -- # it doesn't make any sense to continue
Tools/stk_track.py:1179:31   - Unknown word (sense)        -- it doesn't make any sense to continue anyway
Tools/stk_track.py:1179:49   - Unknown word (anyway)       -- any sense to continue anyway
Tools/stk_track.py:1183:45   - Unknown word (since)        -- first quad number (and since quads = graph nodes
Tools/stk_track.py:1183:51   - Unknown word (quads)        -- quad number (and since quads = graph nodes the node
Tools/stk_track.py:1184:69   - Unknown word (starts)       -- I.e. the main track starts with
Tools/stk_track.py:1186:15   - Unknown word (Quad)         -- lStartQuad = [0]
Tools/stk_track.py:1187:10   - Unknown word (Successor)    -- dSuccessor = {}
Tools/stk_track.py:118:12    - Unknown word (curve)         -- if curve.data_path == 'location
Tools/stk_track.py:1191:26   - Unknown word (quads)        -- f = open(sPath+"/quads.xml", "w")
Tools/stk_track.py:1193:23   - Unknown word (Generated)    -- f.write("<!-- Generated with script from SVN
Tools/stk_track.py:1199:28   - Unknown word (Quads)        -- driveline.writeQuads(f)
Tools/stk_track.py:119:28    - Unknown word (axes)          -- name = "Loc" + axes[curve.array_index]
Tools/stk_track.py:119:33    - Unknown word (curve)         -- name = "Loc" + axes[curve.array_index]
Tools/stk_track.py:1203:16   - Unknown word (bsys)         -- #print bsys.time() - start_time
Tools/stk_track.py:1205:23   - Unknown word (bsys)         -- #start_time = bsys.time()
Tools/stk_track.py:1209:23   - Unknown word (Generated)    -- f.write("<!-- Generated with script from SVN
Tools/stk_track.py:120:14    - Unknown word (curve)         -- elif curve.data_path == 'rotation
Tools/stk_track.py:120:43    - Unknown word (euler)         -- data_path == 'rotation_euler':
Tools/stk_track.py:1211:77   - Unknown word (they)         -- graph, and what quads they represent -->\n")
Tools/stk_track.py:1211:82   - Unknown word (represent)    -- and what quads they represent -->\n")
Tools/stk_track.py:121:28    - Unknown word (axes)          -- name = "Rot" + axes[curve.array_index]
Tools/stk_track.py:121:33    - Unknown word (curve)         -- name = "Rot" + axes[curve.array_index]
Tools/stk_track.py:1223:33   - Unknown word (written)      -- The main driveline is written as a simple loop
Tools/stk_track.py:1227:35   - Unknown word (writes)       -- Each non-main driveline writes potentially three entries
Tools/stk_track.py:1227:42   - Unknown word (potentially)  -- main driveline writes potentially three entries in the
Tools/stk_track.py:1228:41   - Unknown word (beginning)    -- file: connection to the beginning of this driveline, the
Tools/stk_track.py:1229:27   - Unknown word (themselves)   -- # driveline quads themselves, and a connection from
Tools/stk_track.py:1230:24   - Unknown word (another)      -- # driveline to another driveline. But this
Tools/stk_track.py:1230:66   - Unknown word (edged)        -- But this can result in edged being
Tools/stk_track.py:1230:72   - Unknown word (being)        -- can result in edged being
Tools/stk_track.py:1231:11   - Unknown word (written)      -- # written more than once: consider
Tools/stk_track.py:1231:24   - Unknown word (than)         -- # written more than once: consider two non
Tools/stk_track.py:1231:35   - Unknown word (consider)     -- written more than once: consider two non-main drivelines
Tools/stk_track.py:1234:39   - Unknown word (avoid)        -- begin connection. To avoid this, we keep track
Tools/stk_track.py:1235:11   - Unknown word (written)      -- # written from/to edges, and only
Tools/stk_track.py:1235:27   - Unknown word (edges)        -- # written from/to edges, and only write one
Tools/stk_track.py:1235:59   - Unknown word (hasn't)       -- only write one if it hasn't been written.
Tools/stk_track.py:1235:66   - Unknown word (been)         -- write one if it hasn't been written.
Tools/stk_track.py:1235:71   - Unknown word (written)      -- one if it hasn't been written.
Tools/stk_track.py:1236:10   - Unknown word (Written)      -- dWrittenEdges={}
Tools/stk_track.py:1236:17   - Unknown word (Edges)        -- dWrittenEdges={}
Tools/stk_track.py:1237:25   - Unknown word (remaining)    -- # Now write the remaining drivelines
Tools/stk_track.py:1239:15   - Unknown word (Mainline)     -- # Mainline was already written
Tools/stk_track.py:1239:36   - Unknown word (written)      -- Mainline was already written, so ignore it
Tools/stk_track.py:123:30    - Unknown word (axes)          -- name = "Scale" + axes[curve.array_index]
Tools/stk_track.py:1246:32   - Unknown word (Written)      -- if (fr,to) not in dWrittenEdges:
Tools/stk_track.py:1246:39   - Unknown word (Edges)        -- fr,to) not in dWrittenEdges:
Tools/stk_track.py:1256:18   - Unknown word (Written)      -- dWrittenEdges[ (fr, to) ] =
Tools/stk_track.py:1256:25   - Unknown word (Edges)        -- dWrittenEdges[ (fr, to) ] = 1
Tools/stk_track.py:125:17    - Unknown word (pose)          -- if "pose.bones" not in curve
Tools/stk_track.py:125:22    - Unknown word (bones)         -- if "pose.bones" not in curve.data_path
Tools/stk_track.py:1262:35   - Unknown word (Successor)    -- to = driveline.computeSuccessor(lSorted)
Tools/stk_track.py:1263:33   - Unknown word (Written)      -- if (fr, to) not in dWrittenEdges:
Tools/stk_track.py:1263:40   - Unknown word (Edges)        -- to) not in dWrittenEdges:
Tools/stk_track.py:1265:18   - Unknown word (Written)     -- dWrittenEdges[ (fr, to) ] =
Tools/stk_track.py:1265:25   - Unknown word (Edges)       -- dWrittenEdges[ (fr, to) ] = 1
Tools/stk_track.py:1268:16   - Unknown word (bsys)        -- #print bsys.time()-start_time,"seconds
Tools/stk_track.py:1271:7    - Unknown word (Writes)      -- # Writes out all checklines.
Tools/stk_track.py:1274:37   - Unknown word (determined)  -- counting check line is determined.
Tools/stk_track.py:1278:24   - Unknown word (containing)  -- # A dictionary containing a list of indices of
Tools/stk_track.py:1278:62   - Unknown word (structures)  -- of indices of check structures
Tools/stk_track.py:1279:16   - Unknown word (belong)      -- # that belong to this group.
Tools/stk_track.py:1281:44   - Unknown word (structures)  -- indices of all check structures for all groups
Tools/stk_track.py:1288:25   - Unknown word (cannonstart) -- if type == "cannonstart" or type == "cannonend
Tools/stk_track.py:1288:50   - Unknown word (cannonend)   -- cannonstart" or type == "cannonend":
Tools/stk_track.py:129:9     - Unknown word (extrapolation) -- extrapolation = "const"
Tools/stk_track.py:12:3      - Unknown word (bpydoc)       -- __bpydoc__ = """\
Tools/stk_track.py:1304:20   - Unknown word (lapline)     -- strict_lapline = mainDriveline.isStrictLapli
Tools/stk_track.py:1304:52   - Unknown word (Lapline)     -- mainDriveline.isStrictLapline()
Tools/stk_track.py:1307:65   - Unknown word (been)        -- a message will have been printed)
Tools/stk_track.py:1307:70   - Unknown word (printed)     -- message will have been printed)
Tools/stk_track.py:1326:55   - Unknown word (might)       -- Ignored - but lap counting might not work correctly.
Tools/stk_track.py:1326:70   - Unknown word (correctly)   -- counting might not work correctly.")
Tools/stk_track.py:1327:33   - Unknown word (sure)        -- print("Make sure there is an object of
Tools/stk_track.py:1327:38   - Unknown word (there)       -- print("Make sure there is an object of type
Tools/stk_track.py:1335:109  - Unknown word (kart)        -- checkline. Lap counting and kart rescue will not work
Tools/stk_track.py:1335:114  - Unknown word (rescue)      -- Lap counting and kart rescue will not work correctly
Tools/stk_track.py:1335:135  - Unknown word (correctly)   -- rescue will not work correctly.")
Tools/stk_track.py:1338:26   - Unknown word (makes)       -- # driveline (makes the rest of this code
Tools/stk_track.py:1338:54   - Unknown word (easier)      -- the rest of this code easier)
Tools/stk_track.py:133:17    - Unknown word (extrapolation) -- extrapolation = "cyclic"
Tools/stk_track.py:1343:20   - Unknown word (lapline)     -- strict_lapline = True
Tools/stk_track.py:1351:23   - Unknown word (lapline)     -- if not strict_lapline:
Tools/stk_track.py:1364:29   - Unknown word (cannonstart) -- if type == "cannonstart":
Tools/stk_track.py:1365:31   - Unknown word (Cannon)      -- self.writeCannon(f, obj)
Tools/stk_track.py:1367:31   - Unknown word (cannonend)   -- elif type == "cannonend":
Tools/stk_track.py:1369:31   - Unknown word (goal)        -- elif type == "goal":
Tools/stk_track.py:136:27    - Unknown word (bezier)        -- # If any point is bezier we'll export as Bezier
Tools/stk_track.py:136:50    - Unknown word (Bezier)        -- bezier we'll export as Bezier
Tools/stk_track.py:1370:31   - Unknown word (Goal)        -- self.writeGoal(f, obj)
Tools/stk_track.py:1376:49   - Unknown word (ambient)     -- lap, activate, toggle, ambient
Tools/stk_track.py:1383:59   - Unknown word (might)       -- Ignored - but lap counting might not work correctly.
Tools/stk_track.py:1383:74   - Unknown word (correctly)   -- counting might not work correctly.")
Tools/stk_track.py:1384:37   - Unknown word (sure)        -- print("Make sure there is an object of
Tools/stk_track.py:1384:42   - Unknown word (there)       -- print("Make sure there is an object of type
Tools/stk_track.py:1395:59   - Unknown word (might)       -- Ignored - but lap counting might not work correctly.
Tools/stk_track.py:1395:74   - Unknown word (correctly)   -- counting might not work correctly.")
Tools/stk_track.py:1396:37   - Unknown word (sure)        -- print("Make sure there is an object of
Tools/stk_track.py:139:36    - Unknown word (BEZIER)        -- bez.interpolation=='BEZIER':
Tools/stk_track.py:1404:52   - Unknown word (needs)       -- kind=\"lap\" "  # xml needs a value for an attribute
Tools/stk_track.py:140:34    - Unknown word (bezier)        -- interpolation = "bezier"
Tools/stk_track.py:1410:63   - Unknown word (might)       -- Ignored - but lap counting might not work correctly.
Tools/stk_track.py:1410:78   - Unknown word (correctly)   -- counting might not work correctly.")
Tools/stk_track.py:1411:41   - Unknown word (sure)        -- print("Make sure there is an object of
Tools/stk_track.py:1415:34   - Unknown word (sother)      -- kind = "%sother-ids=\"%s\" "% (kind
Tools/stk_track.py:1417:17   - Unknown word (ambient)     -- ambient = getObjectProperty
Tools/stk_track.py:1417:51   - Unknown word (ambient)     -- getObjectProperty(obj, "ambient", "").upper()
Tools/stk_track.py:1418:20   - Unknown word (ambient)     -- if ambient:
Tools/stk_track.py:1419:35   - Unknown word (ambient)     -- kind=" kind=\"ambient-light\" "
Tools/stk_track.py:1421:50   - Unknown word (belongs)     -- group name this object belongs to. If the objects
Tools/stk_track.py:1422:64   - Unknown word (otherwise)   -- is the group name, otherwise
Tools/stk_track.py:1429:58   - Unknown word (excluding)   -- indices of this group, excluding
Tools/stk_track.py:143:11    - Unknown word (Rotations)     -- # Rotations are stored in randians
Tools/stk_track.py:143:35    - Unknown word (randians)      -- Rotations are stored in randians
Tools/stk_track.py:1455:21   - Unknown word (inner)       -- inner_radius = getObjectProperty
Tools/stk_track.py:1455:60   - Unknown word (inner)       -- getObjectProperty(obj, "inner_radius", radius)
Tools/stk_track.py:1457:41   - Unknown word (sphere)      -- f.write(" <check-sphere%sxyz=\"%.2f %.2f %.
Tools/stk_track.py:1457:48   - Unknown word (sxyz)        -- write(" <check-sphere%sxyz=\"%.2f %.2f %.2f\" radius
Tools/stk_track.py:1460:48   - Unknown word (inner)       -- write(" inner-radius=\"%.2f\" color
Tools/stk_track.py:1461:30   - Unknown word (inner)       -- (inner_radius, color) )
Tools/stk_track.py:1463:34   - Unknown word (exporting)   -- log_error("Error exporting checkline " + obj.name
Tools/stk_track.py:1463:77   - Unknown word (sure)        -- obj.name + ", make sure it is properly formed
Tools/stk_track.py:1463:97   - Unknown word (formed)      -- sure it is properly formed")
Tools/stk_track.py:1469:19   - Unknown word (goal)        -- # Write out a goal line
Tools/stk_track.py:1470:14   - Unknown word (Goal)        -- def writeGoal(self, f, goal):
Tools/stk_track.py:1470:28   - Unknown word (goal)        -- def writeGoal(self, f, goal):
Tools/stk_track.py:1471:16   - Unknown word (goal)        -- if len(goal.data.vertices) != 2
Tools/stk_track.py:1472:26   - Unknown word (Goal)        -- log_warning("Goal line is not a line made
Tools/stk_track.py:1474:9    - Unknown word (goal)        -- goal_matrix = goal.rotation
Tools/stk_track.py:1488:22   - Unknown word (cannon)      -- # Writes out all cannon checklines.
Tools/stk_track.py:1488:7    - Unknown word (Writes)      -- # Writes out all cannon checklines
Tools/stk_track.py:1489:14   - Unknown word (Cannon)      -- def writeCannon(self, f, cannon):
Tools/stk_track.py:1489:30   - Unknown word (cannon)      -- writeCannon(self, f, cannon):
Tools/stk_track.py:1491:17   - Unknown word (cannon)      -- start = cannon
Tools/stk_track.py:1493:52   - Unknown word (cannonend)   -- getObjectProperty(start, "cannonend", "")
Tools/stk_track.py:1495:24   - Unknown word (Cannon)      -- log_error("Cannon " + cannon.name + "
Tools/stk_track.py:1495:35   - Unknown word (cannon)      -- log_error("Cannon " + cannon.name + " end is not
Tools/stk_track.py:149:39    - Unknown word (extrapolation) -- name, interpolation, extrapolation))
Tools/stk_track.py:1501:26   - Unknown word (Cannon)      -- log_warning("Cannon start " + start.name
Tools/stk_track.py:1503:26   - Unknown word (Cannon)      -- log_warning("Cannon end " + end.name +
Tools/stk_track.py:1505:47   - Unknown word (cannonpath)  -- getObjectProperty(start, "cannonpath", "")
Tools/stk_track.py:1505:9    - Unknown word (curvename)   -- curvename = getObjectProperty
Tools/stk_track.py:150:26    - Unknown word (Interp)        -- #(name, dInterp[curve.interpolation
Tools/stk_track.py:1511:23   - Unknown word (cannon)      -- f.write(' <cannon p1="%.2f %.2f %.2f"
Tools/stk_track.py:1517:16   - Unknown word (curvename)   -- if len(curvename) > 0:
Tools/stk_track.py:1518:18   - Unknown word (Bezier)      -- writeBezierCurve(f, bpy.data.objects
Tools/stk_track.py:1518:50   - Unknown word (curvename)   -- f, bpy.data.objects[curvename], \
Tools/stk_track.py:1519:56   - Unknown word (cannonspeed) -- getObjectProperty(start, "cannonspeed", 50.0), "const" )
Tools/stk_track.py:1529:43   - Unknown word (coordinates) -- the mesh to the right coordinates.
Tools/stk_track.py:152:17    - Unknown word (shown)         -- warning_shown = False
Tools/stk_track.py:1533:19   - Unknown word (neighbours)  -- # list of neighbours.
Tools/stk_track.py:1534:20   - Unknown word (Neighbour)   -- self.createNeighbourDict()
Tools/stk_track.py:1541:11   - Unknown word (Invisible)   -- # Invisible drivelines are not shown
Tools/stk_track.py:1541:40   - Unknown word (shown)       -- Invisible drivelines are not shown in the minimap
Tools/stk_track.py:1542:14   - Unknown word (invisible)   -- self.invisible = getObjectProperty
Tools/stk_track.py:1542:56   - Unknown word (invisible)   -- getObjectProperty(driveline, "invisible", "false")
Tools/stk_track.py:1544:14   - Unknown word (direction)   -- self.direction = getObjectProperty
Tools/stk_track.py:1544:56   - Unknown word (direction)   -- getObjectProperty(driveline, "direction", "both")
Tools/stk_track.py:1548:63   - Unknown word (lapline)     -- "strict_lapline", "N") ) \
Tools/stk_track.py:1554:7    - Unknown word (Returns)     -- # Returns the name of the driveline
Tools/stk_track.py:155:32    - Unknown word (bezier)        -- if interpolation=="bezier":
Tools/stk_track.py:156:40    - Unknown word (BEZIER)        -- bez.interpolation=='BEZIER':
Tools/stk_track.py:1570:68   - Unknown word (exactly)     -- strict lap counting (i.e. exactly
Tools/stk_track.py:1571:25   - Unknown word (between)     -- # crossing the line between the start vertices)
Tools/stk_track.py:1571:7    - Unknown word (crossing)    -- # crossing the line between the
Tools/stk_track.py:1572:17   - Unknown word (Lapline)     -- def isStrictLapline(self):
Tools/stk_track.py:1590:20   - Unknown word (Quads)       -- def getNumberOfQuads(self):
Tools/stk_track.py:1598:64   - Unknown word (numbering)   -- driveline in the global numbering of
Tools/stk_track.py:15:8      - Unknown word (Supertuxkart) -- # From Supertuxkart SVN revision $Revision
Tools/stk_track.py:1612:55   - Unknown word (means)       -- main driveline. This means that it will get
Tools/stk_track.py:1613:11   - Unknown word (additional)  -- # one additional quad added to connect
Tools/stk_track.py:1613:73   - Unknown word (Since)       -- the very first quad. Since
Tools/stk_track.py:1614:26   - Unknown word (actually)    -- the values are not actually needed (see write function
Tools/stk_track.py:1615:30   - Unknown word (larger)      -- be made one element larger to account for this
Tools/stk_track.py:1615:57   - Unknown word (additional)  -- to account for this additional quad (e.g.
Tools/stk_track.py:1616:30   - Unknown word (Quads)       -- calls to getNumberOfQuads etc).
Tools/stk_track.py:1624:72   - Unknown word (been)        -- error message will have been printed)
Tools/stk_track.py:1624:77   - Unknown word (printed)     -- message will have been printed)
Tools/stk_track.py:162:48    - Unknown word (bezier)        -- point with linear IPO in bezier curve
Tools/stk_track.py:1636:12   - Unknown word (creates)     -- # This creates a dictionary for a mesh
Tools/stk_track.py:1637:18   - Unknown word (neighbours)  -- # of all its neighbours.
Tools/stk_track.py:1638:15   - Unknown word (Neighbour)   -- def createNeighbourDict(self):
Tools/stk_track.py:1640:28   - Unknown word (edges)       -- for e in self.mesh.edges:
Tools/stk_track.py:1652:28   - Unknown word (determines)  -- This helper function determines the start vertex for
Tools/stk_track.py:1653:19   - Unknown word (documented)  -- # Details are documented in convertDrivelines
Tools/stk_track.py:1653:55   - Unknown word (returns)     -- convertDrivelines. It returns as list with
Tools/stk_track.py:1654:15   - Unknown word (starting)    -- # the two starting lines.
Tools/stk_track.py:1656:34   - Unknown word (exactly)     -- Find all vertices with exactly two neighbours
Tools/stk_track.py:1656:46   - Unknown word (neighbours)  -- vertices with exactly two neighbours
Tools/stk_track.py:1663:127  - Unknown word (starts)      -- where the driveline starts." % self.name)
Tools/stk_track.py:1663:42   - Unknown word (incorrectly) -- error("Driveline '%s' is incorrectly formed, cannot find
Tools/stk_track.py:1663:54   - Unknown word (formed)      -- '%s' is incorrectly formed, cannot find the two
Tools/stk_track.py:1663:83   - Unknown word (antennas)    -- cannot find the two 'antennas' that indicate where
Tools/stk_track.py:1663:98   - Unknown word (indicate)    -- two 'antennas' that indicate where the driveline
Tools/stk_track.py:1673:20   - Unknown word (middle)      -- # Save the middle of the first quad, which
Tools/stk_track.py:1673:70   - Unknown word (neareast)    -- which is used later for neareast
Tools/stk_track.py:1674:17   - Unknown word (computations) -- # quads computations.
Tools/stk_track.py:1680:19   - Unknown word (startline)    -- # Returns the startline of this driveline
Tools/stk_track.py:1684:54   - Unknown word (given)        -- the start point from a given point
Tools/stk_track.py:168:36    - Unknown word (shown)         -- if not warning_shown:
Tools/stk_track.py:1691:41   - Unknown word (neighbours)   -- dictionary of list of neighbours to two lists - one for
Tools/stk_track.py:169:101   - Unknown word (Bezier)        -- a mix of mixture of Bezier and " +
Tools/stk_track.py:169:50    - Unknown word (animation)     -- warning("You have an animation curve which contains
Tools/stk_track.py:169:90    - Unknown word (mixture)       -- which contains a mix of mixture of Bezier and " +
Tools/stk_track.py:1707:29   - Unknown word (handling)     -- # this is for error handling only
Tools/stk_track.py:170:60    - Unknown word (please)        -- linear interpolation, please convert everything to
Tools/stk_track.py:170:75    - Unknown word (everything)    -- interpolation, please convert everything to Bezier for best results
Tools/stk_track.py:170:89    - Unknown word (Bezier)        -- convert everything to Bezier for best results")
Tools/stk_track.py:1712:28   - Unknown word (either)       -- # The quads can be either clockwise or counter
Tools/stk_track.py:1712:35   - Unknown word (clockwise)    -- quads can be either clockwise or counter-clockwise
Tools/stk_track.py:1712:56   - Unknown word (clockwise)    -- clockwise or counter-clockwise oriented. STK
Tools/stk_track.py:1712:66   - Unknown word (oriented)     -- or counter-clockwise oriented. STK
Tools/stk_track.py:1713:11   - Unknown word (expectes)     -- # expectes counter-clockwise, so
Tools/stk_track.py:1713:28   - Unknown word (clockwise)    -- # expectes counter-clockwise, so if the orientation
Tools/stk_track.py:171:33    - Unknown word (shown)         -- warning_shown = True
Tools/stk_track.py:1727:39   - Unknown word (become)       -- start edge, which will become the main lap counting
Tools/stk_track.py:1728:41   - Unknown word (must)         -- main driveline). This must be done here after potentiall
Tools/stk_track.py:1728:65   - Unknown word (potentially)  -- must be done here after potentially
Tools/stk_track.py:1729:21   - Unknown word (since)        -- # switching since STK assumes that the
Tools/stk_track.py:1729:31   - Unknown word (assumes)      -- switching since STK assumes that the first point
Tools/stk_track.py:1730:57   - Unknown word (converted)    -- the main driveline is converted) is on the
Tools/stk_track.py:1732:11   - Unknown word (Track)        -- # Track::setStartCoordinates
Tools/stk_track.py:1732:26   - Unknown word (Coordinates)  -- # Track::setStartCoordinates/getStartTransform).
Tools/stk_track.py:1736:11   - Unknown word (Just)         -- # Just in case that we have
Tools/stk_track.py:1739:17   - Unknown word (printed)      -- warning_printed = 0
Tools/stk_track.py:1746:23   - Unknown word (neighbours)   -- # Get all neighbours. One is the previous
Tools/stk_track.py:1747:29   - Unknown word (opposite)     -- # points to the opposite side - we need the other
Tools/stk_track.py:1748:13   - Unknown word (neighb)       -- neighb = self.dNext[self.lLeft
Tools/stk_track.py:1750:22   - Unknown word (neighb)       -- for i in neighb:
Tools/stk_track.py:1751:52   - Unknown word (pointing)     -- lLeft[-2]: continue   # pointing backwards
Tools/stk_track.py:1752:55   - Unknown word (opposite)     -- -1]: continue  # to opposite side
Tools/stk_track.py:1756:49   - Unknown word (must)         -- element found --> this must be the end
Tools/stk_track.py:1760:50   - Unknown word (printed)      -- !=1 and not warning_printed:
Tools/stk_track.py:1761:17   - Unknown word (lcoord)       -- lcoord = self.mesh.vertices
Tools/stk_track.py:1762:17   - Unknown word (rcoord)       -- rcoord = self.mesh.vertices
Tools/stk_track.py:1764:30   - Unknown word (lcoord)       -- (lcoord[0], lcoord[1], lcoord
Tools/stk_track.py:1764:41   - Unknown word (lcoord)       -- (lcoord[0], lcoord[1], lcoord[2]))
Tools/stk_track.py:1764:52   - Unknown word (lcoord)       -- lcoord[0], lcoord[1], lcoord[2]))
Tools/stk_track.py:1765:24   - Unknown word (Potential)    -- print("Potential successors :")
Tools/stk_track.py:1765:34   - Unknown word (successors)   -- print("Potential successors :")
Tools/stk_track.py:1767:21   - Unknown word (nextco)       -- nextco = self.mesh.vertices
Tools/stk_track.py:1768:29   - Unknown word (Successor)    -- print ("Successor %d: %f %f %f" % \
Tools/stk_track.py:1769:31   - Unknown word (nextco)       -- (i, nextco[0], nextco[1], nextco
Tools/stk_track.py:1769:42   - Unknown word (nextco)       -- (i, nextco[0], nextco[1], nextco[2]))
Tools/stk_track.py:1769:53   - Unknown word (nextco)       -- nextco[0], nextco[1], nextco[2]))
Tools/stk_track.py:1770:39   - Unknown word (possible)     -- print ("It might also possible that the corresponding
Tools/stk_track.py:1770:57   - Unknown word (corresponding) -- also possible that the corresponding right driveline point
Tools/stk_track.py:1771:24   - Unknown word (rcoord)        -- print (rcoord[0],rcoord[1],rcoord
Tools/stk_track.py:1771:34   - Unknown word (rcoord)        -- print (rcoord[0],rcoord[1],rcoord[2])
Tools/stk_track.py:1771:44   - Unknown word (rcoord)        -- rcoord[0],rcoord[1],rcoord[2])
Tools/stk_track.py:1772:34   - Unknown word (inconsistencies) -- print ("has some inconsistencies.")
Tools/stk_track.py:1773:50   - Unknown word (certainly)       -- drivelines will most certainly not be useable.")
Tools/stk_track.py:1773:67   - Unknown word (useable)         -- most certainly not be useable.")
Tools/stk_track.py:1774:25   - Unknown word (Further)         -- print ("Further warnings are likely
Tools/stk_track.py:1774:46   - Unknown word (likely)          -- Further warnings are likely and will be suppressed
Tools/stk_track.py:1774:65   - Unknown word (suppressed)      -- are likely and will be suppressed.")
Tools/stk_track.py:1777:19   - Unknown word (Blender)         -- # Blender.Draw.PupMenu("Problems
Tools/stk_track.py:1785:13   - Unknown word (neighb)          -- neighb = self.dNext[self.lRight
Tools/stk_track.py:1788:22   - Unknown word (neighb)          -- for i in neighb:
Tools/stk_track.py:1789:53   - Unknown word (pointing)        -- lRight[-2]: continue   # pointing backwards
Tools/stk_track.py:1790:56   - Unknown word (appended)        -- already a new element appended,
Tools/stk_track.py:1792:54   - Unknown word (opposite)        -- -2]: continue  # to opposite side
Tools/stk_track.py:1796:17   - Unknown word (lcoord)          -- lcoord = self.mesh.vertices
Tools/stk_track.py:1797:17   - Unknown word (rcoord)          -- rcoord = self.mesh.vertices
Tools/stk_track.py:17:22     - Unknown word (Joerg)        -- Copyright (C) 2010 Joerg Henrichs
Tools/stk_track.py:17:28     - Unknown word (Henrichs)     -- Copyright (C) 2010 Joerg Henrichs
Tools/stk_track.py:180:10    - Unknown word (Bezier)        -- def writeBezierCurve(f, curve, speed
Tools/stk_track.py:1814:48   - Unknown word (potential)       -- Warning: More than one potential succesor found for right
Tools/stk_track.py:1814:58   - Unknown word (succesor)        -- More than one potential succesor found for right driveline
Tools/stk_track.py:1817:30   - Unknown word (Successor)       -- # print ("Successor %d: %f %f %f" % \
Tools/stk_track.py:1819:39   - Unknown word (possible)        -- print ("It might also possible that the corresponding
Tools/stk_track.py:1819:57   - Unknown word (corresponding)   -- also possible that the corresponding left driveline point
Tools/stk_track.py:181:20    - Unknown word (matrix)        -- matrix = curve.matrix_world
Tools/stk_track.py:181:5     - Unknown word (matrix)        -- matrix = curve.matrix_world
Tools/stk_track.py:1821:34   - Unknown word (inconsistencies) -- print ("has some inconsistencies.")
Tools/stk_track.py:1822:50   - Unknown word (certainly)       -- drivelines will most certainly not be useable.")
Tools/stk_track.py:1822:67   - Unknown word (useable)         -- most certainly not be useable.")
Tools/stk_track.py:1823:25   - Unknown word (Further)         -- print ("Further warnings are likely
Tools/stk_track.py:1823:46   - Unknown word (likely)          -- Further warnings are likely and will be suppressed
Tools/stk_track.py:1823:65   - Unknown word (suppressed)      -- are likely and will be suppressed.")
Tools/stk_track.py:182:23    - Unknown word (splines)       -- if len(curve.data.splines) > 1:
Tools/stk_track.py:1843:84   - Unknown word (exported)        -- of driveline '%s' are exported" %\
Tools/stk_track.py:1854:70   - Unknown word (improve)         -- vertex (this is only to improve the error message)
Tools/stk_track.py:1862:54   - Unknown word (appears)         -- Warning, driveline '%s' appears to be broken in separate
Tools/stk_track.py:1869:67   - Unknown word (indicate)        -- which are only used to indicate
Tools/stk_track.py:1870:15   - Unknown word (starting)        -- # the starting point:
Tools/stk_track.py:187:19    - Unknown word (splines)       -- if curve.data.splines[0].type != 'BEZIER'
Tools/stk_track.py:187:39    - Unknown word (BEZIER)        -- splines[0].type != 'BEZIER':
Tools/stk_track.py:188:83    - Unknown word (splines)       -- not a " + curve.data.splines[0].type)
Tools/stk_track.py:1891:28   - Unknown word (given)           -- lDrivelines from the given point p (it's actually
Tools/stk_track.py:1891:48   - Unknown word (actually)        -- given point p (it's actually a static function).
Tools/stk_track.py:1894:34   - Unknown word (returns)         -- lDrivelines. This function returns the distance, the index
Tools/stk_track.py:18:22     - Unknown word (Marianne)     -- Copyright (C) 2012 Marianne Gagnon
Tools/stk_track.py:18:31     - Unknown word (Gagnon)       -- Copyright (C) 2012 Marianne Gagnon
Tools/stk_track.py:1903:58   - Unknown word (itself)          -- continue # ignore itself
Tools/stk_track.py:190:30    - Unknown word (splines)       -- for pt in curve.data.splines[0].bezier_points:
Tools/stk_track.py:191:18    - Unknown word (matrix)        -- v0 = matrix*pt.handle_left
Tools/stk_track.py:192:18    - Unknown word (matrix)        -- v1 = matrix*pt.co*matrix
Tools/stk_track.py:192:31    - Unknown word (matrix)        -- v1 = matrix*pt.co*matrix
Tools/stk_track.py:1933:69   - Unknown word (driveline's)     -- which is closest to this driveline's
Tools/stk_track.py:1934:25   - Unknown word (meaning)         -- # endpoint (closest meaning: having a quad that
Tools/stk_track.py:1934:34   - Unknown word (having)          -- endpoint (closest meaning: having a quad that is closest
Tools/stk_track.py:1935:16   - Unknown word (Successor)       -- def computeSuccessor(self, lSorted):
Tools/stk_track.py:1941:7    - Unknown word (Writes)          -- # Writes the quads into a file
Tools/stk_track.py:1945:61   - Unknown word (been)            -- a message will have been printed)
Tools/stk_track.py:1947:61   - Unknown word (been)            -- a message will have been printed)
Tools/stk_track.py:1954:17   - Unknown word (invisible)       -- if self.invisible and self.invisible=
Tools/stk_track.py:1954:36   - Unknown word (invisible)       -- self.invisible and self.invisible=="true":
Tools/stk_track.py:1955:22   - Unknown word (invisible)       -- sInv = " invisible=\"yes\" "
Tools/stk_track.py:1965:17   - Unknown word (direction)       -- if self.direction and self.direction
Tools/stk_track.py:1965:36   - Unknown word (direction)       -- self.direction and self.direction != "both":
Tools/stk_track.py:1966:14   - Unknown word (Direction)       -- sDirection = "direction=\"" + self
Tools/stk_track.py:1966:27   - Unknown word (direction)       -- sDirection = "direction=\"" + self.direction
Tools/stk_track.py:1968:14   - Unknown word (Direction)       -- sDirection = " "
Tools/stk_track.py:1973:64   - Unknown word (decreased)       -- number of elements is decreased by
Tools/stk_track.py:1979:41   - Unknown word (must)            -- only the first quad must be marked with ai-ignore
Tools/stk_track.py:1979:49   - Unknown word (marked)          -- the first quad must be marked with ai-ignore
Tools/stk_track.py:1981:31   - Unknown word (somewhere)       -- if it should end up somewhere on the shortcut, it
Tools/stk_track.py:1984:33   - Unknown word (Direction)       -- %(sInv, sAIIgnore, sDirection, l[0],l[2],l[1], r[
Tools/stk_track.py:1991:69   - Unknown word (Direction)       -- max_index - 1 else "",sDirection,self.global_quad_index
Tools/stk_track.py:1999:14   - Unknown word (exporter)        -- # The actual exporter. It is using a class
Tools/stk_track.py:1999:44   - Unknown word (mainly)          -- It is using a class mainly to store some information
Tools/stk_track.py:2000:3    - Unknown word (between)         -- # between calls to different functions
Tools/stk_track.py:2000:57   - Unknown word (exported)        -- functions, e.g. a cache of exported objects.
Tools/stk_track.py:2003:49   - Unknown word (coordinate)      -- spm object in local coordinate, i.e. with the object
Tools/stk_track.py:2005:48   - Unknown word (applymodifiers)  -- self, obj, sPath, name, applymodifiers=True):
Tools/stk_track.py:2006:54   - Unknown word (assumed)         -- ".spm" the model is assumed to be part of
Tools/stk_track.py:2007:32   - Unknown word (included)        -- the standard objects included in STK, so there is
Tools/stk_track.py:2012:37   - Unknown word (exported)        -- the object was already exported, we don't have to do
Tools/stk_track.py:2013:26   - Unknown word (Exported)        -- if name in self.dExportedObjects: return name
Tools/stk_track.py:2016:44   - Unknown word (exporter)        -- Cannot find the SPM exporter, make sure you installed
Tools/stk_track.py:2019:28   - Unknown word (ugly)            -- # FIXME: silly and ugly hack, the list of objects
Tools/stk_track.py:2019:33   - Unknown word (hack)            -- FIXME: silly and ugly hack, the list of objects
Tools/stk_track.py:2019:72   - Unknown word (passed)          -- objects to export is passed through
Tools/stk_track.py:2025:39   - Unknown word (localsp)         -- ops.screen.spm_export(localsp=True, filepath=sPath
Tools/stk_track.py:2026:46   - Unknown word (tangent)         -- export_tangent=getSceneProperty(the
Tools/stk_track.py:2026:83   - Unknown word (precalculate)    -- getSceneProperty(the_scene, 'precalculate_tangents', 'false')
Tools/stk_track.py:2026:96   - Unknown word (tangents)        -- scene, 'precalculate_tangents', 'false') == 'true
Tools/stk_track.py:2027:39   - Unknown word (overwrite)       -- overwrite_without_asking=True
Tools/stk_track.py:2027:57   - Unknown word (asking)          -- overwrite_without_asking=True, applymodifiers
Tools/stk_track.py:2027:70   - Unknown word (applymodifiers)  -- without_asking=True, applymodifiers=applymodifiers)
Tools/stk_track.py:2027:85   - Unknown word (applymodifiers)  -- True, applymodifiers=applymodifiers)
Tools/stk_track.py:202:13    - Unknown word (there)         -- # Checks if there are any animated textures
Tools/stk_track.py:202:27    - Unknown word (animated)      -- Checks if there are any animated textures in any of the
Tools/stk_track.py:202:36    - Unknown word (textures)      -- there are any animated textures in any of the objects
Tools/stk_track.py:2037:15   - Unknown word (Exported)        -- self.dExportedObjects[name]=1
Tools/stk_track.py:2047:24   - Unknown word (bsys)            -- #start_time = bsys.time()
Tools/stk_track.py:204:13    - Unknown word (Animated)      -- def checkForAnimatedTextures(lObjects):
Tools/stk_track.py:204:21    - Unknown word (Textures)      -- def checkForAnimatedTextures(lObjects):
Tools/stk_track.py:205:10    - Unknown word (Textures)      -- lAnimTextures = []
Tools/stk_track.py:205:6     - Unknown word (Anim)          -- lAnimTextures = []
Tools/stk_track.py:2072:12   - Unknown word (cutscene)        -- is_cutscene = getSceneProperty(scene
Tools/stk_track.py:2072:48   - Unknown word (cutscene)        -- getSceneProperty(scene, "cutscene", "false") == "true
Tools/stk_track.py:2078:48   - Unknown word (pushback)        -- getSceneProperty(scene, "pushback", "true"
Tools/stk_track.py:207:13    - Unknown word (anim)          -- use_anim_texture = getObjectProperty
Tools/stk_track.py:207:18    - Unknown word (texture)       -- use_anim_texture = getObjectProperty
Tools/stk_track.py:207:64    - Unknown word (texture)       -- ectProperty(obj, "enable_anim_texture", "false")
Tools/stk_track.py:2081:14   - Unknown word (rescue)          -- auto_rescue = getSceneProperty(scene
Tools/stk_track.py:2081:48   - Unknown word (autorescue)      -- getSceneProperty(scene, "autorescue", "true"       )
Tools/stk_track.py:2082:14   - Unknown word (rescue)          -- auto_rescue = (auto_rescue != "false
Tools/stk_track.py:2082:29   - Unknown word (rescue)          -- auto_rescue = (auto_rescue != "false")
Tools/stk_track.py:208:21    - Unknown word (texture)       -- if use_anim_texture != 'true': continue
Tools/stk_track.py:2092:69   - Unknown word (please)          -- field is deprecated, please use 'Designer'")
Tools/stk_track.py:2098:16   - Unknown word (normals)        -- smooth_normals = getSceneProperty
Tools/stk_track.py:2098:52   - Unknown word (smooth)         -- getSceneProperty(scene, "smooth_normals", "false")
Tools/stk_track.py:2098:59   - Unknown word (normals)        -- tSceneProperty(scene, "smooth_normals", "false")
Tools/stk_track.py:2098:9    - Unknown word (smooth)          -- smooth_normals = getSceneProperty
Tools/stk_track.py:2099:14   - Unknown word (bloom)          -- #has_bloom = (getSceneProperty
Tools/stk_track.py:2099:54   - Unknown word (bloom)          -- getSceneProperty(scene, "bloom", "false") == "true
Tools/stk_track.py:2100:52   - Unknown word (bloom)          -- getSceneProperty(scene, "bloom_threshold", "0.75")
Tools/stk_track.py:2100:9    - Unknown word (bloom)          -- bloom_threshold = getSceneProperty
Tools/stk_track.py:2101:19   - Unknown word (shadows)        -- has_cloud_shadows = (getSceneProperty
Tools/stk_track.py:2101:55   - Unknown word (clouds)         -- getSceneProperty(scene, "clouds", "false") == "true
Tools/stk_track.py:2102:14   - Unknown word (lens)           -- #has_lens_flare = (getSceneProperty
Tools/stk_track.py:2102:19   - Unknown word (flare)          -- #has_lens_flare = (getSceneProperty
Tools/stk_track.py:2102:54   - Unknown word (sunlensflare)   -- getSceneProperty(scene, "sunlensflare", "false") == "true
Tools/stk_track.py:2103:13   - Unknown word (shadows)        -- has_shadows = (getSceneProperty
Tools/stk_track.py:2103:53   - Unknown word (shadows)        -- getSceneProperty(scene, "shadows", "false") == "true
Tools/stk_track.py:2105:52   - Unknown word (duringday)      -- getSceneProperty(scene, "duringday", "day")
Tools/stk_track.py:2107:14   - Unknown word (colorlevel)     -- #has_colorlevel = (getSceneProperty
Tools/stk_track.py:2107:54   - Unknown word (colorlevel)     -- getSceneProperty(scene, "colorlevel", "false") == "true
Tools/stk_track.py:2108:10   - Unknown word (colorlevel)     -- #colorlevel_inblack = getSceneProperty
Tools/stk_track.py:2108:21   - Unknown word (inblack)        -- #colorlevel_inblack = getSceneProperty(scene
Tools/stk_track.py:2108:56   - Unknown word (colorlevel)     -- getSceneProperty(scene, "colorlevel_inblack", "0.0")
Tools/stk_track.py:2108:67   - Unknown word (inblack)        -- neProperty(scene, "colorlevel_inblack", "0.0")
Tools/stk_track.py:2109:10   - Unknown word (colorlevel)     -- #colorlevel_ingamma = getSceneProperty
Tools/stk_track.py:2109:21   - Unknown word (ingamma)        -- #colorlevel_ingamma = getSceneProperty(scene
Tools/stk_track.py:2109:67   - Unknown word (ingamma)        -- neProperty(scene, "colorlevel_ingamma", "1.0")
Tools/stk_track.py:210:14    - Unknown word (texture)       -- anim_texture = getObjectProperty
Tools/stk_track.py:210:53    - Unknown word (texture)       -- getObjectProperty(obj, "anim_texture", None)
Tools/stk_track.py:2110:21   - Unknown word (inwhite)        -- #colorlevel_inwhite = getSceneProperty(scene
Tools/stk_track.py:2110:67   - Unknown word (inwhite)        -- neProperty(scene, "colorlevel_inwhite", "255.0")
Tools/stk_track.py:2112:20   - Unknown word (outblack)       -- colorlevel_outblack = getSceneProperty(scene
Tools/stk_track.py:2112:67   - Unknown word (outblack)       -- neProperty(scene, "colorlevel_outblack", "0.0")
Tools/stk_track.py:2113:20   - Unknown word (outwhite)       -- colorlevel_outwhite = getSceneProperty(scene
Tools/stk_track.py:2113:67   - Unknown word (outwhite)       -- neProperty(scene, "colorlevel_outwhite", "255.0")
Tools/stk_track.py:2115:40   - Unknown word (dome)           -- default settings for sky-dome so that the user is
Tools/stk_track.py:2117:46   - Unknown word (dome)           -- scene, "sky_type", "dome")
Tools/stk_track.py:2121:23   - Unknown word (these)          -- # Not sure if these should be added - if
Tools/stk_track.py:2121:59   - Unknown word (wants)          -- added - if the user wants a sky
Tools/stk_track.py:2122:15   - Unknown word (they)           -- # box they are quiet annoying.
Tools/stk_track.py:2122:24   - Unknown word (quiet)          -- # box they are quiet annoying.
Tools/stk_track.py:2122:30   - Unknown word (annoying)       -- box they are quiet annoying.
Tools/stk_track.py:2127:39   - Unknown word (sphere)         -- getSceneProperty(scene, "sky-sphere-percent", "")
Tools/stk_track.py:2128:21   - Unknown word (laps)           -- default_num_laps = int(getSceneProperty
Tools/stk_track.py:2128:69   - Unknown word (laps)           -- scene, "default_num_laps",3))
Tools/stk_track.py:2132:23   - Unknown word (Generated)      -- f.write("<!-- Generated with script from SVN
Tools/stk_track.py:213:51    - Unknown word (animated)      -- object %s has an invalid animated-texture configuration
Tools/stk_track.py:2145:23   - Unknown word (players)        -- max_arena_players = 0
Tools/stk_track.py:2151:31   - Unknown word (players)        -- max_arena_players += 1
Tools/stk_track.py:2153:40   - Unknown word (players)        -- write(" max-arena-players = \"%d\"\n" % max_arena
Tools/stk_track.py:2153:72   - Unknown word (players)        -- %d\"\n" % max_arena_players)
Tools/stk_track.py:215:34    - Unknown word (animated)      -- anim_texture == 'stk_animated_mudpot_a.png':
Tools/stk_track.py:215:43    - Unknown word (mudpot)        -- texture == 'stk_animated_mudpot_a.png':
Tools/stk_track.py:216:16    - Unknown word (Animated)      -- print('Animated texture {} in {}.'.format
Tools/stk_track.py:2170:21   - Unknown word (rescue)         -- if not auto_rescue:
Tools/stk_track.py:2178:26   - Unknown word (smooth)         -- f.write(" smooth-normals = \"%s\"\n"
Tools/stk_track.py:2178:33   - Unknown word (normals)        -- write(" smooth-normals = \"%s\"\n" % smooth
Tools/stk_track.py:2178:55   - Unknown word (smooth)         -- normals = \"%s\"\n" % smooth_normals)
Tools/stk_track.py:2178:62   - Unknown word (normals)        -- \"%s\"\n" % smooth_normals)
Tools/stk_track.py:2179:44   - Unknown word (laps)           -- default-number-of-laps = \"%d\"\n" % default
Tools/stk_track.py:2179:75   - Unknown word (laps)           -- d\"\n" % default_num_laps)
Tools/stk_track.py:2187:17   - Unknown word (bloom)          -- #if has_bloom:
Tools/stk_track.py:2194:101  - Unknown word (ingamma)        -- " + str(colorlevel_ingamma) + " " + str(colorlevel
Tools/stk_track.py:2194:133  - Unknown word (inwhite)        -- " + str(colorlevel_inwhite) + "\"\n")
Tools/stk_track.py:2194:69   - Unknown word (inblack)        -- "" + str(colorlevel_inblack) + " " + str(colorlevel
Tools/stk_track.py:2195:103  - Unknown word (outwhite)       -- " + str(colorlevel_outwhite) + "\"\n")
Tools/stk_track.py:2195:70   - Unknown word (outblack)       -- "" + str(colorlevel_outblack) + " " + str(colorlevel
Tools/stk_track.py:2197:22   - Unknown word (shadows)        -- if has_cloud_shadows:
Tools/stk_track.py:2198:30   - Unknown word (clouds)         -- f.write(" clouds = \"Y\"\n")
Tools/stk_track.py:21:31     - Unknown word (might)        -- get an error here, it might be
Tools/stk_track.py:2200:30   - Unknown word (clouds)         -- f.write(" clouds = \"N\"\n")
Tools/stk_track.py:2202:17   - Unknown word (lens)           -- #if has_lens_flare:
Tools/stk_track.py:2202:22   - Unknown word (flare)          -- #if has_lens_flare:
Tools/stk_track.py:2203:31   - Unknown word (lens)           -- f.write(" lens-flare = \"Y\"\n
Tools/stk_track.py:2203:36   - Unknown word (flare)          -- write(" lens-flare = \"Y\"\n")
Tools/stk_track.py:2205:31   - Unknown word (lens)           -- f.write(" lens-flare = \"N\"\n
Tools/stk_track.py:2205:36   - Unknown word (flare)          -- write(" lens-flare = \"N\"\n")
Tools/stk_track.py:2212:16   - Unknown word (shadows)        -- if has_shadows:
Tools/stk_track.py:2224:7    - Unknown word (Writes)         -- # Writes the animation for objects
Tools/stk_track.py:2225:14   - Unknown word (Animation)      -- def writeAnimationWithIPO(self, f, name
Tools/stk_track.py:2226:14   - Unknown word (animated)       -- # An animated object can set the
Tools/stk_track.py:2227:48   - Unknown word (instead)        -- the exported object (instead of the python name
Tools/stk_track.py:2228:57   - Unknown word (Additionally)   -- name with a number). Additionally, names
Tools/stk_track.py:2229:35   - Unknown word (avoided)        -- cached so it can be avoided to export two or more
Tools/stk_track.py:2229:65   - Unknown word (identical)      -- to export two or more identical
Tools/stk_track.py:2235:20   - Unknown word (armature)      -- # For now: armature animations are assumed
Tools/stk_track.py:2235:29   - Unknown word (animations)    -- # For now: armature animations are assumed to be looped
Tools/stk_track.py:2235:44   - Unknown word (assumed)       -- armature animations are assumed to be looped
Tools/stk_track.py:2235:58   - Unknown word (looped)        -- animations are assumed to be looped
Tools/stk_track.py:2236:37   - Unknown word (ARMATURE)      -- parent and parent.type=="ARMATURE":
Tools/stk_track.py:223:10    - Unknown word (Anim)          -- lAnimTextures.append( (anim
Tools/stk_track.py:223:14    - Unknown word (Textures)      -- lAnimTextures.append( (anim_texture
Tools/stk_track.py:2242:48   - Unknown word (markers)       -- in the_scene.timeline_markers:
Tools/stk_track.py:224:13    - Unknown word (Anim)          -- return lAnimTextures
Tools/stk_track.py:224:17    - Unknown word (Textures)      -- return lAnimTextures
Tools/stk_track.py:2263:31   - Unknown word (looped)        -- flags.append('looped="y"')
Tools/stk_track.py:2267:11   - Unknown word (phyiscs)       -- # phyiscs only object can only
Tools/stk_track.py:2268:28   - Unknown word (physicsonly)   -- if interaction == "physicsonly":
Tools/stk_track.py:2272:42   - Unknown word (ghost)         -- and interaction != 'ghost':
Tools/stk_track.py:2277:9    - Unknown word (lodstring)     -- lodstring = self.getModelDefinitionStri
Tools/stk_track.py:2278:16   - Unknown word (lodstring)     -- if len(lodstring) > 0:
Tools/stk_track.py:2279:26   - Unknown word (lodstring)     -- flags.append(lodstring)
Tools/stk_track.py:227:10    - Unknown word (Animated)      -- def writeAnimatedTextures(f, lAnimTextures
Tools/stk_track.py:227:31    - Unknown word (Anim)          -- writeAnimatedTextures(f, lAnimTextures):
Tools/stk_track.py:2287:30   - Unknown word (explode)       -- elif interaction == 'explode':
Tools/stk_track.py:2288:27   - Unknown word (explode)       -- flags.append('explode="y"')
Tools/stk_track.py:228:32    - Unknown word (anime)         -- name, dx, dy, dt, use_anime_texture_by_step) in
Tools/stk_track.py:228:59    - Unknown word (Anim)          -- texture_by_step) in lAnimTextures:
Tools/stk_track.py:2292:36   - Unknown word (driveable)     -- getObjectProperty(obj, "driveable", "false") == "true
Tools/stk_track.py:2293:27   - Unknown word (driveable)     -- flags.append('driveable="true"')
Tools/stk_track.py:2295:36   - Unknown word (forcedbloom)   -- getObjectProperty(obj, "forcedbloom", "false") == "true
Tools/stk_track.py:2296:27   - Unknown word (forcedbloom)   -- flags.append('forcedbloom="true"')
Tools/stk_track.py:2298:36   - Unknown word (shadowpass)    -- getObjectProperty(obj, "shadowpass", "true") == "false
Tools/stk_track.py:22:2      - Unknown word (because)      -- #because you don't have Python
Tools/stk_track.py:2301:40   - Unknown word (outline)       -- getObjectProperty(obj, "outline", "")) > 0:
Tools/stk_track.py:2302:62   - Unknown word (outline)       -- getObjectProperty(obj, "outline", ""))
Tools/stk_track.py:2304:36   - Unknown word (displacing)    -- getObjectProperty(obj, "displacing", "false") == "true
Tools/stk_track.py:2305:27   - Unknown word (displacing)    -- flags.append('displacing="true"')
Tools/stk_track.py:2307:37   - Unknown word (skyboxobject)  -- getObjectProperty(obj, "skyboxobject", "false") == "true
Tools/stk_track.py:2308:28   - Unknown word (renderpass)    -- # flags.append('renderpass="skybox"')
Tools/stk_track.py:2308:40   - Unknown word (skybox)        -- append('renderpass="skybox"')
Tools/stk_track.py:2313:14   - Unknown word (skeletal)      -- uses_skeletal_animation = False
Tools/stk_track.py:2315:39   - Unknown word (armature)      -- if this object has an armature modifier
Tools/stk_track.py:2317:34   - Unknown word (ARMATURE)      -- if curr_mod.type == 'ARMATURE':
Tools/stk_track.py:2318:22   - Unknown word (skeletal)      -- uses_skeletal_animation = True
Tools/stk_track.py:231:16    - Unknown word (anime)         -- if use_anime_texture_by_step ==
Tools/stk_track.py:2320:39   - Unknown word (armature)      -- if this object has an armature parent (second way to
Tools/stk_track.py:2320:73   - Unknown word (armature)      -- parent (second way to do armature animations in blender
Tools/stk_track.py:2320:82   - Unknown word (animations)    -- second way to do armature animations in blender)
Tools/stk_track.py:2322:36   - Unknown word (ARMATURE)      -- obj.parent.type == "ARMATURE":
Tools/stk_track.py:2323:22   - Unknown word (skeletal)      -- uses_skeletal_animation = True
Tools/stk_track.py:2325:17   - Unknown word (skeletal)      -- if uses_skeletal_animation:
Tools/stk_track.py:2330:12   - Unknown word (kart)          -- on_kart_collision = getObjectProperty
Tools/stk_track.py:2330:17   - Unknown word (collision)     -- on_kart_collision = getObjectProperty
Tools/stk_track.py:2330:56   - Unknown word (kart)          -- getObjectProperty(obj, "on_kart_collision", "")
Tools/stk_track.py:2330:61   - Unknown word (collision)     -- tObjectProperty(obj, "on_kart_collision", "")
Tools/stk_track.py:2331:24   - Unknown word (collision)     -- if len(on_kart_collision) > 0:
Tools/stk_track.py:2332:35   - Unknown word (collision)     -- flags.append("on-kart-collision=\"%s\""%on_kart_collision
Tools/stk_track.py:2332:61   - Unknown word (collision)     -- collision=\"%s\""%on_kart_collision)
Tools/stk_track.py:2349:37   - Unknown word (ARMATURE)      -- parent and parent.type=="ARMATURE":
Tools/stk_track.py:2363:13   - Unknown word (props)         -- for props in lLODModels:
Tools/stk_track.py:2364:19   - Unknown word (props)         -- obj = props['object']
Tools/stk_track.py:2365:56   - Unknown word (props)         -- exportLocalSPM(obj, sPath, props['filename'], props[
Tools/stk_track.py:2365:75   - Unknown word (props)         -- props['filename'], props['modifiers'])
Tools/stk_track.py:2370:43   - Unknown word (armature)      -- if this object has an armature modifier
Tools/stk_track.py:2372:38   - Unknown word (ARMATURE)      -- if curr_mod.type == 'ARMATURE':
Tools/stk_track.py:2375:86   - Unknown word (animations)    -- second way to do armature animations in blender)
Tools/stk_track.py:2381:17   - Unknown word (additional)    -- additional_prop_str = ' skeletal
Tools/stk_track.py:2383:17   - Unknown word (additional)    -- additional_prop_str = ' skeletal
Tools/stk_track.py:2388:17   - Unknown word (additional)    -- additional_prop_str += " geometry
Tools/stk_track.py:2390:123  - Unknown word (props)         -- interaction=\"%s\"%s/>\n" % (props['distance'], props[
Tools/stk_track.py:2394:7    - Unknown word (physical)      -- # physical).
Tools/stk_track.py:2398:13   - Unknown word (lodstring)     -- lodstring = self.getModelDefinitionStri
Tools/stk_track.py:2401:52   - Unknown word (instead)       -- the exported object (instead of the python name
Tools/stk_track.py:2402:61   - Unknown word (Additionally)  -- name with a number). Additionally, names
Tools/stk_track.py:2403:39   - Unknown word (avoided)       -- cached so it can be avoided to export two or more
Tools/stk_track.py:2403:69   - Unknown word (identical)     -- to export two or more identical
Tools/stk_track.py:2416:31   - Unknown word (lodstring)     -- attributes.append(lodstring)
Tools/stk_track.py:242:23    - Unknown word (animated)      -- f.write(" <animated-texture name=\"%s\"
Tools/stk_track.py:2438:34   - Unknown word (explode)       -- elif interaction == 'explode':
Tools/stk_track.py:2439:36   - Unknown word (explode)       -- attributes.append("explode=\"y\"")
Tools/stk_track.py:2442:32   - Unknown word (physicsonly)   -- if interaction == 'physicsonly':
Tools/stk_track.py:2454:42   - Unknown word (returns)       -- for a given object (returns an empty string if object
Tools/stk_track.py:2460:60   - Unknown word (instancing)    -- getObjectProperty(obj, "instancing", "false") == "true
Tools/stk_track.py:2463:31   - Unknown word (Instancing)    -- log_warning("Instancing object " + obj.name
Tools/stk_track.py:2464:28   - Unknown word (instancing)    -- # lodstring = ' instancing="true" instancing_model
Tools/stk_track.py:2464:46   - Unknown word (instancing)    -- ' instancing="true" instancing_model="' + group +
Tools/stk_track.py:2479:32   - Unknown word (physical)      -- animated meshes, and physical or non-physical.
Tools/stk_track.py:2479:48   - Unknown word (physical)      -- and physical or non-physical.
Tools/stk_track.py:2480:15   - Unknown word (either)        -- # Type is either 'movable' or 'nophysics
Tools/stk_track.py:2480:23   - Unknown word (movable)       -- # Type is either 'movable' or 'nophysics'.
Tools/stk_track.py:2480:36   - Unknown word (nophysics)     -- either 'movable' or 'nophysics'.
Tools/stk_track.py:2487:25   - Unknown word (CAMERA)        -- if obj.type != "CAMERA":
Tools/stk_track.py:2495:23   - Unknown word (CAMERA)        -- if obj.type=="CAMERA":
Tools/stk_track.py:2497:23   - Unknown word (Animation)     -- self.writeAnimationWithIPO(f, "", obj, ipo
Tools/stk_track.py:2503:30   - Unknown word (Movable)       -- log_warning("Movable object %s has an ipo
Tools/stk_track.py:2507:30   - Unknown word (Movable)      -- log_warning("Movable object %s has no shape
Tools/stk_track.py:2507:67   - Unknown word (assumed)      -- s has no shape - box assumed!" \
Tools/stk_track.py:2523:40   - Unknown word (forcedbloom)  -- getObjectProperty(obj, "forcedbloom", "false") == "true
Tools/stk_track.py:2524:31   - Unknown word (forcedbloom)  -- flags.append('forcedbloom="true"')
Tools/stk_track.py:2526:40   - Unknown word (shadowpass)   -- getObjectProperty(obj, "shadowpass", "true") == "false
Tools/stk_track.py:2529:44   - Unknown word (outline)      -- getObjectProperty(obj, "outline", "")) > 0:
Tools/stk_track.py:2530:66   - Unknown word (outline)      -- getObjectProperty(obj, "outline", ""))
Tools/stk_track.py:2532:40   - Unknown word (displacing)   -- getObjectProperty(obj, "displacing", "false") == "true
Tools/stk_track.py:2533:31   - Unknown word (displacing)   -- flags.append('displacing="true"')
Tools/stk_track.py:2535:41   - Unknown word (skyboxobject) -- getObjectProperty(obj, "skyboxobject", "false") == "true
Tools/stk_track.py:2536:32   - Unknown word (renderpass)   -- # flags.append('renderpass="skybox"')
Tools/stk_track.py:2536:44   - Unknown word (skybox)       -- append('renderpass="skybox"')
Tools/stk_track.py:253:3     - Unknown word (Gets)          -- # Gets a custom property of
Tools/stk_track.py:253:31    - Unknown word (scene)         -- custom property of a scene, returning the default
Tools/stk_track.py:253:38    - Unknown word (returning)     -- property of a scene, returning the default if the id
Tools/stk_track.py:2560:86   - Unknown word (animations)   -- second way to do armature animations in blender)
Tools/stk_track.py:256:22    - Unknown word (scene)         -- def getSceneProperty(scene, name, default="", set
Tools/stk_track.py:256:8     - Unknown word (Scene)         -- def getSceneProperty(scene, name
Tools/stk_track.py:2576:38   - Unknown word (movable)      -- write(' <object type="movable" id=\"%s\" %s\n'% (obj
Tools/stk_track.py:2579:26   - Unknown word (either)       -- # Now the object either has an IPO, or is a
Tools/stk_track.py:2579:54   - Unknown word (ghost)        -- has an IPO, or is a 'ghost' object.
Tools/stk_track.py:2580:11   - Unknown word (Either)       -- # Either can have an IPO. Even
Tools/stk_track.py:2580:35   - Unknown word (Even)         -- Either can have an IPO. Even if the objects don't
Tools/stk_track.py:2581:11   - Unknown word (they)         -- # they are saved as animations
Tools/stk_track.py:2581:29   - Unknown word (animations)   -- # they are saved as animations (with 0 IPOs).
Tools/stk_track.py:2582:109  - Unknown word (explode)      -- reset" or interact=="explode" or interact=="flatten
Tools/stk_track.py:2582:155  - Unknown word (physicsonly)  -- flatten" or interact=="physicsonly":
Tools/stk_track.py:2582:25   - Unknown word (ghost)        -- elif interact=="ghost" or interact=="none
Tools/stk_track.py:2592:23   - Unknown word (Animation)    -- self.writeAnimationWithIPO(f, spm_name,
Tools/stk_track.py:2599:14   - Unknown word (Easter)       -- def writeEasterEggsFile(self, sPath
Tools/stk_track.py:2599:43   - Unknown word (Easter)       -- eEasterEggsFile(self, sPath, lEasterEggs):
Tools/stk_track.py:2600:26   - Unknown word (easter)       -- f = open(sPath+"/easter_eggs.xml", "w")
Tools/stk_track.py:2602:23   - Unknown word (Generated)    -- f.write("<!-- Generated with script from SVN
Tools/stk_track.py:2603:19   - Unknown word (Easter)       -- f.write("<EasterEggHunt>\n")
Tools/stk_track.py:2605:18   - Unknown word (Easter)       -- #print("lEasterEggs : ", len(lEasterEggs
Tools/stk_track.py:2605:39   - Unknown word (Easter)       -- lEasterEggs : ", len(lEasterEggs), lEasterEggs);
Tools/stk_track.py:2607:21   - Unknown word (easy)         -- f.write(" <easy>\n")
Tools/stk_track.py:2609:44   - Unknown word (easteregg)    -- getObjectProperty(obj, "easteregg_easy", "false"))
Tools/stk_track.py:2609:54   - Unknown word (easy)         -- bjectProperty(obj, "easteregg_easy", "false"))
Tools/stk_track.py:2610:40   - Unknown word (easteregg)    -- getObjectProperty(obj, "easteregg_easy", "false") ==
Tools/stk_track.py:2610:50   - Unknown word (easy)         -- bjectProperty(obj, "easteregg_easy", "false") == "true
Tools/stk_track.py:2611:31   - Unknown word (easter)       -- f.write(" <easter-egg %s />\n" % getXYZHString
Tools/stk_track.py:2612:22   - Unknown word (easy)         -- f.write(" </easy>\n")
Tools/stk_track.py:2614:21   - Unknown word (medium)       -- f.write(" <medium>\n")
Tools/stk_track.py:2616:44   - Unknown word (easteregg)    -- getObjectProperty(obj, "easteregg_medium", "false"))
Tools/stk_track.py:2616:54   - Unknown word (medium)       -- bjectProperty(obj, "easteregg_medium", "false"))
Tools/stk_track.py:2617:40   - Unknown word (easteregg)    -- getObjectProperty(obj, "easteregg_medium", "false") =
Tools/stk_track.py:2617:50   - Unknown word (medium)       -- bjectProperty(obj, "easteregg_medium", "false") == "true
Tools/stk_track.py:2618:31   - Unknown word (easter)       -- f.write(" <easter-egg %s />\n" % getXYZHString
Tools/stk_track.py:2619:22   - Unknown word (medium)       -- f.write(" </medium>\n")
Tools/stk_track.py:2621:21   - Unknown word (hard)         -- f.write(" <hard>\n")
Tools/stk_track.py:2623:44   - Unknown word (easteregg)    -- getObjectProperty(obj, "easteregg_hard", "false"))
Tools/stk_track.py:2623:54   - Unknown word (hard)         -- bjectProperty(obj, "easteregg_hard", "false"))
Tools/stk_track.py:2624:50   - Unknown word (hard)         -- bjectProperty(obj, "easteregg_hard", "false") == "true
Tools/stk_track.py:2625:31   - Unknown word (easter)       -- f.write(" <easter-egg %s />\n" % getXYZHString
Tools/stk_track.py:2626:22   - Unknown word (hard)         -- f.write(" </hard>\n")
Tools/stk_track.py:2633:49   - Unknown word (exporters)    -- sPath, sTrackName, exporters, lTrack, lObjects, lSun
Tools/stk_track.py:2646:23   - Unknown word (Generated)    -- f.write("<!-- Generated with script from SVN
Tools/stk_track.py:2649:69   - Unknown word (bullet)       -- will be merged into one bullet object in stk):
Tools/stk_track.py:264:62    - Unknown word (xmlcharrefreplace) -- ").encode('ascii', 'xmlcharrefreplace').decode("ascii")
Tools/stk_track.py:2653:11   - Unknown word (Instancing)   -- #lInstancingModels = {}
Tools/stk_track.py:2662:33   - Unknown word (fuzzy)        -- # TODO: remove this fuzzy logic and let the artist
Tools/stk_track.py:2662:39   - Unknown word (logic)        -- TODO: remove this fuzzy logic and let the artist clearly
Tools/stk_track.py:2662:57   - Unknown word (artist)       -- fuzzy logic and let the artist clearly decide what
Tools/stk_track.py:2662:64   - Unknown word (clearly)      -- logic and let the artist clearly decide what is exported
Tools/stk_track.py:2662:72   - Unknown word (decide)       -- let the artist clearly decide what is exported in
Tools/stk_track.py:2663:44   - Unknown word (exporter)     -- main model and what is exporter separately
Tools/stk_track.py:2663:53   - Unknown word (separately)   -- and what is exporter separately
Tools/stk_track.py:2665:40   - Unknown word (forcedbloom)  -- getObjectProperty(obj, "forcedbloom", "false") == "true
Tools/stk_track.py:2667:42   - Unknown word (shadowpass)   -- getObjectProperty(obj, "shadowpass", "true") == "false
Tools/stk_track.py:2669:46   - Unknown word (outline)      -- getObjectProperty(obj, "outline", "")) > 0:
Tools/stk_track.py:2671:42   - Unknown word (displacing)   -- getObjectProperty(obj, "displacing", "false") == "true
Tools/stk_track.py:2673:43   - Unknown word (skyboxobject) -- getObjectProperty(obj, "skyboxobject", "false") == "true
Tools/stk_track.py:2686:62   - Unknown word (instancing)   -- getObjectProperty(obj, "instancing", "false") == "true
Tools/stk_track.py:2688:22   - Unknown word (instancing)   -- # instancing_name = getObjectProperty
Tools/stk_track.py:2690:49   - Unknown word (marked)       -- log_warning('Object %s marked as instancing has no
Tools/stk_track.py:2692:23   - Unknown word (Instancing)   -- # lInstancingModels[instancing_name
Tools/stk_track.py:2695:45   - Unknown word (marked)       -- log_warning('Object %s marked as instancing. Instancing
Tools/stk_track.py:2695:67   - Unknown word (Instancing)   -- marked as instancing. Instancing only works with library
Tools/stk_track.py:2700:44   - Unknown word (marked)       -- log_warning('Object %s marked as LOD but no LOD name
Tools/stk_track.py:2706:17   - Unknown word (loddistance)  -- loddistance = getObjectProperty
Tools/stk_track.py:2708:100  - Unknown word (loddistance)  -- group_name, 'distance': loddistance, 'filename': lod_model
Tools/stk_track.py:2718:44   - Unknown word (nomodifierautolod) -- getObjectProperty(obj, "nomodifierautolod", "false") == "true
Tools/stk_track.py:2719:21   - Unknown word (loddistance)       -- loddistance = getObjectProperty
Tools/stk_track.py:2719:59   - Unknown word (nomodierlod)       -- getObjectProperty(obj, "nomodierlod_distance", 30.0)
Tools/stk_track.py:2720:104  - Unknown word (loddistance)       -- group_name, 'distance': loddistance, 'filename': lod_model
Tools/stk_track.py:2721:21   - Unknown word (loddistance)       -- loddistance = getObjectProperty
Tools/stk_track.py:2734:101  - Unknown word (physicsonly)       -- model" or interact=="physicsonly"):
Tools/stk_track.py:273:3     - Unknown word (Gets)              -- # Gets a custom property of
Tools/stk_track.py:2760:18   - Unknown word (Instancing)        -- #if len(lInstancingModels.keys()) > 0:
Tools/stk_track.py:2779:11   - Unknown word (Subtitles)         -- # Subtitles
Tools/stk_track.py:2780:9    - Unknown word (subtitles)         -- subtitles = []
Tools/stk_track.py:2782:60   - Unknown word (markers)           -- data.scenes[0].timeline_markers):
Tools/stk_track.py:2783:40   - Unknown word (subtitle)          -- marker.name.startswith("subtitle"):
Tools/stk_track.py:2784:17   - Unknown word (subtitle)          -- subtitle_text = bpy.data.scenes
Tools/stk_track.py:2785:17   - Unknown word (subtitles)         -- subtitles.insert(0, [marker.frame
Tools/stk_track.py:2785:66   - Unknown word (subtitle)          -- frame, end_time - 1, subtitle_text])
Tools/stk_track.py:2788:16   - Unknown word (subtitles)         -- if len(subtitles) > 0:
Tools/stk_track.py:2789:25   - Unknown word (subtitles)         -- f.write(" <subtitles>\n")
Tools/stk_track.py:2791:17   - Unknown word (subtitle)          -- for subtitle in subtitles:
Tools/stk_track.py:2791:29   - Unknown word (subtitles)         -- for subtitle in subtitles:
Tools/stk_track.py:2792:35   - Unknown word (subtitle)          -- f.write(" <subtitle from=\"%i\" to=\"%i
Tools/stk_track.py:2797:11   - Unknown word (Assemble)          -- # Assemble all sky/fog related
Tools/stk_track.py:2823:39   - Unknown word (specular)          -- getObjectProperty(sun, "specular", 0)
Tools/stk_track.py:2824:32   - Unknown word (specular)          -- if s: sSky="%s sun-specular=\"%s\""%(sSky, s)
Tools/stk_track.py:2825:39   - Unknown word (diffuse)           -- getObjectProperty(sun, "diffuse", 0)
Tools/stk_track.py:2826:32   - Unknown word (diffuse)           -- if s: sSky="%s sun-diffuse=\"%s\""%(sSky, s)
Tools/stk_track.py:2837:9    - Unknown word (weather)           -- weather = ""
Tools/stk_track.py:2838:49   - Unknown word (weather)           -- getSceneProperty(scene, "weather_type", "none")
Tools/stk_track.py:2838:9    - Unknown word (weather)           -- weather_type = getSceneProperty
Tools/stk_track.py:2839:12   - Unknown word (weather)           -- if weather_type != "none":
Tools/stk_track.py:2840:16   - Unknown word (weather)           -- if weather_type[:4] != ".xml":
Tools/stk_track.py:2842:25   - Unknown word (particles)         -- weather = " particles=\"" + weather_type
Tools/stk_track.py:2844:54   - Unknown word (lightning)         -- SceneProperty(scene, "weather_lightning", "false")
Tools/stk_track.py:2844:9    - Unknown word (lightning)         -- lightning = getSceneProperty(scene
Tools/stk_track.py:2845:12   - Unknown word (lightning)         -- if lightning == "true":
Tools/stk_track.py:2846:35   - Unknown word (lightning)         -- weather = weather + " lightning=\"true\""
Tools/stk_track.py:2848:17   - Unknown word (sound)             -- weather_sound = getSceneProperty(scene
Tools/stk_track.py:2848:58   - Unknown word (sound)             -- SceneProperty(scene, "weather_sound", "")
Tools/stk_track.py:2861:18   - Unknown word (Harmonics)         -- sphericalHarmonicsStr = ""
Tools/stk_track.py:2861:9    - Unknown word (spherical)         -- sphericalHarmonicsStr = ""
Tools/stk_track.py:2862:37   - Unknown word (ambientmap)        -- getSceneProperty(scene, "ambientmap", "false") == "true
Tools/stk_track.py:2863:13   - Unknown word (spherical)         -- sphericalHarmonicsTextures =
Tools/stk_track.py:2863:22   - Unknown word (Harmonics)         -- sphericalHarmonicsTextures = []
Tools/stk_track.py:2864:42   - Unknown word (ambientmap)        -- getSceneProperty(scene, "ambientmap_texture2", "")
Tools/stk_track.py:2865:28   - Unknown word (spherical)         -- if len(s) > 0: sphericalHarmonicsTextures.append
Tools/stk_track.py:2865:37   - Unknown word (Harmonics)         -- len(s) > 0: sphericalHarmonicsTextures.append(s)
Tools/stk_track.py:2866:42   - Unknown word (ambientmap)        -- getSceneProperty(scene, "ambientmap_texture3", "")
Tools/stk_track.py:2867:28   - Unknown word (spherical)         -- if len(s) > 0: sphericalHarmonicsTextures.append
Tools/stk_track.py:2867:37   - Unknown word (Harmonics)         -- len(s) > 0: sphericalHarmonicsTextures.append(s)
Tools/stk_track.py:2868:42   - Unknown word (ambientmap)        -- getSceneProperty(scene, "ambientmap_texture4", "")
Tools/stk_track.py:2869:28   - Unknown word (spherical)         -- if len(s) > 0: sphericalHarmonicsTextures.append
Tools/stk_track.py:2869:37   - Unknown word (Harmonics)         -- len(s) > 0: sphericalHarmonicsTextures.append(s)
Tools/stk_track.py:2870:42   - Unknown word (ambientmap)        -- getSceneProperty(scene, "ambientmap_texture5", "")
Tools/stk_track.py:2879:50   - Unknown word (textures)          -- Invalid ambient map textures')
Tools/stk_track.py:2882:21   - Unknown word (easily)            -- # which can easily be exceeded by 6 sky
Tools/stk_track.py:2882:31   - Unknown word (exceeded)          -- which can easily be exceeded by 6 sky textures for
Tools/stk_track.py:2882:49   - Unknown word (textures)          -- be exceeded by 6 sky textures for a full sky box.
Tools/stk_track.py:2883:11   - Unknown word (Therefore)         -- # Therefore also check for sky-texture
Tools/stk_track.py:288:3     - Unknown word (Returns)           -- # Returns a string 'x="1" y="
Tools/stk_track.py:2890:22   - Unknown word (dome)              -- if sky=="dome":
Tools/stk_track.py:2891:17   - Unknown word (hori)              -- hori = getSceneProperty
Tools/stk_track.py:2892:17   - Unknown word (verti)             -- verti = getSceneProperty
Tools/stk_track.py:2894:17   - Unknown word (sphere)            -- sphere_percent = getSceneProperty
Tools/stk_track.py:2898:8    - Unknown word (dome)              -- <sky-dome texture=\"%s\" %s
Tools/stk_track.py:289:32    - Unknown word (given)             -- and rotation of the given object. The location
Tools/stk_track.py:289:65    - Unknown word (swapped)           -- The location has a swapped
Tools/stk_track.py:28:1      - Unknown word (track)        -- track_tesselated_objects
Tools/stk_track.py:28:7      - Unknown word (tesselated)   -- track_tesselated_objects = {}
Tools/stk_track.py:2902:39   - Unknown word (hori)             -- sphericalHarmonicsStr, hori, verti, tex_percent
Tools/stk_track.py:2902:45   - Unknown word (verti)            -- sphericalHarmonicsStr, hori, verti, tex_percent, sphere
Tools/stk_track.py:290:11    - Unknown word (axis)              -- # y and z axis (so that the same coordinate
Tools/stk_track.py:290:20    - Unknown word (that)              -- # y and z axis (so that the same coordinate
Tools/stk_track.py:290:34    - Unknown word (coordinate)        -- axis (so that the same coordinate system as in-game is
Tools/stk_track.py:2916:25   - Unknown word (exporters)        -- for exporter in exporters:
Tools/stk_track.py:291:8     - Unknown word (XYZH)              -- def getXYZHString(obj):
Tools/stk_track.py:2925:15   - Unknown word (Exported)         -- self.dExportedObjects = {}
Tools/stk_track.py:293:28    - Unknown word (euler)             -- hpr = obj.rotation_euler
Tools/stk_track.py:2940:24   - Unknown word (Deleting)         -- print("Deleting ", f)
Tools/stk_track.py:2943:9    - Unknown word (blendfile)        -- blendfile_dir = os.path.dirname
Tools/stk_track.py:2953:65   - Unknown word (blendfile)        -- , abs_texture_path, blendfile_dir)
Tools/stk_track.py:2954:61   - Unknown word (blendfile)        -- subdir(abs_texture_path, blendfile_dir):
Tools/stk_track.py:2963:103  - Unknown word (Hair)             -- icleEmitterExporter(), BlenderHairExporter(), SoundEmitterExport
Tools/stk_track.py:2963:119  - Unknown word (Sound)            -- BlenderHairExporter(), SoundEmitterExporter(),
Tools/stk_track.py:2963:124  - Unknown word (Emitter)          -- BlenderHairExporter(), SoundEmitterExporter(),
Tools/stk_track.py:2963:69   - Unknown word (Particle)         -- WaterExporter(self, sPath), ParticleEmitterExporter(), BlenderHair
Tools/stk_track.py:2963:77   - Unknown word (Emitter)          -- self, sPath), ParticleEmitterExporter(), BlenderHairExporte
Tools/stk_track.py:2963:9    - Unknown word (exporters)        -- exporters = [drivelineExporter
Tools/stk_track.py:2963:96   - Unknown word (Blender)          -- ParticleEmitterExporter(), BlenderHairExporter(), SoundEmitterEx
Tools/stk_track.py:2964:108  - Unknown word (Shaft)            -- LightsExporter(), LightShaftExporter(),
Tools/stk_track.py:2964:85   - Unknown word (Lights)           -- BillboardExporter(), LightsExporter(), LightShaftExporter
Tools/stk_track.py:2967:62   - Unknown word (handles)          -- meshes this exporter handles
Tools/stk_track.py:2971:10   - Unknown word (Camera)           -- lCameraCurves = []
Tools/stk_track.py:2971:56   - Unknown word (Camera)           -- # Camera curves (unused atm)
Tools/stk_track.py:2977:30   - Unknown word (supertuxkart)     -- # Try to get the supertuxkart type field. If it's
Tools/stk_track.py:2983:23   - Unknown word (possible)         -- # Make it possible to ignore certain objects
Tools/stk_track.py:2983:42   - Unknown word (certain)          -- it possible to ignore certain objects, e.g. if you
Tools/stk_track.py:2985:15   - Unknown word (copied)           -- # copied into the main track
Tools/stk_track.py:2993:26   - Unknown word (EASTEREGG)        -- if stktype=="EASTEREGG":
Tools/stk_track.py:2998:29   - Unknown word (exporters)        -- for exporter in exporters:
Tools/stk_track.py:3005:27   - Unknown word (LAMP)             -- if obj.type=="LAMP" and stktype == "SUN
Tools/stk_track.py:3008:29   - Unknown word (CAMERA)           -- elif obj.type=="CAMERA" and stktype == 'CUTSCENE
Tools/stk_track.py:3008:53   - Unknown word (CUTSCENE)         -- CAMERA" and stktype == 'CUTSCENE_CAMERA':
Tools/stk_track.py:3008:62   - Unknown word (CAMERA)           -- stktype == 'CUTSCENE_CAMERA':
Tools/stk_track.py:300:3     - Unknown word (Returns)           -- # Returns a string 'xyz="1 2
Tools/stk_track.py:3017:28   - Unknown word (CANNONEND)        -- elif stktype=="CANNONEND":
Tools/stk_track.py:3018:40   - Unknown word (handled)          -- pass # cannon ends are handled with cannon start objects
Tools/stk_track.py:301:32    - Unknown word (given)             -- and rotation of the given object. The location
Tools/stk_track.py:301:65    - Unknown word (swapped)           -- The location has a swapped
Tools/stk_track.py:302:11    - Unknown word (axis)              -- # y and z axis (so that the same coordinate
Tools/stk_track.py:302:20    - Unknown word (that)              -- # y and z axis (so that the same coordinate
Tools/stk_track.py:302:34    - Unknown word (coordinate)        -- axis (so that the same coordinate system as in-game is
Tools/stk_track.py:303:11    - Unknown word (XYZH)              -- def getNewXYZHString(obj):
Tools/stk_track.py:305:28    - Unknown word (euler)             -- hpr = obj.rotation_euler
Tools/stk_track.py:3060:28   - Unknown word (ugly)             -- # FIXME: silly and ugly hack, the list of objects
Tools/stk_track.py:3060:33   - Unknown word (hack)             -- FIXME: silly and ugly hack, the list of objects
Tools/stk_track.py:3060:72   - Unknown word (passed)           -- objects to export is passed through
Tools/stk_track.py:3069:39   - Unknown word (localsp)          -- ops.screen.spm_export(localsp=False, filepath=sPath
Tools/stk_track.py:3070:46   - Unknown word (tangent)          -- export_tangent=getSceneProperty(scene
Tools/stk_track.py:3070:79   - Unknown word (precalculate)     -- getSceneProperty(scene, 'precalculate_tangents', 'false')
Tools/stk_track.py:3070:92   - Unknown word (tangents)         -- scene, 'precalculate_tangents', 'false') == 'true
Tools/stk_track.py:3071:39   - Unknown word (overwrite)        -- overwrite_without_asking=True
Tools/stk_track.py:3071:57   - Unknown word (asking)           -- overwrite_without_asking=True)
Tools/stk_track.py:3082:52   - Unknown word (exporters)        -- eSceneFile(sPath, sTrackName, exporters, lTrack, lObjects, lSun
Tools/stk_track.py:30:11     - Unknown word (tesselate)    -- def track_tesselate_if_needed(objdata):
Tools/stk_track.py:30:31     - Unknown word (objdata)      -- tesselate_if_needed(objdata):
Tools/stk_track.py:30:5      - Unknown word (track)        -- def track_tesselate_if_needed
Tools/stk_track.py:3104:5    - Unknown word (savescene)        -- def savescene_callback(sFilename,
Tools/stk_track.py:3110:1    - Unknown word (thelist)          -- thelist = []
Tools/stk_track.py:3112:12   - Unknown word (thelist)          -- global thelist
Tools/stk_track.py:3113:12   - Unknown word (thelist)          -- return thelist
Tools/stk_track.py:3115:12   - Unknown word (thelist)          -- global thelist
Tools/stk_track.py:3116:5    - Unknown word (thelist)          -- thelist = value
Tools/stk_track.py:3120:8    - Unknown word (idname)           -- bl_idname = ("screen.stk_track
Tools/stk_track.py:3121:26   - Unknown word (Kart)             -- bl_label = ("SuperTuxKart Track Export")
Tools/stk_track.py:312:3     - Unknown word (Returns)           -- # Returns a string 'xyz="1 2
Tools/stk_track.py:313:32    - Unknown word (given)             -- and rotation of the given object. The location
Tools/stk_track.py:313:65    - Unknown word (swapped)           -- The location has a swapped
Tools/stk_track.py:3143:41   - Unknown word (Please)           -- self.report({'ERROR'}, "Please specify a name")
Tools/stk_track.py:3143:48   - Unknown word (specify)          -- report({'ERROR'}, "Please specify a name")
Tools/stk_track.py:3144:28   - Unknown word (Please)           -- log_error("Please specify a name")
Tools/stk_track.py:3144:35   - Unknown word (specify)          -- log_error("Please specify a name")
Tools/stk_track.py:3149:41   - Unknown word (Please)           -- self.report({'ERROR'}, "Please specify a code name
Tools/stk_track.py:3149:48   - Unknown word (specify)          -- report({'ERROR'}, "Please specify a code name (folder
Tools/stk_track.py:314:11    - Unknown word (axis)              -- # y and z axis (so that the same coordinate
Tools/stk_track.py:314:20    - Unknown word (that)              -- # y and z axis (so that the same coordinate
Tools/stk_track.py:314:34    - Unknown word (coordinate)        -- axis (so that the same coordinate system as in-game is
Tools/stk_track.py:3150:28   - Unknown word (Please)           -- log_error("Please specify a code name
Tools/stk_track.py:3150:35   - Unknown word (specify)          -- log_error("Please specify a code name (folder
Tools/stk_track.py:315:17    - Unknown word (multiplied)        -- # rotations are multiplied by 10 (since bullet
Tools/stk_track.py:315:3     - Unknown word (rotations)         -- # rotations are multiplied by 1
Tools/stk_track.py:315:35    - Unknown word (since)             -- are multiplied by 10 (since bullet stores the values
Tools/stk_track.py:315:41    - Unknown word (bullet)            -- multiplied by 10 (since bullet stores the values in
Tools/stk_track.py:3161:37   - Unknown word (Please)           -- self.report({'ERROR'}, "Please select the export path
Tools/stk_track.py:317:8     - Unknown word (XYZHPR)            -- def getXYZHPRString(obj):
Tools/stk_track.py:3192:37   - Unknown word (fileselect)       -- context.window_manager.fileselect_add(self)
Tools/stk_track.py:319:7     - Unknown word (irrlicht)          -- # irrlicht uses XZY
Tools/stk_track.py:31:23     - Unknown word (track)        -- if objdata not in track_tesselated_objects:
Tools/stk_track.py:31:29     - Unknown word (tesselated)   -- objdata not in track_tesselated_objects:
Tools/stk_track.py:31:8      - Unknown word (objdata)      -- if objdata not in track_tesselated
Tools/stk_track.py:3209:28   - Unknown word (ugly)             -- # FIXME: silly and ugly hack, the list of objects
Tools/stk_track.py:3209:33   - Unknown word (hack)             -- FIXME: silly and ugly hack, the list of objects
Tools/stk_track.py:3209:72   - Unknown word (passed)           -- objects to export is passed through
Tools/stk_track.py:320:28    - Unknown word (euler)             -- hpr = obj.rotation_euler.to_quaternion().to_euler
Tools/stk_track.py:320:37    - Unknown word (quaternion)        -- obj.rotation_euler.to_quaternion().to_euler('XZY')
Tools/stk_track.py:3214:9    - Unknown word (savescene)        -- savescene_callback(self.filepath
Tools/stk_track.py:3219:8    - Unknown word (idname)           -- bl_idname = ("screen.stk_track
Tools/stk_track.py:3228:8    - Unknown word (idname)          -- bl_idname = ("screen.stk_track
Tools/stk_track.py:3237:17   - Unknown word (Picker)          -- class STK_FolderPicker_Operator(bpy.types.Operator
Tools/stk_track.py:3238:8    - Unknown word (idname)          -- bl_idname = "screen.stk_pick_assets
Tools/stk_track.py:3239:36   - Unknown word (Kart)            -- "Select the SuperTuxKart assets (data) folder
Tools/stk_track.py:3251:15   - Unknown word (prefs)           -- addon_prefs = user_preferences.addons
Tools/stk_track.py:3252:15   - Unknown word (prefs)           -- addon_prefs.stk_assets_path = os
Tools/stk_track.py:3253:25   - Unknown word (userpref)        -- bpy.ops.wm.save_userpref()
Tools/stk_track.py:3257:32   - Unknown word (fileselect)      -- context.window_manager.fileselect_add(self)
Tools/stk_track.py:3261:8    - Unknown word (TRACK)           -- # ==== TRACK EXPORT PANEL ====
Tools/stk_track.py:3292:38   - Unknown word (please)          -- label('Assets path: [please select path]')
Tools/stk_track.py:3293:59   - Unknown word (FILESEL)         -- assets_path', icon='FILESEL', text='')
Tools/stk_track.py:32:22     - Unknown word (tessface)     -- objdata.calc_tessface()
Tools/stk_track.py:32:9      - Unknown word (objdata)      -- objdata.calc_tessface()
Tools/stk_track.py:3304:75   - Unknown word (BLENDER)         -- Export track", icon='BLENDER')
Tools/stk_track.py:3306:82   - Unknown word (BLENDER)         -- library node", icon='BLENDER')
Tools/stk_track.py:3333:79   - Unknown word (COPYDOWN)        -- text="Copy Log", icon='COPYDOWN')
Tools/stk_track.py:3337:22   - Unknown word (stktrack)        -- def menu_func_export_stktrack(self, context):
Tools/stk_track.py:3340:55   - Unknown word (idname)          -- Track_Export_Operator.bl_idname, text="STK Track")
Tools/stk_track.py:3344:59   - Unknown word (stktrack)        -- append(menu_func_export_stktrack)
Tools/stk_track.py:3348:59   - Unknown word (stktrack)        -- remove(menu_func_export_stktrack)
Tools/stk_track.py:336:17    - Unknown word (ways)              -- # Write several ways of writing true/false
Tools/stk_track.py:33:15     - Unknown word (tesselated)   -- track_tesselated_objects[objdata] = True
Tools/stk_track.py:33:34     - Unknown word (objdata)      -- track_tesselated_objects[objdata] = True
Tools/stk_track.py:346:12    - Unknown word (Exporter)          -- class WaterExporter:
Tools/stk_track.py:348:30    - Unknown word (Track)             -- _init__(self, parentTrackExporter, sPath):
Tools/stk_track.py:348:35    - Unknown word (Exporter)          -- init__(self, parentTrackExporter, sPath):
Tools/stk_track.py:349:29    - Unknown word (exporter)          -- self.m_parent_track_exporter = parentTrackExporter
Tools/stk_track.py:349:46    - Unknown word (Track)             -- track_exporter = parentTrackExporter;
Tools/stk_track.py:349:51    - Unknown word (Exporter)          -- exporter = parentTrackExporter;
Tools/stk_track.py:34:12     - Unknown word (objdata)      -- return objdata
Tools/stk_track.py:353:37    - Unknown word (stktype)           -- processObject(self, object, stktype):
Tools/stk_track.py:354:12    - Unknown word (stktype)           -- if stktype=="WATER":
Tools/stk_track.py:369:32    - Unknown word (Animated)          -- lAnim = checkForAnimatedTextures([obj])
Tools/stk_track.py:370:44    - Unknown word (exporter)          -- self.m_parent_track_exporter.exportLocalSPM(obj,
Tools/stk_track.py:371:60    - Unknown word (XYZHPR)            -- %s" % (spm_name, getXYZHPRString(obj))
Tools/stk_track.py:377:22    - Unknown word (Animated)          -- writeAnimatedTextures(f, lAnim)
Tools/stk_track.py:37:16     - Unknown word (blender)      -- # BMesh in blender 2.63 broke this
Tools/stk_track.py:37:29     - Unknown word (broke)        -- BMesh in blender 2.63 broke this
Tools/stk_track.py:389:37    - Unknown word (stktype)           -- processObject(self, object, stktype):
Tools/stk_track.py:393:23    - Unknown word (that)              -- # in case that there is no type property
Tools/stk_track.py:393:28    - Unknown word (there)             -- # in case that there is no type property
Tools/stk_track.py:393:68    - Unknown word (makes)             -- property defined. This makes
Tools/stk_track.py:394:18    - Unknown word (easier)            -- # it easier to port old style tracks
Tools/stk_track.py:394:58    - Unknown word (having)            -- style tracks without having to
Tools/stk_track.py:396:13    - Unknown word (stktype)           -- stktype = getObjectProperty
Tools/stk_track.py:398:16    - Unknown word (stktype)           -- if stktype[:8] in ["GHERRING",
Tools/stk_track.py:398:33    - Unknown word (GHERRING)          -- if stktype[:8] in ["GHERRING", "RHERRING", "YHERRING
Tools/stk_track.py:398:45    - Unknown word (RHERRING)          -- 8] in ["GHERRING", "RHERRING", "YHERRING", "SHERRING
Tools/stk_track.py:398:57    - Unknown word (YHERRING)          -- GHERRING", "RHERRING", "YHERRING", "SHERRING"] \
Tools/stk_track.py:398:69    - Unknown word (SHERRING)          -- RHERRING", "YHERRING", "SHERRING"] \
Tools/stk_track.py:399:36    - Unknown word (BANANA)            -- or stktype[: 6]== "BANANA" or stktype[:4]
Tools/stk_track.py:39:22     - Unknown word (tesselate)    -- return track_tesselate_if_needed(obj_data)
Tools/stk_track.py:39:52     - Unknown word (tessfaces)    -- if_needed(obj_data).tessfaces
Tools/stk_track.py:400:35    - Unknown word (NITRO)             -- or stktype[:11]=="NITRO-SMALL" or stktype[:
Tools/stk_track.py:400:65    - Unknown word (NITRO)             -- SMALL" or stktype[:9]=="NITRO-BIG" \
Tools/stk_track.py:401:35    - Unknown word (NITRO)             -- or stktype[:11]=="NITRO_SMALL" or stktype[:
Tools/stk_track.py:401:65    - Unknown word (NITRO)            -- SMALL" or stktype[:9]=="NITRO_BIG" \
Tools/stk_track.py:402:41    - Unknown word (NITRO)            -- stktype[:11]=="SMALL-NITRO" or stktype[:9]=="BIG
Tools/stk_track.py:403:35    - Unknown word (ZIPPER)           -- or stktype[: 6]=="ZIPPER":
Tools/stk_track.py:412:21    - Unknown word (Scene)            -- is_ctf = getSceneProperty(scene, "ctf
Tools/stk_track.py:417:56    - Unknown word (means)            -- old style item, which means the
Tools/stk_track.py:421:59    - Unknown word (appended)         -- : # Remove number appended by blender
Tools/stk_track.py:426:19    - Unknown word (Portability)      -- # Portability for old models:
Tools/stk_track.py:434:32    - Unknown word (GHERRING)         -- if item_type=="GHERRING": item_type="banana
Tools/stk_track.py:434:54    - Unknown word (banana)           -- GHERRING": item_type="banana"
Tools/stk_track.py:435:32    - Unknown word (RHERRING)         -- if item_type=="RHERRING": item_type="item"
Tools/stk_track.py:436:32    - Unknown word (YHERRING)         -- if item_type=="YHERRING": item_type="big-nitro
Tools/stk_track.py:436:58    - Unknown word (nitro)            -- YHERRING": item_type="big-nitro"
Tools/stk_track.py:437:32    - Unknown word (SHERRING)         -- if item_type=="SHERRING": item_type="small-nitro
Tools/stk_track.py:437:60    - Unknown word (nitro)            -- SHERRING": item_type="small-nitro"
Tools/stk_track.py:439:32    - Unknown word (nitro)            -- if item_type=="nitro-big": item_type="big
Tools/stk_track.py:439:59    - Unknown word (nitro)            -- big": item_type="big-nitro"
Tools/stk_track.py:43:16     - Unknown word (Textures)     -- def track_getUVTextures(obj_data):
Tools/stk_track.py:440:32    - Unknown word (nitro)            -- if item_type=="nitro_big": item_type="big
Tools/stk_track.py:445:18    - Unknown word (dropped)          -- # be dropped on the track, or stay
Tools/stk_track.py:445:43    - Unknown word (stay)             -- dropped on the track, or stay at the position indicated
Tools/stk_track.py:445:64    - Unknown word (indicated)        -- stay at the position indicated.
Tools/stk_track.py:449:13    - Unknown word (drop)             -- drop = getObjectProperty
Tools/stk_track.py:449:48    - Unknown word (dropitem)         -- getObjectProperty(obj, "dropitem", "true").lower()
Tools/stk_track.py:44:16     - Unknown word (blender)      -- # BMesh in blender 2.63 broke this
Tools/stk_track.py:44:29     - Unknown word (broke)        -- BMesh in blender 2.63 broke this
Tools/stk_track.py:450:28    - Unknown word (axis)             -- # Swap y and z axis to have the same coordinate
Tools/stk_track.py:450:50    - Unknown word (coordinate)       -- axis to have the same coordinate system used in game
Tools/stk_track.py:453:16    - Unknown word (drop)             -- if drop=="false":
Tools/stk_track.py:454:19    - Unknown word (Pitch)            -- # Pitch and roll will be set
Tools/stk_track.py:454:29    - Unknown word (roll)             -- # Pitch and roll will be set automatically
Tools/stk_track.py:454:46    - Unknown word (automatically)    -- and roll will be set automatically if dropped
Tools/stk_track.py:454:63    - Unknown word (dropped)          -- set automatically if dropped
Tools/stk_track.py:457:23    - Unknown word (drop)             -- s="%s drop=\"false\""%s
Tools/stk_track.py:463:15    - Unknown word (Emitter)          -- class ParticleEmitterExporter:
Tools/stk_track.py:463:7     - Unknown word (Particle)         -- class ParticleEmitterExporter:
Tools/stk_track.py:46:22     - Unknown word (tesselate)    -- return track_tesselate_if_needed(obj_data)
Tools/stk_track.py:46:52     - Unknown word (tessface)     -- if_needed(obj_data).tessface_uv_textures
Tools/stk_track.py:46:64     - Unknown word (textures)     -- obj_data).tessface_uv_textures
Tools/stk_track.py:470:47    - Unknown word (PARTICLE)         -- EMPTY" and stktype=="PARTICLE_EMITTER":
Tools/stk_track.py:470:56    - Unknown word (EMITTER)          -- and stktype=="PARTICLE_EMITTER":
Tools/stk_track.py:479:35    - Unknown word (XYZH)             -- originXYZ = getNewXYZHString(obj)
Tools/stk_track.py:482:48    - Unknown word (particle)         -- getObjectProperty(obj, "particle_condition", "")) >
Tools/stk_track.py:483:75    - Unknown word (particle)         -- getObjectProperty(obj, "particle_condition", "") + '
Tools/stk_track.py:485:44    - Unknown word (clip)             -- getObjectProperty(obj, "clip_distance", 0) > 0 :
Tools/stk_track.py:486:35    - Unknown word (clip)             -- flags.append('clip_distance="%i"' % getObjectPro
Tools/stk_track.py:486:81    - Unknown word (clip)             -- getObjectProperty(obj, "clip_distance", 0))
Tools/stk_track.py:48:28     - Unknown word (textures)     -- return obj_data.uv_textures
Tools/stk_track.py:491:29    - Unknown word (particle)         -- f.write(' <particle-emitter kind="%s" id
Tools/stk_track.py:491:38    - Unknown word (emitter)          -- f.write(' <particle-emitter kind="%s" id=\"%s\"
Tools/stk_track.py:494:119   - Unknown word (animation)        -- fcurves and len(obj.animation_data.action.fcurves
Tools/stk_track.py:494:24    - Unknown word (animation)        -- if obj.animation_data and obj.animation
Tools/stk_track.py:494:47    - Unknown word (animation)        -- animation_data and obj.animation_data.action and obj
Tools/stk_track.py:494:77    - Unknown word (animation)        -- data.action and obj.animation_data.action.fcurves
Tools/stk_track.py:494:99    - Unknown word (fcurves)          -- animation_data.action.fcurves and len(obj.animation
Tools/stk_track.py:497:30    - Unknown word (particle)         -- f.write(' </particle-emitter>\n')
Tools/stk_track.py:497:39    - Unknown word (emitter)          -- write(' </particle-emitter>\n')
Tools/stk_track.py:499:36    - Unknown word (particle)         -- log_error("Invalid particle emitter <" + getObjectPropert
Tools/stk_track.py:499:45    - Unknown word (emitter)          -- error("Invalid particle emitter <" + getObjectProperty
Tools/stk_track.py:4:12      - Unknown word (Track)      -- Name: 'STK Track Exporter (.track)..
Tools/stk_track.py:4:18      - Unknown word (Exporter)   -- Name: 'STK Track Exporter (.track)...'
Tools/stk_track.py:4:29      - Unknown word (track)      -- STK Track Exporter (.track)...'
Tools/stk_track.py:502:11    - Unknown word (hair)             -- # Blender hair systems are usually
Tools/stk_track.py:502:28    - Unknown word (usually)          -- Blender hair systems are usually used to automate the
Tools/stk_track.py:502:3     - Unknown word (Blender)          -- # Blender hair systems are usually
Tools/stk_track.py:502:44    - Unknown word (automate)         -- are usually used to automate the placement of plants
Tools/stk_track.py:502:70    - Unknown word (plants)           -- automate the placement of plants on the ground
Tools/stk_track.py:503:14    - Unknown word (Hair)             -- class BlenderHairExporter:
Tools/stk_track.py:503:7     - Unknown word (Blender)          -- class BlenderHairExporter:
Tools/stk_track.py:511:57    - Unknown word (EMITTER)          -- ].settings.type == 'EMITTER':
Tools/stk_track.py:512:53    - Unknown word (dupli)            -- systems[0].settings.dupli_object is not None)
Tools/stk_track.py:513:138   - Unknown word (dupli)            -- systems[0].settings.dupli_object, "type", "")
Tools/stk_track.py:513:53    - Unknown word (dupli)            -- systems[0].settings.dupli_group is not None):
Tools/stk_track.py:516:30    - Unknown word (Ignoring)         -- log_warning("Ignoring invalid hair system
Tools/stk_track.py:516:47    - Unknown word (hair)             -- warning("Ignoring invalid hair system <%s>" % object
Tools/stk_track.py:518:47    - Unknown word (that)             -- always return false so that the object is exported
Tools/stk_track.py:518:66    - Unknown word (exported)        -- so that the object is exported normally as a mesh too
Tools/stk_track.py:518:75    - Unknown word (normally)        -- the object is exported normally as a mesh too
Tools/stk_track.py:51:22     - Unknown word (Kart)         -- "name": "SuperTuxKart Track Exporter",
Tools/stk_track.py:51:27     - Unknown word (Track)        -- name": "SuperTuxKart Track Exporter",
Tools/stk_track.py:51:33     - Unknown word (Exporter)     -- "SuperTuxKart Track Exporter",
Tools/stk_track.py:527:110   - Unknown word (particles)       -- len(particleSystem.particles)))
Tools/stk_track.py:527:33    - Unknown word (Hair)            -- f.write(' <!-- Hair system %s, contains
Tools/stk_track.py:527:61    - Unknown word (particles)       -- system %s, contains %i particles -->\n' % (obj.name,
Tools/stk_track.py:529:48    - Unknown word (particles)       -- particle in particleSystem.particles:
Tools/stk_track.py:52:31     - Unknown word (blender)      -- description": "Exports a blender scene to the SuperTuxKart
Tools/stk_track.py:52:39     - Unknown word (scene)        -- "Exports a blender scene to the SuperTuxKart
Tools/stk_track.py:52:60     - Unknown word (Kart)         -- scene to the SuperTuxKart track format",
Tools/stk_track.py:531:25    - Unknown word (duplicated)      -- duplicated_obj = particleSystem
Tools/stk_track.py:531:66    - Unknown word (dupli)           -- particleSystem.settings.dupli_object
Tools/stk_track.py:532:23    - Unknown word (Currently)       -- # Currently we only support random
Tools/stk_track.py:532:56    - Unknown word (picking)         -- only support random picking from the group
Tools/stk_track.py:534:64    - Unknown word (dupli)           -- particleSystem.settings.dupli_group.objects
Tools/stk_track.py:536:25    - Unknown word (duplicated)      -- duplicated_obj = object_group[choice
Tools/stk_track.py:53:16     - Unknown word (Joerg)        -- "author": "Joerg Henrichs, Marianne Gagnon
Tools/stk_track.py:53:22     - Unknown word (Henrichs)     -- "author": "Joerg Henrichs, Marianne Gagnon",
Tools/stk_track.py:53:32     - Unknown word (Marianne)     -- author": "Joerg Henrichs, Marianne Gagnon",
Tools/stk_track.py:53:41     - Unknown word (Gagnon)       -- Joerg Henrichs, Marianne Gagnon",
Tools/stk_track.py:541:23    - Unknown word (hack)            -- # hack to get proper orientation
Tools/stk_track.py:541:35    - Unknown word (proper)          -- # hack to get proper orientation
Tools/stk_track.py:546:43    - Unknown word (duplicated)      -- si = particle.size #/ duplicated_obj.dimensions[2]
Tools/stk_track.py:546:58    - Unknown word (dimensions)      -- size #/ duplicated_obj.dimensions[2]
Tools/stk_track.py:551:24    - Unknown word (duplicated)      -- if duplicated_obj.proxy is not None
Tools/stk_track.py:551:61    - Unknown word (duplicated)      -- proxy is not None and duplicated_obj.proxy.library is
Tools/stk_track.py:559:77    - Unknown word (ghost)           -- animation" %s interaction="ghost" model="%s.spm" skeletal
Tools/stk_track.py:559:99    - Unknown word (skeletal)        -- ghost" model="%s.spm" skeletal-animation="false"><
Tools/stk_track.py:55:6      - Unknown word (blender)      -- "blender": (2, 5, 9),
Tools/stk_track.py:561:33    - Unknown word (Hair)            -- f.write(' <!-- END Hair system %s -->\n\n'
Tools/stk_track.py:565:12    - Unknown word (Emitter)         -- class SoundEmitterExporter:
Tools/stk_track.py:565:7     - Unknown word (Sound)           -- class SoundEmitterExporter:
Tools/stk_track.py:572:51    - Unknown word (EMITTER)         -- EMPTY" and stktype=="SFX_EMITTER":
Tools/stk_track.py:582:32    - Unknown word (XYZHPR)          -- originXYZ = getXYZHPRString(obj)
Tools/stk_track.py:594:46    - Unknown word (emitter)         -- <object type="sfx-emitter" id=\"%s\" sound="%s
Tools/stk_track.py:594:65    - Unknown word (sound)           -- sfx-emitter" id=\"%s\" sound="%s" rolloff="%.3f"
Tools/stk_track.py:594:76    - Unknown word (rolloff)         -- id=\"%s\" sound="%s" rolloff="%.3f" volume="%s" max
Tools/stk_track.py:596:71    - Unknown word (sound)           -- sfx_filename", "some_sound.ogg"),
Tools/stk_track.py:597:54    - Unknown word (rolloff)         -- getObjectProperty(obj, "sfx_rolloff", 0.05),
Tools/stk_track.py:5:1       - Unknown word (Blender)    -- Blender: 259
Tools/stk_track.py:606:36    - Unknown word (sound)           -- log_error("Invalid sound emitter <" + getObjectPropert
Tools/stk_track.py:606:42    - Unknown word (emitter)         -- error("Invalid sound emitter <" + getObjectProperty
Tools/stk_track.py:627:32    - Unknown word (XYZHPR)          -- originXYZ = getXYZHPRString(obj)
Tools/stk_track.py:630:38    - Unknown word (sphere)          -- if trigger_type == "sphere":
Tools/stk_track.py:631:111   - Unknown word (average)         -- divide by 3 to get average size, divide by 2 to
Tools/stk_track.py:631:125   - Unknown word (divide)          -- to get average size, divide by 2 to get radius from
Tools/stk_track.py:631:156   - Unknown word (diameter)        -- to get radius from diameter
Tools/stk_track.py:631:36    - Unknown word (dimensions)      -- # radius = (obj.dimensions.x + obj.dimensions.y
Tools/stk_track.py:631:55    - Unknown word (dimensions)      -- obj.dimensions.x + obj.dimensions.y + obj.dimensions.z
Tools/stk_track.py:631:74    - Unknown word (dimensions)      -- obj.dimensions.y + obj.dimensions.z)/6 # divide by 3 to
Tools/stk_track.py:631:92    - Unknown word (divide)          -- obj.dimensions.z)/6 # divide by 3 to get average
Tools/stk_track.py:632:42    - Unknown word (sphere)          -- f.write(" <check-sphere xyz=\"%.2f %.2f %.2f
Tools/stk_track.py:63:6      - Unknown word (mathutils)    -- from mathutils import *
Tools/stk_track.py:642:39    - Unknown word (cylinder)        -- elif trigger_type == "cylinder":
Tools/stk_track.py:643:105   - Unknown word (divide)          -- to get average size, divide by 2 to get radius from
Tools/stk_track.py:643:136   - Unknown word (diameter)        -- to get radius from diameter
Tools/stk_track.py:643:35    - Unknown word (dimensions)      -- radius = (obj.dimensions.x + obj.dimensions.y
Tools/stk_track.py:643:72    - Unknown word (divide)          -- obj.dimensions.y)/4 # divide by 2 to get average
Tools/stk_track.py:643:91    - Unknown word (average)         -- divide by 2 to get average size, divide by 2 to
Tools/stk_track.py:644:79    - Unknown word (cylinder)        -- trigger\" trigger-type=\"cylinder\" action=\"%s\" xyz
Tools/stk_track.py:656:16    - Unknown word (blue)            -- self.m_blue_flag = None
Tools/stk_track.py:665:53    - Unknown word (BLUE)            -- EMPTY" and stktype[:9]=="BLUE_FLAG":
Tools/stk_track.py:666:20    - Unknown word (blue)            -- self.m_blue_flag = object
Tools/stk_track.py:66:5      - Unknown word (scene)        -- the_scene = None
Tools/stk_track.py:674:37    - Unknown word (Scene)           -- per_row = int(getSceneProperty(scene, "start
Tools/stk_track.py:674:65    - Unknown word (karts)           -- etSceneProperty(scene, "start_karts_per_row", 2))
Tools/stk_track.py:674:9     - Unknown word (karts)           -- karts_per_row = int(getScenePr
Tools/stk_track.py:675:18    - Unknown word (forwards)        -- distance_forwards = float(getSceneProperty
Tools/stk_track.py:675:39    - Unknown word (Scene)           -- forwards = float(getSceneProperty(scene, "start
Tools/stk_track.py:675:67    - Unknown word (forwards)        -- etSceneProperty(scene, "start_forwards_distance", 1.5))
Tools/stk_track.py:676:18    - Unknown word (sidewards)       -- distance_sidewards = float(getSceneProperty
Tools/stk_track.py:676:39    - Unknown word (Scene)           -- sidewards = float(getSceneProperty(scene, "start
Tools/stk_track.py:676:67    - Unknown word (sidewards)       -- etSceneProperty(scene, "start_sidewards_distance", 3.0))
Tools/stk_track.py:677:18    - Unknown word (upwards)         -- distance_upwards = float(getSceneProperty
Tools/stk_track.py:677:67    - Unknown word (upwards)         -- etSceneProperty(scene, "start_upwards_distance", 0.1))
Tools/stk_track.py:678:38    - Unknown word (scenes)          -- getSceneProperty(bpy.data.scenes[0], 'is_stk_node',
Tools/stk_track.py:679:39    - Unknown word (karts)           -- write(" <default-start karts-per-row =\"%i\"
Tools/stk_track.py:679:68    - Unknown word (karts)           -- per-row =\"%i\"\n"%karts_per_row )
Tools/stk_track.py:680:39    - Unknown word (forwards)        -- write(" forwards-distance =\"%.2f\"\n
Tools/stk_track.py:680:79    - Unknown word (forwards)        -- "%.2f\"\n"%distance_forwards )
Tools/stk_track.py:681:39    - Unknown word (sidewards)       -- write(" sidewards-distance=\"%.2f\"\n
Tools/stk_track.py:681:79    - Unknown word (sidewards)      -- "%.2f\"\n"%distance_sidewards)
Tools/stk_track.py:682:39    - Unknown word (upwards)        -- write(" upwards-distance =\"%.2f\"
Tools/stk_track.py:682:81    - Unknown word (upwards)        -- .2f\"/>\n"%distance_upwards)
Tools/stk_track.py:684:57    - Unknown word (blue)           -- not None and self.m_blue_flag is not None \
Tools/stk_track.py:700:52    - Unknown word (arena)          -- getSceneProperty(scene, "arena", "false") == "true
Tools/stk_track.py:704:21    - Unknown word (even)           -- " / even index alternatively
Tools/stk_track.py:704:32    - Unknown word (alternatively)  -- " / even index alternatively for blue and red team
Tools/stk_track.py:704:50    - Unknown word (blue)           -- index alternatively for blue and red team.")
Tools/stk_track.py:707:42    - Unknown word (XYZH)           -- <start %s/>\n"%getXYZHString(value))
Tools/stk_track.py:709:46    - Unknown word (XYZH)           -- ctf-start %s/>\n"%getXYZHString(value))
Tools/stk_track.py:712:25    - Unknown word (blue)           -- f.write(" <blue-flag %s/>\n"%getXYZHString
Tools/stk_track.py:736:32    - Unknown word (XYZHPR)         -- originXYZ = getXYZHPRString(obj)
Tools/stk_track.py:768:26    - Unknown word (must)           -- + "> must have at least one face
Tools/stk_track.py:772:35    - Unknown word (than)           -- + "> has more than ONE face")
Tools/stk_track.py:776:44    - Unknown word (vertices)       -- track_getFaces(data)[0].vertices) > 4:
Tools/stk_track.py:778:39    - Unknown word (than)           -- + "> has more than 4 points")
Tools/stk_track.py:789:19    - Unknown word (calcul)         -- # calcul the size and the position
Tools/stk_track.py:790:30    - Unknown word (vertices)       -- x_min = data.vertices[0].co[0]
Tools/stk_track.py:792:30    - Unknown word (vertices)       -- y_min = data.vertices[0].co[2]
Tools/stk_track.py:794:30    - Unknown word (vertices)       -- z_min = data.vertices[0].co[1]
Tools/stk_track.py:797:45    - Unknown word (vertices)       -- min = min(x_min, data.vertices[i].co[0])
Tools/stk_track.py:7:28      - Unknown word (Kart)       -- Tooltip: 'Export a SuperTuxKart track scene'
Tools/stk_track.py:7:33      - Unknown word (track)      -- Export a SuperTuxKart track scene'
Tools/stk_track.py:7:39      - Unknown word (scene)      -- a SuperTuxKart track scene'
Tools/stk_track.py:804:17    - Unknown word (fadeout)        -- fadeout_str = ""
Tools/stk_track.py:805:17    - Unknown word (fadeout)        -- fadeout = getObjectProperty
Tools/stk_track.py:805:51    - Unknown word (fadeout)        -- getObjectProperty(obj, "fadeout", "false")
Tools/stk_track.py:806:20    - Unknown word (fadeout)        -- if fadeout == "true":
Tools/stk_track.py:809:21    - Unknown word (fadeout)        -- fadeout_str = "fadeout=\"true
Tools/stk_track.py:825:7     - Unknown word (Lights)         -- class LightsExporter:
Tools/stk_track.py:832:26    - Unknown word (LAMP)           -- if object.type=="LAMP" and stktype == "LIGHT
Tools/stk_track.py:855:12    - Unknown word (Shaft)          -- class LightShaftExporter:
Tools/stk_track.py:862:26    - Unknown word (LAMP)           -- if object.type=="LAMP" and stktype == "LIGHTSHAFT
Tools/stk_track.py:862:48    - Unknown word (LIGHTSHAFT)     -- LAMP" and stktype == "LIGHTSHAFT_EMITTER":
Tools/stk_track.py:862:59    - Unknown word (EMITTER)        -- stktype == "LIGHTSHAFT_EMITTER":
Tools/stk_track.py:870:25    - Unknown word (lightshaft)     -- f.write(' <lightshaft %s id=\"%s\" opacity
Tools/stk_track.py:870:49    - Unknown word (opacity)        -- lightshaft %s id=\"%s\" opacity="%.2f" color="%s"/>
Tools/stk_track.py:871:128   - Unknown word (lightshaft)     -- getObjectProperty(obj, "lightshaft_color", "255 255 25
Tools/stk_track.py:871:77    - Unknown word (lightshaft)     -- getObjectProperty(obj, "lightshaft_opacity", 0.7), getObjectProp
Tools/stk_track.py:871:88    - Unknown word (opacity)        -- jectProperty(obj, "lightshaft_opacity", 0.7), getObjectProperty
Tools/stk_track.py:874:7     - Unknown word (Navmesh)        -- class NavmeshExporter:
Tools/stk_track.py:881:22    - Unknown word (NAVMESH)        -- if stktype=="NAVMESH":
Tools/stk_track.py:882:16    - Unknown word (arena)          -- is_arena = getSceneProperty(bpy
Tools/stk_track.py:882:50    - Unknown word (scenes)         -- getSceneProperty(bpy.data.scenes[0], "arena", "false
Tools/stk_track.py:882:62    - Unknown word (arena)          -- bpy.data.scenes[0], "arena", "false") == "true
Tools/stk_track.py:883:16    - Unknown word (soccer)         -- is_soccer = getSceneProperty(bpy
Tools/stk_track.py:883:51    - Unknown word (scenes)         -- getSceneProperty(bpy.data.scenes[0], "soccer", "false
Tools/stk_track.py:883:63    - Unknown word (soccer)         -- bpy.data.scenes[0], "soccer", "false") == "true
Tools/stk_track.py:884:20    - Unknown word (arena)          -- if (is_arena or is_soccer):
Tools/stk_track.py:884:32    - Unknown word (soccer)         -- if (is_arena or is_soccer):
Tools/stk_track.py:887:30    - Unknown word (Navmesh)        -- log_warning("Navmesh may only be used in
Tools/stk_track.py:887:58    - Unknown word (battle)         -- may only be used in battle arenas or soccer field
Tools/stk_track.py:887:65    - Unknown word (arenas)         -- only be used in battle arenas or soccer field")
Tools/stk_track.py:887:75    - Unknown word (soccer)         -- in battle arenas or soccer field")
Tools/stk_track.py:890:47    - Unknown word (than)           -- warning("Cannot have more than 1 navmesh")
Tools/stk_track.py:890:54    - Unknown word (navmesh)        -- Cannot have more than 1 navmesh")
Tools/stk_track.py:892:26    - Unknown word (Navmesh)        -- print("exportNavmesh 1")
Tools/stk_track.py:900:15    - Unknown word (Navmesh)        -- def exportNavmesh(self, sPath):
Tools/stk_track.py:901:22    - Unknown word (Navmesh)        -- print("exportNavmesh 2")
Tools/stk_track.py:902:16    - Unknown word (bmesh)          -- import bmesh
Tools/stk_track.py:905:31    - Unknown word (navmesh)        -- with open(sPath+"/navmesh.xml", "w") as navmeshfile
Tools/stk_track.py:905:53    - Unknown word (navmeshfile)    -- navmesh.xml", "w") as navmeshfile:
Tools/stk_track.py:906:17    - Unknown word (navmesh)        -- navmesh_obj = self.m_objects
Tools/stk_track.py:907:22    - Unknown word (bmesh)          -- bm = bmesh.new()
Tools/stk_track.py:908:30    - Unknown word (navmesh)        -- bm.from_mesh(navmesh_obj.data)
Tools/stk_track.py:909:22    - Unknown word (navmesh)        -- om = navmesh_obj.matrix_world
Tools/stk_track.py:911:17    - Unknown word (navmeshfile)    -- navmeshfile.write('<?xml version
Tools/stk_track.py:912:17    - Unknown word (navmeshfile)    -- navmeshfile.write('<navmesh>\n'
Tools/stk_track.py:915:17    - Unknown word (navmeshfile)    -- navmeshfile.write('<height-testing
Tools/stk_track.py:916:17    - Unknown word (navmeshfile)    -- navmeshfile.write('<MaxVertsPerPoly
Tools/stk_track.py:916:40    - Unknown word (Verts)          -- navmeshfile.write('<MaxVertsPerPoly nvp="4" />\n
Tools/stk_track.py:919:21    - Unknown word (vert)           -- for vert in bm.verts:
Tools/stk_track.py:919:32    - Unknown word (verts)          -- for vert in bm.verts:
Tools/stk_track.py:91:17     - Unknown word (anim)         -- def writeIPO(f, anim_data ):
Tools/stk_track.py:920:114   - Unknown word (vert)           -- (om*vert.co).z, (om*vert.co).y))
Tools/stk_track.py:920:82    - Unknown word (vert)           -- z="%f" />\n' % ((om*vert.co).x, (om*vert.co)
Tools/stk_track.py:920:98    - Unknown word (vert)           -- (om*vert.co).x, (om*vert.co).z, (om*vert.co)
Tools/stk_track.py:927:33    - Unknown word (verts)          -- if len(face.verts) != 4:
Tools/stk_track.py:928:45    - Unknown word (quad)          -- log_error('Use only quad for navmesh, face %d
Tools/stk_track.py:928:75    - Unknown word (quad)          -- navmesh, face %d not quad!' % face.index)
Tools/stk_track.py:929:100   - Unknown word (than)          -- and toggle edit mode, than in python console:'
Tools/stk_track.py:92:20     - Unknown word (Curve)        -- #dInterp = {IpoCurve.InterpTypes.BEZIER:
Tools/stk_track.py:92:26     - Unknown word (Interp)       -- dInterp = {IpoCurve.InterpTypes.BEZIER:
Tools/stk_track.py:92:38     - Unknown word (BEZIER)       -- IpoCurve.InterpTypes.BEZIER: "bezier",
Tools/stk_track.py:92:54     - Unknown word (bezier)       -- InterpTypes.BEZIER: "bezier",
Tools/stk_track.py:92:7      - Unknown word (Interp)       -- #dInterp = {IpoCurve.InterpTypes
Tools/stk_track.py:931:43    - Unknown word (bmesh)         -- log_error('import bmesh')
Tools/stk_track.py:932:41    - Unknown word (bmesh)         -- log_error('bm = bmesh.from_edit_mesh(me)'
Tools/stk_track.py:934:36    - Unknown word (bmesh)         -- log_error('bmesh.update_edit_mesh(me
Tools/stk_track.py:936:25    - Unknown word (vert)          -- for vert in face.verts:
Tools/stk_track.py:936:38    - Unknown word (verts)         -- for vert in face.verts:
Tools/stk_track.py:93:20     - Unknown word (Curve)        -- # IpoCurve.InterpTypes.LINEAR:
Tools/stk_track.py:93:26     - Unknown word (Interp)       -- IpoCurve.InterpTypes.LINEAR:
Tools/stk_track.py:941:38    - Unknown word (edges)         -- for edge in face.edges:
Tools/stk_track.py:948:42    - Unknown word (adjacents)     -- navmeshfile.write('" adjacents="')
Tools/stk_track.py:94:20     - Unknown word (Curve)        -- # IpoCurve.InterpTypes.CONST:
Tools/stk_track.py:94:26     - Unknown word (Interp)       -- IpoCurve.InterpTypes.CONST:
Tools/stk_track.py:957:7     - Unknown word (Driveline)     -- class DrivelineExporter:
Tools/stk_track.py:95:20     - Unknown word (Curve)        -- #dExtend = {IpoCurve.ExtendTypes.CONST:
Tools/stk_track.py:961:15    - Unknown word (Cannons)       -- self.lCannons = []
Tools/stk_track.py:962:15    - Unknown word (Drivelines)    -- self.lDrivelines = []
Tools/stk_track.py:963:25    - Unknown word (driveline)     -- self.found_main_driveline = False
Tools/stk_track.py:964:18    - Unknown word (Cameras)       -- self.lEndCameras = []
Tools/stk_track.py:968:60    - Unknown word (GOAL)          -- ="LAP" or stktype=="GOAL":
Tools/stk_track.py:96:20     - Unknown word (Curve)        -- # IpoCurve.ExtendTypes.EXTRAP:
Tools/stk_track.py:96:38     - Unknown word (EXTRAP)       -- IpoCurve.ExtendTypes.EXTRAP: "extrap",
Tools/stk_track.py:96:54     - Unknown word (extrap)       -- ExtendTypes.EXTRAP: "extrap",
Tools/stk_track.py:971:22    - Unknown word (CANNONSTART)   -- if stktype=="CANNONSTART":
Tools/stk_track.py:972:19    - Unknown word (Cannons)       -- self.lCannons.append(obj)
Tools/stk_track.py:974:25    - Unknown word (drivelines)    -- # Check for new drivelines
Tools/stk_track.py:975:29    - Unknown word (DRIVELINE)     -- elif stktype=="MAIN-DRIVELINE" or \
Tools/stk_track.py:976:27    - Unknown word (MAINDRIVELINE) -- stktype=="MAINDRIVELINE" or \
Tools/stk_track.py:977:27    - Unknown word (MAINDL)        -- stktype=="MAINDL":
Tools/stk_track.py:978:20    - Unknown word (driveline)     -- # Main driveline must be the first entry
Tools/stk_track.py:978:30    - Unknown word (must)          -- # Main driveline must be the first entry in
Tools/stk_track.py:979:19    - Unknown word (Drivelines)    -- self.lDrivelines.insert(0, Driveline
Tools/stk_track.py:979:40    - Unknown word (Driveline)     -- lDrivelines.insert(0, Driveline(obj, 1))
Tools/stk_track.py:97:45     - Unknown word (EXTRAP)       -- IpoCurve.ExtendTypes.CYCLIC_EXTRAP: "cyclic_extrap",
Tools/stk_track.py:97:61     - Unknown word (extrap)       -- CYCLIC_EXTRAP: "cyclic_extrap",
Tools/stk_track.py:980:29    - Unknown word (driveline)     -- self.found_main_driveline = True
Tools/stk_track.py:982:24    - Unknown word (DRIVELINE)     -- elif stktype=="DRIVELINE":
Tools/stk_track.py:983:19    - Unknown word (Drivelines)    -- self.lDrivelines.append(Driveline(obj
Tools/stk_track.py:983:37    - Unknown word (Driveline)     -- self.lDrivelines.append(Driveline(obj, 0))
Tools/stk_track.py:985:25    - Unknown word (CAMERA)        -- elif obj.type=="CAMERA" and stktype in ['FIXED
Tools/stk_track.py:985:59    - Unknown word (AHEAD)         -- stktype in ['FIXED', 'AHEAD']:
Tools/stk_track.py:986:22    - Unknown word (Cameras)       -- self.lEndCameras.append(obj)
Tools/stk_track.py:992:12    - Unknown word (arena)         -- is_arena = getSceneProperty(bpy
Tools/stk_track.py:992:46    - Unknown word (scenes)        -- getSceneProperty(bpy.data.scenes[0], "arena", "false
Tools/stk_track.py:993:12    - Unknown word (soccer)        -- is_soccer = getSceneProperty(bpy
Tools/stk_track.py:993:47    - Unknown word (scenes)        -- getSceneProperty(bpy.data.scenes[0], "soccer", "false
Tools/stk_track.py:994:12    - Unknown word (cutscene)      -- is_cutscene = getSceneProperty(bpy
Tools/stk_track.py:994:61    - Unknown word (cutscene)      -- bpy.data.scenes[0], "cutscene", "false") == "true
Tools/stk_track.py:995:32    - Unknown word (driveline)     -- not self.found_main_driveline and not is_arena and
Tools/stk_track.py:995:88    - Unknown word (cutscene)      -- is_soccer and not is_cutscene:
Tools/stk_track.py:996:26    - Unknown word (Drivelines)    -- if len(self.lDrivelines) > 0:
Tools/stk_track.py:997:35    - Unknown word (driveline)     -- log_warning("Main driveline missing, using first
Tools/stk_track.py:9:16      - Unknown word (Joerg)      -- __author__ = ["Joerg Henrichs (hiker), Marianne
Tools/stk_track.py:9:22      - Unknown word (Henrichs)   -- _author__ = ["Joerg Henrichs (hiker), Marianne Gagnon
Tools/stk_track.py:9:32      - Unknown word (hiker)      -- = ["Joerg Henrichs (hiker), Marianne Gagnon (Auria
Tools/stk_track.py:9:40      - Unknown word (Marianne)   -- Joerg Henrichs (hiker), Marianne Gagnon (Auria)"]
Tools/stk_track.py:9:49      - Unknown word (Gagnon)     -- Henrichs (hiker), Marianne Gagnon (Auria)"]
Tools/stk_track.py:9:57      - Unknown word (Auria)      -- hiker), Marianne Gagnon (Auria)"]
Tools/stkdata/stk_kart_object_parameters.xml:10:14     - Unknown word (Choice)     -- <EnumChoice id="" label="None" doc
Tools/stkdata/stk_kart_object_parameters.xml:10:34     - Unknown word (None)       -- EnumChoice id="" label="None" doc="Nothing special
Tools/stkdata/stk_kart_object_parameters.xml:10:45     - Unknown word (Nothing)    -- " label="None" doc="Nothing special about this object
Tools/stkdata/stk_kart_object_parameters.xml:10:53     - Unknown word (special)    -- "None" doc="Nothing special about this object"
Tools/stkdata/stk_kart_object_parameters.xml:10:61     - Unknown word (about)      -- doc="Nothing special about this object" />
Tools/stkdata/stk_kart_object_parameters.xml:10:67     - Unknown word (this)       -- Nothing special about this object" />
Tools/stkdata/stk_kart_object_parameters.xml:11:14     - Unknown word (Choice)     -- <EnumChoice id="none" label="None
Tools/stkdata/stk_kart_object_parameters.xml:11:25     - Unknown word (none)       -- <EnumChoice id="none" label="None" doc="Nothing
Tools/stkdata/stk_kart_object_parameters.xml:11:38     - Unknown word (None)       -- EnumChoice id="none" label="None" doc="Nothing special
Tools/stkdata/stk_kart_object_parameters.xml:11:49     - Unknown word (Nothing)    -- none" label="None" doc="Nothing special about this object
Tools/stkdata/stk_kart_object_parameters.xml:11:57     - Unknown word (special)    -- "None" doc="Nothing special about this object"
Tools/stkdata/stk_kart_object_parameters.xml:11:65     - Unknown word (about)      -- doc="Nothing special about this object" />
Tools/stkdata/stk_kart_object_parameters.xml:11:71     - Unknown word (this)       -- Nothing special about this object" />
Tools/stkdata/stk_kart_object_parameters.xml:13:14     - Unknown word (Choice)     -- <EnumChoice id="ignore" label="Ignore
Tools/stkdata/stk_kart_object_parameters.xml:13:67     - Unknown word (this)       -- doc="Do not export this object" />
Tools/stkdata/stk_kart_object_parameters.xml:14:14     - Unknown word (Choice)     -- <EnumChoice id="wheel" label="Wheel
Tools/stkdata/stk_kart_object_parameters.xml:14:25     - Unknown word (wheel)      -- <EnumChoice id="wheel" label="Wheel" doc=
Tools/stkdata/stk_kart_object_parameters.xml:14:39     - Unknown word (Wheel)      -- EnumChoice id="wheel" label="Wheel" doc="This object is
Tools/stkdata/stk_kart_object_parameters.xml:14:51     - Unknown word (This)       -- label="Wheel" doc="This object is a kart wheel
Tools/stkdata/stk_kart_object_parameters.xml:14:68     - Unknown word (kart)       -- doc="This object is a kart wheel" />
Tools/stkdata/stk_kart_object_parameters.xml:14:73     - Unknown word (wheel)      -- This object is a kart wheel" />
Tools/stkdata/stk_kart_object_parameters.xml:15:108    - Unknown word (emitted)    -- nitro particles are emitted" />
Tools/stkdata/stk_kart_object_parameters.xml:15:14     - Unknown word (Choice)     -- <EnumChoice id="nitro-emitter" label
Tools/stkdata/stk_kart_object_parameters.xml:15:25     - Unknown word (nitro)      -- <EnumChoice id="nitro-emitter" label="Nitro
Tools/stkdata/stk_kart_object_parameters.xml:15:31     - Unknown word (emitter)    -- EnumChoice id="nitro-emitter" label="Nitro Emitter
Tools/stkdata/stk_kart_object_parameters.xml:15:47     - Unknown word (Nitro)      -- nitro-emitter" label="Nitro Emitter" doc="This object
Tools/stkdata/stk_kart_object_parameters.xml:15:53     - Unknown word (Emitter)    -- emitter" label="Nitro Emitter" doc="This object is
Tools/stkdata/stk_kart_object_parameters.xml:15:67     - Unknown word (This)       -- Nitro Emitter" doc="This object is where nitro
Tools/stkdata/stk_kart_object_parameters.xml:15:82     - Unknown word (where)      -- doc="This object is where nitro particles are
Tools/stkdata/stk_kart_object_parameters.xml:15:88     - Unknown word (nitro)      -- This object is where nitro particles are emitted
Tools/stkdata/stk_kart_object_parameters.xml:15:94     - Unknown word (particles)  -- object is where nitro particles are emitted" />
Tools/stkdata/stk_kart_object_parameters.xml:16:112    - Unknown word (kart's)     -- animation is weighted by the kart's speed">
Tools/stkdata/stk_kart_object_parameters.xml:16:119    - Unknown word (speed)      -- weighted by the kart's speed">
Tools/stkdata/stk_kart_object_parameters.xml:16:25     - Unknown word (speed)      -- <EnumChoice id="speed-weighted" label="Speed
Tools/stkdata/stk_kart_object_parameters.xml:16:31     - Unknown word (weighted)   -- EnumChoice id="speed-weighted" label="Speed Weighted
Tools/stkdata/stk_kart_object_parameters.xml:16:48     - Unknown word (Speed)      -- speed-weighted" label="Speed Weighted" doc="This
Tools/stkdata/stk_kart_object_parameters.xml:16:54     - Unknown word (Weighted)   -- weighted" label="Speed Weighted" doc="This object's
Tools/stkdata/stk_kart_object_parameters.xml:16:69     - Unknown word (This)       -- Speed Weighted" doc="This object's animation is
Tools/stkdata/stk_kart_object_parameters.xml:16:83     - Unknown word (animation)  -- doc="This object's animation is weighted by the kart
Tools/stkdata/stk_kart_object_parameters.xml:16:96     - Unknown word (weighted)   -- object's animation is weighted by the kart's speed
Tools/stkdata/stk_kart_object_parameters.xml:17:107    - Unknown word (much)       -- default="-1.0" doc="How much the kart speed affects
Tools/stkdata/stk_kart_object_parameters.xml:17:116    - Unknown word (kart)       -- " doc="How much the kart speed affects the distance
Tools/stkdata/stk_kart_object_parameters.xml:17:121    - Unknown word (speed)      -- doc="How much the kart speed affects the distance
Tools/stkdata/stk_kart_object_parameters.xml:17:127    - Unknown word (affects)    -- much the kart speed affects the distance from the
Tools/stkdata/stk_kart_object_parameters.xml:17:139    - Unknown word (distance)   -- kart speed affects the distance from the animation to
Tools/stkdata/stk_kart_object_parameters.xml:17:157    - Unknown word (animation)  -- the distance from the animation to the static pose
Tools/stkdata/stk_kart_object_parameters.xml:17:181    - Unknown word (pose)       -- animation to the static pose (-1.0 to disable)" min
Tools/stkdata/stk_kart_object_parameters.xml:17:19     - Unknown word (Prop)       -- <FloatProp id="speed-weighted-strength
Tools/stkdata/stk_kart_object_parameters.xml:17:28     - Unknown word (speed)      -- <FloatProp id="speed-weighted-strength-factor
Tools/stkdata/stk_kart_object_parameters.xml:17:34     - Unknown word (weighted)   -- FloatProp id="speed-weighted-strength-factor" name
Tools/stkdata/stk_kart_object_parameters.xml:17:43     - Unknown word (strength)   -- FloatProp id="speed-weighted-strength-factor" name="Strength
Tools/stkdata/stk_kart_object_parameters.xml:17:66     - Unknown word (Strength)   -- strength-factor" name="Strength factor" default="-1
Tools/stkdata/stk_kart_object_parameters.xml:18:101    - Unknown word (much)       -- default="-1.0" doc="How much the kart speed affects
Tools/stkdata/stk_kart_object_parameters.xml:18:110    - Unknown word (kart)       -- " doc="How much the kart speed affects the animation
Tools/stkdata/stk_kart_object_parameters.xml:18:121    - Unknown word (affects)    -- much the kart speed affects the animation speed
Tools/stkdata/stk_kart_object_parameters.xml:18:133    - Unknown word (animation)  -- kart speed affects the animation speed (-1.0 to disable
Tools/stkdata/stk_kart_object_parameters.xml:18:19     - Unknown word (Prop)       -- <FloatProp id="speed-weighted-speed
Tools/stkdata/stk_kart_object_parameters.xml:18:28     - Unknown word (speed)      -- <FloatProp id="speed-weighted-speed-factor
Tools/stkdata/stk_kart_object_parameters.xml:18:34     - Unknown word (weighted)   -- FloatProp id="speed-weighted-speed-factor" name=
Tools/stkdata/stk_kart_object_parameters.xml:18:63     - Unknown word (Speed)      -- speed-factor" name="Speed factor" default="-1
Tools/stkdata/stk_kart_object_parameters.xml:19:102    - Unknown word (Texture)    -- default="0.0" doc="Texture speed X direction (
Tools/stkdata/stk_kart_object_parameters.xml:19:118    - Unknown word (direction)  -- doc="Texture speed X direction (0.0 for no animation
Tools/stkdata/stk_kart_object_parameters.xml:19:140    - Unknown word (animation)  -- direction (0.0 for no animation on the X axis)" min
Tools/stkdata/stk_kart_object_parameters.xml:19:159    - Unknown word (axis)       -- no animation on the X axis)" min="-1000.0" max
Tools/stkdata/stk_kart_object_parameters.xml:19:19     - Unknown word (Prop)       -- <FloatProp id="speed-weighted-texture
Tools/stkdata/stk_kart_object_parameters.xml:19:34     - Unknown word (weighted)   -- FloatProp id="speed-weighted-texture-speed-x" name
Tools/stkdata/stk_kart_object_parameters.xml:19:43     - Unknown word (texture)    -- FloatProp id="speed-weighted-texture-speed-x" name="Texture
Tools/stkdata/stk_kart_object_parameters.xml:19:66     - Unknown word (Texture)    -- texture-speed-x" name="Texture speed X" default="0
Tools/stkdata/stk_kart_object_parameters.xml:20:102    - Unknown word (Texture)    -- default="0.0" doc="Texture speed Y direction (
Tools/stkdata/stk_kart_object_parameters.xml:20:118    - Unknown word (direction)  -- doc="Texture speed Y direction (0.0 for no animation
Tools/stkdata/stk_kart_object_parameters.xml:20:140    - Unknown word (animation)  -- direction (0.0 for no animation on the Y axis)" min
Tools/stkdata/stk_kart_object_parameters.xml:20:159    - Unknown word (axis)       -- no animation on the Y axis)" min="-1000.0" max
Tools/stkdata/stk_kart_object_parameters.xml:20:19     - Unknown word (Prop)       -- <FloatProp id="speed-weighted-texture
Tools/stkdata/stk_kart_object_parameters.xml:20:43     - Unknown word (texture)    -- FloatProp id="speed-weighted-texture-speed-y" name="Texture
Tools/stkdata/stk_kart_object_parameters.xml:20:66     - Unknown word (Texture)    -- texture-speed-y" name="Texture speed Y" default="0
Tools/stkdata/stk_kart_object_parameters.xml:22:25     - Unknown word (headlight)  -- <EnumChoice id="headlight" label="Headlight" doc
Tools/stkdata/stk_kart_object_parameters.xml:22:43     - Unknown word (Headlight)  -- id="headlight" label="Headlight" doc="Headlights (visible
Tools/stkdata/stk_kart_object_parameters.xml:22:59     - Unknown word (Headlights) -- label="Headlight" doc="Headlights (visible only during
Tools/stkdata/stk_kart_object_parameters.xml:22:71     - Unknown word (visible)    -- Headlight" doc="Headlights (visible only during day)">
Tools/stkdata/stk_kart_object_parameters.xml:22:84     - Unknown word (during)     -- Headlights (visible only during day)">
Tools/stkdata/stk_kart_object_parameters.xml:23:101    - Unknown word (here)       -- 255 255" doc="Click here to select the color
Tools/stkdata/stk_kart_object_parameters.xml:23:120    - Unknown word (color)      -- Click here to select the color of the headlight"/>
Tools/stkdata/stk_kart_object_parameters.xml:23:133    - Unknown word (headlight)  -- select the color of the headlight"/>
Tools/stkdata/stk_kart_object_parameters.xml:23:14     - Unknown word (Color)      -- <ColorProp id="headlight_color
Tools/stkdata/stk_kart_object_parameters.xml:23:28     - Unknown word (headlight)  -- <ColorProp id="headlight_color" name="Headlight
Tools/stkdata/stk_kart_object_parameters.xml:23:38     - Unknown word (color)      -- ColorProp id="headlight_color" name="Headlight Color
Tools/stkdata/stk_kart_object_parameters.xml:23:51     - Unknown word (Headlight)  -- headlight_color" name="Headlight Color" default="255
Tools/stkdata/stk_kart_object_parameters.xml:23:61     - Unknown word (Color)      -- color" name="Headlight Color" default="255 255 2
Tools/stkdata/stk_kart_object_parameters.xml:25:41     - Unknown word (positioner) -- id="hat" label="Hat positioner" doc="Define the position
Tools/stkdata/stk_kart_object_parameters.xml:7:10      - Unknown word (Prop)       -- <EnumProp id="type" name="Type
Tools/stkdata/stk_kart_object_parameters.xml:7:46      - Unknown word (none)       -- name="Type" default="none" doc="SuperTuxKart Object
Tools/stkdata/stk_kart_object_parameters.xml:7:65      - Unknown word (Kart)       -- "none" doc="SuperTuxKart Object Type">
Tools/stkdata/stk_kart_object_parameters.xml:9:14      - Unknown word (None)       -- <!-- None -->
Tools/stkdata/stk_material_parameters.xml:102:20    - Unknown word (propgroup)    -- <PropGroup id="propgroup_interaction" name="Interactio
Tools/stkdata/stk_material_parameters.xml:102:30    - Unknown word (interaction)  -- PropGroup id="propgroup_interaction" name="Interaction"
Tools/stkdata/stk_material_parameters.xml:102:49    - Unknown word (Interaction)  -- propgroup_interaction" name="Interaction">
Tools/stkdata/stk_material_parameters.xml:104:14    - Unknown word (Below)        -- <!-- Below shallow water -->
Tools/stkdata/stk_material_parameters.xml:104:20    - Unknown word (shallow)      -- <!-- Below shallow water -->
Tools/stkdata/stk_material_parameters.xml:105:23    - Unknown word (below)        -- <BoolProp id="below_surface" name="Below
Tools/stkdata/stk_material_parameters.xml:105:29    - Unknown word (surface)      -- <BoolProp id="below_surface" name="Below shallow
Tools/stkdata/stk_material_parameters.xml:105:44    - Unknown word (Below)        -- below_surface" name="Below shallow water" default
Tools/stkdata/stk_material_parameters.xml:105:50    - Unknown word (shallow)      -- surface" name="Below shallow water" default="false
Tools/stkdata/stk_material_parameters.xml:106:35    - Unknown word (terrain)      -- doc="Used for the terrain under shallow water
Tools/stkdata/stk_material_parameters.xml:106:49    - Unknown word (shallow)      -- for the terrain under shallow water where you can
Tools/stkdata/stk_material_parameters.xml:106:63    - Unknown word (where)        -- under shallow water where you can drive"/>
Tools/stkdata/stk_material_parameters.xml:106:77    - Unknown word (drive)        -- water where you can drive"/>
Tools/stkdata/stk_material_parameters.xml:108:14    - Unknown word (Collision)    -- <!-- Collision -->
Tools/stkdata/stk_material_parameters.xml:109:23    - Unknown word (collision)    -- <BoolProp id="collision_detect" name="Collision
Tools/stkdata/stk_material_parameters.xml:109:47    - Unknown word (Collision)    -- collision_detect" name="Collision action" default="false
Tools/stkdata/stk_material_parameters.xml:10:18     - Unknown word (String)     -- <StringProp id="shader_name
Tools/stkdata/stk_material_parameters.xml:10:24     - Unknown word (Prop)       -- <StringProp id="shader_name" name
Tools/stkdata/stk_material_parameters.xml:10:33     - Unknown word (shader)     -- <StringProp id="shader_name" name="Name of
Tools/stkdata/stk_material_parameters.xml:110:22    - Unknown word (What)         -- doc="What happens when the kart
Tools/stkdata/stk_material_parameters.xml:110:27    - Unknown word (happens)      -- doc="What happens when the kart touches
Tools/stkdata/stk_material_parameters.xml:110:44    - Unknown word (kart)         -- What happens when the kart touches/hits this material
Tools/stkdata/stk_material_parameters.xml:110:49    - Unknown word (touches)      -- happens when the kart touches/hits this material in
Tools/stkdata/stk_material_parameters.xml:110:57    - Unknown word (hits)         -- when the kart touches/hits this material in any
Tools/stkdata/stk_material_parameters.xml:111:104   - Unknown word (touches)      -- How to react when kart touches this material">
Tools/stkdata/stk_material_parameters.xml:111:27    - Unknown word (collision)    -- <EnumProp id="collision_reaction" name="Action
Tools/stkdata/stk_material_parameters.xml:111:37    - Unknown word (reaction)     -- EnumProp id="collision_reaction" name="Action" default
Tools/stkdata/stk_material_parameters.xml:111:70    - Unknown word (none)         -- name="Action" default="none" doc="How to react when
Tools/stkdata/stk_material_parameters.xml:111:88    - Unknown word (react)        -- default="none" doc="How to react when kart touches this
Tools/stkdata/stk_material_parameters.xml:111:99    - Unknown word (kart)         -- doc="How to react when kart touches this material
Tools/stkdata/stk_material_parameters.xml:112:33    - Unknown word (none)         -- <EnumChoice id="none" label="None"/>
Tools/stkdata/stk_material_parameters.xml:112:46    - Unknown word (None)         -- EnumChoice id="none" label="None"/>
Tools/stkdata/stk_material_parameters.xml:113:47    - Unknown word (Rescue)       -- EnumChoice id="reset" label="Rescue kart"/>
Tools/stkdata/stk_material_parameters.xml:113:54    - Unknown word (kart)         -- reset" label="Rescue kart"/>
Tools/stkdata/stk_material_parameters.xml:114:51    - Unknown word (back)         -- id="push" label="Push back kart"/>
Tools/stkdata/stk_material_parameters.xml:114:56    - Unknown word (kart)         -- push" label="Push back kart"/>
Tools/stkdata/stk_material_parameters.xml:116:29    - Unknown word (collision)    -- <StringProp id="collision_particles" name="Particles
Tools/stkdata/stk_material_parameters.xml:116:39    - Unknown word (particles)    -- StringProp id="collision_particles" name="Particles on
Tools/stkdata/stk_material_parameters.xml:116:56    - Unknown word (Particles)    -- collision_particles" name="Particles on hit" default=""/
Tools/stkdata/stk_material_parameters.xml:119:14    - Unknown word (Slowdown)     -- <!-- Slowdown -->
Tools/stkdata/stk_material_parameters.xml:11:120    - Unknown word (needed)     -- doc="If UV map 2 is needed, enter its texture name
Tools/stkdata/stk_material_parameters.xml:11:138    - Unknown word (texture)    -- is needed, enter its texture name here"/>
Tools/stkdata/stk_material_parameters.xml:11:151    - Unknown word (here)       -- enter its texture name here"/>
Tools/stkdata/stk_material_parameters.xml:11:18     - Unknown word (String)     -- <StringProp id="uv_two_tex"
Tools/stkdata/stk_material_parameters.xml:11:24     - Unknown word (Prop)       -- <StringProp id="uv_two_tex" name
Tools/stkdata/stk_material_parameters.xml:11:51     - Unknown word (Second)     -- id="uv_two_tex" name="Second UV layer texture (if
Tools/stkdata/stk_material_parameters.xml:11:67     - Unknown word (texture)    -- name="Second UV layer texture (if exists)"  default
Tools/stkdata/stk_material_parameters.xml:11:79     - Unknown word (exists)     -- UV layer texture (if exists)" default="" doc="If
Tools/stkdata/stk_material_parameters.xml:120:27    - Unknown word (slowdown)     -- <BoolProp id="use_slowdown" name="Enable Slowdow
Tools/stkdata/stk_material_parameters.xml:120:50    - Unknown word (Slowdow)      -- slowdown" name="Enable Slowdow" default="false"
Tools/stkdata/stk_material_parameters.xml:121:22    - Unknown word (Whether)      -- doc="Whether to slow down the kart
Tools/stkdata/stk_material_parameters.xml:121:33    - Unknown word (slow)         -- doc="Whether to slow down the kart when driving
Tools/stkdata/stk_material_parameters.xml:121:47    - Unknown word (kart)         -- Whether to slow down the kart when driving on this
Tools/stkdata/stk_material_parameters.xml:121:57    - Unknown word (driving)      -- slow down the kart when driving on this material">
Tools/stkdata/stk_material_parameters.xml:122:28    - Unknown word (slowdown)     -- <FloatProp id="slowdown_time" name="Slowdown
Tools/stkdata/stk_material_parameters.xml:122:49    - Unknown word (Slowdown)     -- slowdown_time" name="Slowdown Time (seconds)" default
Tools/stkdata/stk_material_parameters.xml:122:64    - Unknown word (seconds)      -- name="Slowdown Time (seconds)" default="1.0" min
Tools/stkdata/stk_material_parameters.xml:123:38    - Unknown word (takes)        -- doc="Time it takes for speed to drop to
Tools/stkdata/stk_material_parameters.xml:123:48    - Unknown word (speed)        -- doc="Time it takes for speed to drop to its low point
Tools/stkdata/stk_material_parameters.xml:123:57    - Unknown word (drop)         -- it takes for speed to drop to its low point when
Tools/stkdata/stk_material_parameters.xml:123:84    - Unknown word (driving)      -- to its low point when driving here"/>
Tools/stkdata/stk_material_parameters.xml:123:92    - Unknown word (here)         -- low point when driving here"/>
Tools/stkdata/stk_material_parameters.xml:124:32    - Unknown word (speed)        -- <FloatProp id="max_speed" name="Maximum Speed
Tools/stkdata/stk_material_parameters.xml:124:45    - Unknown word (Maximum)      -- id="max_speed" name="Maximum Speed (fraction)" default
Tools/stkdata/stk_material_parameters.xml:124:53    - Unknown word (Speed)        -- speed" name="Maximum Speed (fraction)" default
Tools/stkdata/stk_material_parameters.xml:124:60    - Unknown word (fraction)     -- name="Maximum Speed (fraction)" default="1.0" min
Tools/stkdata/stk_material_parameters.xml:125:30    - Unknown word (Fraction)     -- doc="Fraction of the maximum speed
Tools/stkdata/stk_material_parameters.xml:125:46    - Unknown word (maximum)      -- doc="Fraction of the maximum speed can be reached
Tools/stkdata/stk_material_parameters.xml:125:54    - Unknown word (speed)        -- Fraction of the maximum speed can be reached when
Tools/stkdata/stk_material_parameters.xml:125:67    - Unknown word (reached)      -- maximum speed can be reached when driving here"/
Tools/stkdata/stk_material_parameters.xml:125:80    - Unknown word (driving)      -- can be reached when driving here"/>
Tools/stkdata/stk_material_parameters.xml:125:88    - Unknown word (here)         -- reached when driving here"/>
Tools/stkdata/stk_material_parameters.xml:129:14    - Unknown word (Falling)      -- <!-- Falling effect -->
Tools/stkdata/stk_material_parameters.xml:129:22    - Unknown word (effect)       -- <!-- Falling effect -->
Tools/stkdata/stk_material_parameters.xml:12:18     - Unknown word (String)     -- <StringProp id="tex_layer_2
Tools/stkdata/stk_material_parameters.xml:12:24     - Unknown word (Prop)       -- <StringProp id="tex_layer_2" name
Tools/stkdata/stk_material_parameters.xml:12:52     - Unknown word (Texture)    -- "tex_layer_2" name="Texture layer 2"  default="
Tools/stkdata/stk_material_parameters.xml:12:86     - Unknown word (Texture)    -- 2" default="" doc="Texture layer 2 in shader"/
Tools/stkdata/stk_material_parameters.xml:130:23    - Unknown word (falling)      -- <BoolProp id="falling_effect" name="Falling
Tools/stkdata/stk_material_parameters.xml:130:31    - Unknown word (effect)       -- BoolProp id="falling_effect" name="Falling Effect
Tools/stkdata/stk_material_parameters.xml:130:45    - Unknown word (Falling)      -- falling_effect" name="Falling Effect" default="false
Tools/stkdata/stk_material_parameters.xml:130:53    - Unknown word (Effect)       -- effect" name="Falling Effect" default="false"
Tools/stkdata/stk_material_parameters.xml:131:103   - Unknown word (falling)      -- will look down at kart falling when over it)"/>
Tools/stkdata/stk_material_parameters.xml:131:22    - Unknown word (Whether)      -- doc="Whether this material is the
Tools/stkdata/stk_material_parameters.xml:131:51    - Unknown word (bottom)       -- this material is the bottom of a pit (then camera
Tools/stkdata/stk_material_parameters.xml:131:73    - Unknown word (camera)       -- bottom of a pit (then camera will look down at kart
Tools/stkdata/stk_material_parameters.xml:131:85    - Unknown word (look)         -- pit (then camera will look down at kart falling
Tools/stkdata/stk_material_parameters.xml:133:24    - Unknown word (adhesion)     -- <!-- High tire adhesion -->
Tools/stkdata/stk_material_parameters.xml:134:28    - Unknown word (adhesion)     -- <BoolProp id="high_adhesion" name="High tires adhesion
Tools/stkdata/stk_material_parameters.xml:134:49    - Unknown word (tires)        -- adhesion" name="High tires adhesion" default="false
Tools/stkdata/stk_material_parameters.xml:134:55    - Unknown word (adhesion)     -- adhesion" name="High tires adhesion" default="false"
Tools/stkdata/stk_material_parameters.xml:135:25    - Unknown word (checked)      -- doc="If checked, karts will have good
Tools/stkdata/stk_material_parameters.xml:135:45    - Unknown word (have)         -- checked, karts will have good grip on this surface
Tools/stkdata/stk_material_parameters.xml:135:50    - Unknown word (good)         -- checked, karts will have good grip on this surface
Tools/stkdata/stk_material_parameters.xml:135:55    - Unknown word (grip)         -- karts will have good grip on this surface and
Tools/stkdata/stk_material_parameters.xml:135:68    - Unknown word (surface)      -- have good grip on this surface and not slip, even at
Tools/stkdata/stk_material_parameters.xml:135:84    - Unknown word (slip)         -- this surface and not slip, even at angles"/>
Tools/stkdata/stk_material_parameters.xml:135:90    - Unknown word (even)         -- surface and not slip, even at angles"/>
Tools/stkdata/stk_material_parameters.xml:135:98    - Unknown word (angles)       -- and not slip, even at angles"/>
Tools/stkdata/stk_material_parameters.xml:137:14    - Unknown word (Affect)       -- <!-- Affect gravity -->
Tools/stkdata/stk_material_parameters.xml:137:21    - Unknown word (gravity)     -- <!-- Affect gravity -->
Tools/stkdata/stk_material_parameters.xml:138:27    - Unknown word (gravity)     -- <BoolProp id="has_gravity" name="Affect gravity
Tools/stkdata/stk_material_parameters.xml:138:42    - Unknown word (Affect)      -- "has_gravity" name="Affect gravity" default="false
Tools/stkdata/stk_material_parameters.xml:138:49    - Unknown word (gravity)     -- gravity" name="Affect gravity" default="false"
Tools/stkdata/stk_material_parameters.xml:139:101   - Unknown word (matter)      -- it was the ground, no matter its angle"/>
Tools/stkdata/stk_material_parameters.xml:139:112   - Unknown word (angle)       -- ground, no matter its angle"/>
Tools/stkdata/stk_material_parameters.xml:139:25    - Unknown word (checked)     -- doc="If checked, karts will be fall
Tools/stkdata/stk_material_parameters.xml:139:48    - Unknown word (fall)        -- checked, karts will be fall towards this surface
Tools/stkdata/stk_material_parameters.xml:139:53    - Unknown word (towards)     -- karts will be fall towards this surface like it
Tools/stkdata/stk_material_parameters.xml:139:66    - Unknown word (surface)     -- be fall towards this surface like it was the ground
Tools/stkdata/stk_material_parameters.xml:139:74    - Unknown word (like)        -- towards this surface like it was the ground, no
Tools/stkdata/stk_material_parameters.xml:13:18     - Unknown word (String)     -- <StringProp id="tex_layer_3
Tools/stkdata/stk_material_parameters.xml:13:52     - Unknown word (Texture)    -- "tex_layer_3" name="Texture layer 3"  default="
Tools/stkdata/stk_material_parameters.xml:13:86     - Unknown word (Texture)    -- 3" default="" doc="Texture layer 3 in shader"/
Tools/stkdata/stk_material_parameters.xml:142:45    - Unknown word (ghost)       -- ignore" name="Ignore (ghost material)" default=
Tools/stkdata/stk_material_parameters.xml:143:22    - Unknown word (Drive)       -- doc="Drive through this texture
Tools/stkdata/stk_material_parameters.xml:143:28    - Unknown word (through)     -- doc="Drive through this texture like it
Tools/stkdata/stk_material_parameters.xml:143:49    - Unknown word (like)        -- through this texture like it didn't exist (good
Tools/stkdata/stk_material_parameters.xml:143:57    - Unknown word (didn't)      -- this texture like it didn't exist (good for smoke
Tools/stkdata/stk_material_parameters.xml:143:64    - Unknown word (exist)       -- texture like it didn't exist (good for smoke, etc
Tools/stkdata/stk_material_parameters.xml:143:71    - Unknown word (good)        -- like it didn't exist (good for smoke, etc.)"/>
Tools/stkdata/stk_material_parameters.xml:143:80    - Unknown word (smoke)       -- didn't exist (good for smoke, etc.)"/>
Tools/stkdata/stk_material_parameters.xml:145:14    - Unknown word (Particles)   -- <!-- Particles -->
Tools/stkdata/stk_material_parameters.xml:146:23    - Unknown word (particle)    -- <BoolProp id="particle" name="Particle effect
Tools/stkdata/stk_material_parameters.xml:146:39    - Unknown word (Particle)    -- id="particle" name="Particle effect" default="false
Tools/stkdata/stk_material_parameters.xml:146:48    - Unknown word (effect)      -- particle" name="Particle effect" default="false"
Tools/stkdata/stk_material_parameters.xml:147:22    - Unknown word (Whether)     -- doc="Whether to emit particles (e
Tools/stkdata/stk_material_parameters.xml:147:33    - Unknown word (emit)        -- doc="Whether to emit particles (e.g. smoke
Tools/stkdata/stk_material_parameters.xml:147:38    - Unknown word (particles)   -- doc="Whether to emit particles (e.g. smoke) when driving
Tools/stkdata/stk_material_parameters.xml:147:54    - Unknown word (smoke)       -- emit particles (e.g. smoke) when driving on this
Tools/stkdata/stk_material_parameters.xml:147:66    - Unknown word (driving)     -- particles (e.g. smoke) when driving on this surface">
Tools/stkdata/stk_material_parameters.xml:147:82    - Unknown word (surface)     -- when driving on this surface">
Tools/stkdata/stk_material_parameters.xml:148:112   - Unknown word (containing)  -- Name of the XML file containing the description of particles
Tools/stkdata/stk_material_parameters.xml:148:142   - Unknown word (particles)   -- containing the description of particles to use on this terrain
Tools/stkdata/stk_material_parameters.xml:148:167   - Unknown word (terrain)     -- particles to use on this terrain"/>
Tools/stkdata/stk_material_parameters.xml:148:29    - Unknown word (particle)    -- <StringProp id="particle_base" name="Particles
Tools/stkdata/stk_material_parameters.xml:148:50    - Unknown word (Particles)   -- particle_base" name="Particles file" default="smoke
Tools/stkdata/stk_material_parameters.xml:148:75    - Unknown word (smoke)       -- Particles file" default="smoke.xml" doc="Name of the
Tools/stkdata/stk_material_parameters.xml:149:106   - Unknown word (elect)       -- default="skid" doc="elect a special graphical
Tools/stkdata/stk_material_parameters.xml:149:114   - Unknown word (special)     -- "skid" doc="elect a special graphical effect">
Tools/stkdata/stk_material_parameters.xml:149:122   - Unknown word (graphical)   -- doc="elect a special graphical effect">
Tools/stkdata/stk_material_parameters.xml:149:132   - Unknown word (effect)      -- a special graphical effect">
Tools/stkdata/stk_material_parameters.xml:149:37    - Unknown word (particle)    -- CombinableEnumProp id="particle_condition" name="Use
Tools/stkdata/stk_material_parameters.xml:149:67    - Unknown word (particles)   -- condition" name="Use particles when..." default="skid
Tools/stkdata/stk_material_parameters.xml:149:95    - Unknown word (skid)        -- particles when..." default="skid" doc="elect a special
Tools/stkdata/stk_material_parameters.xml:14:18     - Unknown word (String)     -- <StringProp id="tex_layer_4
Tools/stkdata/stk_material_parameters.xml:14:52     - Unknown word (Texture)    -- "tex_layer_4" name="Texture layer 4"  default="
Tools/stkdata/stk_material_parameters.xml:150:33    - Unknown word (skid)        -- <EnumChoice id="skid" label="Skid" doc="Use
Tools/stkdata/stk_material_parameters.xml:150:46    - Unknown word (Skid)        -- EnumChoice id="skid" label="Skid" doc="Use particle when
Tools/stkdata/stk_material_parameters.xml:150:61    - Unknown word (particle)    -- label="Skid" doc="Use particle when skidding"/>
Tools/stkdata/stk_material_parameters.xml:150:75    - Unknown word (skidding)    -- doc="Use particle when skidding"/>
Tools/stkdata/stk_material_parameters.xml:151:33    - Unknown word (drive)       -- <EnumChoice id="drive" label="Drive" doc=
Tools/stkdata/stk_material_parameters.xml:151:47    - Unknown word (Drive)       -- EnumChoice id="drive" label="Drive" doc="Use particles
Tools/stkdata/stk_material_parameters.xml:151:63    - Unknown word (particles)   -- label="Drive" doc="Use particles during regular driving
Tools/stkdata/stk_material_parameters.xml:151:73    - Unknown word (during)      -- doc="Use particles during regular driving"/>
Tools/stkdata/stk_material_parameters.xml:151:80    - Unknown word (regular)     -- Use particles during regular driving"/>
Tools/stkdata/stk_material_parameters.xml:151:88    - Unknown word (driving)     -- particles during regular driving"/>
Tools/stkdata/stk_material_parameters.xml:156:38    - Unknown word (Play)        -- BoolProp id="use_sfx" name="Play sound effect" default
Tools/stkdata/stk_material_parameters.xml:156:43    - Unknown word (sound)       -- use_sfx" name="Play sound effect" default="false
Tools/stkdata/stk_material_parameters.xml:156:49    - Unknown word (effect)      -- sfx" name="Play sound effect" default="false"
Tools/stkdata/stk_material_parameters.xml:157:22    - Unknown word (Whether)     -- doc="Whether to play a sound when
Tools/stkdata/stk_material_parameters.xml:157:33    - Unknown word (play)        -- doc="Whether to play a sound when driving
Tools/stkdata/stk_material_parameters.xml:157:40    - Unknown word (sound)       -- doc="Whether to play a sound when driving on this
Tools/stkdata/stk_material_parameters.xml:157:67    - Unknown word (surface)     -- when driving on this surface">
Tools/stkdata/stk_material_parameters.xml:158:36    - Unknown word (rolloff)     -- - TODO: only enable rolloff if positional is checked
Tools/stkdata/stk_material_parameters.xml:158:47    - Unknown word (positional)  -- only enable rolloff if positional is checked -->
Tools/stkdata/stk_material_parameters.xml:158:61    - Unknown word (checked)     -- rolloff if positional is checked -->
Tools/stkdata/stk_material_parameters.xml:159:49    - Unknown word (Sound)       -- sfx_filename" name="Sound File" default="some
Tools/stkdata/stk_material_parameters.xml:159:70    - Unknown word (some)        -- Sound File" default="some_file.ogg"/>
Tools/stkdata/stk_material_parameters.xml:160:50    - Unknown word (Minimum)     -- sfx_min_speed" name="Minimum kart speed" default
Tools/stkdata/stk_material_parameters.xml:161:50    - Unknown word (Maximum)     -- sfx_max_speed" name="Maximum kart speed" default
Tools/stkdata/stk_material_parameters.xml:162:37    - Unknown word (pitch)       -- FloatProp id="sfx_min_pitch" name="Sound pitch at
Tools/stkdata/stk_material_parameters.xml:162:50    - Unknown word (Sound)       -- sfx_min_pitch" name="Sound pitch at min speed"
Tools/stkdata/stk_material_parameters.xml:162:56    - Unknown word (pitch)       -- min_pitch" name="Sound pitch at min speed" default
Tools/stkdata/stk_material_parameters.xml:163:110   - Unknown word (lower)       -- change, &lt; 1.0 is lower pitch, &gt; 1.0 is higher
Tools/stkdata/stk_material_parameters.xml:163:116   - Unknown word (pitch)       -- change, &lt; 1.0 is lower pitch, &gt; 1.0 is higher
Tools/stkdata/stk_material_parameters.xml:163:135   - Unknown word (higher)      -- lower pitch, &gt; 1.0 is higher pitch)"/>
Tools/stkdata/stk_material_parameters.xml:163:142   - Unknown word (pitch)       -- &gt; 1.0 is higher pitch)"/>
Tools/stkdata/stk_material_parameters.xml:163:30    - Unknown word (Pitch)       -- doc="Pitch of the sound when the
Tools/stkdata/stk_material_parameters.xml:163:43    - Unknown word (sound)       -- doc="Pitch of the sound when the kart is going
Tools/stkdata/stk_material_parameters.xml:163:66    - Unknown word (going)       -- sound when the kart is going slowly (1.0 is no change
Tools/stkdata/stk_material_parameters.xml:163:72    - Unknown word (slowly)      -- when the kart is going slowly (1.0 is no change,
Tools/stkdata/stk_material_parameters.xml:164:37    - Unknown word (pitch)       -- FloatProp id="sfx_max_pitch" name="Sound pitch at
Tools/stkdata/stk_material_parameters.xml:164:50    - Unknown word (Sound)       -- sfx_max_pitch" name="Sound pitch at max speed"
Tools/stkdata/stk_material_parameters.xml:165:110   - Unknown word (lower)       -- change, &lt; 1.0 is lower pitch, &gt; 1.0 is higher
Tools/stkdata/stk_material_parameters.xml:165:135   - Unknown word (higher)      -- lower pitch, &gt; 1.0 is higher pitch)"/>
Tools/stkdata/stk_material_parameters.xml:165:30    - Unknown word (Pitch)       -- doc="Pitch of the sound when the
Tools/stkdata/stk_material_parameters.xml:165:43    - Unknown word (sound)       -- doc="Pitch of the sound when the kart is going
Tools/stkdata/stk_material_parameters.xml:165:66    - Unknown word (going)       -- sound when the kart is going fastly (1.0 is no change
Tools/stkdata/stk_material_parameters.xml:165:72    - Unknown word (fastly)      -- when the kart is going fastly (1.0 is no change,
Tools/stkdata/stk_material_parameters.xml:166:33    - Unknown word (positional)  -- <BoolProp id="sfx_positional" name="Positional sound
Tools/stkdata/stk_material_parameters.xml:166:51    - Unknown word (Positional)  -- sfx_positional" name="Positional sound effect" default
Tools/stkdata/stk_material_parameters.xml:166:62    - Unknown word (sound)       -- positional" name="Positional sound effect" default="true
Tools/stkdata/stk_material_parameters.xml:166:85    - Unknown word (true)        -- sound effect" default="true"
Tools/stkdata/stk_material_parameters.xml:167:120   - Unknown word (heard)       -- panning; if false, it's heard at centered pan and
Tools/stkdata/stk_material_parameters.xml:167:129   - Unknown word (centered)    -- false, it's heard at centered pan and at full volume
Tools/stkdata/stk_material_parameters.xml:167:149   - Unknown word (full)        -- centered pan and at full volume"/>
Tools/stkdata/stk_material_parameters.xml:167:33    - Unknown word (true)        -- doc="If true, the sound will get
Tools/stkdata/stk_material_parameters.xml:167:58    - Unknown word (dimmer)      -- the sound will get dimmer when far from camera
Tools/stkdata/stk_material_parameters.xml:167:79    - Unknown word (camera)      -- dimmer when far from camera, and with panning; if
Tools/stkdata/stk_material_parameters.xml:167:96    - Unknown word (panning)     -- from camera, and with panning; if false, it's heard
Tools/stkdata/stk_material_parameters.xml:168:33    - Unknown word (rolloff)    -- <FloatProp id="sfx_rolloff" name="Rolloff rate
Tools/stkdata/stk_material_parameters.xml:168:48    - Unknown word (Rolloff)    -- "sfx_rolloff" name="Rolloff rate" default="0.1"
Tools/stkdata/stk_material_parameters.xml:169:101   - Unknown word (emitter)    -- further from the sound emitter"/>
Tools/stkdata/stk_material_parameters.xml:169:30    - Unknown word (Speed)      -- doc="Speed at which the sound fades
Tools/stkdata/stk_material_parameters.xml:169:39    - Unknown word (which)      -- doc="Speed at which the sound fades out
Tools/stkdata/stk_material_parameters.xml:169:55    - Unknown word (fades)      -- Speed at which the sound fades out as you stand further
Tools/stkdata/stk_material_parameters.xml:169:72    - Unknown word (stand)      -- sound fades out as you stand further from the sound
Tools/stkdata/stk_material_parameters.xml:169:78    - Unknown word (further)    -- fades out as you stand further from the sound emitter
Tools/stkdata/stk_material_parameters.xml:16:100    - Unknown word (containing) -- doc="Greyscale image containing the alpha channel (transparen
Tools/stkdata/stk_material_parameters.xml:16:130    - Unknown word (transparency) -- containing the alpha channel (transparency) for this image"/>
Tools/stkdata/stk_material_parameters.xml:16:148    - Unknown word (this)         -- channel (transparency) for this image"/>
Tools/stkdata/stk_material_parameters.xml:16:57     - Unknown word (optional)   -- mask" name="Mask image (optional)" default="" doc="Greyscale
Tools/stkdata/stk_material_parameters.xml:16:84     - Unknown word (Greyscale)  -- optional)" default="" doc="Greyscale image containing the
Tools/stkdata/stk_material_parameters.xml:173:51    - Unknown word (drive)      -- name="Reset kart (on drive)" default="false"
Tools/stkdata/stk_material_parameters.xml:174:33    - Unknown word (rescue)     -- doc="whether to rescue kart if it ends up
Tools/stkdata/stk_material_parameters.xml:174:51    - Unknown word (ends)       -- to rescue kart if it ends up [driving] on this
Tools/stkdata/stk_material_parameters.xml:176:20    - Unknown word (bottom)     -- <!-- Water bottom -->
Tools/stkdata/stk_material_parameters.xml:177:29    - Unknown word (splash)     -- <BoolProp id="water_splash" name="Water bottom
Tools/stkdata/stk_material_parameters.xml:177:49    - Unknown word (bottom)     -- splash" name="Water bottom" default="false"
Tools/stkdata/stk_material_parameters.xml:178:103   - Unknown word (splash)     -- area (used to create a splash effect)"/>
Tools/stkdata/stk_material_parameters.xml:178:53    - Unknown word (bottom)     -- this material is the bottom (seabed) of a water
Tools/stkdata/stk_material_parameters.xml:178:61    - Unknown word (seabed)     -- material is the bottom (seabed) of a water area (used
Tools/stkdata/stk_material_parameters.xml:178:80    - Unknown word (area)       -- (seabed) of a water area (used to create a splash
Tools/stkdata/stk_material_parameters.xml:17:22     - Unknown word (Slowdown)     -- <!-- Slowdown -->
Tools/stkdata/stk_material_parameters.xml:180:14    - Unknown word (Watter)     -- <!-- Watter surface -->
Tools/stkdata/stk_material_parameters.xml:182:70    - Unknown word (area)       -- the surface of a water area (used to create a splash
Tools/stkdata/stk_material_parameters.xml:182:93    - Unknown word (splash)     -- area (used to create a splash effect)"/>
Tools/stkdata/stk_material_parameters.xml:184:14    - Unknown word (Zipper)     -- <!-- Zipper -->
Tools/stkdata/stk_material_parameters.xml:185:23    - Unknown word (zipper)     -- <BoolProp id="zipper" name="Zipper (speed
Tools/stkdata/stk_material_parameters.xml:185:37    - Unknown word (Zipper)     -- BoolProp id="zipper" name="Zipper (speed boost)" default
Tools/stkdata/stk_material_parameters.xml:185:51    - Unknown word (boost)      -- name="Zipper (speed boost)" default="false"
Tools/stkdata/stk_material_parameters.xml:186:24    - Unknown word (Whether)    -- doc="Whether to get a speed boost
Tools/stkdata/stk_material_parameters.xml:186:47    - Unknown word (boost)      -- Whether to get a speed boost when driving on this
Tools/stkdata/stk_material_parameters.xml:187:28    - Unknown word (zipper)     -- <FloatProp id="zipper_duration"
Tools/stkdata/stk_material_parameters.xml:187:35    - Unknown word (duration)   -- FloatProp id="zipper_duration" name="Zipper
Tools/stkdata/stk_material_parameters.xml:187:61    - Unknown word (Zipper)     -- duration" name="Zipper duration"
Tools/stkdata/stk_material_parameters.xml:187:68    - Unknown word (duration)   -- name="Zipper duration" default=
Tools/stkdata/stk_material_parameters.xml:188:28    - Unknown word (zipper)     -- <FloatProp id="zipper_max_speed_increase"
Tools/stkdata/stk_material_parameters.xml:188:61    - Unknown word (Zipper)     -- speed_increase" name="Zipper max speed increase"
Tools/stkdata/stk_material_parameters.xml:189:28    - Unknown word (zipper)     -- <FloatProp id="zipper_fade_out_time"
Tools/stkdata/stk_material_parameters.xml:189:35    - Unknown word (fade)       -- FloatProp id="zipper_fade_out_time" name
Tools/stkdata/stk_material_parameters.xml:189:61    - Unknown word (Zipper)     -- out_time" name="Zipper fade out time"
Tools/stkdata/stk_material_parameters.xml:189:68    - Unknown word (fade)       -- time" name="Zipper fade out time"      default
Tools/stkdata/stk_material_parameters.xml:18:104    - Unknown word (false)        -- and karts)" default="false"
Tools/stkdata/stk_material_parameters.xml:18:31     - Unknown word (colorizable)  -- <BoolProp id="colorizable" name="Colorizable
Tools/stkdata/stk_material_parameters.xml:18:50     - Unknown word (Colorizable)  -- "colorizable" name="Colorizable (for library objects
Tools/stkdata/stk_material_parameters.xml:18:67     - Unknown word (library)      -- name="Colorizable (for library objects and karts)"
Tools/stkdata/stk_material_parameters.xml:18:87     - Unknown word (karts)        -- library objects and karts)" default="false"
Tools/stkdata/stk_material_parameters.xml:190:28    - Unknown word (zipper)     -- <FloatProp id="zipper_speed_gain"
Tools/stkdata/stk_material_parameters.xml:190:41    - Unknown word (gain)       -- FloatProp id="zipper_speed_gain" name="Zipper
Tools/stkdata/stk_material_parameters.xml:190:74    - Unknown word (gain)       -- name="Zipper speed gain" default="4
Tools/stkdata/stk_material_parameters.xml:191:68    - Unknown word (minimum)    -- name="Zipper minimum speed"      default
Tools/stkdata/stk_material_parameters.xml:19:118    - Unknown word (karts)        -- library objects and karts)">
Tools/stkdata/stk_material_parameters.xml:19:38     - Unknown word (determine)    -- doc="Used to determine whether this texture
Tools/stkdata/stk_material_parameters.xml:19:48     - Unknown word (whether)      -- doc="Used to determine whether this texture can be
Tools/stkdata/stk_material_parameters.xml:19:56     - Unknown word (this)         -- to determine whether this texture can be colorized
Tools/stkdata/stk_material_parameters.xml:19:61     - Unknown word (texture)      -- determine whether this texture can be colorized by
Tools/stkdata/stk_material_parameters.xml:19:98     - Unknown word (library)      -- colorized by STK (for library objects and karts)"
Tools/stkdata/stk_material_parameters.xml:20:36     - Unknown word (colorization) -- <FloatProp id="colorization_factor" name="Colorization
Tools/stkdata/stk_material_parameters.xml:20:63     - Unknown word (Colorization) -- colorization_factor" name="Colorization factor" default="0.
Tools/stkdata/stk_material_parameters.xml:21:100    - Unknown word (using)        -- the new color, 0 means using the original saturation
Tools/stkdata/stk_material_parameters.xml:21:110    - Unknown word (original)     -- color, 0 means using the original saturation from texture
Tools/stkdata/stk_material_parameters.xml:21:119    - Unknown word (saturation)   -- means using the original saturation from texture"/>
Tools/stkdata/stk_material_parameters.xml:21:135    - Unknown word (texture)      -- original saturation from texture"/>
Tools/stkdata/stk_material_parameters.xml:21:45     - Unknown word (minimun)      -- doc="Set the minimun resulting saturation
Tools/stkdata/stk_material_parameters.xml:21:53     - Unknown word (resulting)    -- doc="Set the minimun resulting saturation of the new
Tools/stkdata/stk_material_parameters.xml:21:63     - Unknown word (saturation)   -- the minimun resulting saturation of the new color, 0
Tools/stkdata/stk_material_parameters.xml:21:85     - Unknown word (color)        -- saturation of the new color, 0 means using the original
Tools/stkdata/stk_material_parameters.xml:21:94     - Unknown word (means)        -- of the new color, 0 means using the original saturation
Tools/stkdata/stk_material_parameters.xml:22:107    - Unknown word (which)        -- default="" doc="Determine which part of texture to be
Tools/stkdata/stk_material_parameters.xml:22:121    - Unknown word (texture)      -- Determine which part of texture to be affected by colorizatio
Tools/stkdata/stk_material_parameters.xml:22:147    - Unknown word (colorization) -- texture to be affected by colorization, this will be encoded
Tools/stkdata/stk_material_parameters.xml:22:161    - Unknown word (this)         -- affected by colorization, this will be encoded into
Tools/stkdata/stk_material_parameters.xml:22:166    - Unknown word (will)         -- by colorization, this will be encoded into the
Tools/stkdata/stk_material_parameters.xml:22:174    - Unknown word (encoded)      -- colorization, this will be encoded into the alpha channel
Tools/stkdata/stk_material_parameters.xml:22:37     - Unknown word (colorization) -- <StringProp id="colorization_mask" name="Colorization
Tools/stkdata/stk_material_parameters.xml:22:62     - Unknown word (Colorization) -- colorization_mask" name="Colorization mask" default="" doc
Tools/stkdata/stk_material_parameters.xml:22:97     - Unknown word (Determine)    -- mask" default="" doc="Determine which part of texture
Tools/stkdata/stk_material_parameters.xml:23:74     - Unknown word (colorization) -- name="Hue settings for colorization" default=""
Tools/stkdata/stk_material_parameters.xml:24:105    - Unknown word (means)        -- to (or equal) 1 (0.0 means original color), separated
Tools/stkdata/stk_material_parameters.xml:24:111    - Unknown word (original)     -- equal) 1 (0.0 means original color), separated by
Tools/stkdata/stk_material_parameters.xml:24:120    - Unknown word (color)        -- (0.0 means original color), separated by spaces
Tools/stkdata/stk_material_parameters.xml:24:128    - Unknown word (separated)    -- means original color), separated by spaces, STK will
Tools/stkdata/stk_material_parameters.xml:24:141    - Unknown word (spaces)       -- color), separated by spaces, STK will randomly pick
Tools/stkdata/stk_material_parameters.xml:24:153    - Unknown word (will)         -- separated by spaces, STK will randomly pick one hue
Tools/stkdata/stk_material_parameters.xml:24:158    - Unknown word (randomly)     -- by spaces, STK will randomly pick one hue for colorization
Tools/stkdata/stk_material_parameters.xml:24:201    - Unknown word (need)         -- for colorization, no need to define for karts
Tools/stkdata/stk_material_parameters.xml:24:220    - Unknown word (karts)        -- no need to define for karts."/>
Tools/stkdata/stk_material_parameters.xml:24:61     - Unknown word (colorization) -- Define list of hue for colorization, from 0.0 to (or equal
Tools/stkdata/stk_material_parameters.xml:24:91     - Unknown word (equal)        -- colorization, from 0.0 to (or equal) 1 (0.0 means original
Tools/stkdata/stk_material_parameters.xml:26:19     - Unknown word (Choice)       -- </EnumChoice>
Tools/stkdata/stk_material_parameters.xml:27:18     - Unknown word (Generic)      -- <!-- Generic solid -->
Tools/stkdata/stk_material_parameters.xml:27:26     - Unknown word (solid)        -- <!-- Generic solid -->
Tools/stkdata/stk_material_parameters.xml:28:18     - Unknown word (Choice)       -- <EnumChoice id="solid" label="PBR
Tools/stkdata/stk_material_parameters.xml:28:29     - Unknown word (solid)        -- <EnumChoice id="solid" label="PBR Solid">
Tools/stkdata/stk_material_parameters.xml:28:47     - Unknown word (Solid)        -- id="solid" label="PBR Solid">
Tools/stkdata/stk_material_parameters.xml:29:32     - Unknown word (solid)        -- <LabelProp id="solid_help" name="PBR Generic
Tools/stkdata/stk_material_parameters.xml:29:38     - Unknown word (help)         -- LabelProp id="solid_help" name="PBR Generic solid
Tools/stkdata/stk_material_parameters.xml:29:54     - Unknown word (Generic)      -- solid_help" name="PBR Generic solid shader (most of
Tools/stkdata/stk_material_parameters.xml:29:62     - Unknown word (solid)        -- help" name="PBR Generic solid shader (most of the
Tools/stkdata/stk_material_parameters.xml:29:76     - Unknown word (most)         -- Generic solid shader (most of the materials)"/
Tools/stkdata/stk_material_parameters.xml:30:112    - Unknown word (roughness)    -- Data maps to store the roughness (red channel) the metalness
Tools/stkdata/stk_material_parameters.xml:30:140    - Unknown word (metalness)    -- roughness (red channel) the metalness (green channel) and
Tools/stkdata/stk_material_parameters.xml:30:174    - Unknown word (emissive)     -- green channel) and the emissive (blue channel)"/>
Tools/stkdata/stk_material_parameters.xml:30:184    - Unknown word (blue)         -- channel) and the emissive (blue channel)"/>
Tools/stkdata/stk_material_parameters.xml:30:33     - Unknown word (gloss)        -- <StringProp id="gloss_map" name="PBR Data
Tools/stkdata/stk_material_parameters.xml:30:94     - Unknown word (maps)         -- " doc="Use PBR Data maps to store the roughness
Tools/stkdata/stk_material_parameters.xml:31:100    - Unknown word (this)         -- Use normal maps for this material (the model
Tools/stkdata/stk_material_parameters.xml:31:125    - Unknown word (must)         -- material (the model must be exported as tangent
Tools/stkdata/stk_material_parameters.xml:31:133    - Unknown word (exported)     -- material (the model must be exported as tangent for this
Tools/stkdata/stk_material_parameters.xml:31:145    - Unknown word (tangent)      -- must be exported as tangent for this to work)"/
Tools/stkdata/stk_material_parameters.xml:31:194    - Unknown word (Slowdown)     -- <!-- Slowdown -->
Tools/stkdata/stk_material_parameters.xml:31:91     - Unknown word (maps)         -- default="" doc="Use normal maps for this material (the
Tools/stkdata/stk_material_parameters.xml:32:104    - Unknown word (false)        -- and karts)" default="false"
Tools/stkdata/stk_material_parameters.xml:32:31     - Unknown word (colorizable)  -- <BoolProp id="colorizable" name="Colorizable
Tools/stkdata/stk_material_parameters.xml:32:50     - Unknown word (Colorizable)  -- "colorizable" name="Colorizable (for library objects
Tools/stkdata/stk_material_parameters.xml:32:67     - Unknown word (library)      -- name="Colorizable (for library objects and karts)"
Tools/stkdata/stk_material_parameters.xml:32:87     - Unknown word (karts)        -- library objects and karts)" default="false"
Tools/stkdata/stk_material_parameters.xml:33:118    - Unknown word (karts)        -- library objects and karts)">
Tools/stkdata/stk_material_parameters.xml:33:38     - Unknown word (determine)    -- doc="Used to determine whether this texture
Tools/stkdata/stk_material_parameters.xml:33:48     - Unknown word (whether)      -- doc="Used to determine whether this texture can be
Tools/stkdata/stk_material_parameters.xml:33:98     - Unknown word (library)      -- colorized by STK (for library objects and karts)"
Tools/stkdata/stk_material_parameters.xml:34:63     - Unknown word (Colorization) -- colorization_factor" name="Colorization factor" default="0.
Tools/stkdata/stk_material_parameters.xml:35:100    - Unknown word (using)        -- the new color, 0 means using the original saturation
Tools/stkdata/stk_material_parameters.xml:35:110    - Unknown word (original)     -- color, 0 means using the original saturation from texture
Tools/stkdata/stk_material_parameters.xml:35:119    - Unknown word (saturation)   -- means using the original saturation from texture"/>
Tools/stkdata/stk_material_parameters.xml:35:45     - Unknown word (minimun)      -- doc="Set the minimun resulting saturation
Tools/stkdata/stk_material_parameters.xml:35:53     - Unknown word (resulting)    -- doc="Set the minimun resulting saturation of the new
Tools/stkdata/stk_material_parameters.xml:35:63     - Unknown word (saturation)   -- the minimun resulting saturation of the new color, 0
Tools/stkdata/stk_material_parameters.xml:35:85     - Unknown word (color)        -- saturation of the new color, 0 means using the original
Tools/stkdata/stk_material_parameters.xml:35:94     - Unknown word (means)        -- of the new color, 0 means using the original saturation
Tools/stkdata/stk_material_parameters.xml:36:107    - Unknown word (which)        -- default="" doc="Determine which part of texture to be
Tools/stkdata/stk_material_parameters.xml:36:62     - Unknown word (Colorization) -- colorization_mask" name="Colorization mask" default="" doc
Tools/stkdata/stk_material_parameters.xml:36:97     - Unknown word (Determine)    -- mask" default="" doc="Determine which part of texture
Tools/stkdata/stk_material_parameters.xml:38:105    - Unknown word (means)        -- to (or equal) 1 (0.0 means original color), separated
Tools/stkdata/stk_material_parameters.xml:38:111    - Unknown word (original)     -- equal) 1 (0.0 means original color), separated by
Tools/stkdata/stk_material_parameters.xml:38:120    - Unknown word (color)        -- (0.0 means original color), separated by spaces
Tools/stkdata/stk_material_parameters.xml:38:128    - Unknown word (separated)    -- means original color), separated by spaces, STK will
Tools/stkdata/stk_material_parameters.xml:38:141    - Unknown word (spaces)       -- color), separated by spaces, STK will randomly pick
Tools/stkdata/stk_material_parameters.xml:38:153    - Unknown word (will)         -- separated by spaces, STK will randomly pick one hue
Tools/stkdata/stk_material_parameters.xml:38:158    - Unknown word (randomly)     -- by spaces, STK will randomly pick one hue for colorization
Tools/stkdata/stk_material_parameters.xml:38:201    - Unknown word (need)         -- for colorization, no need to define for karts
Tools/stkdata/stk_material_parameters.xml:38:91     - Unknown word (equal)        -- colorization, from 0.0 to (or equal) 1 (0.0 means original
Tools/stkdata/stk_material_parameters.xml:3:23      - Unknown word (Kart)       -- bl-label="SuperTuxKart Image Properties"
Tools/stkdata/stk_material_parameters.xml:40:19     - Unknown word (Choice)       -- </EnumChoice>
Tools/stkdata/stk_material_parameters.xml:43:18     - Unknown word (Choice)       -- <EnumChoice id="alphatest" label
Tools/stkdata/stk_material_parameters.xml:43:29     - Unknown word (alphatest)    -- <EnumChoice id="alphatest" label="PBR Cutout Transparen
Tools/stkdata/stk_material_parameters.xml:43:51     - Unknown word (Cutout)       -- alphatest" label="PBR Cutout Transparency (alpha
Tools/stkdata/stk_material_parameters.xml:43:58     - Unknown word (Transparency) -- alphatest" label="PBR Cutout Transparency (alpha test)">
Tools/stkdata/stk_material_parameters.xml:44:32     - Unknown word (alphatest)    -- <LabelProp id="alphatest_help" name="PBR Generic
Tools/stkdata/stk_material_parameters.xml:44:42     - Unknown word (help)         -- LabelProp id="alphatest_help" name="PBR Generic transparen
Tools/stkdata/stk_material_parameters.xml:44:58     - Unknown word (Generic)      -- alphatest_help" name="PBR Generic transparent shader for
Tools/stkdata/stk_material_parameters.xml:44:89     - Unknown word (cutout)       -- transparent shader for cutout alpha"/>
Tools/stkdata/stk_material_parameters.xml:45:112    - Unknown word (roughness)    -- Data maps to store the roughness (red channel) the metalness
Tools/stkdata/stk_material_parameters.xml:45:140    - Unknown word (metalness)    -- roughness (red channel) the metalness (green channel) and
Tools/stkdata/stk_material_parameters.xml:45:174    - Unknown word (emissive)     -- green channel) and the emissive (blue channel)"/>
Tools/stkdata/stk_material_parameters.xml:45:184    - Unknown word (blue)         -- channel) and the emissive (blue channel)"/>
Tools/stkdata/stk_material_parameters.xml:45:33     - Unknown word (gloss)        -- <StringProp id="gloss_map" name="PBR Data
Tools/stkdata/stk_material_parameters.xml:45:94     - Unknown word (maps)         -- " doc="Use PBR Data maps to store the roughness
Tools/stkdata/stk_material_parameters.xml:46:104    - Unknown word (false)        -- and karts)" default="false"
Tools/stkdata/stk_material_parameters.xml:46:31     - Unknown word (colorizable)  -- <BoolProp id="colorizable" name="Colorizable
Tools/stkdata/stk_material_parameters.xml:46:50     - Unknown word (Colorizable)  -- "colorizable" name="Colorizable (for library objects
Tools/stkdata/stk_material_parameters.xml:46:67     - Unknown word (library)      -- name="Colorizable (for library objects and karts)"
Tools/stkdata/stk_material_parameters.xml:47:38     - Unknown word (determine)    -- doc="Used to determine whether this texture
Tools/stkdata/stk_material_parameters.xml:47:48     - Unknown word (whether)      -- doc="Used to determine whether this texture can be
Tools/stkdata/stk_material_parameters.xml:49:105    - Unknown word (means)        -- to (or equal) 1 (0.0 means original color), separated
Tools/stkdata/stk_material_parameters.xml:49:111    - Unknown word (original)     -- equal) 1 (0.0 means original color), separated by
Tools/stkdata/stk_material_parameters.xml:49:120    - Unknown word (color)        -- (0.0 means original color), separated by spaces
Tools/stkdata/stk_material_parameters.xml:49:128    - Unknown word (separated)    -- means original color), separated by spaces, STK will
Tools/stkdata/stk_material_parameters.xml:49:141    - Unknown word (spaces)       -- color), separated by spaces, STK will randomly pick
Tools/stkdata/stk_material_parameters.xml:49:153    - Unknown word (will)         -- separated by spaces, STK will randomly pick one hue
Tools/stkdata/stk_material_parameters.xml:49:158    - Unknown word (randomly)     -- by spaces, STK will randomly pick one hue for colorization
Tools/stkdata/stk_material_parameters.xml:49:201    - Unknown word (need)         -- for colorization, no need to define for karts
Tools/stkdata/stk_material_parameters.xml:49:91     - Unknown word (equal)        -- colorization, from 0.0 to (or equal) 1 (0.0 means original
Tools/stkdata/stk_material_parameters.xml:53:24     - Unknown word (blending)     -- <!-- Alpha blending -->
Tools/stkdata/stk_material_parameters.xml:54:29     - Unknown word (alphablend)   -- <EnumChoice id="alphablend" label="(NON PBR) Alpha
Tools/stkdata/stk_material_parameters.xml:54:68     - Unknown word (Through)      -- (NON PBR) Alpha See Through">
Tools/stkdata/stk_material_parameters.xml:55:32     - Unknown word (alphablend)   -- <LabelProp id="alphablend_help" name="Uses UV
Tools/stkdata/stk_material_parameters.xml:55:43     - Unknown word (help)         -- LabelProp id="alphablend_help" name="Uses UV layer
Tools/stkdata/stk_material_parameters.xml:55:55     - Unknown word (Uses)         -- alphablend_help" name="Uses UV layer 0"/>
Tools/stkdata/stk_material_parameters.xml:56:100    - Unknown word (containing)   -- doc="Greyscale image containing the alpha channel (transparen
Tools/stkdata/stk_material_parameters.xml:56:130    - Unknown word (transparency) -- containing the alpha channel (transparency) for this image"/>
Tools/stkdata/stk_material_parameters.xml:56:57     - Unknown word (optional)     -- mask" name="Mask image (optional)" default="" doc="Greyscale
Tools/stkdata/stk_material_parameters.xml:56:84     - Unknown word (Greyscale)    -- optional)" default="" doc="Greyscale image containing the
Tools/stkdata/stk_material_parameters.xml:59:18     - Unknown word (Additive)     -- <!-- Additive -->
Tools/stkdata/stk_material_parameters.xml:5:20      - Unknown word (propgroup)  -- <PropGroup id="propgroup_visual" name="Display
Tools/stkdata/stk_material_parameters.xml:5:30      - Unknown word (visual)     -- PropGroup id="propgroup_visual" name="Display">
Tools/stkdata/stk_material_parameters.xml:5:6       - Unknown word (Prop)       -- <PropGroup id="propgroup_visual
Tools/stkdata/stk_material_parameters.xml:60:29     - Unknown word (additive)     -- <EnumChoice id="additive" label="(NON PBR) Alpha
Tools/stkdata/stk_material_parameters.xml:60:62     - Unknown word (Additive)     -- label="(NON PBR) Alpha Additive">
Tools/stkdata/stk_material_parameters.xml:61:32     - Unknown word (additive)     -- <LabelProp id="additive_help" name="Uses UV
Tools/stkdata/stk_material_parameters.xml:61:41     - Unknown word (help)         -- LabelProp id="additive_help" name="Uses UV layer
Tools/stkdata/stk_material_parameters.xml:61:53     - Unknown word (Uses)         -- additive_help" name="Uses UV layer 0"/>
Tools/stkdata/stk_material_parameters.xml:64:24     - Unknown word (unlit)        -- <!-- solid unlit -->
Tools/stkdata/stk_material_parameters.xml:65:29     - Unknown word (unlit)        -- <EnumChoice id="unlit" label="(NON PBR) Unlit
Tools/stkdata/stk_material_parameters.xml:65:53     - Unknown word (Unlit)        -- unlit" label="(NON PBR) Unlit solid">
Tools/stkdata/stk_material_parameters.xml:66:108    - Unknown word (full)         -- shadows and always be at full brightness. Uses UV
Tools/stkdata/stk_material_parameters.xml:66:113    - Unknown word (brightness)   -- and always be at full brightness. Uses UV layer 0"/>
Tools/stkdata/stk_material_parameters.xml:66:125    - Unknown word (Uses)         -- at full brightness. Uses UV layer 0"/>
Tools/stkdata/stk_material_parameters.xml:66:32     - Unknown word (unlit)        -- <LabelProp id="unlit_help" name="This material
Tools/stkdata/stk_material_parameters.xml:66:38     - Unknown word (help)         -- LabelProp id="unlit_help" name="This material
Tools/stkdata/stk_material_parameters.xml:66:50     - Unknown word (This)         -- id="unlit_help" name="This material will ignore
Tools/stkdata/stk_material_parameters.xml:66:64     - Unknown word (will)         -- name="This material will ignore lights/shadows
Tools/stkdata/stk_material_parameters.xml:66:76     - Unknown word (lights)       -- material will ignore lights/shadows and always be
Tools/stkdata/stk_material_parameters.xml:66:83     - Unknown word (shadows)      -- material will ignore lights/shadows and always be at full
Tools/stkdata/stk_material_parameters.xml:66:95     - Unknown word (always)       -- ignore lights/shadows and always be at full brightness
Tools/stkdata/stk_material_parameters.xml:69:18     - Unknown word (Vegetation)   -- <!-- Vegetation -->
Tools/stkdata/stk_material_parameters.xml:6:14      - Unknown word (Shader)     -- <!-- Shader -->
Tools/stkdata/stk_material_parameters.xml:70:109    - Unknown word (wind)         -- wave as if under the wind, usually used for vegetation
Tools/stkdata/stk_material_parameters.xml:70:115    - Unknown word (usually)      -- as if under the wind, usually used for vegetation
Tools/stkdata/stk_material_parameters.xml:70:132    - Unknown word (vegetation)   -- wind, usually used for vegetation">
Tools/stkdata/stk_material_parameters.xml:70:29     - Unknown word (grass)        -- <EnumChoice id="grass" label="Vegetation"
Tools/stkdata/stk_material_parameters.xml:70:43     - Unknown word (Vegetation)   -- EnumChoice id="grass" label="Vegetation" doc="Shader that makes
Tools/stkdata/stk_material_parameters.xml:70:60     - Unknown word (Shader)       -- label="Vegetation" doc="Shader that makes something
Tools/stkdata/stk_material_parameters.xml:70:67     - Unknown word (that)         -- Vegetation" doc="Shader that makes something wave
Tools/stkdata/stk_material_parameters.xml:70:72     - Unknown word (makes)        -- Vegetation" doc="Shader that makes something wave as if
Tools/stkdata/stk_material_parameters.xml:70:78     - Unknown word (something)    -- doc="Shader that makes something wave as if under the
Tools/stkdata/stk_material_parameters.xml:70:88     - Unknown word (wave)         -- that makes something wave as if under the wind
Tools/stkdata/stk_material_parameters.xml:71:102    - Unknown word (that)         -- in black the vertices that"/>
Tools/stkdata/stk_material_parameters.xml:71:32     - Unknown word (grass)        -- <LabelProp id="grass_help" name="Use vertex
Tools/stkdata/stk_material_parameters.xml:71:61     - Unknown word (painting)     -- help" name="Use vertex painting and paint in black the
Tools/stkdata/stk_material_parameters.xml:71:74     - Unknown word (paint)        -- vertex painting and paint in black the vertices
Tools/stkdata/stk_material_parameters.xml:71:93     - Unknown word (vertices)     -- and paint in black the vertices that"/>
Tools/stkdata/stk_material_parameters.xml:72:102    - Unknown word (wind)         -- parts will wave in the wind."/>
Tools/stkdata/stk_material_parameters.xml:72:32     - Unknown word (grass)        -- <LabelProp id="grass_help2" name="should
Tools/stkdata/stk_material_parameters.xml:72:51     - Unknown word (should)       -- "grass_help2" name="should remain static. Other
Tools/stkdata/stk_material_parameters.xml:72:58     - Unknown word (remain)       -- help2" name="should remain static. Other parts
Tools/stkdata/stk_material_parameters.xml:72:73     - Unknown word (Other)        -- should remain static. Other parts will wave in the
Tools/stkdata/stk_material_parameters.xml:72:90     - Unknown word (wave)         -- static. Other parts will wave in the wind."/>
Tools/stkdata/stk_material_parameters.xml:73:32     - Unknown word (grass)        -- <LabelProp id="grass_help3" name="Use tones
Tools/stkdata/stk_material_parameters.xml:73:55     - Unknown word (tones)        -- grass_help3" name="Use tones of grey to make vertices
Tools/stkdata/stk_material_parameters.xml:73:64     - Unknown word (grey)         -- name="Use tones of grey to make vertices move
Tools/stkdata/stk_material_parameters.xml:73:77     - Unknown word (vertices)     -- tones of grey to make vertices move more softly."/
Tools/stkdata/stk_material_parameters.xml:73:91     - Unknown word (more)         -- to make vertices move more softly."/>
Tools/stkdata/stk_material_parameters.xml:73:96     - Unknown word (softly)       -- make vertices move more softly."/>
Tools/stkdata/stk_material_parameters.xml:74:104    - Unknown word (Speed)        -- 0.0" max="5.0" doc="Speed modifier for grass"
Tools/stkdata/stk_material_parameters.xml:74:110    - Unknown word (modifier)     -- max="5.0" doc="Speed modifier for grass"/>
Tools/stkdata/stk_material_parameters.xml:74:32     - Unknown word (grass)        -- <FloatProp id="grass_speed" name="Waving
Tools/stkdata/stk_material_parameters.xml:74:38     - Unknown word (speed)        -- FloatProp id="grass_speed" name="Waving speed
Tools/stkdata/stk_material_parameters.xml:74:51     - Unknown word (Waving)       -- "grass_speed" name="Waving speed" default="1.5
Tools/stkdata/stk_material_parameters.xml:74:58     - Unknown word (speed)        -- speed" name="Waving speed" default="1.5" min=
Tools/stkdata/stk_material_parameters.xml:75:113    - Unknown word (Amplitude)    -- 0.0" max="1.0" doc="Amplitude for grass movement"
Tools/stkdata/stk_material_parameters.xml:75:133    - Unknown word (movement)     -- Amplitude for grass movement"/>
Tools/stkdata/stk_material_parameters.xml:75:38     - Unknown word (amplitude)    -- FloatProp id="grass_amplitude" name="Waving amplitude
Tools/stkdata/stk_material_parameters.xml:75:55     - Unknown word (Waving)       -- grass_amplitude" name="Waving amplitude" default=
Tools/stkdata/stk_material_parameters.xml:75:62     - Unknown word (amplitude)    -- amplitude" name="Waving amplitude" default="0.25" min
Tools/stkdata/stk_material_parameters.xml:76:104    - Unknown word (false)        -- and karts)" default="false"
Tools/stkdata/stk_material_parameters.xml:76:31     - Unknown word (colorizable)  -- <BoolProp id="colorizable" name="Colorizable
Tools/stkdata/stk_material_parameters.xml:76:50     - Unknown word (Colorizable)  -- "colorizable" name="Colorizable (for library objects
Tools/stkdata/stk_material_parameters.xml:77:38     - Unknown word (determine)    -- doc="Used to determine whether this texture
Tools/stkdata/stk_material_parameters.xml:77:48     - Unknown word (whether)      -- doc="Used to determine whether this texture can be
Tools/stkdata/stk_material_parameters.xml:79:128    - Unknown word (separated)    -- means original color), separated by spaces, STK will
Tools/stkdata/stk_material_parameters.xml:79:141    - Unknown word (spaces)       -- color), separated by spaces, STK will randomly pick
Tools/stkdata/stk_material_parameters.xml:79:158    - Unknown word (randomly)     -- by spaces, STK will randomly pick one hue for colorization
Tools/stkdata/stk_material_parameters.xml:79:201    - Unknown word (need)         -- for colorization, no need to define for karts
Tools/stkdata/stk_material_parameters.xml:79:91     - Unknown word (equal)        -- colorization, from 0.0 to (or equal) 1 (0.0 means original
Tools/stkdata/stk_material_parameters.xml:7:114     - Unknown word (this)       -- should be used to render this material">
Tools/stkdata/stk_material_parameters.xml:7:14      - Unknown word (Prop)       -- <EnumProp id="shader" name="Shader
Tools/stkdata/stk_material_parameters.xml:7:23      - Unknown word (shader)     -- <EnumProp id="shader" name="Shader" default
Tools/stkdata/stk_material_parameters.xml:7:37      - Unknown word (Shader)     -- EnumProp id="shader" name="Shader" default="solid" doc
Tools/stkdata/stk_material_parameters.xml:7:54      - Unknown word (solid)      -- name="Shader" default="solid" doc="Select the shader
Tools/stkdata/stk_material_parameters.xml:7:77      - Unknown word (shader)     -- solid" doc="Select the shader that should be used
Tools/stkdata/stk_material_parameters.xml:7:84      - Unknown word (that)       -- doc="Select the shader that should be used to render
Tools/stkdata/stk_material_parameters.xml:7:89      - Unknown word (should)     -- Select the shader that should be used to render this
Tools/stkdata/stk_material_parameters.xml:83:18     - Unknown word (Splatting)    -- <!-- Splatting -->
Tools/stkdata/stk_material_parameters.xml:84:29     - Unknown word (splatting)    -- <EnumChoice id="splatting" label="Splatting" default
Tools/stkdata/stk_material_parameters.xml:84:47     - Unknown word (Splatting)    -- id="splatting" label="Splatting" default="false"
Tools/stkdata/stk_material_parameters.xml:84:67     - Unknown word (false)        -- Splatting" default="false"
Tools/stkdata/stk_material_parameters.xml:85:34     - Unknown word (splatting)    -- doc="Use splatting (multiple textures with
Tools/stkdata/stk_material_parameters.xml:85:45     - Unknown word (multiple)     -- doc="Use splatting (multiple textures with smooth
Tools/stkdata/stk_material_parameters.xml:85:54     - Unknown word (textures)     -- splatting (multiple textures with smooth transitions
Tools/stkdata/stk_material_parameters.xml:85:68     - Unknown word (smooth)       -- multiple textures with smooth transitions)">
Tools/stkdata/stk_material_parameters.xml:85:75     - Unknown word (transitions)  -- textures with smooth transitions)">
Tools/stkdata/stk_material_parameters.xml:86:33     - Unknown word (splatting)    -- <StringProp id="splatting_texture_1" name="Red
Tools/stkdata/stk_material_parameters.xml:87:33     - Unknown word (splatting)    -- <StringProp id="splatting_texture_2" name="Green
Tools/stkdata/stk_material_parameters.xml:88:33     - Unknown word (splatting)    -- <StringProp id="splatting_texture_3" name="Blue
Tools/stkdata/stk_material_parameters.xml:88:60     - Unknown word (Blue)         -- splatting_texture_3" name="Blue Texture"  default="
Tools/stkdata/stk_material_parameters.xml:8:21      - Unknown word (shader)     -- <!-- SP shader -->
Tools/stkdata/stk_material_parameters.xml:93:14     - Unknown word (Flip)         -- <!-- Flip when reverse -->
Tools/stkdata/stk_material_parameters.xml:93:24     - Unknown word (reverse)      -- <!-- Flip when reverse -->
Tools/stkdata/stk_material_parameters.xml:94:105    - Unknown word (played)      -- doc="When the race is played in the opposite direction
Tools/stkdata/stk_material_parameters.xml:94:119    - Unknown word (opposite)    -- race is played in the opposite direction, indicates
Tools/stkdata/stk_material_parameters.xml:94:128    - Unknown word (direction)   -- played in the opposite direction, indicates whether to
Tools/stkdata/stk_material_parameters.xml:94:139    - Unknown word (indicates)   -- opposite direction, indicates whether to flip this
Tools/stkdata/stk_material_parameters.xml:94:149    - Unknown word (whether)     -- direction, indicates whether to flip this texture
Tools/stkdata/stk_material_parameters.xml:94:160    - Unknown word (flip)        -- indicates whether to flip this texture">
Tools/stkdata/stk_material_parameters.xml:94:23     - Unknown word (mirror)       -- <EnumProp id="mirror_axis" name="Mirror in
Tools/stkdata/stk_material_parameters.xml:94:30     - Unknown word (axis)         -- EnumProp id="mirror_axis" name="Mirror in reversed
Tools/stkdata/stk_material_parameters.xml:94:42     - Unknown word (Mirror)       -- "mirror_axis" name="Mirror in reversed races" default
Tools/stkdata/stk_material_parameters.xml:94:52     - Unknown word (reversed)    -- axis" name="Mirror in reversed races" default="none
Tools/stkdata/stk_material_parameters.xml:94:61     - Unknown word (races)       -- "Mirror in reversed races" default="none" doc
Tools/stkdata/stk_material_parameters.xml:94:77     - Unknown word (none)        -- reversed races" default="none" doc="When the race
Tools/stkdata/stk_material_parameters.xml:95:29     - Unknown word (none)        -- <EnumChoice id="none" label="None"/>
Tools/stkdata/stk_material_parameters.xml:95:42     - Unknown word (None)        -- EnumChoice id="none" label="None"/>
Tools/stkdata/stk_material_parameters.xml:96:42     - Unknown word (horizontally) -- EnumChoice id="U" label="U (horizontally)"/>
Tools/stkdata/stk_material_parameters.xml:97:42     - Unknown word (vertically)   -- EnumChoice id="V" label="V (vertically)"/>
Tools/stkdata/stk_material_parameters.xml:9:18      - Unknown word (Choice)     -- <EnumChoice id="sp_shader" label
Tools/stkdata/stk_material_parameters.xml:9:32      - Unknown word (shader)     -- <EnumChoice id="sp_shader" label="PBR Custom"
Tools/stkdata/stk_object_parameters.xml:104:41    - Unknown word (sphere)      -- <EnumChoice id="sphere" label="Sphere" />
Tools/stkdata/stk_object_parameters.xml:104:56    - Unknown word (Sphere)      -- EnumChoice id="sphere" label="Sphere" />
Tools/stkdata/stk_object_parameters.xml:105:41    - Unknown word (exact)       -- <EnumChoice id="exact" label="Exact" />
Tools/stkdata/stk_object_parameters.xml:105:55    - Unknown word (Exact)       -- EnumChoice id="exact" label="Exact" />
Tools/stkdata/stk_object_parameters.xml:108:103   - Unknown word (drive)       -- will be flattened and drive slowly for a few seconds
Tools/stkdata/stk_object_parameters.xml:108:109   - Unknown word (slowly)      -- flattened and drive slowly for a few seconds"
Tools/stkdata/stk_object_parameters.xml:108:126   - Unknown word (seconds)     -- drive slowly for a few seconds" >
Tools/stkdata/stk_object_parameters.xml:108:33    - Unknown word (flatten)     -- <EnumChoice id="flatten" label="Flatten player
Tools/stkdata/stk_object_parameters.xml:108:49    - Unknown word (Flatten)     -- id="flatten" label="Flatten player" doc="The player
Tools/stkdata/stk_object_parameters.xml:108:89    - Unknown word (flattened)   -- "The player will be flattened and drive slowly for
Tools/stkdata/stk_object_parameters.xml:109:35    - Unknown word (shape)       -- <EnumProp id="shape" name="Shape" default
Tools/stkdata/stk_object_parameters.xml:10:112    - Unknown word (like)       -- doc="Anim a texture like it was a movie (frame
Tools/stkdata/stk_object_parameters.xml:10:126    - Unknown word (movie)      -- texture like it was a movie (frame by frame)">
Tools/stkdata/stk_object_parameters.xml:10:133    - Unknown word (frame)      -- like it was a movie (frame by frame)">
Tools/stkdata/stk_object_parameters.xml:10:14     - Unknown word (Prop)       -- <BoolProp id="enable_anim_by_step
Tools/stkdata/stk_object_parameters.xml:10:142    - Unknown word (frame)      -- was a movie (frame by frame)">
Tools/stkdata/stk_object_parameters.xml:10:30     - Unknown word (anim)       -- BoolProp id="enable_anim_by_step" name="Anim
Tools/stkdata/stk_object_parameters.xml:10:50     - Unknown word (Anim)       -- anim_by_step" name="Anim the texture by step
Tools/stkdata/stk_object_parameters.xml:10:59     - Unknown word (texture)    -- step" name="Anim the texture by step" default="false
Tools/stkdata/stk_object_parameters.xml:10:85     - Unknown word (false)      -- texture by step" default="false" doc="Anim a texture
Tools/stkdata/stk_object_parameters.xml:10:97     - Unknown word (Anim)       -- default="false" doc="Anim a texture like it was
Tools/stkdata/stk_object_parameters.xml:110:74    - Unknown word (represent)   -- the physics engine to represent this object">
Tools/stkdata/stk_object_parameters.xml:118:41    - Unknown word (sphere)      -- <EnumChoice id="sphere" label="Sphere" />
Tools/stkdata/stk_object_parameters.xml:118:56    - Unknown word (Sphere)      -- EnumChoice id="sphere" label="Sphere" />
Tools/stkdata/stk_object_parameters.xml:119:41    - Unknown word (exact)       -- <EnumChoice id="exact" label="Exact" />
Tools/stkdata/stk_object_parameters.xml:119:55    - Unknown word (Exact)       -- EnumChoice id="exact" label="Exact" />
Tools/stkdata/stk_object_parameters.xml:11:46     - Unknown word (between)    -- anim_dt" name="time between two frames" default
Tools/stkdata/stk_object_parameters.xml:11:58     - Unknown word (frames)     -- name="time between two frames" default="1.0" min=
Tools/stkdata/stk_object_parameters.xml:124:102   - Unknown word (bloom)       -- false" doc="Enable a bloom effect on this particular
Tools/stkdata/stk_object_parameters.xml:124:108   - Unknown word (effect)      -- doc="Enable a bloom effect on this particular object
Tools/stkdata/stk_object_parameters.xml:124:123   - Unknown word (particular)  -- bloom effect on this particular object, making it glow
Tools/stkdata/stk_object_parameters.xml:124:142   - Unknown word (making)      -- this particular object, making it glow"/>
Tools/stkdata/stk_object_parameters.xml:124:152   - Unknown word (glow)        -- particular object, making it glow"/>
Tools/stkdata/stk_object_parameters.xml:124:27    - Unknown word (forcedbloom) -- <BoolProp id="forcedbloom" name="Glow (bloom)
Tools/stkdata/stk_object_parameters.xml:124:46    - Unknown word (Glow)        -- "forcedbloom" name="Glow (bloom) (STK 0.8.2)
Tools/stkdata/stk_object_parameters.xml:124:52    - Unknown word (bloom)       -- forcedbloom" name="Glow (bloom) (STK 0.8.2)" default
Tools/stkdata/stk_object_parameters.xml:124:81    - Unknown word (false)       -- STK 0.8.2)" default="false" doc="Enable a bloom
Tools/stkdata/stk_object_parameters.xml:125:104   - Unknown word (outline)     -- doc="Enable a glowing outline on this particular object
Tools/stkdata/stk_object_parameters.xml:125:120   - Unknown word (particular)  -- glowing outline on this particular object"/>
Tools/stkdata/stk_object_parameters.xml:125:14    - Unknown word (Color)       -- <ColorProp id="outline" name
Tools/stkdata/stk_object_parameters.xml:125:28    - Unknown word (outline)     -- <ColorProp id="outline" name="Glow (outline
Tools/stkdata/stk_object_parameters.xml:125:43    - Unknown word (Glow)        -- ColorProp id="outline" name="Glow (outline) (STK 0.8.
Tools/stkdata/stk_object_parameters.xml:125:49    - Unknown word (outline)     -- outline" name="Glow (outline) (STK 0.8.2)" default
Tools/stkdata/stk_object_parameters.xml:125:96    - Unknown word (glowing)     -- default="" doc="Enable a glowing outline on this particular
Tools/stkdata/stk_object_parameters.xml:126:118   - Unknown word (improve)     -- disabled on objects to improve performance"/>
Tools/stkdata/stk_object_parameters.xml:126:126   - Unknown word (performance) -- on objects to improve performance"/>
Tools/stkdata/stk_object_parameters.xml:126:27    - Unknown word (shadowpass)  -- <BoolProp id="shadowpass" name="Casts shadows
Tools/stkdata/stk_object_parameters.xml:126:45    - Unknown word (Casts)       -- id="shadowpass" name="Casts shadows" default="true
Tools/stkdata/stk_object_parameters.xml:126:51    - Unknown word (shadows)     -- shadowpass" name="Casts shadows" default="true" doc
Tools/stkdata/stk_object_parameters.xml:126:69    - Unknown word (true)        -- Casts shadows" default="true" doc="Shadows can be
Tools/stkdata/stk_object_parameters.xml:126:80    - Unknown word (Shadows)     -- default="true" doc="Shadows can be disabled on objects
Tools/stkdata/stk_object_parameters.xml:126:95    - Unknown word (disabled)    -- doc="Shadows can be disabled on objects to improve
Tools/stkdata/stk_object_parameters.xml:128:113   - Unknown word (visible)     -- this model will not be visible in game, only LOD instances
Tools/stkdata/stk_object_parameters.xml:129:32    - Unknown word (distance)    -- <FloatProp id="lod_distance" name="Distance" default
Tools/stkdata/stk_object_parameters.xml:129:48    - Unknown word (Distance)    -- lod_distance" name="Distance" default="60.0" min
Tools/stkdata/stk_object_parameters.xml:130:29    - Unknown word (Distance)    -- doc="Distance from the camera at which
Tools/stkdata/stk_object_parameters.xml:130:47    - Unknown word (camera)      -- doc="Distance from the camera at which this level
Tools/stkdata/stk_object_parameters.xml:130:57    - Unknown word (which)       -- Distance from the camera at which this level of detail
Tools/stkdata/stk_object_parameters.xml:130:84    - Unknown word (starts)      -- this level of detail starts being used"/>
Tools/stkdata/stk_object_parameters.xml:130:91    - Unknown word (being)       -- level of detail starts being used"/>
Tools/stkdata/stk_object_parameters.xml:131:14    - Unknown word (String)      -- <StringProp id="lod_name" name
Tools/stkdata/stk_object_parameters.xml:131:70    - Unknown word (Some)        -- Group Name" default="SomeModel" doc="Name of the
Tools/stkdata/stk_object_parameters.xml:132:14    - Unknown word (String)      -- <StringProp id="name" name=
Tools/stkdata/stk_object_parameters.xml:134:110   - Unknown word (camera)      -- be visible when the camera is close enough (shortcut
Tools/stkdata/stk_object_parameters.xml:134:126   - Unknown word (enough)      -- the camera is close enough (shortcut for LOD objects
Tools/stkdata/stk_object_parameters.xml:134:134   - Unknown word (shortcut)    -- camera is close enough (shortcut for LOD objects that
Tools/stkdata/stk_object_parameters.xml:134:159   - Unknown word (that)        -- shortcut for LOD objects that don't have multiple
Tools/stkdata/stk_object_parameters.xml:134:170   - Unknown word (have)        -- LOD objects that don't have multiple levels)">
Tools/stkdata/stk_object_parameters.xml:134:175   - Unknown word (multiple)    -- objects that don't have multiple levels)">
Tools/stkdata/stk_object_parameters.xml:134:25    - Unknown word (single)      -- <EnumChoice id="single_lod" label="LOD Standalone
Tools/stkdata/stk_object_parameters.xml:134:48    - Unknown word (Standalone)  -- single_lod" label="LOD Standalone" doc="An object that
Tools/stkdata/stk_object_parameters.xml:134:75    - Unknown word (that)        -- Standalone" doc="An object that will only be visible
Tools/stkdata/stk_object_parameters.xml:134:93    - Unknown word (visible)     -- object that will only be visible when the camera is close
Tools/stkdata/stk_object_parameters.xml:135:117   - Unknown word (exporting)   -- the model file when exporting (if not specified, the
Tools/stkdata/stk_object_parameters.xml:135:135   - Unknown word (specified)   -- when exporting (if not specified, the blender name of
Tools/stkdata/stk_object_parameters.xml:135:14    - Unknown word (String)      -- <StringProp id="name" name=
Tools/stkdata/stk_object_parameters.xml:135:150   - Unknown word (blender)     -- if not specified, the blender name of the object will
Tools/stkdata/stk_object_parameters.xml:136:32    - Unknown word (distance)    -- <FloatProp id="lod_distance" name="Visibility distance
Tools/stkdata/stk_object_parameters.xml:136:59    - Unknown word (distance)    -- distance" name="Visibility distance" default="60.0" min
Tools/stkdata/stk_object_parameters.xml:137:29    - Unknown word (Distance)    -- doc="Distance from the camera at which
Tools/stkdata/stk_object_parameters.xml:137:47    - Unknown word (camera)      -- doc="Distance from the camera at which this object
Tools/stkdata/stk_object_parameters.xml:137:57    - Unknown word (which)       -- Distance from the camera at which this object becomes
Tools/stkdata/stk_object_parameters.xml:137:75    - Unknown word (becomes)     -- at which this object becomes visible"/>
Tools/stkdata/stk_object_parameters.xml:137:83    - Unknown word (visible)     -- this object becomes visible"/>
Tools/stkdata/stk_object_parameters.xml:138:144   - Unknown word (modifiers)         -- of the model without modifiers as an extra LOD level
Tools/stkdata/stk_object_parameters.xml:138:27    - Unknown word (nomodifierautolod) -- <BoolProp id="nomodifierautolod" name="Also export without
Tools/stkdata/stk_object_parameters.xml:138:52    - Unknown word (Also)              -- nomodifierautolod" name="Also export without modifiers
Tools/stkdata/stk_object_parameters.xml:138:72    - Unknown word (modifiers)         -- Also export without modifiers" default="false" doc
Tools/stkdata/stk_object_parameters.xml:138:92    - Unknown word (false)             -- modifiers" default="false" doc="Export one version
Tools/stkdata/stk_object_parameters.xml:139:32    - Unknown word (nomodierlod)       -- <FloatProp id="nomodierlod_distance" name="Modifiers
Tools/stkdata/stk_object_parameters.xml:139:44    - Unknown word (distance)          -- FloatProp id="nomodierlod_distance" name="Modifiers enabled
Tools/stkdata/stk_object_parameters.xml:139:60    - Unknown word (Modifiers)         -- nomodierlod_distance" name="Modifiers enabled distance" default
Tools/stkdata/stk_object_parameters.xml:139:78    - Unknown word (distance)          -- name="Modifiers enabled distance" default="30.0" min
Tools/stkdata/stk_object_parameters.xml:140:107   - Unknown word (smaller)           -- modifiers. Should be smaller than 'Visibility distance
Tools/stkdata/stk_object_parameters.xml:140:115   - Unknown word (than)              -- modifiers. Should be smaller than 'Visibility distance
Tools/stkdata/stk_object_parameters.xml:140:29    - Unknown word (Distance)          -- doc="Distance from the camera at which
Tools/stkdata/stk_object_parameters.xml:140:47    - Unknown word (camera)            -- doc="Distance from the camera at which the model is
Tools/stkdata/stk_object_parameters.xml:140:57    - Unknown word (which)             -- Distance from the camera at which the model is seen with
Tools/stkdata/stk_object_parameters.xml:140:76    - Unknown word (seen)              -- at which the model is seen with modifiers. Should
Tools/stkdata/stk_object_parameters.xml:140:86    - Unknown word (modifiers)         -- the model is seen with modifiers. Should be smaller than
Tools/stkdata/stk_object_parameters.xml:140:97    - Unknown word (Should)            -- seen with modifiers. Should be smaller than 'Visibility
Tools/stkdata/stk_object_parameters.xml:142:117   - Unknown word (call)              -- Scripting function to call when a kart hits this
Tools/stkdata/stk_object_parameters.xml:142:129   - Unknown word (kart)              -- function to call when a kart hits this object"/>
Tools/stkdata/stk_object_parameters.xml:142:134   - Unknown word (hits)              -- to call when a kart hits this object"/>
Tools/stkdata/stk_object_parameters.xml:142:32    - Unknown word (kart)              -- <StringProp id="on_kart_collision" name="Kart
Tools/stkdata/stk_object_parameters.xml:142:37    - Unknown word (collision)         -- StringProp id="on_kart_collision" name="Kart collision
Tools/stkdata/stk_object_parameters.xml:142:54    - Unknown word (Kart)              -- kart_collision" name="Kart collision callback"
Tools/stkdata/stk_object_parameters.xml:142:59    - Unknown word (collision)         -- collision" name="Kart collision callback" default="
Tools/stkdata/stk_object_parameters.xml:142:69    - Unknown word (callback)          -- name="Kart collision callback" default="" doc="Scripting
Tools/stkdata/stk_object_parameters.xml:142:95    - Unknown word (Scripting)         -- callback" default="" doc="Scripting function to call when
Tools/stkdata/stk_object_parameters.xml:143:18    - Unknown word (Interaction)       -- <!-- Interaction -->
Tools/stkdata/stk_object_parameters.xml:144:104   - Unknown word (interact)          -- How this object should interact with other objects in
Tools/stkdata/stk_object_parameters.xml:144:118   - Unknown word (other)             -- should interact with other objects in the physics
Tools/stkdata/stk_object_parameters.xml:144:27    - Unknown word (interaction)       -- <EnumProp id="interaction" name="Interaction"
Tools/stkdata/stk_object_parameters.xml:144:46    - Unknown word (Interaction)       -- "interaction" name="Interaction" default="static" doc
Tools/stkdata/stk_object_parameters.xml:144:97    - Unknown word (should)            -- doc="How this object should interact with other
Tools/stkdata/stk_object_parameters.xml:145:104   - Unknown word (drive)             -- physical (player can drive through it)" />
Tools/stkdata/stk_object_parameters.xml:145:110   - Unknown word (through)           -- physical (player can drive through it)" />
Tools/stkdata/stk_object_parameters.xml:145:33    - Unknown word (ghost)             -- <EnumChoice id="ghost" label="Ghost" doc=
Tools/stkdata/stk_object_parameters.xml:145:47    - Unknown word (Ghost)             -- EnumChoice id="ghost" label="Ghost" doc="This object will
Tools/stkdata/stk_object_parameters.xml:145:59    - Unknown word (This)              -- label="Ghost" doc="This object will be non-physical
Tools/stkdata/stk_object_parameters.xml:145:83    - Unknown word (physical)          -- This object will be non-physical (player can drive through
Tools/stkdata/stk_object_parameters.xml:146:117   - Unknown word (drives)            -- in place, if the user drives on this object they
Tools/stkdata/stk_object_parameters.xml:146:139   - Unknown word (they)              -- drives on this object they will 'hit a wall'"
Tools/stkdata/stk_object_parameters.xml:146:156   - Unknown word (wall)              -- object they will 'hit a wall'" >
Tools/stkdata/stk_object_parameters.xml:146:56    - Unknown word (wont)              -- static" label="Static (wont move)" doc="This object
Tools/stkdata/stk_object_parameters.xml:146:73    - Unknown word (This)              -- Static (wont move)" doc="This object will stay in
Tools/stkdata/stk_object_parameters.xml:146:90    - Unknown word (stay)              -- doc="This object will stay in place, if the user
Tools/stkdata/stk_object_parameters.xml:146:98    - Unknown word (place)             -- object will stay in place, if the user drives
Tools/stkdata/stk_object_parameters.xml:147:58    - Unknown word (animated)          -- shape" name="Shape (if animated object)" default="box
Tools/stkdata/stk_object_parameters.xml:157:41    - Unknown word (exact)             -- <EnumChoice id="exact" label="Exact" />
Tools/stkdata/stk_object_parameters.xml:157:55    - Unknown word (Exact)             -- EnumChoice id="exact" label="Exact" />
Tools/stkdata/stk_object_parameters.xml:160:114   - Unknown word (around)            -- to move this object around by pushing it" >
Tools/stkdata/stk_object_parameters.xml:160:124   - Unknown word (pushing)           -- this object around by pushing it" >
Tools/stkdata/stk_object_parameters.xml:160:46    - Unknown word (Movable)           -- EnumChoice id="move" label="Movable by player" doc="The
Tools/stkdata/stk_object_parameters.xml:160:89    - Unknown word (able)              -- "The player will be able to move this object
Tools/stkdata/stk_object_parameters.xml:161:36    - Unknown word (mass)              -- <FloatProp id="mass" name="Mass (kg)" default
Tools/stkdata/stk_object_parameters.xml:161:48    - Unknown word (Mass)              -- FloatProp id="mass" name="Mass (kg)" default="100.
Tools/stkdata/stk_object_parameters.xml:16:101    - Unknown word (Allows)     -- default="false" doc="Allows the engine to know if
Tools/stkdata/stk_object_parameters.xml:16:122    - Unknown word (know)       -- Allows the engine to know if an object can be
Tools/stkdata/stk_object_parameters.xml:16:147    - Unknown word (hidden)     -- if an object can be hidden for performances reason
Tools/stkdata/stk_object_parameters.xml:16:158    - Unknown word (performances) -- object can be hidden for performances reason">
Tools/stkdata/stk_object_parameters.xml:16:51     - Unknown word (geometry)   -- detail" name="Enable geometry visibility details"
Tools/stkdata/stk_object_parameters.xml:16:89     - Unknown word (false)      -- visibility details" default="false" doc="Allows the engine
Tools/stkdata/stk_object_parameters.xml:174:85    - Unknown word (resetted)          -- "The player will be resetted when touching this object
Tools/stkdata/stk_object_parameters.xml:174:99    - Unknown word (touching)          -- will be resetted when touching this object" >
Tools/stkdata/stk_object_parameters.xml:17:104    - Unknown word (displayed)    -- default all objects are displayed. You can specify the
Tools/stkdata/stk_object_parameters.xml:17:123    - Unknown word (specify)      -- are displayed. You can specify the level at witch the
Tools/stkdata/stk_object_parameters.xml:17:144    - Unknown word (witch)        -- specify the level at witch the object will be visible
Tools/stkdata/stk_object_parameters.xml:17:161    - Unknown word (will)         -- at witch the object will be visible">
Tools/stkdata/stk_object_parameters.xml:17:169    - Unknown word (visible)      -- witch the object will be visible">
Tools/stkdata/stk_object_parameters.xml:188:113   - Unknown word (touching)         -- like they were hit when touching this object" >
Tools/stkdata/stk_object_parameters.xml:188:33    - Unknown word (explode)           -- <EnumChoice id="explode" label="Knock player
Tools/stkdata/stk_object_parameters.xml:188:49    - Unknown word (Knock)             -- id="explode" label="Knock player" doc="The player
Tools/stkdata/stk_object_parameters.xml:188:84    - Unknown word (jump)              -- doc="The player will jump like they were hit when
Tools/stkdata/stk_object_parameters.xml:188:89    - Unknown word (like)              -- The player will jump like they were hit when touching
Tools/stkdata/stk_object_parameters.xml:188:94    - Unknown word (they)              -- player will jump like they were hit when touching
Tools/stkdata/stk_object_parameters.xml:188:99    - Unknown word (were)             -- will jump like they were hit when touching this
Tools/stkdata/stk_object_parameters.xml:18:18     - Unknown word (Choice)       -- <EnumChoice id="0" label="Always
Tools/stkdata/stk_object_parameters.xml:18:39     - Unknown word (Always)       -- EnumChoice id="0" label="Always visible" />
Tools/stkdata/stk_object_parameters.xml:18:46     - Unknown word (visible)      -- id="0" label="Always visible" />
Tools/stkdata/stk_object_parameters.xml:19:18     - Unknown word (Choice)       -- <EnumChoice id="1" label="Visible
Tools/stkdata/stk_object_parameters.xml:19:39     - Unknown word (Visible)      -- EnumChoice id="1" label="Visible when Medium quality
Tools/stkdata/stk_object_parameters.xml:19:52     - Unknown word (Medium)       -- label="Visible when Medium quality or above" /
Tools/stkdata/stk_object_parameters.xml:19:59     - Unknown word (quality)      -- Visible when Medium quality or above" />
Tools/stkdata/stk_object_parameters.xml:19:70     - Unknown word (above)        -- when Medium quality or above" />
Tools/stkdata/stk_object_parameters.xml:202:103   - Unknown word (drive)            -- will be flattened and drive slowly for a few seconds
Tools/stkdata/stk_object_parameters.xml:202:109   - Unknown word (slowly)           -- flattened and drive slowly for a few seconds"
Tools/stkdata/stk_object_parameters.xml:202:126   - Unknown word (seconds)          -- drive slowly for a few seconds" >
Tools/stkdata/stk_object_parameters.xml:202:33    - Unknown word (flatten)          -- <EnumChoice id="flatten" label="Flatten player
Tools/stkdata/stk_object_parameters.xml:202:49    - Unknown word (Flatten)          -- id="flatten" label="Flatten player" doc="The player
Tools/stkdata/stk_object_parameters.xml:202:89    - Unknown word (flattened)        -- "The player will be flattened and drive slowly for
Tools/stkdata/stk_object_parameters.xml:20:18     - Unknown word (Choice)       -- <EnumChoice id="2" label="Visible
Tools/stkdata/stk_object_parameters.xml:20:39     - Unknown word (Visible)      -- EnumChoice id="2" label="Visible when High quality"
Tools/stkdata/stk_object_parameters.xml:20:57     - Unknown word (quality)      -- label="Visible when High quality" />
Tools/stkdata/stk_object_parameters.xml:218:102   - Unknown word (bloom)            -- false" doc="Enable a bloom effect on this particular
Tools/stkdata/stk_object_parameters.xml:218:108   - Unknown word (effect)           -- doc="Enable a bloom effect on this particular object
Tools/stkdata/stk_object_parameters.xml:218:123   - Unknown word (particular)       -- bloom effect on this particular object, making it glow
Tools/stkdata/stk_object_parameters.xml:218:142   - Unknown word (making)           -- this particular object, making it glow"/>
Tools/stkdata/stk_object_parameters.xml:218:152   - Unknown word (glow)             -- particular object, making it glow"/>
Tools/stkdata/stk_object_parameters.xml:218:27    - Unknown word (forcedbloom)      -- <BoolProp id="forcedbloom" name="Glow (bloom)
Tools/stkdata/stk_object_parameters.xml:218:46    - Unknown word (Glow)             -- "forcedbloom" name="Glow (bloom) (STK 0.8.2)
Tools/stkdata/stk_object_parameters.xml:218:52    - Unknown word (bloom)            -- forcedbloom" name="Glow (bloom) (STK 0.8.2)" default
Tools/stkdata/stk_object_parameters.xml:219:120   - Unknown word (particular)       -- glowing outline on this particular object"/>
Tools/stkdata/stk_object_parameters.xml:219:14    - Unknown word (Color)            -- <ColorProp id="outline" name
Tools/stkdata/stk_object_parameters.xml:219:28    - Unknown word (outline)          -- <ColorProp id="outline" name="Glow (outline
Tools/stkdata/stk_object_parameters.xml:219:43    - Unknown word (Glow)             -- ColorProp id="outline" name="Glow (outline) (STK 0.8.
Tools/stkdata/stk_object_parameters.xml:219:49    - Unknown word (outline)          -- outline" name="Glow (outline) (STK 0.8.2)" default
Tools/stkdata/stk_object_parameters.xml:219:96    - Unknown word (glowing)          -- default="" doc="Enable a glowing outline on this particular
Tools/stkdata/stk_object_parameters.xml:220:118   - Unknown word (improve)          -- disabled on objects to improve performance"/>
Tools/stkdata/stk_object_parameters.xml:220:126   - Unknown word (performance)      -- on objects to improve performance"/>
Tools/stkdata/stk_object_parameters.xml:220:27    - Unknown word (shadowpass)       -- <BoolProp id="shadowpass" name="Casts shadows
Tools/stkdata/stk_object_parameters.xml:220:45    - Unknown word (Casts)            -- id="shadowpass" name="Casts shadows" default="true
Tools/stkdata/stk_object_parameters.xml:220:51    - Unknown word (shadows)          -- shadowpass" name="Casts shadows" default="true" doc
Tools/stkdata/stk_object_parameters.xml:220:69    - Unknown word (true)             -- Casts shadows" default="true" doc="Shadows can be
Tools/stkdata/stk_object_parameters.xml:220:80    - Unknown word (Shadows)          -- default="true" doc="Shadows can be disabled on objects
Tools/stkdata/stk_object_parameters.xml:220:95    - Unknown word (disabled)         -- doc="Shadows can be disabled on objects to improve
Tools/stkdata/stk_object_parameters.xml:224:57    - Unknown word (animatable)       -- label="Object" doc="An (animatable) object that is exported
Tools/stkdata/stk_object_parameters.xml:224:76    - Unknown word (that)             -- (animatable) object that is exported to a separate
Tools/stkdata/stk_object_parameters.xml:224:84    - Unknown word (exported)         -- animatable) object that is exported to a separate model
Tools/stkdata/stk_object_parameters.xml:224:98    - Unknown word (separate)         -- that is exported to a separate model file">
Tools/stkdata/stk_object_parameters.xml:225:110   - Unknown word (same)             -- object (objects with the same name are exported as
Tools/stkdata/stk_object_parameters.xml:225:124   - Unknown word (exported)         -- with the same name are exported as a single file)"/
Tools/stkdata/stk_object_parameters.xml:225:138   - Unknown word (single)           -- name are exported as a single file)"/>
Tools/stkdata/stk_object_parameters.xml:225:56    - Unknown word (Some)             -- name="Name" default="SomeModel" doc="Name of this
Tools/stkdata/stk_object_parameters.xml:227:18    - Unknown word (Interaction)      -- <!-- Interaction -->
Tools/stkdata/stk_object_parameters.xml:228:104   - Unknown word (interact)         -- How this object should interact with other objects in
Tools/stkdata/stk_object_parameters.xml:228:118   - Unknown word (other)            -- should interact with other objects in the physics
Tools/stkdata/stk_object_parameters.xml:228:27    - Unknown word (interaction)      -- <EnumProp id="interaction" name="Interaction"
Tools/stkdata/stk_object_parameters.xml:228:97    - Unknown word (should)           -- doc="How this object should interact with other
Tools/stkdata/stk_object_parameters.xml:229:104   - Unknown word (drive)            -- physical (player can drive through it)" />
Tools/stkdata/stk_object_parameters.xml:229:110   - Unknown word (through)          -- physical (player can drive through it)" />
Tools/stkdata/stk_object_parameters.xml:229:33    - Unknown word (ghost)            -- <EnumChoice id="ghost" label="Ghost" doc=
Tools/stkdata/stk_object_parameters.xml:229:47    - Unknown word (Ghost)            -- EnumChoice id="ghost" label="Ghost" doc="This object will
Tools/stkdata/stk_object_parameters.xml:229:59    - Unknown word (This)             -- label="Ghost" doc="This object will be non-physical
Tools/stkdata/stk_object_parameters.xml:229:83    - Unknown word (physical)         -- This object will be non-physical (player can drive through
Tools/stkdata/stk_object_parameters.xml:230:117   - Unknown word (drives)           -- in place, if the user drives on this object they
Tools/stkdata/stk_object_parameters.xml:230:139   - Unknown word (they)             -- drives on this object they will 'hit a wall'"
Tools/stkdata/stk_object_parameters.xml:230:156   - Unknown word (wall)             -- object they will 'hit a wall'" >
Tools/stkdata/stk_object_parameters.xml:230:56    - Unknown word (wont)             -- static" label="Static (wont move)" doc="This object
Tools/stkdata/stk_object_parameters.xml:230:90    - Unknown word (stay)             -- doc="This object will stay in place, if the user
Tools/stkdata/stk_object_parameters.xml:230:98    - Unknown word (place)            -- object will stay in place, if the user drives
Tools/stkdata/stk_object_parameters.xml:231:58    - Unknown word (animated)         -- shape" name="Shape (if animated object)" default="box
Tools/stkdata/stk_object_parameters.xml:244:114   - Unknown word (around)           -- to move this object around by pushing it" >
Tools/stkdata/stk_object_parameters.xml:244:124   - Unknown word (pushing)          -- this object around by pushing it" >
Tools/stkdata/stk_object_parameters.xml:244:46    - Unknown word (Movable)          -- EnumChoice id="move" label="Movable by player" doc="The
Tools/stkdata/stk_object_parameters.xml:244:89    - Unknown word (able)             -- "The player will be able to move this object
Tools/stkdata/stk_object_parameters.xml:245:36    - Unknown word (mass)             -- <FloatProp id="mass" name="Mass (kg)" default
Tools/stkdata/stk_object_parameters.xml:245:48    - Unknown word (Mass)             -- FloatProp id="mass" name="Mass (kg)" default="100.
Tools/stkdata/stk_object_parameters.xml:258:85    - Unknown word (resetted)         -- "The player will be resetted when touching this object
Tools/stkdata/stk_object_parameters.xml:258:99    - Unknown word (touching)         -- will be resetted when touching this object" >
Tools/stkdata/stk_object_parameters.xml:272:33    - Unknown word (explode)          -- <EnumChoice id="explode" label="Knock player
Tools/stkdata/stk_object_parameters.xml:272:49    - Unknown word (Knock)           -- id="explode" label="Knock player" doc="The player
Tools/stkdata/stk_object_parameters.xml:272:84    - Unknown word (jump)            -- doc="The player will jump like they were hit when
Tools/stkdata/stk_object_parameters.xml:272:89    - Unknown word (like)            -- The player will jump like they were hit when touching
Tools/stkdata/stk_object_parameters.xml:272:99    - Unknown word (were)            -- will jump like they were hit when touching this
Tools/stkdata/stk_object_parameters.xml:27:46     - Unknown word (none)         -- name="Type" default="none" doc="SuperTuxKart Object
Tools/stkdata/stk_object_parameters.xml:27:65     - Unknown word (Kart)         -- "none" doc="SuperTuxKart Object Type">
Tools/stkdata/stk_object_parameters.xml:286:109   - Unknown word (slowly)          -- flattened and drive slowly for a few seconds"
Tools/stkdata/stk_object_parameters.xml:286:126   - Unknown word (seconds)         -- drive slowly for a few seconds" >
Tools/stkdata/stk_object_parameters.xml:286:33    - Unknown word (flatten)         -- <EnumChoice id="flatten" label="Flatten player
Tools/stkdata/stk_object_parameters.xml:286:49    - Unknown word (Flatten)         -- id="flatten" label="Flatten player" doc="The player
Tools/stkdata/stk_object_parameters.xml:286:89    - Unknown word (flattened)       -- "The player will be flattened and drive slowly for
Tools/stkdata/stk_object_parameters.xml:300:101   - Unknown word (visually)        -- this material invisible visually but present in physics
Tools/stkdata/stk_object_parameters.xml:300:114   - Unknown word (present)         -- invisible visually but present in physics">
Tools/stkdata/stk_object_parameters.xml:300:33    - Unknown word (physicsonly)     -- <EnumChoice id="physicsonly" label="Physics only
Tools/stkdata/stk_object_parameters.xml:300:91    - Unknown word (invisible)       -- "Make this material invisible visually but present
Tools/stkdata/stk_object_parameters.xml:303:27    - Unknown word (driveable)       -- <BoolProp id="driveable" name="Driveable (STK
Tools/stkdata/stk_object_parameters.xml:303:44    - Unknown word (Driveable)       -- id="driveable" name="Driveable (STK 0.8.2)" default
Tools/stkdata/stk_object_parameters.xml:303:88    - Unknown word (Karts)           -- default="false" doc="Karts can drive on this object
Tools/stkdata/stk_object_parameters.xml:304:118   - Unknown word (soccer)          -- Exported object is a soccer ball (used for soccer
Tools/stkdata/stk_object_parameters.xml:304:140   - Unknown word (soccer)          -- soccer ball (used for soccer mode)"/>
Tools/stkdata/stk_object_parameters.xml:304:147   - Unknown word (mode)            -- ball (used for soccer mode)"/>
Tools/stkdata/stk_object_parameters.xml:304:27    - Unknown word (soccer)          -- <BoolProp id="soccer_ball" name="Is Soccer
Tools/stkdata/stk_object_parameters.xml:304:49    - Unknown word (Soccer)          -- soccer_ball" name="Is Soccer Ball (Soccer mode)"
Tools/stkdata/stk_object_parameters.xml:304:62    - Unknown word (Soccer)          -- name="Is Soccer Ball (Soccer mode)" default="false
Tools/stkdata/stk_object_parameters.xml:304:69    - Unknown word (mode)            -- Soccer Ball (Soccer mode)" default="false" doc
Tools/stkdata/stk_object_parameters.xml:304:97    - Unknown word (Exported)        -- default="false" doc="Exported object is a soccer ball
Tools/stkdata/stk_object_parameters.xml:305:108   - Unknown word (effect)          -- doc="Enable a bloom effect on this particular object
Tools/stkdata/stk_object_parameters.xml:305:123   - Unknown word (particular)      -- bloom effect on this particular object, making it glow
Tools/stkdata/stk_object_parameters.xml:305:142   - Unknown word (making)          -- this particular object, making it glow"/>
Tools/stkdata/stk_object_parameters.xml:305:152   - Unknown word (glow)            -- particular object, making it glow"/>
Tools/stkdata/stk_object_parameters.xml:305:27    - Unknown word (forcedbloom)     -- <BoolProp id="forcedbloom" name="Glow (bloom)
Tools/stkdata/stk_object_parameters.xml:305:46    - Unknown word (Glow)            -- "forcedbloom" name="Glow (bloom) (STK 0.8.2)
Tools/stkdata/stk_object_parameters.xml:305:52    - Unknown word (bloom)           -- forcedbloom" name="Glow (bloom) (STK 0.8.2)" default
Tools/stkdata/stk_object_parameters.xml:306:14    - Unknown word (Color)           -- <ColorProp id="outline" name
Tools/stkdata/stk_object_parameters.xml:306:96    - Unknown word (glowing)         -- default="" doc="Enable a glowing outline on this particular
Tools/stkdata/stk_object_parameters.xml:307:118   - Unknown word (improve)         -- disabled on objects to improve performance"/>
Tools/stkdata/stk_object_parameters.xml:307:126   - Unknown word (performance)     -- on objects to improve performance"/>
Tools/stkdata/stk_object_parameters.xml:307:27    - Unknown word (shadowpass)      -- <BoolProp id="shadowpass" name="Casts shadows
Tools/stkdata/stk_object_parameters.xml:307:45    - Unknown word (Casts)           -- id="shadowpass" name="Casts shadows" default="true
Tools/stkdata/stk_object_parameters.xml:307:51    - Unknown word (shadows)         -- shadowpass" name="Casts shadows" default="true" doc
Tools/stkdata/stk_object_parameters.xml:307:69    - Unknown word (true)            -- Casts shadows" default="true" doc="Shadows can be
Tools/stkdata/stk_object_parameters.xml:307:80    - Unknown word (Shadows)         -- default="true" doc="Shadows can be disabled on objects
Tools/stkdata/stk_object_parameters.xml:307:95    - Unknown word (disabled)        -- doc="Shadows can be disabled on objects to improve
Tools/stkdata/stk_object_parameters.xml:308:111   - Unknown word (aquarium)        -- false" doc="Enable an aquarium type effect on this
Tools/stkdata/stk_object_parameters.xml:308:125   - Unknown word (effect)          -- Enable an aquarium type effect on this material, appropriate
Tools/stkdata/stk_object_parameters.xml:308:150   - Unknown word (appropriate)     -- effect on this material, appropriate for glasses behind which
Tools/stkdata/stk_object_parameters.xml:308:166   - Unknown word (glasses)         -- material, appropriate for glasses behind which there is
Tools/stkdata/stk_object_parameters.xml:308:174   - Unknown word (behind)          -- appropriate for glasses behind which there is water
Tools/stkdata/stk_object_parameters.xml:308:181   - Unknown word (which)           -- ppropriate for glasses behind which there is water. The
Tools/stkdata/stk_object_parameters.xml:308:187   - Unknown word (there)           -- glasses behind which there is water. The mesh with
Tools/stkdata/stk_object_parameters.xml:308:222   - Unknown word (effect)          -- The mesh with this effect will itself be invisible
Tools/stkdata/stk_object_parameters.xml:308:234   - Unknown word (itself)          -- with this effect will itself be invisible and be
Tools/stkdata/stk_object_parameters.xml:308:244   - Unknown word (invisible)       -- effect will itself be invisible and be used to mark
Tools/stkdata/stk_object_parameters.xml:308:269   - Unknown word (mark)            -- invisible and be used to mark the boundaries of the
Tools/stkdata/stk_object_parameters.xml:308:27    - Unknown word (displacing)      -- <BoolProp id="displacing" name="Refraction/reflection
Tools/stkdata/stk_object_parameters.xml:308:278   - Unknown word (boundaries)      -- be used to mark the boundaries of the effect."/>
Tools/stkdata/stk_object_parameters.xml:308:45    - Unknown word (Refraction)      -- id="displacing" name="Refraction/reflection (STK 0.8
Tools/stkdata/stk_object_parameters.xml:308:56    - Unknown word (reflection)      -- displacing" name="Refraction/reflection (STK 0.8.2)" default
Tools/stkdata/stk_object_parameters.xml:310:122   - Unknown word (displayed)       -- enabled, object will be displayed enlarged as part of
Tools/stkdata/stk_object_parameters.xml:310:132   - Unknown word (enlarged)        -- object will be displayed enlarged as part of the skybox
Tools/stkdata/stk_object_parameters.xml:310:156   - Unknown word (skybox)          -- enlarged as part of the skybox"/>
Tools/stkdata/stk_object_parameters.xml:310:27    - Unknown word (skyboxobject)    -- <BoolProp id="skyboxobject" name="Skybox object
Tools/stkdata/stk_object_parameters.xml:310:47    - Unknown word (Skybox)          -- skyboxobject" name="Skybox object (STK 0.8.2)"
Tools/stkdata/stk_object_parameters.xml:312:120   - Unknown word (scripting)       -- ditionally visible based on a scripting function returning bool
Tools/stkdata/stk_object_parameters.xml:312:139   - Unknown word (returning)       -- a scripting function returning bool"/>
Tools/stkdata/stk_object_parameters.xml:312:39    - Unknown word (Visible)         -- StringProp id="if" name="Visible if..." default="" doc
Tools/stkdata/stk_object_parameters.xml:312:87    - Unknown word (conditionally)   -- doc="Make this object conditionally visible based on a scripting
Tools/stkdata/stk_object_parameters.xml:313:117   - Unknown word (call)           -- Scripting function to call when a kart hits this
Tools/stkdata/stk_object_parameters.xml:313:134   - Unknown word (hits)           -- to call when a kart hits this object"/>
Tools/stkdata/stk_object_parameters.xml:313:32    - Unknown word (kart)            -- <StringProp id="on_kart_collision" name="Kart
Tools/stkdata/stk_object_parameters.xml:313:37    - Unknown word (collision)       -- StringProp id="on_kart_collision" name="Kart collision
Tools/stkdata/stk_object_parameters.xml:313:54    - Unknown word (Kart)            -- kart_collision" name="Kart collision callback"
Tools/stkdata/stk_object_parameters.xml:313:69    - Unknown word (callback)        -- name="Kart collision callback" default="" doc="Scripting
Tools/stkdata/stk_object_parameters.xml:313:95    - Unknown word (Scripting)      -- callback" default="" doc="Scripting function to call when
Tools/stkdata/stk_object_parameters.xml:314:111   - Unknown word (allow)          -- Mostly for internal use, allow adding custom raw attributes
Tools/stkdata/stk_object_parameters.xml:314:117   - Unknown word (adding)         -- internal use, allow adding custom raw attributes
Tools/stkdata/stk_object_parameters.xml:314:86    - Unknown word (Mostly)         -- advanced)" default="" doc="Mostly for internal use, allow
Tools/stkdata/stk_object_parameters.xml:314:97    - Unknown word (internal)       -- default="" doc="Mostly for internal use, allow adding custom
Tools/stkdata/stk_object_parameters.xml:319:28    - Unknown word (LIGHTS)         -- <!-- ************* LIGHTS AND SUN ***********
Tools/stkdata/stk_object_parameters.xml:320:37    - Unknown word (lights)         -- EnumChoice id="__category__lights_spacer" label=""/>
Tools/stkdata/stk_object_parameters.xml:320:44    - Unknown word (spacer)         -- "__category__lights_spacer" label=""/>
Tools/stkdata/stk_object_parameters.xml:321:37    - Unknown word (lights)         -- EnumChoice id="__category__lights" label="Lights and sun
Tools/stkdata/stk_object_parameters.xml:321:52    - Unknown word (Lights)         -- category__lights" label="Lights and sun"/>
Tools/stkdata/stk_object_parameters.xml:324:67    - Unknown word (emitter)        -- doc="A dynamic light emitter (STK 0.8.2)">
Tools/stkdata/stk_object_parameters.xml:325:119   - Unknown word (scripting)      -- ditionally visible based on a scripting function returning bool
Tools/stkdata/stk_object_parameters.xml:325:138   - Unknown word (returning)      -- a scripting function returning bool"/>
Tools/stkdata/stk_object_parameters.xml:325:39    - Unknown word (Visible)        -- StringProp id="if" name="Visible if..." default="" doc
Tools/stkdata/stk_object_parameters.xml:325:86    - Unknown word (conditionally)  -- doc="Make this light conditionally visible based on a scripting
Tools/stkdata/stk_object_parameters.xml:328:20    - Unknown word (shaft)          -- <!-- Light shaft -->
Tools/stkdata/stk_object_parameters.xml:329:25    - Unknown word (lightshaft)     -- <EnumChoice id="lightshaft_emitter" label="Light
Tools/stkdata/stk_object_parameters.xml:329:36    - Unknown word (emitter)        -- EnumChoice id="lightshaft_emitter" label="Light shaft
Tools/stkdata/stk_object_parameters.xml:329:58    - Unknown word (shaft)          -- emitter" label="Light shaft (god rays) emitter
Tools/stkdata/stk_object_parameters.xml:329:69    - Unknown word (rays)           -- label="Light shaft (god rays) emitter (STK 0.8.2
Tools/stkdata/stk_object_parameters.xml:329:75    - Unknown word (emitter)        -- Light shaft (god rays) emitter (STK 0.8.2)">
Tools/stkdata/stk_object_parameters.xml:32:14     - Unknown word (Choice)       -- <EnumChoice id="__category__objects
Tools/stkdata/stk_object_parameters.xml:330:28    - Unknown word (lightshaft)     -- <FloatProp id="lightshaft_opacity" name="Strength
Tools/stkdata/stk_object_parameters.xml:330:39    - Unknown word (opacity)        -- FloatProp id="lightshaft_opacity" name="Strength (opacity
Tools/stkdata/stk_object_parameters.xml:330:54    - Unknown word (Strength)       -- lightshaft_opacity" name="Strength (opacity)" default=
Tools/stkdata/stk_object_parameters.xml:330:64    - Unknown word (opacity)        -- opacity" name="Strength (opacity)" default="0.7"/>
Tools/stkdata/stk_object_parameters.xml:331:14    - Unknown word (Color)          -- <ColorProp id="lightshaft_color
Tools/stkdata/stk_object_parameters.xml:331:28    - Unknown word (lightshaft)     -- <ColorProp id="lightshaft_color" name="Color"
Tools/stkdata/stk_object_parameters.xml:331:39    - Unknown word (color)          -- ColorProp id="lightshaft_color" name="Color" default
Tools/stkdata/stk_object_parameters.xml:331:52    - Unknown word (Color)          -- lightshaft_color" name="Color" default="255 255 2
Tools/stkdata/stk_object_parameters.xml:335:101   - Unknown word (intensity)      -- sun; used to specify intensity, direction and color
Tools/stkdata/stk_object_parameters.xml:335:112   - Unknown word (direction)      -- to specify intensity, direction and color of the ambient
Tools/stkdata/stk_object_parameters.xml:335:126   - Unknown word (color)          -- intensity, direction and color of the ambient light
Tools/stkdata/stk_object_parameters.xml:335:139   - Unknown word (ambient)        -- direction and color of the ambient light in the track"
Tools/stkdata/stk_object_parameters.xml:335:160   - Unknown word (track)          -- ambient light in the track">
Tools/stkdata/stk_object_parameters.xml:335:56    - Unknown word (shadows)        -- "Sun (for light and shadows)" doc="Set on a sun
Tools/stkdata/stk_object_parameters.xml:335:93    - Unknown word (specify)        -- Set on a sun; used to specify intensity, direction
Tools/stkdata/stk_object_parameters.xml:336:104   - Unknown word (ambient)        -- Click here to pick an ambient color"/>
Tools/stkdata/stk_object_parameters.xml:336:112   - Unknown word (color)          -- here to pick an ambient color"/>
Tools/stkdata/stk_object_parameters.xml:336:28    - Unknown word (ambient)        -- <ColorProp id="ambient" name="Ambient Color
Tools/stkdata/stk_object_parameters.xml:336:43    - Unknown word (Ambient)        -- ColorProp id="ambient" name="Ambient Color" default="85
Tools/stkdata/stk_object_parameters.xml:336:88    - Unknown word (here)           -- 5 85 85" doc="Click here to pick an ambient color
Tools/stkdata/stk_object_parameters.xml:337:103   - Unknown word (color)          -- here to pick a diffuse color"/>
Tools/stkdata/stk_object_parameters.xml:337:28    - Unknown word (diffuse)        -- <ColorProp id="diffuse" name="Diffuse Color
Tools/stkdata/stk_object_parameters.xml:337:43    - Unknown word (Diffuse)        -- ColorProp id="diffuse" name="Diffuse Color" default="" doc
Tools/stkdata/stk_object_parameters.xml:337:80    - Unknown word (here)           -- default="" doc="Click here to pick a diffuse color
Tools/stkdata/stk_object_parameters.xml:337:95    - Unknown word (diffuse)        -- Click here to pick a diffuse color"/>
Tools/stkdata/stk_object_parameters.xml:338:106   - Unknown word (color)          -- here to pick a specular color"/>
Tools/stkdata/stk_object_parameters.xml:338:28    - Unknown word (specular)       -- <ColorProp id="specular" name="Specular Color
Tools/stkdata/stk_object_parameters.xml:338:44    - Unknown word (Specular)       -- id="specular" name="Specular Color" default="" doc
Tools/stkdata/stk_object_parameters.xml:338:82    - Unknown word (here)           -- default="" doc="Click here to pick a specular color
Tools/stkdata/stk_object_parameters.xml:338:97    - Unknown word (specular)       -- Click here to pick a specular color"/>
Tools/stkdata/stk_object_parameters.xml:343:27    - Unknown word (column)         -- <EnumChoice id="__column_break__items"/>
Tools/stkdata/stk_object_parameters.xml:343:34    - Unknown word (break)          -- EnumChoice id="__column_break__items"/>
Tools/stkdata/stk_object_parameters.xml:346:14    - Unknown word (Banana)         -- <!-- Banana -->
Tools/stkdata/stk_object_parameters.xml:347:107   - Unknown word (Empty)          -- avoided (apply to an Empty)">
Tools/stkdata/stk_object_parameters.xml:347:25    - Unknown word (banana)         -- <EnumChoice id="banana" label="Banana" doc
Tools/stkdata/stk_object_parameters.xml:347:40    - Unknown word (Banana)         -- EnumChoice id="banana" label="Banana" doc="A banana object
Tools/stkdata/stk_object_parameters.xml:347:55    - Unknown word (banana)         -- label="Banana" doc="A banana object that needs to
Tools/stkdata/stk_object_parameters.xml:347:69    - Unknown word (that)           -- doc="A banana object that needs to be avoided
Tools/stkdata/stk_object_parameters.xml:347:74    - Unknown word (needs)          -- A banana object that needs to be avoided (apply
Tools/stkdata/stk_object_parameters.xml:347:86    - Unknown word (avoided)        -- object that needs to be avoided (apply to an Empty)
Tools/stkdata/stk_object_parameters.xml:348:108   - Unknown word (snapped)        -- checked, the item will be snapped to the ground"/>
Tools/stkdata/stk_object_parameters.xml:348:27    - Unknown word (dropitem)       -- <BoolProp id="dropitem" name="Drop to ground
Tools/stkdata/stk_object_parameters.xml:348:43    - Unknown word (Drop)           -- id="dropitem" name="Drop to ground" default=
Tools/stkdata/stk_object_parameters.xml:348:68    - Unknown word (true)           -- to ground" default="true" doc="If checked, the
Tools/stkdata/stk_object_parameters.xml:348:82    - Unknown word (checked)        -- default="true" doc="If checked, the item will be snapped
Tools/stkdata/stk_object_parameters.xml:349:103   - Unknown word (shown)          -- checked, the item will be shown only in CTF mode"/>
Tools/stkdata/stk_object_parameters.xml:349:121   - Unknown word (mode)           -- be shown only in CTF mode"/>
Tools/stkdata/stk_object_parameters.xml:349:77    - Unknown word (checked)        -- default="false" doc="If checked, the item will be shown
Tools/stkdata/stk_object_parameters.xml:34:14     - Unknown word (None)         -- <!-- None -->
Tools/stkdata/stk_object_parameters.xml:352:20    - Unknown word (gift)           -- <!-- Item (gift box) -->
Tools/stkdata/stk_object_parameters.xml:353:116   - Unknown word (Empty)         -- collectible (apply to an Empty)">
Tools/stkdata/stk_object_parameters.xml:353:44    - Unknown word (Gift)           -- "item" label="Item (Gift Box)" doc="A gift box
Tools/stkdata/stk_object_parameters.xml:353:62    - Unknown word (gift)           -- Item (Gift Box)" doc="A gift box containing a random
Tools/stkdata/stk_object_parameters.xml:353:71    - Unknown word (containing)    -- Box)" doc="A gift box containing a random collectible
Tools/stkdata/stk_object_parameters.xml:353:91    - Unknown word (collectible)   -- containing a random collectible (apply to an Empty)
Tools/stkdata/stk_object_parameters.xml:354:108   - Unknown word (snapped)       -- checked, the item will be snapped to the ground"/>
Tools/stkdata/stk_object_parameters.xml:354:27    - Unknown word (dropitem)      -- <BoolProp id="dropitem" name="Drop to ground
Tools/stkdata/stk_object_parameters.xml:354:43    - Unknown word (Drop)          -- id="dropitem" name="Drop to ground" default=
Tools/stkdata/stk_object_parameters.xml:354:68    - Unknown word (true)          -- to ground" default="true" doc="If checked, the
Tools/stkdata/stk_object_parameters.xml:354:82    - Unknown word (checked)       -- default="true" doc="If checked, the item will be snapped
Tools/stkdata/stk_object_parameters.xml:355:103   - Unknown word (shown)         -- checked, the item will be shown only in CTF mode"/>
Tools/stkdata/stk_object_parameters.xml:355:121   - Unknown word (mode)          -- be shown only in CTF mode"/>
Tools/stkdata/stk_object_parameters.xml:355:77    - Unknown word (checked)       -- default="false" doc="If checked, the item will be shown
Tools/stkdata/stk_object_parameters.xml:358:14    - Unknown word (Easter)        -- <!-- Easter egg -->
Tools/stkdata/stk_object_parameters.xml:359:103   - Unknown word (Empty)         -- hidden item (apply to an Empty)">
Tools/stkdata/stk_object_parameters.xml:359:25    - Unknown word (easteregg)     -- <EnumChoice id="easteregg" label="Easter Egg
Tools/stkdata/stk_object_parameters.xml:359:43    - Unknown word (Easter)        -- id="easteregg" label="Easter Egg (Egg hunt mode)
Tools/stkdata/stk_object_parameters.xml:359:64    - Unknown word (mode)          -- Easter Egg (Egg hunt mode)" doc="A hidden item
Tools/stkdata/stk_object_parameters.xml:359:78    - Unknown word (hidden)        -- Egg hunt mode)" doc="A hidden item (apply to an Empty
Tools/stkdata/stk_object_parameters.xml:35:14     - Unknown word (Choice)       -- <EnumChoice id="" label="None" doc
Tools/stkdata/stk_object_parameters.xml:35:34     - Unknown word (None)         -- EnumChoice id="" label="None" doc="Nothing special
Tools/stkdata/stk_object_parameters.xml:35:45     - Unknown word (Nothing)      -- " label="None" doc="Nothing special about this object
Tools/stkdata/stk_object_parameters.xml:35:53     - Unknown word (special)      -- "None" doc="Nothing special about this object"
Tools/stkdata/stk_object_parameters.xml:35:61     - Unknown word (about)        -- doc="Nothing special about this object" />
Tools/stkdata/stk_object_parameters.xml:35:67     - Unknown word (this)         -- Nothing special about this object" />
Tools/stkdata/stk_object_parameters.xml:360:27    - Unknown word (easteregg)     -- <BoolProp id="easteregg_easy" name="Easy" default
Tools/stkdata/stk_object_parameters.xml:360:37    - Unknown word (easy)          -- BoolProp id="easteregg_easy" name="Easy" default
Tools/stkdata/stk_object_parameters.xml:360:49    - Unknown word (Easy)          -- easteregg_easy" name="Easy" default="true" doc
Tools/stkdata/stk_object_parameters.xml:360:75    - Unknown word (Visible)       -- default="true" doc="Visible in easy difficulty"
Tools/stkdata/stk_object_parameters.xml:360:86    - Unknown word (easy)          -- true" doc="Visible in easy difficulty"/>
Tools/stkdata/stk_object_parameters.xml:360:91    - Unknown word (difficulty)    -- doc="Visible in easy difficulty"/>
Tools/stkdata/stk_object_parameters.xml:361:109   - Unknown word (difficulty)    -- Visible in intermediate difficulty"/>
Tools/stkdata/stk_object_parameters.xml:361:27    - Unknown word (easteregg)     -- <BoolProp id="easteregg_medium" name="Intermediate
Tools/stkdata/stk_object_parameters.xml:361:37    - Unknown word (medium)        -- BoolProp id="easteregg_medium" name="Intermediate
Tools/stkdata/stk_object_parameters.xml:361:51    - Unknown word (Intermediate)  -- easteregg_medium" name="Intermediate" default="true" doc
Tools/stkdata/stk_object_parameters.xml:361:96    - Unknown word (intermediate)  -- true" doc="Visible in intermediate difficulty"/>
Tools/stkdata/stk_object_parameters.xml:362:27    - Unknown word (easteregg)     -- <BoolProp id="easteregg_hard" name="Hard" default
Tools/stkdata/stk_object_parameters.xml:362:37    - Unknown word (hard)          -- BoolProp id="easteregg_hard" name="Hard" default
Tools/stkdata/stk_object_parameters.xml:362:49    - Unknown word (Hard)          -- easteregg_hard" name="Hard" default="true" doc
Tools/stkdata/stk_object_parameters.xml:362:86    - Unknown word (hard)          -- true" doc="Visible in hard difficulty"/>
Tools/stkdata/stk_object_parameters.xml:362:91    - Unknown word (difficulty)    -- doc="Visible in hard difficulty"/>
Tools/stkdata/stk_object_parameters.xml:365:14    - Unknown word (Nitro)         -- <!-- Nitro -->
Tools/stkdata/stk_object_parameters.xml:366:25    - Unknown word (nitro)         -- <EnumChoice id="nitro_big" label="Nitro (big
Tools/stkdata/stk_object_parameters.xml:366:43    - Unknown word (Nitro)         -- id="nitro_big" label="Nitro (big)" doc="A big nitro
Tools/stkdata/stk_object_parameters.xml:366:67    - Unknown word (nitro)         -- Nitro (big)" doc="A big nitro collectible (apply to
Tools/stkdata/stk_object_parameters.xml:366:73    - Unknown word (collectible)   -- big)" doc="A big nitro collectible (apply to an Empty)
Tools/stkdata/stk_object_parameters.xml:366:98    - Unknown word (Empty)         -- collectible (apply to an Empty)">
Tools/stkdata/stk_object_parameters.xml:367:108   - Unknown word (snapped)       -- checked, the item will be snapped to the ground"/>
Tools/stkdata/stk_object_parameters.xml:367:27    - Unknown word (dropitem)      -- <BoolProp id="dropitem" name="Drop to ground
Tools/stkdata/stk_object_parameters.xml:367:43    - Unknown word (Drop)          -- id="dropitem" name="Drop to ground" default=
Tools/stkdata/stk_object_parameters.xml:367:82    - Unknown word (checked)       -- default="true" doc="If checked, the item will be snapped
Tools/stkdata/stk_object_parameters.xml:368:103   - Unknown word (shown)         -- checked, the item will be shown only in CTF mode"/>
Tools/stkdata/stk_object_parameters.xml:36:25     - Unknown word (none)         -- <EnumChoice id="none" label="None" doc="Nothing
Tools/stkdata/stk_object_parameters.xml:36:38     - Unknown word (None)         -- EnumChoice id="none" label="None" doc="Nothing special
Tools/stkdata/stk_object_parameters.xml:36:49     - Unknown word (Nothing)      -- none" label="None" doc="Nothing special about this object
Tools/stkdata/stk_object_parameters.xml:36:57     - Unknown word (special)      -- "None" doc="Nothing special about this object"
Tools/stkdata/stk_object_parameters.xml:36:65     - Unknown word (about)        -- doc="Nothing special about this object" />
Tools/stkdata/stk_object_parameters.xml:36:71     - Unknown word (this)         -- Nothing special about this object" />
Tools/stkdata/stk_object_parameters.xml:371:104   - Unknown word (Empty)         -- collectible (apply to an Empty)">
Tools/stkdata/stk_object_parameters.xml:371:25    - Unknown word (nitro)         -- <EnumChoice id="nitro_small" label="Nitro
Tools/stkdata/stk_object_parameters.xml:371:31    - Unknown word (small)         -- EnumChoice id="nitro_small" label="Nitro (small
Tools/stkdata/stk_object_parameters.xml:371:45    - Unknown word (Nitro)         -- nitro_small" label="Nitro (small)" doc="A small
Tools/stkdata/stk_object_parameters.xml:371:52    - Unknown word (small)         -- small" label="Nitro (small)" doc="A small nitro
Tools/stkdata/stk_object_parameters.xml:371:67    - Unknown word (small)         -- Nitro (small)" doc="A small nitro collectible (apply
Tools/stkdata/stk_object_parameters.xml:371:73    - Unknown word (nitro)         -- small)" doc="A small nitro collectible (apply to
Tools/stkdata/stk_object_parameters.xml:371:79    - Unknown word (collectible)   -- doc="A small nitro collectible (apply to an Empty)
Tools/stkdata/stk_object_parameters.xml:372:108   - Unknown word (snapped)       -- checked, the item will be snapped to the ground"/>
Tools/stkdata/stk_object_parameters.xml:372:27    - Unknown word (dropitem)      -- <BoolProp id="dropitem" name="Drop to ground
Tools/stkdata/stk_object_parameters.xml:372:43    - Unknown word (Drop)          -- id="dropitem" name="Drop to ground" default=
Tools/stkdata/stk_object_parameters.xml:373:103   - Unknown word (shown)         -- checked, the item will be shown only in CTF mode"/>
Tools/stkdata/stk_object_parameters.xml:376:29    - Unknown word (flag)          -- <EnumChoice id="red_flag" label="Red flag position
Tools/stkdata/stk_object_parameters.xml:376:46    - Unknown word (flag)          -- red_flag" label="Red flag position" doc="Default
Tools/stkdata/stk_object_parameters.xml:376:91    - Unknown word (flag)          -- Default position for red flag">
Tools/stkdata/stk_object_parameters.xml:379:25    - Unknown word (blue)          -- <EnumChoice id="blue_flag" label="Blue flag
Tools/stkdata/stk_object_parameters.xml:379:30    - Unknown word (flag)          -- EnumChoice id="blue_flag" label="Blue flag position
Tools/stkdata/stk_object_parameters.xml:379:43    - Unknown word (Blue)          -- id="blue_flag" label="Blue flag position" doc=
Tools/stkdata/stk_object_parameters.xml:379:48    - Unknown word (flag)          -- blue_flag" label="Blue flag position" doc="Default
Tools/stkdata/stk_object_parameters.xml:379:89    - Unknown word (blue)          -- Default position for blue flag">
Tools/stkdata/stk_object_parameters.xml:382:28    - Unknown word (CAMERA)        -- <!-- ************* CAMERA ************* -->
Tools/stkdata/stk_object_parameters.xml:383:37    - Unknown word (cameras)       -- EnumChoice id="__category__cameras_spacer" label=""/>
Tools/stkdata/stk_object_parameters.xml:383:45    - Unknown word (spacer)        -- __category__cameras_spacer" label=""/>
Tools/stkdata/stk_object_parameters.xml:384:37    - Unknown word (cameras)       -- EnumChoice id="__category__cameras" label="Cameras"/>
Tools/stkdata/stk_object_parameters.xml:384:53    - Unknown word (Cameras)       -- category__cameras" label="Cameras"/>
Tools/stkdata/stk_object_parameters.xml:386:14    - Unknown word (Cutscene)      -- <!-- Cutscene camera -->
Tools/stkdata/stk_object_parameters.xml:386:23    - Unknown word (camera)        -- <!-- Cutscene camera -->
Tools/stkdata/stk_object_parameters.xml:387:25    - Unknown word (cutscene)      -- <EnumChoice id="cutscene_camera" label="Cutscene
Tools/stkdata/stk_object_parameters.xml:387:49    - Unknown word (Cutscene)      -- cutscene_camera" label="Cutscene camera" doc="Use only
Tools/stkdata/stk_object_parameters.xml:387:83    - Unknown word (cutscenes)     -- camera" doc="Use only in cutscenes" >
Tools/stkdata/stk_object_parameters.xml:390:18    - Unknown word (cameras)       -- <!-- End cameras -->
Tools/stkdata/stk_object_parameters.xml:391:43    - Unknown word (Camera)        -- id="fixed" label="End Camera (Fixed)" doc="An end
Tools/stkdata/stk_object_parameters.xml:391:83    - Unknown word (stays)         -- "An end camera that stays in place">
Tools/stkdata/stk_object_parameters.xml:391:92    - Unknown word (place)         -- camera that stays in place">
Tools/stkdata/stk_object_parameters.xml:393:55    - Unknown word (which)         -- size of the sphere in which this camera is activated
Tools/stkdata/stk_object_parameters.xml:395:25    - Unknown word (ahead)         -- <EnumChoice id="ahead" label="End Camera
Tools/stkdata/stk_object_parameters.xml:395:43    - Unknown word (Camera)       -- id="ahead" label="End Camera (Look Ahead)" doc="An
Tools/stkdata/stk_object_parameters.xml:395:51    - Unknown word (Look)         -- label="End Camera (Look Ahead)" doc="An end
Tools/stkdata/stk_object_parameters.xml:395:56    - Unknown word (Ahead)        -- label="End Camera (Look Ahead)" doc="An end camera
Tools/stkdata/stk_object_parameters.xml:395:88    - Unknown word (follows)      -- "An end camera that follows the kart">
Tools/stkdata/stk_object_parameters.xml:39:63     - Unknown word (that)         -- Ignore" doc="An object that is not exported and
Tools/stkdata/stk_object_parameters.xml:39:75     - Unknown word (exported)     -- An object that is not exported and will not appear
Tools/stkdata/stk_object_parameters.xml:39:88     - Unknown word (will)         -- is not exported and will not appear in-game"
Tools/stkdata/stk_object_parameters.xml:39:97     - Unknown word (appear)       -- exported and will not appear in-game"/>
Tools/stkdata/stk_object_parameters.xml:3:23      - Unknown word (Kart)       -- bl-label="SuperTuxKart Object Properties"
Tools/stkdata/stk_object_parameters.xml:402:27    - Unknown word (column)       -- <EnumChoice id="__column_break__sfx"/>
Tools/stkdata/stk_object_parameters.xml:402:34    - Unknown word (break)        -- EnumChoice id="__column_break__sfx"/>
Tools/stkdata/stk_object_parameters.xml:403:49    - Unknown word (Special)      -- category__sfx" label="Special effects"/>
Tools/stkdata/stk_object_parameters.xml:403:57    - Unknown word (effects)      -- sfx" label="Special effects"/>
Tools/stkdata/stk_object_parameters.xml:405:14    - Unknown word (Billboard)    -- <!-- Billboard -->
Tools/stkdata/stk_object_parameters.xml:406:25    - Unknown word (billboard)    -- <EnumChoice id="billboard" label="Billboard" doc
Tools/stkdata/stk_object_parameters.xml:406:43    - Unknown word (Billboard)    -- id="billboard" label="Billboard" doc="A flat quad that
Tools/stkdata/stk_object_parameters.xml:406:61    - Unknown word (flat)         -- label="Billboard" doc="A flat quad that will always
Tools/stkdata/stk_object_parameters.xml:406:66    - Unknown word (quad)         -- Billboard" doc="A flat quad that will always face
Tools/stkdata/stk_object_parameters.xml:406:81    - Unknown word (always)       -- flat quad that will always face the camera" >
Tools/stkdata/stk_object_parameters.xml:407:103   - Unknown word (fade)         -- Make this billboard fade out when approaching
Tools/stkdata/stk_object_parameters.xml:407:117   - Unknown word (approaching)  -- billboard fade out when approaching it">
Tools/stkdata/stk_object_parameters.xml:407:27    - Unknown word (fadeout)      -- <BoolProp id="fadeout" name="Fadeout when
Tools/stkdata/stk_object_parameters.xml:407:42    - Unknown word (Fadeout)      -- BoolProp id="fadeout" name="Fadeout when close" default
Tools/stkdata/stk_object_parameters.xml:407:93    - Unknown word (billboard)    -- false" doc="Make this billboard fade out when approaching
Tools/stkdata/stk_object_parameters.xml:409:33    - Unknown word (Distance)     -- doc="Distance from the camera at which
Tools/stkdata/stk_object_parameters.xml:409:71    - Unknown word (billboard)    -- camera at which the billboard is no more visible"
Tools/stkdata/stk_object_parameters.xml:409:87    - Unknown word (more)         -- the billboard is no more visible"/>
Tools/stkdata/stk_object_parameters.xml:411:71    - Unknown word (billboard)    -- camera at which the billboard is fully visible"/>
Tools/stkdata/stk_object_parameters.xml:411:84    - Unknown word (fully)        -- which the billboard is fully visible"/>
Tools/stkdata/stk_object_parameters.xml:415:14    - Unknown word (Particle)     -- <!-- Particle emitter -->
Tools/stkdata/stk_object_parameters.xml:415:23    - Unknown word (emitter)      -- <!-- Particle emitter -->
Tools/stkdata/stk_object_parameters.xml:416:100   - Unknown word (particles)    -- applied to an empty; particles will be emitted from
Tools/stkdata/stk_object_parameters.xml:416:118   - Unknown word (emitted)      -- empty; particles will be emitted from this point">
Tools/stkdata/stk_object_parameters.xml:416:25    - Unknown word (particle)     -- <EnumChoice id="particle_emitter" label="Particle
Tools/stkdata/stk_object_parameters.xml:416:34    - Unknown word (emitter)      -- EnumChoice id="particle_emitter" label="Particle Emitter
Tools/stkdata/stk_object_parameters.xml:416:50    - Unknown word (Particle)     -- particle_emitter" label="Particle Emitter" doc="To be
Tools/stkdata/stk_object_parameters.xml:416:59    - Unknown word (Emitter)      -- emitter" label="Particle Emitter" doc="To be applied
Tools/stkdata/stk_object_parameters.xml:416:93    - Unknown word (empty)        -- To be applied to an empty; particles will be emitted
Tools/stkdata/stk_object_parameters.xml:417:29    - Unknown word (kind)         -- <StringProp id="kind" name="Particle File
Tools/stkdata/stk_object_parameters.xml:417:41    - Unknown word (Particle)     -- StringProp id="kind" name="Particle File" default="smoke
Tools/stkdata/stk_object_parameters.xml:417:65    - Unknown word (smoke)        -- Particle File" default="smoke.xml" />
Tools/stkdata/stk_object_parameters.xml:418:121   - Unknown word (particles)    -- camera distance at which particles are hidden (for performance
Tools/stkdata/stk_object_parameters.xml:418:135   - Unknown word (hidden)       -- which particles are hidden (for performance reasons
Tools/stkdata/stk_object_parameters.xml:418:147   - Unknown word (performance)  -- particles are hidden (for performance reasons)"/>
Tools/stkdata/stk_object_parameters.xml:418:159   - Unknown word (reasons)      -- hidden (for performance reasons)"/>
Tools/stkdata/stk_object_parameters.xml:418:26    - Unknown word (clip)         -- <IntProp id="clip_distance" name="Clip
Tools/stkdata/stk_object_parameters.xml:418:47    - Unknown word (Clip)         -- clip_distance" name="Clip Distance" default="
Tools/stkdata/stk_object_parameters.xml:419:106   - Unknown word (automatically) -- Whether the emitter will automatically start emitting (if initially
Tools/stkdata/stk_object_parameters.xml:419:126   - Unknown word (emitting)      -- automatically start emitting (if initially disabled
Tools/stkdata/stk_object_parameters.xml:419:139   - Unknown word (initially)     -- omatically start emitting (if initially disabled, can be started
Tools/stkdata/stk_object_parameters.xml:419:149   - Unknown word (disabled)      -- emitting (if initially disabled, can be started with
Tools/stkdata/stk_object_parameters.xml:419:166   - Unknown word (started)       -- initially disabled, can be started with scripting)"/>
Tools/stkdata/stk_object_parameters.xml:419:179   - Unknown word (scripting)     -- can be started with scripting)"/>
Tools/stkdata/stk_object_parameters.xml:419:32    - Unknown word (emit)         -- <BoolProp id="auto_emit" name="Enable emission
Tools/stkdata/stk_object_parameters.xml:419:51    - Unknown word (emission)     -- auto_emit" name="Enable emission" default="true" doc
Tools/stkdata/stk_object_parameters.xml:419:81    - Unknown word (Whether)      -- default="true" doc="Whether the emitter will automaticall
Tools/stkdata/stk_object_parameters.xml:422:18    - Unknown word (Emitter)       -- <!-- SFX Emitter -->
Tools/stkdata/stk_object_parameters.xml:423:45    - Unknown word (Sound)         -- sfx_emitter" label="Sound Emitter" doc="A sound
Tools/stkdata/stk_object_parameters.xml:423:51    - Unknown word (Emitter)       -- emitter" label="Sound Emitter" doc="A sound will be
Tools/stkdata/stk_object_parameters.xml:423:67    - Unknown word (sound)         -- Sound Emitter" doc="A sound will be heard when close
Tools/stkdata/stk_object_parameters.xml:423:81    - Unknown word (heard)         -- doc="A sound will be heard when close to this point
Tools/stkdata/stk_object_parameters.xml:424:106   - Unknown word (sound)         -- doc="Filename of the sound to play"/>
Tools/stkdata/stk_object_parameters.xml:424:115   - Unknown word (play)          -- Filename of the sound to play"/>
Tools/stkdata/stk_object_parameters.xml:424:49    - Unknown word (Sound)         -- sfx_filename" name="Sound File" default="some
Tools/stkdata/stk_object_parameters.xml:424:70    - Unknown word (some)          -- Sound File" default="some_file.ogg" doc="Filename
Tools/stkdata/stk_object_parameters.xml:425:46    - Unknown word (Sound)         -- id="sfx_volume" name="Sound volume" default="1.
Tools/stkdata/stk_object_parameters.xml:427:32    - Unknown word (rolloff)       -- <FloatProp id="sfx_rolloff" name="Rolloff rate
Tools/stkdata/stk_object_parameters.xml:427:47    - Unknown word (Rolloff)       -- "sfx_rolloff" name="Rolloff rate" default="0.1"
Tools/stkdata/stk_object_parameters.xml:428:43    - Unknown word (sound)         -- doc="How fast this sound decays when going farther
Tools/stkdata/stk_object_parameters.xml:428:49    - Unknown word (decays)        -- How fast this sound decays when going farther from
Tools/stkdata/stk_object_parameters.xml:428:61    - Unknown word (going)         -- this sound decays when going farther from the emission
Tools/stkdata/stk_object_parameters.xml:428:67    - Unknown word (farther)       -- sound decays when going farther from the emission point
Tools/stkdata/stk_object_parameters.xml:428:84    - Unknown word (emission)      -- going farther from the emission point"/>
Tools/stkdata/stk_object_parameters.xml:429:48    - Unknown word (maximum)       -- sfx_max_dist" name="maximum distance" default="
Tools/stkdata/stk_object_parameters.xml:42:112    - Unknown word (either)       -- instance, will display either of the LOD Models in
Tools/stkdata/stk_object_parameters.xml:42:140    - Unknown word (this)         -- of the LOD Models in this LOD group at this location
Tools/stkdata/stk_object_parameters.xml:42:158    - Unknown word (this)         -- in this LOD group at this location">
Tools/stkdata/stk_object_parameters.xml:42:99     - Unknown word (will)         -- of-detail) instance, will display either of the
Tools/stkdata/stk_object_parameters.xml:430:79    - Unknown word (sound)         -- at which to cut this sound (stop hearing it)."
Tools/stkdata/stk_object_parameters.xml:430:91    - Unknown word (hearing)       -- cut this sound (stop hearing it)."/>
Tools/stkdata/stk_object_parameters.xml:432:107   - Unknown word (approaches)    -- "Play when the kart approaches this object">
Tools/stkdata/stk_object_parameters.xml:432:27    - Unknown word (play)          -- <BoolProp id="play_when_near" name="Play
Tools/stkdata/stk_object_parameters.xml:432:49    - Unknown word (Play)          -- play_when_near" name="Play on approach" default
Tools/stkdata/stk_object_parameters.xml:432:57    - Unknown word (approach)      -- near" name="Play on approach" default="false" doc
Tools/stkdata/stk_object_parameters.xml:432:88    - Unknown word (Play)          -- default="false" doc="Play when the kart approaches
Tools/stkdata/stk_object_parameters.xml:433:32    - Unknown word (play)          -- <FloatProp id="play_distance" name="Play
Tools/stkdata/stk_object_parameters.xml:433:53    - Unknown word (Play)          -- play_distance" name="Play when at distance" default
Tools/stkdata/stk_object_parameters.xml:434:55    - Unknown word (sound)         -- Distance at which the sound starts playing when
Tools/stkdata/stk_object_parameters.xml:434:61    - Unknown word (starts)        -- Distance at which the sound starts playing when approaching
Tools/stkdata/stk_object_parameters.xml:434:68    - Unknown word (playing)       -- which the sound starts playing when approaching"/>
Tools/stkdata/stk_object_parameters.xml:434:81    - Unknown word (approaching)   -- starts playing when approaching"/>
Tools/stkdata/stk_object_parameters.xml:436:114   - Unknown word (developers)    -- internal use only by STK developers"/>
Tools/stkdata/stk_object_parameters.xml:436:51    - Unknown word (Sound)         -- sfx_conditions" name="Sound conditions" default
Tools/stkdata/stk_object_parameters.xml:436:89    - Unknown word (internal)      -- default="" doc="For internal use only by STK developers
Tools/stkdata/stk_object_parameters.xml:43:70     - Unknown word (Some)         -- Group Name" default="SomeModel"
Tools/stkdata/stk_object_parameters.xml:441:40    - Unknown word (spacer)        -- EnumChoice id="__category__ai_spacer" label=""/>
Tools/stkdata/stk_object_parameters.xml:445:104   - Unknown word (there)         -- happen when driving there (FOR INTERNAL USE ONLY
Tools/stkdata/stk_object_parameters.xml:445:115   - Unknown word (INTERNAL)      -- when driving there (FOR INTERNAL USE ONLY AT THIS TIME
Tools/stkdata/stk_object_parameters.xml:445:136   - Unknown word (THIS)          -- INTERNAL USE ONLY AT THIS TIME)">
Tools/stkdata/stk_object_parameters.xml:445:74    - Unknown word (something)     -- Action trigger" doc="Make something happen when driving
Tools/stkdata/stk_object_parameters.xml:445:84    - Unknown word (happen)        -- doc="Make something happen when driving there
Tools/stkdata/stk_object_parameters.xml:445:96    - Unknown word (driving)       -- something happen when driving there (FOR INTERNAL
Tools/stkdata/stk_object_parameters.xml:448:103   - Unknown word (before)        -- 999.9" doc="Timeout before this action is re-triggered
Tools/stkdata/stk_object_parameters.xml:448:37    - Unknown word (timeout)       -- FloatProp id="reenable_timeout" name="Re-enable Timeout
Tools/stkdata/stk_object_parameters.xml:448:62    - Unknown word (Timeout)       -- timeout" name="Re-enable Timeout" default="999999.9"
Tools/stkdata/stk_object_parameters.xml:448:95    - Unknown word (Timeout)       -- default="999999.9" doc="Timeout before this action is
Tools/stkdata/stk_object_parameters.xml:449:14    - Unknown word (triggering)    -- after first triggering, 0 to make it always
Tools/stkdata/stk_object_parameters.xml:449:2     - Unknown word (after)         -- after first triggering, 0
Tools/stkdata/stk_object_parameters.xml:449:39    - Unknown word (always)        -- triggering, 0 to make it always re-triggerable, 999
Tools/stkdata/stk_object_parameters.xml:449:49    - Unknown word (triggerable)   -- to make it always re-triggerable, 999999.9 to make it
Tools/stkdata/stk_object_parameters.xml:449:87    - Unknown word (once)          -- 9.9 to make it only once."/>
Tools/stkdata/stk_object_parameters.xml:44:40     - Unknown word (self)         -- filter="lambda self, o: 'lod_name' in o
Tools/stkdata/stk_object_parameters.xml:450:132   - Unknown word (being)         -- Name of the object for being triggered if
Tools/stkdata/stk_object_parameters.xml:450:79    - Unknown word (library)       -- Trigger which object in a library node" default="" doc
Tools/stkdata/stk_object_parameters.xml:451:20    - Unknown word (library)       -- this is used in a library node"/>
Tools/stkdata/stk_object_parameters.xml:458:14    - Unknown word (Cannon)        -- <!-- Cannon -->
Tools/stkdata/stk_object_parameters.xml:459:113   - Unknown word (should)        -- path for the kart. This should be assigned to a line
Tools/stkdata/stk_object_parameters.xml:459:123   - Unknown word (assigned)      -- kart. This should be assigned to a line indicating
Tools/stkdata/stk_object_parameters.xml:459:142   - Unknown word (indicating)    -- be assigned to a line indicating the start of the flight
Tools/stkdata/stk_object_parameters.xml:459:170   - Unknown word (flight)        -- indicating the start of the flight." >
Tools/stkdata/stk_object_parameters.xml:459:25    - Unknown word (cannonstart)   -- <EnumChoice id="cannonstart" label="Cannon Start
Tools/stkdata/stk_object_parameters.xml:459:45    - Unknown word (Cannon)        -- cannonstart" label="Cannon Start" doc="A 'cannon
Tools/stkdata/stk_object_parameters.xml:459:67    - Unknown word (cannon)        -- Cannon Start" doc="A 'cannon' defines a fly path
Tools/stkdata/stk_object_parameters.xml:459:75    - Unknown word (defines)       -- Start" doc="A 'cannon' defines a fly path for the kart
Tools/stkdata/stk_object_parameters.xml:45:48     - Unknown word (self)         -- obj_identifier="lambda self, o : o['lod_name']"
Tools/stkdata/stk_object_parameters.xml:460:29    - Unknown word (cannonend)     -- <ObjRefProp id="cannonend" name="Flight end line
Tools/stkdata/stk_object_parameters.xml:460:46    - Unknown word (Flight)        -- id="cannonend" name="Flight end line" default="
Tools/stkdata/stk_object_parameters.xml:461:40    - Unknown word (self)          -- filter="lambda self, o : 'type' in o and
Tools/stkdata/stk_object_parameters.xml:461:80    - Unknown word (cannonend)     -- o and o['type'] == 'cannonend'"
Tools/stkdata/stk_object_parameters.xml:462:34    - Unknown word (flight)        -- doc="The flight end line associated
Tools/stkdata/stk_object_parameters.xml:462:71    - Unknown word (flight)        -- associated with this flight start line"/>
Tools/stkdata/stk_object_parameters.xml:463:29    - Unknown word (cannonpath)    -- <ObjRefProp id="cannonpath" name="Path" default
Tools/stkdata/stk_object_parameters.xml:464:40    - Unknown word (self)          -- filter="lambda self, o : o.type == 'CURVE
Tools/stkdata/stk_object_parameters.xml:464:61    - Unknown word (CURVE)         -- self, o : o.type == 'CURVE'"
Tools/stkdata/stk_object_parameters.xml:465:54    - Unknown word (follow)        -- Path that the kart will follow while flying"/>
Tools/stkdata/stk_object_parameters.xml:465:61    - Unknown word (while)         -- the kart will follow while flying"/>
Tools/stkdata/stk_object_parameters.xml:465:67    - Unknown word (flying)        -- kart will follow while flying"/>
Tools/stkdata/stk_object_parameters.xml:466:120   - Unknown word (flies)        -- Speed at which the kart flies"/>
Tools/stkdata/stk_object_parameters.xml:466:28    - Unknown word (cannonspeed)   -- <FloatProp id="cannonspeed" name="Speed" default
Tools/stkdata/stk_object_parameters.xml:466:47    - Unknown word (Speed)        -- "cannonspeed" name="Speed" default="50.0" min
Tools/stkdata/stk_object_parameters.xml:466:96    - Unknown word (Speed)        -- 0" max="250.0" doc="Speed at which the kart flies
Tools/stkdata/stk_object_parameters.xml:469:109   - Unknown word (should)       -- path for the kart. This should be assigned to a line
Tools/stkdata/stk_object_parameters.xml:469:119   - Unknown word (assigned)     -- kart. This should be assigned to a line indicating
Tools/stkdata/stk_object_parameters.xml:469:138   - Unknown word (indicating)   -- be assigned to a line indicating the end of the flight
Tools/stkdata/stk_object_parameters.xml:469:164   - Unknown word (flight)       -- indicating the end of the flight." >
Tools/stkdata/stk_object_parameters.xml:469:25    - Unknown word (cannonend)    -- <EnumChoice id="cannonend" label="Cannon End"
Tools/stkdata/stk_object_parameters.xml:469:43    - Unknown word (Cannon)       -- id="cannonend" label="Cannon End" doc="A 'cannon
Tools/stkdata/stk_object_parameters.xml:469:63    - Unknown word (cannon)       -- Cannon End" doc="A 'cannon' defines a fly path
Tools/stkdata/stk_object_parameters.xml:469:71    - Unknown word (defines)      -- End" doc="A 'cannon' defines a fly path for the kart
Tools/stkdata/stk_object_parameters.xml:46:42     - Unknown word (self)         -- obj_text="lambda self, o : o['lod_name']"
Tools/stkdata/stk_object_parameters.xml:472:14    - Unknown word (Drivelines)   -- <!-- Drivelines and checklines -->
Tools/stkdata/stk_object_parameters.xml:472:29    - Unknown word (checklines)   -- <!-- Drivelines and checklines -->
Tools/stkdata/stk_object_parameters.xml:473:103   - Unknown word (forbid)       -- must cross (used to forbid shortcuts)" >
Tools/stkdata/stk_object_parameters.xml:473:110   - Unknown word (shortcuts)    -- cross (used to forbid shortcuts)" >
Tools/stkdata/stk_object_parameters.xml:473:39    - Unknown word (Checkline)    -- EnumChoice id="check" label="Checkline" doc="A checkline that
Tools/stkdata/stk_object_parameters.xml:473:57    - Unknown word (checkline)    -- label="Checkline" doc="A checkline that the player must
Tools/stkdata/stk_object_parameters.xml:473:83    - Unknown word (must)         -- checkline that the player must cross (used to forbid
Tools/stkdata/stk_object_parameters.xml:474:75    - Unknown word (checkline)    -- "" doc="Name of the checkline"/>
Tools/stkdata/stk_object_parameters.xml:477:30    - Unknown word (Which)        -- doc="Which check structure to activate
Tools/stkdata/stk_object_parameters.xml:477:42    - Unknown word (structure)    -- doc="Which check structure to activate when crossing
Tools/stkdata/stk_object_parameters.xml:477:69    - Unknown word (crossing)     -- structure to activate when crossing this checkline"/>
Tools/stkdata/stk_object_parameters.xml:477:83    - Unknown word (checkline)    -- activate when crossing this checkline"/>
Tools/stkdata/stk_object_parameters.xml:479:25    - Unknown word (driveline)    -- <EnumChoice id="driveline" label="Driveline (additional
Tools/stkdata/stk_object_parameters.xml:479:43    - Unknown word (Driveline)    -- id="driveline" label="Driveline (additional)" doc="Driveline
Tools/stkdata/stk_object_parameters.xml:479:54    - Unknown word (additional)   -- driveline" label="Driveline (additional)" doc="Driveline used
Tools/stkdata/stk_object_parameters.xml:479:72    - Unknown word (Driveline)    -- Driveline (additional)" doc="Driveline used to mark an alternate
Tools/stkdata/stk_object_parameters.xml:479:90    - Unknown word (mark)         -- doc="Driveline used to mark an alternate path"
Tools/stkdata/stk_object_parameters.xml:479:98    - Unknown word (alternate)    -- Driveline used to mark an alternate path" >
Tools/stkdata/stk_object_parameters.xml:480:107   - Unknown word (appear)       -- this path will not appear in the minimap"/>
Tools/stkdata/stk_object_parameters.xml:480:27    - Unknown word (invisible)    -- <BoolProp id="invisible" name="Invisible" default
Tools/stkdata/stk_object_parameters.xml:480:44    - Unknown word (Invisible)    -- id="invisible" name="Invisible" default="false" doc
Tools/stkdata/stk_object_parameters.xml:481:44    - Unknown word (Ignored)      -- id="ai_ignore" name="Ignored by AIs" default="false
Tools/stkdata/stk_object_parameters.xml:482:27    - Unknown word (direction)    -- <EnumProp id="direction" name="Usable directions
Tools/stkdata/stk_object_parameters.xml:482:44    - Unknown word (Usable)       -- id="direction" name="Usable directions" default
Tools/stkdata/stk_object_parameters.xml:482:51    - Unknown word (directions)   -- direction" name="Usable directions" default="both"
Tools/stkdata/stk_object_parameters.xml:482:72    - Unknown word (both)         -- directions" default="both"
Tools/stkdata/stk_object_parameters.xml:483:101   - Unknown word (reverse)      -- drivable (used with the 'reverse driving' feature)">
Tools/stkdata/stk_object_parameters.xml:483:109   - Unknown word (driving)      -- used with the 'reverse driving' feature)">
Tools/stkdata/stk_object_parameters.xml:483:37    - Unknown word (direction)    -- doc="In which direction(s) this part of the
Tools/stkdata/stk_object_parameters.xml:483:67    - Unknown word (track)        -- s) this part of the track is drivable (used with
Tools/stkdata/stk_object_parameters.xml:483:76    - Unknown word (drivable)     -- part of the track is drivable (used with the 'reverse
Tools/stkdata/stk_object_parameters.xml:484:105   - Unknown word (directions)   -- forward and reverse directions"/>
Tools/stkdata/stk_object_parameters.xml:484:33    - Unknown word (both)         -- <EnumChoice id="both" label="Both directions
Tools/stkdata/stk_object_parameters.xml:484:46    - Unknown word (Both)         -- EnumChoice id="both" label="Both directions" doc="Drivable
Tools/stkdata/stk_object_parameters.xml:484:51    - Unknown word (directions)   -- id="both" label="Both directions" doc="Drivable both
Tools/stkdata/stk_object_parameters.xml:484:68    - Unknown word (Drivable)     -- Both directions" doc="Drivable both in forward and
Tools/stkdata/stk_object_parameters.xml:484:77    - Unknown word (both)         -- directions" doc="Drivable both in forward and reverse
Tools/stkdata/stk_object_parameters.xml:484:97    - Unknown word (reverse)      -- both in forward and reverse directions"/>
Tools/stkdata/stk_object_parameters.xml:485:68    - Unknown word (Drivable)     -- "Forward only" doc="Drivable only in forward direction
Tools/stkdata/stk_object_parameters.xml:485:93    - Unknown word (direction)    -- Drivable only in forward direction"/>
Tools/stkdata/stk_object_parameters.xml:486:33    - Unknown word (reverse)      -- <EnumChoice id="reverse" label="Reverse only
Tools/stkdata/stk_object_parameters.xml:486:49    - Unknown word (Reverse)      -- id="reverse" label="Reverse only" doc="Drivable
Tools/stkdata/stk_object_parameters.xml:486:68    - Unknown word (Drivable)     -- "Reverse only" doc="Drivable only in reverse direction
Tools/stkdata/stk_object_parameters.xml:486:85    - Unknown word (reverse)      -- doc="Drivable only in reverse direction"/>
Tools/stkdata/stk_object_parameters.xml:486:93    - Unknown word (direction)    -- Drivable only in reverse direction"/>
Tools/stkdata/stk_object_parameters.xml:489:102   - Unknown word (where)         -- driveline used to mark where karts may drive" >
Tools/stkdata/stk_object_parameters.xml:489:108   - Unknown word (karts)         -- driveline used to mark where karts may drive" >
Tools/stkdata/stk_object_parameters.xml:489:25    - Unknown word (maindriveline) -- <EnumChoice id="maindriveline" label="Driveline (main
Tools/stkdata/stk_object_parameters.xml:489:47    - Unknown word (Driveline)     -- maindriveline" label="Driveline (main)" doc="The main
Tools/stkdata/stk_object_parameters.xml:489:58    - Unknown word (main)          -- ndriveline" label="Driveline (main)" doc="The main driveline
Tools/stkdata/stk_object_parameters.xml:489:74    - Unknown word (main)          -- Driveline (main)" doc="The main driveline used to mark
Tools/stkdata/stk_object_parameters.xml:489:79    - Unknown word (driveline)     -- main)" doc="The main driveline used to mark where karts
Tools/stkdata/stk_object_parameters.xml:489:97    - Unknown word (mark)          -- main driveline used to mark where karts may drive
Tools/stkdata/stk_object_parameters.xml:48:117    - Unknown word (call)         -- Scripting function to call when a kart hits this
Tools/stkdata/stk_object_parameters.xml:48:129    - Unknown word (kart)         -- function to call when a kart hits this object"/>
Tools/stkdata/stk_object_parameters.xml:48:134    - Unknown word (hits)         -- to call when a kart hits this object"/>
Tools/stkdata/stk_object_parameters.xml:48:14     - Unknown word (String)       -- <StringProp id="on_kart_collision
Tools/stkdata/stk_object_parameters.xml:48:32     - Unknown word (kart)         -- <StringProp id="on_kart_collision" name="Kart
Tools/stkdata/stk_object_parameters.xml:48:37     - Unknown word (collision)    -- StringProp id="on_kart_collision" name="Kart collision
Tools/stkdata/stk_object_parameters.xml:48:54     - Unknown word (Kart)         -- kart_collision" name="Kart collision callback"
Tools/stkdata/stk_object_parameters.xml:48:59     - Unknown word (collision)    -- collision" name="Kart collision callback" default="
Tools/stkdata/stk_object_parameters.xml:48:69     - Unknown word (callback)     -- name="Kart collision callback" default="" doc="Scripting
Tools/stkdata/stk_object_parameters.xml:48:95     - Unknown word (Scripting)    -- callback" default="" doc="Scripting function to call when
Tools/stkdata/stk_object_parameters.xml:492:30    - Unknown word (Which)         -- doc="Which check structure to activate
Tools/stkdata/stk_object_parameters.xml:492:42    - Unknown word (structure)     -- doc="Which check structure to activate when crossing
Tools/stkdata/stk_object_parameters.xml:492:69    - Unknown word (crossing)      -- structure to activate when crossing the lap line"/>
Tools/stkdata/stk_object_parameters.xml:493:103   - Unknown word (height)        -- -1.0" doc="Vertical height smaller this value will
Tools/stkdata/stk_object_parameters.xml:493:110   - Unknown word (smaller)       -- doc="Vertical height smaller this value will not
Tools/stkdata/stk_object_parameters.xml:493:141   - Unknown word (considered)    -- this value will not be considered on-quad"/>
Tools/stkdata/stk_object_parameters.xml:493:155   - Unknown word (quad)          -- not be considered on-quad"/>
Tools/stkdata/stk_object_parameters.xml:493:32    - Unknown word (height)        -- <FloatProp id="min_height_testing" name="Min height
Tools/stkdata/stk_object_parameters.xml:493:58    - Unknown word (height)        -- height_testing" name="Min height testing" default="-
Tools/stkdata/stk_object_parameters.xml:493:94    - Unknown word (Vertical)      -- default="-1.0" doc="Vertical height smaller this
Tools/stkdata/stk_object_parameters.xml:494:109   - Unknown word (larger)        -- doc="Vertical height larger this value will not
Tools/stkdata/stk_object_parameters.xml:494:139   - Unknown word (considered)    -- this value will not be considered on-quad"/>
Tools/stkdata/stk_object_parameters.xml:494:153   - Unknown word (quad)          -- not be considered on-quad"/>
Tools/stkdata/stk_object_parameters.xml:494:32    - Unknown word (height)        -- <FloatProp id="max_height_testing" name="Max height
Tools/stkdata/stk_object_parameters.xml:494:58    - Unknown word (height)        -- height_testing" name="Max height testing" default="5
Tools/stkdata/stk_object_parameters.xml:494:93    - Unknown word (Vertical)      -- default="5.0" doc="Vertical height larger this value
Tools/stkdata/stk_object_parameters.xml:496:25    - Unknown word (navmesh)       -- <EnumChoice id="navmesh" label="Navmesh" doc
Tools/stkdata/stk_object_parameters.xml:496:41    - Unknown word (Navmesh)       -- id="navmesh" label="Navmesh" doc="Navmesh (for battle
Tools/stkdata/stk_object_parameters.xml:496:55    - Unknown word (Navmesh)       -- label="Navmesh" doc="Navmesh (for battle arenas)
Tools/stkdata/stk_object_parameters.xml:496:68    - Unknown word (battle)        -- Navmesh" doc="Navmesh (for battle arenas)" >
Tools/stkdata/stk_object_parameters.xml:496:75    - Unknown word (arenas)        -- Navmesh (for battle arenas)" >
Tools/stkdata/stk_object_parameters.xml:497:110   - Unknown word (smaller)       -- doc="Vertical height smaller this value will not
Tools/stkdata/stk_object_parameters.xml:497:141   - Unknown word (considered)    -- this value will not be considered on-quad"/>
Tools/stkdata/stk_object_parameters.xml:497:155   - Unknown word (quad)          -- not be considered on-quad"/>
Tools/stkdata/stk_object_parameters.xml:497:94    - Unknown word (Vertical)      -- default="-1.0" doc="Vertical height smaller this
Tools/stkdata/stk_object_parameters.xml:498:109   - Unknown word (larger)        -- doc="Vertical height larger this value will not
Tools/stkdata/stk_object_parameters.xml:498:139   - Unknown word (considered)    -- this value will not be considered on-quad"/>
Tools/stkdata/stk_object_parameters.xml:498:153   - Unknown word (quad)          -- not be considered on-quad"/>
Tools/stkdata/stk_object_parameters.xml:498:93    - Unknown word (Vertical)      -- default="5.0" doc="Vertical height larger this value
Tools/stkdata/stk_object_parameters.xml:49:18     - Unknown word (Interaction)  -- <!-- Interaction -->
Tools/stkdata/stk_object_parameters.xml:501:14    - Unknown word (Goal)          -- <!-- Goal -->
Tools/stkdata/stk_object_parameters.xml:502:105   - Unknown word (crosses)       -- scored when a soccer ball crosses this line" >
Tools/stkdata/stk_object_parameters.xml:502:25    - Unknown word (goal)          -- <EnumChoice id="goal" label="Goal line (soccer
Tools/stkdata/stk_object_parameters.xml:502:38    - Unknown word (Goal)          -- EnumChoice id="goal" label="Goal line (soccer mode)"
Tools/stkdata/stk_object_parameters.xml:502:49    - Unknown word (soccer)        -- goal" label="Goal line (soccer mode)" doc="A point
Tools/stkdata/stk_object_parameters.xml:502:79    - Unknown word (scored)        -- mode)" doc="A point is scored when a soccer ball crosses
Tools/stkdata/stk_object_parameters.xml:502:93    - Unknown word (soccer)        -- point is scored when a soccer ball crosses this line
Tools/stkdata/stk_object_parameters.xml:503:107   - Unknown word (second)        -- first goal, unchecked=second goal"/>
Tools/stkdata/stk_object_parameters.xml:503:114   - Unknown word (goal)          -- goal, unchecked=second goal"/>
Tools/stkdata/stk_object_parameters.xml:503:33    - Unknown word (goal)          -- <BoolProp id="first_goal" name="First goal" default
Tools/stkdata/stk_object_parameters.xml:503:51    - Unknown word (goal)          -- first_goal" name="First goal" default="true" doc
Tools/stkdata/stk_object_parameters.xml:503:77    - Unknown word (Checked)       -- default="true" doc="Checked=first goal, unchecked
Tools/stkdata/stk_object_parameters.xml:503:91    - Unknown word (goal)          -- doc="Checked=first goal, unchecked=second goal
Tools/stkdata/stk_object_parameters.xml:507:72    - Unknown word (factory)       -- An extension to the factory lap line">
Tools/stkdata/stk_object_parameters.xml:50:104    - Unknown word (interact)     -- How this object should interact with other objects in
Tools/stkdata/stk_object_parameters.xml:50:118    - Unknown word (other)        -- should interact with other objects in the physics
Tools/stkdata/stk_object_parameters.xml:50:27     - Unknown word (interaction)  -- <EnumProp id="interaction" name="Interaction"
Tools/stkdata/stk_object_parameters.xml:50:46     - Unknown word (Interaction)  -- "interaction" name="Interaction" default="static" doc
Tools/stkdata/stk_object_parameters.xml:50:97     - Unknown word (should)       -- doc="How this object should interact with other
Tools/stkdata/stk_object_parameters.xml:510:30    - Unknown word (Which)         -- doc="Which check structure to activate
Tools/stkdata/stk_object_parameters.xml:510:42    - Unknown word (structure)     -- doc="Which check structure to activate when crossing
Tools/stkdata/stk_object_parameters.xml:510:69    - Unknown word (crossing)      -- structure to activate when crossing the lap line"/>
Tools/stkdata/stk_object_parameters.xml:513:20    - Unknown word (positions)     -- <!-- Start positions -->
Tools/stkdata/stk_object_parameters.xml:514:104   - Unknown word (battle)        -- position for karts in battle mode (only useful if
Tools/stkdata/stk_object_parameters.xml:514:122   - Unknown word (useful)        -- in battle mode (only useful if this track is an
Tools/stkdata/stk_object_parameters.xml:514:137   - Unknown word (track)         -- only useful if this track is an arena)">
Tools/stkdata/stk_object_parameters.xml:514:149   - Unknown word (arena)         -- if this track is an arena)">
Tools/stkdata/stk_object_parameters.xml:514:55    - Unknown word (battle)        -- label="Start position (battle mode)" doc="A start
Tools/stkdata/stk_object_parameters.xml:514:95    - Unknown word (karts)         -- A start position for karts in battle mode (only
Tools/stkdata/stk_object_parameters.xml:515:100   - Unknown word (battle)        -- Start position index for battle mode"/>
Tools/stkdata/stk_object_parameters.xml:516:90    - Unknown word (starting)      -- doc="If checked, the starting position is used in
Tools/stkdata/stk_object_parameters.xml:51:104    - Unknown word (drive)        -- physical (player can drive through it)" />
Tools/stkdata/stk_object_parameters.xml:51:110    - Unknown word (through)      -- physical (player can drive through it)" />
Tools/stkdata/stk_object_parameters.xml:51:33     - Unknown word (ghost)        -- <EnumChoice id="ghost" label="Ghost" doc=
Tools/stkdata/stk_object_parameters.xml:51:47     - Unknown word (Ghost)        -- EnumChoice id="ghost" label="Ghost" doc="This object will
Tools/stkdata/stk_object_parameters.xml:51:59     - Unknown word (This)         -- label="Ghost" doc="This object will be non-physical
Tools/stkdata/stk_object_parameters.xml:51:71     - Unknown word (will)         -- Ghost" doc="This object will be non-physical (player
Tools/stkdata/stk_object_parameters.xml:51:83     - Unknown word (physical)     -- This object will be non-physical (player can drive through
Tools/stkdata/stk_object_parameters.xml:522:51    - Unknown word (Animate)       -- label="Water" doc="Animate the mesh with waves
Tools/stkdata/stk_object_parameters.xml:524:48    - Unknown word (Height)        -- height" name="Waves Height" default="1.0" min=
Tools/stkdata/stk_object_parameters.xml:524:85    - Unknown word (Height)        -- 1.0" min="0.0" doc="Height of the waves"/>
Tools/stkdata/stk_object_parameters.xml:525:28    - Unknown word (speed)         -- <FloatProp id="speed" name="Waves Speed"
Tools/stkdata/stk_object_parameters.xml:525:47    - Unknown word (Speed)         -- "speed" name="Waves Speed" default="200.0" min
Tools/stkdata/stk_object_parameters.xml:526:28    - Unknown word (length)        -- <FloatProp id="length" name="Waves Length
Tools/stkdata/stk_object_parameters.xml:526:48    - Unknown word (Length)        -- length" name="Waves Length" default="10.0" min
Tools/stkdata/stk_object_parameters.xml:526:86    - Unknown word (Length)        -- 0.0" min="0.0" doc="Length of the waves"/>
Tools/stkdata/stk_object_parameters.xml:52:117    - Unknown word (drives)       -- in place, if the user drives on this object they
Tools/stkdata/stk_object_parameters.xml:52:139    - Unknown word (they)         -- drives on this object they will 'hit a wall'"
Tools/stkdata/stk_object_parameters.xml:52:156    - Unknown word (wall)         -- object they will 'hit a wall'" >
Tools/stkdata/stk_object_parameters.xml:52:56     - Unknown word (wont)         -- static" label="Static (wont move)" doc="This object
Tools/stkdata/stk_object_parameters.xml:52:73     - Unknown word (This)         -- Static (wont move)" doc="This object will stay in
Tools/stkdata/stk_object_parameters.xml:52:85     - Unknown word (will)         -- move)" doc="This object will stay in place, if the
Tools/stkdata/stk_object_parameters.xml:52:90     - Unknown word (stay)         -- doc="This object will stay in place, if the user
Tools/stkdata/stk_object_parameters.xml:52:98     - Unknown word (place)        -- object will stay in place, if the user drives
Tools/stkdata/stk_object_parameters.xml:53:35     - Unknown word (shape)        -- <EnumProp id="shape" name="Shape (if animated
Tools/stkdata/stk_object_parameters.xml:53:48     - Unknown word (Shape)        -- EnumProp id="shape" name="Shape (if animated object
Tools/stkdata/stk_object_parameters.xml:53:58     - Unknown word (animated)     -- shape" name="Shape (if animated object)" default="box
Tools/stkdata/stk_object_parameters.xml:54:36     - Unknown word (Shape)        -- doc="Shape to use in the physics
Tools/stkdata/stk_object_parameters.xml:54:74     - Unknown word (represent)    -- the physics engine to represent this object">
Tools/stkdata/stk_object_parameters.xml:55:41     - Unknown word (cone)         -- <EnumChoice id="coneX" label="Cone (X)"
Tools/stkdata/stk_object_parameters.xml:55:55     - Unknown word (Cone)         -- EnumChoice id="coneX" label="Cone (X)" />
Tools/stkdata/stk_object_parameters.xml:56:41     - Unknown word (cone)         -- <EnumChoice id="coneY" label="Cone (Y)"
Tools/stkdata/stk_object_parameters.xml:56:55     - Unknown word (Cone)         -- EnumChoice id="coneY" label="Cone (Y)" />
Tools/stkdata/stk_object_parameters.xml:57:41     - Unknown word (cone)         -- <EnumChoice id="coneZ" label="Cone (Z)"
Tools/stkdata/stk_object_parameters.xml:57:55     - Unknown word (Cone)         -- EnumChoice id="coneZ" label="Cone (Z)" />
Tools/stkdata/stk_object_parameters.xml:58:41     - Unknown word (cylinder)    -- <EnumChoice id="cylinderX" label="Cylinder (X
Tools/stkdata/stk_object_parameters.xml:58:59     - Unknown word (Cylinder)    -- id="cylinderX" label="Cylinder (X)" />
Tools/stkdata/stk_object_parameters.xml:59:41     - Unknown word (cylinder)    -- <EnumChoice id="cylinderY" label="Cylinder (Y
Tools/stkdata/stk_object_parameters.xml:59:59     - Unknown word (Cylinder)    -- id="cylinderY" label="Cylinder (Y)" />
Tools/stkdata/stk_object_parameters.xml:60:41     - Unknown word (cylinder)    -- <EnumChoice id="cylinderZ" label="Cylinder (Z
Tools/stkdata/stk_object_parameters.xml:60:59     - Unknown word (Cylinder)    -- id="cylinderZ" label="Cylinder (Z)" />
Tools/stkdata/stk_object_parameters.xml:62:41     - Unknown word (sphere)      -- <EnumChoice id="sphere" label="Sphere" />
Tools/stkdata/stk_object_parameters.xml:62:56     - Unknown word (Sphere)      -- EnumChoice id="sphere" label="Sphere" />
Tools/stkdata/stk_object_parameters.xml:63:41     - Unknown word (exact)       -- <EnumChoice id="exact" label="Exact" />
Tools/stkdata/stk_object_parameters.xml:63:55     - Unknown word (Exact)       -- EnumChoice id="exact" label="Exact" />
Tools/stkdata/stk_object_parameters.xml:66:114    - Unknown word (around)      -- to move this object around by pushing it" >
Tools/stkdata/stk_object_parameters.xml:66:124    - Unknown word (pushing)     -- this object around by pushing it" >
Tools/stkdata/stk_object_parameters.xml:66:46     - Unknown word (Movable)     -- EnumChoice id="move" label="Movable by player" doc="The
Tools/stkdata/stk_object_parameters.xml:66:89     - Unknown word (able)        -- "The player will be able to move this object
Tools/stkdata/stk_object_parameters.xml:67:36     - Unknown word (mass)        -- <FloatProp id="mass" name="Mass (kg)" default
Tools/stkdata/stk_object_parameters.xml:67:48     - Unknown word (Mass)        -- FloatProp id="mass" name="Mass (kg)" default="100.
Tools/stkdata/stk_object_parameters.xml:68:35     - Unknown word (shape)       -- <EnumProp id="shape" name="Shape" default
Tools/stkdata/stk_object_parameters.xml:68:48     - Unknown word (Shape)       -- EnumProp id="shape" name="Shape" default="box"
Tools/stkdata/stk_object_parameters.xml:69:36     - Unknown word (Shape)       -- doc="Shape to use in the physics
Tools/stkdata/stk_object_parameters.xml:69:74     - Unknown word (represent)   -- the physics engine to represent this object">
Tools/stkdata/stk_object_parameters.xml:6:10      - Unknown word (Prop)       -- <BoolProp id="enable_anim_texture
Tools/stkdata/stk_object_parameters.xml:6:107     - Unknown word (this)       -- doc="Make a texture on this object move">
Tools/stkdata/stk_object_parameters.xml:6:26      - Unknown word (anim)       -- BoolProp id="enable_anim_texture" name="Use animated
Tools/stkdata/stk_object_parameters.xml:6:31      - Unknown word (texture)    -- BoolProp id="enable_anim_texture" name="Use animated
Tools/stkdata/stk_object_parameters.xml:6:50      - Unknown word (animated)   -- anim_texture" name="Use animated Texture" default="false
Tools/stkdata/stk_object_parameters.xml:6:59      - Unknown word (Texture)    -- name="Use animated Texture" default="false" doc
Tools/stkdata/stk_object_parameters.xml:6:77      - Unknown word (false)      -- animated Texture" default="false" doc="Make a texture
Tools/stkdata/stk_object_parameters.xml:6:96      - Unknown word (texture)    -- "false" doc="Make a texture on this object move
Tools/stkdata/stk_object_parameters.xml:70:41     - Unknown word (cone)        -- <EnumChoice id="coneX" label="Cone (X)"
Tools/stkdata/stk_object_parameters.xml:70:55     - Unknown word (Cone)        -- EnumChoice id="coneX" label="Cone (X)" />
Tools/stkdata/stk_object_parameters.xml:71:41     - Unknown word (cone)        -- <EnumChoice id="coneY" label="Cone (Y)"
Tools/stkdata/stk_object_parameters.xml:71:55     - Unknown word (Cone)        -- EnumChoice id="coneY" label="Cone (Y)" />
Tools/stkdata/stk_object_parameters.xml:73:41     - Unknown word (cylinder)    -- <EnumChoice id="cylinderX" label="Cylinder (X
Tools/stkdata/stk_object_parameters.xml:73:59     - Unknown word (Cylinder)    -- id="cylinderX" label="Cylinder (X)" />
Tools/stkdata/stk_object_parameters.xml:74:41     - Unknown word (cylinder)    -- <EnumChoice id="cylinderY" label="Cylinder (Y
Tools/stkdata/stk_object_parameters.xml:74:59     - Unknown word (Cylinder)    -- id="cylinderY" label="Cylinder (Y)" />
Tools/stkdata/stk_object_parameters.xml:77:41     - Unknown word (sphere)      -- <EnumChoice id="sphere" label="Sphere" />
Tools/stkdata/stk_object_parameters.xml:77:56     - Unknown word (Sphere)      -- EnumChoice id="sphere" label="Sphere" />
Tools/stkdata/stk_object_parameters.xml:7:10      - Unknown word (String)     -- <StringProp id="anim_texture
Tools/stkdata/stk_object_parameters.xml:7:108     - Unknown word (animate)    -- Filename of the texture to animate"/>
Tools/stkdata/stk_object_parameters.xml:7:16      - Unknown word (Prop)       -- <StringProp id="anim_texture" name
Tools/stkdata/stk_object_parameters.xml:7:25      - Unknown word (anim)       -- <StringProp id="anim_texture" name="Texture
Tools/stkdata/stk_object_parameters.xml:7:30      - Unknown word (texture)    -- StringProp id="anim_texture" name="Texture to animate
Tools/stkdata/stk_object_parameters.xml:7:45      - Unknown word (Texture)    -- anim_texture" name="Texture to animate" default
Tools/stkdata/stk_object_parameters.xml:7:56      - Unknown word (animate)    -- texture" name="Texture to animate" default="" doc="Filename
Tools/stkdata/stk_object_parameters.xml:7:97      - Unknown word (texture)    -- doc="Filename of the texture to animate"/>
Tools/stkdata/stk_object_parameters.xml:80:85     - Unknown word (resetted)    -- "The player will be resetted when touching this object
Tools/stkdata/stk_object_parameters.xml:80:99     - Unknown word (touching)    -- will be resetted when touching this object" >
Tools/stkdata/stk_object_parameters.xml:81:35     - Unknown word (shape)       -- <EnumProp id="shape" name="Shape" default
Tools/stkdata/stk_object_parameters.xml:81:48     - Unknown word (Shape)       -- EnumProp id="shape" name="Shape" default="box"
Tools/stkdata/stk_object_parameters.xml:82:74     - Unknown word (represent)   -- the physics engine to represent this object">
Tools/stkdata/stk_object_parameters.xml:8:15      - Unknown word (Prop)       -- <FloatProp id="anim_dx" name="Animation
Tools/stkdata/stk_object_parameters.xml:8:24      - Unknown word (anim)       -- <FloatProp id="anim_dx" name="Animation
Tools/stkdata/stk_object_parameters.xml:8:39      - Unknown word (Animation)  -- FloatProp id="anim_dx" name="Animation X Speed" default="0
Tools/stkdata/stk_object_parameters.xml:8:51      - Unknown word (Speed)      -- dx" name="Animation X Speed" default="0.0" min=
Tools/stkdata/stk_object_parameters.xml:90:41     - Unknown word (sphere)      -- <EnumChoice id="sphere" label="Sphere" />
Tools/stkdata/stk_object_parameters.xml:90:56     - Unknown word (Sphere)      -- EnumChoice id="sphere" label="Sphere" />
Tools/stkdata/stk_object_parameters.xml:91:41     - Unknown word (exact)       -- <EnumChoice id="exact" label="Exact" />
Tools/stkdata/stk_object_parameters.xml:91:55     - Unknown word (Exact)       -- EnumChoice id="exact" label="Exact" />
Tools/stkdata/stk_object_parameters.xml:94:113    - Unknown word (touching)    -- like they were hit when touching this object" >
Tools/stkdata/stk_object_parameters.xml:94:33     - Unknown word (explode)     -- <EnumChoice id="explode" label="Knock player
Tools/stkdata/stk_object_parameters.xml:94:49     - Unknown word (Knock)       -- id="explode" label="Knock player" doc="The player
Tools/stkdata/stk_object_parameters.xml:94:84     - Unknown word (jump)        -- doc="The player will jump like they were hit when
Tools/stkdata/stk_object_parameters.xml:94:89     - Unknown word (like)        -- The player will jump like they were hit when touching
Tools/stkdata/stk_object_parameters.xml:94:94     - Unknown word (they)        -- player will jump like they were hit when touching
Tools/stkdata/stk_object_parameters.xml:94:99     - Unknown word (were)        -- will jump like they were hit when touching this
Tools/stkdata/stk_object_parameters.xml:95:35     - Unknown word (shape)       -- <EnumProp id="shape" name="Shape" default
Tools/stkdata/stk_object_parameters.xml:96:74     - Unknown word (represent)   -- the physics engine to represent this object">
Tools/stkdata/stk_object_parameters.xml:9:15      - Unknown word (Prop)       -- <FloatProp id="anim_dy" name="Animation
Tools/stkdata/stk_object_parameters.xml:9:24      - Unknown word (anim)       -- <FloatProp id="anim_dy" name="Animation
Tools/stkdata/stk_object_parameters.xml:9:39      - Unknown word (Animation)  -- FloatProp id="anim_dy" name="Animation Y Speed" default="0
Tools/stkdata/stk_object_parameters.xml:9:51      - Unknown word (Speed)      -- dy" name="Animation Y Speed" default="0.0" min=
Tools/stkdata/stk_panel_parameters.xml:102:102   - Unknown word (flare)        -- false" doc="Show lens flare when looking at the
Tools/stkdata/stk_panel_parameters.xml:102:113   - Unknown word (looking)      -- Show lens flare when looking at the sun. Lens flare
Tools/stkdata/stk_panel_parameters.xml:102:133   - Unknown word (Lens)         -- looking at the sun. Lens flare underscore and
Tools/stkdata/stk_panel_parameters.xml:102:138   - Unknown word (flare)        -- looking at the sun. Lens flare underscore and maximise
Tools/stkdata/stk_panel_parameters.xml:102:144   - Unknown word (underscore)   -- the sun. Lens flare underscore and maximise the emotional
Tools/stkdata/stk_panel_parameters.xml:102:159   - Unknown word (maximise)     -- flare underscore and maximise the emotional and psychologic
Tools/stkdata/stk_panel_parameters.xml:102:172   - Unknown word (emotional)    -- underscore and maximise the emotional and psychological impact
Tools/stkdata/stk_panel_parameters.xml:102:186   - Unknown word (psychological) -- maximise the emotional and psychological impact of a scene"/
Tools/stkdata/stk_panel_parameters.xml:102:200   - Unknown word (impact)        -- emotional and psychological impact of a scene"/>
Tools/stkdata/stk_panel_parameters.xml:102:212   - Unknown word (scene)         -- psychological impact of a scene"/>
Tools/stkdata/stk_panel_parameters.xml:102:23    - Unknown word (sunlensflare) -- <BoolProp id="sunlensflare" name="Sun lens flare
Tools/stkdata/stk_panel_parameters.xml:102:47    - Unknown word (lens)         -- sunlensflare" name="Sun lens flare (STK 0.8.2)" default
Tools/stkdata/stk_panel_parameters.xml:102:52    - Unknown word (flare)        -- sunlensflare" name="Sun lens flare (STK 0.8.2)" default
Tools/stkdata/stk_panel_parameters.xml:102:97    - Unknown word (lens)         -- default="false" doc="Show lens flare when looking at
Tools/stkdata/stk_panel_parameters.xml:105:113   - Unknown word (enhance)       -- Color correction can enhance the scene by tweaking
Tools/stkdata/stk_panel_parameters.xml:105:134   - Unknown word (tweaking)      -- enhance the scene by tweaking the rendered output
Tools/stkdata/stk_panel_parameters.xml:105:147   - Unknown word (rendered)      -- scene by tweaking the rendered output">
Tools/stkdata/stk_panel_parameters.xml:105:23    - Unknown word (colorlevel)    -- <BoolProp id="colorlevel" name="Color correction
Tools/stkdata/stk_panel_parameters.xml:105:41    - Unknown word (Color)         -- id="colorlevel" name="Color correction (STK 0.8
Tools/stkdata/stk_panel_parameters.xml:105:47    - Unknown word (correction)    -- colorlevel" name="Color correction (STK 0.8.2)" default
Tools/stkdata/stk_panel_parameters.xml:105:92    - Unknown word (Color)         -- default="false" doc="Color correction can enhance
Tools/stkdata/stk_panel_parameters.xml:105:98    - Unknown word (correction)    -- default="false" doc="Color correction can enhance the scene
Tools/stkdata/stk_panel_parameters.xml:106:28    - Unknown word (colorlevel)    -- <FloatProp id="colorlevel_inblack" name="Input
Tools/stkdata/stk_panel_parameters.xml:106:39    - Unknown word (inblack)       -- FloatProp id="colorlevel_inblack" name="Input black"
Tools/stkdata/stk_panel_parameters.xml:107:28    - Unknown word (colorlevel)    -- <FloatProp id="colorlevel_ingamma" name="Input
Tools/stkdata/stk_panel_parameters.xml:107:39    - Unknown word (ingamma)       -- FloatProp id="colorlevel_ingamma" name="Input gamma"
Tools/stkdata/stk_panel_parameters.xml:107:60    - Unknown word (gamma)         -- ingamma" name="Input gamma" doc="The gamma level
Tools/stkdata/stk_panel_parameters.xml:107:76    - Unknown word (gamma)         -- Input gamma" doc="The gamma level" default="1.0
Tools/stkdata/stk_panel_parameters.xml:108:28    - Unknown word (colorlevel)    -- <FloatProp id="colorlevel_inwhite" name="Input
Tools/stkdata/stk_panel_parameters.xml:108:39    - Unknown word (inwhite)       -- FloatProp id="colorlevel_inwhite" name="Input white"
Tools/stkdata/stk_panel_parameters.xml:108:60    - Unknown word (white)         -- inwhite" name="Input white" doc="The white input
Tools/stkdata/stk_panel_parameters.xml:108:76    - Unknown word (white)         -- Input white" doc="The white input level" default
Tools/stkdata/stk_panel_parameters.xml:10:12     - Unknown word (Prop)         -- <StringProp id="name" name="Code
Tools/stkdata/stk_panel_parameters.xml:10:6      - Unknown word (String)       -- <StringProp id="name" name=
Tools/stkdata/stk_panel_parameters.xml:110:28    - Unknown word (colorlevel)    -- <FloatProp id="colorlevel_outblack" name="Output
Tools/stkdata/stk_panel_parameters.xml:110:39    - Unknown word (outblack)      -- FloatProp id="colorlevel_outblack" name="Output black
Tools/stkdata/stk_panel_parameters.xml:111:39    - Unknown word (outwhite)      -- FloatProp id="colorlevel_outwhite" name="Output white
Tools/stkdata/stk_panel_parameters.xml:111:62    - Unknown word (white)         -- outwhite" name="Output white" doc="The white output
Tools/stkdata/stk_panel_parameters.xml:111:78    - Unknown word (white)         -- Output white" doc="The white output level" default
Tools/stkdata/stk_panel_parameters.xml:114:101   - Unknown word (shadows)       -- Whether to enable dynamic shadows"/>
Tools/stkdata/stk_panel_parameters.xml:114:23    - Unknown word (shadows)       -- <BoolProp id="shadows" name="Dynamic shadows
Tools/stkdata/stk_panel_parameters.xml:114:46    - Unknown word (shadows)       -- shadows" name="Dynamic shadows" default="true" doc
Tools/stkdata/stk_panel_parameters.xml:114:64    - Unknown word (true)          -- Dynamic shadows" default="true" doc="Whether to enable
Tools/stkdata/stk_panel_parameters.xml:115:23    - Unknown word (duringday)     -- <EnumProp id="duringday" name="Track time" default
Tools/stkdata/stk_panel_parameters.xml:115:40    - Unknown word (Track)         -- id="duringday" name="Track time" default="day"
Tools/stkdata/stk_panel_parameters.xml:115:71    - Unknown word (Useful)        -- default="day" doc="Useful to turn on/off some
Tools/stkdata/stk_panel_parameters.xml:115:81    - Unknown word (turn)          -- day" doc="Useful to turn on/off some lighting
Tools/stkdata/stk_panel_parameters.xml:115:93    - Unknown word (some)          -- Useful to turn on/off some lighting effect">
Tools/stkdata/stk_panel_parameters.xml:115:98    - Unknown word (lighting)      -- to turn on/off some lighting effect">
Tools/stkdata/stk_panel_parameters.xml:117:29    - Unknown word (night)         -- <EnumChoice id="night" label="Night" />
Tools/stkdata/stk_panel_parameters.xml:117:43    - Unknown word (Night)         -- EnumChoice id="night" label="Night" />
Tools/stkdata/stk_panel_parameters.xml:11:7      - Unknown word (Prop)         -- </BoolProp>
Tools/stkdata/stk_panel_parameters.xml:121:14    - Unknown word (Color)         -- <ColorProp id="fog_color" name
Tools/stkdata/stk_panel_parameters.xml:121:32    - Unknown word (color)         -- <ColorProp id="fog_color" name="Fog Color" default
Tools/stkdata/stk_panel_parameters.xml:121:83    - Unknown word (here)          -- default="0 0 0" doc="Click here to pick the color of
Tools/stkdata/stk_panel_parameters.xml:123:29    - Unknown word (Distance)      -- doc="Distance from camera at which
Tools/stkdata/stk_panel_parameters.xml:123:43    - Unknown word (camera)        -- doc="Distance from camera at which fog starts
Tools/stkdata/stk_panel_parameters.xml:123:53    - Unknown word (which)         -- Distance from camera at which fog starts dimming objects
Tools/stkdata/stk_panel_parameters.xml:123:63    - Unknown word (starts)        -- camera at which fog starts dimming objects"/>
Tools/stkdata/stk_panel_parameters.xml:123:70    - Unknown word (dimming)       -- at which fog starts dimming objects"/>
Tools/stkdata/stk_panel_parameters.xml:125:29    - Unknown word (Distance)      -- doc="Distance from camera at which
Tools/stkdata/stk_panel_parameters.xml:125:43    - Unknown word (camera)        -- doc="Distance from camera at which fog is so dense
Tools/stkdata/stk_panel_parameters.xml:125:69    - Unknown word (dense)         -- camera at which fog is so dense you can't see a thing
Tools/stkdata/stk_panel_parameters.xml:128:33    - Unknown word (maximum)       -- doc="Fog maximum density"/>
Tools/stkdata/stk_panel_parameters.xml:128:41    - Unknown word (density)       -- doc="Fog maximum density"/>
Tools/stkdata/stk_panel_parameters.xml:133:19    - Unknown word (KART)          -- <!-- ************ KART ************ -->
Tools/stkdata/stk_panel_parameters.xml:134:110   - Unknown word (blender)       -- "Check this if this blender file is a SuperTuxKart
Tools/stkdata/stk_panel_parameters.xml:136:105   - Unknown word (appears)       -- selection screen this kart appears under"/>
Tools/stkdata/stk_panel_parameters.xml:136:65    - Unknown word (Tabs)          -- default="standard" doc="Tabs in kart selection screen
Tools/stkdata/stk_panel_parameters.xml:136:88    - Unknown word (screen)        -- Tabs in kart selection screen this kart appears under
Tools/stkdata/stk_panel_parameters.xml:137:21    - Unknown word (icon)          -- <StringProp id="icon" name="Icon" default
Tools/stkdata/stk_panel_parameters.xml:137:33    - Unknown word (Icon)          -- StringProp id="icon" name="Icon" default="icon.png"
Tools/stkdata/stk_panel_parameters.xml:137:48    - Unknown word (icon)          -- name="Icon" default="icon.png"
Tools/stkdata/stk_panel_parameters.xml:138:38    - Unknown word (icon)          -- doc="Filename of the icon to display in the kart
Tools/stkdata/stk_panel_parameters.xml:138:76    - Unknown word (screen)        -- in the kart selection screen"/>
Tools/stkdata/stk_panel_parameters.xml:139:29    - Unknown word (icon)          -- StringProp id="minimap_icon" name="Minimap Icon
Tools/stkdata/stk_panel_parameters.xml:139:49    - Unknown word (Icon)          -- icon" name="Minimap Icon" default="icon.png"
Tools/stkdata/stk_panel_parameters.xml:139:64    - Unknown word (icon)          -- Minimap Icon" default="icon.png" doc="Filename of
Tools/stkdata/stk_panel_parameters.xml:13:19     - Unknown word (TRACK)        -- <!-- ************ TRACK ************ -->
Tools/stkdata/stk_panel_parameters.xml:140:52    - Unknown word (genericshadow) -- name="Shadow" default="genericshadow.png" doc="Filename of
Tools/stkdata/stk_panel_parameters.xml:140:97    - Unknown word (containing)    -- Filename of the file containing the shadow of this kart
Tools/stkdata/stk_panel_parameters.xml:141:81    - Unknown word (highlight)     -- doc="Color used to highlight the kart's icon in the
Tools/stkdata/stk_panel_parameters.xml:141:95    - Unknown word (kart's)        -- used to highlight the kart's icon in the interface
Tools/stkdata/stk_panel_parameters.xml:142:106   - Unknown word (gravity)       -- be used to lower the gravity center of the kart if
Tools/stkdata/stk_panel_parameters.xml:142:114   - Unknown word (center)        -- to lower the gravity center of the kart if it topples
Tools/stkdata/stk_panel_parameters.xml:142:139   - Unknown word (topples)       -- center of the kart if it topples over too easily"/>
Tools/stkdata/stk_panel_parameters.xml:142:156   - Unknown word (easily)        -- it topples over too easily"/>
Tools/stkdata/stk_panel_parameters.xml:142:20    - Unknown word (center)        -- <FloatProp id="center_shift" name="Gravity
Tools/stkdata/stk_panel_parameters.xml:142:27    - Unknown word (shift)         -- FloatProp id="center_shift" name="Gravity Center
Tools/stkdata/stk_panel_parameters.xml:142:40    - Unknown word (Gravity)       -- center_shift" name="Gravity Center Shift" default
Tools/stkdata/stk_panel_parameters.xml:142:48    - Unknown word (Center)        -- shift" name="Gravity Center Shift" default="0.0
Tools/stkdata/stk_panel_parameters.xml:142:55    - Unknown word (Shift)         -- name="Gravity Center Shift" default="0.0" doc=
Tools/stkdata/stk_panel_parameters.xml:142:96    - Unknown word (lower)         -- doc="Can be used to lower the gravity center of
Tools/stkdata/stk_panel_parameters.xml:143:44    - Unknown word (sound)         -- engine_sfx" name="Engine sound" default="large">
Tools/stkdata/stk_panel_parameters.xml:143:60    - Unknown word (large)         -- Engine sound" default="large">
Tools/stkdata/stk_panel_parameters.xml:144:25    - Unknown word (large)         -- <EnumChoice id="large" label="Large"/>
Tools/stkdata/stk_panel_parameters.xml:144:39    - Unknown word (Large)         -- EnumChoice id="large" label="Large"/>
Tools/stkdata/stk_panel_parameters.xml:145:25    - Unknown word (small)         -- <EnumChoice id="small" label="Small"/>
Tools/stkdata/stk_panel_parameters.xml:145:39    - Unknown word (Small)         -- EnumChoice id="small" label="Small"/>
Tools/stkdata/stk_panel_parameters.xml:148:19    - Unknown word (karttype)      -- <EnumProp id="karttype" name="Type" default
Tools/stkdata/stk_panel_parameters.xml:148:50    - Unknown word (medium)        -- name="Type" default="medium" doc="SuperTuxKart Kart
Tools/stkdata/stk_panel_parameters.xml:14:107    - Unknown word (this)         -- doc="Check this if this blender file is a SuperTuxKar
Tools/stkdata/stk_panel_parameters.xml:14:112    - Unknown word (blender)      -- "Check this if this blender file is a SuperTuxKart
Tools/stkdata/stk_panel_parameters.xml:14:138    - Unknown word (Kart)         -- blender file is a SuperTuxKart track">
Tools/stkdata/stk_panel_parameters.xml:14:143    - Unknown word (track)        -- file is a SuperTuxKart track">
Tools/stkdata/stk_panel_parameters.xml:14:22     - Unknown word (track)        -- BoolProp id="is_stk_track" name="Is a SuperTuxKart
Tools/stkdata/stk_panel_parameters.xml:14:48     - Unknown word (Kart)         -- name="Is a SuperTuxKart track" default="false
Tools/stkdata/stk_panel_parameters.xml:14:53     - Unknown word (track)        -- name="Is a SuperTuxKart track" default="false" box
Tools/stkdata/stk_panel_parameters.xml:14:69     - Unknown word (false)        -- SuperTuxKart track" default="false" box="false" doc="Check
Tools/stkdata/stk_panel_parameters.xml:14:99     - Unknown word (this)         -- box="false" doc="Check this if this blender file
Tools/stkdata/stk_panel_parameters.xml:150:25    - Unknown word (medium)        -- <EnumChoice id="medium" label="Medium" />
Tools/stkdata/stk_panel_parameters.xml:150:40    - Unknown word (Medium)        -- EnumChoice id="medium" label="Medium" />
Tools/stkdata/stk_panel_parameters.xml:154:25    - Unknown word (Lean)          -- <StringProp id="kartLean" name="Lean max (advanced
Tools/stkdata/stk_panel_parameters.xml:154:37    - Unknown word (Lean)          -- id="kartLean" name="Lean max (advanced)" default
Tools/stkdata/stk_panel_parameters.xml:154:74    - Unknown word (Customize)     -- advanced)" default="" doc="Customize lean, for instance
Tools/stkdata/stk_panel_parameters.xml:154:84    - Unknown word (lean)          -- default="" doc="Customize lean, for instance *0-10
Tools/stkdata/stk_panel_parameters.xml:155:109   - Unknown word (emitting)      -- doc="Determine the emitting exhaust particle, empty
Tools/stkdata/stk_panel_parameters.xml:155:118   - Unknown word (exhaust)       -- Determine the emitting exhaust particle, empty to disable
Tools/stkdata/stk_panel_parameters.xml:155:126   - Unknown word (particle)      -- the emitting exhaust particle, empty to disable"/
Tools/stkdata/stk_panel_parameters.xml:155:136   - Unknown word (empty)         -- emitting exhaust particle, empty to disable"/>
Tools/stkdata/stk_panel_parameters.xml:155:21    - Unknown word (exhaust)       -- <StringProp id="exhaust_xml" name="Exhaust particle
Tools/stkdata/stk_panel_parameters.xml:155:40    - Unknown word (Exhaust)       -- "exhaust_xml" name="Exhaust particle file" default
Tools/stkdata/stk_panel_parameters.xml:155:48    - Unknown word (particle)      -- exhaust_xml" name="Exhaust particle file" default="kart
Tools/stkdata/stk_panel_parameters.xml:155:77    - Unknown word (exhaust)       -- file" default="kart_exhaust.xml" doc="Determine
Tools/stkdata/stk_panel_parameters.xml:155:95    - Unknown word (Determine)     -- kart_exhaust.xml" doc="Determine the emitting exhaust
Tools/stkdata/stk_panel_parameters.xml:15:55     - Unknown word (Track)        -- Name" default="My New Track" doc="Name of the track
Tools/stkdata/stk_panel_parameters.xml:15:6      - Unknown word (String)       -- <StringProp id="name" name=
Tools/stkdata/stk_panel_parameters.xml:15:79     - Unknown word (track)        -- Track" doc="Name of the track"/>
Tools/stkdata/stk_panel_parameters.xml:16:115    - Unknown word (will)         -- internal identifier, will also be the name of
Tools/stkdata/stk_panel_parameters.xml:16:120    - Unknown word (also)         -- internal identifier, will also be the name of the folder
Tools/stkdata/stk_panel_parameters.xml:16:6      - Unknown word (String)       -- <StringProp id="code" name=
Tools/stkdata/stk_panel_parameters.xml:16:67     - Unknown word (Track)        -- name)" default="myNewTrack" doc="The code is an
Tools/stkdata/stk_panel_parameters.xml:16:94     - Unknown word (internal)     -- doc="The code is an internal identifier, will also
Tools/stkdata/stk_panel_parameters.xml:17:101    - Unknown word (categorized)  -- checked, the track will be categorized as a work-in-progress
Tools/stkdata/stk_panel_parameters.xml:17:136    - Unknown word (beta)         -- a work-in-progress (beta) track"/>
Tools/stkdata/stk_panel_parameters.xml:17:26     - Unknown word (track)        -- BoolProp id="is_wip_track" name="Is work-in-progress
Tools/stkdata/stk_panel_parameters.xml:17:74     - Unknown word (checked)      -- progress track" doc="If checked, the track will be categorize
Tools/stkdata/stk_panel_parameters.xml:17:93     - Unknown word (will)         -- If checked, the track will be categorized as a
Tools/stkdata/stk_panel_parameters.xml:18:109    - Unknown word (appears)      -- selection screen this track appears under"/>
Tools/stkdata/stk_panel_parameters.xml:18:6      - Unknown word (String)       -- <StringProp id="groups" name
Tools/stkdata/stk_panel_parameters.xml:18:67     - Unknown word (Tabs)         -- default="standard" doc="Tabs in track selection screen
Tools/stkdata/stk_panel_parameters.xml:18:91     - Unknown word (screen)       -- Tabs in track selection screen this track appears under
Tools/stkdata/stk_panel_parameters.xml:19:21     - Unknown word (designer)     -- <StringProp id="designer" name="Designer" default
Tools/stkdata/stk_panel_parameters.xml:19:37     - Unknown word (Designer)     -- id="designer" name="Designer" default="$user" doc
Tools/stkdata/stk_panel_parameters.xml:19:6      - Unknown word (String)       -- <StringProp id="designer" name
Tools/stkdata/stk_panel_parameters.xml:19:87     - Unknown word (that)         -- "Name of the person that made this track"/>
Tools/stkdata/stk_panel_parameters.xml:19:92     - Unknown word (made)         -- Name of the person that made this track"/>
Tools/stkdata/stk_panel_parameters.xml:20:50     - Unknown word (kart)         -- name="Music" default="kart_grand_prix.music" doc
Tools/stkdata/stk_panel_parameters.xml:20:55     - Unknown word (grand)        -- Music" default="kart_grand_prix.music" doc="Music
Tools/stkdata/stk_panel_parameters.xml:20:61     - Unknown word (prix)         -- default="kart_grand_prix.music" doc="Music played
Tools/stkdata/stk_panel_parameters.xml:20:84     - Unknown word (played)       -- prix.music" doc="Music played in this track"/>
Tools/stkdata/stk_panel_parameters.xml:21:103    - Unknown word (contains)     -- Name of the file that contains a screenshot of this
Tools/stkdata/stk_panel_parameters.xml:21:98     - Unknown word (that)         -- doc="Name of the file that contains a screenshot
Tools/stkdata/stk_panel_parameters.xml:23:14     - Unknown word (Choice)       -- <EnumChoice id="none" label="None
Tools/stkdata/stk_panel_parameters.xml:23:25     - Unknown word (none)         -- <EnumChoice id="none" label="None" doc="No
Tools/stkdata/stk_panel_parameters.xml:23:38     - Unknown word (None)         -- EnumChoice id="none" label="None" doc="No sky (useful
Tools/stkdata/stk_panel_parameters.xml:23:57     - Unknown word (useful)       -- "None" doc="No sky (useful for indoor scenes)"
Tools/stkdata/stk_panel_parameters.xml:23:68     - Unknown word (indoor)       -- "No sky (useful for indoor scenes)"/>
Tools/stkdata/stk_panel_parameters.xml:23:75     - Unknown word (scenes)       -- sky (useful for indoor scenes)"/>
Tools/stkdata/stk_panel_parameters.xml:24:14     - Unknown word (Choice)       -- <EnumChoice id="box" label="Box
Tools/stkdata/stk_panel_parameters.xml:25:33     - Unknown word (texture)      -- <StringProp id="sky_texture2" name="Sky Texture
Tools/stkdata/stk_panel_parameters.xml:25:53     - Unknown word (Texture)      -- texture2" name="Sky Texture Top" default="genericskybox
Tools/stkdata/stk_panel_parameters.xml:25:75     - Unknown word (genericskybox) -- Texture Top" default="genericskybox_top.jpg"/>
Tools/stkdata/stk_panel_parameters.xml:26:33     - Unknown word (texture)       -- <StringProp id="sky_texture3" name="Sky Texture
Tools/stkdata/stk_panel_parameters.xml:26:53     - Unknown word (Texture)       -- texture3" name="Sky Texture Bottom" default="genericskybo
Tools/stkdata/stk_panel_parameters.xml:26:61     - Unknown word (Bottom)        -- " name="Sky Texture Bottom" default="genericskybox
Tools/stkdata/stk_panel_parameters.xml:26:78     - Unknown word (genericskybox) -- Texture Bottom" default="genericskybox_bottom.jpg"/>
Tools/stkdata/stk_panel_parameters.xml:26:92     - Unknown word (bottom)        -- default="genericskybox_bottom.jpg"/>
Tools/stkdata/stk_panel_parameters.xml:27:33     - Unknown word (texture)       -- <StringProp id="sky_texture4" name="Sky Texture
Tools/stkdata/stk_panel_parameters.xml:27:53     - Unknown word (Texture)       -- texture4" name="Sky Texture East" default="genericskybox
Tools/stkdata/stk_panel_parameters.xml:27:76     - Unknown word (genericskybox) -- Texture East" default="genericskybox_east.jpg"/>
Tools/stkdata/stk_panel_parameters.xml:28:33     - Unknown word (texture)       -- <StringProp id="sky_texture5" name="Sky Texture
Tools/stkdata/stk_panel_parameters.xml:28:53     - Unknown word (Texture)       -- texture5" name="Sky Texture West" default="genericskybox
Tools/stkdata/stk_panel_parameters.xml:28:76     - Unknown word (genericskybox) -- Texture West" default="genericskybox_west.jpg"/>
Tools/stkdata/stk_panel_parameters.xml:29:33     - Unknown word (texture)       -- <StringProp id="sky_texture1" name="Sky Texture
Tools/stkdata/stk_panel_parameters.xml:29:53     - Unknown word (Texture)       -- texture1" name="Sky Texture North" default="genericskybox
Tools/stkdata/stk_panel_parameters.xml:29:77     - Unknown word (genericskybox) -- Texture North" default="genericskybox_north.jpg"/>
Tools/stkdata/stk_panel_parameters.xml:31:15     - Unknown word (Choice)        -- </EnumChoice>
Tools/stkdata/stk_panel_parameters.xml:33:14     - Unknown word (Choice)        -- <EnumChoice id="dome" label="Dome
Tools/stkdata/stk_panel_parameters.xml:33:25     - Unknown word (dome)          -- <EnumChoice id="dome" label="Dome">
Tools/stkdata/stk_panel_parameters.xml:33:38     - Unknown word (Dome)          -- EnumChoice id="dome" label="Dome">
Tools/stkdata/stk_panel_parameters.xml:35:30     - Unknown word (horizontal)    -- <IntProp id="sky_horizontal" name="Horizontal Definition
Tools/stkdata/stk_panel_parameters.xml:35:48     - Unknown word (Horizontal)    -- sky_horizontal" name="Horizontal Definition" default
Tools/stkdata/stk_panel_parameters.xml:36:30     - Unknown word (vertical)      -- <IntProp id="sky_vertical" name="Vertical Definition
Tools/stkdata/stk_panel_parameters.xml:36:46     - Unknown word (Vertical)      -- sky_vertical" name="Vertical Definition" default
Tools/stkdata/stk_panel_parameters.xml:37:40     - Unknown word (percent)       -- FloatProp id="sky_texture_percent" name="Sky Texture Percent
Tools/stkdata/stk_panel_parameters.xml:37:67     - Unknown word (Percent)       -- percent" name="Sky Texture Percent" default="1.0" min=
Tools/stkdata/stk_panel_parameters.xml:38:33     - Unknown word (much)          -- doc="How much of the height of the
Tools/stkdata/stk_panel_parameters.xml:38:45     - Unknown word (height)        -- doc="How much of the height of the texture is used
Tools/stkdata/stk_panel_parameters.xml:39:32     - Unknown word (sphere)        -- <FloatProp id="sky_sphere_percent" name="Sky Sphere
Tools/stkdata/stk_panel_parameters.xml:39:39     - Unknown word (percent)       -- FloatProp id="sky_sphere_percent" name="Sky Sphere Percent
Tools/stkdata/stk_panel_parameters.xml:39:58     - Unknown word (Sphere)        -- sphere_percent" name="Sky Sphere Percent" default="1
Tools/stkdata/stk_panel_parameters.xml:39:65     - Unknown word (Percent)       -- percent" name="Sky Sphere Percent" default="1.3" min=
Tools/stkdata/stk_panel_parameters.xml:3:23      - Unknown word (Kart)       -- bl-label="SuperTuxKart Scene Properties"
Tools/stkdata/stk_panel_parameters.xml:3:28      - Unknown word (Scene)      -- label="SuperTuxKart Scene Properties"
Tools/stkdata/stk_panel_parameters.xml:40:40     - Unknown word (sphere)        -- doc="1.0 : half-sphere; 2.0 : full sphere"
Tools/stkdata/stk_panel_parameters.xml:40:54     - Unknown word (full)          -- half-sphere; 2.0 : full sphere"/>
Tools/stkdata/stk_panel_parameters.xml:40:59     - Unknown word (sphere)        -- half-sphere; 2.0 : full sphere"/>
Tools/stkdata/stk_panel_parameters.xml:41:32     - Unknown word (speed)         -- <FloatProp id="sky_speed_x" name="Sky Speed X
Tools/stkdata/stk_panel_parameters.xml:41:51     - Unknown word (Speed)         -- sky_speed_x" name="Sky Speed X" default="0.0" min
Tools/stkdata/stk_panel_parameters.xml:42:29     - Unknown word (Speed)         -- doc="Speed at which the sky moves
Tools/stkdata/stk_panel_parameters.xml:42:38     - Unknown word (which)         -- doc="Speed at which the sky moves horizontally
Tools/stkdata/stk_panel_parameters.xml:42:52     - Unknown word (moves)         -- Speed at which the sky moves horizontally"/>
Tools/stkdata/stk_panel_parameters.xml:42:58     - Unknown word (horizontally)  -- which the sky moves horizontally"/>
Tools/stkdata/stk_panel_parameters.xml:43:32     - Unknown word (speed)         -- <FloatProp id="sky_speed_y" name="Sky Speed Y
Tools/stkdata/stk_panel_parameters.xml:43:51     - Unknown word (Speed)         -- sky_speed_y" name="Sky Speed Y" default="0.0" min
Tools/stkdata/stk_panel_parameters.xml:44:29     - Unknown word (Speed)         -- doc="Speed at which the sky moves
Tools/stkdata/stk_panel_parameters.xml:44:38     - Unknown word (which)         -- doc="Speed at which the sky moves vertically
Tools/stkdata/stk_panel_parameters.xml:44:52     - Unknown word (moves)         -- Speed at which the sky moves vertically"/>
Tools/stkdata/stk_panel_parameters.xml:44:58     - Unknown word (vertically)    -- which the sky moves vertically"/>
Tools/stkdata/stk_panel_parameters.xml:45:15     - Unknown word (Choice)        -- </EnumChoice>
Tools/stkdata/stk_panel_parameters.xml:47:25     - Unknown word (simple)        -- <EnumChoice id="simple" label="Plain color
Tools/stkdata/stk_panel_parameters.xml:47:40     - Unknown word (Plain)         -- EnumChoice id="simple" label="Plain color" doc="A plain
Tools/stkdata/stk_panel_parameters.xml:47:46     - Unknown word (color)         -- simple" label="Plain color" doc="A plain-color
Tools/stkdata/stk_panel_parameters.xml:47:60     - Unknown word (plain)         -- Plain color" doc="A plain-color sky">
Tools/stkdata/stk_panel_parameters.xml:47:66     - Unknown word (color)         -- color" doc="A plain-color sky">
Tools/stkdata/stk_panel_parameters.xml:48:107    - Unknown word (color)         -- Click here to select the color of the sky"/>
Tools/stkdata/stk_panel_parameters.xml:48:14     - Unknown word (Color)         -- <ColorProp id="sky_color" name
Tools/stkdata/stk_panel_parameters.xml:48:32     - Unknown word (color)         -- <ColorProp id="sky_color" name="Sky Color" default
Tools/stkdata/stk_panel_parameters.xml:48:49     - Unknown word (Color)         -- sky_color" name="Sky Color" default="77 104 25
Tools/stkdata/stk_panel_parameters.xml:48:88     - Unknown word (here)          -- 104 255" doc="Click here to select the color
Tools/stkdata/stk_panel_parameters.xml:51:103    - Unknown word (arena)         -- this scene is a battle arena"/>
Tools/stkdata/stk_panel_parameters.xml:51:19     - Unknown word (arena)         -- <BoolProp id="arena" name="Is a battle Arena
Tools/stkdata/stk_panel_parameters.xml:51:37     - Unknown word (battle)        -- id="arena" name="Is a battle Arena" default="false
Tools/stkdata/stk_panel_parameters.xml:51:44     - Unknown word (Arena)         -- arena" name="Is a battle Arena" default="false" doc
Tools/stkdata/stk_panel_parameters.xml:51:72     - Unknown word (Whether)       -- default="false" doc="Whether this scene is a battle
Tools/stkdata/stk_panel_parameters.xml:51:85     - Unknown word (scene)         -- false" doc="Whether this scene is a battle arena"/
Tools/stkdata/stk_panel_parameters.xml:51:96     - Unknown word (battle)        -- Whether this scene is a battle arena"/>
Tools/stkdata/stk_panel_parameters.xml:52:19     - Unknown word (soccer)        -- <BoolProp id="soccer" name="Is a soccer field
Tools/stkdata/stk_panel_parameters.xml:52:38     - Unknown word (soccer)        -- "soccer" name="Is a soccer field" default="false
Tools/stkdata/stk_panel_parameters.xml:52:73     - Unknown word (Whether)       -- default="false" doc="Whether this scene is a soccer
Tools/stkdata/stk_panel_parameters.xml:52:86     - Unknown word (scene)         -- false" doc="Whether this scene is a soccer field"/
Tools/stkdata/stk_panel_parameters.xml:52:97     - Unknown word (soccer)        -- Whether this scene is a soccer field"/>
Tools/stkdata/stk_panel_parameters.xml:53:109    - Unknown word (flag)          -- map for capture the flag"/>
Tools/stkdata/stk_panel_parameters.xml:53:65     - Unknown word (Whether)       -- default="false" doc="Whether this scene is a map
Tools/stkdata/stk_panel_parameters.xml:53:78     - Unknown word (scene)         -- false" doc="Whether this scene is a map for capture
Tools/stkdata/stk_panel_parameters.xml:53:97     - Unknown word (capture)       -- this scene is a map for capture the flag"/>
Tools/stkdata/stk_panel_parameters.xml:54:102    - Unknown word (blender)       -- "Check this if this blender file is a SuperTuxKart
Tools/stkdata/stk_panel_parameters.xml:54:133    - Unknown word (cutscene)      -- file is a SuperTuxKart cutscene"/>
Tools/stkdata/stk_panel_parameters.xml:54:19     - Unknown word (cutscene)      -- <BoolProp id="cutscene" name="Is a cutscene
Tools/stkdata/stk_panel_parameters.xml:54:40     - Unknown word (cutscene)      -- cutscene" name="Is a cutscene" default="false" box
Tools/stkdata/stk_panel_parameters.xml:56:20     - Unknown word (camera)        -- <FloatProp id="camera_far" name="Camera Far
Tools/stkdata/stk_panel_parameters.xml:56:38     - Unknown word (Camera)        -- id="camera_far" name="Camera Far Clip" default="
Tools/stkdata/stk_panel_parameters.xml:56:49     - Unknown word (Clip)          -- far" name="Camera Far Clip" default="1000.0" min
Tools/stkdata/stk_panel_parameters.xml:57:25     - Unknown word (Distance)      -- doc="Distance from camera at which
Tools/stkdata/stk_panel_parameters.xml:57:39     - Unknown word (camera)        -- doc="Distance from camera at which objects are
Tools/stkdata/stk_panel_parameters.xml:57:49     - Unknown word (which)         -- Distance from camera at which objects are clipped
Tools/stkdata/stk_panel_parameters.xml:57:67     - Unknown word (clipped)       -- at which objects are clipped (no more visible)"/
Tools/stkdata/stk_panel_parameters.xml:57:79     - Unknown word (more)          -- objects are clipped (no more visible)"/>
Tools/stkdata/stk_panel_parameters.xml:57:84     - Unknown word (visible)       -- are clipped (no more visible)"/>
Tools/stkdata/stk_panel_parameters.xml:59:105    - Unknown word (normals)       -- Whether to interpolate the normals (gives smoother driving
Tools/stkdata/stk_panel_parameters.xml:59:114    - Unknown word (gives)         -- interpolate the normals (gives smoother driving but
Tools/stkdata/stk_panel_parameters.xml:59:120    - Unknown word (smoother)      -- nterpolate the normals (gives smoother driving but requires
Tools/stkdata/stk_panel_parameters.xml:59:129    - Unknown word (driving)      -- normals (gives smoother driving but requires that floors
Tools/stkdata/stk_panel_parameters.xml:59:141    - Unknown word (requires)     -- smoother driving but requires that floors and walls
Tools/stkdata/stk_panel_parameters.xml:59:150    - Unknown word (that)         -- driving but requires that floors and walls be
Tools/stkdata/stk_panel_parameters.xml:59:155    - Unknown word (floors)       -- driving but requires that floors and walls be split)
Tools/stkdata/stk_panel_parameters.xml:59:166    - Unknown word (walls)        -- requires that floors and walls be split)"/>
Tools/stkdata/stk_panel_parameters.xml:59:19     - Unknown word (smooth)        -- <BoolProp id="smooth_normals" name="Smooth
Tools/stkdata/stk_panel_parameters.xml:59:26     - Unknown word (normals)       -- BoolProp id="smooth_normals" name="Smooth Normals
Tools/stkdata/stk_panel_parameters.xml:59:41     - Unknown word (Smooth)        -- smooth_normals" name="Smooth Normals" default="false
Tools/stkdata/stk_panel_parameters.xml:59:48     - Unknown word (Normals)       -- normals" name="Smooth Normals" default="false" doc
Tools/stkdata/stk_panel_parameters.xml:59:78     - Unknown word (Whether)       -- default="false" doc="Whether to interpolate the normals
Tools/stkdata/stk_panel_parameters.xml:59:89     - Unknown word (interpolate)   -- false" doc="Whether to interpolate the normals (gives smoother
Tools/stkdata/stk_panel_parameters.xml:61:20     - Unknown word (propgroup)    -- <PropGroup id="propgroup_driving" name="Driving
Tools/stkdata/stk_panel_parameters.xml:61:30     - Unknown word (driving)      -- PropGroup id="propgroup_driving" name="Driving/laps
Tools/stkdata/stk_panel_parameters.xml:61:45     - Unknown word (Driving)      -- propgroup_driving" name="Driving/laps">
Tools/stkdata/stk_panel_parameters.xml:61:53     - Unknown word (laps)         -- driving" name="Driving/laps">
Tools/stkdata/stk_panel_parameters.xml:62:111    - Unknown word (driven)       -- Whether this track can be driven in reverse mode"/>
Tools/stkdata/stk_panel_parameters.xml:62:121    - Unknown word (reverse)      -- track can be driven in reverse mode"/>
Tools/stkdata/stk_panel_parameters.xml:62:129    - Unknown word (mode)         -- be driven in reverse mode"/>
Tools/stkdata/stk_panel_parameters.xml:62:23     - Unknown word (reverse)      -- <BoolProp id="reverse" name="Can be driven
Tools/stkdata/stk_panel_parameters.xml:62:45     - Unknown word (driven)       -- reverse" name="Can be driven in reverse" default
Tools/stkdata/stk_panel_parameters.xml:62:55     - Unknown word (reverse)      -- name="Can be driven in reverse" default="false" doc
Tools/stkdata/stk_panel_parameters.xml:62:85     - Unknown word (Whether)      -- default="false" doc="Whether this track can be driven
Tools/stkdata/stk_panel_parameters.xml:63:34     - Unknown word (laps)         -- IntProp id="default_num_laps" name="Number of laps
Tools/stkdata/stk_panel_parameters.xml:63:56     - Unknown word (laps)         -- laps" name="Number of laps" default="3"/>
Tools/stkdata/stk_panel_parameters.xml:66:20     - Unknown word (propgroup)    -- <PropGroup id="propgroup_kartstart" name="Start
Tools/stkdata/stk_panel_parameters.xml:66:30     - Unknown word (kartstart)    -- PropGroup id="propgroup_kartstart" name="Start line positions
Tools/stkdata/stk_panel_parameters.xml:66:58     - Unknown word (positions)    -- kartstart" name="Start line positions">
Tools/stkdata/stk_panel_parameters.xml:67:109    - Unknown word (being)        -- "How many karts are being placed in one row. The
Tools/stkdata/stk_panel_parameters.xml:67:115    - Unknown word (placed)       -- many karts are being placed in one row. The more
Tools/stkdata/stk_panel_parameters.xml:67:138    - Unknown word (more)         -- placed in one row. The more karts, the wider the
Tools/stkdata/stk_panel_parameters.xml:67:143    - Unknown word (karts)        -- in one row. The more karts, the wider the track
Tools/stkdata/stk_panel_parameters.xml:67:154    - Unknown word (wider)        -- The more karts, the wider the track must be (since
Tools/stkdata/stk_panel_parameters.xml:67:170    - Unknown word (must)         -- the wider the track must be (since each kart
Tools/stkdata/stk_panel_parameters.xml:67:179    - Unknown word (since)        -- wider the track must be (since each kart in a row will
Tools/stkdata/stk_panel_parameters.xml:67:185    - Unknown word (each)         -- track must be (since each kart in a row will have
Tools/stkdata/stk_panel_parameters.xml:67:190    - Unknown word (kart)         -- must be (since each kart in a row will have a
Tools/stkdata/stk_panel_parameters.xml:67:204    - Unknown word (will)         -- since each kart in a row will have a distance of start
Tools/stkdata/stk_panel_parameters.xml:67:209    - Unknown word (have)         -- each kart in a row will have a distance of start
Tools/stkdata/stk_panel_parameters.xml:67:216    - Unknown word (distance)     -- in a row will have a distance of start-sidewards-distance
Tools/stkdata/stk_panel_parameters.xml:67:234    - Unknown word (sidewards)    -- a distance of start-sidewards-distance)."/>
Tools/stkdata/stk_panel_parameters.xml:67:244    - Unknown word (distance)     -- distance of start-sidewards-distance)."/>
Tools/stkdata/stk_panel_parameters.xml:67:28     - Unknown word (karts)        -- <IntProp id="start_karts_per_row" name="Karts
Tools/stkdata/stk_panel_parameters.xml:67:49     - Unknown word (Karts)        -- karts_per_row" name="Karts per row on start" default
Tools/stkdata/stk_panel_parameters.xml:67:94     - Unknown word (many)         -- default="3" doc="How many karts are being placed
Tools/stkdata/stk_panel_parameters.xml:67:99     - Unknown word (karts)        -- default="3" doc="How many karts are being placed in
Tools/stkdata/stk_panel_parameters.xml:68:109    - Unknown word (kart)         -- 1.5" doc="How far a kart is in front of the next
Tools/stkdata/stk_panel_parameters.xml:68:138    - Unknown word (kart)         -- in front of the next kart at start."/>
Tools/stkdata/stk_panel_parameters.xml:68:30     - Unknown word (forwards)     -- FloatProp id="start_forwards_distance" name="Start
Tools/stkdata/stk_panel_parameters.xml:68:39     - Unknown word (distance)     -- FloatProp id="start_forwards_distance" name="Start Forwards
Tools/stkdata/stk_panel_parameters.xml:68:61     - Unknown word (Forwards)     -- distance" name="Start Forwards Distance" default="
Tools/stkdata/stk_panel_parameters.xml:68:70     - Unknown word (Distance)     -- name="Start Forwards Distance" default="1.5" doc=
Tools/stkdata/stk_panel_parameters.xml:69:105    - Unknown word (much)         -- default="1.8" doc="How much distance to the right
Tools/stkdata/stk_panel_parameters.xml:69:110    - Unknown word (distance)     -- "1.8" doc="How much distance to the right/left of
Tools/stkdata/stk_panel_parameters.xml:69:140    - Unknown word (each)         -- to the right/left of each kart in one row"/>
Tools/stkdata/stk_panel_parameters.xml:69:145    - Unknown word (kart)         -- the right/left of each kart in one row"/>
Tools/stkdata/stk_panel_parameters.xml:69:30     - Unknown word (sidewards)    -- FloatProp id="start_sidewards_distance" name="Start
Tools/stkdata/stk_panel_parameters.xml:69:40     - Unknown word (distance)     -- id="start_sidewards_distance" name="Start Sidewards
Tools/stkdata/stk_panel_parameters.xml:69:62     - Unknown word (Sidewards)    -- distance" name="Start Sidewards Distance" default="
Tools/stkdata/stk_panel_parameters.xml:69:72     - Unknown word (Distance)     -- name="Start Sidewards Distance" default="1.8" doc=
Tools/stkdata/stk_panel_parameters.xml:6:109     - Unknown word (false)        -- default="false" box="false" doc="Use this only
Tools/stkdata/stk_panel_parameters.xml:6:125     - Unknown word (this)         -- box="false" doc="Use this only when you need
Tools/stkdata/stk_panel_parameters.xml:6:144     - Unknown word (need)         -- Use this only when you need 100% correct normal
Tools/stkdata/stk_panel_parameters.xml:6:15      - Unknown word (precalculate) -- <BoolProp id="precalculate_tangents" name="Pre
Tools/stkdata/stk_panel_parameters.xml:6:154     - Unknown word (correct)      -- only when you need 100% correct normal mapping for the
Tools/stkdata/stk_panel_parameters.xml:6:200     - Unknown word (scene)        -- for the objects in the scene">
Tools/stkdata/stk_panel_parameters.xml:6:28      - Unknown word (tangents)     -- BoolProp id="precalculate_tangents" name="Pre-calculate
Tools/stkdata/stk_panel_parameters.xml:6:48      - Unknown word (calculate)    -- tangents" name="Pre-calculate tangents in .spm when
Tools/stkdata/stk_panel_parameters.xml:6:58      - Unknown word (tangents)     -- name="Pre-calculate tangents in .spm when export
Tools/stkdata/stk_panel_parameters.xml:6:6       - Unknown word (Prop)       -- <BoolProp id="precalculate_tangents
Tools/stkdata/stk_panel_parameters.xml:6:97      - Unknown word (false)        -- when export" default="false" box="false" doc="Use
Tools/stkdata/stk_panel_parameters.xml:70:107    - Unknown word (drivelines)   -- 1.1" doc="Sometimes drivelines are too low and will
Tools/stkdata/stk_panel_parameters.xml:70:134    - Unknown word (will)         -- drivelines are too low and will be under the actual
Tools/stkdata/stk_panel_parameters.xml:70:152    - Unknown word (actual)       -- and will be under the actual mesh. This is a simple
Tools/stkdata/stk_panel_parameters.xml:70:165    - Unknown word (This)         -- under the actual mesh. This is a simple vertical
Tools/stkdata/stk_panel_parameters.xml:70:175    - Unknown word (simple)       -- actual mesh. This is a simple vertical offset added
Tools/stkdata/stk_panel_parameters.xml:70:182    - Unknown word (vertical)     -- mesh. This is a simple vertical offset added to each
Tools/stkdata/stk_panel_parameters.xml:70:191    - Unknown word (offset)       -- is a simple vertical offset added to each start
Tools/stkdata/stk_panel_parameters.xml:70:198    - Unknown word (added)        -- simple vertical offset added to each start positions
Tools/stkdata/stk_panel_parameters.xml:70:207    - Unknown word (each)         -- vertical offset added to each start positions to make
Tools/stkdata/stk_panel_parameters.xml:70:218    - Unknown word (positions)    -- added to each start positions to make sure that karts
Tools/stkdata/stk_panel_parameters.xml:70:236    - Unknown word (sure)         -- start positions to make sure that karts start on
Tools/stkdata/stk_panel_parameters.xml:70:241    - Unknown word (that)         -- positions to make sure that karts start on top of
Tools/stkdata/stk_panel_parameters.xml:70:246    - Unknown word (karts)        -- positions to make sure that karts start on top of the
Tools/stkdata/stk_panel_parameters.xml:70:298    - Unknown word (Generally)    -- (and not under it). Generally the drivelines should
Tools/stkdata/stk_panel_parameters.xml:70:30     - Unknown word (upwards)      -- FloatProp id="start_upwards_distance" name="Start
Tools/stkdata/stk_panel_parameters.xml:70:312    - Unknown word (drivelines)   -- under it). Generally the drivelines should be fixed, but
Tools/stkdata/stk_panel_parameters.xml:70:323    - Unknown word (should)       -- Generally the drivelines should be fixed, but this allows
Tools/stkdata/stk_panel_parameters.xml:70:349    - Unknown word (allows)       -- should be fixed, but this allows a quick solution for
Tools/stkdata/stk_panel_parameters.xml:70:377    - Unknown word (existing)     -- a quick solution for existing tracks."/>
Tools/stkdata/stk_panel_parameters.xml:70:60     - Unknown word (upwards)      -- distance" name="Start upwards distance" default="
Tools/stkdata/stk_panel_parameters.xml:70:97     - Unknown word (Sometimes)    -- default="1.1" doc="Sometimes drivelines are too low
Tools/stkdata/stk_panel_parameters.xml:73:20     - Unknown word (weather)      -- <PropGroup id="weather" name="Weather">
Tools/stkdata/stk_panel_parameters.xml:73:35     - Unknown word (Weather)      -- PropGroup id="weather" name="Weather">
Tools/stkdata/stk_panel_parameters.xml:74:23     - Unknown word (weather)      -- <EnumProp id="weather_type" name="Weather
Tools/stkdata/stk_panel_parameters.xml:74:43     - Unknown word (Weather)      -- weather_type" name="Weather type" default="none
Tools/stkdata/stk_panel_parameters.xml:74:66     - Unknown word (none)         -- Weather type" default="none" doc="The weather effect
Tools/stkdata/stk_panel_parameters.xml:74:81     - Unknown word (weather)      -- default="none" doc="The weather effect to use in this
Tools/stkdata/stk_panel_parameters.xml:74:89     - Unknown word (effect)       -- none" doc="The weather effect to use in this track
Tools/stkdata/stk_panel_parameters.xml:75:29     - Unknown word (none)         -- <EnumChoice id="none" label="None" doc="The
Tools/stkdata/stk_panel_parameters.xml:75:42     - Unknown word (None)         -- EnumChoice id="none" label="None" doc="The weather effect
Tools/stkdata/stk_panel_parameters.xml:75:57     - Unknown word (weather)      -- label="None" doc="The weather effect to use in this
Tools/stkdata/stk_panel_parameters.xml:75:65     - Unknown word (effect)       -- None" doc="The weather effect to use in this track
Tools/stkdata/stk_panel_parameters.xml:76:29     - Unknown word (rain)         -- <EnumChoice id="rain" label="Rain" doc="The
Tools/stkdata/stk_panel_parameters.xml:76:42     - Unknown word (Rain)        -- EnumChoice id="rain" label="Rain" doc="The weather effect
Tools/stkdata/stk_panel_parameters.xml:76:57     - Unknown word (weather)     -- label="Rain" doc="The weather effect to use in this
Tools/stkdata/stk_panel_parameters.xml:76:65     - Unknown word (effect)      -- Rain" doc="The weather effect to use in this track
Tools/stkdata/stk_panel_parameters.xml:77:29     - Unknown word (snow)        -- <EnumChoice id="snow" label="Snow" doc="The
Tools/stkdata/stk_panel_parameters.xml:77:42     - Unknown word (Snow)        -- EnumChoice id="snow" label="Snow" doc="The weather effect
Tools/stkdata/stk_panel_parameters.xml:77:65     - Unknown word (effect)      -- Snow" doc="The weather effect to use in this track
Tools/stkdata/stk_panel_parameters.xml:79:31     - Unknown word (lightning)   -- BoolProp id="weather_lightning" name="Lightning" default
Tools/stkdata/stk_panel_parameters.xml:79:48     - Unknown word (Lightning)   -- weather_lightning" name="Lightning" default="false" doc
Tools/stkdata/stk_panel_parameters.xml:79:92     - Unknown word (effect)      -- false" doc="The weather effect to use in this track
Tools/stkdata/stk_panel_parameters.xml:7:7       - Unknown word (Prop)         -- </BoolProp>
Tools/stkdata/stk_panel_parameters.xml:80:33     - Unknown word (sound)       -- StringProp id="weather_sound" name="Weather sound
Tools/stkdata/stk_panel_parameters.xml:80:46     - Unknown word (Weather)     -- weather_sound" name="Weather sound" default=""/>
Tools/stkdata/stk_panel_parameters.xml:80:54     - Unknown word (sound)       -- sound" name="Weather sound" default=""/>
Tools/stkdata/stk_panel_parameters.xml:83:112    - Unknown word (shadows)     -- add simulated cloud shadows on the ground">
Tools/stkdata/stk_panel_parameters.xml:83:19     - Unknown word (clouds)      -- <BoolProp id="clouds" name="Cloud shadows
Tools/stkdata/stk_panel_parameters.xml:83:39     - Unknown word (shadows)     -- clouds" name="Cloud shadows (STK 0.8.2)" default
Tools/stkdata/stk_panel_parameters.xml:83:96     - Unknown word (simulated)   -- doc="Whether to add simulated cloud shadows on the
Tools/stkdata/stk_panel_parameters.xml:87:20     - Unknown word (propgroup)   -- <PropGroup id="propgroup_postpro" name="Graphical
Tools/stkdata/stk_panel_parameters.xml:87:30     - Unknown word (postpro)     -- PropGroup id="propgroup_postpro" name="Graphical effects
Tools/stkdata/stk_panel_parameters.xml:87:45     - Unknown word (Graphical)   -- propgroup_postpro" name="Graphical effects">
Tools/stkdata/stk_panel_parameters.xml:87:55     - Unknown word (effects)     -- postpro" name="Graphical effects">
Tools/stkdata/stk_panel_parameters.xml:88:102    - Unknown word (lighting)    -- Spherical harmonics lighting) Cube map used to provide
Tools/stkdata/stk_panel_parameters.xml:88:129    - Unknown word (provide)     -- lighting) Cube map used to provide less flat ambient lighting
Tools/stkdata/stk_panel_parameters.xml:88:142    - Unknown word (flat)        -- used to provide less flat ambient lighting">
Tools/stkdata/stk_panel_parameters.xml:88:147    - Unknown word (ambient)     -- to provide less flat ambient lighting">
Tools/stkdata/stk_panel_parameters.xml:88:155    - Unknown word (lighting)    -- provide less flat ambient lighting">
Tools/stkdata/stk_panel_parameters.xml:88:23     - Unknown word (ambientmap)  -- <BoolProp id="ambientmap" name="Ambient light
Tools/stkdata/stk_panel_parameters.xml:88:41     - Unknown word (Ambient)     -- id="ambientmap" name="Ambient light map" default=
Tools/stkdata/stk_panel_parameters.xml:88:82     - Unknown word (Spherical)   -- default="false" doc="(Spherical harmonics lighting)
Tools/stkdata/stk_panel_parameters.xml:88:92     - Unknown word (harmonics)   -- false" doc="(Spherical harmonics lighting) Cube map used
Tools/stkdata/stk_panel_parameters.xml:89:29     - Unknown word (ambientmap)  -- <StringProp id="ambientmap_texture2" name="Ambient
Tools/stkdata/stk_panel_parameters.xml:89:56     - Unknown word (Ambient)     -- ambientmap_texture2" name="Ambient map, Top" default="
Tools/stkdata/stk_panel_parameters.xml:90:29     - Unknown word (ambientmap)  -- <StringProp id="ambientmap_texture3" name="Ambient
Tools/stkdata/stk_panel_parameters.xml:90:56     - Unknown word (Ambient)     -- ambientmap_texture3" name="Ambient map, Bottom" default
Tools/stkdata/stk_panel_parameters.xml:90:69     - Unknown word (Bottom)      -- name="Ambient map, Bottom" default=""/>
Tools/stkdata/stk_panel_parameters.xml:91:29     - Unknown word (ambientmap)  -- <StringProp id="ambientmap_texture4" name="Ambient
Tools/stkdata/stk_panel_parameters.xml:91:56     - Unknown word (Ambient)     -- ambientmap_texture4" name="Ambient map, East" default=
Tools/stkdata/stk_panel_parameters.xml:92:29     - Unknown word (ambientmap)  -- <StringProp id="ambientmap_texture5" name="Ambient
Tools/stkdata/stk_panel_parameters.xml:92:56     - Unknown word (Ambient)     -- ambientmap_texture5" name="Ambient map, West" default=
Tools/stkdata/stk_panel_parameters.xml:97:23     - Unknown word (bloom)       -- <BoolProp id="bloom" name="Bloom (STK 0
Tools/stkdata/stk_panel_parameters.xml:97:36     - Unknown word (Bloom)       -- BoolProp id="bloom" name="Bloom (STK 0.8.2)" default
Tools/stkdata/stk_panel_parameters.xml:97:64     - Unknown word (true)        -- STK 0.8.2)" default="true" doc="Whether this track
Tools/stkdata/stk_panel_parameters.xml:97:94     - Unknown word (uses)        -- "Whether this track uses bloom">
Tools/stkdata/stk_panel_parameters.xml:97:99     - Unknown word (bloom)       -- Whether this track uses bloom">
Tools/stkdata/stk_panel_parameters.xml:98:106    - Unknown word (being)       -- at which bloom starts being applied" default="0
Tools/stkdata/stk_panel_parameters.xml:98:28     - Unknown word (bloom)       -- <FloatProp id="bloom_threshold" name="Bloom
Tools/stkdata/stk_panel_parameters.xml:98:34     - Unknown word (threshold)   -- FloatProp id="bloom_threshold" name="Bloom threshold
Tools/stkdata/stk_panel_parameters.xml:98:51     - Unknown word (Bloom)       -- bloom_threshold" name="Bloom threshold" doc="Brightness
Tools/stkdata/stk_panel_parameters.xml:98:57     - Unknown word (threshold)   -- threshold" name="Bloom threshold" doc="Brightness at
Tools/stkdata/stk_panel_parameters.xml:98:73     - Unknown word (Brightness)  -- Bloom threshold" doc="Brightness at which bloom starts
Tools/stkdata/stk_panel_parameters.xml:98:87     - Unknown word (which)       -- doc="Brightness at which bloom starts being applied
Tools/stkdata/stk_panel_parameters.xml:98:93     - Unknown word (bloom)       -- Brightness at which bloom starts being applied
Tools/stkdata/stk_panel_parameters.xml:98:99     - Unknown word (starts)      -- Brightness at which bloom starts being applied" default
Tools/stkdata/stk_panel_parameters.xml:9:105     - Unknown word (this)         -- box="false" doc="Check this if this blender file
Tools/stkdata/stk_panel_parameters.xml:9:113     - Unknown word (this)         -- doc="Check this if this blender file is a SuperTuxKar
Tools/stkdata/stk_panel_parameters.xml:9:118     - Unknown word (blender)      -- "Check this if this blender file is a SuperTuxKart
Tools/stkdata/stk_panel_parameters.xml:9:144     - Unknown word (Kart)         -- blender file is a SuperTuxKart library node">
Tools/stkdata/stk_panel_parameters.xml:9:149     - Unknown word (library)      -- file is a SuperTuxKart library node">
Tools/stkdata/stk_panel_parameters.xml:9:47      - Unknown word (Kart)         -- name="Is a SuperTuxKart library node" default
Tools/stkdata/stk_panel_parameters.xml:9:52      - Unknown word (library)      -- name="Is a SuperTuxKart library node" default="false
Tools/stkdata/stk_panel_parameters.xml:9:6       - Unknown word (Prop)         -- <BoolProp id="is_stk_node" name
Tools/stkdata/stk_panel_parameters.xml:9:75      - Unknown word (false)        -- library node" default="false" box="false" doc="Check
Tools/stkdata/stk_panel_parameters.xml:9:87      - Unknown word (false)        -- default="false" box="false" doc="Check this if
neo.gpr:101:25    - Unknown word (gnat)          -- Switch_Compiler := ("-gnatE", -- Enable
neo.gpr:101:64    - Unknown word (generic)       -- -- Enable dynamic generic elaboration checks
neo.gpr:101:72    - Unknown word (elaboration)   -- Enable dynamic generic elaboration checks
neo.gpr:102:25    - Unknown word (gnat)          -- "-gnatW8", -- Enable
neo.gpr:102:56    - Unknown word (wide)          -- -- Enable wide-character unicode identifiers
neo.gpr:102:61    - Unknown word (character)     -- -- Enable wide-character unicode identifiers
neo.gpr:102:71    - Unknown word (unicode)       -- Enable wide-character unicode identifiers
neo.gpr:102:79    - Unknown word (identifiers)   -- wide-character unicode identifiers
neo.gpr:106:49    - Unknown word (Recompile)     -- -- Recompile if switches are changed
neo.gpr:106:62    - Unknown word (switches)      -- -- Recompile if switches are changed
neo.gpr:106:75    - Unknown word (changed)       -- Recompile if switches are changed
neo.gpr:108:110   - Unknown word (numerics)      -- Check overflow for numerics
neo.gpr:108:59    - Unknown word (gnato)         -- Switch_Compiler & ("-gnato",
neo.gpr:108:97    - Unknown word (overflow)      -- -- Check overflow for numerics
neo.gpr:109:59    - Unknown word (gnatf)         -- "-gnatf");
neo.gpr:110:103   - Unknown word (much)          -- -- Optimize as much as possible
neo.gpr:110:111   - Unknown word (possible)      -- Optimize as much as possible
neo.gpr:110:91    - Unknown word (Optimize)      -- -- Optimize as much as possible
neo.gpr:111:59    - Unknown word (gnatp)         -- "-gnatp",
neo.gpr:111:91    - Unknown word (Surpress)      -- -- Surpress all checks
neo.gpr:112:59    - Unknown word (gnatx)         -- "-gnatx",
neo.gpr:112:91    - Unknown word (Surpress)      -- -- Surpress cross-reference data
neo.gpr:113:106   - Unknown word (safe)          -- , -- More like "fun safe"
neo.gpr:113:59    - Unknown word (funsafe)       -- "-funsafe-math-optimizations"
neo.gpr:113:67    - Unknown word (math)          -- "-funsafe-math-optimizations", -- More
neo.gpr:113:72    - Unknown word (optimizations) -- "-funsafe-math-optimizations", -- More like "fun
neo.gpr:113:91    - Unknown word (More)          -- math-optimizations", -- More like "fun safe"
neo.gpr:113:96    - Unknown word (like)          -- optimizations", -- More like "fun safe"
neo.gpr:114:102   - Unknown word (optmization)   -- -- Force SIMD optmization
neo.gpr:114:59    - Unknown word (ffast)         -- "-ffast-math");
neo.gpr:114:65    - Unknown word (math)          -- "-ffast-math"); -
neo.gpr:119:14    - Unknown word (Linker)        -- Switch_Linker := Switch_Linker &
neo.gpr:119:31    - Unknown word (Linker)        -- Switch_Linker := Switch_Linker & ("-mwindows",
neo.gpr:119:43    - Unknown word (mwindows)      -- Switch_Linker & ("-mwindows",
neo.gpr:120:116   - Unknown word (visual)        -- Common controls for visual styles
neo.gpr:120:123   - Unknown word (styles)        -- controls for visual styles
neo.gpr:120:74    - Unknown word (comctl)        -- WinDir") & "\System32\comctl32.dll", -- Common
neo.gpr:121:103   - Unknown word (setup)         -- dll", -- Device setup API for device recognition
neo.gpr:121:74    - Unknown word (setupapi)      -- WinDir") & "\System32\setupapi.dll", -- Device
neo.gpr:122:119   - Unknown word (library)       -- Human interface device library for input
neo.gpr:122:96    - Unknown word (Human)         -- hid.dll", -- Human interface device library
neo.gpr:123:126   - Unknown word (fonts)         -- device interface for fonts
neo.gpr:123:96    - Unknown word (Graphics)      -- gdi32.dll", -- Graphics device interface for
neo.gpr:124:105   - Unknown word (controller)    -- .dll"); -- Xbox 360 controller driver for input
neo.gpr:124:116   - Unknown word (driver)        -- Xbox 360 controller driver for input
neo.gpr:125:53    - Unknown word (driver)        -- -- A Vulkan driver is also necessary, but
neo.gpr:125:63    - Unknown word (also)          -- A Vulkan driver is also necessary, but is loaded
neo.gpr:125:68    - Unknown word (necessary)     -- Vulkan driver is also necessary, but is loaded dynamically
neo.gpr:125:86    - Unknown word (loaded)        -- also necessary, but is loaded dynamically Ex. "\System
neo.gpr:125:93    - Unknown word (dynamically)   -- necessary, but is loaded dynamically Ex. "\System32\vulkan
neo.gpr:132:11    - Unknown word (Linker)        -- package Linker is for Default_Switches
neo.gpr:132:35    - Unknown word (Switches)      -- Linker is for Default_Switches ("Ada") use Switch_Linker
neo.gpr:132:63    - Unknown word (Linker)        -- Switches ("Ada") use Switch_Linker; end Linker;
neo.gpr:133:11    - Unknown word (Binder)        -- package Binder is for Default_Switches
neo.gpr:133:35    - Unknown word (Switches)      -- Binder is for Default_Switches ("Ada") use Switch_Binder
neo.gpr:133:63    - Unknown word (Binder)        -- Switches ("Ada") use Switch_Binder; end Binder;
neo.gpr:133:77    - Unknown word (Binder)        -- Switch_Binder; end Binder;
neo.gpr:134:35    - Unknown word (Switches)      -- Builder is for Default_Switches ("Ada") use Switch_Builder
neo.gpr:135:27    - Unknown word (Executable)    -- for Executable ("main.adb")  use GAME
neo.gpr:135:40    - Unknown word (main)          -- for Executable ("main.adb") use GAME;
neo.gpr:136:35    - Unknown word (Switches)      -- Compiler is for Default_Switches ("Ada") use Switch_Compiler
neo.gpr:62:28     - Unknown word (DOOM)       -- Game_Option is ("DOOM");
neo.gpr:66:6      - Unknown word (Scenario)   -- -- Scenario --
neo.gpr:72:49     - Unknown word (DOOM)       -- External ("Game", "DOOM");
neo.gpr:80:41     - Unknown word (null)       -- => null;
neo.gpr:83:100    - Unknown word (Shader)     -- both Ada and OpenGL Shader Language
neo.gpr:83:7      - Unknown word (Languages)  -- for Languages use ("Ada"); --,
neo.gpr:83:80     - Unknown word (both)       -- -- Support both Ada and OpenGL Shader
neo.gpr:84:25     - Unknown word (main)       -- for Main        use ("main.adb");
neo.gpr:84:7      - Unknown word (Main)       -- for Main use ("main.adb
neo.gpr:84:72     - Unknown word (Main)       -- -- Main entry point
neo.gpr:86:24     - Unknown word (Games)      -- for Exec_Dir    use "Games/" & GAME;
neo.gpr:86:7      - Unknown word (Exec)       -- for Exec_Dir use "Games/"
neo.gpr:86:77     - Unknown word (distributable) -- -- Game distributable
neo.gpr:87:32     - Unknown word (Shaders)       -- Source_Dirs use ("Engine/Shaders/",
neo.gpr:87:72     - Unknown word (GLSL)          -- -- GLSL shaders
neo.gpr:87:77     - Unknown word (shaders)       -- -- GLSL shaders
neo.gpr:91:25     - Unknown word (Games)         -- "Games/" & GAME & "/Base/*
neo.gpr:92:72     - Unknown word (Give)          -- & DEBUG & "/"); -- Give the source access to
neo.gpr:92:98     - Unknown word (senario)       -- the source access to senario variable DEBUG
neo.gpr:95:6      - Unknown word (Switches)      -- -- Switches --
neo.gpr:98:10     - Unknown word (Binder)        -- Switch_Binder := ("-E");
neo.gpr:98:68     - Unknown word (exceptions)    -- Store traceback in exceptions
neo.gpr:99:10     - Unknown word (Linker)        -- Switch_Linker := ("-Xlinker",
neo.gpr:99:25     - Unknown word (Xlinker)       -- Switch_Linker := ("-Xlinker", -- Setup
neo.gpr:99:49     - Unknown word (Setup)         -- Xlinker", -- Setup for stack flag
neo.gpr:99:65     - Unknown word (flag)          -- -- Setup for stack flag
readme.md:10:16     - Unknown word (Doom)       -- The aim of Ada Doom3 is to re-engineer the
readme.md:10:31     - Unknown word (engineer)   -- of Ada Doom3 is to re-engineer the id-tech 4 engine
readme.md:10:74     - Unknown word (dependency) -- engine with a clear dependency
readme.md:11:1      - Unknown word (hierarchy)  -- hierarchy, and robust tasking
readme.md:11:16     - Unknown word (robust)     -- hierarchy, and robust tasking systems.
readme.md:11:23     - Unknown word (tasking)    -- hierarchy, and robust tasking systems.
readme.md:13:1      - Unknown word (Planned)    -- Planned Features:
readme.md:14:12     - Unknown word (play)       -- - Load and play doom 3 bfg levels
readme.md:14:17     - Unknown word (doom)       -- - Load and play doom 3 bfg levels
readme.md:15:18     - Unknown word (workshop)   -- - Load Valve map workshop levels
readme.md:15:8      - Unknown word (Valve)      -- - Load Valve map workshop levels
readme.md:16:3      - Unknown word (Native)     -- - Native ports for Windows and
readme.md:18:17     - Unknown word (windowing)  -- - Multi-monitor windowing
readme.md:18:3      - Unknown word (Multi)      -- - Multi-monitor windowing
readme.md:19:3      - Unknown word (Threaded)   -- - Threaded rendering with Vulkan
readme.md:1:4       - Unknown word (Doom)       -- AdaDoom3
readme.md:20:14     - Unknown word (multi)      -- - Responsive multi-player
readme.md:20:3      - Unknown word (Responsive) -- - Responsive multi-player
readme.md:21:3      - Unknown word (Steam)      -- - Steam support for user accounts
readme.md:21:39     - Unknown word (achievements) -- for user accounts and achievements
readme.md:23:4      - Unknown word (Compiling)    -- ## Compiling
readme.md:27:2      - Unknown word (gprbuild)     -- `gprbuild -p -P neo.gpr `
readme.md:29:13     - Unknown word (Programming)  -- Or the Gnat Programming Studio IDE may be used
readme.md:29:25     - Unknown word (Studio)       -- the Gnat Programming Studio IDE may be used by simply
readme.md:29:51     - Unknown word (simply)       -- Studio IDE may be used by simply double clicking on the
readme.md:29:65     - Unknown word (clicking)     -- used by simply double clicking on the project
readme.md:29:8      - Unknown word (Gnat)         -- Or the Gnat Programming Studio IDE
readme.md:30:25     - Unknown word (installed)    -- file neo.gpr once it is installed:
readme.md:33:41     - Unknown word (hammer)       -- click the build-all hammer button after ensuring
readme.md:33:61     - Unknown word (ensuring)     -- hammer button after ensuring the
readme.md:34:1      - Unknown word (scenario)     -- scenario drop boxes from the
readme.md:34:15     - Unknown word (boxes)        -- scenario drop boxes from the View > Scenario
readme.md:34:37     - Unknown word (Scenario)     -- boxes from the View > Scenario menu are correct.
readme.md:34:55     - Unknown word (correct)      -- > Scenario menu are correct.
readme.md:36:20     - Unknown word (compiling)    -- After successfully compiling press play ▶ to run
readme.md:36:30     - Unknown word (press)        -- successfully compiling press play ▶ to run.
readme.md:36:36     - Unknown word (play)         -- successfully compiling press play ▶ to run.
readme.md:36:7      - Unknown word (successfully) -- After successfully compiling press play
readme.md:38:4      - Unknown word (Using)        -- ## Using Git
readme.md:40:10     - Unknown word (tutorial)     -- Github's tutorial on installing and using
readme.md:40:22     - Unknown word (installing)   -- Github's tutorial on installing and using commandline
readme.md:40:37     - Unknown word (using)        -- tutorial on installing and using commandline git:
readme.md:43:1      - Unknown word (Frequent)     -- Frequent commands:
readme.md:63:4      - Unknown word (Contributing) -- ## Contributing
readme.md:65:48     - Unknown word (stubbed)      -- support by implementing stubbed functions/subprograms
readme.md:65:66     - Unknown word (subprograms)  -- mplementing stubbed functions/subprograms
readme.md:65:7      - Unknown word (adding)       -- Begin adding Linux/Mac support by
readme.md:67:12     - Unknown word (Started)      -- ## Getting Started
readme.md:67:4      - Unknown word (Getting)      -- ## Getting Started
readme.md:69:10     - Unknown word (developing)   -- To begin developing for AdaDoom3, first
readme.md:69:28     - Unknown word (Doom)         -- begin developing for AdaDoom3, first examine all
readme.md:69:41     - Unknown word (examine)      -- for AdaDoom3, first examine all of the “base” system
readme.md:6:13      - Unknown word (chat)       -- [![Join the chat at https://gitter.im
readme.md:72:54     - Unknown word (consists)     -- all packages in Ada) consists of a specification
readme.md:73:24     - Unknown word (clarity)      -- body file (adb). For clarity, everything but subprogram
readme.md:73:33     - Unknown word (everything)   -- (adb). For clarity, everything but subprogram, package
readme.md:73:48     - Unknown word (subprogram)   -- clarity, everything but subprogram, package, protected
readme.md:74:1      - Unknown word (bodies)       -- bodies are placed in the specificati
readme.md:74:12     - Unknown word (placed)       -- bodies are placed in the specification
readme.md:74:41     - Unknown word (including)    -- in the specification (including global variables and
readme.md:75:1      - Unknown word (prototypes)   -- prototypes) allowing an entire
readme.md:75:13     - Unknown word (allowing)     -- prototypes) allowing an entire overview of
readme.md:75:25     - Unknown word (entire)       -- prototypes) allowing an entire overview of user-important
readme.md:75:32     - Unknown word (overview)     -- allowing an entire overview of user-important information
readme.md:75:49     - Unknown word (important)    -- entire overview of user-important information in one file
readme.md:77:1      - Unknown word (More)         -- More to come...
readme.md:77:9      - Unknown word (come)         -- More to come...
readme.md:8:23      - Unknown word (MOSTLY)     -- NOTE: THIS PROJECT IS MOSTLY INCOMPLETE
runsdk.hta:102:25    - Unknown word (important)    -- display: table !important;
runsdk.hta:103:9     - Unknown word (width)        -- width: 100%;
runsdk.hta:104:16    - Unknown word (spacing)      -- border-spacing: 8px;
runsdk.hta:104:9     - Unknown word (border)       -- border-spacing: 8px;
runsdk.hta:108:24    - Unknown word (cell)         -- display: table-cell;
runsdk.hta:109:25    - Unknown word (middle)       -- vertical-align: middle;
runsdk.hta:109:9     - Unknown word (vertical)     -- vertical-align: middle;
runsdk.hta:10:104    - Unknown word (implied)      -- WARRANTY; without even the implied warranty of
runsdk.hta:10:112    - Unknown word (warranty)     -- without even the implied warranty of             -->
runsdk.hta:10:13     - Unknown word (distributed)  -- <!-- Neo is distributed in the hope that it
runsdk.hta:10:32     - Unknown word (hope)         -- is distributed in the hope that it will be useful
runsdk.hta:10:37     - Unknown word (that)         -- distributed in the hope that it will be useful, but
runsdk.hta:10:45     - Unknown word (will)         -- in the hope that it will be useful, but WITHOUT
runsdk.hta:10:53     - Unknown word (useful)       -- hope that it will be useful, but WITHOUT ANY WARRANTY
runsdk.hta:10:77     - Unknown word (WARRANTY)     -- useful, but WITHOUT ANY WARRANTY; without even the implied
runsdk.hta:10:95     - Unknown word (even)         -- ANY WARRANTY; without even the implied warranty
runsdk.hta:110:9     - Unknown word (width)        -- width: 100%;
runsdk.hta:112:17    - Unknown word (bottom)       -- padding-bottom: 8px;
runsdk.hta:114:32    - Unknown word (expand)       -- gameActions select::-ms-expand {
runsdk.hta:115:18    - Unknown word (none)         -- display: none;
runsdk.hta:119:24    - Unknown word (cell)         -- display: table-cell;
runsdk.hta:11:25     - Unknown word (FITNESS)      -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
runsdk.hta:11:39     - Unknown word (PARTICULAR)   -- CHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
runsdk.hta:11:50     - Unknown word (PURPOSE)      -- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
runsdk.hta:11:98     - Unknown word (more)         -- General Public License for more details.
runsdk.hta:120:25    - Unknown word (middle)       -- vertical-align: middle;
runsdk.hta:120:9     - Unknown word (vertical)     -- vertical-align: middle;
runsdk.hta:121:21    - Unknown word (center)       -- text-align: center;
runsdk.hta:123:9     - Unknown word (height)       -- height: 44px;
runsdk.hta:124:9     - Unknown word (font)         -- font-size: 22px;
runsdk.hta:125:9     - Unknown word (background)   -- background: #f7941d;
runsdk.hta:126:21    - Unknown word (solid)        -- border: 2px solid rgb(247,148,29);
runsdk.hta:126:9     - Unknown word (border)       -- border: 2px solid rgb(247,
runsdk.hta:127:9     - Unknown word (color)        -- color: #383838;
runsdk.hta:13:10     - Unknown word (should)       -- <!-- You should have received a copy
runsdk.hta:13:17     - Unknown word (have)         -- <!-- You should have received a copy of the
runsdk.hta:13:22     - Unknown word (received)     -- !-- You should have received a copy of the GNU General
runsdk.hta:13:72     - Unknown word (along)        -- General Public License along with Neo. If not, see
runsdk.hta:143:16    - Unknown word (bottom)       -- margin-bottom: 8px
runsdk.hta:143:9     - Unknown word (margin)       -- margin-bottom: 8px
runsdk.hta:145:7     - Unknown word (style)        -- </style>
runsdk.hta:153:14    - Unknown word (strict)       -- 'use strict';
runsdk.hta:156:45    - Unknown word (Scripting)    -- new ActiveXObject('Scripting.FileSystemObject');
runsdk.hta:159:12    - Unknown word (Constants)    -- // Constants
runsdk.hta:161:42    - Unknown word (roaming)      -- FOLDER = '%APPDATA%\\roaming\\neo';
runsdk.hta:164:34    - Unknown word (Games)        -- GAME_FOLDER = '.\\Games';
runsdk.hta:165:16    - Unknown word (GAMES)        -- var NO_GAMES_TEXT = 'No Games Detected
runsdk.hta:165:34    - Unknown word (Games)        -- NO_GAMES_TEXT = 'No Games Detected.';
runsdk.hta:165:40    - Unknown word (Detected)     -- GAMES_TEXT = 'No Games Detected.';
runsdk.hta:168:119   - Unknown word (ARCHITECTURE) -- Environment\\PROCESSOR_ARCHITECTURE';
runsdk.hta:168:13    - Unknown word (ARCHITECTURE) -- var ARCHITECTURE_REG_KEY = 'HKLM\\SYSTEM
runsdk.hta:168:37    - Unknown word (HKLM)         -- ARCHITECTURE_REG_KEY = 'HKLM\\SYSTEM\\CurrentControlSet
runsdk.hta:169:50    - Unknown word (ARCHITECTURE) -- = shell.regRead(ARCHITECTURE_REG_KEY) === 'x86'
runsdk.hta:16:120    - Unknown word (highlighting) -- development - use HTML syntax highlighting -->
runsdk.hta:16:26     - Unknown word (using)        -- GUI application for using tools or performing
runsdk.hta:16:41     - Unknown word (performing)   -- pplication for using tools or performing scriptable actions necessary
runsdk.hta:16:52     - Unknown word (scriptable)   -- tools or performing scriptable actions necessary for
runsdk.hta:16:71     - Unknown word (necessary)    -- performing scriptable actions necessary for game development
runsdk.hta:172:13    - Unknown word (SCENARIO)     -- var SCENARIO_OPTION_PREFIX = '
runsdk.hta:173:13    - Unknown word (SCENARIO)     -- var SCENARIO_OPTION_GAME = SCENARIO
runsdk.hta:173:40    - Unknown word (SCENARIO)     -- SCENARIO_OPTION_GAME = SCENARIO_OPTION_PREFIX + 'Game
runsdk.hta:174:13    - Unknown word (SCENARIO)     -- var SCENARIO_OPTION_DEBUG = SCENARIO
runsdk.hta:174:40    - Unknown word (SCENARIO)     -- SCENARIO_OPTION_DEBUG = SCENARIO_OPTION_PREFIX + 'Debug
runsdk.hta:179:17    - Unknown word (PROMPT)       -- var CMD_PROMPT = 'cmd.exe /c';
runsdk.hta:181:17    - Unknown word (PAUSE)        -- var CMD_PAUSE = 'pause';
runsdk.hta:181:29    - Unknown word (pause)        -- var CMD_PAUSE    = 'pause';
runsdk.hta:182:17    - Unknown word (GNATMAKE)     -- var CMD_GNATMAKE = 'gnatmake -P .\\neo
runsdk.hta:182:29    - Unknown word (gnatmake)     -- var CMD_GNATMAKE = 'gnatmake -P .\\neo.gpr';
runsdk.hta:189:31    - Unknown word (arraybuffer)  -- xhr.responseType = 'arraybuffer';
runsdk.hta:191:30    - Unknown word (Exists)       -- if (fileSystem.fileExists(localFilePath)) { fileSystem
runsdk.hta:192:52    - Unknown word (true)         -- createTextFile(localFilePath, true);
runsdk.hta:206:20    - Unknown word (Icon)         -- var replaceIconTagsWithSVGs = function
runsdk.hta:206:32    - Unknown word (SVGs)         -- var replaceIconTagsWithSVGs = function() {
runsdk.hta:207:15    - Unknown word (icon)         -- var iconDefs = document.getElementById
runsdk.hta:207:38    - Unknown word (Element)      -- iconDefs = document.getElementById('icon-definitions
runsdk.hta:207:51    - Unknown word (icon)         -- document.getElementById('icon-definitions');
runsdk.hta:208:15    - Unknown word (icons)        -- var icons = {};
runsdk.hta:209:20    - Unknown word (call)         -- [].slice.call(iconDefs.getElementsByTagName
runsdk.hta:209:25    - Unknown word (icon)         -- [].slice.call(iconDefs.getElementsByTagName
runsdk.hta:209:37    - Unknown word (Elements)     -- slice.call(iconDefs.getElementsByTagName('svg')).forEach
runsdk.hta:209:80    - Unknown word (icon)         -- )).forEach(function(icon) {
runsdk.hta:210:13    - Unknown word (icons)        -- icons[icon.getAttribute('kind
runsdk.hta:210:38    - Unknown word (kind)         -- icons[icon.getAttribute('kind')] = icon;
runsdk.hta:212:20    - Unknown word (call)         -- [].slice.call(document.getElementsByTagName
runsdk.hta:212:37    - Unknown word (Elements)     -- slice.call(document.getElementsByTagName('icon')).forEach
runsdk.hta:213:18    - Unknown word (icons)        -- if (!icons[icon.getAttribute('kind
runsdk.hta:213:43    - Unknown word (kind)         -- icons[icon.getAttribute('kind')]) { return; }
runsdk.hta:215:23    - Unknown word (Style)        -- var parentStyle = window.getComputedStyle
runsdk.hta:215:41    - Unknown word (Computed)     -- parentStyle = window.getComputedStyle(parent);
runsdk.hta:215:49    - Unknown word (Style)        -- = window.getComputedStyle(parent);
runsdk.hta:216:20    - Unknown word (Icon)         -- var newIcon = icons[icon.getAttribute
runsdk.hta:216:27    - Unknown word (icons)        -- var newIcon = icons[icon.getAttribute('kind
runsdk.hta:216:52    - Unknown word (kind)         -- icons[icon.getAttribute('kind')].cloneNode(true);
runsdk.hta:216:70    - Unknown word (true)         -- tAttribute('kind')].cloneNode(true);
runsdk.hta:217:16    - Unknown word (Icon)         -- newIcon.setAttribute('class
runsdk.hta:218:16    - Unknown word (Icon)         -- newIcon.setAttribute('fill'
runsdk.hta:218:35    - Unknown word (fill)         -- newIcon.setAttribute('fill', parentStyle.color
runsdk.hta:218:48    - Unknown word (Style)        -- setAttribute('fill', parentStyle.color);
runsdk.hta:218:54    - Unknown word (color)        -- 'fill', parentStyle.color);
runsdk.hta:219:118   - Unknown word (bind)         -- mputedStyle(parent).color); }.bind(this);
runsdk.hta:219:123   - Unknown word (this)         -- parent).color); }.bind(this);
runsdk.hta:219:20    - Unknown word (onmouseover)  -- parent.onmouseover = function() { newIcon
runsdk.hta:219:50    - Unknown word (Icon)         -- onmouseover = function() { newIcon.setAttribute('fill'
runsdk.hta:219:69    - Unknown word (fill)         -- newIcon.setAttribute('fill', window.getComputedStyle
runsdk.hta:219:86    - Unknown word (Computed)     -- etAttribute('fill', window.getComputedStyle(parent).color)
runsdk.hta:219:94    - Unknown word (Style)        -- , window.getComputedStyle(parent).color); }.bind
runsdk.hta:220:118   - Unknown word (bind)         -- mputedStyle(parent).color); }.bind(this);
runsdk.hta:220:123   - Unknown word (this)         -- parent).color); }.bind(this);
runsdk.hta:220:20    - Unknown word (onmouseout)   -- parent.onmouseout = function() { newIcon
runsdk.hta:220:69    - Unknown word (fill)         -- newIcon.setAttribute('fill', window.getComputedStyle
runsdk.hta:220:86    - Unknown word (Computed)     -- etAttribute('fill', window.getComputedStyle(parent).color)
runsdk.hta:225:13    - Unknown word (enumerate)    -- var enumerateGames = function(gamesFolder
runsdk.hta:225:22    - Unknown word (Games)        -- var enumerateGames = function(gamesFolder
runsdk.hta:225:39    - Unknown word (games)        -- enumerateGames = function(gamesFolder) {
runsdk.hta:227:48    - Unknown word (Element)      -- electOption = document.createElement('OPTION');
runsdk.hta:228:36    - Unknown word (GAMES)        -- selectOption.text = NO_GAMES_TEXT;
runsdk.hta:232:17    - Unknown word (enumerator)   -- var enumerator = new Enumerator(folders
runsdk.hta:232:34    - Unknown word (Enumerator)   -- var enumerator = new Enumerator(folders);
runsdk.hta:233:20    - Unknown word (enumerator)   -- for (;!enumerator.atEnd(); enumerator
runsdk.hta:233:40    - Unknown word (enumerator)   -- enumerator.atEnd(); enumerator.moveNext()) {
runsdk.hta:234:49    - Unknown word (Element)      -- selectOption = document.createElement('OPTION');
runsdk.hta:235:26    - Unknown word (enumerator)   -- var game = enumerator.item();
runsdk.hta:236:29    - Unknown word (length)       -- if (game.path.length > MAX_PATH) {
runsdk.hta:237:55    - Unknown word (substring)    -- = '...' + game.path.substring(game.path.indexOf('
runsdk.hta:237:99    - Unknown word (length)       -- indexOf('\\', game.path.length - MAX_PATH - 3));
runsdk.hta:249:12    - Unknown word (Main)         -- // Main //
runsdk.hta:252:46    - Unknown word (Loaded)       -- addEventListener('DOMContentLoaded', function() {
runsdk.hta:253:30    - Unknown word (SVGs)         -- replaceIconTagsWithSVGs();
runsdk.hta:254:11    - Unknown word (enumerate)    -- enumerateGames();
runsdk.hta:254:20    - Unknown word (Games)        -- enumerateGames();
runsdk.hta:25:16     - Unknown word (equiv)        -- <meta http-equiv="X-UA-Compatible" content
runsdk.hta:263:40    - Unknown word (Element)      -- gameSelect = document.getElementById('gameSelect');
runsdk.hta:264:15    - Unknown word (selected)     -- var selectedGame = gameSelect.children
runsdk.hta:264:61    - Unknown word (selected)     -- children[gameSelect.selectedIndex];
runsdk.hta:265:26    - Unknown word (selected)     -- var gameName = selectedGame.getAttribute('name
runsdk.hta:266:26    - Unknown word (selected)     -- var gamePath = selectedGame.getAttribute('path
runsdk.hta:268:34    - Unknown word (GNATMAKE)     -- var buildCommand = CMD_GNATMAKE + ' ' +
runsdk.hta:274:15    - Unknown word (echo)         -- var echoBuildCommand = 'echo
runsdk.hta:274:35    - Unknown word (echo)         -- echoBuildCommand = 'echo "' + buildCommand +
runsdk.hta:275:15    - Unknown word (echo)         -- var echoDebugCommand = 'echo
runsdk.hta:275:35    - Unknown word (echo)         -- echoDebugCommand = 'echo "' + debugCommand +
runsdk.hta:277:25    - Unknown word (PROMPT)       -- shell.run(CMD_PROMPT + ' ' +
runsdk.hta:278:13    - Unknown word (echo)         -- echoBuildCommand + ' & '
runsdk.hta:279:57    - Unknown word (false)        -- + debugCommand, 1, false);
runsdk.hta:287:40    - Unknown word (Element)      -- gameSelect = document.getElementById('gameSelect');
runsdk.hta:288:15    - Unknown word (selected)    -- var selectedGame = gameSelect.children
runsdk.hta:28:10     - Unknown word (Style)        -- <!-- Style -->
runsdk.hta:291:34    - Unknown word (GNATMAKE)    -- var buildCommand = CMD_GNATMAKE + ' ' +
runsdk.hta:298:104   - Unknown word (false)       -- & ' + CMD_PAUSE, 1, false);
runsdk.hta:298:25    - Unknown word (PROMPT)      -- shell.run(CMD_PROMPT + ' ' + echoBuildCommand
runsdk.hta:298:94    - Unknown word (PAUSE)       -- buildCommand + ' & ' + CMD_PAUSE, 1, false);
runsdk.hta:302:12    - Unknown word (play)        -- // playGame //
runsdk.hta:305:24    - Unknown word (play)        -- globals.button_playGame = function() {
runsdk.hta:308:15    - Unknown word (full)        -- var fullPath = selectedGame.getAttribu
runsdk.hta:310:21    - Unknown word (full)        -- shell.run(fullPath, 1, false);
runsdk.hta:310:34    - Unknown word (false)       -- shell.run(fullPath, 1, false);
runsdk.hta:313:10    - Unknown word (this)        -- })(this);
runsdk.hta:319:8     - Unknown word (Body)        -- <!-- Body -->
runsdk.hta:31:6      - Unknown word (style)        -- <style>
runsdk.hta:321:4     - Unknown word (body)        -- <body>
runsdk.hta:322:45    - Unknown word (style)       -- id="icon-definitions" style="display:none;">
runsdk.hta:322:60    - Unknown word (none)        -- definitions" style="display:none;">
runsdk.hta:323:12    - Unknown word (kind)        -- <svg kind="debug" class="icon
runsdk.hta:323:67    - Unknown word (height)      -- y="0px" width="24px" height="24px"><g><path d="M
runsdk.hta:324:12    - Unknown word (kind)        -- <svg kind="build" class="icon
runsdk.hta:327:18    - Unknown word (convert)     -- <svg kind="convert" class="icon" x="0px
runsdk.hta:328:18    - Unknown word (videogame)   -- <svg kind="videogame" class="icon" x="0px
runsdk.hta:333:10    - Unknown word (Logo)        -- <!-- Logo and version -->
runsdk.hta:33:10     - Unknown word (Body)         -- /* Body */
runsdk.hta:34:7      - Unknown word (body)         -- body {
runsdk.hta:358:31    - Unknown word (play)        -- button onClick="button_playGame()" > <icon kind
runsdk.hta:35:11     - Unknown word (zoom)         -- //zoom: 80%;
runsdk.hta:363:103   - Unknown word (Studio)      -- Install GNAT Programming Studio IDE </button>
runsdk.hta:363:86    - Unknown word (GNAT)        -- install"></icon> Install GNAT Programming Studio IDE
runsdk.hta:363:91    - Unknown word (Programming) -- /icon> Install GNAT Programming Studio IDE </button
runsdk.hta:364:37    - Unknown word (Blender)     -- onClick="button_launchBlender()"> <icon kind="install
runsdk.hta:364:86    - Unknown word (Blender)     -- install"></icon> Install Blender 3D Studio
runsdk.hta:364:97    - Unknown word (Studio)      -- Install Blender 3D Studio </button>
runsdk.hta:365:37    - Unknown word (Radiant)     -- onClick="button_launchRadiant()"> <icon kind="install
runsdk.hta:365:86    - Unknown word (Dark)        -- install"></icon> Install Dark Radiant Mapper
runsdk.hta:365:91    - Unknown word (Radiant)     -- /icon> Install Dark Radiant Mapper         </button
runsdk.hta:365:99    - Unknown word (Mapper)      -- Install Dark Radiant Mapper </button>
runsdk.hta:366:37    - Unknown word (Radiant)     -- onClick="button_launchRadiant()"> <icon kind="install
runsdk.hta:366:86    - Unknown word (Krita)       -- install"></icon> Install Krita Image Editor
runsdk.hta:367:37    - Unknown word (Radiant)     -- onClick="button_launchRadiant()"> <icon kind="install
runsdk.hta:367:86    - Unknown word (Audacity)    -- install"></icon> Install Audacity Sound Editor
runsdk.hta:367:95    - Unknown word (Sound)       -- icon> Install Audacity Sound Editor       </button
runsdk.hta:368:31    - Unknown word (convert)     -- button onClick="button_convertWAV()" > <icon kind
runsdk.hta:368:61    - Unknown word (convert)     -- convertWAV()" > <icon kind="convert"></icon> Convert WAV
runsdk.hta:368:78    - Unknown word (Convert)     -- kind="convert"></icon> Convert WAV to OPUS Sounds
runsdk.hta:368:93    - Unknown word (OPUS)        -- icon> Convert WAV to OPUS Sounds          </button
runsdk.hta:368:98    - Unknown word (Sounds)      -- Convert WAV to OPUS Sounds </button>
runsdk.hta:369:31    - Unknown word (convert)     -- button onClick="button_convertTGA()" > <icon kind
runsdk.hta:369:61    - Unknown word (convert)     -- convertTGA()" > <icon kind="convert"></icon> Convert TGA
runsdk.hta:369:78    - Unknown word (Convert)     -- kind="convert"></icon> Convert TGA to KTX Textures
runsdk.hta:369:97    - Unknown word (Textures)    -- Convert TGA to KTX Textures </button>
runsdk.hta:36:13     - Unknown word (width)        -- min-width: 450px;
runsdk.hta:370:38    - Unknown word (GLSL)        -- onClick="button_compileGLSL()" > <icon kind="build
runsdk.hta:370:86    - Unknown word (GLSL)        -- build" ></icon> Compile GLSL to SPIR Shaders
runsdk.hta:370:94    - Unknown word (SPIR)        -- icon> Compile GLSL to SPIR Shaders        </button
runsdk.hta:370:99    - Unknown word (Shaders)     -- Compile GLSL to SPIR Shaders </button>
runsdk.hta:371:31    - Unknown word (decompile)   -- button onClick="button_decompileBSP()" > <icon kind=
runsdk.hta:371:78    - Unknown word (Decompile)   -- kind="destroy"></icon> Decompile Valve BSPs
runsdk.hta:371:88    - Unknown word (Valve)       -- destroy"></icon> Decompile Valve BSPs
runsdk.hta:372:31    - Unknown word (decompile)   -- button onClick="button_decompileMDL()" > <icon kind=
runsdk.hta:372:78    - Unknown word (Decompile)   -- kind="destroy"></icon> Decompile Valve MDLs
runsdk.hta:372:88    - Unknown word (Valve)       -- destroy"></icon> Decompile Valve MDLs
runsdk.hta:373:31    - Unknown word (decompile)   -- button onClick="button_decompileVTF()" > <icon kind=
runsdk.hta:373:78    - Unknown word (Decompile)   -- kind="destroy"></icon> Decompile Valve VTFs
runsdk.hta:373:88    - Unknown word (Valve)       -- destroy"></icon> Decompile Valve VTFs
runsdk.hta:375:5     - Unknown word (body)        -- </body>
runsdk.hta:37:9      - Unknown word (margin)       -- margin: 0px;
runsdk.hta:38:9      - Unknown word (background)   -- background: #383838;
runsdk.hta:39:9      - Unknown word (font)         -- font-family: arial;
runsdk.hta:41:19     - Unknown word (relative)     -- position: relative;
runsdk.hta:42:9      - Unknown word (cursor)       -- cursor: default;
runsdk.hta:47:9      - Unknown word (background)   -- background: #383838;
runsdk.hta:48:9      - Unknown word (color)        -- color: #f7941d;
runsdk.hta:49:9      - Unknown word (height)       -- height: 44px;
runsdk.hta:50:9      - Unknown word (padding)      -- padding-left: 8px;
runsdk.hta:51:9      - Unknown word (padding)      -- padding-right: 8px;
runsdk.hta:52:9      - Unknown word (border)       -- border-radius: 10px;
runsdk.hta:53:21     - Unknown word (solid)        -- border: 2px solid rgb(247,148,29);
runsdk.hta:53:9      - Unknown word (border)       -- border: 2px solid rgb(247,
runsdk.hta:54:9      - Unknown word (font)         -- font-size: 14px;
runsdk.hta:58:9      - Unknown word (background)   -- background: #f7941d;
runsdk.hta:59:21     - Unknown word (solid)        -- border: 2px solid rgb(247,148,29);
runsdk.hta:59:9      - Unknown word (border)       -- border: 2px solid rgb(247,
runsdk.hta:5:52      - Unknown word (Copyright)  -- Copyright (C) 2016 Justin Squirek
runsdk.hta:5:71      - Unknown word (Justin)     -- Copyright (C) 2016 Justin Squirek
runsdk.hta:5:78      - Unknown word (Squirek)    -- Copyright (C) 2016 Justin Squirek
runsdk.hta:60:9      - Unknown word (color)        -- color: #383838;
runsdk.hta:63:10     - Unknown word (Icons)        -- /* Icons */
runsdk.hta:64:8      - Unknown word (icon)         -- .icon {
runsdk.hta:65:19     - Unknown word (relative)     -- position: relative;
runsdk.hta:66:9      - Unknown word (margin)       -- margin: auto;
runsdk.hta:67:25     - Unknown word (middle)       -- vertical-align: middle;
runsdk.hta:67:9      - Unknown word (vertical)     -- vertical-align: middle;
runsdk.hta:72:19     - Unknown word (relative)     -- position: relative;
runsdk.hta:73:9      - Unknown word (height)       -- height: 80px;
runsdk.hta:74:9      - Unknown word (width)        -- width: calc(100% - 16px);
runsdk.hta:76:9      - Unknown word (padding)      -- padding-top: 8px;
runsdk.hta:77:9      - Unknown word (padding)      -- padding-right: 8px;
runsdk.hta:78:9      - Unknown word (padding)      -- padding-left: 8px;
runsdk.hta:7:36      - Unknown word (redistribute) -- free software: you can redistribute it and/or modify it
runsdk.hta:81:19     - Unknown word (relative)     -- position: relative;
runsdk.hta:83:9      - Unknown word (font)         -- font-size: 10px;
runsdk.hta:84:9      - Unknown word (color)        -- color: #f7941d;
runsdk.hta:87:9      - Unknown word (cursor)       -- cursor: default;
runsdk.hta:8:36      - Unknown word (either)       -- Software Foundation, either version 3 of the License
runsdk.hta:8:76      - Unknown word (your)         -- the License, or (at your option) any later version
runsdk.hta:8:93      - Unknown word (later)        -- at your option) any later version.
runsdk.hta:90:19     - Unknown word (relative)     -- position: relative;
runsdk.hta:94:9      - Unknown word (width)        -- width: 206px;
runsdk.hta:95:9      - Unknown word (height)       -- height: 80px;
runsdk.hta:96:9      - Unknown word (fill)         -- fill: #f7941d;
